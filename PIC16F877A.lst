

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jun 23 01:03:36 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text22_split_1,local,class=CODE,merge=1,delta=2
    56                           	psect	text22_split_2,local,class=CODE,merge=1,delta=2
    57                           	psect	text22_split_3,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000D                     	;# 
   373  000E                     	;# 
   374  000E                     	;# 
   375  000F                     	;# 
   376  0010                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0013                     	;# 
   380  0014                     	;# 
   381  0015                     	;# 
   382  0015                     	;# 
   383  0016                     	;# 
   384  0017                     	;# 
   385  0018                     	;# 
   386  0019                     	;# 
   387  001A                     	;# 
   388  001B                     	;# 
   389  001B                     	;# 
   390  001C                     	;# 
   391  001D                     	;# 
   392  001E                     	;# 
   393  001F                     	;# 
   394  0081                     	;# 
   395  0085                     	;# 
   396  0086                     	;# 
   397  0087                     	;# 
   398  0088                     	;# 
   399  0089                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  0091                     	;# 
   404  0092                     	;# 
   405  0093                     	;# 
   406  0094                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009C                     	;# 
   410  009D                     	;# 
   411  009E                     	;# 
   412  009F                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  010F                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000D                     	;# 
   433  000E                     	;# 
   434  000E                     	;# 
   435  000F                     	;# 
   436  0010                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0014                     	;# 
   441  0015                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001D                     	;# 
   452  001E                     	;# 
   453  001F                     	;# 
   454  0081                     	;# 
   455  0085                     	;# 
   456  0086                     	;# 
   457  0087                     	;# 
   458  0088                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0094                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  009F                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000E                     	;# 
   495  000F                     	;# 
   496  0010                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0013                     	;# 
   500  0014                     	;# 
   501  0015                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001D                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  0081                     	;# 
   515  0085                     	;# 
   516  0086                     	;# 
   517  0087                     	;# 
   518  0088                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0098                     	;# 
   528  0099                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  018C                     	;# 
   538  018D                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000D                     	;# 
   553  000E                     	;# 
   554  000E                     	;# 
   555  000F                     	;# 
   556  0010                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001D                     	;# 
   572  001E                     	;# 
   573  001F                     	;# 
   574  0081                     	;# 
   575  0085                     	;# 
   576  0086                     	;# 
   577  0087                     	;# 
   578  0088                     	;# 
   579  0089                     	;# 
   580  008C                     	;# 
   581  008D                     	;# 
   582  008E                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009C                     	;# 
   590  009D                     	;# 
   591  009E                     	;# 
   592  009F                     	;# 
   593  010C                     	;# 
   594  010D                     	;# 
   595  010E                     	;# 
   596  010F                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599                           
   600                           	psect	idataBANK1
   601  1289                     __pidataBANK1:	
   602                           
   603                           ;initializer for _pas_cooler
   604  1289  3407               	retlw	7
   605  128A  3400               	retlw	0
   606                           
   607                           ;initializer for _pwm
   608  128B  3401               	retlw	1
   609  128C  3400               	retlw	0
   610                           
   611                           ;initializer for _cruzeiroSet
   612  128D  344E               	retlw	78
   613  000E                     _TMR1	set	14
   614  001F                     _ADCON0bits	set	31
   615  001E                     _ADRESH	set	30
   616  0017                     _CCP1CON	set	23
   617  0017                     _CCP1CONbits	set	23
   618  001D                     _CCP2CON	set	29
   619  001D                     _CCP2CONbits	set	29
   620  0015                     _CCPR1L	set	21
   621  001B                     _CCPR2L	set	27
   622  000B                     _INTCONbits	set	11
   623  000C                     _PIR1bits	set	12
   624  000D                     _PIR2bits	set	13
   625  0005                     _PORTA	set	5
   626  0006                     _PORTB	set	6
   627  0006                     _PORTBbits	set	6
   628  0007                     _PORTC	set	7
   629  0008                     _PORTD	set	8
   630  0009                     _PORTE	set	9
   631  0009                     _PORTEbits	set	9
   632  001A                     _RCREG	set	26
   633  0018                     _RCSTAbits	set	24
   634  0013                     _SSPBUF	set	19
   635  0014                     _SSPCONbits	set	20
   636  0010                     _T1CON	set	16
   637  0010                     _T1CONbits	set	16
   638  0012                     _T2CONbits	set	18
   639  0001                     _TMR0	set	1
   640  000F                     _TMR1H	set	15
   641  000E                     _TMR1L	set	14
   642  0019                     _TXREG	set	25
   643  00C1                     _OERR	set	193
   644  009F                     _ADCON1bits	set	159
   645  009E                     _ADRESL	set	158
   646  0081                     _OPTION_REGbits	set	129
   647  008C                     _PIE1bits	set	140
   648  008D                     _PIE2bits	set	141
   649  0092                     _PR2	set	146
   650  0099                     _SPBRG	set	153
   651  0093                     _SSPADD	set	147
   652  0091                     _SSPCON2	set	145
   653  0091                     _SSPCON2bits	set	145
   654  0094                     _SSPSTATbits	set	148
   655  0085                     _TRISA	set	133
   656  0086                     _TRISB	set	134
   657  0087                     _TRISC	set	135
   658  0088                     _TRISD	set	136
   659  0089                     _TRISE	set	137
   660  0098                     _TXSTAbits	set	152
   661  010D                     _EEADR	set	269
   662  010C                     _EEDATA	set	268
   663  018C                     _EECON1bits	set	396
   664  018D                     _EECON2	set	397
   665                           
   666                           	psect	strings
   667  1000                     __pstrings:	
   668  1000                     stringtab:	
   669  1000                     __stringtab:	
   670                           
   671                           ;	String table - string pointers are 1 byte each
   672  1000  1BFF               	btfsc	btemp+1,7
   673  1001  280A               	ljmp	stringcode
   674  1002  1383               	bcf	3,7
   675  1003  187F               	btfsc	btemp+1,0
   676  1004  1783               	bsf	3,7
   677  1005  0800               	movf	0,w
   678  1006  0A84               	incf	4,f
   679  1007  1903               	skipnz
   680  1008  0AFF               	incf	btemp+1,f
   681  1009  0008               	return
   682  100A                     stringcode:	
   683  100A                     stringdir:	
   684  100A  3010               	movlw	high stringdir
   685  100B  008A               	movwf	10
   686  100C  0804               	movf	4,w
   687  100D  0A84               	incf	4,f
   688  100E  0782               	addwf	2,f
   689  100F                     __stringbase:	
   690  100F  3400               	retlw	0
   691  1010                     __end_of__stringtab:	
   692  1010                     __stringdata:	
   693  1010                     STR_4:	
   694  1010  340A               	retlw	10
   695  1011  340D               	retlw	13
   696  1012  3420               	retlw	32	;' '
   697  1013  342D               	retlw	45	;'-'
   698  1014  342D               	retlw	45	;'-'
   699  1015  342D               	retlw	45	;'-'
   700  1016  342D               	retlw	45	;'-'
   701  1017  342D               	retlw	45	;'-'
   702  1018  342D               	retlw	45	;'-'
   703  1019  342D               	retlw	45	;'-'
   704  101A  3420               	retlw	32	;' '
   705  101B  3445               	retlw	69	;'E'
   706  101C  3453               	retlw	83	;'S'
   707  101D  3454               	retlw	84	;'T'
   708  101E  344F               	retlw	79	;'O'
   709  101F  3455               	retlw	85	;'U'
   710  1020  3452               	retlw	82	;'R'
   711  1021  344F               	retlw	79	;'O'
   712  1022  3420               	retlw	32	;' '
   713  1023  3444               	retlw	68	;'D'
   714  1024  3445               	retlw	69	;'E'
   715  1025  3420               	retlw	32	;' '
   716  1026  3450               	retlw	80	;'P'
   717  1027  3449               	retlw	73	;'I'
   718  1028  344C               	retlw	76	;'L'
   719  1029  3448               	retlw	72	;'H'
   720  102A  3441               	retlw	65	;'A'
   721  102B  3420               	retlw	32	;' '
   722  102C  342D               	retlw	45	;'-'
   723  102D  342D               	retlw	45	;'-'
   724  102E  342D               	retlw	45	;'-'
   725  102F  342D               	retlw	45	;'-'
   726  1030  342D               	retlw	45	;'-'
   727  1031  342D               	retlw	45	;'-'
   728  1032  342D               	retlw	45	;'-'
   729  1033  3420               	retlw	32	;' '
   730  1034  340A               	retlw	10
   731  1035  340D               	retlw	13
   732  1036  3420               	retlw	32	;' '
   733  1037  3400               	retlw	0
   734  1038                     STR_2:	
   735  1038  3449               	retlw	73	;'I'
   736  1039  346E               	retlw	110	;'n'
   737  103A  3469               	retlw	105	;'i'
   738  103B  3463               	retlw	99	;'c'
   739  103C  3469               	retlw	105	;'i'
   740  103D  3461               	retlw	97	;'a'
   741  103E  346C               	retlw	108	;'l'
   742  103F  3469               	retlw	105	;'i'
   743  1040  347A               	retlw	122	;'z'
   744  1041  3461               	retlw	97	;'a'
   745  1042  346E               	retlw	110	;'n'
   746  1043  3464               	retlw	100	;'d'
   747  1044  346F               	retlw	111	;'o'
   748  1045  342E               	retlw	46	;'.'
   749  1046  342E               	retlw	46	;'.'
   750  1047  342E               	retlw	46	;'.'
   751  1048  3400               	retlw	0
   752  1049                     STR_1:	
   753  1049  340A               	retlw	10
   754  104A  340D               	retlw	13
   755  104B  3466               	retlw	102	;'f'
   756  104C  3472               	retlw	114	;'r'
   757  104D  3465               	retlw	101	;'e'
   758  104E  3469               	retlw	105	;'i'
   759  104F  346F               	retlw	111	;'o'
   760  1050  340A               	retlw	10
   761  1051  340D               	retlw	13
   762  1052  3400               	retlw	0
   763  1053                     STR_3:	
   764  1053  346B               	retlw	107	;'k'
   765  1054  346D               	retlw	109	;'m'
   766  1055  3448               	retlw	72	;'H'
   767  1056  343A               	retlw	58	;':'
   768  1057  3420               	retlw	32	;' '
   769  1058  3400               	retlw	0
   770  1059                     __end_of__stringdata:	
   771                           
   772                           ; #config settings
   773  0000                     
   774                           	psect	cinit
   775  0015                     start_initialization:	
   776  0015                     __initialization:	
   777                           
   778                           ; Clear objects allocated to BANK0
   779  0015  01E9               	clrf	__pbssBANK0& (0+127)
   780  0016  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   781  0017  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   782  0018  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   783  0019  01ED               	clrf	(__pbssBANK0+4)& (0+127)
   784  001A  01EE               	clrf	(__pbssBANK0+5)& (0+127)
   785                           
   786                           ; Clear objects allocated to BANK1
   787  001B  1383               	bcf	3,7	;select IRP bank0
   788  001C  30C2               	movlw	low __pbssBANK1
   789  001D  0084               	movwf	4
   790  001E  30DE               	movlw	low (__pbssBANK1+28)
   791  001F  160A  118A  22A4  120A  118A  	fcall	clear_ram0
   792                           
   793                           ; Clear objects allocated to BANK3
   794  0024  1783               	bsf	3,7	;select IRP bank2
   795  0025  3090               	movlw	low __pbssBANK3
   796  0026  0084               	movwf	4
   797  0027  30B3               	movlw	low (__pbssBANK3+35)
   798  0028  160A  118A  22A4  120A  118A  	fcall	clear_ram0
   799                           
   800                           ; Initialize objects allocated to BANK1
   801  002D  1683               	bsf	3,5	;RP0=1, select bank1
   802  002E  1303               	bcf	3,6	;RP1=0, select bank1
   803  002F  160A  118A  2289  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   804  0034  00DE               	movwf	__pdataBANK1& (0+127)
   805  0035  160A  118A  228A  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   806  003A  00DF               	movwf	(__pdataBANK1+1)& (0+127)
   807  003B  160A  118A  228B  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   808  0040  00E0               	movwf	(__pdataBANK1+2)& (0+127)
   809  0041  160A  118A  228C  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   810  0046  00E1               	movwf	(__pdataBANK1+3)& (0+127)
   811  0047  160A  118A  228D   	fcall	__pidataBANK1+4	;fetch initializer
   812  004A  00E2               	movwf	(__pdataBANK1+4)& (0+127)
   813  004B                     end_of_initialization:	
   814                           ;End of C runtime variable initialization code
   815                           
   816  004B                     __end_of__initialization:	
   817  004B  0183               	clrf	3
   818  004C  120A  158A  2B4A   	ljmp	_main	;jump to C main() function
   819                           
   820                           	psect	bssBANK0
   821  0069                     __pbssBANK0:	
   822  0069                     _ADCResult:	
   823  0069                     	ds	2
   824  006B                     _status:	
   825  006B                     	ds	2
   826  006D                     _x:	
   827  006D                     	ds	2
   828                           
   829                           	psect	bssBANK1
   830  00C2                     __pbssBANK1:	
   831  00C2                     _fitemp:	
   832  00C2                     	ds	3
   833  00C5                     _rulegrande:	
   834  00C5                     	ds	3
   835  00C8                     _rulemedio:	
   836  00C8                     	ds	3
   837  00CB                     _rulepequeno:	
   838  00CB                     	ds	3
   839  00CE                     _antigoUI:	
   840  00CE                     	ds	2
   841  00D0                     _contagens_tm0:	
   842  00D0                     	ds	2
   843  00D2                     _cruzeiroVel:	
   844  00D2                     	ds	2
   845  00D4                     _deltaV:	
   846  00D4                     	ds	2
   847  00D6                     _pulsos:	
   848  00D6                     	ds	2
   849  00D8                     _rpm:	
   850  00D8                     	ds	2
   851  00DA                     _setpointUI:	
   852  00DA                     	ds	2
   853  00DC                     _y:	
   854  00DC                     	ds	2
   855                           
   856                           	psect	dataBANK1
   857  00DE                     __pdataBANK1:	
   858  00DE                     _pas_cooler:	
   859  00DE                     	ds	2
   860  00E0                     _pwm:	
   861  00E0                     	ds	2
   862  00E2                     _cruzeiroSet:	
   863  00E2                     	ds	1
   864                           
   865                           	psect	bssBANK3
   866  0190                     __pbssBANK3:	
   867  0190                     _buffer:	
   868  0190                     	ds	13
   869  019D                     _antigo:	
   870  019D                     	ds	3
   871  01A0                     _ativa_fan:	
   872  01A0                     	ds	3
   873  01A3                     _sum:	
   874  01A3                     	ds	3
   875  01A6                     _total_area:	
   876  01A6                     	ds	3
   877  01A9                     _display_rpm:	
   878  01A9                     	ds	10
   879                           
   880                           	psect	clrtext
   881  12A4                     clear_ram0:	
   882                           ;	Called with FSR containing the base address, and
   883                           ;	W with the last address+1
   884                           
   885  12A4  0064               	clrwdt	;clear the watchdog before getting into this loop
   886  12A5                     clrloop0:	
   887  12A5  0180               	clrf	0	;clear RAM location pointed to by FSR
   888  12A6  0A84               	incf	4,f	;increment pointer
   889  12A7  0604               	xorwf	4,w	;XOR with final address
   890  12A8  1903               	btfsc	3,2	;have we reached the end yet?
   891  12A9  3400               	retlw	0	;all done for this memory range, return
   892  12AA  0604               	xorwf	4,w	;XOR again to restore value
   893  12AB  2AA5               	goto	clrloop0	;do the next byte
   894                           
   895                           	psect	cstackBANK3
   896  01B3                     __pcstackBANK3:	
   897  01B3                     ?_PWM_DutyCycle2:	
   898  01B3                     ??_TIMER0_Set:	
   899                           ; 0 bytes @ 0x0
   900                           
   901  01B3                     ??_TIMER0_Init:	
   902                           ; 0 bytes @ 0x0
   903                           
   904  01B3                     ??_ADC_Init:	
   905                           ; 0 bytes @ 0x0
   906                           
   907  01B3                     ??_PWM_Init:	
   908                           ; 0 bytes @ 0x0
   909                           
   910  01B3                     ?_LCD_Cursor:	
   911                           ; 0 bytes @ 0x0
   912                           
   913  01B3                     ?_PWM_DutyCycle1:	
   914                           ; 0 bytes @ 0x0
   915                           
   916  01B3                     ??_LCD_WriteCmd:	
   917                           ; 0 bytes @ 0x0
   918                           
   919  01B3                     ??_LCD_WriteData:	
   920                           ; 0 bytes @ 0x0
   921                           
   922  01B3                     ?___aldiv:	
   923                           ; 0 bytes @ 0x0
   924                           
   925  01B3                     TIMER0_Set@contagens:	
   926                           ; 4 bytes @ 0x0
   927                           
   928  01B3                     LCD_Cursor@Col:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  01B3                     PWM_DutyCycle1@valor:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  01B3                     PWM_DutyCycle2@valor:	
   935                           ; 2 bytes @ 0x0
   936                           
   937  01B3                     ___aldiv@divisor:	
   938                           ; 2 bytes @ 0x0
   939                           
   940                           
   941                           ; 4 bytes @ 0x0
   942  01B3                     	ds	1
   943  01B4                     ??_LCD_Cursor:	
   944  01B4                     LCD_WriteCmd@Byte:	
   945                           ; 0 bytes @ 0x1
   946                           
   947  01B4                     LCD_WriteData@Byte:	
   948                           ; 1 bytes @ 0x1
   949                           
   950                           
   951                           ; 1 bytes @ 0x1
   952  01B4                     	ds	1
   953  01B5                     ??_PWM_DutyCycle2:	
   954  01B5                     ??_LCD_Init:	
   955                           ; 0 bytes @ 0x2
   956                           
   957  01B5                     ?_LCD_WriteString:	
   958                           ; 0 bytes @ 0x2
   959                           
   960  01B5                     ??_PWM_DutyCycle1:	
   961                           ; 0 bytes @ 0x2
   962                           
   963  01B5                     ??_LCD_Clear:	
   964                           ; 0 bytes @ 0x2
   965                           
   966  01B5                     LCD_Cursor@Row:	
   967                           ; 0 bytes @ 0x2
   968                           
   969  01B5                     LCD_WriteString@Str:	
   970                           ; 1 bytes @ 0x2
   971                           
   972                           
   973                           ; 2 bytes @ 0x2
   974  01B5                     	ds	2
   975  01B7                     ??_LCD_WriteString:	
   976  01B7                     ___aldiv@dividend:	
   977                           ; 0 bytes @ 0x4
   978                           
   979                           
   980                           ; 4 bytes @ 0x4
   981  01B7                     	ds	4
   982  01BB                     ??___aldiv:	
   983                           
   984                           ; 0 bytes @ 0x8
   985  01BB                     	ds	1
   986  01BC                     ___aldiv@counter:	
   987                           
   988                           ; 1 bytes @ 0x9
   989  01BC                     	ds	1
   990  01BD                     ___aldiv@sign:	
   991                           
   992                           ; 1 bytes @ 0xA
   993  01BD                     	ds	1
   994  01BE                     ___aldiv@quotient:	
   995                           
   996                           ; 4 bytes @ 0xB
   997  01BE                     	ds	4
   998  01C2                     ?_USART_Init:	
   999  01C2                     USART_Init@BaudRate:	
  1000                           ; 0 bytes @ 0xF
  1001                           
  1002                           
  1003                           ; 4 bytes @ 0xF
  1004  01C2                     	ds	4
  1005  01C6                     ??_USART_Init:	
  1006                           
  1007                           ; 0 bytes @ 0x13
  1008  01C6                     	ds	4
  1009  01CA                     ??_main:	
  1010                           
  1011                           ; 0 bytes @ 0x17
  1012  01CA                     	ds	3
  1013                           
  1014                           	psect	cstackBANK1
  1015  00A0                     __pcstackBANK1:	
  1016  00A0                     _Fuzzy$1689:	
  1017                           
  1018                           ; 3 bytes @ 0x0
  1019  00A0                     	ds	3
  1020  00A3                     _Fuzzy$1690:	
  1021                           
  1022                           ; 2 bytes @ 0x3
  1023  00A3                     	ds	2
  1024  00A5                     Fuzzy@reajuste:	
  1025                           
  1026                           ; 3 bytes @ 0x5
  1027  00A5                     	ds	3
  1028  00A8                     _Fuzzy$249:	
  1029                           
  1030                           ; 2 bytes @ 0x8
  1031  00A8                     	ds	2
  1032  00AA                     Fuzzy@a:	
  1033                           
  1034                           ; 2 bytes @ 0xA
  1035  00AA                     	ds	2
  1036  00AC                     Fuzzy@a_242:	
  1037                           
  1038                           ; 2 bytes @ 0xC
  1039  00AC                     	ds	2
  1040  00AE                     Fuzzy@a_243:	
  1041                           
  1042                           ; 2 bytes @ 0xE
  1043  00AE                     	ds	2
  1044  00B0                     Fuzzy@a_244:	
  1045                           
  1046                           ; 2 bytes @ 0x10
  1047  00B0                     	ds	2
  1048  00B2                     Fuzzy@delta:	
  1049                           
  1050                           ; 2 bytes @ 0x12
  1051  00B2                     	ds	2
  1052  00B4                     Fuzzy@soma:	
  1053                           
  1054                           ; 3 bytes @ 0x14
  1055  00B4                     	ds	3
  1056  00B7                     Fuzzy@total_area:	
  1057                           
  1058                           ; 3 bytes @ 0x17
  1059  00B7                     	ds	3
  1060  00BA                     Fuzzy@a_247:	
  1061                           
  1062                           ; 2 bytes @ 0x1A
  1063  00BA                     	ds	2
  1064  00BC                     Fuzzy@rule:	
  1065                           
  1066                           ; 3 bytes @ 0x1C
  1067  00BC                     	ds	3
  1068  00BF                     Fuzzy@x:	
  1069                           
  1070                           ; 3 bytes @ 0x1F
  1071  00BF                     	ds	3
  1072                           
  1073                           	psect	cstackCOMMON
  1074  0070                     __pcstackCOMMON:	
  1075  0070                     ?_USART_WriteChar:	
  1076  0070                     ??_USART_WriteChar:	
  1077                           ; 0 bytes @ 0x0
  1078                           
  1079  0070                     ?_USART_WriteString:	
  1080                           ; 0 bytes @ 0x0
  1081                           
  1082  0070                     ?_TIMER0_Set:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  0070                     ?_TIMER0_Init:	
  1086                           ; 0 bytes @ 0x0
  1087                           
  1088  0070                     ?_ADC_Init:	
  1089                           ; 0 bytes @ 0x0
  1090                           
  1091  0070                     ?_PWM_Init:	
  1092                           ; 0 bytes @ 0x0
  1093                           
  1094  0070                     ?_LCD_Init:	
  1095                           ; 0 bytes @ 0x0
  1096                           
  1097  0070                     ?_LCD_Clear:	
  1098                           ; 0 bytes @ 0x0
  1099                           
  1100  0070                     ?_send:	
  1101                           ; 0 bytes @ 0x0
  1102                           
  1103  0070                     ?_Fuzzy:	
  1104                           ; 0 bytes @ 0x0
  1105                           
  1106  0070                     ?_ISR:	
  1107                           ; 0 bytes @ 0x0
  1108                           
  1109  0070                     ?_main:	
  1110                           ; 0 bytes @ 0x0
  1111                           
  1112  0070                     ?_LCD_WriteCmd:	
  1113                           ; 0 bytes @ 0x0
  1114                           
  1115  0070                     ?_LCD_WriteData:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0070                     ?___ftge:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0070                     ?i1_TIMER0_Set:	
  1122                           ; 1 bit 
  1123                           
  1124  0070                     ??i1_TIMER0_Set:	
  1125                           ; 0 bytes @ 0x0
  1126                           
  1127  0070                     ?i1_PWM_DutyCycle2:	
  1128                           ; 0 bytes @ 0x0
  1129                           
  1130  0070                     ?_USART_ReceiveChar:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0070                     ?_abs:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?___lwdiv:	
  1137                           ; 2 bytes @ 0x0
  1138                           
  1139  0070                     ?___ftpack:	
  1140                           ; 2 bytes @ 0x0
  1141                           
  1142  0070                     USART_WriteChar@byte:	
  1143                           ; 3 bytes @ 0x0
  1144                           
  1145  0070                     i1TIMER0_Set@contagens:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     abs@a:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ___lwdiv@divisor:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154  0070                     i1PWM_DutyCycle2@valor:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157  0070                     ___ftpack@arg:	
  1158                           ; 2 bytes @ 0x0
  1159                           
  1160  0070                     ___ftge@ff1:	
  1161                           ; 3 bytes @ 0x0
  1162                           
  1163                           
  1164                           ; 3 bytes @ 0x0
  1165  0070                     	ds	1
  1166  0071                     ??_USART_WriteString:	
  1167  0071                     ??_send:	
  1168                           ; 0 bytes @ 0x1
  1169                           
  1170                           
  1171                           ; 0 bytes @ 0x1
  1172  0071                     	ds	1
  1173  0072                     ??_abs:	
  1174  0072                     ??i1_PWM_DutyCycle2:	
  1175                           ; 0 bytes @ 0x2
  1176                           
  1177  0072                     send@checksum:	
  1178                           ; 0 bytes @ 0x2
  1179                           
  1180  0072                     USART_WriteString@str:	
  1181                           ; 1 bytes @ 0x2
  1182                           
  1183  0072                     ___lwdiv@dividend:	
  1184                           ; 1 bytes @ 0x2
  1185                           
  1186                           
  1187                           ; 2 bytes @ 0x2
  1188  0072                     	ds	1
  1189  0073                     ??_USART_ReceiveChar:	
  1190  0073                     send@index:	
  1191                           ; 0 bytes @ 0x3
  1192                           
  1193  0073                     ___ftpack@exp:	
  1194                           ; 1 bytes @ 0x3
  1195                           
  1196  0073                     ___ftge@ff2:	
  1197                           ; 1 bytes @ 0x3
  1198                           
  1199                           
  1200                           ; 3 bytes @ 0x3
  1201  0073                     	ds	1
  1202  0074                     ??___lwdiv:	
  1203  0074                     USART_ReceiveChar@byte:	
  1204                           ; 0 bytes @ 0x4
  1205                           
  1206  0074                     ___ftpack@sign:	
  1207                           ; 1 bytes @ 0x4
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0x4
  1211  0074                     	ds	1
  1212  0075                     ??___ftpack:	
  1213  0075                     ___lwdiv@quotient:	
  1214                           ; 0 bytes @ 0x5
  1215                           
  1216                           
  1217                           ; 2 bytes @ 0x5
  1218  0075                     	ds	1
  1219  0076                     ??___ftge:	
  1220                           
  1221                           ; 0 bytes @ 0x6
  1222  0076                     	ds	1
  1223  0077                     ___lwdiv@counter:	
  1224                           
  1225                           ; 1 bytes @ 0x7
  1226  0077                     	ds	1
  1227  0078                     ?___awtoft:	
  1228  0078                     ?___lwtoft:	
  1229                           ; 3 bytes @ 0x8
  1230                           
  1231  0078                     ___awtoft@c:	
  1232                           ; 3 bytes @ 0x8
  1233                           
  1234  0078                     ___lwtoft@c:	
  1235                           ; 2 bytes @ 0x8
  1236                           
  1237                           
  1238                           ; 2 bytes @ 0x8
  1239  0078                     	ds	3
  1240  007B                     ??___awtoft:	
  1241  007B                     ??___lwtoft:	
  1242                           ; 0 bytes @ 0xB
  1243                           
  1244                           
  1245                           ; 0 bytes @ 0xB
  1246  007B                     	ds	2
  1247  007D                     ___awtoft@sign:	
  1248                           
  1249                           ; 1 bytes @ 0xD
  1250  007D                     	ds	1
  1251  007E                     ??_trapmf:	
  1252  007E                     ??_maximo:	
  1253                           ; 0 bytes @ 0xE
  1254                           
  1255  007E                     ??_minimo:	
  1256                           ; 0 bytes @ 0xE
  1257                           
  1258  007E                     ??___wmul:	
  1259                           ; 0 bytes @ 0xE
  1260                           
  1261  007E                     ??___ftneg:	
  1262                           ; 0 bytes @ 0xE
  1263                           
  1264                           
  1265                           	psect	cstackBANK0
  1266  0020                     __pcstackBANK0:	
  1267                           ; 0 bytes @ 0xE
  1268                           
  1269  0020                     ?_minimo:	
  1270  0020                     ?___ftneg:	
  1271                           ; 3 bytes @ 0x0
  1272                           
  1273  0020                     minimo@a:	
  1274                           ; 3 bytes @ 0x0
  1275                           
  1276  0020                     ___ftneg@f1:	
  1277                           ; 3 bytes @ 0x0
  1278                           
  1279                           
  1280                           ; 3 bytes @ 0x0
  1281  0020                     	ds	3
  1282  0023                     ?___ftadd:	
  1283  0023                     minimo@b:	
  1284                           ; 3 bytes @ 0x3
  1285                           
  1286  0023                     ___ftadd@f1:	
  1287                           ; 3 bytes @ 0x3
  1288                           
  1289                           
  1290                           ; 3 bytes @ 0x3
  1291  0023                     	ds	3
  1292  0026                     ?_maximo:	
  1293  0026                     maximo@a:	
  1294                           ; 3 bytes @ 0x6
  1295                           
  1296  0026                     ___ftadd@f2:	
  1297                           ; 3 bytes @ 0x6
  1298                           
  1299                           
  1300                           ; 3 bytes @ 0x6
  1301  0026                     	ds	3
  1302  0029                     ??___ftadd:	
  1303  0029                     maximo@b:	
  1304                           ; 0 bytes @ 0x9
  1305                           
  1306                           
  1307                           ; 3 bytes @ 0x9
  1308  0029                     	ds	3
  1309  002C                     ?___fttol:	
  1310  002C                     ___fttol@f1:	
  1311                           ; 4 bytes @ 0xC
  1312                           
  1313                           
  1314                           ; 3 bytes @ 0xC
  1315  002C                     	ds	1
  1316  002D                     ___ftadd@sign:	
  1317                           
  1318                           ; 1 bytes @ 0xD
  1319  002D                     	ds	1
  1320  002E                     ___ftadd@exp2:	
  1321                           
  1322                           ; 1 bytes @ 0xE
  1323  002E                     	ds	1
  1324  002F                     ___ftadd@exp1:	
  1325                           
  1326                           ; 1 bytes @ 0xF
  1327  002F                     	ds	1
  1328  0030                     ??___fttol:	
  1329  0030                     ?___ftdiv:	
  1330                           ; 0 bytes @ 0x10
  1331                           
  1332  0030                     ___ftdiv@f2:	
  1333                           ; 3 bytes @ 0x10
  1334                           
  1335                           
  1336                           ; 3 bytes @ 0x10
  1337  0030                     	ds	3
  1338  0033                     ___ftdiv@f1:	
  1339                           
  1340                           ; 3 bytes @ 0x13
  1341  0033                     	ds	1
  1342  0034                     ___fttol@sign1:	
  1343                           
  1344                           ; 1 bytes @ 0x14
  1345  0034                     	ds	1
  1346  0035                     ___fttol@lval:	
  1347                           
  1348                           ; 4 bytes @ 0x15
  1349  0035                     	ds	1
  1350  0036                     ??___ftdiv:	
  1351                           
  1352                           ; 0 bytes @ 0x16
  1353  0036                     	ds	3
  1354  0039                     ___fttol@exp1:	
  1355                           
  1356                           ; 1 bytes @ 0x19
  1357  0039                     	ds	1
  1358  003A                     ?___wmul:	
  1359  003A                     ___ftdiv@cntr:	
  1360                           ; 2 bytes @ 0x1A
  1361                           
  1362  003A                     ___wmul@multiplier:	
  1363                           ; 1 bytes @ 0x1A
  1364                           
  1365                           
  1366                           ; 2 bytes @ 0x1A
  1367  003A                     	ds	1
  1368  003B                     ___ftdiv@f3:	
  1369                           
  1370                           ; 3 bytes @ 0x1B
  1371  003B                     	ds	1
  1372  003C                     ___wmul@multiplicand:	
  1373                           
  1374                           ; 2 bytes @ 0x1C
  1375  003C                     	ds	2
  1376  003E                     ___ftdiv@exp:	
  1377  003E                     ___wmul@product:	
  1378                           ; 1 bytes @ 0x1E
  1379                           
  1380                           
  1381                           ; 2 bytes @ 0x1E
  1382  003E                     	ds	1
  1383  003F                     ___ftdiv@sign:	
  1384                           
  1385                           ; 1 bytes @ 0x1F
  1386  003F                     	ds	1
  1387  0040                     ?_trapmf:	
  1388  0040                     trapmf@x:	
  1389                           ; 3 bytes @ 0x20
  1390                           
  1391                           
  1392                           ; 3 bytes @ 0x20
  1393  0040                     	ds	3
  1394  0043                     trapmf@a:	
  1395                           
  1396                           ; 3 bytes @ 0x23
  1397  0043                     	ds	3
  1398  0046                     trapmf@b:	
  1399                           
  1400                           ; 3 bytes @ 0x26
  1401  0046                     	ds	3
  1402  0049                     trapmf@c:	
  1403                           
  1404                           ; 3 bytes @ 0x29
  1405  0049                     	ds	3
  1406  004C                     trapmf@d:	
  1407                           
  1408                           ; 3 bytes @ 0x2C
  1409  004C                     	ds	3
  1410  004F                     trapmf@ua:	
  1411                           
  1412                           ; 3 bytes @ 0x2F
  1413  004F                     	ds	3
  1414  0052                     ?___ftmul:	
  1415  0052                     ___ftmul@f1:	
  1416                           ; 3 bytes @ 0x32
  1417                           
  1418                           
  1419                           ; 3 bytes @ 0x32
  1420  0052                     	ds	3
  1421  0055                     ___ftmul@f2:	
  1422                           
  1423                           ; 3 bytes @ 0x35
  1424  0055                     	ds	3
  1425  0058                     ??___ftmul:	
  1426                           
  1427                           ; 0 bytes @ 0x38
  1428  0058                     	ds	4
  1429  005C                     ___ftmul@exp:	
  1430                           
  1431                           ; 1 bytes @ 0x3C
  1432  005C                     	ds	1
  1433  005D                     ___ftmul@f3_as_product:	
  1434                           
  1435                           ; 3 bytes @ 0x3D
  1436  005D                     	ds	3
  1437  0060                     ___ftmul@cntr:	
  1438                           
  1439                           ; 1 bytes @ 0x40
  1440  0060                     	ds	1
  1441  0061                     ___ftmul@sign:	
  1442                           
  1443                           ; 1 bytes @ 0x41
  1444  0061                     	ds	1
  1445  0062                     ??_Fuzzy:	
  1446                           
  1447                           ; 0 bytes @ 0x42
  1448  0062                     	ds	2
  1449  0064                     ??_ISR:	
  1450                           
  1451                           ; 0 bytes @ 0x44
  1452  0064                     	ds	5
  1453                           
  1454                           	psect	maintext
  1455  0B4A                     __pmaintext:	
  1456 ;;
  1457 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1458 ;;
  1459 ;; *************** function _main *****************
  1460 ;; Defined at:
  1461 ;;		line 481 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;		None               void
  1468 ;; Registers used:
  1469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 17F/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0
  1477 ;;      Temps:          0       0       0       3       0
  1478 ;;      Totals:         0       0       0       3       0
  1479 ;;Total ram usage:        3 bytes
  1480 ;; Hardware stack levels required when called:    7
  1481 ;; This function calls:
  1482 ;;		_ADC_Init
  1483 ;;		_LCD_Clear
  1484 ;;		_LCD_Cursor
  1485 ;;		_LCD_Init
  1486 ;;		_LCD_WriteString
  1487 ;;		_PWM_DutyCycle1
  1488 ;;		_PWM_DutyCycle2
  1489 ;;		_PWM_Init
  1490 ;;		_TIMER0_Init
  1491 ;;		_TIMER0_Set
  1492 ;;		_USART_Init
  1493 ;; This function is called by:
  1494 ;;		Startup code after reset
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _main
  1500  0B4A                     _main:	
  1501                           
  1502                           ;main.c: 483: TRISA = 0b00000001;
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1506  0B4A  3001               	movlw	1
  1507  0B4B  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0B4C  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0B4D  0085               	movwf	5	;volatile
  1510                           
  1511                           ;main.c: 484: PORTA = 0b00000001;
  1512  0B4E  3001               	movlw	1
  1513  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0B51  0085               	movwf	5	;volatile
  1516                           
  1517                           ;main.c: 485: TRISB = 0b00000000;
  1518  0B52  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0B53  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0B54  0186               	clrf	6	;volatile
  1521                           
  1522                           ;main.c: 486: PORTB = 0b00000000;
  1523  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0B56  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0B57  0186               	clrf	6	;volatile
  1526                           
  1527                           ;main.c: 487: TRISC = 0b10000001;
  1528  0B58  3081               	movlw	129
  1529  0B59  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0B5A  1303               	bcf	3,6	;RP1=0, select bank1
  1531  0B5B  0087               	movwf	7	;volatile
  1532                           
  1533                           ;main.c: 488: PORTC = 0b11000000;
  1534  0B5C  30C0               	movlw	192
  1535  0B5D  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0B5E  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0B5F  0087               	movwf	7	;volatile
  1538                           
  1539                           ;main.c: 489: TRISD = 0b00000000;
  1540  0B60  1683               	bsf	3,5	;RP0=1, select bank1
  1541  0B61  1303               	bcf	3,6	;RP1=0, select bank1
  1542  0B62  0188               	clrf	8	;volatile
  1543                           
  1544                           ;main.c: 490: PORTD = 0b00000000;
  1545  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0B64  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0B65  0188               	clrf	8	;volatile
  1548                           
  1549                           ;main.c: 491: TRISE = 0b00000000;
  1550  0B66  1683               	bsf	3,5	;RP0=1, select bank1
  1551  0B67  1303               	bcf	3,6	;RP1=0, select bank1
  1552  0B68  0189               	clrf	9	;volatile
  1553                           
  1554                           ;main.c: 492: PORTE = 0b00000000;
  1555  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0B6B  0189               	clrf	9	;volatile
  1558                           
  1559                           ;main.c: 495: T1CON = 0x03;
  1560  0B6C  3003               	movlw	3
  1561  0B6D  0090               	movwf	16	;volatile
  1562                           
  1563                           ;main.c: 496: TMR1L = 0x00;
  1564  0B6E  018E               	clrf	14	;volatile
  1565                           
  1566                           ;main.c: 497: TMR1H = 0x00;
  1567  0B6F  018F               	clrf	15	;volatile
  1568                           
  1569                           ;main.c: 500: USART_Init(115200);
  1570  0B70  3000               	movlw	0
  1571  0B71  1683               	bsf	3,5	;RP0=1, select bank3
  1572  0B72  1703               	bsf	3,6	;RP1=1, select bank3
  1573  0B73  00C5               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1574  0B74  3001               	movlw	1
  1575  0B75  00C4               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1576  0B76  30C2               	movlw	194
  1577  0B77  00C3               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1578  0B78  3000               	movlw	0
  1579  0B79  00C2               	movwf	USART_Init@BaudRate^(0+384)
  1580  0B7A  160A  118A  24F1  120A  158A  	fcall	_USART_Init
  1581                           
  1582                           ;main.c: 501: TIMER0_Init();
  1583  0B7F  160A  118A  22B6  120A  158A  	fcall	_TIMER0_Init
  1584                           
  1585                           ;main.c: 502: ADC_Init();
  1586  0B84  160A  118A  22CF  120A  158A  	fcall	_ADC_Init
  1587                           
  1588                           ;main.c: 503: PWM_Init();
  1589  0B89  160A  118A  2410  120A  158A  	fcall	_PWM_Init
  1590                           
  1591                           ;main.c: 504: LCD_Init();
  1592  0B8E  160A  118A  2601  120A  158A  	fcall	_LCD_Init
  1593                           
  1594                           ;main.c: 507: INTCONbits.PEIE = 1;
  1595  0B93  170B               	bsf	11,6	;volatile
  1596                           
  1597                           ;main.c: 508: INTCONbits.GIE = 1;
  1598  0B94  178B               	bsf	11,7	;volatile
  1599                           
  1600                           ;main.c: 515: LCD_Init();
  1601  0B95  160A  118A  2601  120A  158A  	fcall	_LCD_Init
  1602                           
  1603                           ;main.c: 516: LCD_Cursor(0,0);
  1604  0B9A  1683               	bsf	3,5	;RP0=1, select bank3
  1605  0B9B  1703               	bsf	3,6	;RP1=1, select bank3
  1606  0B9C  01B3               	clrf	LCD_Cursor@Col^(0+384)
  1607  0B9D  3000               	movlw	0
  1608  0B9E  160A  118A  23AE  120A  158A  	fcall	_LCD_Cursor
  1609                           
  1610                           ;main.c: 517: LCD_WriteString("Inicializando...");
  1611  0BA3  3029               	movlw	low (STR_2-__stringbase)
  1612  0BA4  1683               	bsf	3,5	;RP0=1, select bank3
  1613  0BA5  1703               	bsf	3,6	;RP1=1, select bank3
  1614  0BA6  00B5               	movwf	LCD_WriteString@Str^(0+384)
  1615  0BA7  3080               	movlw	128
  1616  0BA8  00B6               	movwf	(LCD_WriteString@Str+1)^(0+384)
  1617  0BA9  160A  118A  2482  120A  158A  	fcall	_LCD_WriteString
  1618                           
  1619                           ;main.c: 520: PWM_DutyCycle1(0);
  1620  0BAE  3000               	movlw	0
  1621  0BAF  1683               	bsf	3,5	;RP0=1, select bank3
  1622  0BB0  1703               	bsf	3,6	;RP1=1, select bank3
  1623  0BB1  00B3               	movwf	PWM_DutyCycle1@valor^(0+384)
  1624  0BB2  3000               	movlw	0
  1625  0BB3  00B4               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1626  0BB4  160A  118A  23EF  120A  158A  	fcall	_PWM_DutyCycle1
  1627                           
  1628                           ;main.c: 521: PWM_DutyCycle2(0);
  1629  0BB9  3000               	movlw	0
  1630  0BBA  1683               	bsf	3,5	;RP0=1, select bank3
  1631  0BBB  1703               	bsf	3,6	;RP1=1, select bank3
  1632  0BBC  00B3               	movwf	PWM_DutyCycle2@valor^(0+384)
  1633  0BBD  3000               	movlw	0
  1634  0BBE  00B4               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1635  0BBF  120A  118A  27DE  120A  158A  	fcall	_PWM_DutyCycle2
  1636                           
  1637                           ;main.c: 524: TIMER0_Set(238);
  1638  0BC4  30EE               	movlw	238
  1639  0BC5  160A  118A  229C  120A  158A  	fcall	_TIMER0_Set
  1640                           
  1641                           ;main.c: 527: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1642  0BCA  3018               	movlw	24
  1643  0BCB  1683               	bsf	3,5	;RP0=1, select bank3
  1644  0BCC  1703               	bsf	3,6	;RP1=1, select bank3
  1645  0BCD  00CC               	movwf	(??_main^(0+384)+2)
  1646  0BCE  3061               	movlw	97
  1647  0BCF  00CB               	movwf	(??_main^(0+384)+1)
  1648  0BD0  306E               	movlw	110
  1649  0BD1  00CA               	movwf	??_main^(0+384)
  1650  0BD2                     u5717:	
  1651  0BD2  0BCA               	decfsz	??_main^(0+384),f
  1652  0BD3  2BD2               	goto	u5717
  1653  0BD4  0BCB               	decfsz	(??_main^(0+384)+1),f
  1654  0BD5  2BD2               	goto	u5717
  1655  0BD6  0BCC               	decfsz	(??_main^(0+384)+2),f
  1656  0BD7  2BD2               	goto	u5717
  1657  0BD8  0000               	nop
  1658  0BD9                     l3314:	
  1659                           ;main.c: 530: while(1)
  1660                           
  1661                           
  1662                           ;main.c: 531: {
  1663                           ;main.c: 537: LCD_Clear();
  1664  0BD9  160A  118A  2459  120A  158A  	fcall	_LCD_Clear
  1665                           
  1666                           ;main.c: 538: LCD_Cursor(0,0);
  1667  0BDE  1683               	bsf	3,5	;RP0=1, select bank3
  1668  0BDF  1703               	bsf	3,6	;RP1=1, select bank3
  1669  0BE0  01B3               	clrf	LCD_Cursor@Col^(0+384)
  1670  0BE1  3000               	movlw	0
  1671  0BE2  160A  118A  23AE  120A  158A  	fcall	_LCD_Cursor
  1672                           
  1673                           ;main.c: 539: LCD_WriteString("kmH: ");
  1674  0BE7  3044               	movlw	low (STR_3-__stringbase)
  1675  0BE8  1683               	bsf	3,5	;RP0=1, select bank3
  1676  0BE9  1703               	bsf	3,6	;RP1=1, select bank3
  1677  0BEA  00B5               	movwf	LCD_WriteString@Str^(0+384)
  1678  0BEB  3080               	movlw	128
  1679  0BEC  00B6               	movwf	(LCD_WriteString@Str+1)^(0+384)
  1680  0BED  160A  118A  2482  120A  158A  	fcall	_LCD_WriteString
  1681                           
  1682                           ;main.c: 540: LCD_Cursor(0,6);
  1683  0BF2  3006               	movlw	6
  1684  0BF3  1683               	bsf	3,5	;RP0=1, select bank3
  1685  0BF4  1703               	bsf	3,6	;RP1=1, select bank3
  1686  0BF5  00CA               	movwf	??_main^(0+384)
  1687  0BF6  084A               	movf	??_main^(0+384),w
  1688  0BF7  00B3               	movwf	LCD_Cursor@Col^(0+384)
  1689  0BF8  3000               	movlw	0
  1690  0BF9  160A  118A  23AE  120A  158A  	fcall	_LCD_Cursor
  1691                           
  1692                           ;main.c: 541: LCD_WriteString(display_rpm);
  1693  0BFE  30A9               	movlw	_display_rpm& (0+255)
  1694  0BFF  1683               	bsf	3,5	;RP0=1, select bank3
  1695  0C00  1703               	bsf	3,6	;RP1=1, select bank3
  1696  0C01  00B5               	movwf	LCD_WriteString@Str^(0+384)
  1697  0C02  3001               	movlw	1
  1698  0C03  00B6               	movwf	(LCD_WriteString@Str+1)^(0+384)
  1699  0C04  160A  118A  2482  120A  158A  	fcall	_LCD_WriteString
  1700                           
  1701                           ;main.c: 542: LCD_Cursor(1,0);
  1702  0C09  1683               	bsf	3,5	;RP0=1, select bank3
  1703  0C0A  1703               	bsf	3,6	;RP1=1, select bank3
  1704  0C0B  01B3               	clrf	LCD_Cursor@Col^(0+384)
  1705  0C0C  3001               	movlw	1
  1706  0C0D  160A  118A  23AE  120A  158A  	fcall	_LCD_Cursor
  1707                           
  1708                           ;main.c: 547: _delay((unsigned long)((200)*(18432000/4000.0)));
  1709  0C12  3005               	movlw	5
  1710  0C13  1683               	bsf	3,5	;RP0=1, select bank3
  1711  0C14  1703               	bsf	3,6	;RP1=1, select bank3
  1712  0C15  00CC               	movwf	(??_main^(0+384)+2)
  1713  0C16  30AD               	movlw	173
  1714  0C17  00CB               	movwf	(??_main^(0+384)+1)
  1715  0C18  30E0               	movlw	224
  1716  0C19  00CA               	movwf	??_main^(0+384)
  1717  0C1A                     u5727:	
  1718  0C1A  0BCA               	decfsz	??_main^(0+384),f
  1719  0C1B  2C1A               	goto	u5727
  1720  0C1C  0BCB               	decfsz	(??_main^(0+384)+1),f
  1721  0C1D  2C1A               	goto	u5727
  1722  0C1E  0BCC               	decfsz	(??_main^(0+384)+2),f
  1723  0C1F  2C1A               	goto	u5727
  1724  0C20  2BD9               	goto	l3314
  1725  0C21                     __end_of_main:	
  1726                           
  1727                           	psect	text1
  1728  14F1                     __ptext1:	
  1729 ;; *************** function _USART_Init *****************
  1730 ;; Defined at:
  1731 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  BaudRate        4   15[BANK3 ] long 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;		None               void
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1745 ;;      Params:         0       0       0       4       0
  1746 ;;      Locals:         0       0       0       0       0
  1747 ;;      Temps:          0       0       0       4       0
  1748 ;;      Totals:         0       0       0       8       0
  1749 ;;Total ram usage:        8 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    6
  1752 ;; This function calls:
  1753 ;;		___aldiv
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function _USART_Init
  1761  14F1                     _USART_Init:	
  1762                           
  1763                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1764                           
  1765                           ;incstack = 0
  1766                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1767  14F1  1683               	bsf	3,5	;RP0=1, select bank3
  1768  14F2  1703               	bsf	3,6	;RP1=1, select bank3
  1769  14F3  0842               	movf	USART_Init@BaudRate^(0+384),w
  1770  14F4  00C6               	movwf	??_USART_Init^(0+384)
  1771  14F5  0843               	movf	(USART_Init@BaudRate+1)^(0+384),w
  1772  14F6  00C7               	movwf	(??_USART_Init^(0+384)+1)
  1773  14F7  0844               	movf	(USART_Init@BaudRate+2)^(0+384),w
  1774  14F8  00C8               	movwf	(??_USART_Init^(0+384)+2)
  1775  14F9  0845               	movf	(USART_Init@BaudRate+3)^(0+384),w
  1776  14FA  00C9               	movwf	(??_USART_Init^(0+384)+3)
  1777  14FB  3004               	movlw	4
  1778  14FC                     u3815:	
  1779  14FC  1003               	clrc
  1780  14FD  0DC6               	rlf	??_USART_Init^(0+384),f
  1781  14FE  0DC7               	rlf	(??_USART_Init^(0+384)+1),f
  1782  14FF  0DC8               	rlf	(??_USART_Init^(0+384)+2),f
  1783  1500  0DC9               	rlf	(??_USART_Init^(0+384)+3),f
  1784  1501  3EFF               	addlw	-1
  1785  1502  1D03               	skipz
  1786  1503  2CFC               	goto	u3815
  1787  1504  0849               	movf	(??_USART_Init+3)^(0+384),w
  1788  1505  00B6               	movwf	(___aldiv@divisor+3)^(0+384)
  1789  1506  0848               	movf	(??_USART_Init+2)^(0+384),w
  1790  1507  00B5               	movwf	(___aldiv@divisor+2)^(0+384)
  1791  1508  0847               	movf	(??_USART_Init+1)^(0+384),w
  1792  1509  00B4               	movwf	(___aldiv@divisor+1)^(0+384)
  1793  150A  0846               	movf	??_USART_Init^(0+384),w
  1794  150B  00B3               	movwf	___aldiv@divisor^(0+384)
  1795  150C  3001               	movlw	1
  1796  150D  00BA               	movwf	(___aldiv@dividend+3)^(0+384)
  1797  150E  3019               	movlw	25
  1798  150F  00B9               	movwf	(___aldiv@dividend+2)^(0+384)
  1799  1510  3040               	movlw	64
  1800  1511  00B8               	movwf	(___aldiv@dividend+1)^(0+384)
  1801  1512  3000               	movlw	0
  1802  1513  00B7               	movwf	___aldiv@dividend^(0+384)
  1803  1514  160A  118A  2771   	fcall	___aldiv
  1804  1517  1683               	bsf	3,5	;RP0=1, select bank3
  1805  1518  1703               	bsf	3,6	;RP1=1, select bank3
  1806  1519  0833               	movf	?___aldiv^(0+384),w
  1807  151A  3EFF               	addlw	255
  1808  151B  1683               	bsf	3,5	;RP0=1, select bank1
  1809  151C  1303               	bcf	3,6	;RP1=0, select bank1
  1810  151D  0099               	movwf	25	;volatile
  1811                           
  1812                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1813  151E  1398               	bcf	24,7	;volatile
  1814                           
  1815                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1816  151F  1318               	bcf	24,6	;volatile
  1817                           
  1818                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1819  1520  1698               	bsf	24,5	;volatile
  1820                           
  1821                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1822  1521  1218               	bcf	24,4	;volatile
  1823                           
  1824                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1825  1522  1518               	bsf	24,2	;volatile
  1826                           
  1827                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1828  1523  1498               	bsf	24,1	;volatile
  1829                           
  1830                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1831  1524  1018               	bcf	24,0	;volatile
  1832                           
  1833                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1834  1525  1283               	bcf	3,5	;RP0=0, select bank0
  1835  1526  1303               	bcf	3,6	;RP1=0, select bank0
  1836  1527  1798               	bsf	24,7	;volatile
  1837                           
  1838                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1839  1528  1318               	bcf	24,6	;volatile
  1840                           
  1841                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1842  1529  1298               	bcf	24,5	;volatile
  1843                           
  1844                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1845  152A  1618               	bsf	24,4	;volatile
  1846                           
  1847                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1848  152B  1198               	bcf	24,3	;volatile
  1849                           
  1850                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1851  152C  1118               	bcf	24,2	;volatile
  1852                           
  1853                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1854  152D  1098               	bcf	24,1	;volatile
  1855                           
  1856                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1857  152E  1018               	bcf	24,0	;volatile
  1858                           
  1859                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1860  152F  1683               	bsf	3,5	;RP0=1, select bank1
  1861  1530  1303               	bcf	3,6	;RP1=0, select bank1
  1862  1531  120C               	bcf	12,4	;volatile
  1863                           
  1864                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1865  1532  1283               	bcf	3,5	;RP0=0, select bank0
  1866  1533  1303               	bcf	3,6	;RP1=0, select bank0
  1867  1534  120C               	bcf	12,4	;volatile
  1868                           
  1869                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1870  1535  1683               	bsf	3,5	;RP0=1, select bank1
  1871  1536  1303               	bcf	3,6	;RP1=0, select bank1
  1872  1537  168C               	bsf	12,5	;volatile
  1873                           
  1874                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1875  1538  1283               	bcf	3,5	;RP0=0, select bank0
  1876  1539  1303               	bcf	3,6	;RP1=0, select bank0
  1877  153A  128C               	bcf	12,5	;volatile
  1878  153B  0008               	return
  1879  153C                     __end_of_USART_Init:	
  1880                           
  1881                           	psect	text2
  1882  1771                     __ptext2:	
  1883 ;; *************** function ___aldiv *****************
  1884 ;; Defined at:
  1885 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  divisor         4    0[BANK3 ] long 
  1888 ;;  dividend        4    4[BANK3 ] long 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  quotient        4   11[BANK3 ] long 
  1891 ;;  sign            1   10[BANK3 ] unsigned char 
  1892 ;;  counter         1    9[BANK3 ] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  4    0[BANK3 ] long 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       0       0       8       0
  1903 ;;      Locals:         0       0       0       6       0
  1904 ;;      Temps:          0       0       0       1       0
  1905 ;;      Totals:         0       0       0      15       0
  1906 ;;Total ram usage:       15 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    5
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_USART_Init
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function ___aldiv
  1918  1771                     ___aldiv:	
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1922  1771  1683               	bsf	3,5	;RP0=1, select bank3
  1923  1772  1703               	bsf	3,6	;RP1=1, select bank3
  1924  1773  01BD               	clrf	___aldiv@sign^(0+384)
  1925  1774  1FB6               	btfss	(___aldiv@divisor+3)^(0+384),7
  1926  1775  2F83               	goto	l622
  1927  1776  09B3               	comf	___aldiv@divisor^(0+384),f
  1928  1777  09B4               	comf	(___aldiv@divisor+1)^(0+384),f
  1929  1778  09B5               	comf	(___aldiv@divisor+2)^(0+384),f
  1930  1779  09B6               	comf	(___aldiv@divisor+3)^(0+384),f
  1931  177A  0AB3               	incf	___aldiv@divisor^(0+384),f
  1932  177B  1903               	skipnz
  1933  177C  0AB4               	incf	(___aldiv@divisor+1)^(0+384),f
  1934  177D  1903               	skipnz
  1935  177E  0AB5               	incf	(___aldiv@divisor+2)^(0+384),f
  1936  177F  1903               	skipnz
  1937  1780  0AB6               	incf	(___aldiv@divisor+3)^(0+384),f
  1938  1781  01BD               	clrf	___aldiv@sign^(0+384)
  1939  1782  0ABD               	incf	___aldiv@sign^(0+384),f
  1940  1783                     l622:	
  1941  1783  1FBA               	btfss	(___aldiv@dividend+3)^(0+384),7
  1942  1784  2F94               	goto	l3104
  1943  1785  09B7               	comf	___aldiv@dividend^(0+384),f
  1944  1786  09B8               	comf	(___aldiv@dividend+1)^(0+384),f
  1945  1787  09B9               	comf	(___aldiv@dividend+2)^(0+384),f
  1946  1788  09BA               	comf	(___aldiv@dividend+3)^(0+384),f
  1947  1789  0AB7               	incf	___aldiv@dividend^(0+384),f
  1948  178A  1903               	skipnz
  1949  178B  0AB8               	incf	(___aldiv@dividend+1)^(0+384),f
  1950  178C  1903               	skipnz
  1951  178D  0AB9               	incf	(___aldiv@dividend+2)^(0+384),f
  1952  178E  1903               	skipnz
  1953  178F  0ABA               	incf	(___aldiv@dividend+3)^(0+384),f
  1954  1790  3001               	movlw	1
  1955  1791  00BB               	movwf	??___aldiv^(0+384)
  1956  1792  083B               	movf	??___aldiv^(0+384),w
  1957  1793  06BD               	xorwf	___aldiv@sign^(0+384),f
  1958  1794                     l3104:	
  1959  1794  3000               	movlw	0
  1960  1795  00C1               	movwf	(___aldiv@quotient+3)^(0+384)
  1961  1796  3000               	movlw	0
  1962  1797  00C0               	movwf	(___aldiv@quotient+2)^(0+384)
  1963  1798  3000               	movlw	0
  1964  1799  00BF               	movwf	(___aldiv@quotient+1)^(0+384)
  1965  179A  3000               	movlw	0
  1966  179B  00BE               	movwf	___aldiv@quotient^(0+384)
  1967  179C  0836               	movf	(___aldiv@divisor+3)^(0+384),w
  1968  179D  0435               	iorwf	(___aldiv@divisor+2)^(0+384),w
  1969  179E  0434               	iorwf	(___aldiv@divisor+1)^(0+384),w
  1970  179F  0433               	iorwf	___aldiv@divisor^(0+384),w
  1971  17A0  1903               	skipnz
  1972  17A1  2FE9               	goto	l3126
  1973  17A2  01BC               	clrf	___aldiv@counter^(0+384)
  1974  17A3  0ABC               	incf	___aldiv@counter^(0+384),f
  1975  17A4                     l3112:	
  1976  17A4  1BB6               	btfsc	(___aldiv@divisor+3)^(0+384),7
  1977  17A5  2FB4               	goto	l3114
  1978  17A6  3001               	movlw	1
  1979  17A7  00BB               	movwf	??___aldiv^(0+384)
  1980  17A8                     u3735:	
  1981  17A8  1003               	clrc
  1982  17A9  0DB3               	rlf	___aldiv@divisor^(0+384),f
  1983  17AA  0DB4               	rlf	(___aldiv@divisor+1)^(0+384),f
  1984  17AB  0DB5               	rlf	(___aldiv@divisor+2)^(0+384),f
  1985  17AC  0DB6               	rlf	(___aldiv@divisor+3)^(0+384),f
  1986  17AD  0BBB               	decfsz	??___aldiv^(0+384),f
  1987  17AE  2FA8               	goto	u3735
  1988  17AF  3001               	movlw	1
  1989  17B0  00BB               	movwf	??___aldiv^(0+384)
  1990  17B1  083B               	movf	??___aldiv^(0+384),w
  1991  17B2  07BC               	addwf	___aldiv@counter^(0+384),f
  1992  17B3  2FA4               	goto	l3112
  1993  17B4                     l3114:	
  1994  17B4  3001               	movlw	1
  1995  17B5  00BB               	movwf	??___aldiv^(0+384)
  1996  17B6                     u3755:	
  1997  17B6  1003               	clrc
  1998  17B7  0DBE               	rlf	___aldiv@quotient^(0+384),f
  1999  17B8  0DBF               	rlf	(___aldiv@quotient+1)^(0+384),f
  2000  17B9  0DC0               	rlf	(___aldiv@quotient+2)^(0+384),f
  2001  17BA  0DC1               	rlf	(___aldiv@quotient+3)^(0+384),f
  2002  17BB  0BBB               	decfsz	??___aldiv^(0+384),f
  2003  17BC  2FB6               	goto	u3755
  2004  17BD  0836               	movf	(___aldiv@divisor+3)^(0+384),w
  2005  17BE  023A               	subwf	(___aldiv@dividend+3)^(0+384),w
  2006  17BF  1D03               	skipz
  2007  17C0  2FCB               	goto	u3765
  2008  17C1  0835               	movf	(___aldiv@divisor+2)^(0+384),w
  2009  17C2  0239               	subwf	(___aldiv@dividend+2)^(0+384),w
  2010  17C3  1D03               	skipz
  2011  17C4  2FCB               	goto	u3765
  2012  17C5  0834               	movf	(___aldiv@divisor+1)^(0+384),w
  2013  17C6  0238               	subwf	(___aldiv@dividend+1)^(0+384),w
  2014  17C7  1D03               	skipz
  2015  17C8  2FCB               	goto	u3765
  2016  17C9  0833               	movf	___aldiv@divisor^(0+384),w
  2017  17CA  0237               	subwf	___aldiv@dividend^(0+384),w
  2018  17CB                     u3765:	
  2019  17CB  1C03               	skipc
  2020  17CC  2FDC               	goto	l3122
  2021  17CD  0833               	movf	___aldiv@divisor^(0+384),w
  2022  17CE  02B7               	subwf	___aldiv@dividend^(0+384),f
  2023  17CF  0834               	movf	(___aldiv@divisor+1)^(0+384),w
  2024  17D0  1C03               	skipc
  2025  17D1  0F34               	incfsz	(___aldiv@divisor+1)^(0+384),w
  2026  17D2  02B8               	subwf	(___aldiv@dividend+1)^(0+384),f
  2027  17D3  0835               	movf	(___aldiv@divisor+2)^(0+384),w
  2028  17D4  1C03               	skipc
  2029  17D5  0F35               	incfsz	(___aldiv@divisor+2)^(0+384),w
  2030  17D6  02B9               	subwf	(___aldiv@dividend+2)^(0+384),f
  2031  17D7  0836               	movf	(___aldiv@divisor+3)^(0+384),w
  2032  17D8  1C03               	skipc
  2033  17D9  0F36               	incfsz	(___aldiv@divisor+3)^(0+384),w
  2034  17DA  02BA               	subwf	(___aldiv@dividend+3)^(0+384),f
  2035  17DB  143E               	bsf	___aldiv@quotient^(0+384),0
  2036  17DC                     l3122:	
  2037  17DC  3001               	movlw	1
  2038  17DD                     u3775:	
  2039  17DD  1003               	clrc
  2040  17DE  0CB6               	rrf	(___aldiv@divisor+3)^(0+384),f
  2041  17DF  0CB5               	rrf	(___aldiv@divisor+2)^(0+384),f
  2042  17E0  0CB4               	rrf	(___aldiv@divisor+1)^(0+384),f
  2043  17E1  0CB3               	rrf	___aldiv@divisor^(0+384),f
  2044  17E2  3EFF               	addlw	-1
  2045  17E3  1D03               	skipz
  2046  17E4  2FDD               	goto	u3775
  2047  17E5  3001               	movlw	1
  2048  17E6  02BC               	subwf	___aldiv@counter^(0+384),f
  2049  17E7  1D03               	btfss	3,2
  2050  17E8  2FB4               	goto	l3114
  2051  17E9                     l3126:	
  2052  17E9  083D               	movf	___aldiv@sign^(0+384),w
  2053  17EA  1903               	btfsc	3,2
  2054  17EB  2FF7               	goto	l3130
  2055  17EC  09BE               	comf	___aldiv@quotient^(0+384),f
  2056  17ED  09BF               	comf	(___aldiv@quotient+1)^(0+384),f
  2057  17EE  09C0               	comf	(___aldiv@quotient+2)^(0+384),f
  2058  17EF  09C1               	comf	(___aldiv@quotient+3)^(0+384),f
  2059  17F0  0ABE               	incf	___aldiv@quotient^(0+384),f
  2060  17F1  1903               	skipnz
  2061  17F2  0ABF               	incf	(___aldiv@quotient+1)^(0+384),f
  2062  17F3  1903               	skipnz
  2063  17F4  0AC0               	incf	(___aldiv@quotient+2)^(0+384),f
  2064  17F5  1903               	skipnz
  2065  17F6  0AC1               	incf	(___aldiv@quotient+3)^(0+384),f
  2066  17F7                     l3130:	
  2067  17F7  0841               	movf	(___aldiv@quotient+3)^(0+384),w
  2068  17F8  00B6               	movwf	(?___aldiv+3)^(0+384)
  2069  17F9  0840               	movf	(___aldiv@quotient+2)^(0+384),w
  2070  17FA  00B5               	movwf	(?___aldiv+2)^(0+384)
  2071  17FB  083F               	movf	(___aldiv@quotient+1)^(0+384),w
  2072  17FC  00B4               	movwf	(?___aldiv+1)^(0+384)
  2073  17FD  083E               	movf	___aldiv@quotient^(0+384),w
  2074  17FE  00B3               	movwf	?___aldiv^(0+384)
  2075  17FF  0008               	return
  2076  1800                     __end_of___aldiv:	
  2077                           
  2078                           	psect	text3
  2079  129C                     __ptext3:	
  2080 ;; *************** function _TIMER0_Set *****************
  2081 ;; Defined at:
  2082 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  contagens       1    wreg     unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  contagens       1    0[BANK3 ] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;		None               void
  2089 ;; Registers used:
  2090 ;;		wreg
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2096 ;;      Params:         0       0       0       0       0
  2097 ;;      Locals:         0       0       0       1       0
  2098 ;;      Temps:          0       0       0       0       0
  2099 ;;      Totals:         0       0       0       1       0
  2100 ;;Total ram usage:        1 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    5
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_main
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _TIMER0_Set
  2112  129C                     _TIMER0_Set:	
  2113                           
  2114                           ;incstack = 0
  2115                           ; Regs used in _TIMER0_Set: [wreg]
  2116                           ;TIMER0_Set@contagens stored from wreg
  2117  129C  1683               	bsf	3,5	;RP0=1, select bank3
  2118  129D  1703               	bsf	3,6	;RP1=1, select bank3
  2119  129E  00B3               	movwf	TIMER0_Set@contagens^(0+384)
  2120                           
  2121                           ;timers.c: 22: TMR0 = contagens;
  2122  129F  0833               	movf	TIMER0_Set@contagens^(0+384),w
  2123  12A0  1283               	bcf	3,5	;RP0=0, select bank0
  2124  12A1  1303               	bcf	3,6	;RP1=0, select bank0
  2125  12A2  0081               	movwf	1	;volatile
  2126  12A3  0008               	return
  2127  12A4                     __end_of_TIMER0_Set:	
  2128                           
  2129                           	psect	text4
  2130  12B6                     __ptext4:	
  2131 ;; *************** function _TIMER0_Init *****************
  2132 ;; Defined at:
  2133 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;		None               void
  2140 ;; Registers used:
  2141 ;;		None
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2147 ;;      Params:         0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0
  2149 ;;      Temps:          0       0       0       0       0
  2150 ;;      Totals:         0       0       0       0       0
  2151 ;;Total ram usage:        0 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    5
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           
  2162                           ;psect for function _TIMER0_Init
  2163  12B6                     _TIMER0_Init:	
  2164                           
  2165                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2166                           
  2167                           ;incstack = 0
  2168                           ; Regs used in _TIMER0_Init: []
  2169  12B6  1683               	bsf	3,5	;RP0=1, select bank1
  2170  12B7  1303               	bcf	3,6	;RP1=0, select bank1
  2171  12B8  1281               	bcf	1,5	;volatile
  2172                           
  2173                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2174  12B9  1201               	bcf	1,4	;volatile
  2175                           
  2176                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2177  12BA  1181               	bcf	1,3	;volatile
  2178                           
  2179                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2180  12BB  1501               	bsf	1,2	;volatile
  2181                           
  2182                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2183  12BC  1481               	bsf	1,1	;volatile
  2184                           
  2185                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2186  12BD  1401               	bsf	1,0	;volatile
  2187                           
  2188                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2189  12BE  110B               	bcf	11,2	;volatile
  2190                           
  2191                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2192  12BF  168B               	bsf	11,5	;volatile
  2193  12C0  0008               	return
  2194  12C1                     __end_of_TIMER0_Init:	
  2195                           
  2196                           	psect	text5
  2197  1410                     __ptext5:	
  2198 ;; *************** function _PWM_Init *****************
  2199 ;; Defined at:
  2200 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;		None               void
  2207 ;; Registers used:
  2208 ;;		wreg
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0
  2217 ;;      Totals:         0       0       0       0       0
  2218 ;;Total ram usage:        0 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    5
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _PWM_Init
  2230  1410                     _PWM_Init:	
  2231                           
  2232                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _PWM_Init: [wreg]
  2236  1410  1283               	bcf	3,5	;RP0=0, select bank0
  2237  1411  1303               	bcf	3,6	;RP1=0, select bank0
  2238  1412  1492               	bsf	18,1	;volatile
  2239                           
  2240                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2241  1413  1012               	bcf	18,0	;volatile
  2242                           
  2243                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2244  1414  1312               	bcf	18,6	;volatile
  2245                           
  2246                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2247  1415  1292               	bcf	18,5	;volatile
  2248                           
  2249                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2250  1416  1212               	bcf	18,4	;volatile
  2251                           
  2252                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2253  1417  1192               	bcf	18,3	;volatile
  2254                           
  2255                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2256  1418  1512               	bsf	18,2	;volatile
  2257                           
  2258                           ;pwm.c: 27: PR2 = 255;
  2259  1419  30FF               	movlw	255
  2260  141A  1683               	bsf	3,5	;RP0=1, select bank1
  2261  141B  1303               	bcf	3,6	;RP1=0, select bank1
  2262  141C  0092               	movwf	18	;volatile
  2263                           
  2264                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2265  141D  1283               	bcf	3,5	;RP0=0, select bank0
  2266  141E  1303               	bcf	3,6	;RP1=0, select bank0
  2267  141F  1597               	bsf	23,3	;volatile
  2268                           
  2269                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2270  1420  1517               	bsf	23,2	;volatile
  2271                           
  2272                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2273  1421  1497               	bsf	23,1	;volatile
  2274                           
  2275                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2276  1422  1417               	bsf	23,0	;volatile
  2277                           
  2278                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2279  1423  1683               	bsf	3,5	;RP0=1, select bank1
  2280  1424  1303               	bcf	3,6	;RP1=0, select bank1
  2281  1425  150C               	bsf	12,2	;volatile
  2282                           
  2283                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2284  1426  1283               	bcf	3,5	;RP0=0, select bank0
  2285  1427  1303               	bcf	3,6	;RP1=0, select bank0
  2286  1428  110C               	bcf	12,2	;volatile
  2287                           
  2288                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2289  1429  159D               	bsf	29,3	;volatile
  2290                           
  2291                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2292  142A  151D               	bsf	29,2	;volatile
  2293                           
  2294                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2295  142B  149D               	bsf	29,1	;volatile
  2296                           
  2297                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2298  142C  141D               	bsf	29,0	;volatile
  2299                           
  2300                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2301  142D  1683               	bsf	3,5	;RP0=1, select bank1
  2302  142E  1303               	bcf	3,6	;RP1=0, select bank1
  2303  142F  140D               	bsf	13,0	;volatile
  2304                           
  2305                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2306  1430  1283               	bcf	3,5	;RP0=0, select bank0
  2307  1431  1303               	bcf	3,6	;RP1=0, select bank0
  2308  1432  100D               	bcf	13,0	;volatile
  2309  1433  0008               	return
  2310  1434                     __end_of_PWM_Init:	
  2311                           
  2312                           	psect	text6
  2313  07DE                     __ptext6:	
  2314 ;; *************** function _PWM_DutyCycle2 *****************
  2315 ;; Defined at:
  2316 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  valor           2    0[BANK3 ] int 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;		None               void
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2330 ;;      Params:         0       0       0       2       0
  2331 ;;      Locals:         0       0       0       0       0
  2332 ;;      Temps:          0       0       0       2       0
  2333 ;;      Totals:         0       0       0       4       0
  2334 ;;Total ram usage:        4 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    5
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_main
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           
  2345                           ;psect for function _PWM_DutyCycle2
  2346  07DE                     _PWM_DutyCycle2:	
  2347                           
  2348                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2352  07DE  1683               	bsf	3,5	;RP0=1, select bank3
  2353  07DF  1703               	bsf	3,6	;RP1=1, select bank3
  2354  07E0  0834               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2355  07E1  00B6               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2356  07E2  0833               	movf	PWM_DutyCycle2@valor^(0+384),w
  2357  07E3  00B5               	movwf	??_PWM_DutyCycle2^(0+384)
  2358  07E4  0D36               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2359  07E5  0CB6               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2360  07E6  0CB5               	rrf	??_PWM_DutyCycle2^(0+384),f
  2361  07E7  0D36               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2362  07E8  0CB6               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2363  07E9  0CB5               	rrf	??_PWM_DutyCycle2^(0+384),f
  2364  07EA  0835               	movf	??_PWM_DutyCycle2^(0+384),w
  2365  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  2366  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  2367  07ED  009B               	movwf	27	;volatile
  2368                           
  2369                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2370  07EE  1683               	bsf	3,5	;RP0=1, select bank3
  2371  07EF  1703               	bsf	3,6	;RP1=1, select bank3
  2372  07F0  0833               	movf	PWM_DutyCycle2@valor^(0+384),w
  2373  07F1  00B5               	movwf	??_PWM_DutyCycle2^(0+384)
  2374  07F2  3003               	movlw	3
  2375  07F3                     u3805:	
  2376  07F3  1003               	clrc
  2377  07F4  0DB5               	rlf	??_PWM_DutyCycle2^(0+384),f
  2378  07F5  3EFF               	addlw	-1
  2379  07F6  1D03               	skipz
  2380  07F7  2FF3               	goto	u3805
  2381  07F8  1003               	clrc
  2382  07F9  0D35               	rlf	??_PWM_DutyCycle2^(0+384),w
  2383  07FA  380C               	iorlw	12
  2384  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  2385  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  2386  07FD  009D               	movwf	29	;volatile
  2387  07FE  0008               	return
  2388  07FF                     __end_of_PWM_DutyCycle2:	
  2389                           
  2390                           	psect	text7
  2391  13EF                     __ptext7:	
  2392 ;; *************** function _PWM_DutyCycle1 *****************
  2393 ;; Defined at:
  2394 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  valor           2    0[BANK3 ] int 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;		None               void
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       0       0       2       0
  2409 ;;      Locals:         0       0       0       0       0
  2410 ;;      Temps:          0       0       0       2       0
  2411 ;;      Totals:         0       0       0       4       0
  2412 ;;Total ram usage:        4 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    5
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_main
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           
  2423                           ;psect for function _PWM_DutyCycle1
  2424  13EF                     _PWM_DutyCycle1:	
  2425                           
  2426                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2427                           
  2428                           ;incstack = 0
  2429                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2430  13EF  1683               	bsf	3,5	;RP0=1, select bank3
  2431  13F0  1703               	bsf	3,6	;RP1=1, select bank3
  2432  13F1  0834               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2433  13F2  00B6               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2434  13F3  0833               	movf	PWM_DutyCycle1@valor^(0+384),w
  2435  13F4  00B5               	movwf	??_PWM_DutyCycle1^(0+384)
  2436  13F5  0D36               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2437  13F6  0CB6               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2438  13F7  0CB5               	rrf	??_PWM_DutyCycle1^(0+384),f
  2439  13F8  0D36               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2440  13F9  0CB6               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2441  13FA  0CB5               	rrf	??_PWM_DutyCycle1^(0+384),f
  2442  13FB  0835               	movf	??_PWM_DutyCycle1^(0+384),w
  2443  13FC  1283               	bcf	3,5	;RP0=0, select bank0
  2444  13FD  1303               	bcf	3,6	;RP1=0, select bank0
  2445  13FE  0095               	movwf	21	;volatile
  2446                           
  2447                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2448  13FF  1683               	bsf	3,5	;RP0=1, select bank3
  2449  1400  1703               	bsf	3,6	;RP1=1, select bank3
  2450  1401  0833               	movf	PWM_DutyCycle1@valor^(0+384),w
  2451  1402  00B5               	movwf	??_PWM_DutyCycle1^(0+384)
  2452  1403  3003               	movlw	3
  2453  1404                     u3845:	
  2454  1404  1003               	clrc
  2455  1405  0DB5               	rlf	??_PWM_DutyCycle1^(0+384),f
  2456  1406  3EFF               	addlw	-1
  2457  1407  1D03               	skipz
  2458  1408  2C04               	goto	u3845
  2459  1409  1003               	clrc
  2460  140A  0D35               	rlf	??_PWM_DutyCycle1^(0+384),w
  2461  140B  380C               	iorlw	12
  2462  140C  1283               	bcf	3,5	;RP0=0, select bank0
  2463  140D  1303               	bcf	3,6	;RP1=0, select bank0
  2464  140E  0097               	movwf	23	;volatile
  2465  140F  0008               	return
  2466  1410                     __end_of_PWM_DutyCycle1:	
  2467                           
  2468                           	psect	text8
  2469  1482                     __ptext8:	
  2470 ;; *************** function _LCD_WriteString *****************
  2471 ;; Defined at:
  2472 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  Str             2    2[BANK3 ] PTR const unsigned char 
  2475 ;;		 -> display_rpm(10), STR_3(6), STR_2(17), 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;		None               void
  2480 ;; Registers used:
  2481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2487 ;;      Params:         0       0       0       2       0
  2488 ;;      Locals:         0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0
  2490 ;;      Totals:         0       0       0       2       0
  2491 ;;Total ram usage:        2 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    6
  2494 ;; This function calls:
  2495 ;;		_LCD_WriteData
  2496 ;; This function is called by:
  2497 ;;		_main
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _LCD_WriteString
  2503  1482                     _LCD_WriteString:	
  2504  1482                     l3256:	
  2505                           ;lcd.c: 63: while(*Str != '\0')
  2506                           
  2507                           ;incstack = 0
  2508                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2509                           
  2510  1482  1683               	bsf	3,5	;RP0=1, select bank3
  2511  1483  1703               	bsf	3,6	;RP1=1, select bank3
  2512  1484  0836               	movf	(LCD_WriteString@Str+1)^(0+384),w
  2513  1485  1283               	bcf	3,5	;RP0=0, select bank0
  2514  1486  1303               	bcf	3,6	;RP1=0, select bank0
  2515  1487  00FF               	movwf	127
  2516  1488  1683               	bsf	3,5	;RP0=1, select bank3
  2517  1489  1703               	bsf	3,6	;RP1=1, select bank3
  2518  148A  0835               	movf	LCD_WriteString@Str^(0+384),w
  2519  148B  0084               	movwf	4
  2520  148C  1283               	bcf	3,5	;RP0=0, select bank0
  2521  148D  1303               	bcf	3,6	;RP1=0, select bank0
  2522  148E  160A  118A  2000  160A  118A  	fcall	stringtab
  2523  1493  3800               	iorlw	0
  2524  1494  1903               	btfsc	3,2
  2525  1495  0008               	return
  2526                           
  2527                           ;lcd.c: 64: {
  2528                           ;lcd.c: 65: LCD_WriteData(*Str);
  2529  1496  1683               	bsf	3,5	;RP0=1, select bank3
  2530  1497  1703               	bsf	3,6	;RP1=1, select bank3
  2531  1498  0836               	movf	(LCD_WriteString@Str+1)^(0+384),w
  2532  1499  1283               	bcf	3,5	;RP0=0, select bank0
  2533  149A  1303               	bcf	3,6	;RP1=0, select bank0
  2534  149B  00FF               	movwf	127
  2535  149C  1683               	bsf	3,5	;RP0=1, select bank3
  2536  149D  1703               	bsf	3,6	;RP1=1, select bank3
  2537  149E  0835               	movf	LCD_WriteString@Str^(0+384),w
  2538  149F  0084               	movwf	4
  2539  14A0  1283               	bcf	3,5	;RP0=0, select bank0
  2540  14A1  1303               	bcf	3,6	;RP1=0, select bank0
  2541  14A2  160A  118A  2000  160A  118A  	fcall	stringtab
  2542  14A7  160A  118A  230C  160A  118A  	fcall	_LCD_WriteData
  2543                           
  2544                           ;lcd.c: 66: Str++;
  2545  14AC  3001               	movlw	1
  2546  14AD  1683               	bsf	3,5	;RP0=1, select bank3
  2547  14AE  1703               	bsf	3,6	;RP1=1, select bank3
  2548  14AF  07B5               	addwf	LCD_WriteString@Str^(0+384),f
  2549  14B0  1803               	skipnc
  2550  14B1  0AB6               	incf	(LCD_WriteString@Str+1)^(0+384),f
  2551  14B2  2C82               	goto	l3256
  2552  14B3                     __end_of_LCD_WriteString:	
  2553                           
  2554                           	psect	text9
  2555  130C                     __ptext9:	
  2556 ;; *************** function _LCD_WriteData *****************
  2557 ;; Defined at:
  2558 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  Byte            1    wreg     unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  Byte            1    1[BANK3 ] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;		None               void
  2565 ;; Registers used:
  2566 ;;		wreg
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       0       0       0       0
  2573 ;;      Locals:         0       0       0       1       0
  2574 ;;      Temps:          0       0       0       1       0
  2575 ;;      Totals:         0       0       0       2       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    5
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_LCD_WriteString
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _LCD_WriteData
  2588  130C                     _LCD_WriteData:	
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _LCD_WriteData: [wreg]
  2592                           ;LCD_WriteData@Byte stored from wreg
  2593  130C  1683               	bsf	3,5	;RP0=1, select bank3
  2594  130D  1703               	bsf	3,6	;RP1=1, select bank3
  2595  130E  00B4               	movwf	LCD_WriteData@Byte^(0+384)
  2596                           
  2597                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  2598  130F  1283               	bcf	3,5	;RP0=0, select bank0
  2599  1310  1303               	bcf	3,6	;RP1=0, select bank0
  2600  1311  1409               	bsf	9,0	;volatile
  2601                           
  2602                           ;lcd.c: 51: PORTD = Byte;
  2603  1312  1683               	bsf	3,5	;RP0=1, select bank3
  2604  1313  1703               	bsf	3,6	;RP1=1, select bank3
  2605  1314  0834               	movf	LCD_WriteData@Byte^(0+384),w
  2606  1315  1283               	bcf	3,5	;RP0=0, select bank0
  2607  1316  1303               	bcf	3,6	;RP1=0, select bank0
  2608  1317  0088               	movwf	8	;volatile
  2609                           
  2610                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  2611  1318  1489               	bsf	9,1	;volatile
  2612                           
  2613                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2614  1319  303D               	movlw	61
  2615  131A  1683               	bsf	3,5	;RP0=1, select bank3
  2616  131B  1703               	bsf	3,6	;RP1=1, select bank3
  2617  131C  00B3               	movwf	??_LCD_WriteData^(0+384)
  2618  131D                     u5737:	
  2619  131D  0BB3               	decfsz	??_LCD_WriteData^(0+384),f
  2620  131E  2B1D               	goto	u5737
  2621                           
  2622                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  2623  131F  1283               	bcf	3,5	;RP0=0, select bank0
  2624  1320  1303               	bcf	3,6	;RP1=0, select bank0
  2625  1321  1089               	bcf	9,1	;volatile
  2626  1322  0008               	return
  2627  1323                     __end_of_LCD_WriteData:	
  2628                           
  2629                           	psect	text10
  2630  1601                     __ptext10:	
  2631 ;; *************** function _LCD_Init *****************
  2632 ;; Defined at:
  2633 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;		None               void
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0, pclath, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2647 ;;      Params:         0       0       0       0       0
  2648 ;;      Locals:         0       0       0       0       0
  2649 ;;      Temps:          0       0       0       2       0
  2650 ;;      Totals:         0       0       0       2       0
  2651 ;;Total ram usage:        2 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    6
  2654 ;; This function calls:
  2655 ;;		_LCD_WriteCmd
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function _LCD_Init
  2663  1601                     _LCD_Init:	
  2664                           
  2665                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2666                           
  2667                           ;incstack = 0
  2668                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2669  1601  1683               	bsf	3,5	;RP0=1, select bank1
  2670  1602  1303               	bcf	3,6	;RP1=0, select bank1
  2671  1603  119F               	bcf	31,3	;volatile
  2672                           
  2673                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2674  1604  151F               	bsf	31,2	;volatile
  2675                           
  2676                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2677  1605  109F               	bcf	31,1	;volatile
  2678                           
  2679                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2680  1606  101F               	bcf	31,0	;volatile
  2681                           
  2682                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2683  1607  305A               	movlw	90
  2684  1608  1683               	bsf	3,5	;RP0=1, select bank3
  2685  1609  1703               	bsf	3,6	;RP1=1, select bank3
  2686  160A  00B6               	movwf	(??_LCD_Init^(0+384)+1)
  2687  160B  30C3               	movlw	195
  2688  160C  00B5               	movwf	??_LCD_Init^(0+384)
  2689  160D                     u5747:	
  2690  160D  0BB5               	decfsz	??_LCD_Init^(0+384),f
  2691  160E  2E0D               	goto	u5747
  2692  160F  0BB6               	decfsz	(??_LCD_Init^(0+384)+1),f
  2693  1610  2E0D               	goto	u5747
  2694                           
  2695                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2696  1611  3030               	movlw	48
  2697  1612  160A  118A  22F5  160A  118A  	fcall	_LCD_WriteCmd
  2698                           
  2699                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2700  1617  3018               	movlw	24
  2701  1618  1683               	bsf	3,5	;RP0=1, select bank3
  2702  1619  1703               	bsf	3,6	;RP1=1, select bank3
  2703  161A  00B6               	movwf	(??_LCD_Init^(0+384)+1)
  2704  161B  30EF               	movlw	239
  2705  161C  00B5               	movwf	??_LCD_Init^(0+384)
  2706  161D                     u5757:	
  2707  161D  0BB5               	decfsz	??_LCD_Init^(0+384),f
  2708  161E  2E1D               	goto	u5757
  2709  161F  0BB6               	decfsz	(??_LCD_Init^(0+384)+1),f
  2710  1620  2E1D               	goto	u5757
  2711                           
  2712                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2713  1621  3030               	movlw	48
  2714  1622  160A  118A  22F5  160A  118A  	fcall	_LCD_WriteCmd
  2715                           
  2716                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2717  1627  3099               	movlw	153
  2718  1628  1683               	bsf	3,5	;RP0=1, select bank3
  2719  1629  1703               	bsf	3,6	;RP1=1, select bank3
  2720  162A  00B5               	movwf	??_LCD_Init^(0+384)
  2721  162B                     u5767:	
  2722  162B  0BB5               	decfsz	??_LCD_Init^(0+384),f
  2723  162C  2E2B               	goto	u5767
  2724                           
  2725                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2726  162D  3030               	movlw	48
  2727  162E  160A  118A  22F5  160A  118A  	fcall	_LCD_WriteCmd
  2728                           
  2729                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2730  1633  303D               	movlw	61
  2731  1634  1683               	bsf	3,5	;RP0=1, select bank3
  2732  1635  1703               	bsf	3,6	;RP1=1, select bank3
  2733  1636  00B5               	movwf	??_LCD_Init^(0+384)
  2734  1637                     u5777:	
  2735  1637  0BB5               	decfsz	??_LCD_Init^(0+384),f
  2736  1638  2E37               	goto	u5777
  2737                           
  2738                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2739  1639  3038               	movlw	56
  2740  163A  160A  118A  22F5  160A  118A  	fcall	_LCD_WriteCmd
  2741                           
  2742                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2743  163F  303D               	movlw	61
  2744  1640  1683               	bsf	3,5	;RP0=1, select bank3
  2745  1641  1703               	bsf	3,6	;RP1=1, select bank3
  2746  1642  00B5               	movwf	??_LCD_Init^(0+384)
  2747  1643                     u5787:	
  2748  1643  0BB5               	decfsz	??_LCD_Init^(0+384),f
  2749  1644  2E43               	goto	u5787
  2750                           
  2751                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2752  1645  3001               	movlw	1
  2753  1646  160A  118A  22F5  160A  118A  	fcall	_LCD_WriteCmd
  2754                           
  2755                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2756  164B  300C               	movlw	12
  2757  164C  1683               	bsf	3,5	;RP0=1, select bank3
  2758  164D  1703               	bsf	3,6	;RP1=1, select bank3
  2759  164E  00B6               	movwf	(??_LCD_Init^(0+384)+1)
  2760  164F  30F7               	movlw	247
  2761  1650  00B5               	movwf	??_LCD_Init^(0+384)
  2762  1651                     u5797:	
  2763  1651  0BB5               	decfsz	??_LCD_Init^(0+384),f
  2764  1652  2E51               	goto	u5797
  2765  1653  0BB6               	decfsz	(??_LCD_Init^(0+384)+1),f
  2766  1654  2E51               	goto	u5797
  2767                           
  2768                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2769  1655  300C               	movlw	12
  2770  1656  160A  118A  22F5  160A  118A  	fcall	_LCD_WriteCmd
  2771                           
  2772                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2773  165B  303D               	movlw	61
  2774  165C  1683               	bsf	3,5	;RP0=1, select bank3
  2775  165D  1703               	bsf	3,6	;RP1=1, select bank3
  2776  165E  00B5               	movwf	??_LCD_Init^(0+384)
  2777  165F                     u5807:	
  2778  165F  0BB5               	decfsz	??_LCD_Init^(0+384),f
  2779  1660  2E5F               	goto	u5807
  2780                           
  2781                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2782  1661  3006               	movlw	6
  2783  1662  160A  118A  22F5  160A  118A  	fcall	_LCD_WriteCmd
  2784                           
  2785                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2786  1667  303D               	movlw	61
  2787  1668  1683               	bsf	3,5	;RP0=1, select bank3
  2788  1669  1703               	bsf	3,6	;RP1=1, select bank3
  2789  166A  00B5               	movwf	??_LCD_Init^(0+384)
  2790  166B                     u5817:	
  2791  166B  0BB5               	decfsz	??_LCD_Init^(0+384),f
  2792  166C  2E6B               	goto	u5817
  2793  166D  0008               	return
  2794  166E                     __end_of_LCD_Init:	
  2795                           
  2796                           	psect	text11
  2797  13AE                     __ptext11:	
  2798 ;; *************** function _LCD_Cursor *****************
  2799 ;; Defined at:
  2800 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  Row             1    wreg     unsigned char 
  2803 ;;  Col             1    0[BANK3 ] unsigned char 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  Row             1    2[BANK3 ] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;		None               void
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2815 ;;      Params:         0       0       0       1       0
  2816 ;;      Locals:         0       0       0       1       0
  2817 ;;      Temps:          0       0       0       1       0
  2818 ;;      Totals:         0       0       0       3       0
  2819 ;;Total ram usage:        3 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    5
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_main
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           
  2830                           ;psect for function _LCD_Cursor
  2831  13AE                     _LCD_Cursor:	
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  2835                           ;LCD_Cursor@Row stored from wreg
  2836  13AE  1683               	bsf	3,5	;RP0=1, select bank3
  2837  13AF  1703               	bsf	3,6	;RP1=1, select bank3
  2838  13B0  00B5               	movwf	LCD_Cursor@Row^(0+384)
  2839                           
  2840                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  2841  13B1  1283               	bcf	3,5	;RP0=0, select bank0
  2842  13B2  1303               	bcf	3,6	;RP1=0, select bank0
  2843  13B3  1009               	bcf	9,0	;volatile
  2844                           
  2845                           ;lcd.c: 14: if (Row == 0)
  2846  13B4  1683               	bsf	3,5	;RP0=1, select bank3
  2847  13B5  1703               	bsf	3,6	;RP1=1, select bank3
  2848  13B6  08B5               	movf	LCD_Cursor@Row^(0+384),f
  2849  13B7  1D03               	skipz
  2850  13B8  2BBC               	goto	l3242
  2851                           
  2852                           ;lcd.c: 15: {
  2853                           ;lcd.c: 16: PORTD = 0x80 + Col;
  2854  13B9  0833               	movf	LCD_Cursor@Col^(0+384),w
  2855  13BA  3E80               	addlw	128
  2856  13BB  2BC0               	goto	L1
  2857  13BC                     l3242:	
  2858                           ;lcd.c: 17: }
  2859                           
  2860                           
  2861                           ;lcd.c: 18: else
  2862                           ;lcd.c: 19: {
  2863                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  2864  13BC  1683               	bsf	3,5	;RP0=1, select bank3
  2865  13BD  1703               	bsf	3,6	;RP1=1, select bank3
  2866  13BE  0833               	movf	LCD_Cursor@Col^(0+384),w
  2867  13BF  3EC0               	addlw	192
  2868  13C0                     L1:	
  2869  13C0  1283               	bcf	3,5	;RP0=0, select bank0
  2870  13C1  1303               	bcf	3,6	;RP1=0, select bank0
  2871  13C2  0088               	movwf	8	;volatile
  2872                           
  2873                           ;lcd.c: 21: }
  2874                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  2875  13C3  1489               	bsf	9,1	;volatile
  2876                           
  2877                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2878  13C4  303D               	movlw	61
  2879  13C5  1683               	bsf	3,5	;RP0=1, select bank3
  2880  13C6  1703               	bsf	3,6	;RP1=1, select bank3
  2881  13C7  00B4               	movwf	??_LCD_Cursor^(0+384)
  2882  13C8                     u5827:	
  2883  13C8  0BB4               	decfsz	??_LCD_Cursor^(0+384),f
  2884  13C9  2BC8               	goto	u5827
  2885                           
  2886                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  2887  13CA  1283               	bcf	3,5	;RP0=0, select bank0
  2888  13CB  1303               	bcf	3,6	;RP1=0, select bank0
  2889  13CC  1089               	bcf	9,1	;volatile
  2890  13CD  0008               	return
  2891  13CE                     __end_of_LCD_Cursor:	
  2892                           
  2893                           	psect	text12
  2894  1459                     __ptext12:	
  2895 ;; *************** function _LCD_Clear *****************
  2896 ;; Defined at:
  2897 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;		None               void
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0
  2913 ;;      Temps:          0       0       0       2       0
  2914 ;;      Totals:         0       0       0       2       0
  2915 ;;Total ram usage:        2 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    6
  2918 ;; This function calls:
  2919 ;;		_LCD_WriteCmd
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           
  2926                           ;psect for function _LCD_Clear
  2927  1459                     _LCD_Clear:	
  2928                           
  2929                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2933  1459  3001               	movlw	1
  2934  145A  160A  118A  22F5  160A  118A  	fcall	_LCD_WriteCmd
  2935                           
  2936                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  2937  145F  300C               	movlw	12
  2938  1460  1683               	bsf	3,5	;RP0=1, select bank3
  2939  1461  1703               	bsf	3,6	;RP1=1, select bank3
  2940  1462  00B6               	movwf	(??_LCD_Clear^(0+384)+1)
  2941  1463  30F7               	movlw	247
  2942  1464  00B5               	movwf	??_LCD_Clear^(0+384)
  2943  1465                     u5837:	
  2944  1465  0BB5               	decfsz	??_LCD_Clear^(0+384),f
  2945  1466  2C65               	goto	u5837
  2946  1467  0BB6               	decfsz	(??_LCD_Clear^(0+384)+1),f
  2947  1468  2C65               	goto	u5837
  2948                           
  2949                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  2950  1469  300C               	movlw	12
  2951  146A  160A  118A  22F5  160A  118A  	fcall	_LCD_WriteCmd
  2952                           
  2953                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2954  146F  303D               	movlw	61
  2955  1470  1683               	bsf	3,5	;RP0=1, select bank3
  2956  1471  1703               	bsf	3,6	;RP1=1, select bank3
  2957  1472  00B5               	movwf	??_LCD_Clear^(0+384)
  2958  1473                     u5847:	
  2959  1473  0BB5               	decfsz	??_LCD_Clear^(0+384),f
  2960  1474  2C73               	goto	u5847
  2961                           
  2962                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  2963  1475  3006               	movlw	6
  2964  1476  160A  118A  22F5  160A  118A  	fcall	_LCD_WriteCmd
  2965                           
  2966                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2967  147B  303D               	movlw	61
  2968  147C  1683               	bsf	3,5	;RP0=1, select bank3
  2969  147D  1703               	bsf	3,6	;RP1=1, select bank3
  2970  147E  00B5               	movwf	??_LCD_Clear^(0+384)
  2971  147F                     u5857:	
  2972  147F  0BB5               	decfsz	??_LCD_Clear^(0+384),f
  2973  1480  2C7F               	goto	u5857
  2974  1481  0008               	return
  2975  1482                     __end_of_LCD_Clear:	
  2976                           
  2977                           	psect	text13
  2978  12F5                     __ptext13:	
  2979 ;; *************** function _LCD_WriteCmd *****************
  2980 ;; Defined at:
  2981 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  Byte            1    wreg     unsigned char 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  Byte            1    1[BANK3 ] unsigned char 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;		None               void
  2988 ;; Registers used:
  2989 ;;		wreg
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2995 ;;      Params:         0       0       0       0       0
  2996 ;;      Locals:         0       0       0       1       0
  2997 ;;      Temps:          0       0       0       1       0
  2998 ;;      Totals:         0       0       0       2       0
  2999 ;;Total ram usage:        2 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    5
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_LCD_Clear
  3006 ;;		_LCD_Init
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function _LCD_WriteCmd
  3012  12F5                     _LCD_WriteCmd:	
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _LCD_WriteCmd: [wreg]
  3016                           ;LCD_WriteCmd@Byte stored from wreg
  3017  12F5  1683               	bsf	3,5	;RP0=1, select bank3
  3018  12F6  1703               	bsf	3,6	;RP1=1, select bank3
  3019  12F7  00B4               	movwf	LCD_WriteCmd@Byte^(0+384)
  3020                           
  3021                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  3022  12F8  1283               	bcf	3,5	;RP0=0, select bank0
  3023  12F9  1303               	bcf	3,6	;RP1=0, select bank0
  3024  12FA  1009               	bcf	9,0	;volatile
  3025                           
  3026                           ;lcd.c: 36: PORTD = Byte;
  3027  12FB  1683               	bsf	3,5	;RP0=1, select bank3
  3028  12FC  1703               	bsf	3,6	;RP1=1, select bank3
  3029  12FD  0834               	movf	LCD_WriteCmd@Byte^(0+384),w
  3030  12FE  1283               	bcf	3,5	;RP0=0, select bank0
  3031  12FF  1303               	bcf	3,6	;RP1=0, select bank0
  3032  1300  0088               	movwf	8	;volatile
  3033                           
  3034                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3035  1301  1489               	bsf	9,1	;volatile
  3036                           
  3037                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3038  1302  303D               	movlw	61
  3039  1303  1683               	bsf	3,5	;RP0=1, select bank3
  3040  1304  1703               	bsf	3,6	;RP1=1, select bank3
  3041  1305  00B3               	movwf	??_LCD_WriteCmd^(0+384)
  3042  1306                     u5867:	
  3043  1306  0BB3               	decfsz	??_LCD_WriteCmd^(0+384),f
  3044  1307  2B06               	goto	u5867
  3045                           
  3046                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3047  1308  1283               	bcf	3,5	;RP0=0, select bank0
  3048  1309  1303               	bcf	3,6	;RP1=0, select bank0
  3049  130A  1089               	bcf	9,1	;volatile
  3050  130B  0008               	return
  3051  130C                     __end_of_LCD_WriteCmd:	
  3052                           
  3053                           	psect	text14
  3054  12CF                     __ptext14:	
  3055 ;; *************** function _ADC_Init *****************
  3056 ;; Defined at:
  3057 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;		None
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;		None               void
  3064 ;; Registers used:
  3065 ;;		None
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3071 ;;      Params:         0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0
  3074 ;;      Totals:         0       0       0       0       0
  3075 ;;Total ram usage:        0 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; Hardware stack levels required when called:    5
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_main
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           
  3086                           ;psect for function _ADC_Init
  3087  12CF                     _ADC_Init:	
  3088                           
  3089                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  3090                           
  3091                           ;incstack = 0
  3092                           ; Regs used in _ADC_Init: []
  3093  12CF  1683               	bsf	3,5	;RP0=1, select bank1
  3094  12D0  1303               	bcf	3,6	;RP1=0, select bank1
  3095  12D1  179F               	bsf	31,7	;volatile
  3096                           
  3097                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  3098  12D2  159F               	bsf	31,3	;volatile
  3099                           
  3100                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  3101  12D3  151F               	bsf	31,2	;volatile
  3102                           
  3103                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  3104  12D4  149F               	bsf	31,1	;volatile
  3105                           
  3106                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  3107  12D5  101F               	bcf	31,0	;volatile
  3108                           
  3109                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  3110  12D6  1283               	bcf	3,5	;RP0=0, select bank0
  3111  12D7  1303               	bcf	3,6	;RP1=0, select bank0
  3112  12D8  179F               	bsf	31,7	;volatile
  3113                           
  3114                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  3115  12D9  131F               	bcf	31,6	;volatile
  3116                           
  3117                           ;adc.c: 42: PIE1bits.ADIE = 0;
  3118  12DA  1683               	bsf	3,5	;RP0=1, select bank1
  3119  12DB  1303               	bcf	3,6	;RP1=0, select bank1
  3120  12DC  130C               	bcf	12,6	;volatile
  3121                           
  3122                           ;adc.c: 43: PIR1bits.ADIF = 0;
  3123  12DD  1283               	bcf	3,5	;RP0=0, select bank0
  3124  12DE  1303               	bcf	3,6	;RP1=0, select bank0
  3125  12DF  130C               	bcf	12,6	;volatile
  3126  12E0  0008               	return
  3127  12E1                     __end_of_ADC_Init:	
  3128                           
  3129                           	psect	text15
  3130  0E80                     __ptext15:	
  3131 ;; *************** function _ISR *****************
  3132 ;; Defined at:
  3133 ;;		line 322 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;		None               void
  3140 ;; Registers used:
  3141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3147 ;;      Params:         0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0
  3149 ;;      Temps:          0       5       0       0       0
  3150 ;;      Totals:         0       5       0       0       0
  3151 ;;Total ram usage:        5 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    4
  3154 ;; This function calls:
  3155 ;;		_Fuzzy
  3156 ;;		_USART_ReceiveChar
  3157 ;;		_USART_WriteString
  3158 ;;		___lwdiv
  3159 ;;		___wmul
  3160 ;;		_send
  3161 ;;		i1_PWM_DutyCycle2
  3162 ;;		i1_TIMER0_Set
  3163 ;; This function is called by:
  3164 ;;		Interrupt level 1
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _ISR
  3170  0E80                     _ISR:	
  3171                           
  3172                           ;main.c: 325: if (PIR1bits.RCIF)
  3173  0E80  1E8C               	btfss	12,5	;volatile
  3174  0E81  2F8B               	goto	i1l4068
  3175                           
  3176                           ;main.c: 326: {
  3177                           ;main.c: 327: if (USART_ReceiveChar() == '0')
  3178  0E82  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3179  0E87  3A30               	xorlw	48
  3180  0E88  1D03               	skipz
  3181  0E89  2EA2               	goto	i1l3998
  3182                           
  3183                           ;main.c: 328: {
  3184                           ;main.c: 329: USART_WriteString("\n\rfreio\n\r");
  3185  0E8A  303A               	movlw	(STR_1-__stringbase)& (0+255)
  3186  0E8B  160A  118A  2356  120A  158A  	fcall	_USART_WriteString
  3187                           
  3188                           ;main.c: 331: PWM_DutyCycle2(0);
  3189  0E90  3000               	movlw	0
  3190  0E91  00F0               	movwf	i1PWM_DutyCycle2@valor
  3191  0E92  3000               	movlw	0
  3192  0E93  00F1               	movwf	i1PWM_DutyCycle2@valor+1
  3193  0E94  160A  118A  233B  120A  158A  	fcall	i1_PWM_DutyCycle2
  3194                           
  3195                           ;main.c: 332: cruzeiroSet = 'N';
  3196  0E99  304E               	movlw	78
  3197  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0E9C  00E4               	movwf	??_ISR
  3200  0E9D  0864               	movf	??_ISR,w
  3201  0E9E  1683               	bsf	3,5	;RP0=1, select bank1
  3202  0E9F  1303               	bcf	3,6	;RP1=0, select bank1
  3203  0EA0  00E2               	movwf	_cruzeiroSet^(0+128)
  3204                           
  3205                           ;main.c: 333: return;
  3206  0EA1  2FF4               	goto	i1l192
  3207  0EA2                     i1l3998:	
  3208                           
  3209                           ;main.c: 334: }
  3210                           ;main.c: 336: if (USART_ReceiveChar() == '1')
  3211  0EA2  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3212  0EA7  3A31               	xorlw	49
  3213  0EA8  1D03               	skipz
  3214  0EA9  2EB0               	goto	i1l4002
  3215                           
  3216                           ;main.c: 337: {
  3217                           ;main.c: 338: setpointUI = 430;
  3218  0EAA  30AE               	movlw	174
  3219  0EAB  1683               	bsf	3,5	;RP0=1, select bank1
  3220  0EAC  1303               	bcf	3,6	;RP1=0, select bank1
  3221  0EAD  00DA               	movwf	_setpointUI^(0+128)
  3222  0EAE  3001               	movlw	1
  3223  0EAF  00DB               	movwf	(_setpointUI^(0+128)+1)
  3224  0EB0                     i1l4002:	
  3225                           
  3226                           ;main.c: 339: }
  3227                           ;main.c: 341: if (USART_ReceiveChar() == '2')
  3228  0EB0  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3229  0EB5  3A32               	xorlw	50
  3230  0EB6  1D03               	skipz
  3231  0EB7  2EBE               	goto	i1l4006
  3232                           
  3233                           ;main.c: 342: {
  3234                           ;main.c: 343: setpointUI = 520;
  3235  0EB8  3008               	movlw	8
  3236  0EB9  1683               	bsf	3,5	;RP0=1, select bank1
  3237  0EBA  1303               	bcf	3,6	;RP1=0, select bank1
  3238  0EBB  00DA               	movwf	_setpointUI^(0+128)
  3239  0EBC  3002               	movlw	2
  3240  0EBD  00DB               	movwf	(_setpointUI^(0+128)+1)
  3241  0EBE                     i1l4006:	
  3242                           
  3243                           ;main.c: 344: }
  3244                           ;main.c: 346: if (USART_ReceiveChar() == '3')
  3245  0EBE  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3246  0EC3  3A33               	xorlw	51
  3247  0EC4  1D03               	skipz
  3248  0EC5  2ECC               	goto	i1l4010
  3249                           
  3250                           ;main.c: 347: {
  3251                           ;main.c: 348: setpointUI = 760;
  3252  0EC6  30F8               	movlw	248
  3253  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  3255  0EC9  00DA               	movwf	_setpointUI^(0+128)
  3256  0ECA  3002               	movlw	2
  3257  0ECB  00DB               	movwf	(_setpointUI^(0+128)+1)
  3258  0ECC                     i1l4010:	
  3259                           
  3260                           ;main.c: 349: }
  3261                           ;main.c: 351: if (USART_ReceiveChar() == '4')
  3262  0ECC  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3263  0ED1  3A34               	xorlw	52
  3264  0ED2  1D03               	skipz
  3265  0ED3  2EDA               	goto	i1l4014
  3266                           
  3267                           ;main.c: 352: {
  3268                           ;main.c: 353: setpointUI = 890;
  3269  0ED4  307A               	movlw	122
  3270  0ED5  1683               	bsf	3,5	;RP0=1, select bank1
  3271  0ED6  1303               	bcf	3,6	;RP1=0, select bank1
  3272  0ED7  00DA               	movwf	_setpointUI^(0+128)
  3273  0ED8  3003               	movlw	3
  3274  0ED9  00DB               	movwf	(_setpointUI^(0+128)+1)
  3275  0EDA                     i1l4014:	
  3276                           
  3277                           ;main.c: 354: }
  3278                           ;main.c: 356: if (USART_ReceiveChar() == '5')
  3279  0EDA  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3280  0EDF  3A35               	xorlw	53
  3281  0EE0  1D03               	skipz
  3282  0EE1  2EE8               	goto	i1l4018
  3283                           
  3284                           ;main.c: 357: {
  3285                           ;main.c: 358: setpointUI = 1250;
  3286  0EE2  30E2               	movlw	226
  3287  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  3289  0EE5  00DA               	movwf	_setpointUI^(0+128)
  3290  0EE6  3004               	movlw	4
  3291  0EE7  00DB               	movwf	(_setpointUI^(0+128)+1)
  3292  0EE8                     i1l4018:	
  3293                           
  3294                           ;main.c: 359: }
  3295                           ;main.c: 361: if (USART_ReceiveChar() == '6')
  3296  0EE8  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3297  0EED  3A36               	xorlw	54
  3298  0EEE  1D03               	skipz
  3299  0EEF  2EF6               	goto	i1l4022
  3300                           
  3301                           ;main.c: 362: {
  3302                           ;main.c: 363: setpointUI = 2250;
  3303  0EF0  30CA               	movlw	202
  3304  0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  3305  0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  3306  0EF3  00DA               	movwf	_setpointUI^(0+128)
  3307  0EF4  3008               	movlw	8
  3308  0EF5  00DB               	movwf	(_setpointUI^(0+128)+1)
  3309  0EF6                     i1l4022:	
  3310                           
  3311                           ;main.c: 364: }
  3312                           ;main.c: 366: if (USART_ReceiveChar() == '7')
  3313  0EF6  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3314  0EFB  3A37               	xorlw	55
  3315  0EFC  1D03               	skipz
  3316  0EFD  2F04               	goto	i1l4026
  3317                           
  3318                           ;main.c: 367: {
  3319                           ;main.c: 368: setpointUI = 3450;
  3320  0EFE  307A               	movlw	122
  3321  0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  3322  0F00  1303               	bcf	3,6	;RP1=0, select bank1
  3323  0F01  00DA               	movwf	_setpointUI^(0+128)
  3324  0F02  300D               	movlw	13
  3325  0F03  00DB               	movwf	(_setpointUI^(0+128)+1)
  3326  0F04                     i1l4026:	
  3327                           
  3328                           ;main.c: 369: }
  3329                           ;main.c: 371: if (USART_ReceiveChar() == '8')
  3330  0F04  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3331  0F09  3A38               	xorlw	56
  3332  0F0A  1D03               	skipz
  3333  0F0B  2F12               	goto	i1l4030
  3334                           
  3335                           ;main.c: 372: {
  3336                           ;main.c: 373: setpointUI = 4650;
  3337  0F0C  302A               	movlw	42
  3338  0F0D  1683               	bsf	3,5	;RP0=1, select bank1
  3339  0F0E  1303               	bcf	3,6	;RP1=0, select bank1
  3340  0F0F  00DA               	movwf	_setpointUI^(0+128)
  3341  0F10  3012               	movlw	18
  3342  0F11  00DB               	movwf	(_setpointUI^(0+128)+1)
  3343  0F12                     i1l4030:	
  3344                           
  3345                           ;main.c: 374: }
  3346                           ;main.c: 376: if (USART_ReceiveChar() == '9')
  3347  0F12  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3348  0F17  3A39               	xorlw	57
  3349  0F18  1D03               	skipz
  3350  0F19  2F20               	goto	i1l4034
  3351                           
  3352                           ;main.c: 377: {
  3353                           ;main.c: 378: setpointUI = 5400;
  3354  0F1A  3018               	movlw	24
  3355  0F1B  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0F1C  1303               	bcf	3,6	;RP1=0, select bank1
  3357  0F1D  00DA               	movwf	_setpointUI^(0+128)
  3358  0F1E  3015               	movlw	21
  3359  0F1F  00DB               	movwf	(_setpointUI^(0+128)+1)
  3360  0F20                     i1l4034:	
  3361                           
  3362                           ;main.c: 379: }
  3363                           ;main.c: 382: if(USART_ReceiveChar() == 'S' || cruzeiroSet == 'S')
  3364  0F20  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3365  0F25  3A53               	xorlw	83
  3366  0F26  1903               	skipnz
  3367  0F27  2F2E               	goto	i1l4038
  3368  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  3369  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  3370  0F2A  0862               	movf	_cruzeiroSet^(0+128),w
  3371  0F2B  3A53               	xorlw	83
  3372  0F2C  1D03               	skipz
  3373  0F2D  2F31               	goto	i1l4042
  3374  0F2E                     i1l4038:	
  3375                           
  3376                           ;main.c: 383: {
  3377                           ;main.c: 384: setpointUI = antigoUI;
  3378  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  3380  0F30  2F5A               	goto	i1l4054
  3381  0F31                     i1l4042:	
  3382                           ;main.c: 387: }else if(USART_ReceiveChar() == 'R' && cruzeiroSet == 'S')
  3383                           
  3384                           ;main.c: 386: cruzeiroSet = 'S';
  3385                           
  3386                           ;main.c: 385: cruzeiroVel = setpointUI;
  3387                           
  3388  0F31  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3389  0F36  3A52               	xorlw	82
  3390  0F37  1D03               	skipz
  3391  0F38  2F4C               	goto	i1l4050
  3392  0F39  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0F3A  1303               	bcf	3,6	;RP1=0, select bank1
  3394  0F3B  0862               	movf	_cruzeiroSet^(0+128),w
  3395  0F3C  3A53               	xorlw	83
  3396  0F3D  1D03               	skipz
  3397  0F3E  2F4C               	goto	i1l4050
  3398                           
  3399                           ;main.c: 388: {
  3400                           ;main.c: 389: setpointUI += 150;
  3401  0F3F  3096               	movlw	150
  3402  0F40  07DA               	addwf	_setpointUI^(0+128),f
  3403  0F41  1803               	skipnc
  3404  0F42  0ADB               	incf	(_setpointUI+1)^(0+128),f
  3405  0F43  3000               	movlw	0
  3406  0F44  07DB               	addwf	(_setpointUI+1)^(0+128),f
  3407                           
  3408                           ;main.c: 390: cruzeiroVel = setpointUI;
  3409  0F45  085B               	movf	(_setpointUI+1)^(0+128),w
  3410  0F46  01D3               	clrf	(_cruzeiroVel+1)^(0+128)
  3411  0F47  07D3               	addwf	(_cruzeiroVel+1)^(0+128),f
  3412  0F48  085A               	movf	_setpointUI^(0+128),w
  3413  0F49  01D2               	clrf	_cruzeiroVel^(0+128)
  3414  0F4A  07D2               	addwf	_cruzeiroVel^(0+128),f
  3415                           
  3416                           ;main.c: 391: }else if(USART_ReceiveChar() == 'R' && cruzeiroSet == 'N')
  3417  0F4B  2F6E               	goto	i1l4058
  3418  0F4C                     i1l4050:	
  3419  0F4C  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3420  0F51  3A52               	xorlw	82
  3421  0F52  1D03               	skipz
  3422  0F53  2F6E               	goto	i1l4058
  3423  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3424  0F55  1303               	bcf	3,6	;RP1=0, select bank1
  3425  0F56  0862               	movf	_cruzeiroSet^(0+128),w
  3426  0F57  3A4E               	xorlw	78
  3427  0F58  1D03               	skipz
  3428  0F59  2F6E               	goto	i1l4058
  3429  0F5A                     i1l4054:	
  3430                           
  3431                           ;main.c: 392: {
  3432                           ;main.c: 393: setpointUI = antigoUI;
  3433  0F5A  084F               	movf	(_antigoUI+1)^(0+128),w
  3434  0F5B  01DB               	clrf	(_setpointUI+1)^(0+128)
  3435  0F5C  07DB               	addwf	(_setpointUI+1)^(0+128),f
  3436  0F5D  084E               	movf	_antigoUI^(0+128),w
  3437  0F5E  01DA               	clrf	_setpointUI^(0+128)
  3438  0F5F  07DA               	addwf	_setpointUI^(0+128),f
  3439                           
  3440                           ;main.c: 394: cruzeiroVel = setpointUI;
  3441  0F60  085B               	movf	(_setpointUI+1)^(0+128),w
  3442  0F61  01D3               	clrf	(_cruzeiroVel+1)^(0+128)
  3443  0F62  07D3               	addwf	(_cruzeiroVel+1)^(0+128),f
  3444  0F63  085A               	movf	_setpointUI^(0+128),w
  3445  0F64  01D2               	clrf	_cruzeiroVel^(0+128)
  3446  0F65  07D2               	addwf	_cruzeiroVel^(0+128),f
  3447                           
  3448                           ;main.c: 395: cruzeiroSet = 'S';
  3449  0F66  3053               	movlw	83
  3450  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3451  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  3452  0F69  00E4               	movwf	??_ISR
  3453  0F6A  0864               	movf	??_ISR,w
  3454  0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  3455  0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  3456  0F6D  00E2               	movwf	_cruzeiroSet^(0+128)
  3457  0F6E                     i1l4058:	
  3458                           
  3459                           ;main.c: 396: }
  3460                           ;main.c: 399: Fuzzy();
  3461  0F6E  120A  158A  2088  120A  158A  	fcall	_Fuzzy
  3462                           
  3463                           ;main.c: 400: antigoUI = setpointUI;
  3464  0F73  1683               	bsf	3,5	;RP0=1, select bank1
  3465  0F74  1303               	bcf	3,6	;RP1=0, select bank1
  3466  0F75  085B               	movf	(_setpointUI+1)^(0+128),w
  3467  0F76  01CF               	clrf	(_antigoUI+1)^(0+128)
  3468  0F77  07CF               	addwf	(_antigoUI+1)^(0+128),f
  3469  0F78  085A               	movf	_setpointUI^(0+128),w
  3470  0F79  01CE               	clrf	_antigoUI^(0+128)
  3471  0F7A  07CE               	addwf	_antigoUI^(0+128),f
  3472                           
  3473                           ;main.c: 403: if(USART_ReceiveChar() == 'X')
  3474  0F7B  160A  118A  2323  120A  158A  	fcall	_USART_ReceiveChar
  3475  0F80  3A58               	xorlw	88
  3476  0F81  1D03               	skipz
  3477  0F82  2F88               	goto	i1l4066
  3478                           
  3479                           ;main.c: 404: {
  3480                           ;main.c: 405: send();
  3481  0F83  160A  118A  266E  120A  158A  	fcall	_send
  3482  0F88                     i1l4066:	
  3483                           
  3484                           ;main.c: 406: }
  3485                           ;main.c: 408: PIR1bits.RCIF = 0;
  3486  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0F8A  128C               	bcf	12,5	;volatile
  3489  0F8B                     i1l4068:	
  3490                           
  3491                           ;main.c: 409: }
  3492                           ;main.c: 412: if (PIR1bits.ADIF)
  3493  0F8B  1B0C               	btfsc	12,6	;volatile
  3494                           
  3495                           ;main.c: 413: {
  3496                           ;main.c: 417: PIR1bits.ADIF = 0;
  3497  0F8C  130C               	bcf	12,6	;volatile
  3498                           
  3499                           ;main.c: 418: }
  3500                           ;main.c: 422: if (INTCONbits.T0IF)
  3501  0F8D  1D0B               	btfss	11,2	;volatile
  3502  0F8E  2FF0               	goto	i1l4094
  3503                           
  3504                           ;main.c: 423: {
  3505                           ;main.c: 425: TIMER0_Set(238);
  3506  0F8F  30EE               	movlw	238
  3507  0F90  160A  118A  228E  120A  158A  	fcall	i1_TIMER0_Set
  3508                           
  3509                           ;main.c: 428: if (contagens_tm0 < 499)
  3510  0F95  3001               	movlw	1
  3511  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0F97  1303               	bcf	3,6	;RP1=0, select bank1
  3513  0F98  0251               	subwf	(_contagens_tm0+1)^(0+128),w
  3514  0F99  30F3               	movlw	243
  3515  0F9A  1903               	skipnz
  3516  0F9B  0250               	subwf	_contagens_tm0^(0+128),w
  3517  0F9C  1803               	skipnc
  3518  0F9D  2FA8               	goto	i1l4080
  3519                           
  3520                           ;main.c: 429: {
  3521                           ;main.c: 431: contagens_tm0++;
  3522  0F9E  3001               	movlw	1
  3523  0F9F  07D0               	addwf	_contagens_tm0^(0+128),f
  3524  0FA0  1803               	skipnc
  3525  0FA1  0AD1               	incf	(_contagens_tm0+1)^(0+128),f
  3526  0FA2  3000               	movlw	0
  3527  0FA3  07D1               	addwf	(_contagens_tm0+1)^(0+128),f
  3528                           
  3529                           ;main.c: 434: PORTBbits.RB6 = 1;
  3530  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0FA6  1706               	bsf	6,6	;volatile
  3533                           
  3534                           ;main.c: 435: }
  3535  0FA7  2FEF               	goto	i1l4092
  3536  0FA8                     i1l4080:	
  3537                           
  3538                           ;main.c: 436: else
  3539                           ;main.c: 437: {
  3540                           ;main.c: 439: contagens_tm0 = 0;
  3541  0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  3542  0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  3543  0FAA  01D0               	clrf	_contagens_tm0^(0+128)
  3544  0FAB  01D1               	clrf	(_contagens_tm0+1)^(0+128)
  3545                           
  3546                           ;main.c: 442: pulsos = (TMR1H << 8) + TMR1L;
  3547  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  3549  0FAE  080F               	movf	15,w	;volatile
  3550  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0FB0  1303               	bcf	3,6	;RP1=0, select bank1
  3552  0FB1  01D7               	clrf	(_pulsos+1)^(0+128)
  3553  0FB2  07D7               	addwf	(_pulsos+1)^(0+128),f
  3554  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3555  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3556  0FB5  080E               	movf	14,w	;volatile
  3557  0FB6  1683               	bsf	3,5	;RP0=1, select bank1
  3558  0FB7  1303               	bcf	3,6	;RP1=0, select bank1
  3559  0FB8  01D6               	clrf	_pulsos^(0+128)
  3560  0FB9  07D6               	addwf	_pulsos^(0+128),f
  3561                           
  3562                           ;main.c: 443: rpm = ((pulsos / pas_cooler) * 120);
  3563  0FBA  085F               	movf	(_pas_cooler+1)^(0+128),w
  3564  0FBB  01F1               	clrf	___lwdiv@divisor+1
  3565  0FBC  07F1               	addwf	___lwdiv@divisor+1,f
  3566  0FBD  085E               	movf	_pas_cooler^(0+128),w
  3567  0FBE  01F0               	clrf	___lwdiv@divisor
  3568  0FBF  07F0               	addwf	___lwdiv@divisor,f
  3569  0FC0  0857               	movf	(_pulsos+1)^(0+128),w
  3570  0FC1  01F3               	clrf	___lwdiv@dividend+1
  3571  0FC2  07F3               	addwf	___lwdiv@dividend+1,f
  3572  0FC3  0856               	movf	_pulsos^(0+128),w
  3573  0FC4  01F2               	clrf	___lwdiv@dividend
  3574  0FC5  07F2               	addwf	___lwdiv@dividend,f
  3575  0FC6  160A  118A  24B3  120A  158A  	fcall	___lwdiv
  3576  0FCB  0871               	movf	?___lwdiv+1,w
  3577  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3578  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  3579  0FCE  01BB               	clrf	___wmul@multiplier+1
  3580  0FCF  07BB               	addwf	___wmul@multiplier+1,f
  3581  0FD0  0870               	movf	?___lwdiv,w
  3582  0FD1  01BA               	clrf	___wmul@multiplier
  3583  0FD2  07BA               	addwf	___wmul@multiplier,f
  3584  0FD3  3078               	movlw	120
  3585  0FD4  00BC               	movwf	___wmul@multiplicand
  3586  0FD5  3000               	movlw	0
  3587  0FD6  00BD               	movwf	___wmul@multiplicand+1
  3588  0FD7  160A  118A  2434  120A  158A  	fcall	___wmul
  3589  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  3590  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  3591  0FDE  083B               	movf	?___wmul+1,w
  3592  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3593  0FE0  1303               	bcf	3,6	;RP1=0, select bank1
  3594  0FE1  01D9               	clrf	(_rpm+1)^(0+128)
  3595  0FE2  07D9               	addwf	(_rpm+1)^(0+128),f
  3596  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0FE5  083A               	movf	?___wmul,w
  3599  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  3600  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  3601  0FE8  01D8               	clrf	_rpm^(0+128)
  3602  0FE9  07D8               	addwf	_rpm^(0+128),f
  3603                           
  3604                           ;main.c: 450: TMR1L = 0x00;
  3605  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3607  0FEC  018E               	clrf	14	;volatile
  3608                           
  3609                           ;main.c: 451: TMR1H = 0x00;
  3610  0FED  018F               	clrf	15	;volatile
  3611                           
  3612                           ;main.c: 454: PORTBbits.RB6 = 0;
  3613  0FEE  1306               	bcf	6,6	;volatile
  3614  0FEF                     i1l4092:	
  3615                           
  3616                           ;main.c: 455: }
  3617                           ;main.c: 458: INTCONbits.T0IF = 0;
  3618  0FEF  110B               	bcf	11,2	;volatile
  3619  0FF0                     i1l4094:	
  3620                           
  3621                           ;main.c: 459: }
  3622                           ;main.c: 462: if (PIR1bits.TMR1IF)
  3623  0FF0  180C               	btfsc	12,0	;volatile
  3624                           
  3625                           ;main.c: 463: {
  3626                           ;main.c: 467: PIR1bits.TMR1IF = 0;
  3627  0FF1  100C               	bcf	12,0	;volatile
  3628                           
  3629                           ;main.c: 468: }
  3630                           ;main.c: 471: if (PIR1bits.SSPIF)
  3631  0FF2  198C               	btfsc	12,3	;volatile
  3632                           
  3633                           ;main.c: 472: {
  3634                           ;main.c: 476: PIR1bits.SSPIF = 0;
  3635  0FF3  118C               	bcf	12,3	;volatile
  3636  0FF4                     i1l192:	
  3637  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0FF5  0868               	movf	??_ISR+4,w
  3639  0FF6  00FF               	movwf	127
  3640  0FF7  0867               	movf	??_ISR+3,w
  3641  0FF8  008A               	movwf	10
  3642  0FF9  0866               	movf	??_ISR+2,w
  3643  0FFA  0084               	movwf	4
  3644  0FFB  0E65               	swapf	(??_ISR+1)^0,w
  3645  0FFC  0083               	movwf	3
  3646  0FFD  0EFE               	swapf	126,f
  3647  0FFE  0E7E               	swapf	126,w
  3648  0FFF  0009               	retfie
  3649  1000                     __end_of_ISR:	
  3650                           
  3651                           	psect	intentry
  3652  0004                     __pintentry:	
  3653                           ;incstack = 0
  3654                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3655                           
  3656  0004                     interrupt_function:	
  3657  007E                     saved_w	set	btemp
  3658  0004  00FE               	movwf	btemp
  3659  0005  0E03               	swapf	3,w
  3660  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3662  0008  00E5               	movwf	??_ISR+1
  3663  0009  0804               	movf	4,w
  3664  000A  00E6               	movwf	??_ISR+2
  3665  000B  080A               	movf	10,w
  3666  000C  00E7               	movwf	??_ISR+3
  3667  000D  087F               	movf	btemp+1,w
  3668  000E  00E8               	movwf	??_ISR+4
  3669  000F  120A  158A  2E80   	ljmp	_ISR
  3670                           
  3671                           	psect	text16
  3672  128E                     __ptext16:	
  3673 ;; *************** function i1_TIMER0_Set *****************
  3674 ;; Defined at:
  3675 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  contagens       1    wreg     unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  contagens       1    0[COMMON] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;		None               void
  3682 ;; Registers used:
  3683 ;;		wreg
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3689 ;;      Params:         0       0       0       0       0
  3690 ;;      Locals:         1       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0
  3692 ;;      Totals:         1       0       0       0       0
  3693 ;;Total ram usage:        1 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; This function calls:
  3696 ;;		Nothing
  3697 ;; This function is called by:
  3698 ;;		_ISR
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           
  3703                           ;psect for function i1_TIMER0_Set
  3704  128E                     i1_TIMER0_Set:	
  3705                           
  3706                           ;incstack = 0
  3707                           ; Regs used in i1_TIMER0_Set: [wreg]
  3708                           ;i1TIMER0_Set@contagens stored from wreg
  3709  128E  00F0               	movwf	i1TIMER0_Set@contagens
  3710                           
  3711                           ;timers.c: 22: TMR0 = contagens;
  3712  128F  0870               	movf	i1TIMER0_Set@contagens,w
  3713  1290  1283               	bcf	3,5	;RP0=0, select bank0
  3714  1291  1303               	bcf	3,6	;RP1=0, select bank0
  3715  1292  0081               	movwf	1	;volatile
  3716  1293  0008               	return
  3717  1294                     __end_ofi1_TIMER0_Set:	
  3718                           
  3719                           	psect	text17
  3720  166E                     __ptext17:	
  3721 ;; *************** function _send *****************
  3722 ;; Defined at:
  3723 ;;		line 119 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  index           1    3[COMMON] unsigned char 
  3728 ;;  checksum        1    2[COMMON] unsigned char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;		None               void
  3731 ;; Registers used:
  3732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       0       0       0       0
  3739 ;;      Locals:         2       0       0       0       0
  3740 ;;      Temps:          1       0       0       0       0
  3741 ;;      Totals:         3       0       0       0       0
  3742 ;;Total ram usage:        3 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    1
  3745 ;; This function calls:
  3746 ;;		_USART_WriteChar
  3747 ;; This function is called by:
  3748 ;;		_ISR
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           
  3753                           ;psect for function _send
  3754  166E                     _send:	
  3755                           
  3756                           ;main.c: 122: buffer[0] = '#';
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3760  166E  3023               	movlw	35
  3761  166F  00F1               	movwf	??_send
  3762  1670  0871               	movf	??_send,w
  3763  1671  1683               	bsf	3,5	;RP0=1, select bank3
  3764  1672  1703               	bsf	3,6	;RP1=1, select bank3
  3765  1673  0090               	movwf	_buffer^(0+384)
  3766                           
  3767                           ;main.c: 123: buffer[1] = '$';
  3768  1674  3024               	movlw	36
  3769  1675  00F1               	movwf	??_send
  3770  1676  0871               	movf	??_send,w
  3771  1677  0091               	movwf	(_buffer^(0+384)+1)
  3772                           
  3773                           ;main.c: 124: buffer[2] = ':';
  3774  1678  303A               	movlw	58
  3775  1679  00F1               	movwf	??_send
  3776  167A  0871               	movf	??_send,w
  3777  167B  0092               	movwf	(_buffer^(0+384)+2)
  3778                           
  3779                           ;main.c: 128: buffer[3] = (rpm >> 8) & 0xFF;
  3780  167C  1683               	bsf	3,5	;RP0=1, select bank1
  3781  167D  1303               	bcf	3,6	;RP1=0, select bank1
  3782  167E  0859               	movf	(_rpm+1)^(0+128),w
  3783  167F  00F1               	movwf	??_send
  3784  1680  0871               	movf	??_send,w
  3785  1681  1683               	bsf	3,5	;RP0=1, select bank3
  3786  1682  1703               	bsf	3,6	;RP1=1, select bank3
  3787  1683  0093               	movwf	(_buffer^(0+384)+3)
  3788                           
  3789                           ;main.c: 129: buffer[4] = rpm & 0xFF;
  3790  1684  1683               	bsf	3,5	;RP0=1, select bank1
  3791  1685  1303               	bcf	3,6	;RP1=0, select bank1
  3792  1686  0858               	movf	_rpm^(0+128),w
  3793  1687  00F1               	movwf	??_send
  3794  1688  0871               	movf	??_send,w
  3795  1689  1683               	bsf	3,5	;RP0=1, select bank3
  3796  168A  1703               	bsf	3,6	;RP1=1, select bank3
  3797  168B  0094               	movwf	(_buffer^(0+384)+4)
  3798                           
  3799                           ;main.c: 130: buffer[5] = 'V';
  3800  168C  3056               	movlw	86
  3801  168D  00F1               	movwf	??_send
  3802  168E  0871               	movf	??_send,w
  3803  168F  0095               	movwf	(_buffer^(0+384)+5)
  3804                           
  3805                           ;main.c: 133: buffer[6] = (setpointUI >> 8) & 0xFF;
  3806  1690  1683               	bsf	3,5	;RP0=1, select bank1
  3807  1691  1303               	bcf	3,6	;RP1=0, select bank1
  3808  1692  085B               	movf	(_setpointUI+1)^(0+128),w
  3809  1693  00F1               	movwf	??_send
  3810  1694  0871               	movf	??_send,w
  3811  1695  1683               	bsf	3,5	;RP0=1, select bank3
  3812  1696  1703               	bsf	3,6	;RP1=1, select bank3
  3813  1697  0096               	movwf	(_buffer^(0+384)+6)
  3814                           
  3815                           ;main.c: 134: buffer[7] = setpointUI & 0xFF;
  3816  1698  1683               	bsf	3,5	;RP0=1, select bank1
  3817  1699  1303               	bcf	3,6	;RP1=0, select bank1
  3818  169A  085A               	movf	_setpointUI^(0+128),w
  3819  169B  00F1               	movwf	??_send
  3820  169C  0871               	movf	??_send,w
  3821  169D  1683               	bsf	3,5	;RP0=1, select bank3
  3822  169E  1703               	bsf	3,6	;RP1=1, select bank3
  3823  169F  0097               	movwf	(_buffer^(0+384)+7)
  3824                           
  3825                           ;main.c: 135: buffer[8] = 'S';
  3826  16A0  3053               	movlw	83
  3827  16A1  00F1               	movwf	??_send
  3828  16A2  0871               	movf	??_send,w
  3829  16A3  0098               	movwf	(_buffer^(0+384)+8)
  3830                           
  3831                           ;main.c: 138: buffer[9] = (deltaV >> 8) & 0xFF;
  3832  16A4  1683               	bsf	3,5	;RP0=1, select bank1
  3833  16A5  1303               	bcf	3,6	;RP1=0, select bank1
  3834  16A6  0855               	movf	(_deltaV+1)^(0+128),w
  3835  16A7  00F1               	movwf	??_send
  3836  16A8  0871               	movf	??_send,w
  3837  16A9  1683               	bsf	3,5	;RP0=1, select bank3
  3838  16AA  1703               	bsf	3,6	;RP1=1, select bank3
  3839  16AB  0099               	movwf	(_buffer^(0+384)+9)
  3840                           
  3841                           ;main.c: 139: buffer[10] = deltaV & 0xFF;
  3842  16AC  1683               	bsf	3,5	;RP0=1, select bank1
  3843  16AD  1303               	bcf	3,6	;RP1=0, select bank1
  3844  16AE  0854               	movf	_deltaV^(0+128),w
  3845  16AF  00F1               	movwf	??_send
  3846  16B0  0871               	movf	??_send,w
  3847  16B1  1683               	bsf	3,5	;RP0=1, select bank3
  3848  16B2  1703               	bsf	3,6	;RP1=1, select bank3
  3849  16B3  009A               	movwf	(_buffer^(0+384)+10)
  3850                           
  3851                           ;main.c: 140: buffer[11] = 'S';
  3852  16B4  3053               	movlw	83
  3853  16B5  00F1               	movwf	??_send
  3854  16B6  0871               	movf	??_send,w
  3855  16B7  009B               	movwf	(_buffer^(0+384)+11)
  3856                           
  3857                           ;main.c: 142: unsigned char checksum = 0x00;
  3858  16B8  01F2               	clrf	send@checksum
  3859                           
  3860                           ;main.c: 143: for (unsigned char index = 0; index < 12; index++)
  3861  16B9  01F3               	clrf	send@index
  3862  16BA  300C               	movlw	12
  3863  16BB  0273               	subwf	send@index,w
  3864  16BC  1803               	btfsc	3,0
  3865  16BD  2ED8               	goto	i1l2538
  3866  16BE                     i1l2530:	
  3867                           
  3868                           ;main.c: 144: {
  3869                           ;main.c: 145: USART_WriteChar(buffer[index]);
  3870  16BE  0873               	movf	send@index,w
  3871  16BF  3E90               	addlw	_buffer& (0+255)
  3872  16C0  0084               	movwf	4
  3873  16C1  1783               	bsf	3,7	;select IRP bank3
  3874  16C2  0800               	movf	0,w
  3875  16C3  160A  118A  2294  160A  118A  	fcall	_USART_WriteChar
  3876                           
  3877                           ;main.c: 146: checksum ^= buffer[index];
  3878  16C8  0873               	movf	send@index,w
  3879  16C9  3E90               	addlw	_buffer& (0+255)
  3880  16CA  0084               	movwf	4
  3881  16CB  1783               	bsf	3,7	;select IRP bank3
  3882  16CC  0800               	movf	0,w
  3883  16CD  00F1               	movwf	??_send
  3884  16CE  0871               	movf	??_send,w
  3885  16CF  06F2               	xorwf	send@checksum,f
  3886  16D0  3001               	movlw	1
  3887  16D1  00F1               	movwf	??_send
  3888  16D2  0871               	movf	??_send,w
  3889  16D3  07F3               	addwf	send@index,f
  3890  16D4  300C               	movlw	12
  3891  16D5  0273               	subwf	send@index,w
  3892  16D6  1C03               	skipc
  3893  16D7  2EBE               	goto	i1l2530
  3894  16D8                     i1l2538:	
  3895                           
  3896                           ;main.c: 147: }
  3897                           ;main.c: 148: buffer[12] = checksum;
  3898  16D8  0872               	movf	send@checksum,w
  3899  16D9  00F1               	movwf	??_send
  3900  16DA  0871               	movf	??_send,w
  3901  16DB  1683               	bsf	3,5	;RP0=1, select bank3
  3902  16DC  1703               	bsf	3,6	;RP1=1, select bank3
  3903  16DD  009C               	movwf	(_buffer^(0+384)+12)
  3904                           
  3905                           ;main.c: 149: USART_WriteChar(buffer[12]);
  3906  16DE  081C               	movf	(_buffer^(0+384)+12),w
  3907  16DF  160A  118A  2294   	fcall	_USART_WriteChar
  3908  16E2  0008               	return
  3909  16E3                     __end_of_send:	
  3910                           
  3911                           	psect	text18
  3912  14B3                     __ptext18:	
  3913 ;; *************** function ___lwdiv *****************
  3914 ;; Defined at:
  3915 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  divisor         2    0[COMMON] unsigned int 
  3918 ;;  dividend        2    2[COMMON] unsigned int 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  quotient        2    5[COMMON] unsigned int 
  3921 ;;  counter         1    7[COMMON] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  2    0[COMMON] unsigned int 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         4       0       0       0       0
  3932 ;;      Locals:         3       0       0       0       0
  3933 ;;      Temps:          1       0       0       0       0
  3934 ;;      Totals:         8       0       0       0       0
  3935 ;;Total ram usage:        8 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_ISR
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function ___lwdiv
  3946  14B3                     ___lwdiv:	
  3947                           
  3948                           ;incstack = 0
  3949                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3950  14B3  01F5               	clrf	___lwdiv@quotient
  3951  14B4  01F6               	clrf	___lwdiv@quotient+1
  3952  14B5  0871               	movf	___lwdiv@divisor+1,w
  3953  14B6  0470               	iorwf	___lwdiv@divisor,w
  3954  14B7  1903               	skipnz
  3955  14B8  2CEA               	goto	i1l2870
  3956  14B9  01F7               	clrf	___lwdiv@counter
  3957  14BA  0AF7               	incf	___lwdiv@counter,f
  3958  14BB                     i1l2858:	
  3959  14BB  1BF1               	btfsc	___lwdiv@divisor+1,7
  3960  14BC  2CC9               	goto	i1l2860
  3961  14BD  3001               	movlw	1
  3962  14BE                     u335_25:	
  3963  14BE  1003               	clrc
  3964  14BF  0DF0               	rlf	___lwdiv@divisor,f
  3965  14C0  0DF1               	rlf	___lwdiv@divisor+1,f
  3966  14C1  3EFF               	addlw	-1
  3967  14C2  1D03               	skipz
  3968  14C3  2CBE               	goto	u335_25
  3969  14C4  3001               	movlw	1
  3970  14C5  00F4               	movwf	??___lwdiv
  3971  14C6  0874               	movf	??___lwdiv,w
  3972  14C7  07F7               	addwf	___lwdiv@counter,f
  3973  14C8  2CBB               	goto	i1l2858
  3974  14C9                     i1l2860:	
  3975  14C9  3001               	movlw	1
  3976  14CA                     u337_25:	
  3977  14CA  1003               	clrc
  3978  14CB  0DF5               	rlf	___lwdiv@quotient,f
  3979  14CC  0DF6               	rlf	___lwdiv@quotient+1,f
  3980  14CD  3EFF               	addlw	-1
  3981  14CE  1D03               	skipz
  3982  14CF  2CCA               	goto	u337_25
  3983  14D0  0871               	movf	___lwdiv@divisor+1,w
  3984  14D1  0273               	subwf	___lwdiv@dividend+1,w
  3985  14D2  1D03               	skipz
  3986  14D3  2CD6               	goto	u338_25
  3987  14D4  0870               	movf	___lwdiv@divisor,w
  3988  14D5  0272               	subwf	___lwdiv@dividend,w
  3989  14D6                     u338_25:	
  3990  14D6  1C03               	skipc
  3991  14D7  2CDF               	goto	i1l2866
  3992  14D8  0870               	movf	___lwdiv@divisor,w
  3993  14D9  02F2               	subwf	___lwdiv@dividend,f
  3994  14DA  0871               	movf	___lwdiv@divisor+1,w
  3995  14DB  1C03               	skipc
  3996  14DC  03F3               	decf	___lwdiv@dividend+1,f
  3997  14DD  02F3               	subwf	___lwdiv@dividend+1,f
  3998  14DE  1475               	bsf	___lwdiv@quotient,0
  3999  14DF                     i1l2866:	
  4000  14DF  3001               	movlw	1
  4001  14E0                     u339_25:	
  4002  14E0  1003               	clrc
  4003  14E1  0CF1               	rrf	___lwdiv@divisor+1,f
  4004  14E2  0CF0               	rrf	___lwdiv@divisor,f
  4005  14E3  3EFF               	addlw	-1
  4006  14E4  1D03               	skipz
  4007  14E5  2CE0               	goto	u339_25
  4008  14E6  3001               	movlw	1
  4009  14E7  02F7               	subwf	___lwdiv@counter,f
  4010  14E8  1D03               	btfss	3,2
  4011  14E9  2CC9               	goto	i1l2860
  4012  14EA                     i1l2870:	
  4013  14EA  0876               	movf	___lwdiv@quotient+1,w
  4014  14EB  01F1               	clrf	?___lwdiv+1
  4015  14EC  07F1               	addwf	?___lwdiv+1,f
  4016  14ED  0875               	movf	___lwdiv@quotient,w
  4017  14EE  01F0               	clrf	?___lwdiv
  4018  14EF  07F0               	addwf	?___lwdiv,f
  4019  14F0  0008               	return
  4020  14F1                     __end_of___lwdiv:	
  4021                           
  4022                           	psect	text19
  4023  1323                     __ptext19:	
  4024 ;; *************** function _USART_ReceiveChar *****************
  4025 ;; Defined at:
  4026 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  byte            1    4[COMMON] unsigned char 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      unsigned char 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4040 ;;      Params:         0       0       0       0       0
  4041 ;;      Locals:         1       0       0       0       0
  4042 ;;      Temps:          1       0       0       0       0
  4043 ;;      Totals:         2       0       0       0       0
  4044 ;;Total ram usage:        2 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    2
  4047 ;; This function calls:
  4048 ;;		_USART_WriteString
  4049 ;; This function is called by:
  4050 ;;		_ISR
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           
  4055                           ;psect for function _USART_ReceiveChar
  4056  1323                     _USART_ReceiveChar:	
  4057                           
  4058                           ;usart.c: 65: unsigned char byte;
  4059                           ;usart.c: 67: if (!OERR)
  4060                           
  4061                           ;incstack = 0
  4062                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4063  1323  1283               	bcf	3,5	;RP0=0, select bank0
  4064  1324  1303               	bcf	3,6	;RP1=0, select bank0
  4065  1325  1898               	btfsc	24,1	;volatile
  4066  1326  2B2C               	goto	i1l2700
  4067                           
  4068                           ;usart.c: 68: {
  4069                           ;usart.c: 69: byte = RCREG;
  4070  1327  081A               	movf	26,w	;volatile
  4071  1328  00F3               	movwf	??_USART_ReceiveChar
  4072  1329  0873               	movf	??_USART_ReceiveChar,w
  4073  132A  00F4               	movwf	USART_ReceiveChar@byte
  4074  132B  2B38               	goto	i1l2708
  4075  132C                     i1l2700:	
  4076                           ;usart.c: 71: }
  4077                           
  4078                           ;usart.c: 70: PIR1bits.RCIF = 0;
  4079                           
  4080                           
  4081                           ;usart.c: 72: else
  4082                           ;usart.c: 73: {
  4083                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  4084  132C  3001               	movlw	(STR_4-__stringbase)& (0+255)
  4085  132D  160A  118A  2356   	fcall	_USART_WriteString
  4086                           
  4087                           ;usart.c: 76: RCSTAbits.CREN = 0;
  4088  1330  1283               	bcf	3,5	;RP0=0, select bank0
  4089  1331  1303               	bcf	3,6	;RP1=0, select bank0
  4090  1332  1218               	bcf	24,4	;volatile
  4091                           
  4092                           ;usart.c: 77: byte = RCREG;
  4093  1333  081A               	movf	26,w	;volatile
  4094  1334  00F3               	movwf	??_USART_ReceiveChar
  4095  1335  0873               	movf	??_USART_ReceiveChar,w
  4096  1336  00F4               	movwf	USART_ReceiveChar@byte
  4097                           
  4098                           ;usart.c: 78: RCSTAbits.CREN = 1;
  4099  1337  1618               	bsf	24,4	;volatile
  4100  1338                     i1l2708:	
  4101                           
  4102                           ;usart.c: 79: PIR1bits.RCIF = 0;
  4103  1338  128C               	bcf	12,5	;volatile
  4104                           
  4105                           ;usart.c: 80: }
  4106                           ;usart.c: 82: return(byte);
  4107  1339  0874               	movf	USART_ReceiveChar@byte,w
  4108  133A  0008               	return
  4109  133B                     __end_of_USART_ReceiveChar:	
  4110                           
  4111                           	psect	text20
  4112  1356                     __ptext20:	
  4113 ;; *************** function _USART_WriteString *****************
  4114 ;; Defined at:
  4115 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  str             1    wreg     PTR const unsigned char 
  4118 ;;		 -> STR_4(40), STR_1(10), 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  str             1    2[COMMON] PTR const unsigned char 
  4121 ;;		 -> STR_4(40), STR_1(10), 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;		None               void
  4124 ;; Registers used:
  4125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4131 ;;      Params:         0       0       0       0       0
  4132 ;;      Locals:         1       0       0       0       0
  4133 ;;      Temps:          1       0       0       0       0
  4134 ;;      Totals:         2       0       0       0       0
  4135 ;;Total ram usage:        2 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    1
  4138 ;; This function calls:
  4139 ;;		_USART_WriteChar
  4140 ;; This function is called by:
  4141 ;;		_ISR
  4142 ;;		_USART_ReceiveChar
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           
  4147                           ;psect for function _USART_WriteString
  4148  1356                     _USART_WriteString:	
  4149                           
  4150                           ;incstack = 0
  4151                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4152                           ;USART_WriteString@str stored from wreg
  4153  1356  00F2               	movwf	USART_WriteString@str
  4154  1357                     i1l2326:	
  4155                           ;usart.c: 54: while(*str != '\0')
  4156                           
  4157  1357  0872               	movf	USART_WriteString@str,w
  4158  1358  0084               	movwf	4
  4159  1359  160A  118A  200A  160A  118A  	fcall	stringdir
  4160  135E  3800               	iorlw	0
  4161  135F  1903               	btfsc	3,2
  4162  1360  0008               	return
  4163                           
  4164                           ;usart.c: 55: {
  4165                           ;usart.c: 56: USART_WriteChar(*str);
  4166  1361  0872               	movf	USART_WriteString@str,w
  4167  1362  0084               	movwf	4
  4168  1363  160A  118A  200A  160A  118A  	fcall	stringdir
  4169  1368  160A  118A  2294  160A  118A  	fcall	_USART_WriteChar
  4170                           
  4171                           ;usart.c: 57: str++;
  4172  136D  3001               	movlw	1
  4173  136E  00F1               	movwf	??_USART_WriteString
  4174  136F  0871               	movf	??_USART_WriteString,w
  4175  1370  07F2               	addwf	USART_WriteString@str,f
  4176  1371  2B57               	goto	i1l2326
  4177  1372                     __end_of_USART_WriteString:	
  4178                           
  4179                           	psect	text21
  4180  1294                     __ptext21:	
  4181 ;; *************** function _USART_WriteChar *****************
  4182 ;; Defined at:
  4183 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  byte            1    wreg     unsigned char 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  byte            1    0[COMMON] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;		None               void
  4190 ;; Registers used:
  4191 ;;		wreg
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4197 ;;      Params:         0       0       0       0       0
  4198 ;;      Locals:         1       0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0
  4200 ;;      Totals:         1       0       0       0       0
  4201 ;;Total ram usage:        1 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_send
  4207 ;;		_USART_WriteString
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _USART_WriteChar
  4213  1294                     _USART_WriteChar:	
  4214                           
  4215                           ;incstack = 0
  4216                           ; Regs used in _USART_WriteChar: [wreg]
  4217                           ;USART_WriteChar@byte stored from wreg
  4218  1294  00F0               	movwf	USART_WriteChar@byte
  4219  1295                     i1l243:	
  4220                           ;usart.c: 46: while(!PIR1bits.TXIF);
  4221                           
  4222  1295  1283               	bcf	3,5	;RP0=0, select bank0
  4223  1296  1303               	bcf	3,6	;RP1=0, select bank0
  4224  1297  1E0C               	btfss	12,4	;volatile
  4225  1298  2A95               	goto	i1l243
  4226                           
  4227                           ;usart.c: 47: TXREG = byte;
  4228  1299  0870               	movf	USART_WriteChar@byte,w
  4229  129A  0099               	movwf	25	;volatile
  4230  129B  0008               	return
  4231  129C                     __end_of_USART_WriteChar:	
  4232                           
  4233                           	psect	text22
  4234  0888                     __ptext22:	
  4235 ;; *************** function _Fuzzy *****************
  4236 ;; Defined at:
  4237 ;;		line 174 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  a               2   16[BANK1 ] int 
  4242 ;;  a               2   14[BANK1 ] int 
  4243 ;;  a               2   12[BANK1 ] int 
  4244 ;;  a               2   10[BANK1 ] int 
  4245 ;;  a               2   26[BANK1 ] int 
  4246 ;;  x               3   31[BANK1 ] float 
  4247 ;;  rule            3   28[BANK1 ] float 
  4248 ;;  total_area      3   23[BANK1 ] float 
  4249 ;;  soma            3   20[BANK1 ] float 
  4250 ;;  reajuste        3    5[BANK1 ] float 
  4251 ;;  delta           2   18[BANK1 ] int 
  4252 ;; Return value:  Size  Location     Type
  4253 ;;		None               void
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4261 ;;      Params:         0       0       0       0       0
  4262 ;;      Locals:         0       0      34       0       0
  4263 ;;      Temps:          0       2       0       0       0
  4264 ;;      Totals:         0       2      34       0       0
  4265 ;;Total ram usage:       36 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    3
  4268 ;; This function calls:
  4269 ;;		___awtoft
  4270 ;;		___ftadd
  4271 ;;		___ftdiv
  4272 ;;		___ftge
  4273 ;;		___ftmul
  4274 ;;		___ftneg
  4275 ;;		___fttol
  4276 ;;		___lwtoft
  4277 ;;		___wmul
  4278 ;;		_abs
  4279 ;;		_maximo
  4280 ;;		_minimo
  4281 ;;		_trapmf
  4282 ;;		i1_PWM_DutyCycle2
  4283 ;; This function is called by:
  4284 ;;		_ISR
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           
  4289                           ;psect for function _Fuzzy
  4290  0888                     _Fuzzy:	
  4291                           
  4292                           ;main.c: 193: deltaV = minimo(abs(setpointUI - rpm), 2000);
  4293                           
  4294                           ;incstack = 0
  4295                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4296  0888  3000               	movlw	0
  4297  0889  1283               	bcf	3,5	;RP0=0, select bank0
  4298  088A  1303               	bcf	3,6	;RP1=0, select bank0
  4299  088B  00A3               	movwf	minimo@b
  4300  088C  30FA               	movlw	250
  4301  088D  00A4               	movwf	minimo@b+1
  4302  088E  3044               	movlw	68
  4303  088F  00A5               	movwf	minimo@b+2
  4304  0890  1683               	bsf	3,5	;RP0=1, select bank1
  4305  0891  1303               	bcf	3,6	;RP1=0, select bank1
  4306  0892  0958               	comf	_rpm^(0+128),w
  4307  0893  1283               	bcf	3,5	;RP0=0, select bank0
  4308  0894  1303               	bcf	3,6	;RP1=0, select bank0
  4309  0895  00E2               	movwf	??_Fuzzy
  4310  0896  1683               	bsf	3,5	;RP0=1, select bank1
  4311  0897  1303               	bcf	3,6	;RP1=0, select bank1
  4312  0898  0959               	comf	(_rpm+1)^(0+128),w
  4313  0899  1283               	bcf	3,5	;RP0=0, select bank0
  4314  089A  1303               	bcf	3,6	;RP1=0, select bank0
  4315  089B  00E3               	movwf	??_Fuzzy+1
  4316  089C  0AE2               	incf	??_Fuzzy,f
  4317  089D  1903               	skipnz
  4318  089E  0AE3               	incf	??_Fuzzy+1,f
  4319  089F  1683               	bsf	3,5	;RP0=1, select bank1
  4320  08A0  1303               	bcf	3,6	;RP1=0, select bank1
  4321  08A1  085A               	movf	_setpointUI^(0+128),w
  4322  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  4323  08A3  1303               	bcf	3,6	;RP1=0, select bank0
  4324  08A4  0762               	addwf	??_Fuzzy,w
  4325  08A5  00F0               	movwf	abs@a
  4326  08A6  1683               	bsf	3,5	;RP0=1, select bank1
  4327  08A7  1303               	bcf	3,6	;RP1=0, select bank1
  4328  08A8  085B               	movf	(_setpointUI+1)^(0+128),w
  4329  08A9  1803               	skipnc
  4330  08AA  0A5B               	incf	(_setpointUI+1)^(0+128),w
  4331  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  4332  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  4333  08AD  0763               	addwf	??_Fuzzy+1,w
  4334  08AE  00F1               	movwf	abs@a+1
  4335  08AF  160A  118A  22C1  120A  158A  	fcall	_abs
  4336  08B4  0871               	movf	?_abs+1,w
  4337  08B5  01F9               	clrf	___awtoft@c+1
  4338  08B6  07F9               	addwf	___awtoft@c+1,f
  4339  08B7  0870               	movf	?_abs,w
  4340  08B8  01F8               	clrf	___awtoft@c
  4341  08B9  07F8               	addwf	___awtoft@c,f
  4342  08BA  160A  118A  23CE  120A  158A  	fcall	___awtoft
  4343  08BF  0878               	movf	?___awtoft,w
  4344  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  4345  08C1  1303               	bcf	3,6	;RP1=0, select bank0
  4346  08C2  00A0               	movwf	minimo@a
  4347  08C3  0879               	movf	?___awtoft+1,w
  4348  08C4  00A1               	movwf	minimo@a+1
  4349  08C5  087A               	movf	?___awtoft+2,w
  4350  08C6  00A2               	movwf	minimo@a+2
  4351  08C7  160A  118A  2390  120A  158A  	fcall	_minimo
  4352  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  4353  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  4354  08CE  0820               	movf	?_minimo,w
  4355  08CF  00AC               	movwf	___fttol@f1
  4356  08D0  0821               	movf	?_minimo+1,w
  4357  08D1  00AD               	movwf	___fttol@f1+1
  4358  08D2  0822               	movf	?_minimo+2,w
  4359  08D3  00AE               	movwf	___fttol@f1+2
  4360  08D4  160A  118A  26E3  120A  158A  	fcall	___fttol
  4361  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  4362  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  4363  08DB  082D               	movf	?___fttol+1,w
  4364  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  4365  08DD  1303               	bcf	3,6	;RP1=0, select bank1
  4366  08DE  01D5               	clrf	(_deltaV+1)^(0+128)
  4367  08DF  07D5               	addwf	(_deltaV+1)^(0+128),f
  4368  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  4369  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  4370  08E2  082C               	movf	?___fttol,w
  4371  08E3  1683               	bsf	3,5	;RP0=1, select bank1
  4372  08E4  1303               	bcf	3,6	;RP1=0, select bank1
  4373  08E5  01D4               	clrf	_deltaV^(0+128)
  4374  08E6  07D4               	addwf	_deltaV^(0+128),f
  4375                           
  4376                           ;main.c: 194: int delta = maximo(minimo(abs(deltaV - antigoUI), 1000), 1);
  4377  08E7  3000               	movlw	0
  4378  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  4379  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  4380  08EA  00A9               	movwf	maximo@b
  4381  08EB  3080               	movlw	128
  4382  08EC  00AA               	movwf	maximo@b+1
  4383  08ED  303F               	movlw	63
  4384  08EE  00AB               	movwf	maximo@b+2
  4385  08EF  3000               	movlw	0
  4386  08F0  00A3               	movwf	minimo@b
  4387  08F1  307A               	movlw	122
  4388  08F2  00A4               	movwf	minimo@b+1
  4389  08F3  3044               	movlw	68
  4390  08F4  00A5               	movwf	minimo@b+2
  4391  08F5  1683               	bsf	3,5	;RP0=1, select bank1
  4392  08F6  1303               	bcf	3,6	;RP1=0, select bank1
  4393  08F7  094E               	comf	_antigoUI^(0+128),w
  4394  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  4395  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  4396  08FA  00E2               	movwf	??_Fuzzy
  4397  08FB  1683               	bsf	3,5	;RP0=1, select bank1
  4398  08FC  1303               	bcf	3,6	;RP1=0, select bank1
  4399  08FD  094F               	comf	(_antigoUI+1)^(0+128),w
  4400  08FE  1283               	bcf	3,5	;RP0=0, select bank0
  4401  08FF  1303               	bcf	3,6	;RP1=0, select bank0
  4402  0900  00E3               	movwf	??_Fuzzy+1
  4403  0901  0AE2               	incf	??_Fuzzy,f
  4404  0902  1903               	skipnz
  4405  0903  0AE3               	incf	??_Fuzzy+1,f
  4406  0904  1683               	bsf	3,5	;RP0=1, select bank1
  4407  0905  1303               	bcf	3,6	;RP1=0, select bank1
  4408  0906  0854               	movf	_deltaV^(0+128),w
  4409  0907  1283               	bcf	3,5	;RP0=0, select bank0
  4410  0908  1303               	bcf	3,6	;RP1=0, select bank0
  4411  0909  0762               	addwf	??_Fuzzy,w
  4412  090A  00F0               	movwf	abs@a
  4413  090B  1683               	bsf	3,5	;RP0=1, select bank1
  4414  090C  1303               	bcf	3,6	;RP1=0, select bank1
  4415  090D  0855               	movf	(_deltaV+1)^(0+128),w
  4416  090E  1803               	skipnc
  4417  090F  0A55               	incf	(_deltaV+1)^(0+128),w
  4418  0910  1283               	bcf	3,5	;RP0=0, select bank0
  4419  0911  1303               	bcf	3,6	;RP1=0, select bank0
  4420  0912  0763               	addwf	??_Fuzzy+1,w
  4421  0913  00F1               	movwf	abs@a+1
  4422  0914  160A  118A  22C1   	fcall	_abs
  4423  0917  0871               	movf	?_abs+1,w
  4424  0918  120A  158A  2802   	ljmp	L11
  4425                           
  4426                           	psect	text23
  4427  133B                     __ptext23:	
  4428 ;; *************** function i1_PWM_DutyCycle2 *****************
  4429 ;; Defined at:
  4430 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  valor           2    0[COMMON] int 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;		None               void
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4444 ;;      Params:         2       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0
  4446 ;;      Temps:          2       0       0       0       0
  4447 ;;      Totals:         4       0       0       0       0
  4448 ;;Total ram usage:        4 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_Fuzzy
  4454 ;;		_ISR
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           
  4459                           ;psect for function i1_PWM_DutyCycle2
  4460  133B                     i1_PWM_DutyCycle2:	
  4461                           
  4462                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4463                           
  4464                           ;incstack = 0
  4465                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  4466  133B  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  4467  133C  00F3               	movwf	??i1_PWM_DutyCycle2+1
  4468  133D  0870               	movf	i1PWM_DutyCycle2@valor,w
  4469  133E  00F2               	movwf	??i1_PWM_DutyCycle2
  4470  133F  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4471  1340  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4472  1341  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4473  1342  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4474  1343  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4475  1344  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4476  1345  0872               	movf	??i1_PWM_DutyCycle2,w
  4477  1346  1283               	bcf	3,5	;RP0=0, select bank0
  4478  1347  1303               	bcf	3,6	;RP1=0, select bank0
  4479  1348  009B               	movwf	27	;volatile
  4480                           
  4481                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4482  1349  0870               	movf	i1PWM_DutyCycle2@valor,w
  4483  134A  00F2               	movwf	??i1_PWM_DutyCycle2
  4484  134B  3003               	movlw	3
  4485  134C                     u293_25:	
  4486  134C  1003               	clrc
  4487  134D  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  4488  134E  3EFF               	addlw	-1
  4489  134F  1D03               	skipz
  4490  1350  2B4C               	goto	u293_25
  4491  1351  1003               	clrc
  4492  1352  0D72               	rlf	??i1_PWM_DutyCycle2,w
  4493  1353  380C               	iorlw	12
  4494  1354  009D               	movwf	29	;volatile
  4495  1355  0008               	return
  4496  1356                     __end_ofi1_PWM_DutyCycle2:	
  4497                           
  4498                           	psect	text24
  4499  0D2A                     __ptext24:	
  4500 ;; *************** function _trapmf *****************
  4501 ;; Defined at:
  4502 ;;		line 85 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  x               3   32[BANK0 ] float 
  4505 ;;  a               3   35[BANK0 ] float 
  4506 ;;  b               3   38[BANK0 ] float 
  4507 ;;  c               3   41[BANK0 ] float 
  4508 ;;  d               3   44[BANK0 ] float 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  ua              3   47[BANK0 ] float 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  3   32[BANK0 ] float 
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, status,0, pclath, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4520 ;;      Params:         0      15       0       0       0
  4521 ;;      Locals:         0       3       0       0       0
  4522 ;;      Temps:          0       0       0       0       0
  4523 ;;      Totals:         0      18       0       0       0
  4524 ;;Total ram usage:       18 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    2
  4527 ;; This function calls:
  4528 ;;		___ftadd
  4529 ;;		___ftdiv
  4530 ;;		___ftge
  4531 ;;		___ftneg
  4532 ;; This function is called by:
  4533 ;;		_Fuzzy
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function _trapmf
  4539  0D2A                     _trapmf:	
  4540                           
  4541                           ;main.c: 87: float ua = 0;
  4542                           
  4543                           ;incstack = 0
  4544                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  4545  0D2A  3000               	movlw	0
  4546  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  4548  0D2D  00CF               	movwf	trapmf@ua
  4549  0D2E  3000               	movlw	0
  4550  0D2F  00D0               	movwf	trapmf@ua+1
  4551  0D30  3000               	movlw	0
  4552  0D31  00D1               	movwf	trapmf@ua+2
  4553                           
  4554                           ;main.c: 89: if (x <= a)
  4555  0D32  0843               	movf	trapmf@a,w
  4556  0D33  00F0               	movwf	___ftge@ff1
  4557  0D34  0844               	movf	trapmf@a+1,w
  4558  0D35  00F1               	movwf	___ftge@ff1+1
  4559  0D36  0845               	movf	trapmf@a+2,w
  4560  0D37  00F2               	movwf	___ftge@ff1+2
  4561  0D38  0840               	movf	trapmf@x,w
  4562  0D39  00F3               	movwf	___ftge@ff2
  4563  0D3A  0841               	movf	trapmf@x+1,w
  4564  0D3B  00F4               	movwf	___ftge@ff2+1
  4565  0D3C  0842               	movf	trapmf@x+2,w
  4566  0D3D  00F5               	movwf	___ftge@ff2+2
  4567  0D3E  160A  118A  253C  120A  158A  	fcall	___ftge
  4568  0D43  1803               	btfsc	3,0
  4569  0D44  2E6F               	goto	L7
  4570                           
  4571                           ;main.c: 91: else if ((a < x) && (x <= b))
  4572                           
  4573                           ;main.c: 90: ua = 0;
  4574  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  4575  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  4576  0D47  0843               	movf	trapmf@a,w
  4577  0D48  00F0               	movwf	___ftge@ff1
  4578  0D49  0844               	movf	trapmf@a+1,w
  4579  0D4A  00F1               	movwf	___ftge@ff1+1
  4580  0D4B  0845               	movf	trapmf@a+2,w
  4581  0D4C  00F2               	movwf	___ftge@ff1+2
  4582  0D4D  0840               	movf	trapmf@x,w
  4583  0D4E  00F3               	movwf	___ftge@ff2
  4584  0D4F  0841               	movf	trapmf@x+1,w
  4585  0D50  00F4               	movwf	___ftge@ff2+1
  4586  0D51  0842               	movf	trapmf@x+2,w
  4587  0D52  00F5               	movwf	___ftge@ff2+2
  4588  0D53  160A  118A  253C  120A  158A  	fcall	___ftge
  4589  0D58  1803               	btfsc	3,0
  4590  0D59  2DA3               	goto	i1l3796
  4591  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  4592  0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  4593  0D5C  0846               	movf	trapmf@b,w
  4594  0D5D  00F0               	movwf	___ftge@ff1
  4595  0D5E  0847               	movf	trapmf@b+1,w
  4596  0D5F  00F1               	movwf	___ftge@ff1+1
  4597  0D60  0848               	movf	trapmf@b+2,w
  4598  0D61  00F2               	movwf	___ftge@ff1+2
  4599  0D62  0840               	movf	trapmf@x,w
  4600  0D63  00F3               	movwf	___ftge@ff2
  4601  0D64  0841               	movf	trapmf@x+1,w
  4602  0D65  00F4               	movwf	___ftge@ff2+1
  4603  0D66  0842               	movf	trapmf@x+2,w
  4604  0D67  00F5               	movwf	___ftge@ff2+2
  4605  0D68  160A  118A  253C  120A  158A  	fcall	___ftge
  4606  0D6D  1C03               	btfss	3,0
  4607  0D6E  2DA3               	goto	i1l3796
  4608                           
  4609                           ;main.c: 92: ua = ((x - a) / (b - a));
  4610  0D6F  1283               	bcf	3,5	;RP0=0, select bank0
  4611  0D70  1303               	bcf	3,6	;RP1=0, select bank0
  4612  0D71  0846               	movf	trapmf@b,w
  4613  0D72  00A3               	movwf	___ftadd@f1
  4614  0D73  0847               	movf	trapmf@b+1,w
  4615  0D74  00A4               	movwf	___ftadd@f1+1
  4616  0D75  0848               	movf	trapmf@b+2,w
  4617  0D76  00A5               	movwf	___ftadd@f1+2
  4618  0D77  0843               	movf	trapmf@a,w
  4619  0D78  00A0               	movwf	___ftneg@f1
  4620  0D79  0844               	movf	trapmf@a+1,w
  4621  0D7A  00A1               	movwf	___ftneg@f1+1
  4622  0D7B  0845               	movf	trapmf@a+2,w
  4623  0D7C  00A2               	movwf	___ftneg@f1+2
  4624  0D7D  160A  118A  22AC  120A  158A  	fcall	___ftneg
  4625  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  4626  0D83  1303               	bcf	3,6	;RP1=0, select bank0
  4627  0D84  0820               	movf	?___ftneg,w
  4628  0D85  00A6               	movwf	___ftadd@f2
  4629  0D86  0821               	movf	?___ftneg+1,w
  4630  0D87  00A7               	movwf	___ftadd@f2+1
  4631  0D88  0822               	movf	?___ftneg+2,w
  4632  0D89  00A8               	movwf	___ftadd@f2+2
  4633  0D8A  120A  158A  2421  120A  158A  	fcall	___ftadd
  4634  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  4635  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  4636  0D91  0823               	movf	?___ftadd,w
  4637  0D92  00B0               	movwf	___ftdiv@f2
  4638  0D93  0824               	movf	?___ftadd+1,w
  4639  0D94  00B1               	movwf	___ftdiv@f2+1
  4640  0D95  0825               	movf	?___ftadd+2,w
  4641  0D96  00B2               	movwf	___ftdiv@f2+2
  4642  0D97  0840               	movf	trapmf@x,w
  4643  0D98  00A3               	movwf	___ftadd@f1
  4644  0D99  0841               	movf	trapmf@x+1,w
  4645  0D9A  00A4               	movwf	___ftadd@f1+1
  4646  0D9B  0842               	movf	trapmf@x+2,w
  4647  0D9C  00A5               	movwf	___ftadd@f1+2
  4648  0D9D  0843               	movf	trapmf@a,w
  4649  0D9E  00A0               	movwf	___ftneg@f1
  4650  0D9F  0844               	movf	trapmf@a+1,w
  4651  0DA0  00A1               	movwf	___ftneg@f1+1
  4652  0DA1  0845               	movf	trapmf@a+2,w
  4653  0DA2  2E32               	goto	L9
  4654  0DA3                     i1l3796:	
  4655                           
  4656                           ;main.c: 93: else if ((b <= x) && (x <= c))
  4657  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  4658  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  4659  0DA5  0840               	movf	trapmf@x,w
  4660  0DA6  00F0               	movwf	___ftge@ff1
  4661  0DA7  0841               	movf	trapmf@x+1,w
  4662  0DA8  00F1               	movwf	___ftge@ff1+1
  4663  0DA9  0842               	movf	trapmf@x+2,w
  4664  0DAA  00F2               	movwf	___ftge@ff1+2
  4665  0DAB  0846               	movf	trapmf@b,w
  4666  0DAC  00F3               	movwf	___ftge@ff2
  4667  0DAD  0847               	movf	trapmf@b+1,w
  4668  0DAE  00F4               	movwf	___ftge@ff2+1
  4669  0DAF  0848               	movf	trapmf@b+2,w
  4670  0DB0  00F5               	movwf	___ftge@ff2+2
  4671  0DB1  160A  118A  253C  120A  158A  	fcall	___ftge
  4672  0DB6  1C03               	btfss	3,0
  4673  0DB7  2DD5               	goto	i1l3802
  4674  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  4675  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  4676  0DBA  0849               	movf	trapmf@c,w
  4677  0DBB  00F0               	movwf	___ftge@ff1
  4678  0DBC  084A               	movf	trapmf@c+1,w
  4679  0DBD  00F1               	movwf	___ftge@ff1+1
  4680  0DBE  084B               	movf	trapmf@c+2,w
  4681  0DBF  00F2               	movwf	___ftge@ff1+2
  4682  0DC0  0840               	movf	trapmf@x,w
  4683  0DC1  00F3               	movwf	___ftge@ff2
  4684  0DC2  0841               	movf	trapmf@x+1,w
  4685  0DC3  00F4               	movwf	___ftge@ff2+1
  4686  0DC4  0842               	movf	trapmf@x+2,w
  4687  0DC5  00F5               	movwf	___ftge@ff2+2
  4688  0DC6  160A  118A  253C  120A  158A  	fcall	___ftge
  4689  0DCB  1C03               	btfss	3,0
  4690  0DCC  2DD5               	goto	i1l3802
  4691                           
  4692                           ;main.c: 94: ua = 1;
  4693  0DCD  3000               	movlw	0
  4694  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0DD0  00CF               	movwf	trapmf@ua
  4697  0DD1  3080               	movlw	128
  4698  0DD2  00D0               	movwf	trapmf@ua+1
  4699  0DD3  303F               	movlw	63
  4700  0DD4  2E76               	goto	L6
  4701  0DD5                     i1l3802:	
  4702                           
  4703                           ;main.c: 95: else if ((c < x) && (x <= d))
  4704  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  4705  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  4706  0DD7  0849               	movf	trapmf@c,w
  4707  0DD8  00F0               	movwf	___ftge@ff1
  4708  0DD9  084A               	movf	trapmf@c+1,w
  4709  0DDA  00F1               	movwf	___ftge@ff1+1
  4710  0DDB  084B               	movf	trapmf@c+2,w
  4711  0DDC  00F2               	movwf	___ftge@ff1+2
  4712  0DDD  0840               	movf	trapmf@x,w
  4713  0DDE  00F3               	movwf	___ftge@ff2
  4714  0DDF  0841               	movf	trapmf@x+1,w
  4715  0DE0  00F4               	movwf	___ftge@ff2+1
  4716  0DE1  0842               	movf	trapmf@x+2,w
  4717  0DE2  00F5               	movwf	___ftge@ff2+2
  4718  0DE3  160A  118A  253C  120A  158A  	fcall	___ftge
  4719  0DE8  1803               	btfsc	3,0
  4720  0DE9  2E5A               	goto	i1l3808
  4721  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0DEC  084C               	movf	trapmf@d,w
  4724  0DED  00F0               	movwf	___ftge@ff1
  4725  0DEE  084D               	movf	trapmf@d+1,w
  4726  0DEF  00F1               	movwf	___ftge@ff1+1
  4727  0DF0  084E               	movf	trapmf@d+2,w
  4728  0DF1  00F2               	movwf	___ftge@ff1+2
  4729  0DF2  0840               	movf	trapmf@x,w
  4730  0DF3  00F3               	movwf	___ftge@ff2
  4731  0DF4  0841               	movf	trapmf@x+1,w
  4732  0DF5  00F4               	movwf	___ftge@ff2+1
  4733  0DF6  0842               	movf	trapmf@x+2,w
  4734  0DF7  00F5               	movwf	___ftge@ff2+2
  4735  0DF8  160A  118A  253C  120A  158A  	fcall	___ftge
  4736  0DFD  1C03               	btfss	3,0
  4737  0DFE  2E5A               	goto	i1l3808
  4738                           
  4739                           ;main.c: 96: ua = ((d - x) / (d - c));
  4740  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  4742  0E01  084C               	movf	trapmf@d,w
  4743  0E02  00A3               	movwf	___ftadd@f1
  4744  0E03  084D               	movf	trapmf@d+1,w
  4745  0E04  00A4               	movwf	___ftadd@f1+1
  4746  0E05  084E               	movf	trapmf@d+2,w
  4747  0E06  00A5               	movwf	___ftadd@f1+2
  4748  0E07  0849               	movf	trapmf@c,w
  4749  0E08  00A0               	movwf	___ftneg@f1
  4750  0E09  084A               	movf	trapmf@c+1,w
  4751  0E0A  00A1               	movwf	___ftneg@f1+1
  4752  0E0B  084B               	movf	trapmf@c+2,w
  4753  0E0C  00A2               	movwf	___ftneg@f1+2
  4754  0E0D  160A  118A  22AC  120A  158A  	fcall	___ftneg
  4755  0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4756  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4757  0E14  0820               	movf	?___ftneg,w
  4758  0E15  00A6               	movwf	___ftadd@f2
  4759  0E16  0821               	movf	?___ftneg+1,w
  4760  0E17  00A7               	movwf	___ftadd@f2+1
  4761  0E18  0822               	movf	?___ftneg+2,w
  4762  0E19  00A8               	movwf	___ftadd@f2+2
  4763  0E1A  120A  158A  2421  120A  158A  	fcall	___ftadd
  4764  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  4765  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  4766  0E21  0823               	movf	?___ftadd,w
  4767  0E22  00B0               	movwf	___ftdiv@f2
  4768  0E23  0824               	movf	?___ftadd+1,w
  4769  0E24  00B1               	movwf	___ftdiv@f2+1
  4770  0E25  0825               	movf	?___ftadd+2,w
  4771  0E26  00B2               	movwf	___ftdiv@f2+2
  4772  0E27  084C               	movf	trapmf@d,w
  4773  0E28  00A3               	movwf	___ftadd@f1
  4774  0E29  084D               	movf	trapmf@d+1,w
  4775  0E2A  00A4               	movwf	___ftadd@f1+1
  4776  0E2B  084E               	movf	trapmf@d+2,w
  4777  0E2C  00A5               	movwf	___ftadd@f1+2
  4778  0E2D  0840               	movf	trapmf@x,w
  4779  0E2E  00A0               	movwf	___ftneg@f1
  4780  0E2F  0841               	movf	trapmf@x+1,w
  4781  0E30  00A1               	movwf	___ftneg@f1+1
  4782  0E31  0842               	movf	trapmf@x+2,w
  4783  0E32                     L9:	
  4784  0E32  00A2               	movwf	___ftneg@f1+2
  4785  0E33  160A  118A  22AC  120A  158A  	fcall	___ftneg
  4786  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  4787  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  4788  0E3A  0820               	movf	?___ftneg,w
  4789  0E3B  00A6               	movwf	___ftadd@f2
  4790  0E3C  0821               	movf	?___ftneg+1,w
  4791  0E3D  00A7               	movwf	___ftadd@f2+1
  4792  0E3E  0822               	movf	?___ftneg+2,w
  4793  0E3F  00A8               	movwf	___ftadd@f2+2
  4794  0E40  120A  158A  2421  120A  158A  	fcall	___ftadd
  4795  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  4796  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  4797  0E47  0823               	movf	?___ftadd,w
  4798  0E48  00B3               	movwf	___ftdiv@f1
  4799  0E49  0824               	movf	?___ftadd+1,w
  4800  0E4A  00B4               	movwf	___ftdiv@f1+1
  4801  0E4B  0825               	movf	?___ftadd+2,w
  4802  0E4C  00B5               	movwf	___ftdiv@f1+2
  4803  0E4D  120A  158A  21BF  120A  158A  	fcall	___ftdiv
  4804  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  4805  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  4806  0E54  0830               	movf	?___ftdiv,w
  4807  0E55  00CF               	movwf	trapmf@ua
  4808  0E56  0831               	movf	?___ftdiv+1,w
  4809  0E57  00D0               	movwf	trapmf@ua+1
  4810  0E58  0832               	movf	?___ftdiv+2,w
  4811  0E59  2E76               	goto	L6
  4812  0E5A                     i1l3808:	
  4813                           
  4814                           ;main.c: 97: else if (x > d)
  4815  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  4816  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  4817  0E5C  084C               	movf	trapmf@d,w
  4818  0E5D  00F0               	movwf	___ftge@ff1
  4819  0E5E  084D               	movf	trapmf@d+1,w
  4820  0E5F  00F1               	movwf	___ftge@ff1+1
  4821  0E60  084E               	movf	trapmf@d+2,w
  4822  0E61  00F2               	movwf	___ftge@ff1+2
  4823  0E62  0840               	movf	trapmf@x,w
  4824  0E63  00F3               	movwf	___ftge@ff2
  4825  0E64  0841               	movf	trapmf@x+1,w
  4826  0E65  00F4               	movwf	___ftge@ff2+1
  4827  0E66  0842               	movf	trapmf@x+2,w
  4828  0E67  00F5               	movwf	___ftge@ff2+2
  4829  0E68  160A  118A  253C  120A  158A  	fcall	___ftge
  4830  0E6D  1803               	btfsc	3,0
  4831  0E6E  2E77               	goto	i1l126
  4832  0E6F                     L7:	
  4833                           
  4834                           ;main.c: 98: ua = 0;
  4835  0E6F  3000               	movlw	0
  4836  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  4837  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  4838  0E72  00CF               	movwf	trapmf@ua
  4839  0E73  3000               	movlw	0
  4840  0E74  00D0               	movwf	trapmf@ua+1
  4841  0E75  3000               	movlw	0
  4842  0E76                     L6:	
  4843  0E76  00D1               	movwf	trapmf@ua+2
  4844  0E77                     i1l126:	
  4845                           
  4846                           ;main.c: 100: return(ua);
  4847  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4848  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4849  0E79  084F               	movf	trapmf@ua,w
  4850  0E7A  00C0               	movwf	?_trapmf
  4851  0E7B  0850               	movf	trapmf@ua+1,w
  4852  0E7C  00C1               	movwf	?_trapmf+1
  4853  0E7D  0851               	movf	trapmf@ua+2,w
  4854  0E7E  00C2               	movwf	?_trapmf+2
  4855  0E7F  0008               	return
  4856  0E80                     __end_of_trapmf:	
  4857                           
  4858                           	psect	text25
  4859  12AC                     __ptext25:	
  4860 ;; *************** function ___ftneg *****************
  4861 ;; Defined at:
  4862 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  f1              3    0[BANK0 ] float 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  3    0[BANK0 ] float 
  4869 ;; Registers used:
  4870 ;;		wreg
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4876 ;;      Params:         0       3       0       0       0
  4877 ;;      Locals:         0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0
  4879 ;;      Totals:         0       3       0       0       0
  4880 ;;Total ram usage:        3 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_trapmf
  4886 ;;		_Fuzzy
  4887 ;;		_trimf
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           
  4892                           ;psect for function ___ftneg
  4893  12AC                     ___ftneg:	
  4894                           
  4895                           ;incstack = 0
  4896                           ; Regs used in ___ftneg: [wreg]
  4897  12AC  1283               	bcf	3,5	;RP0=0, select bank0
  4898  12AD  1303               	bcf	3,6	;RP1=0, select bank0
  4899  12AE  0822               	movf	___ftneg@f1+2,w
  4900  12AF  0421               	iorwf	___ftneg@f1+1,w
  4901  12B0  0420               	iorwf	___ftneg@f1,w
  4902  12B1  1903               	skipnz
  4903  12B2  0008               	return
  4904  12B3  3080               	movlw	128
  4905  12B4  06A2               	xorwf	___ftneg@f1+2,f
  4906  12B5  0008               	return
  4907  12B6                     __end_of___ftneg:	
  4908                           
  4909                           	psect	text26
  4910  09BF                     __ptext26:	
  4911 ;; *************** function ___ftdiv *****************
  4912 ;; Defined at:
  4913 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  f2              3   16[BANK0 ] float 
  4916 ;;  f1              3   19[BANK0 ] float 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  f3              3   27[BANK0 ] float 
  4919 ;;  sign            1   31[BANK0 ] unsigned char 
  4920 ;;  exp             1   30[BANK0 ] unsigned char 
  4921 ;;  cntr            1   26[BANK0 ] unsigned char 
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  3   16[BANK0 ] float 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, status,0, pclath, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4931 ;;      Params:         0       6       0       0       0
  4932 ;;      Locals:         0       6       0       0       0
  4933 ;;      Temps:          0       4       0       0       0
  4934 ;;      Totals:         0      16       0       0       0
  4935 ;;Total ram usage:       16 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    1
  4938 ;; This function calls:
  4939 ;;		___ftpack
  4940 ;; This function is called by:
  4941 ;;		_trapmf
  4942 ;;		_Fuzzy
  4943 ;;		_trimf
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           
  4948                           ;psect for function ___ftdiv
  4949  09BF                     ___ftdiv:	
  4950                           
  4951                           ;incstack = 0
  4952                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4953  09BF  1283               	bcf	3,5	;RP0=0, select bank0
  4954  09C0  1303               	bcf	3,6	;RP1=0, select bank0
  4955  09C1  0833               	movf	___ftdiv@f1,w
  4956  09C2  00B6               	movwf	??___ftdiv
  4957  09C3  0834               	movf	___ftdiv@f1+1,w
  4958  09C4  00B7               	movwf	??___ftdiv+1
  4959  09C5  0835               	movf	___ftdiv@f1+2,w
  4960  09C6  00B8               	movwf	??___ftdiv+2
  4961  09C7  1003               	clrc
  4962  09C8  0D37               	rlf	??___ftdiv+1,w
  4963  09C9  0D38               	rlf	??___ftdiv+2,w
  4964  09CA  00B9               	movwf	??___ftdiv+3
  4965  09CB  0839               	movf	??___ftdiv+3,w
  4966  09CC  00BE               	movwf	___ftdiv@exp
  4967  09CD  08BE               	movf	___ftdiv@exp,f
  4968  09CE  1D03               	skipz
  4969  09CF  29D7               	goto	i1l2204
  4970  09D0  3000               	movlw	0
  4971  09D1  00B0               	movwf	?___ftdiv
  4972  09D2  3000               	movlw	0
  4973  09D3  00B1               	movwf	?___ftdiv+1
  4974  09D4  3000               	movlw	0
  4975  09D5  00B2               	movwf	?___ftdiv+2
  4976  09D6  0008               	return
  4977  09D7                     i1l2204:	
  4978  09D7  0830               	movf	___ftdiv@f2,w
  4979  09D8  00B6               	movwf	??___ftdiv
  4980  09D9  0831               	movf	___ftdiv@f2+1,w
  4981  09DA  00B7               	movwf	??___ftdiv+1
  4982  09DB  0832               	movf	___ftdiv@f2+2,w
  4983  09DC  00B8               	movwf	??___ftdiv+2
  4984  09DD  1003               	clrc
  4985  09DE  0D37               	rlf	??___ftdiv+1,w
  4986  09DF  0D38               	rlf	??___ftdiv+2,w
  4987  09E0  00B9               	movwf	??___ftdiv+3
  4988  09E1  0839               	movf	??___ftdiv+3,w
  4989  09E2  00BF               	movwf	___ftdiv@sign
  4990  09E3  08BF               	movf	___ftdiv@sign,f
  4991  09E4  1D03               	skipz
  4992  09E5  29ED               	goto	i1l2210
  4993  09E6  3000               	movlw	0
  4994  09E7  00B0               	movwf	?___ftdiv
  4995  09E8  3000               	movlw	0
  4996  09E9  00B1               	movwf	?___ftdiv+1
  4997  09EA  3000               	movlw	0
  4998  09EB  00B2               	movwf	?___ftdiv+2
  4999  09EC  0008               	return
  5000  09ED                     i1l2210:	
  5001  09ED  3000               	movlw	0
  5002  09EE  00BB               	movwf	___ftdiv@f3
  5003  09EF  3000               	movlw	0
  5004  09F0  00BC               	movwf	___ftdiv@f3+1
  5005  09F1  3000               	movlw	0
  5006  09F2  00BD               	movwf	___ftdiv@f3+2
  5007  09F3  3089               	movlw	137
  5008  09F4  073F               	addwf	___ftdiv@sign,w
  5009  09F5  00B6               	movwf	??___ftdiv
  5010  09F6  0836               	movf	??___ftdiv,w
  5011  09F7  02BE               	subwf	___ftdiv@exp,f
  5012  09F8  0833               	movf	___ftdiv@f1,w
  5013  09F9  00B6               	movwf	??___ftdiv
  5014  09FA  0834               	movf	___ftdiv@f1+1,w
  5015  09FB  00B7               	movwf	??___ftdiv+1
  5016  09FC  0835               	movf	___ftdiv@f1+2,w
  5017  09FD  00B8               	movwf	??___ftdiv+2
  5018  09FE  3010               	movlw	16
  5019  09FF                     u230_25:	
  5020  09FF  1003               	clrc
  5021  0A00  0CB8               	rrf	??___ftdiv+2,f
  5022  0A01  0CB7               	rrf	??___ftdiv+1,f
  5023  0A02  0CB6               	rrf	??___ftdiv,f
  5024  0A03  3EFF               	addlw	-1
  5025  0A04  1D03               	skipz
  5026  0A05  29FF               	goto	u230_25
  5027  0A06  0836               	movf	??___ftdiv,w
  5028  0A07  00B9               	movwf	??___ftdiv+3
  5029  0A08  0839               	movf	??___ftdiv+3,w
  5030  0A09  00BF               	movwf	___ftdiv@sign
  5031  0A0A  0830               	movf	___ftdiv@f2,w
  5032  0A0B  00B6               	movwf	??___ftdiv
  5033  0A0C  0831               	movf	___ftdiv@f2+1,w
  5034  0A0D  00B7               	movwf	??___ftdiv+1
  5035  0A0E  0832               	movf	___ftdiv@f2+2,w
  5036  0A0F  00B8               	movwf	??___ftdiv+2
  5037  0A10  3010               	movlw	16
  5038  0A11                     u231_25:	
  5039  0A11  1003               	clrc
  5040  0A12  0CB8               	rrf	??___ftdiv+2,f
  5041  0A13  0CB7               	rrf	??___ftdiv+1,f
  5042  0A14  0CB6               	rrf	??___ftdiv,f
  5043  0A15  3EFF               	addlw	-1
  5044  0A16  1D03               	skipz
  5045  0A17  2A11               	goto	u231_25
  5046  0A18  0836               	movf	??___ftdiv,w
  5047  0A19  00B9               	movwf	??___ftdiv+3
  5048  0A1A  0839               	movf	??___ftdiv+3,w
  5049  0A1B  06BF               	xorwf	___ftdiv@sign,f
  5050  0A1C  3080               	movlw	128
  5051  0A1D  00B6               	movwf	??___ftdiv
  5052  0A1E  0836               	movf	??___ftdiv,w
  5053  0A1F  05BF               	andwf	___ftdiv@sign,f
  5054  0A20  17B4               	bsf	___ftdiv@f1+1,7
  5055  0A21  30FF               	movlw	255
  5056  0A22  05B3               	andwf	___ftdiv@f1,f
  5057  0A23  30FF               	movlw	255
  5058  0A24  05B4               	andwf	___ftdiv@f1+1,f
  5059  0A25  3000               	movlw	0
  5060  0A26  05B5               	andwf	___ftdiv@f1+2,f
  5061  0A27  17B1               	bsf	___ftdiv@f2+1,7
  5062  0A28  30FF               	movlw	255
  5063  0A29  05B0               	andwf	___ftdiv@f2,f
  5064  0A2A  30FF               	movlw	255
  5065  0A2B  05B1               	andwf	___ftdiv@f2+1,f
  5066  0A2C  3000               	movlw	0
  5067  0A2D  05B2               	andwf	___ftdiv@f2+2,f
  5068  0A2E  3018               	movlw	24
  5069  0A2F  00B6               	movwf	??___ftdiv
  5070  0A30  0836               	movf	??___ftdiv,w
  5071  0A31  00BA               	movwf	___ftdiv@cntr
  5072  0A32                     i1l2224:	
  5073  0A32  3001               	movlw	1
  5074  0A33                     u232_25:	
  5075  0A33  1003               	clrc
  5076  0A34  0DBB               	rlf	___ftdiv@f3,f
  5077  0A35  0DBC               	rlf	___ftdiv@f3+1,f
  5078  0A36  0DBD               	rlf	___ftdiv@f3+2,f
  5079  0A37  3EFF               	addlw	-1
  5080  0A38  1D03               	skipz
  5081  0A39  2A33               	goto	u232_25
  5082  0A3A  0832               	movf	___ftdiv@f2+2,w
  5083  0A3B  0235               	subwf	___ftdiv@f1+2,w
  5084  0A3C  1D03               	skipz
  5085  0A3D  2A44               	goto	u233_25
  5086  0A3E  0831               	movf	___ftdiv@f2+1,w
  5087  0A3F  0234               	subwf	___ftdiv@f1+1,w
  5088  0A40  1D03               	skipz
  5089  0A41  2A44               	goto	u233_25
  5090  0A42  0830               	movf	___ftdiv@f2,w
  5091  0A43  0233               	subwf	___ftdiv@f1,w
  5092  0A44                     u233_25:	
  5093  0A44  1C03               	skipc
  5094  0A45  2A51               	goto	i1l2232
  5095  0A46  0830               	movf	___ftdiv@f2,w
  5096  0A47  02B3               	subwf	___ftdiv@f1,f
  5097  0A48  0831               	movf	___ftdiv@f2+1,w
  5098  0A49  1C03               	skipc
  5099  0A4A  0F31               	incfsz	___ftdiv@f2+1,w
  5100  0A4B  02B4               	subwf	___ftdiv@f1+1,f
  5101  0A4C  0832               	movf	___ftdiv@f2+2,w
  5102  0A4D  1C03               	skipc
  5103  0A4E  0A32               	incf	___ftdiv@f2+2,w
  5104  0A4F  02B5               	subwf	___ftdiv@f1+2,f
  5105  0A50  143B               	bsf	___ftdiv@f3,0
  5106  0A51                     i1l2232:	
  5107  0A51  3001               	movlw	1
  5108  0A52                     u234_25:	
  5109  0A52  1003               	clrc
  5110  0A53  0DB3               	rlf	___ftdiv@f1,f
  5111  0A54  0DB4               	rlf	___ftdiv@f1+1,f
  5112  0A55  0DB5               	rlf	___ftdiv@f1+2,f
  5113  0A56  3EFF               	addlw	-1
  5114  0A57  1D03               	skipz
  5115  0A58  2A52               	goto	u234_25
  5116  0A59  3001               	movlw	1
  5117  0A5A  02BA               	subwf	___ftdiv@cntr,f
  5118  0A5B  1D03               	btfss	3,2
  5119  0A5C  2A32               	goto	i1l2224
  5120  0A5D  083B               	movf	___ftdiv@f3,w
  5121  0A5E  00F0               	movwf	___ftpack@arg
  5122  0A5F  083C               	movf	___ftdiv@f3+1,w
  5123  0A60  00F1               	movwf	___ftpack@arg+1
  5124  0A61  083D               	movf	___ftdiv@f3+2,w
  5125  0A62  00F2               	movwf	___ftpack@arg+2
  5126  0A63  083E               	movf	___ftdiv@exp,w
  5127  0A64  00B6               	movwf	??___ftdiv
  5128  0A65  0836               	movf	??___ftdiv,w
  5129  0A66  00F3               	movwf	___ftpack@exp
  5130  0A67  083F               	movf	___ftdiv@sign,w
  5131  0A68  00B7               	movwf	??___ftdiv+1
  5132  0A69  0837               	movf	??___ftdiv+1,w
  5133  0A6A  00F4               	movwf	___ftpack@sign
  5134  0A6B  160A  118A  2599   	fcall	___ftpack
  5135  0A6E  0870               	movf	?___ftpack,w
  5136  0A6F  1283               	bcf	3,5	;RP0=0, select bank0
  5137  0A70  1303               	bcf	3,6	;RP1=0, select bank0
  5138  0A71  00B0               	movwf	?___ftdiv
  5139  0A72  0871               	movf	?___ftpack+1,w
  5140  0A73  00B1               	movwf	?___ftdiv+1
  5141  0A74  0872               	movf	?___ftpack+2,w
  5142  0A75  00B2               	movwf	?___ftdiv+2
  5143  0A76  0008               	return
  5144  0A77                     __end_of___ftdiv:	
  5145                           
  5146                           	psect	text27
  5147  0C21                     __ptext27:	
  5148 ;; *************** function ___ftadd *****************
  5149 ;; Defined at:
  5150 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  f1              3    3[BANK0 ] float 
  5153 ;;  f2              3    6[BANK0 ] float 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  exp1            1   15[BANK0 ] unsigned char 
  5156 ;;  exp2            1   14[BANK0 ] unsigned char 
  5157 ;;  sign            1   13[BANK0 ] unsigned char 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  3    3[BANK0 ] float 
  5160 ;; Registers used:
  5161 ;;		wreg, status,2, status,0, pclath, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5167 ;;      Params:         0       6       0       0       0
  5168 ;;      Locals:         0       3       0       0       0
  5169 ;;      Temps:          0       4       0       0       0
  5170 ;;      Totals:         0      13       0       0       0
  5171 ;;Total ram usage:       13 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    1
  5174 ;; This function calls:
  5175 ;;		___ftpack
  5176 ;; This function is called by:
  5177 ;;		_trapmf
  5178 ;;		_Fuzzy
  5179 ;;		_trimf
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           
  5184                           ;psect for function ___ftadd
  5185  0C21                     ___ftadd:	
  5186                           
  5187                           ;incstack = 0
  5188                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5189  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0C23  0823               	movf	___ftadd@f1,w
  5192  0C24  00A9               	movwf	??___ftadd
  5193  0C25  0824               	movf	___ftadd@f1+1,w
  5194  0C26  00AA               	movwf	??___ftadd+1
  5195  0C27  0825               	movf	___ftadd@f1+2,w
  5196  0C28  00AB               	movwf	??___ftadd+2
  5197  0C29  1003               	clrc
  5198  0C2A  0D2A               	rlf	??___ftadd+1,w
  5199  0C2B  0D2B               	rlf	??___ftadd+2,w
  5200  0C2C  00AC               	movwf	??___ftadd+3
  5201  0C2D  082C               	movf	??___ftadd+3,w
  5202  0C2E  00AF               	movwf	___ftadd@exp1
  5203  0C2F  0826               	movf	___ftadd@f2,w
  5204  0C30  00A9               	movwf	??___ftadd
  5205  0C31  0827               	movf	___ftadd@f2+1,w
  5206  0C32  00AA               	movwf	??___ftadd+1
  5207  0C33  0828               	movf	___ftadd@f2+2,w
  5208  0C34  00AB               	movwf	??___ftadd+2
  5209  0C35  1003               	clrc
  5210  0C36  0D2A               	rlf	??___ftadd+1,w
  5211  0C37  0D2B               	rlf	??___ftadd+2,w
  5212  0C38  00AC               	movwf	??___ftadd+3
  5213  0C39  082C               	movf	??___ftadd+3,w
  5214  0C3A  00AE               	movwf	___ftadd@exp2
  5215  0C3B  082F               	movf	___ftadd@exp1,w
  5216  0C3C  1903               	btfsc	3,2
  5217  0C3D  2C4A               	goto	i1l3720
  5218  0C3E  082E               	movf	___ftadd@exp2,w
  5219  0C3F  022F               	subwf	___ftadd@exp1,w
  5220  0C40  1803               	skipnc
  5221  0C41  2C51               	goto	i1l3724
  5222  0C42  032F               	decf	___ftadd@exp1,w
  5223  0C43  3AFF               	xorlw	255
  5224  0C44  072E               	addwf	___ftadd@exp2,w
  5225  0C45  00A9               	movwf	??___ftadd
  5226  0C46  3019               	movlw	25
  5227  0C47  0229               	subwf	??___ftadd,w
  5228  0C48  1C03               	skipc
  5229  0C49  2C51               	goto	i1l3724
  5230  0C4A                     i1l3720:	
  5231  0C4A  0826               	movf	___ftadd@f2,w
  5232  0C4B  00A3               	movwf	?___ftadd
  5233  0C4C  0827               	movf	___ftadd@f2+1,w
  5234  0C4D  00A4               	movwf	?___ftadd+1
  5235  0C4E  0828               	movf	___ftadd@f2+2,w
  5236  0C4F  00A5               	movwf	?___ftadd+2
  5237  0C50  0008               	return
  5238  0C51                     i1l3724:	
  5239  0C51  082E               	movf	___ftadd@exp2,w
  5240  0C52  1903               	btfsc	3,2
  5241  0C53  0008               	return
  5242  0C54  082F               	movf	___ftadd@exp1,w
  5243  0C55  022E               	subwf	___ftadd@exp2,w
  5244  0C56  1803               	skipnc
  5245  0C57  2C60               	goto	i1l3730
  5246  0C58  032E               	decf	___ftadd@exp2,w
  5247  0C59  3AFF               	xorlw	255
  5248  0C5A  072F               	addwf	___ftadd@exp1,w
  5249  0C5B  00A9               	movwf	??___ftadd
  5250  0C5C  3019               	movlw	25
  5251  0C5D  0229               	subwf	??___ftadd,w
  5252  0C5E  1803               	btfsc	3,0
  5253  0C5F  0008               	return
  5254  0C60                     i1l3730:	
  5255  0C60  3006               	movlw	6
  5256  0C61  00A9               	movwf	??___ftadd
  5257  0C62  0829               	movf	??___ftadd,w
  5258  0C63  00AD               	movwf	___ftadd@sign
  5259  0C64  1BA5               	btfsc	___ftadd@f1+2,7
  5260  0C65  17AD               	bsf	___ftadd@sign,7
  5261  0C66  1BA8               	btfsc	___ftadd@f2+2,7
  5262  0C67  172D               	bsf	___ftadd@sign,6
  5263  0C68  17A4               	bsf	___ftadd@f1+1,7
  5264  0C69  30FF               	movlw	255
  5265  0C6A  05A3               	andwf	___ftadd@f1,f
  5266  0C6B  30FF               	movlw	255
  5267  0C6C  05A4               	andwf	___ftadd@f1+1,f
  5268  0C6D  3000               	movlw	0
  5269  0C6E  05A5               	andwf	___ftadd@f1+2,f
  5270  0C6F  17A7               	bsf	___ftadd@f2+1,7
  5271  0C70  30FF               	movlw	255
  5272  0C71  05A6               	andwf	___ftadd@f2,f
  5273  0C72  30FF               	movlw	255
  5274  0C73  05A7               	andwf	___ftadd@f2+1,f
  5275  0C74  3000               	movlw	0
  5276  0C75  05A8               	andwf	___ftadd@f2+2,f
  5277  0C76  082E               	movf	___ftadd@exp2,w
  5278  0C77  022F               	subwf	___ftadd@exp1,w
  5279  0C78  1803               	skipnc
  5280  0C79  2CA0               	goto	i1l3752
  5281  0C7A                     i1l3742:	
  5282  0C7A  3001               	movlw	1
  5283  0C7B                     u487_25:	
  5284  0C7B  1003               	clrc
  5285  0C7C  0DA6               	rlf	___ftadd@f2,f
  5286  0C7D  0DA7               	rlf	___ftadd@f2+1,f
  5287  0C7E  0DA8               	rlf	___ftadd@f2+2,f
  5288  0C7F  3EFF               	addlw	-1
  5289  0C80  1D03               	skipz
  5290  0C81  2C7B               	goto	u487_25
  5291  0C82  3001               	movlw	1
  5292  0C83  02AE               	subwf	___ftadd@exp2,f
  5293  0C84  082E               	movf	___ftadd@exp2,w
  5294  0C85  062F               	xorwf	___ftadd@exp1,w
  5295  0C86  1903               	skipnz
  5296  0C87  2C9B               	goto	i1l3750
  5297  0C88  3001               	movlw	1
  5298  0C89  02AD               	subwf	___ftadd@sign,f
  5299  0C8A  082D               	movf	___ftadd@sign,w
  5300  0C8B  3907               	andlw	7
  5301  0C8C  1903               	btfsc	3,2
  5302  0C8D  2C9B               	goto	i1l3750
  5303  0C8E  2C7A               	goto	i1l3742
  5304  0C8F                     i1l3748:	
  5305  0C8F  3001               	movlw	1
  5306  0C90                     u490_25:	
  5307  0C90  1003               	clrc
  5308  0C91  0CA5               	rrf	___ftadd@f1+2,f
  5309  0C92  0CA4               	rrf	___ftadd@f1+1,f
  5310  0C93  0CA3               	rrf	___ftadd@f1,f
  5311  0C94  3EFF               	addlw	-1
  5312  0C95  1D03               	skipz
  5313  0C96  2C90               	goto	u490_25
  5314  0C97  3001               	movlw	1
  5315  0C98  00A9               	movwf	??___ftadd
  5316  0C99  0829               	movf	??___ftadd,w
  5317  0C9A  07AF               	addwf	___ftadd@exp1,f
  5318  0C9B                     i1l3750:	
  5319  0C9B  082F               	movf	___ftadd@exp1,w
  5320  0C9C  062E               	xorwf	___ftadd@exp2,w
  5321  0C9D  1903               	btfsc	3,2
  5322  0C9E  2CC9               	goto	i1l757
  5323  0C9F  2C8F               	goto	i1l3748
  5324  0CA0                     i1l3752:	
  5325  0CA0  082F               	movf	___ftadd@exp1,w
  5326  0CA1  022E               	subwf	___ftadd@exp2,w
  5327  0CA2  1803               	skipnc
  5328  0CA3  2CC9               	goto	i1l757
  5329  0CA4                     i1l3754:	
  5330  0CA4  3001               	movlw	1
  5331  0CA5                     u493_25:	
  5332  0CA5  1003               	clrc
  5333  0CA6  0DA3               	rlf	___ftadd@f1,f
  5334  0CA7  0DA4               	rlf	___ftadd@f1+1,f
  5335  0CA8  0DA5               	rlf	___ftadd@f1+2,f
  5336  0CA9  3EFF               	addlw	-1
  5337  0CAA  1D03               	skipz
  5338  0CAB  2CA5               	goto	u493_25
  5339  0CAC  3001               	movlw	1
  5340  0CAD  02AF               	subwf	___ftadd@exp1,f
  5341  0CAE  082E               	movf	___ftadd@exp2,w
  5342  0CAF  062F               	xorwf	___ftadd@exp1,w
  5343  0CB0  1903               	skipnz
  5344  0CB1  2CC5               	goto	i1l3762
  5345  0CB2  3001               	movlw	1
  5346  0CB3  02AD               	subwf	___ftadd@sign,f
  5347  0CB4  082D               	movf	___ftadd@sign,w
  5348  0CB5  3907               	andlw	7
  5349  0CB6  1903               	btfsc	3,2
  5350  0CB7  2CC5               	goto	i1l3762
  5351  0CB8  2CA4               	goto	i1l3754
  5352  0CB9                     i1l3760:	
  5353  0CB9  3001               	movlw	1
  5354  0CBA                     u496_25:	
  5355  0CBA  1003               	clrc
  5356  0CBB  0CA8               	rrf	___ftadd@f2+2,f
  5357  0CBC  0CA7               	rrf	___ftadd@f2+1,f
  5358  0CBD  0CA6               	rrf	___ftadd@f2,f
  5359  0CBE  3EFF               	addlw	-1
  5360  0CBF  1D03               	skipz
  5361  0CC0  2CBA               	goto	u496_25
  5362  0CC1  3001               	movlw	1
  5363  0CC2  00A9               	movwf	??___ftadd
  5364  0CC3  0829               	movf	??___ftadd,w
  5365  0CC4  07AE               	addwf	___ftadd@exp2,f
  5366  0CC5                     i1l3762:	
  5367  0CC5  082F               	movf	___ftadd@exp1,w
  5368  0CC6  062E               	xorwf	___ftadd@exp2,w
  5369  0CC7  1D03               	skipz
  5370  0CC8  2CB9               	goto	i1l3760
  5371  0CC9                     i1l757:	
  5372  0CC9  1FAD               	btfss	___ftadd@sign,7
  5373  0CCA  2CDB               	goto	i1l3766
  5374  0CCB  30FF               	movlw	255
  5375  0CCC  06A3               	xorwf	___ftadd@f1,f
  5376  0CCD  30FF               	movlw	255
  5377  0CCE  06A4               	xorwf	___ftadd@f1+1,f
  5378  0CCF  30FF               	movlw	255
  5379  0CD0  06A5               	xorwf	___ftadd@f1+2,f
  5380  0CD1  3001               	movlw	1
  5381  0CD2  07A3               	addwf	___ftadd@f1,f
  5382  0CD3  3000               	movlw	0
  5383  0CD4  1803               	skipnc
  5384  0CD5  3001               	movlw	1
  5385  0CD6  07A4               	addwf	___ftadd@f1+1,f
  5386  0CD7  3000               	movlw	0
  5387  0CD8  1803               	skipnc
  5388  0CD9  3001               	movlw	1
  5389  0CDA  07A5               	addwf	___ftadd@f1+2,f
  5390  0CDB                     i1l3766:	
  5391  0CDB  1F2D               	btfss	___ftadd@sign,6
  5392  0CDC  2CED               	goto	i1l3770
  5393  0CDD  30FF               	movlw	255
  5394  0CDE  06A6               	xorwf	___ftadd@f2,f
  5395  0CDF  30FF               	movlw	255
  5396  0CE0  06A7               	xorwf	___ftadd@f2+1,f
  5397  0CE1  30FF               	movlw	255
  5398  0CE2  06A8               	xorwf	___ftadd@f2+2,f
  5399  0CE3  3001               	movlw	1
  5400  0CE4  07A6               	addwf	___ftadd@f2,f
  5401  0CE5  3000               	movlw	0
  5402  0CE6  1803               	skipnc
  5403  0CE7  3001               	movlw	1
  5404  0CE8  07A7               	addwf	___ftadd@f2+1,f
  5405  0CE9  3000               	movlw	0
  5406  0CEA  1803               	skipnc
  5407  0CEB  3001               	movlw	1
  5408  0CEC  07A8               	addwf	___ftadd@f2+2,f
  5409  0CED                     i1l3770:	
  5410  0CED  01AD               	clrf	___ftadd@sign
  5411  0CEE  0823               	movf	___ftadd@f1,w
  5412  0CEF  07A6               	addwf	___ftadd@f2,f
  5413  0CF0  0824               	movf	___ftadd@f1+1,w
  5414  0CF1  1103               	clrz
  5415  0CF2  1803               	skipnc
  5416  0CF3  0A24               	incf	___ftadd@f1+1,w
  5417  0CF4  1D03               	btfss	3,2
  5418  0CF5  07A7               	addwf	___ftadd@f2+1,f
  5419  0CF6  0825               	movf	___ftadd@f1+2,w
  5420  0CF7  1103               	clrz
  5421  0CF8  1803               	skipnc
  5422  0CF9  0A25               	incf	___ftadd@f1+2,w
  5423  0CFA  1D03               	btfss	3,2
  5424  0CFB  07A8               	addwf	___ftadd@f2+2,f
  5425  0CFC  1FA8               	btfss	___ftadd@f2+2,7
  5426  0CFD  2D10               	goto	i1l3780
  5427  0CFE  30FF               	movlw	255
  5428  0CFF  06A6               	xorwf	___ftadd@f2,f
  5429  0D00  30FF               	movlw	255
  5430  0D01  06A7               	xorwf	___ftadd@f2+1,f
  5431  0D02  30FF               	movlw	255
  5432  0D03  06A8               	xorwf	___ftadd@f2+2,f
  5433  0D04  3001               	movlw	1
  5434  0D05  07A6               	addwf	___ftadd@f2,f
  5435  0D06  3000               	movlw	0
  5436  0D07  1803               	skipnc
  5437  0D08  3001               	movlw	1
  5438  0D09  07A7               	addwf	___ftadd@f2+1,f
  5439  0D0A  3000               	movlw	0
  5440  0D0B  1803               	skipnc
  5441  0D0C  3001               	movlw	1
  5442  0D0D  07A8               	addwf	___ftadd@f2+2,f
  5443  0D0E  01AD               	clrf	___ftadd@sign
  5444  0D0F  0AAD               	incf	___ftadd@sign,f
  5445  0D10                     i1l3780:	
  5446  0D10  0826               	movf	___ftadd@f2,w
  5447  0D11  00F0               	movwf	___ftpack@arg
  5448  0D12  0827               	movf	___ftadd@f2+1,w
  5449  0D13  00F1               	movwf	___ftpack@arg+1
  5450  0D14  0828               	movf	___ftadd@f2+2,w
  5451  0D15  00F2               	movwf	___ftpack@arg+2
  5452  0D16  082F               	movf	___ftadd@exp1,w
  5453  0D17  00A9               	movwf	??___ftadd
  5454  0D18  0829               	movf	??___ftadd,w
  5455  0D19  00F3               	movwf	___ftpack@exp
  5456  0D1A  082D               	movf	___ftadd@sign,w
  5457  0D1B  00AA               	movwf	??___ftadd+1
  5458  0D1C  082A               	movf	??___ftadd+1,w
  5459  0D1D  00F4               	movwf	___ftpack@sign
  5460  0D1E  160A  118A  2599   	fcall	___ftpack
  5461  0D21  0870               	movf	?___ftpack,w
  5462  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  5463  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  5464  0D24  00A3               	movwf	?___ftadd
  5465  0D25  0871               	movf	?___ftpack+1,w
  5466  0D26  00A4               	movwf	?___ftadd+1
  5467  0D27  0872               	movf	?___ftpack+2,w
  5468  0D28  00A5               	movwf	?___ftadd+2
  5469  0D29  0008               	return
  5470  0D2A                     __end_of___ftadd:	
  5471                           
  5472                           	psect	text28
  5473  1390                     __ptext28:	
  5474 ;; *************** function _minimo *****************
  5475 ;; Defined at:
  5476 ;;		line 110 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  a               3    0[BANK0 ] float 
  5479 ;;  b               3    3[BANK0 ] float 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  3    0[BANK0 ] float 
  5484 ;; Registers used:
  5485 ;;		wreg, status,2, status,0, pclath, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5491 ;;      Params:         0       6       0       0       0
  5492 ;;      Locals:         0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0
  5494 ;;      Totals:         0       6       0       0       0
  5495 ;;Total ram usage:        6 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    1
  5498 ;; This function calls:
  5499 ;;		___ftge
  5500 ;; This function is called by:
  5501 ;;		_Fuzzy
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           
  5506                           ;psect for function _minimo
  5507  1390                     _minimo:	
  5508                           
  5509                           ;main.c: 111: if (a < b) {
  5510                           
  5511                           ;incstack = 0
  5512                           ; Regs used in _minimo: [wreg+status,2+status,0+pclath+cstack]
  5513  1390  1283               	bcf	3,5	;RP0=0, select bank0
  5514  1391  1303               	bcf	3,6	;RP1=0, select bank0
  5515  1392  0820               	movf	minimo@a,w
  5516  1393  00F0               	movwf	___ftge@ff1
  5517  1394  0821               	movf	minimo@a+1,w
  5518  1395  00F1               	movwf	___ftge@ff1+1
  5519  1396  0822               	movf	minimo@a+2,w
  5520  1397  00F2               	movwf	___ftge@ff1+2
  5521  1398  0823               	movf	minimo@b,w
  5522  1399  00F3               	movwf	___ftge@ff2
  5523  139A  0824               	movf	minimo@b+1,w
  5524  139B  00F4               	movwf	___ftge@ff2+1
  5525  139C  0825               	movf	minimo@b+2,w
  5526  139D  00F5               	movwf	___ftge@ff2+2
  5527  139E  160A  118A  253C  160A  118A  	fcall	___ftge
  5528  13A3  1C03               	btfss	3,0
  5529  13A4  0008               	return
  5530                           
  5531                           ;main.c: 113: }
  5532                           ;main.c: 114: return b;
  5533                           
  5534                           ;main.c: 112: return a;
  5535  13A5  1283               	bcf	3,5	;RP0=0, select bank0
  5536  13A6  1303               	bcf	3,6	;RP1=0, select bank0
  5537  13A7  0823               	movf	minimo@b,w
  5538  13A8  00A0               	movwf	?_minimo
  5539  13A9  0824               	movf	minimo@b+1,w
  5540  13AA  00A1               	movwf	?_minimo+1
  5541  13AB  0825               	movf	minimo@b+2,w
  5542  13AC  00A2               	movwf	?_minimo+2
  5543  13AD  0008               	return
  5544  13AE                     __end_of_minimo:	
  5545                           
  5546                           	psect	text29
  5547  1372                     __ptext29:	
  5548 ;; *************** function _maximo *****************
  5549 ;; Defined at:
  5550 ;;		line 103 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  a               3    6[BANK0 ] float 
  5553 ;;  b               3    9[BANK0 ] float 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  3    6[BANK0 ] float 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0, pclath, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5565 ;;      Params:         0       6       0       0       0
  5566 ;;      Locals:         0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0
  5568 ;;      Totals:         0       6       0       0       0
  5569 ;;Total ram usage:        6 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    1
  5572 ;; This function calls:
  5573 ;;		___ftge
  5574 ;; This function is called by:
  5575 ;;		_Fuzzy
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           
  5580                           ;psect for function _maximo
  5581  1372                     _maximo:	
  5582                           
  5583                           ;main.c: 104: if (a > b) {
  5584                           
  5585                           ;incstack = 0
  5586                           ; Regs used in _maximo: [wreg+status,2+status,0+pclath+cstack]
  5587  1372  1283               	bcf	3,5	;RP0=0, select bank0
  5588  1373  1303               	bcf	3,6	;RP1=0, select bank0
  5589  1374  0829               	movf	maximo@b,w
  5590  1375  00F0               	movwf	___ftge@ff1
  5591  1376  082A               	movf	maximo@b+1,w
  5592  1377  00F1               	movwf	___ftge@ff1+1
  5593  1378  082B               	movf	maximo@b+2,w
  5594  1379  00F2               	movwf	___ftge@ff1+2
  5595  137A  0826               	movf	maximo@a,w
  5596  137B  00F3               	movwf	___ftge@ff2
  5597  137C  0827               	movf	maximo@a+1,w
  5598  137D  00F4               	movwf	___ftge@ff2+1
  5599  137E  0828               	movf	maximo@a+2,w
  5600  137F  00F5               	movwf	___ftge@ff2+2
  5601  1380  160A  118A  253C  160A  118A  	fcall	___ftge
  5602  1385  1C03               	btfss	3,0
  5603  1386  0008               	return
  5604                           
  5605                           ;main.c: 106: }
  5606                           ;main.c: 107: return b;
  5607                           
  5608                           ;main.c: 105: return a;
  5609  1387  1283               	bcf	3,5	;RP0=0, select bank0
  5610  1388  1303               	bcf	3,6	;RP1=0, select bank0
  5611  1389  0829               	movf	maximo@b,w
  5612  138A  00A6               	movwf	?_maximo
  5613  138B  082A               	movf	maximo@b+1,w
  5614  138C  00A7               	movwf	?_maximo+1
  5615  138D  082B               	movf	maximo@b+2,w
  5616  138E  00A8               	movwf	?_maximo+2
  5617  138F  0008               	return
  5618  1390                     __end_of_maximo:	
  5619                           
  5620                           	psect	text30
  5621  153C                     __ptext30:	
  5622 ;; *************** function ___ftge *****************
  5623 ;; Defined at:
  5624 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  ff1             3    0[COMMON] float 
  5627 ;;  ff2             3    3[COMMON] float 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;		None
  5630 ;; Return value:  Size  Location     Type
  5631 ;;		None               void
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         6       0       0       0       0
  5640 ;;      Locals:         0       0       0       0       0
  5641 ;;      Temps:          6       0       0       0       0
  5642 ;;      Totals:        12       0       0       0       0
  5643 ;;Total ram usage:       12 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_trapmf
  5649 ;;		_maximo
  5650 ;;		_minimo
  5651 ;;		_Fuzzy
  5652 ;;		_trimf
  5653 ;;		_min_val
  5654 ;;		_max_val
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           
  5659                           ;psect for function ___ftge
  5660  153C                     ___ftge:	
  5661                           
  5662                           ;incstack = 0
  5663                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5664  153C  1FF2               	btfss	___ftge@ff1+2,7
  5665  153D  2D63               	goto	i1l2244
  5666  153E  3000               	movlw	0
  5667  153F  00F6               	movwf	??___ftge
  5668  1540  3000               	movlw	0
  5669  1541  00F7               	movwf	??___ftge+1
  5670  1542  3080               	movlw	128
  5671  1543  00F8               	movwf	??___ftge+2
  5672  1544  0970               	comf	___ftge@ff1,w
  5673  1545  00F9               	movwf	??___ftge+3
  5674  1546  0971               	comf	___ftge@ff1+1,w
  5675  1547  00FA               	movwf	??___ftge+4
  5676  1548  0972               	comf	___ftge@ff1+2,w
  5677  1549  00FB               	movwf	??___ftge+5
  5678  154A  0AF9               	incf	??___ftge+3,f
  5679  154B  1903               	skipnz
  5680  154C  0AFA               	incf	??___ftge+4,f
  5681  154D  1903               	skipnz
  5682  154E  0AFB               	incf	??___ftge+5,f
  5683  154F  0879               	movf	??___ftge+3,w
  5684  1550  07F6               	addwf	??___ftge,f
  5685  1551  087A               	movf	??___ftge+4,w
  5686  1552  1803               	skipnc
  5687  1553  0F7A               	incfsz	??___ftge+4,w
  5688  1554  2D56               	goto	u237_21
  5689  1555  2D57               	goto	u237_22
  5690  1556                     u237_21:	
  5691  1556  07F7               	addwf	??___ftge+1,f
  5692  1557                     u237_22:	
  5693  1557  087B               	movf	??___ftge+5,w
  5694  1558  1803               	skipnc
  5695  1559  0F7B               	incfsz	??___ftge+5,w
  5696  155A  2D5C               	goto	u237_23
  5697  155B  2D5D               	goto	u237_24
  5698  155C                     u237_23:	
  5699  155C  07F8               	addwf	??___ftge+2,f
  5700  155D                     u237_24:	
  5701  155D  0876               	movf	??___ftge,w
  5702  155E  00F0               	movwf	___ftge@ff1
  5703  155F  0877               	movf	??___ftge+1,w
  5704  1560  00F1               	movwf	___ftge@ff1+1
  5705  1561  0878               	movf	??___ftge+2,w
  5706  1562  00F2               	movwf	___ftge@ff1+2
  5707  1563                     i1l2244:	
  5708  1563  1FF5               	btfss	___ftge@ff2+2,7
  5709  1564  2D8A               	goto	i1l2248
  5710  1565  3000               	movlw	0
  5711  1566  00F6               	movwf	??___ftge
  5712  1567  3000               	movlw	0
  5713  1568  00F7               	movwf	??___ftge+1
  5714  1569  3080               	movlw	128
  5715  156A  00F8               	movwf	??___ftge+2
  5716  156B  0973               	comf	___ftge@ff2,w
  5717  156C  00F9               	movwf	??___ftge+3
  5718  156D  0974               	comf	___ftge@ff2+1,w
  5719  156E  00FA               	movwf	??___ftge+4
  5720  156F  0975               	comf	___ftge@ff2+2,w
  5721  1570  00FB               	movwf	??___ftge+5
  5722  1571  0AF9               	incf	??___ftge+3,f
  5723  1572  1903               	skipnz
  5724  1573  0AFA               	incf	??___ftge+4,f
  5725  1574  1903               	skipnz
  5726  1575  0AFB               	incf	??___ftge+5,f
  5727  1576  0879               	movf	??___ftge+3,w
  5728  1577  07F6               	addwf	??___ftge,f
  5729  1578  087A               	movf	??___ftge+4,w
  5730  1579  1803               	skipnc
  5731  157A  0F7A               	incfsz	??___ftge+4,w
  5732  157B  2D7D               	goto	u239_21
  5733  157C  2D7E               	goto	u239_22
  5734  157D                     u239_21:	
  5735  157D  07F7               	addwf	??___ftge+1,f
  5736  157E                     u239_22:	
  5737  157E  087B               	movf	??___ftge+5,w
  5738  157F  1803               	skipnc
  5739  1580  0F7B               	incfsz	??___ftge+5,w
  5740  1581  2D83               	goto	u239_23
  5741  1582  2D84               	goto	u239_24
  5742  1583                     u239_23:	
  5743  1583  07F8               	addwf	??___ftge+2,f
  5744  1584                     u239_24:	
  5745  1584  0876               	movf	??___ftge,w
  5746  1585  00F3               	movwf	___ftge@ff2
  5747  1586  0877               	movf	??___ftge+1,w
  5748  1587  00F4               	movwf	___ftge@ff2+1
  5749  1588  0878               	movf	??___ftge+2,w
  5750  1589  00F5               	movwf	___ftge@ff2+2
  5751  158A                     i1l2248:	
  5752  158A  3080               	movlw	128
  5753  158B  06F2               	xorwf	___ftge@ff1+2,f
  5754  158C  3080               	movlw	128
  5755  158D  06F5               	xorwf	___ftge@ff2+2,f
  5756  158E  0875               	movf	___ftge@ff2+2,w
  5757  158F  0272               	subwf	___ftge@ff1+2,w
  5758  1590  1D03               	skipz
  5759  1591  0008               	return
  5760  1592  0874               	movf	___ftge@ff2+1,w
  5761  1593  0271               	subwf	___ftge@ff1+1,w
  5762  1594  1D03               	skipz
  5763  1595  0008               	return
  5764  1596  0873               	movf	___ftge@ff2,w
  5765  1597  0270               	subwf	___ftge@ff1,w
  5766  1598  0008               	return
  5767  1599                     __end_of___ftge:	
  5768                           
  5769                           	psect	text31
  5770  12C1                     __ptext31:	
  5771 ;; *************** function _abs *****************
  5772 ;; Defined at:
  5773 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  a               2    0[COMMON] int 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;		None
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  2    0[COMMON] int 
  5780 ;; Registers used:
  5781 ;;		wreg, status,2, status,0
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5787 ;;      Params:         2       0       0       0       0
  5788 ;;      Locals:         0       0       0       0       0
  5789 ;;      Temps:          2       0       0       0       0
  5790 ;;      Totals:         4       0       0       0       0
  5791 ;;Total ram usage:        4 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_Fuzzy
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           
  5801                           ;psect for function _abs
  5802  12C1                     _abs:	
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in _abs: [wreg+status,2+status,0]
  5806  12C1  1FF1               	btfss	abs@a+1,7
  5807  12C2  0008               	return
  5808  12C3  0970               	comf	abs@a,w
  5809  12C4  00F2               	movwf	??_abs
  5810  12C5  0971               	comf	abs@a+1,w
  5811  12C6  00F3               	movwf	??_abs+1
  5812  12C7  0AF2               	incf	??_abs,f
  5813  12C8  1903               	skipnz
  5814  12C9  0AF3               	incf	??_abs+1,f
  5815  12CA  0872               	movf	??_abs,w
  5816  12CB  00F0               	movwf	?_abs
  5817  12CC  0873               	movf	??_abs+1,w
  5818  12CD  00F1               	movwf	?_abs+1
  5819  12CE  0008               	return
  5820  12CF                     __end_of_abs:	
  5821                           
  5822                           	psect	text32
  5823  1434                     __ptext32:	
  5824 ;; *************** function ___wmul *****************
  5825 ;; Defined at:
  5826 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  multiplier      2   26[BANK0 ] unsigned int 
  5829 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  product         2   30[BANK0 ] unsigned int 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  2   26[BANK0 ] unsigned int 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5841 ;;      Params:         0       4       0       0       0
  5842 ;;      Locals:         0       2       0       0       0
  5843 ;;      Temps:          0       0       0       0       0
  5844 ;;      Totals:         0       6       0       0       0
  5845 ;;Total ram usage:        6 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; This function calls:
  5848 ;;		Nothing
  5849 ;; This function is called by:
  5850 ;;		_Fuzzy
  5851 ;;		_ISR
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           
  5856                           ;psect for function ___wmul
  5857  1434                     ___wmul:	
  5858                           
  5859                           ;incstack = 0
  5860                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5861  1434  1283               	bcf	3,5	;RP0=0, select bank0
  5862  1435  1303               	bcf	3,6	;RP1=0, select bank0
  5863  1436  01BE               	clrf	___wmul@product
  5864  1437  01BF               	clrf	___wmul@product+1
  5865  1438                     i1l2346:	
  5866  1438  1C3A               	btfss	___wmul@multiplier,0
  5867  1439  2C40               	goto	i1l563
  5868  143A  083C               	movf	___wmul@multiplicand,w
  5869  143B  07BE               	addwf	___wmul@product,f
  5870  143C  1803               	skipnc
  5871  143D  0ABF               	incf	___wmul@product+1,f
  5872  143E  083D               	movf	___wmul@multiplicand+1,w
  5873  143F  07BF               	addwf	___wmul@product+1,f
  5874  1440                     i1l563:	
  5875  1440  3001               	movlw	1
  5876  1441                     u255_25:	
  5877  1441  1003               	clrc
  5878  1442  0DBC               	rlf	___wmul@multiplicand,f
  5879  1443  0DBD               	rlf	___wmul@multiplicand+1,f
  5880  1444  3EFF               	addlw	-1
  5881  1445  1D03               	skipz
  5882  1446  2C41               	goto	u255_25
  5883  1447  3001               	movlw	1
  5884  1448                     u256_25:	
  5885  1448  1003               	clrc
  5886  1449  0CBB               	rrf	___wmul@multiplier+1,f
  5887  144A  0CBA               	rrf	___wmul@multiplier,f
  5888  144B  3EFF               	addlw	-1
  5889  144C  1D03               	skipz
  5890  144D  2C48               	goto	u256_25
  5891  144E  083B               	movf	___wmul@multiplier+1,w
  5892  144F  043A               	iorwf	___wmul@multiplier,w
  5893  1450  1D03               	skipz
  5894  1451  2C38               	goto	i1l2346
  5895  1452  083F               	movf	___wmul@product+1,w
  5896  1453  01BB               	clrf	?___wmul+1
  5897  1454  07BB               	addwf	?___wmul+1,f
  5898  1455  083E               	movf	___wmul@product,w
  5899  1456  01BA               	clrf	?___wmul
  5900  1457  07BA               	addwf	?___wmul,f
  5901  1458  0008               	return
  5902  1459                     __end_of___wmul:	
  5903                           
  5904                           	psect	text33
  5905  12E1                     __ptext33:	
  5906 ;; *************** function ___lwtoft *****************
  5907 ;; Defined at:
  5908 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  c               2    8[COMMON] unsigned int 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  3    8[COMMON] float 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0, pclath, cstack
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5922 ;;      Params:         3       0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0
  5924 ;;      Temps:          1       0       0       0       0
  5925 ;;      Totals:         4       0       0       0       0
  5926 ;;Total ram usage:        4 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    1
  5929 ;; This function calls:
  5930 ;;		___ftpack
  5931 ;; This function is called by:
  5932 ;;		_Fuzzy
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           
  5937                           ;psect for function ___lwtoft
  5938  12E1                     ___lwtoft:	
  5939                           
  5940                           ;incstack = 0
  5941                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5942  12E1  0878               	movf	___lwtoft@c,w
  5943  12E2  00F0               	movwf	___ftpack@arg
  5944  12E3  0879               	movf	___lwtoft@c+1,w
  5945  12E4  00F1               	movwf	___ftpack@arg+1
  5946  12E5  01F2               	clrf	___ftpack@arg+2
  5947  12E6  308E               	movlw	142
  5948  12E7  00FB               	movwf	??___lwtoft
  5949  12E8  087B               	movf	??___lwtoft,w
  5950  12E9  00F3               	movwf	___ftpack@exp
  5951  12EA  01F4               	clrf	___ftpack@sign
  5952  12EB  160A  118A  2599   	fcall	___ftpack
  5953  12EE  0870               	movf	?___ftpack,w
  5954  12EF  00F8               	movwf	?___lwtoft
  5955  12F0  0871               	movf	?___ftpack+1,w
  5956  12F1  00F9               	movwf	?___lwtoft+1
  5957  12F2  0872               	movf	?___ftpack+2,w
  5958  12F3  00FA               	movwf	?___lwtoft+2
  5959  12F4  0008               	return
  5960  12F5                     __end_of___lwtoft:	
  5961                           
  5962                           	psect	text34
  5963  16E3                     __ptext34:	
  5964 ;; *************** function ___fttol *****************
  5965 ;; Defined at:
  5966 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  f1              3   12[BANK0 ] float 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;  lval            4   21[BANK0 ] unsigned long 
  5971 ;;  exp1            1   25[BANK0 ] unsigned char 
  5972 ;;  sign1           1   20[BANK0 ] unsigned char 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  4   12[BANK0 ] long 
  5975 ;; Registers used:
  5976 ;;		wreg, status,2, status,0
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5982 ;;      Params:         0       4       0       0       0
  5983 ;;      Locals:         0       6       0       0       0
  5984 ;;      Temps:          0       4       0       0       0
  5985 ;;      Totals:         0      14       0       0       0
  5986 ;;Total ram usage:       14 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; This function calls:
  5989 ;;		Nothing
  5990 ;; This function is called by:
  5991 ;;		_Fuzzy
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           
  5996                           ;psect for function ___fttol
  5997  16E3                     ___fttol:	
  5998                           
  5999                           ;incstack = 0
  6000                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6001  16E3  1283               	bcf	3,5	;RP0=0, select bank0
  6002  16E4  1303               	bcf	3,6	;RP1=0, select bank0
  6003  16E5  082C               	movf	___fttol@f1,w
  6004  16E6  00B0               	movwf	??___fttol
  6005  16E7  082D               	movf	___fttol@f1+1,w
  6006  16E8  00B1               	movwf	??___fttol+1
  6007  16E9  082E               	movf	___fttol@f1+2,w
  6008  16EA  00B2               	movwf	??___fttol+2
  6009  16EB  1003               	clrc
  6010  16EC  0D31               	rlf	??___fttol+1,w
  6011  16ED  0D32               	rlf	??___fttol+2,w
  6012  16EE  00B3               	movwf	??___fttol+3
  6013  16EF  0833               	movf	??___fttol+3,w
  6014  16F0  00B9               	movwf	___fttol@exp1
  6015  16F1  08B9               	movf	___fttol@exp1,f
  6016  16F2  1D03               	skipz
  6017  16F3  2EFD               	goto	i1l2464
  6018  16F4  3000               	movlw	0
  6019  16F5  00AF               	movwf	?___fttol+3
  6020  16F6  3000               	movlw	0
  6021  16F7  00AE               	movwf	?___fttol+2
  6022  16F8  3000               	movlw	0
  6023  16F9  00AD               	movwf	?___fttol+1
  6024  16FA  3000               	movlw	0
  6025  16FB  00AC               	movwf	?___fttol
  6026  16FC  0008               	return
  6027  16FD                     i1l2464:	
  6028  16FD  082C               	movf	___fttol@f1,w
  6029  16FE  00B0               	movwf	??___fttol
  6030  16FF  082D               	movf	___fttol@f1+1,w
  6031  1700  00B1               	movwf	??___fttol+1
  6032  1701  082E               	movf	___fttol@f1+2,w
  6033  1702  00B2               	movwf	??___fttol+2
  6034  1703  3017               	movlw	23
  6035  1704                     u284_25:	
  6036  1704  1003               	clrc
  6037  1705  0CB2               	rrf	??___fttol+2,f
  6038  1706  0CB1               	rrf	??___fttol+1,f
  6039  1707  0CB0               	rrf	??___fttol,f
  6040  1708  3EFF               	addlw	-1
  6041  1709  1D03               	skipz
  6042  170A  2F04               	goto	u284_25
  6043  170B  0830               	movf	??___fttol,w
  6044  170C  00B3               	movwf	??___fttol+3
  6045  170D  0833               	movf	??___fttol+3,w
  6046  170E  00B4               	movwf	___fttol@sign1
  6047  170F  17AD               	bsf	___fttol@f1+1,7
  6048  1710  30FF               	movlw	255
  6049  1711  05AC               	andwf	___fttol@f1,f
  6050  1712  30FF               	movlw	255
  6051  1713  05AD               	andwf	___fttol@f1+1,f
  6052  1714  3000               	movlw	0
  6053  1715  05AE               	andwf	___fttol@f1+2,f
  6054  1716  082C               	movf	___fttol@f1,w
  6055  1717  00B5               	movwf	___fttol@lval
  6056  1718  082D               	movf	___fttol@f1+1,w
  6057  1719  00B6               	movwf	___fttol@lval+1
  6058  171A  082E               	movf	___fttol@f1+2,w
  6059  171B  00B7               	movwf	___fttol@lval+2
  6060  171C  01B8               	clrf	___fttol@lval+3
  6061  171D  308E               	movlw	142
  6062  171E  02B9               	subwf	___fttol@exp1,f
  6063  171F  1FB9               	btfss	___fttol@exp1,7
  6064  1720  2F3F               	goto	i1l2484
  6065  1721  0839               	movf	___fttol@exp1,w
  6066  1722  3A80               	xorlw	128
  6067  1723  3E8F               	addlw	143
  6068  1724  1803               	skipnc
  6069  1725  2F2F               	goto	i1l2482
  6070  1726  3000               	movlw	0
  6071  1727  00AF               	movwf	?___fttol+3
  6072  1728  3000               	movlw	0
  6073  1729  00AE               	movwf	?___fttol+2
  6074  172A  3000               	movlw	0
  6075  172B  00AD               	movwf	?___fttol+1
  6076  172C  3000               	movlw	0
  6077  172D  00AC               	movwf	?___fttol
  6078  172E  0008               	return
  6079  172F                     i1l2482:	
  6080  172F  3001               	movlw	1
  6081  1730                     u287_25:	
  6082  1730  1003               	clrc
  6083  1731  0CB8               	rrf	___fttol@lval+3,f
  6084  1732  0CB7               	rrf	___fttol@lval+2,f
  6085  1733  0CB6               	rrf	___fttol@lval+1,f
  6086  1734  0CB5               	rrf	___fttol@lval,f
  6087  1735  3EFF               	addlw	-1
  6088  1736  1D03               	skipz
  6089  1737  2F30               	goto	u287_25
  6090  1738  3001               	movlw	1
  6091  1739  00B0               	movwf	??___fttol
  6092  173A  0830               	movf	??___fttol,w
  6093  173B  07B9               	addwf	___fttol@exp1,f
  6094  173C  1903               	btfsc	3,2
  6095  173D  2F5A               	goto	i1l2494
  6096  173E  2F2F               	goto	i1l2482
  6097  173F                     i1l2484:	
  6098  173F  3018               	movlw	24
  6099  1740  0239               	subwf	___fttol@exp1,w
  6100  1741  1C03               	skipc
  6101  1742  2F57               	goto	i1l2492
  6102  1743  3000               	movlw	0
  6103  1744  00AF               	movwf	?___fttol+3
  6104  1745  3000               	movlw	0
  6105  1746  00AE               	movwf	?___fttol+2
  6106  1747  3000               	movlw	0
  6107  1748  00AD               	movwf	?___fttol+1
  6108  1749  3000               	movlw	0
  6109  174A  00AC               	movwf	?___fttol
  6110  174B  0008               	return
  6111  174C                     i1l2490:	
  6112  174C  3001               	movlw	1
  6113  174D  00B0               	movwf	??___fttol
  6114  174E                     u290_25:	
  6115  174E  1003               	clrc
  6116  174F  0DB5               	rlf	___fttol@lval,f
  6117  1750  0DB6               	rlf	___fttol@lval+1,f
  6118  1751  0DB7               	rlf	___fttol@lval+2,f
  6119  1752  0DB8               	rlf	___fttol@lval+3,f
  6120  1753  0BB0               	decfsz	??___fttol,f
  6121  1754  2F4E               	goto	u290_25
  6122  1755  3001               	movlw	1
  6123  1756  02B9               	subwf	___fttol@exp1,f
  6124  1757                     i1l2492:	
  6125  1757  08B9               	movf	___fttol@exp1,f
  6126  1758  1D03               	skipz
  6127  1759  2F4C               	goto	i1l2490
  6128  175A                     i1l2494:	
  6129  175A  0834               	movf	___fttol@sign1,w
  6130  175B  1903               	btfsc	3,2
  6131  175C  2F68               	goto	i1l2498
  6132  175D  09B5               	comf	___fttol@lval,f
  6133  175E  09B6               	comf	___fttol@lval+1,f
  6134  175F  09B7               	comf	___fttol@lval+2,f
  6135  1760  09B8               	comf	___fttol@lval+3,f
  6136  1761  0AB5               	incf	___fttol@lval,f
  6137  1762  1903               	skipnz
  6138  1763  0AB6               	incf	___fttol@lval+1,f
  6139  1764  1903               	skipnz
  6140  1765  0AB7               	incf	___fttol@lval+2,f
  6141  1766  1903               	skipnz
  6142  1767  0AB8               	incf	___fttol@lval+3,f
  6143  1768                     i1l2498:	
  6144  1768  0838               	movf	___fttol@lval+3,w
  6145  1769  00AF               	movwf	?___fttol+3
  6146  176A  0837               	movf	___fttol@lval+2,w
  6147  176B  00AE               	movwf	?___fttol+2
  6148  176C  0836               	movf	___fttol@lval+1,w
  6149  176D  00AD               	movwf	?___fttol+1
  6150  176E  0835               	movf	___fttol@lval,w
  6151  176F  00AC               	movwf	?___fttol
  6152  1770  0008               	return
  6153  1771                     __end_of___fttol:	
  6154                           
  6155                           	psect	text35
  6156  0A77                     __ptext35:	
  6157 ;; *************** function ___ftmul *****************
  6158 ;; Defined at:
  6159 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  f1              3   50[BANK0 ] float 
  6162 ;;  f2              3   53[BANK0 ] float 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
  6165 ;;  sign            1   65[BANK0 ] unsigned char 
  6166 ;;  cntr            1   64[BANK0 ] unsigned char 
  6167 ;;  exp             1   60[BANK0 ] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  3   50[BANK0 ] float 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, status,0, pclath, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6177 ;;      Params:         0       6       0       0       0
  6178 ;;      Locals:         0       6       0       0       0
  6179 ;;      Temps:          0       4       0       0       0
  6180 ;;      Totals:         0      16       0       0       0
  6181 ;;Total ram usage:       16 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    1
  6184 ;; This function calls:
  6185 ;;		___ftpack
  6186 ;; This function is called by:
  6187 ;;		_Fuzzy
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           
  6192                           ;psect for function ___ftmul
  6193  0A77                     ___ftmul:	
  6194                           
  6195                           ;incstack = 0
  6196                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6197  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  6198  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  6199  0A79  0852               	movf	___ftmul@f1,w
  6200  0A7A  00D8               	movwf	??___ftmul
  6201  0A7B  0853               	movf	___ftmul@f1+1,w
  6202  0A7C  00D9               	movwf	??___ftmul+1
  6203  0A7D  0854               	movf	___ftmul@f1+2,w
  6204  0A7E  00DA               	movwf	??___ftmul+2
  6205  0A7F  1003               	clrc
  6206  0A80  0D59               	rlf	??___ftmul+1,w
  6207  0A81  0D5A               	rlf	??___ftmul+2,w
  6208  0A82  00DB               	movwf	??___ftmul+3
  6209  0A83  085B               	movf	??___ftmul+3,w
  6210  0A84  00DC               	movwf	___ftmul@exp
  6211  0A85  08DC               	movf	___ftmul@exp,f
  6212  0A86  1D03               	skipz
  6213  0A87  2A8F               	goto	i1l2414
  6214  0A88  3000               	movlw	0
  6215  0A89  00D2               	movwf	?___ftmul
  6216  0A8A  3000               	movlw	0
  6217  0A8B  00D3               	movwf	?___ftmul+1
  6218  0A8C  3000               	movlw	0
  6219  0A8D  00D4               	movwf	?___ftmul+2
  6220  0A8E  0008               	return
  6221  0A8F                     i1l2414:	
  6222  0A8F  0855               	movf	___ftmul@f2,w
  6223  0A90  00D8               	movwf	??___ftmul
  6224  0A91  0856               	movf	___ftmul@f2+1,w
  6225  0A92  00D9               	movwf	??___ftmul+1
  6226  0A93  0857               	movf	___ftmul@f2+2,w
  6227  0A94  00DA               	movwf	??___ftmul+2
  6228  0A95  1003               	clrc
  6229  0A96  0D59               	rlf	??___ftmul+1,w
  6230  0A97  0D5A               	rlf	??___ftmul+2,w
  6231  0A98  00DB               	movwf	??___ftmul+3
  6232  0A99  085B               	movf	??___ftmul+3,w
  6233  0A9A  00E1               	movwf	___ftmul@sign
  6234  0A9B  08E1               	movf	___ftmul@sign,f
  6235  0A9C  1D03               	skipz
  6236  0A9D  2AA5               	goto	i1l2420
  6237  0A9E  3000               	movlw	0
  6238  0A9F  00D2               	movwf	?___ftmul
  6239  0AA0  3000               	movlw	0
  6240  0AA1  00D3               	movwf	?___ftmul+1
  6241  0AA2  3000               	movlw	0
  6242  0AA3  00D4               	movwf	?___ftmul+2
  6243  0AA4  0008               	return
  6244  0AA5                     i1l2420:	
  6245  0AA5  0861               	movf	___ftmul@sign,w
  6246  0AA6  3E7B               	addlw	123
  6247  0AA7  00D8               	movwf	??___ftmul
  6248  0AA8  0858               	movf	??___ftmul,w
  6249  0AA9  07DC               	addwf	___ftmul@exp,f
  6250  0AAA  0852               	movf	___ftmul@f1,w
  6251  0AAB  00D8               	movwf	??___ftmul
  6252  0AAC  0853               	movf	___ftmul@f1+1,w
  6253  0AAD  00D9               	movwf	??___ftmul+1
  6254  0AAE  0854               	movf	___ftmul@f1+2,w
  6255  0AAF  00DA               	movwf	??___ftmul+2
  6256  0AB0  3010               	movlw	16
  6257  0AB1                     u271_25:	
  6258  0AB1  1003               	clrc
  6259  0AB2  0CDA               	rrf	??___ftmul+2,f
  6260  0AB3  0CD9               	rrf	??___ftmul+1,f
  6261  0AB4  0CD8               	rrf	??___ftmul,f
  6262  0AB5  3EFF               	addlw	-1
  6263  0AB6  1D03               	skipz
  6264  0AB7  2AB1               	goto	u271_25
  6265  0AB8  0858               	movf	??___ftmul,w
  6266  0AB9  00DB               	movwf	??___ftmul+3
  6267  0ABA  085B               	movf	??___ftmul+3,w
  6268  0ABB  00E1               	movwf	___ftmul@sign
  6269  0ABC  0855               	movf	___ftmul@f2,w
  6270  0ABD  00D8               	movwf	??___ftmul
  6271  0ABE  0856               	movf	___ftmul@f2+1,w
  6272  0ABF  00D9               	movwf	??___ftmul+1
  6273  0AC0  0857               	movf	___ftmul@f2+2,w
  6274  0AC1  00DA               	movwf	??___ftmul+2
  6275  0AC2  3010               	movlw	16
  6276  0AC3                     u272_25:	
  6277  0AC3  1003               	clrc
  6278  0AC4  0CDA               	rrf	??___ftmul+2,f
  6279  0AC5  0CD9               	rrf	??___ftmul+1,f
  6280  0AC6  0CD8               	rrf	??___ftmul,f
  6281  0AC7  3EFF               	addlw	-1
  6282  0AC8  1D03               	skipz
  6283  0AC9  2AC3               	goto	u272_25
  6284  0ACA  0858               	movf	??___ftmul,w
  6285  0ACB  00DB               	movwf	??___ftmul+3
  6286  0ACC  085B               	movf	??___ftmul+3,w
  6287  0ACD  06E1               	xorwf	___ftmul@sign,f
  6288  0ACE  3080               	movlw	128
  6289  0ACF  00D8               	movwf	??___ftmul
  6290  0AD0  0858               	movf	??___ftmul,w
  6291  0AD1  05E1               	andwf	___ftmul@sign,f
  6292  0AD2  17D3               	bsf	___ftmul@f1+1,7
  6293  0AD3  17D6               	bsf	___ftmul@f2+1,7
  6294  0AD4  30FF               	movlw	255
  6295  0AD5  05D5               	andwf	___ftmul@f2,f
  6296  0AD6  30FF               	movlw	255
  6297  0AD7  05D6               	andwf	___ftmul@f2+1,f
  6298  0AD8  3000               	movlw	0
  6299  0AD9  05D7               	andwf	___ftmul@f2+2,f
  6300  0ADA  3000               	movlw	0
  6301  0ADB  00DD               	movwf	___ftmul@f3_as_product
  6302  0ADC  3000               	movlw	0
  6303  0ADD  00DE               	movwf	___ftmul@f3_as_product+1
  6304  0ADE  3000               	movlw	0
  6305  0ADF  00DF               	movwf	___ftmul@f3_as_product+2
  6306  0AE0  3007               	movlw	7
  6307  0AE1  00D8               	movwf	??___ftmul
  6308  0AE2  0858               	movf	??___ftmul,w
  6309  0AE3  00E0               	movwf	___ftmul@cntr
  6310  0AE4                     i1l2432:	
  6311  0AE4  1C52               	btfss	___ftmul@f1,0
  6312  0AE5  2AF4               	goto	i1l2436
  6313  0AE6  0855               	movf	___ftmul@f2,w
  6314  0AE7  07DD               	addwf	___ftmul@f3_as_product,f
  6315  0AE8  0856               	movf	___ftmul@f2+1,w
  6316  0AE9  1103               	clrz
  6317  0AEA  1803               	skipnc
  6318  0AEB  0A56               	incf	___ftmul@f2+1,w
  6319  0AEC  1D03               	btfss	3,2
  6320  0AED  07DE               	addwf	___ftmul@f3_as_product+1,f
  6321  0AEE  0857               	movf	___ftmul@f2+2,w
  6322  0AEF  1103               	clrz
  6323  0AF0  1803               	skipnc
  6324  0AF1  0A57               	incf	___ftmul@f2+2,w
  6325  0AF2  1D03               	btfss	3,2
  6326  0AF3  07DF               	addwf	___ftmul@f3_as_product+2,f
  6327  0AF4                     i1l2436:	
  6328  0AF4  3001               	movlw	1
  6329  0AF5                     u275_25:	
  6330  0AF5  1003               	clrc
  6331  0AF6  0CD4               	rrf	___ftmul@f1+2,f
  6332  0AF7  0CD3               	rrf	___ftmul@f1+1,f
  6333  0AF8  0CD2               	rrf	___ftmul@f1,f
  6334  0AF9  3EFF               	addlw	-1
  6335  0AFA  1D03               	skipz
  6336  0AFB  2AF5               	goto	u275_25
  6337  0AFC  3001               	movlw	1
  6338  0AFD                     u276_25:	
  6339  0AFD  1003               	clrc
  6340  0AFE  0DD5               	rlf	___ftmul@f2,f
  6341  0AFF  0DD6               	rlf	___ftmul@f2+1,f
  6342  0B00  0DD7               	rlf	___ftmul@f2+2,f
  6343  0B01  3EFF               	addlw	-1
  6344  0B02  1D03               	skipz
  6345  0B03  2AFD               	goto	u276_25
  6346  0B04  3001               	movlw	1
  6347  0B05  02E0               	subwf	___ftmul@cntr,f
  6348  0B06  1D03               	btfss	3,2
  6349  0B07  2AE4               	goto	i1l2432
  6350  0B08  3009               	movlw	9
  6351  0B09  00D8               	movwf	??___ftmul
  6352  0B0A  0858               	movf	??___ftmul,w
  6353  0B0B  00E0               	movwf	___ftmul@cntr
  6354  0B0C                     i1l2444:	
  6355  0B0C  1C52               	btfss	___ftmul@f1,0
  6356  0B0D  2B1C               	goto	i1l2448
  6357  0B0E  0855               	movf	___ftmul@f2,w
  6358  0B0F  07DD               	addwf	___ftmul@f3_as_product,f
  6359  0B10  0856               	movf	___ftmul@f2+1,w
  6360  0B11  1103               	clrz
  6361  0B12  1803               	skipnc
  6362  0B13  0A56               	incf	___ftmul@f2+1,w
  6363  0B14  1D03               	btfss	3,2
  6364  0B15  07DE               	addwf	___ftmul@f3_as_product+1,f
  6365  0B16  0857               	movf	___ftmul@f2+2,w
  6366  0B17  1103               	clrz
  6367  0B18  1803               	skipnc
  6368  0B19  0A57               	incf	___ftmul@f2+2,w
  6369  0B1A  1D03               	btfss	3,2
  6370  0B1B  07DF               	addwf	___ftmul@f3_as_product+2,f
  6371  0B1C                     i1l2448:	
  6372  0B1C  3001               	movlw	1
  6373  0B1D                     u280_25:	
  6374  0B1D  1003               	clrc
  6375  0B1E  0CD4               	rrf	___ftmul@f1+2,f
  6376  0B1F  0CD3               	rrf	___ftmul@f1+1,f
  6377  0B20  0CD2               	rrf	___ftmul@f1,f
  6378  0B21  3EFF               	addlw	-1
  6379  0B22  1D03               	skipz
  6380  0B23  2B1D               	goto	u280_25
  6381  0B24  3001               	movlw	1
  6382  0B25                     u281_25:	
  6383  0B25  1003               	clrc
  6384  0B26  0CDF               	rrf	___ftmul@f3_as_product+2,f
  6385  0B27  0CDE               	rrf	___ftmul@f3_as_product+1,f
  6386  0B28  0CDD               	rrf	___ftmul@f3_as_product,f
  6387  0B29  3EFF               	addlw	-1
  6388  0B2A  1D03               	skipz
  6389  0B2B  2B25               	goto	u281_25
  6390  0B2C  3001               	movlw	1
  6391  0B2D  02E0               	subwf	___ftmul@cntr,f
  6392  0B2E  1D03               	btfss	3,2
  6393  0B2F  2B0C               	goto	i1l2444
  6394  0B30  085D               	movf	___ftmul@f3_as_product,w
  6395  0B31  00F0               	movwf	___ftpack@arg
  6396  0B32  085E               	movf	___ftmul@f3_as_product+1,w
  6397  0B33  00F1               	movwf	___ftpack@arg+1
  6398  0B34  085F               	movf	___ftmul@f3_as_product+2,w
  6399  0B35  00F2               	movwf	___ftpack@arg+2
  6400  0B36  085C               	movf	___ftmul@exp,w
  6401  0B37  00D8               	movwf	??___ftmul
  6402  0B38  0858               	movf	??___ftmul,w
  6403  0B39  00F3               	movwf	___ftpack@exp
  6404  0B3A  0861               	movf	___ftmul@sign,w
  6405  0B3B  00D9               	movwf	??___ftmul+1
  6406  0B3C  0859               	movf	??___ftmul+1,w
  6407  0B3D  00F4               	movwf	___ftpack@sign
  6408  0B3E  160A  118A  2599   	fcall	___ftpack
  6409  0B41  0870               	movf	?___ftpack,w
  6410  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  6411  0B43  1303               	bcf	3,6	;RP1=0, select bank0
  6412  0B44  00D2               	movwf	?___ftmul
  6413  0B45  0871               	movf	?___ftpack+1,w
  6414  0B46  00D3               	movwf	?___ftmul+1
  6415  0B47  0872               	movf	?___ftpack+2,w
  6416  0B48  00D4               	movwf	?___ftmul+2
  6417  0B49  0008               	return
  6418  0B4A                     __end_of___ftmul:	
  6419                           
  6420                           	psect	text36
  6421  13CE                     __ptext36:	
  6422 ;; *************** function ___awtoft *****************
  6423 ;; Defined at:
  6424 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  c               2    8[COMMON] int 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  sign            1   13[COMMON] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  3    8[COMMON] float 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0, pclath, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6438 ;;      Params:         3       0       0       0       0
  6439 ;;      Locals:         1       0       0       0       0
  6440 ;;      Temps:          2       0       0       0       0
  6441 ;;      Totals:         6       0       0       0       0
  6442 ;;Total ram usage:        6 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    1
  6445 ;; This function calls:
  6446 ;;		___ftpack
  6447 ;; This function is called by:
  6448 ;;		_Fuzzy
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function ___awtoft
  6454  13CE                     ___awtoft:	
  6455                           
  6456                           ;incstack = 0
  6457                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6458  13CE  01FD               	clrf	___awtoft@sign
  6459  13CF  1FF9               	btfss	___awtoft@c+1,7
  6460  13D0  2BD8               	goto	i1l2404
  6461  13D1  09F8               	comf	___awtoft@c,f
  6462  13D2  09F9               	comf	___awtoft@c+1,f
  6463  13D3  0AF8               	incf	___awtoft@c,f
  6464  13D4  1903               	skipnz
  6465  13D5  0AF9               	incf	___awtoft@c+1,f
  6466  13D6  01FD               	clrf	___awtoft@sign
  6467  13D7  0AFD               	incf	___awtoft@sign,f
  6468  13D8                     i1l2404:	
  6469  13D8  0878               	movf	___awtoft@c,w
  6470  13D9  00F0               	movwf	___ftpack@arg
  6471  13DA  0879               	movf	___awtoft@c+1,w
  6472  13DB  00F1               	movwf	___ftpack@arg+1
  6473  13DC  01F2               	clrf	___ftpack@arg+2
  6474  13DD  308E               	movlw	142
  6475  13DE  00FB               	movwf	??___awtoft
  6476  13DF  087B               	movf	??___awtoft,w
  6477  13E0  00F3               	movwf	___ftpack@exp
  6478  13E1  087D               	movf	___awtoft@sign,w
  6479  13E2  00FC               	movwf	??___awtoft+1
  6480  13E3  087C               	movf	??___awtoft+1,w
  6481  13E4  00F4               	movwf	___ftpack@sign
  6482  13E5  160A  118A  2599   	fcall	___ftpack
  6483  13E8  0870               	movf	?___ftpack,w
  6484  13E9  00F8               	movwf	?___awtoft
  6485  13EA  0871               	movf	?___ftpack+1,w
  6486  13EB  00F9               	movwf	?___awtoft+1
  6487  13EC  0872               	movf	?___ftpack+2,w
  6488  13ED  00FA               	movwf	?___awtoft+2
  6489  13EE  0008               	return
  6490  13EF                     __end_of___awtoft:	
  6491                           
  6492                           	psect	text37
  6493  1599                     __ptext37:	
  6494 ;; *************** function ___ftpack *****************
  6495 ;; Defined at:
  6496 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  arg             3    0[COMMON] unsigned um
  6499 ;;  exp             1    3[COMMON] unsigned char 
  6500 ;;  sign            1    4[COMMON] unsigned char 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  3    0[COMMON] float 
  6505 ;; Registers used:
  6506 ;;		wreg, status,2, status,0
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6512 ;;      Params:         5       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0
  6514 ;;      Temps:          3       0       0       0       0
  6515 ;;      Totals:         8       0       0       0       0
  6516 ;;Total ram usage:        8 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		___awtoft
  6522 ;;		___ftadd
  6523 ;;		___ftdiv
  6524 ;;		___ftmul
  6525 ;;		___lwtoft
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           
  6530                           ;psect for function ___ftpack
  6531  1599                     ___ftpack:	
  6532                           
  6533                           ;incstack = 0
  6534                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6535  1599  0873               	movf	___ftpack@exp,w
  6536  159A  1903               	btfsc	3,2
  6537  159B  2DA1               	goto	i1l2096
  6538  159C  0872               	movf	___ftpack@arg+2,w
  6539  159D  0471               	iorwf	___ftpack@arg+1,w
  6540  159E  0470               	iorwf	___ftpack@arg,w
  6541  159F  1D03               	skipz
  6542  15A0  2DB4               	goto	i1l2102
  6543  15A1                     i1l2096:	
  6544  15A1  3000               	movlw	0
  6545  15A2  00F0               	movwf	?___ftpack
  6546  15A3  3000               	movlw	0
  6547  15A4  00F1               	movwf	?___ftpack+1
  6548  15A5  3000               	movlw	0
  6549  15A6  00F2               	movwf	?___ftpack+2
  6550  15A7  0008               	return
  6551  15A8                     i1l2100:	
  6552  15A8  3001               	movlw	1
  6553  15A9  00F5               	movwf	??___ftpack
  6554  15AA  0875               	movf	??___ftpack,w
  6555  15AB  07F3               	addwf	___ftpack@exp,f
  6556  15AC  3001               	movlw	1
  6557  15AD                     u194_25:	
  6558  15AD  1003               	clrc
  6559  15AE  0CF2               	rrf	___ftpack@arg+2,f
  6560  15AF  0CF1               	rrf	___ftpack@arg+1,f
  6561  15B0  0CF0               	rrf	___ftpack@arg,f
  6562  15B1  3EFF               	addlw	-1
  6563  15B2  1D03               	skipz
  6564  15B3  2DAD               	goto	u194_25
  6565  15B4                     i1l2102:	
  6566  15B4  30FE               	movlw	254
  6567  15B5  0572               	andwf	___ftpack@arg+2,w
  6568  15B6  1903               	btfsc	3,2
  6569  15B7  2DCF               	goto	i1l728
  6570  15B8  2DA8               	goto	i1l2100
  6571  15B9                     i1l2104:	
  6572  15B9  3001               	movlw	1
  6573  15BA  00F5               	movwf	??___ftpack
  6574  15BB  0875               	movf	??___ftpack,w
  6575  15BC  07F3               	addwf	___ftpack@exp,f
  6576  15BD  3001               	movlw	1
  6577  15BE  07F0               	addwf	___ftpack@arg,f
  6578  15BF  3000               	movlw	0
  6579  15C0  1803               	skipnc
  6580  15C1  3001               	movlw	1
  6581  15C2  07F1               	addwf	___ftpack@arg+1,f
  6582  15C3  3000               	movlw	0
  6583  15C4  1803               	skipnc
  6584  15C5  3001               	movlw	1
  6585  15C6  07F2               	addwf	___ftpack@arg+2,f
  6586  15C7  3001               	movlw	1
  6587  15C8                     u196_25:	
  6588  15C8  1003               	clrc
  6589  15C9  0CF2               	rrf	___ftpack@arg+2,f
  6590  15CA  0CF1               	rrf	___ftpack@arg+1,f
  6591  15CB  0CF0               	rrf	___ftpack@arg,f
  6592  15CC  3EFF               	addlw	-1
  6593  15CD  1D03               	skipz
  6594  15CE  2DC8               	goto	u196_25
  6595  15CF                     i1l728:	
  6596  15CF  30FF               	movlw	255
  6597  15D0  0572               	andwf	___ftpack@arg+2,w
  6598  15D1  1903               	btfsc	3,2
  6599  15D2  2DDE               	goto	i1l2112
  6600  15D3  2DB9               	goto	i1l2104
  6601  15D4                     i1l2110:	
  6602  15D4  3001               	movlw	1
  6603  15D5  02F3               	subwf	___ftpack@exp,f
  6604  15D6  3001               	movlw	1
  6605  15D7                     u198_25:	
  6606  15D7  1003               	clrc
  6607  15D8  0DF0               	rlf	___ftpack@arg,f
  6608  15D9  0DF1               	rlf	___ftpack@arg+1,f
  6609  15DA  0DF2               	rlf	___ftpack@arg+2,f
  6610  15DB  3EFF               	addlw	-1
  6611  15DC  1D03               	skipz
  6612  15DD  2DD7               	goto	u198_25
  6613  15DE                     i1l2112:	
  6614  15DE  1FF1               	btfss	___ftpack@arg+1,7
  6615  15DF  2DD4               	goto	i1l2110
  6616  15E0  1873               	btfsc	___ftpack@exp,0
  6617  15E1  2DE8               	goto	i1l734
  6618  15E2  30FF               	movlw	255
  6619  15E3  05F0               	andwf	___ftpack@arg,f
  6620  15E4  307F               	movlw	127
  6621  15E5  05F1               	andwf	___ftpack@arg+1,f
  6622  15E6  30FF               	movlw	255
  6623  15E7  05F2               	andwf	___ftpack@arg+2,f
  6624  15E8                     i1l734:	
  6625  15E8  1003               	clrc
  6626  15E9  0CF3               	rrf	___ftpack@exp,f
  6627  15EA  0873               	movf	___ftpack@exp,w
  6628  15EB  00F5               	movwf	??___ftpack
  6629  15EC  01F6               	clrf	??___ftpack+1
  6630  15ED  01F7               	clrf	??___ftpack+2
  6631  15EE  3010               	movlw	16
  6632  15EF                     u201_25:	
  6633  15EF  1003               	clrc
  6634  15F0  0DF5               	rlf	??___ftpack,f
  6635  15F1  0DF6               	rlf	??___ftpack+1,f
  6636  15F2  0DF7               	rlf	??___ftpack+2,f
  6637  15F3  3EFF               	addlw	-1
  6638  15F4  1D03               	skipz
  6639  15F5  2DEF               	goto	u201_25
  6640  15F6  0875               	movf	??___ftpack,w
  6641  15F7  04F0               	iorwf	___ftpack@arg,f
  6642  15F8  0876               	movf	??___ftpack+1,w
  6643  15F9  04F1               	iorwf	___ftpack@arg+1,f
  6644  15FA  0877               	movf	??___ftpack+2,w
  6645  15FB  04F2               	iorwf	___ftpack@arg+2,f
  6646  15FC  0874               	movf	___ftpack@sign,w
  6647  15FD  1903               	btfsc	3,2
  6648  15FE  0008               	return
  6649  15FF  17F2               	bsf	___ftpack@arg+2,7
  6650  1600  0008               	return
  6651  1601                     __end_of___ftpack:	
  6652  007E                     btemp	set	126	;btemp
  6653  007E                     wtemp	set	126
  6654  007E                     wtemp0	set	126
  6655  0080                     wtemp1	set	128
  6656  0082                     wtemp2	set	130
  6657  0084                     wtemp3	set	132
  6658  0086                     wtemp4	set	134
  6659  0088                     wtemp5	set	136
  6660  007F                     wtemp6	set	127
  6661  007E                     ttemp	set	126
  6662  007E                     ttemp0	set	126
  6663  0081                     ttemp1	set	129
  6664  0084                     ttemp2	set	132
  6665  0087                     ttemp3	set	135
  6666  007F                     ttemp4	set	127
  6667  007E                     ltemp	set	126
  6668  007E                     ltemp0	set	126
  6669  0082                     ltemp1	set	130
  6670  0086                     ltemp2	set	134
  6671  0080                     ltemp3	set	128
  6672                           
  6673                           	psect	text22_split_1
  6674  0802                     L11:	
  6675  0802  01F9               	clrf	___awtoft@c+1
  6676  0803  07F9               	addwf	___awtoft@c+1,f
  6677  0804  0870               	movf	?_abs,w
  6678  0805  01F8               	clrf	___awtoft@c
  6679  0806  07F8               	addwf	___awtoft@c,f
  6680  0807  160A  118A  23CE  120A  158A  	fcall	___awtoft
  6681  080C  0878               	movf	?___awtoft,w
  6682  080D  1283               	bcf	3,5	;RP0=0, select bank0
  6683  080E  1303               	bcf	3,6	;RP1=0, select bank0
  6684  080F  00A0               	movwf	minimo@a
  6685  0810  0879               	movf	?___awtoft+1,w
  6686  0811  00A1               	movwf	minimo@a+1
  6687  0812  087A               	movf	?___awtoft+2,w
  6688  0813  00A2               	movwf	minimo@a+2
  6689  0814  160A  118A  2390  120A  158A  	fcall	_minimo
  6690  0819  1283               	bcf	3,5	;RP0=0, select bank0
  6691  081A  1303               	bcf	3,6	;RP1=0, select bank0
  6692  081B  0820               	movf	?_minimo,w
  6693  081C  00A6               	movwf	maximo@a
  6694  081D  0821               	movf	?_minimo+1,w
  6695  081E  00A7               	movwf	maximo@a+1
  6696  081F  0822               	movf	?_minimo+2,w
  6697  0820  00A8               	movwf	maximo@a+2
  6698  0821  160A  118A  2372  120A  158A  	fcall	_maximo
  6699  0826  1283               	bcf	3,5	;RP0=0, select bank0
  6700  0827  1303               	bcf	3,6	;RP1=0, select bank0
  6701  0828  0826               	movf	?_maximo,w
  6702  0829  00AC               	movwf	___fttol@f1
  6703  082A  0827               	movf	?_maximo+1,w
  6704  082B  00AD               	movwf	___fttol@f1+1
  6705  082C  0828               	movf	?_maximo+2,w
  6706  082D  00AE               	movwf	___fttol@f1+2
  6707  082E  160A  118A  26E3  120A  158A  	fcall	___fttol
  6708  0833  1283               	bcf	3,5	;RP0=0, select bank0
  6709  0834  1303               	bcf	3,6	;RP1=0, select bank0
  6710  0835  082D               	movf	?___fttol+1,w
  6711  0836  1683               	bsf	3,5	;RP0=1, select bank1
  6712  0837  1303               	bcf	3,6	;RP1=0, select bank1
  6713  0838  01B3               	clrf	(Fuzzy@delta+1)^(0+128)
  6714  0839  07B3               	addwf	(Fuzzy@delta+1)^(0+128),f
  6715  083A  1283               	bcf	3,5	;RP0=0, select bank0
  6716  083B  1303               	bcf	3,6	;RP1=0, select bank0
  6717  083C  082C               	movf	?___fttol,w
  6718  083D  1683               	bsf	3,5	;RP0=1, select bank1
  6719  083E  1303               	bcf	3,6	;RP1=0, select bank1
  6720  083F  01B2               	clrf	Fuzzy@delta^(0+128)
  6721  0840  07B2               	addwf	Fuzzy@delta^(0+128),f
  6722                           
  6723                           ;main.c: 195: float x = 0;
  6724  0841  3000               	movlw	0
  6725  0842  00BF               	movwf	Fuzzy@x^(0+128)
  6726  0843  3000               	movlw	0
  6727  0844  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6728  0845  3000               	movlw	0
  6729  0846  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6730                           
  6731                           ;main.c: 196: float rule = 0;
  6732  0847  3000               	movlw	0
  6733  0848  00BC               	movwf	Fuzzy@rule^(0+128)
  6734  0849  3000               	movlw	0
  6735  084A  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  6736  084B  3000               	movlw	0
  6737  084C  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  6738                           
  6739                           ;main.c: 199: if (deltaV <= 100) {
  6740  084D  3000               	movlw	0
  6741  084E  0255               	subwf	(_deltaV+1)^(0+128),w
  6742  084F  3065               	movlw	101
  6743  0850  1903               	skipnz
  6744  0851  0254               	subwf	_deltaV^(0+128),w
  6745  0852  120A  118A  1803   	skipnc
  6746  0855  2871               	goto	i1l3842
  6747                           
  6748                           ;main.c: 202: rule = trapmf(deltaV, -1, 0, 1, 100);
  6749  0856  0855               	movf	(_deltaV+1)^(0+128),w
  6750  0857  01F9               	clrf	___lwtoft@c+1
  6751  0858  07F9               	addwf	___lwtoft@c+1,f
  6752  0859  0854               	movf	_deltaV^(0+128),w
  6753  085A  01F8               	clrf	___lwtoft@c
  6754  085B  07F8               	addwf	___lwtoft@c,f
  6755  085C  160A  118A  22E1  120A  158A  	fcall	___lwtoft
  6756  0861  0878               	movf	?___lwtoft,w
  6757  0862  1283               	bcf	3,5	;RP0=0, select bank0
  6758  0863  1303               	bcf	3,6	;RP1=0, select bank0
  6759  0864  00C0               	movwf	trapmf@x
  6760  0865  0879               	movf	?___lwtoft+1,w
  6761  0866  00C1               	movwf	trapmf@x+1
  6762  0867  087A               	movf	?___lwtoft+2,w
  6763  0868  00C2               	movwf	trapmf@x+2
  6764  0869  3000               	movlw	0
  6765  086A  00C3               	movwf	trapmf@a
  6766  086B  3080               	movlw	128
  6767  086C  00C4               	movwf	trapmf@a+1
  6768  086D  30BF               	movlw	191
  6769  086E  00C5               	movwf	trapmf@a+2
  6770  086F  3000               	movlw	0
  6771  0870  00C6               	movwf	trapmf@b
  6772  0871  3000               	movlw	0
  6773  0872  00C7               	movwf	trapmf@b+1
  6774  0873  3000               	movlw	0
  6775  0874  00C8               	movwf	trapmf@b+2
  6776  0875  3000               	movlw	0
  6777  0876  00C9               	movwf	trapmf@c
  6778  0877  3080               	movlw	128
  6779  0878  00CA               	movwf	trapmf@c+1
  6780  0879  303F               	movlw	63
  6781  087A  00CB               	movwf	trapmf@c+2
  6782  087B  3000               	movlw	0
  6783  087C  00CC               	movwf	trapmf@d
  6784  087D  30C8               	movlw	200
  6785  087E  00CD               	movwf	trapmf@d+1
  6786  087F  3042               	movlw	66
  6787  0880  00CE               	movwf	trapmf@d+2
  6788  0881  120A  158A  252A   	fcall	_trapmf
  6789  0884  1283               	bcf	3,5	;RP0=0, select bank0
  6790  0885  120A  158A  291B   	ljmp	L12
  6791                           
  6792                           	psect	text22_split_2
  6793  091B                     L12:	
  6794  091B  1303               	bcf	3,6	;RP1=0, select bank0
  6795  091C  0840               	movf	?_trapmf,w
  6796  091D  1683               	bsf	3,5	;RP0=1, select bank1
  6797  091E  1303               	bcf	3,6	;RP1=0, select bank1
  6798  091F  00BC               	movwf	Fuzzy@rule^(0+128)
  6799  0920  1283               	bcf	3,5	;RP0=0, select bank0
  6800  0921  1303               	bcf	3,6	;RP1=0, select bank0
  6801  0922  0841               	movf	?_trapmf+1,w
  6802  0923  1683               	bsf	3,5	;RP0=1, select bank1
  6803  0924  1303               	bcf	3,6	;RP1=0, select bank1
  6804  0925  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  6805  0926  1283               	bcf	3,5	;RP0=0, select bank0
  6806  0927  1303               	bcf	3,6	;RP1=0, select bank0
  6807  0928  0842               	movf	?_trapmf+2,w
  6808  0929  1683               	bsf	3,5	;RP0=1, select bank1
  6809  092A  1303               	bcf	3,6	;RP1=0, select bank1
  6810  092B  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  6811                           
  6812                           ;main.c: 204: x = 0;
  6813  092C  3000               	movlw	0
  6814  092D  00BF               	movwf	Fuzzy@x^(0+128)
  6815  092E  3000               	movlw	0
  6816  092F  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6817  0930  3000               	movlw	0
  6818  0931  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6819                           
  6820                           ;main.c: 205: for (int a = 0; a <= 15; a++) {
  6821  0932  01AA               	clrf	Fuzzy@a^(0+128)
  6822  0933  01AB               	clrf	(Fuzzy@a+1)^(0+128)
  6823  0934  082B               	movf	(Fuzzy@a+1)^(0+128),w
  6824  0935  3A80               	xorlw	128
  6825  0936  00FF               	movwf	127
  6826  0937  3080               	movlw	128
  6827  0938  027F               	subwf	127,w
  6828  0939  1D03               	skipz
  6829  093A  293D               	goto	u511_25
  6830  093B  3010               	movlw	16
  6831  093C  022A               	subwf	Fuzzy@a^(0+128),w
  6832  093D                     u511_25:	
  6833  093D  1803               	btfsc	3,0
  6834  093E  29BC               	goto	L15
  6835  093F                     i1l3832:	
  6836                           
  6837                           ;main.c: 206: rulepequeno = trapmf(x, -1, 0, 0, 5);
  6838  093F  1683               	bsf	3,5	;RP0=1, select bank1
  6839  0940  1303               	bcf	3,6	;RP1=0, select bank1
  6840  0941  083F               	movf	Fuzzy@x^(0+128),w
  6841  0942  1283               	bcf	3,5	;RP0=0, select bank0
  6842  0943  1303               	bcf	3,6	;RP1=0, select bank0
  6843  0944  00C0               	movwf	trapmf@x
  6844  0945  1683               	bsf	3,5	;RP0=1, select bank1
  6845  0946  1303               	bcf	3,6	;RP1=0, select bank1
  6846  0947  0840               	movf	(Fuzzy@x+1)^(0+128),w
  6847  0948  1283               	bcf	3,5	;RP0=0, select bank0
  6848  0949  1303               	bcf	3,6	;RP1=0, select bank0
  6849  094A  00C1               	movwf	trapmf@x+1
  6850  094B  1683               	bsf	3,5	;RP0=1, select bank1
  6851  094C  1303               	bcf	3,6	;RP1=0, select bank1
  6852  094D  0841               	movf	(Fuzzy@x+2)^(0+128),w
  6853  094E  1283               	bcf	3,5	;RP0=0, select bank0
  6854  094F  1303               	bcf	3,6	;RP1=0, select bank0
  6855  0950  00C2               	movwf	trapmf@x+2
  6856  0951  3000               	movlw	0
  6857  0952  00C3               	movwf	trapmf@a
  6858  0953  3080               	movlw	128
  6859  0954  00C4               	movwf	trapmf@a+1
  6860  0955  30BF               	movlw	191
  6861  0956  00C5               	movwf	trapmf@a+2
  6862  0957  3000               	movlw	0
  6863  0958  00C6               	movwf	trapmf@b
  6864  0959  3000               	movlw	0
  6865  095A  00C7               	movwf	trapmf@b+1
  6866  095B  3000               	movlw	0
  6867  095C  00C8               	movwf	trapmf@b+2
  6868  095D  3000               	movlw	0
  6869  095E  00C9               	movwf	trapmf@c
  6870  095F  3000               	movlw	0
  6871  0960  00CA               	movwf	trapmf@c+1
  6872  0961  3000               	movlw	0
  6873  0962  00CB               	movwf	trapmf@c+2
  6874  0963  3000               	movlw	0
  6875  0964  00CC               	movwf	trapmf@d
  6876  0965  30A0               	movlw	160
  6877  0966  00CD               	movwf	trapmf@d+1
  6878  0967  3040               	movlw	64
  6879  0968  00CE               	movwf	trapmf@d+2
  6880  0969  120A  158A  252A  120A  158A  	fcall	_trapmf
  6881  096E  1283               	bcf	3,5	;RP0=0, select bank0
  6882  096F  1303               	bcf	3,6	;RP1=0, select bank0
  6883  0970  0840               	movf	?_trapmf,w
  6884  0971  1683               	bsf	3,5	;RP0=1, select bank1
  6885  0972  1303               	bcf	3,6	;RP1=0, select bank1
  6886  0973  00CB               	movwf	_rulepequeno^(0+128)
  6887  0974  1283               	bcf	3,5	;RP0=0, select bank0
  6888  0975  1303               	bcf	3,6	;RP1=0, select bank0
  6889  0976  0841               	movf	?_trapmf+1,w
  6890  0977  1683               	bsf	3,5	;RP0=1, select bank1
  6891  0978  1303               	bcf	3,6	;RP1=0, select bank1
  6892  0979  00CC               	movwf	(_rulepequeno+1)^(0+128)
  6893  097A  1283               	bcf	3,5	;RP0=0, select bank0
  6894  097B  1303               	bcf	3,6	;RP1=0, select bank0
  6895  097C  0842               	movf	?_trapmf+2,w
  6896  097D  1683               	bsf	3,5	;RP0=1, select bank1
  6897  097E  1303               	bcf	3,6	;RP1=0, select bank1
  6898  097F  00CD               	movwf	(_rulepequeno+2)^(0+128)
  6899                           
  6900                           ;main.c: 207: if (rulepequeno >= rule) {
  6901  0980  084B               	movf	_rulepequeno^(0+128),w
  6902  0981  00F0               	movwf	___ftge@ff1
  6903  0982  084C               	movf	(_rulepequeno+1)^(0+128),w
  6904  0983  00F1               	movwf	___ftge@ff1+1
  6905  0984  084D               	movf	(_rulepequeno+2)^(0+128),w
  6906  0985  00F2               	movwf	___ftge@ff1+2
  6907  0986  083C               	movf	Fuzzy@rule^(0+128),w
  6908  0987  00F3               	movwf	___ftge@ff2
  6909  0988  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  6910  0989  00F4               	movwf	___ftge@ff2+1
  6911  098A  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  6912  098B  00F5               	movwf	___ftge@ff2+2
  6913  098C  160A  118A  253C  120A  158A  	fcall	___ftge
  6914  0991  1C03               	btfss	3,0
  6915  0992  299B               	goto	i1l3836
  6916                           
  6917                           ;main.c: 208: rulepequeno = rule;
  6918  0993  1683               	bsf	3,5	;RP0=1, select bank1
  6919  0994  1303               	bcf	3,6	;RP1=0, select bank1
  6920  0995  083C               	movf	Fuzzy@rule^(0+128),w
  6921  0996  00CB               	movwf	_rulepequeno^(0+128)
  6922  0997  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  6923  0998  00CC               	movwf	(_rulepequeno+1)^(0+128)
  6924  0999  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  6925  099A  00CD               	movwf	(_rulepequeno+2)^(0+128)
  6926  099B                     i1l3836:	
  6927                           
  6928                           ;main.c: 209: }
  6929                           ;main.c: 211: x += 1;
  6930  099B  3000               	movlw	0
  6931  099C  1283               	bcf	3,5	;RP0=0, select bank0
  6932  099D  1303               	bcf	3,6	;RP1=0, select bank0
  6933  099E  00A3               	movwf	___ftadd@f1
  6934  099F  3080               	movlw	128
  6935  09A0  00A4               	movwf	___ftadd@f1+1
  6936  09A1  303F               	movlw	63
  6937  09A2  00A5               	movwf	___ftadd@f1+2
  6938  09A3  1683               	bsf	3,5	;RP0=1, select bank1
  6939  09A4  1303               	bcf	3,6	;RP1=0, select bank1
  6940  09A5  083F               	movf	Fuzzy@x^(0+128),w
  6941  09A6  1283               	bcf	3,5	;RP0=0, select bank0
  6942  09A7  1303               	bcf	3,6	;RP1=0, select bank0
  6943  09A8  00A6               	movwf	___ftadd@f2
  6944  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  6945  09AA  1303               	bcf	3,6	;RP1=0, select bank1
  6946  09AB  0840               	movf	(Fuzzy@x+1)^(0+128),w
  6947  09AC  1283               	bcf	3,5	;RP0=0, select bank0
  6948  09AD  1303               	bcf	3,6	;RP1=0, select bank0
  6949  09AE  00A7               	movwf	___ftadd@f2+1
  6950  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  6951  09B0  1303               	bcf	3,6	;RP1=0, select bank1
  6952  09B1  0841               	movf	(Fuzzy@x+2)^(0+128),w
  6953  09B2  1283               	bcf	3,5	;RP0=0, select bank0
  6954  09B3  1303               	bcf	3,6	;RP1=0, select bank0
  6955  09B4  00A8               	movwf	___ftadd@f2+2
  6956  09B5  120A  158A  2421   	fcall	___ftadd
  6957  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  6958  09B9  120A  118A  284F   	ljmp	L13
  6959  09BC                     L15:	
  6960  09BC  120A  118A  2871   	ljmp	i1l3842
  6961                           
  6962                           	psect	text22_split_3
  6963  004F                     L13:	
  6964  004F  1303               	bcf	3,6	;RP1=0, select bank0
  6965  0050  0823               	movf	?___ftadd,w
  6966  0051  1683               	bsf	3,5	;RP0=1, select bank1
  6967  0052  1303               	bcf	3,6	;RP1=0, select bank1
  6968  0053  00BF               	movwf	Fuzzy@x^(0+128)
  6969  0054  1283               	bcf	3,5	;RP0=0, select bank0
  6970  0055  1303               	bcf	3,6	;RP1=0, select bank0
  6971  0056  0824               	movf	?___ftadd+1,w
  6972  0057  1683               	bsf	3,5	;RP0=1, select bank1
  6973  0058  1303               	bcf	3,6	;RP1=0, select bank1
  6974  0059  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6975  005A  1283               	bcf	3,5	;RP0=0, select bank0
  6976  005B  1303               	bcf	3,6	;RP1=0, select bank0
  6977  005C  0825               	movf	?___ftadd+2,w
  6978  005D  1683               	bsf	3,5	;RP0=1, select bank1
  6979  005E  1303               	bcf	3,6	;RP1=0, select bank1
  6980  005F  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6981  0060  3001               	movlw	1
  6982  0061  07AA               	addwf	Fuzzy@a^(0+128),f
  6983  0062  1803               	skipnc
  6984  0063  0AAB               	incf	(Fuzzy@a+1)^(0+128),f
  6985  0064  3000               	movlw	0
  6986  0065  07AB               	addwf	(Fuzzy@a+1)^(0+128),f
  6987  0066  082B               	movf	(Fuzzy@a+1)^(0+128),w
  6988  0067  3A80               	xorlw	128
  6989  0068  00FF               	movwf	127
  6990  0069  3080               	movlw	128
  6991  006A  027F               	subwf	127,w
  6992  006B  1D03               	skipz
  6993  006C  286F               	goto	u513_25
  6994  006D  3010               	movlw	16
  6995  006E  022A               	subwf	Fuzzy@a^(0+128),w
  6996  006F                     u513_25:	
  6997  006F  1C03               	skipc
  6998  0070  2FDB               	goto	L16
  6999  0071                     i1l3842:	
  7000                           
  7001                           ;main.c: 212: }
  7002                           ;main.c: 213: }
  7003                           ;main.c: 217: if (deltaV >= 100 && deltaV <= 1001 && delta <= 200)
  7004  0071  3000               	movlw	0
  7005  0072  1683               	bsf	3,5	;RP0=1, select bank1
  7006  0073  1303               	bcf	3,6	;RP1=0, select bank1
  7007  0074  0255               	subwf	(_deltaV+1)^(0+128),w
  7008  0075  3064               	movlw	100
  7009  0076  1903               	skipnz
  7010  0077  0254               	subwf	_deltaV^(0+128),w
  7011  0078  1C03               	skipc
  7012  0079  2A08               	goto	i1l3868
  7013  007A  3003               	movlw	3
  7014  007B  0255               	subwf	(_deltaV+1)^(0+128),w
  7015  007C  30EA               	movlw	234
  7016  007D  1903               	skipnz
  7017  007E  0254               	subwf	_deltaV^(0+128),w
  7018  007F  1803               	skipnc
  7019  0080  2A08               	goto	i1l3868
  7020  0081  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7021  0082  3A80               	xorlw	128
  7022  0083  00FF               	movwf	127
  7023  0084  3080               	movlw	128
  7024  0085  027F               	subwf	127,w
  7025  0086  1D03               	skipz
  7026  0087  288A               	goto	u516_25
  7027  0088  30C9               	movlw	201
  7028  0089  0232               	subwf	Fuzzy@delta^(0+128),w
  7029  008A                     u516_25:	
  7030  008A  1803               	skipnc
  7031  008B  2A08               	goto	i1l3868
  7032                           
  7033                           ;main.c: 218: {
  7034                           ;main.c: 220: rule = trapmf(deltaV, 50, 800, 800, 1550) *
  7035                           ;main.c: 221: (1 - trapmf(delta, -1, 0, 1, 200));
  7036  008C  3000               	movlw	0
  7037  008D  1283               	bcf	3,5	;RP0=0, select bank0
  7038  008E  1303               	bcf	3,6	;RP1=0, select bank0
  7039  008F  00CC               	movwf	trapmf@d
  7040  0090  3048               	movlw	72
  7041  0091  00CD               	movwf	trapmf@d+1
  7042  0092  3043               	movlw	67
  7043  0093  00CE               	movwf	trapmf@d+2
  7044  0094  3000               	movlw	0
  7045  0095  00C9               	movwf	trapmf@c
  7046  0096  3080               	movlw	128
  7047  0097  00CA               	movwf	trapmf@c+1
  7048  0098  303F               	movlw	63
  7049  0099  00CB               	movwf	trapmf@c+2
  7050  009A  3000               	movlw	0
  7051  009B  00C6               	movwf	trapmf@b
  7052  009C  3000               	movlw	0
  7053  009D  00C7               	movwf	trapmf@b+1
  7054  009E  3000               	movlw	0
  7055  009F  00C8               	movwf	trapmf@b+2
  7056  00A0  3000               	movlw	0
  7057  00A1  00C3               	movwf	trapmf@a
  7058  00A2  3080               	movlw	128
  7059  00A3  00C4               	movwf	trapmf@a+1
  7060  00A4  30BF               	movlw	191
  7061  00A5  00C5               	movwf	trapmf@a+2
  7062  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  7063  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  7064  00A8  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7065  00A9  01F9               	clrf	___awtoft@c+1
  7066  00AA  07F9               	addwf	___awtoft@c+1,f
  7067  00AB  0832               	movf	Fuzzy@delta^(0+128),w
  7068  00AC  01F8               	clrf	___awtoft@c
  7069  00AD  07F8               	addwf	___awtoft@c,f
  7070  00AE  160A  118A  23CE  120A  118A  	fcall	___awtoft
  7071  00B3  0878               	movf	?___awtoft,w
  7072  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  7073  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  7074  00B6  00C0               	movwf	trapmf@x
  7075  00B7  0879               	movf	?___awtoft+1,w
  7076  00B8  00C1               	movwf	trapmf@x+1
  7077  00B9  087A               	movf	?___awtoft+2,w
  7078  00BA  00C2               	movwf	trapmf@x+2
  7079  00BB  120A  158A  252A  120A  118A  	fcall	_trapmf
  7080  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  7081  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  7082  00C2  0840               	movf	?_trapmf,w
  7083  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  7084  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  7085  00C5  00A0               	movwf	_Fuzzy$1689^(0+128)
  7086  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  7087  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  7088  00C8  0841               	movf	?_trapmf+1,w
  7089  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  7090  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  7091  00CB  00A1               	movwf	(_Fuzzy$1689+1)^(0+128)
  7092  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  7093  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  7094  00CE  0842               	movf	?_trapmf+2,w
  7095  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  7096  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  7097  00D1  00A2               	movwf	(_Fuzzy$1689+2)^(0+128)
  7098                           
  7099                           ;main.c: 218: {
  7100                           ;main.c: 220: rule = trapmf(deltaV, 50, 800, 800, 1550) *
  7101                           ;main.c: 221: (1 - trapmf(delta, -1, 0, 1, 200));
  7102  00D2  30C0               	movlw	192
  7103  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  7104  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  7105  00D5  00CC               	movwf	trapmf@d
  7106  00D6  30C1               	movlw	193
  7107  00D7  00CD               	movwf	trapmf@d+1
  7108  00D8  3044               	movlw	68
  7109  00D9  00CE               	movwf	trapmf@d+2
  7110  00DA  3000               	movlw	0
  7111  00DB  00C9               	movwf	trapmf@c
  7112  00DC  3048               	movlw	72
  7113  00DD  00CA               	movwf	trapmf@c+1
  7114  00DE  3044               	movlw	68
  7115  00DF  00CB               	movwf	trapmf@c+2
  7116  00E0  3000               	movlw	0
  7117  00E1  00C6               	movwf	trapmf@b
  7118  00E2  3048               	movlw	72
  7119  00E3  00C7               	movwf	trapmf@b+1
  7120  00E4  3044               	movlw	68
  7121  00E5  00C8               	movwf	trapmf@b+2
  7122  00E6  3000               	movlw	0
  7123  00E7  00C3               	movwf	trapmf@a
  7124  00E8  3048               	movlw	72
  7125  00E9  00C4               	movwf	trapmf@a+1
  7126  00EA  3042               	movlw	66
  7127  00EB  00C5               	movwf	trapmf@a+2
  7128  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  7129  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  7130  00EE  0855               	movf	(_deltaV+1)^(0+128),w
  7131  00EF  01F9               	clrf	___lwtoft@c+1
  7132  00F0  07F9               	addwf	___lwtoft@c+1,f
  7133  00F1  0854               	movf	_deltaV^(0+128),w
  7134  00F2  01F8               	clrf	___lwtoft@c
  7135  00F3  07F8               	addwf	___lwtoft@c,f
  7136  00F4  160A  118A  22E1  120A  118A  	fcall	___lwtoft
  7137  00F9  0878               	movf	?___lwtoft,w
  7138  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  7139  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  7140  00FC  00C0               	movwf	trapmf@x
  7141  00FD  0879               	movf	?___lwtoft+1,w
  7142  00FE  00C1               	movwf	trapmf@x+1
  7143  00FF  087A               	movf	?___lwtoft+2,w
  7144  0100  00C2               	movwf	trapmf@x+2
  7145  0101  120A  158A  252A  120A  118A  	fcall	_trapmf
  7146  0106  1283               	bcf	3,5	;RP0=0, select bank0
  7147  0107  1303               	bcf	3,6	;RP1=0, select bank0
  7148  0108  0840               	movf	?_trapmf,w
  7149  0109  00D2               	movwf	___ftmul@f1
  7150  010A  0841               	movf	?_trapmf+1,w
  7151  010B  00D3               	movwf	___ftmul@f1+1
  7152  010C  0842               	movf	?_trapmf+2,w
  7153  010D  00D4               	movwf	___ftmul@f1+2
  7154  010E  3000               	movlw	0
  7155  010F  00A3               	movwf	___ftadd@f1
  7156  0110  3080               	movlw	128
  7157  0111  00A4               	movwf	___ftadd@f1+1
  7158  0112  303F               	movlw	63
  7159  0113  00A5               	movwf	___ftadd@f1+2
  7160  0114  1683               	bsf	3,5	;RP0=1, select bank1
  7161  0115  1303               	bcf	3,6	;RP1=0, select bank1
  7162  0116  0820               	movf	_Fuzzy$1689^(0+128),w
  7163  0117  1283               	bcf	3,5	;RP0=0, select bank0
  7164  0118  1303               	bcf	3,6	;RP1=0, select bank0
  7165  0119  00A0               	movwf	___ftneg@f1
  7166  011A  1683               	bsf	3,5	;RP0=1, select bank1
  7167  011B  1303               	bcf	3,6	;RP1=0, select bank1
  7168  011C  0821               	movf	(_Fuzzy$1689+1)^(0+128),w
  7169  011D  1283               	bcf	3,5	;RP0=0, select bank0
  7170  011E  1303               	bcf	3,6	;RP1=0, select bank0
  7171  011F  00A1               	movwf	___ftneg@f1+1
  7172  0120  1683               	bsf	3,5	;RP0=1, select bank1
  7173  0121  1303               	bcf	3,6	;RP1=0, select bank1
  7174  0122  0822               	movf	(_Fuzzy$1689+2)^(0+128),w
  7175  0123  1283               	bcf	3,5	;RP0=0, select bank0
  7176  0124  1303               	bcf	3,6	;RP1=0, select bank0
  7177  0125  00A2               	movwf	___ftneg@f1+2
  7178  0126  160A  118A  22AC  120A  118A  	fcall	___ftneg
  7179  012B  1283               	bcf	3,5	;RP0=0, select bank0
  7180  012C  1303               	bcf	3,6	;RP1=0, select bank0
  7181  012D  0820               	movf	?___ftneg,w
  7182  012E  00A6               	movwf	___ftadd@f2
  7183  012F  0821               	movf	?___ftneg+1,w
  7184  0130  00A7               	movwf	___ftadd@f2+1
  7185  0131  0822               	movf	?___ftneg+2,w
  7186  0132  00A8               	movwf	___ftadd@f2+2
  7187  0133  120A  158A  2421  120A  118A  	fcall	___ftadd
  7188  0138  1283               	bcf	3,5	;RP0=0, select bank0
  7189  0139  1303               	bcf	3,6	;RP1=0, select bank0
  7190  013A  0823               	movf	?___ftadd,w
  7191  013B  00D5               	movwf	___ftmul@f2
  7192  013C  0824               	movf	?___ftadd+1,w
  7193  013D  00D6               	movwf	___ftmul@f2+1
  7194  013E  0825               	movf	?___ftadd+2,w
  7195  013F  00D7               	movwf	___ftmul@f2+2
  7196  0140  120A  158A  2277  120A  118A  	fcall	___ftmul
  7197  0145  1283               	bcf	3,5	;RP0=0, select bank0
  7198  0146  1303               	bcf	3,6	;RP1=0, select bank0
  7199  0147  0852               	movf	?___ftmul,w
  7200  0148  1683               	bsf	3,5	;RP0=1, select bank1
  7201  0149  1303               	bcf	3,6	;RP1=0, select bank1
  7202  014A  00BC               	movwf	Fuzzy@rule^(0+128)
  7203  014B  1283               	bcf	3,5	;RP0=0, select bank0
  7204  014C  1303               	bcf	3,6	;RP1=0, select bank0
  7205  014D  0853               	movf	?___ftmul+1,w
  7206  014E  1683               	bsf	3,5	;RP0=1, select bank1
  7207  014F  1303               	bcf	3,6	;RP1=0, select bank1
  7208  0150  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7209  0151  1283               	bcf	3,5	;RP0=0, select bank0
  7210  0152  1303               	bcf	3,6	;RP1=0, select bank0
  7211  0153  0854               	movf	?___ftmul+2,w
  7212  0154  1683               	bsf	3,5	;RP0=1, select bank1
  7213  0155  1303               	bcf	3,6	;RP1=0, select bank1
  7214  0156  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7215                           
  7216                           ;main.c: 223: x = 0;
  7217  0157  3000               	movlw	0
  7218  0158  00BF               	movwf	Fuzzy@x^(0+128)
  7219  0159  3000               	movlw	0
  7220  015A  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7221  015B  3000               	movlw	0
  7222  015C  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7223                           
  7224                           ;main.c: 224: for (int a = 0; a <= 15; a++) {
  7225  015D  01AC               	clrf	Fuzzy@a_242^(0+128)
  7226  015E  01AD               	clrf	(Fuzzy@a_242+1)^(0+128)
  7227  015F  082D               	movf	(Fuzzy@a_242+1)^(0+128),w
  7228  0160  3A80               	xorlw	128
  7229  0161  00FF               	movwf	127
  7230  0162  3080               	movlw	128
  7231  0163  027F               	subwf	127,w
  7232  0164  1D03               	skipz
  7233  0165  2968               	goto	u517_25
  7234  0166  3010               	movlw	16
  7235  0167  022C               	subwf	Fuzzy@a_242^(0+128),w
  7236  0168                     u517_25:	
  7237  0168  1803               	btfsc	3,0
  7238  0169  2A08               	goto	i1l3868
  7239  016A                     i1l3858:	
  7240                           
  7241                           ;main.c: 225: rulepequeno = trapmf(x, 2, 5, 5, 10);
  7242  016A  1683               	bsf	3,5	;RP0=1, select bank1
  7243  016B  1303               	bcf	3,6	;RP1=0, select bank1
  7244  016C  083F               	movf	Fuzzy@x^(0+128),w
  7245  016D  1283               	bcf	3,5	;RP0=0, select bank0
  7246  016E  1303               	bcf	3,6	;RP1=0, select bank0
  7247  016F  00C0               	movwf	trapmf@x
  7248  0170  1683               	bsf	3,5	;RP0=1, select bank1
  7249  0171  1303               	bcf	3,6	;RP1=0, select bank1
  7250  0172  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7251  0173  1283               	bcf	3,5	;RP0=0, select bank0
  7252  0174  1303               	bcf	3,6	;RP1=0, select bank0
  7253  0175  00C1               	movwf	trapmf@x+1
  7254  0176  1683               	bsf	3,5	;RP0=1, select bank1
  7255  0177  1303               	bcf	3,6	;RP1=0, select bank1
  7256  0178  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7257  0179  1283               	bcf	3,5	;RP0=0, select bank0
  7258  017A  1303               	bcf	3,6	;RP1=0, select bank0
  7259  017B  00C2               	movwf	trapmf@x+2
  7260  017C  3000               	movlw	0
  7261  017D  00C3               	movwf	trapmf@a
  7262  017E  3000               	movlw	0
  7263  017F  00C4               	movwf	trapmf@a+1
  7264  0180  3040               	movlw	64
  7265  0181  00C5               	movwf	trapmf@a+2
  7266  0182  3000               	movlw	0
  7267  0183  00C6               	movwf	trapmf@b
  7268  0184  30A0               	movlw	160
  7269  0185  00C7               	movwf	trapmf@b+1
  7270  0186  3040               	movlw	64
  7271  0187  00C8               	movwf	trapmf@b+2
  7272  0188  3000               	movlw	0
  7273  0189  00C9               	movwf	trapmf@c
  7274  018A  30A0               	movlw	160
  7275  018B  00CA               	movwf	trapmf@c+1
  7276  018C  3040               	movlw	64
  7277  018D  00CB               	movwf	trapmf@c+2
  7278  018E  3000               	movlw	0
  7279  018F  00CC               	movwf	trapmf@d
  7280  0190  3020               	movlw	32
  7281  0191  00CD               	movwf	trapmf@d+1
  7282  0192  3041               	movlw	65
  7283  0193  00CE               	movwf	trapmf@d+2
  7284  0194  120A  158A  252A  120A  118A  	fcall	_trapmf
  7285  0199  1283               	bcf	3,5	;RP0=0, select bank0
  7286  019A  1303               	bcf	3,6	;RP1=0, select bank0
  7287  019B  0840               	movf	?_trapmf,w
  7288  019C  1683               	bsf	3,5	;RP0=1, select bank1
  7289  019D  1303               	bcf	3,6	;RP1=0, select bank1
  7290  019E  00CB               	movwf	_rulepequeno^(0+128)
  7291  019F  1283               	bcf	3,5	;RP0=0, select bank0
  7292  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  7293  01A1  0841               	movf	?_trapmf+1,w
  7294  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  7295  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  7296  01A4  00CC               	movwf	(_rulepequeno+1)^(0+128)
  7297  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  7298  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  7299  01A7  0842               	movf	?_trapmf+2,w
  7300  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  7301  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  7302  01AA  00CD               	movwf	(_rulepequeno+2)^(0+128)
  7303                           
  7304                           ;main.c: 226: if (rulepequeno >= rule) {
  7305  01AB  084B               	movf	_rulepequeno^(0+128),w
  7306  01AC  00F0               	movwf	___ftge@ff1
  7307  01AD  084C               	movf	(_rulepequeno+1)^(0+128),w
  7308  01AE  00F1               	movwf	___ftge@ff1+1
  7309  01AF  084D               	movf	(_rulepequeno+2)^(0+128),w
  7310  01B0  00F2               	movwf	___ftge@ff1+2
  7311  01B1  083C               	movf	Fuzzy@rule^(0+128),w
  7312  01B2  00F3               	movwf	___ftge@ff2
  7313  01B3  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7314  01B4  00F4               	movwf	___ftge@ff2+1
  7315  01B5  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7316  01B6  00F5               	movwf	___ftge@ff2+2
  7317  01B7  160A  118A  253C  120A  118A  	fcall	___ftge
  7318  01BC  1C03               	btfss	3,0
  7319  01BD  29C6               	goto	i1l3862
  7320                           
  7321                           ;main.c: 227: rulepequeno = rule;
  7322  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  7323  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  7324  01C0  083C               	movf	Fuzzy@rule^(0+128),w
  7325  01C1  00CB               	movwf	_rulepequeno^(0+128)
  7326  01C2  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7327  01C3  00CC               	movwf	(_rulepequeno+1)^(0+128)
  7328  01C4  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7329  01C5  00CD               	movwf	(_rulepequeno+2)^(0+128)
  7330  01C6                     i1l3862:	
  7331                           
  7332                           ;main.c: 228: }
  7333                           ;main.c: 230: x += 1;
  7334  01C6  3000               	movlw	0
  7335  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  7336  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  7337  01C9  00A3               	movwf	___ftadd@f1
  7338  01CA  3080               	movlw	128
  7339  01CB  00A4               	movwf	___ftadd@f1+1
  7340  01CC  303F               	movlw	63
  7341  01CD  00A5               	movwf	___ftadd@f1+2
  7342  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  7343  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  7344  01D0  083F               	movf	Fuzzy@x^(0+128),w
  7345  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  7346  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  7347  01D3  00A6               	movwf	___ftadd@f2
  7348  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  7349  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  7350  01D6  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7351  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  7352  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  7353  01D9  00A7               	movwf	___ftadd@f2+1
  7354  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  7355  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  7356  01DC  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7357  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  7358  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  7359  01DF  00A8               	movwf	___ftadd@f2+2
  7360  01E0  120A  158A  2421  120A  118A  	fcall	___ftadd
  7361  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  7362  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  7363  01E7  0823               	movf	?___ftadd,w
  7364  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  7365  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  7366  01EA  00BF               	movwf	Fuzzy@x^(0+128)
  7367  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  7368  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  7369  01ED  0824               	movf	?___ftadd+1,w
  7370  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  7371  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  7372  01F0  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7373  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  7374  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  7375  01F3  0825               	movf	?___ftadd+2,w
  7376  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  7377  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  7378  01F6  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7379  01F7  3001               	movlw	1
  7380  01F8  07AC               	addwf	Fuzzy@a_242^(0+128),f
  7381  01F9  1803               	skipnc
  7382  01FA  0AAD               	incf	(Fuzzy@a_242+1)^(0+128),f
  7383  01FB  3000               	movlw	0
  7384  01FC  07AD               	addwf	(Fuzzy@a_242+1)^(0+128),f
  7385  01FD  082D               	movf	(Fuzzy@a_242+1)^(0+128),w
  7386  01FE  3A80               	xorlw	128
  7387  01FF  00FF               	movwf	127
  7388  0200  3080               	movlw	128
  7389  0201  027F               	subwf	127,w
  7390  0202  1D03               	skipz
  7391  0203  2A06               	goto	u519_25
  7392  0204  3010               	movlw	16
  7393  0205  022C               	subwf	Fuzzy@a_242^(0+128),w
  7394  0206                     u519_25:	
  7395  0206  1C03               	skipc
  7396  0207  296A               	goto	i1l3858
  7397  0208                     i1l3868:	
  7398                           
  7399                           ;main.c: 231: }
  7400                           ;main.c: 232: }
  7401                           ;main.c: 236: if (deltaV >= 100 && deltaV <= 1001 && delta >= 201)
  7402  0208  3000               	movlw	0
  7403  0209  1683               	bsf	3,5	;RP0=1, select bank1
  7404  020A  1303               	bcf	3,6	;RP1=0, select bank1
  7405  020B  0255               	subwf	(_deltaV+1)^(0+128),w
  7406  020C  3064               	movlw	100
  7407  020D  1903               	skipnz
  7408  020E  0254               	subwf	_deltaV^(0+128),w
  7409  020F  1C03               	skipc
  7410  0210  2B61               	goto	i1l3894
  7411  0211  3003               	movlw	3
  7412  0212  0255               	subwf	(_deltaV+1)^(0+128),w
  7413  0213  30EA               	movlw	234
  7414  0214  1903               	skipnz
  7415  0215  0254               	subwf	_deltaV^(0+128),w
  7416  0216  1803               	skipnc
  7417  0217  2B61               	goto	i1l3894
  7418  0218  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7419  0219  3A80               	xorlw	128
  7420  021A  00FF               	movwf	127
  7421  021B  3080               	movlw	128
  7422  021C  027F               	subwf	127,w
  7423  021D  1D03               	skipz
  7424  021E  2A21               	goto	u522_25
  7425  021F  30C9               	movlw	201
  7426  0220  0232               	subwf	Fuzzy@delta^(0+128),w
  7427  0221                     u522_25:	
  7428  0221  1C03               	skipc
  7429  0222  2B61               	goto	i1l3894
  7430                           
  7431                           ;main.c: 237: {
  7432                           ;main.c: 239: rule = trapmf(deltaV, 50, 800, 800, 1550) *
  7433                           ;main.c: 240: trapmf(delta, 200, 500, 2000, 2001);
  7434  0223  3020               	movlw	32
  7435  0224  1283               	bcf	3,5	;RP0=0, select bank0
  7436  0225  1303               	bcf	3,6	;RP1=0, select bank0
  7437  0226  00CC               	movwf	trapmf@d
  7438  0227  30FA               	movlw	250
  7439  0228  00CD               	movwf	trapmf@d+1
  7440  0229  3044               	movlw	68
  7441  022A  00CE               	movwf	trapmf@d+2
  7442  022B  3000               	movlw	0
  7443  022C  00C9               	movwf	trapmf@c
  7444  022D  30FA               	movlw	250
  7445  022E  00CA               	movwf	trapmf@c+1
  7446  022F  3044               	movlw	68
  7447  0230  00CB               	movwf	trapmf@c+2
  7448  0231  3000               	movlw	0
  7449  0232  00C6               	movwf	trapmf@b
  7450  0233  30FA               	movlw	250
  7451  0234  00C7               	movwf	trapmf@b+1
  7452  0235  3043               	movlw	67
  7453  0236  00C8               	movwf	trapmf@b+2
  7454  0237  3000               	movlw	0
  7455  0238  00C3               	movwf	trapmf@a
  7456  0239  3048               	movlw	72
  7457  023A  00C4               	movwf	trapmf@a+1
  7458  023B  3043               	movlw	67
  7459  023C  00C5               	movwf	trapmf@a+2
  7460  023D  1683               	bsf	3,5	;RP0=1, select bank1
  7461  023E  1303               	bcf	3,6	;RP1=0, select bank1
  7462  023F  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7463  0240  01F9               	clrf	___awtoft@c+1
  7464  0241  07F9               	addwf	___awtoft@c+1,f
  7465  0242  0832               	movf	Fuzzy@delta^(0+128),w
  7466  0243  01F8               	clrf	___awtoft@c
  7467  0244  07F8               	addwf	___awtoft@c,f
  7468  0245  160A  118A  23CE  120A  118A  	fcall	___awtoft
  7469  024A  0878               	movf	?___awtoft,w
  7470  024B  1283               	bcf	3,5	;RP0=0, select bank0
  7471  024C  1303               	bcf	3,6	;RP1=0, select bank0
  7472  024D  00C0               	movwf	trapmf@x
  7473  024E  0879               	movf	?___awtoft+1,w
  7474  024F  00C1               	movwf	trapmf@x+1
  7475  0250  087A               	movf	?___awtoft+2,w
  7476  0251  00C2               	movwf	trapmf@x+2
  7477  0252  120A  158A  252A  120A  118A  	fcall	_trapmf
  7478  0257  1283               	bcf	3,5	;RP0=0, select bank0
  7479  0258  1303               	bcf	3,6	;RP1=0, select bank0
  7480  0259  0840               	movf	?_trapmf,w
  7481  025A  00D2               	movwf	___ftmul@f1
  7482  025B  0841               	movf	?_trapmf+1,w
  7483  025C  00D3               	movwf	___ftmul@f1+1
  7484  025D  0842               	movf	?_trapmf+2,w
  7485  025E  00D4               	movwf	___ftmul@f1+2
  7486  025F  30C0               	movlw	192
  7487  0260  00CC               	movwf	trapmf@d
  7488  0261  30C1               	movlw	193
  7489  0262  00CD               	movwf	trapmf@d+1
  7490  0263  3044               	movlw	68
  7491  0264  00CE               	movwf	trapmf@d+2
  7492  0265  3000               	movlw	0
  7493  0266  00C9               	movwf	trapmf@c
  7494  0267  3048               	movlw	72
  7495  0268  00CA               	movwf	trapmf@c+1
  7496  0269  3044               	movlw	68
  7497  026A  00CB               	movwf	trapmf@c+2
  7498  026B  3000               	movlw	0
  7499  026C  00C6               	movwf	trapmf@b
  7500  026D  3048               	movlw	72
  7501  026E  00C7               	movwf	trapmf@b+1
  7502  026F  3044               	movlw	68
  7503  0270  00C8               	movwf	trapmf@b+2
  7504  0271  3000               	movlw	0
  7505  0272  00C3               	movwf	trapmf@a
  7506  0273  3048               	movlw	72
  7507  0274  00C4               	movwf	trapmf@a+1
  7508  0275  3042               	movlw	66
  7509  0276  00C5               	movwf	trapmf@a+2
  7510  0277  1683               	bsf	3,5	;RP0=1, select bank1
  7511  0278  1303               	bcf	3,6	;RP1=0, select bank1
  7512  0279  0855               	movf	(_deltaV+1)^(0+128),w
  7513  027A  01F9               	clrf	___lwtoft@c+1
  7514  027B  07F9               	addwf	___lwtoft@c+1,f
  7515  027C  0854               	movf	_deltaV^(0+128),w
  7516  027D  01F8               	clrf	___lwtoft@c
  7517  027E  07F8               	addwf	___lwtoft@c,f
  7518  027F  160A  118A  22E1  120A  118A  	fcall	___lwtoft
  7519  0284  0878               	movf	?___lwtoft,w
  7520  0285  1283               	bcf	3,5	;RP0=0, select bank0
  7521  0286  1303               	bcf	3,6	;RP1=0, select bank0
  7522  0287  00C0               	movwf	trapmf@x
  7523  0288  0879               	movf	?___lwtoft+1,w
  7524  0289  00C1               	movwf	trapmf@x+1
  7525  028A  087A               	movf	?___lwtoft+2,w
  7526  028B  00C2               	movwf	trapmf@x+2
  7527  028C  120A  158A  252A  120A  118A  	fcall	_trapmf
  7528  0291  1283               	bcf	3,5	;RP0=0, select bank0
  7529  0292  1303               	bcf	3,6	;RP1=0, select bank0
  7530  0293  0840               	movf	?_trapmf,w
  7531  0294  00D5               	movwf	___ftmul@f2
  7532  0295  0841               	movf	?_trapmf+1,w
  7533  0296  00D6               	movwf	___ftmul@f2+1
  7534  0297  0842               	movf	?_trapmf+2,w
  7535  0298  00D7               	movwf	___ftmul@f2+2
  7536  0299  120A  158A  2277  120A  118A  	fcall	___ftmul
  7537  029E  1283               	bcf	3,5	;RP0=0, select bank0
  7538  029F  1303               	bcf	3,6	;RP1=0, select bank0
  7539  02A0  0852               	movf	?___ftmul,w
  7540  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  7541  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  7542  02A3  00BC               	movwf	Fuzzy@rule^(0+128)
  7543  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  7544  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  7545  02A6  0853               	movf	?___ftmul+1,w
  7546  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  7547  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  7548  02A9  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7549  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  7550  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  7551  02AC  0854               	movf	?___ftmul+2,w
  7552  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  7553  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  7554  02AF  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7555                           
  7556                           ;main.c: 242: x = 0;
  7557  02B0  3000               	movlw	0
  7558  02B1  00BF               	movwf	Fuzzy@x^(0+128)
  7559  02B2  3000               	movlw	0
  7560  02B3  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7561  02B4  3000               	movlw	0
  7562  02B5  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7563                           
  7564                           ;main.c: 243: for (int a = 0; a <= 15; a++) {
  7565  02B6  01AE               	clrf	Fuzzy@a_243^(0+128)
  7566  02B7  01AF               	clrf	(Fuzzy@a_243+1)^(0+128)
  7567  02B8  082F               	movf	(Fuzzy@a_243+1)^(0+128),w
  7568  02B9  3A80               	xorlw	128
  7569  02BA  00FF               	movwf	127
  7570  02BB  3080               	movlw	128
  7571  02BC  027F               	subwf	127,w
  7572  02BD  1D03               	skipz
  7573  02BE  2AC1               	goto	u523_25
  7574  02BF  3010               	movlw	16
  7575  02C0  022E               	subwf	Fuzzy@a_243^(0+128),w
  7576  02C1                     u523_25:	
  7577  02C1  1803               	btfsc	3,0
  7578  02C2  2B61               	goto	i1l3894
  7579  02C3                     i1l3884:	
  7580                           
  7581                           ;main.c: 244: rulemedio = trapmf(x, 2, 5, 5, 10);
  7582  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  7583  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  7584  02C5  083F               	movf	Fuzzy@x^(0+128),w
  7585  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  7586  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  7587  02C8  00C0               	movwf	trapmf@x
  7588  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  7589  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  7590  02CB  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7591  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  7592  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  7593  02CE  00C1               	movwf	trapmf@x+1
  7594  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  7595  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  7596  02D1  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7597  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  7598  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  7599  02D4  00C2               	movwf	trapmf@x+2
  7600  02D5  3000               	movlw	0
  7601  02D6  00C3               	movwf	trapmf@a
  7602  02D7  3000               	movlw	0
  7603  02D8  00C4               	movwf	trapmf@a+1
  7604  02D9  3040               	movlw	64
  7605  02DA  00C5               	movwf	trapmf@a+2
  7606  02DB  3000               	movlw	0
  7607  02DC  00C6               	movwf	trapmf@b
  7608  02DD  30A0               	movlw	160
  7609  02DE  00C7               	movwf	trapmf@b+1
  7610  02DF  3040               	movlw	64
  7611  02E0  00C8               	movwf	trapmf@b+2
  7612  02E1  3000               	movlw	0
  7613  02E2  00C9               	movwf	trapmf@c
  7614  02E3  30A0               	movlw	160
  7615  02E4  00CA               	movwf	trapmf@c+1
  7616  02E5  3040               	movlw	64
  7617  02E6  00CB               	movwf	trapmf@c+2
  7618  02E7  3000               	movlw	0
  7619  02E8  00CC               	movwf	trapmf@d
  7620  02E9  3020               	movlw	32
  7621  02EA  00CD               	movwf	trapmf@d+1
  7622  02EB  3041               	movlw	65
  7623  02EC  00CE               	movwf	trapmf@d+2
  7624  02ED  120A  158A  252A  120A  118A  	fcall	_trapmf
  7625  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  7626  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  7627  02F4  0840               	movf	?_trapmf,w
  7628  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  7629  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  7630  02F7  00C8               	movwf	_rulemedio^(0+128)
  7631  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  7632  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  7633  02FA  0841               	movf	?_trapmf+1,w
  7634  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  7635  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  7636  02FD  00C9               	movwf	(_rulemedio+1)^(0+128)
  7637  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  7638  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  7639  0300  0842               	movf	?_trapmf+2,w
  7640  0301  1683               	bsf	3,5	;RP0=1, select bank1
  7641  0302  1303               	bcf	3,6	;RP1=0, select bank1
  7642  0303  00CA               	movwf	(_rulemedio+2)^(0+128)
  7643                           
  7644                           ;main.c: 246: if (rulemedio >= rule) {
  7645  0304  0848               	movf	_rulemedio^(0+128),w
  7646  0305  00F0               	movwf	___ftge@ff1
  7647  0306  0849               	movf	(_rulemedio+1)^(0+128),w
  7648  0307  00F1               	movwf	___ftge@ff1+1
  7649  0308  084A               	movf	(_rulemedio+2)^(0+128),w
  7650  0309  00F2               	movwf	___ftge@ff1+2
  7651  030A  083C               	movf	Fuzzy@rule^(0+128),w
  7652  030B  00F3               	movwf	___ftge@ff2
  7653  030C  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7654  030D  00F4               	movwf	___ftge@ff2+1
  7655  030E  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7656  030F  00F5               	movwf	___ftge@ff2+2
  7657  0310  160A  118A  253C  120A  118A  	fcall	___ftge
  7658  0315  1C03               	btfss	3,0
  7659  0316  2B1F               	goto	i1l3888
  7660                           
  7661                           ;main.c: 247: rulemedio = rule;
  7662  0317  1683               	bsf	3,5	;RP0=1, select bank1
  7663  0318  1303               	bcf	3,6	;RP1=0, select bank1
  7664  0319  083C               	movf	Fuzzy@rule^(0+128),w
  7665  031A  00C8               	movwf	_rulemedio^(0+128)
  7666  031B  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7667  031C  00C9               	movwf	(_rulemedio+1)^(0+128)
  7668  031D  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7669  031E  00CA               	movwf	(_rulemedio+2)^(0+128)
  7670  031F                     i1l3888:	
  7671                           
  7672                           ;main.c: 248: }
  7673                           ;main.c: 250: x += 1;
  7674  031F  3000               	movlw	0
  7675  0320  1283               	bcf	3,5	;RP0=0, select bank0
  7676  0321  1303               	bcf	3,6	;RP1=0, select bank0
  7677  0322  00A3               	movwf	___ftadd@f1
  7678  0323  3080               	movlw	128
  7679  0324  00A4               	movwf	___ftadd@f1+1
  7680  0325  303F               	movlw	63
  7681  0326  00A5               	movwf	___ftadd@f1+2
  7682  0327  1683               	bsf	3,5	;RP0=1, select bank1
  7683  0328  1303               	bcf	3,6	;RP1=0, select bank1
  7684  0329  083F               	movf	Fuzzy@x^(0+128),w
  7685  032A  1283               	bcf	3,5	;RP0=0, select bank0
  7686  032B  1303               	bcf	3,6	;RP1=0, select bank0
  7687  032C  00A6               	movwf	___ftadd@f2
  7688  032D  1683               	bsf	3,5	;RP0=1, select bank1
  7689  032E  1303               	bcf	3,6	;RP1=0, select bank1
  7690  032F  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7691  0330  1283               	bcf	3,5	;RP0=0, select bank0
  7692  0331  1303               	bcf	3,6	;RP1=0, select bank0
  7693  0332  00A7               	movwf	___ftadd@f2+1
  7694  0333  1683               	bsf	3,5	;RP0=1, select bank1
  7695  0334  1303               	bcf	3,6	;RP1=0, select bank1
  7696  0335  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7697  0336  1283               	bcf	3,5	;RP0=0, select bank0
  7698  0337  1303               	bcf	3,6	;RP1=0, select bank0
  7699  0338  00A8               	movwf	___ftadd@f2+2
  7700  0339  120A  158A  2421  120A  118A  	fcall	___ftadd
  7701  033E  1283               	bcf	3,5	;RP0=0, select bank0
  7702  033F  1303               	bcf	3,6	;RP1=0, select bank0
  7703  0340  0823               	movf	?___ftadd,w
  7704  0341  1683               	bsf	3,5	;RP0=1, select bank1
  7705  0342  1303               	bcf	3,6	;RP1=0, select bank1
  7706  0343  00BF               	movwf	Fuzzy@x^(0+128)
  7707  0344  1283               	bcf	3,5	;RP0=0, select bank0
  7708  0345  1303               	bcf	3,6	;RP1=0, select bank0
  7709  0346  0824               	movf	?___ftadd+1,w
  7710  0347  1683               	bsf	3,5	;RP0=1, select bank1
  7711  0348  1303               	bcf	3,6	;RP1=0, select bank1
  7712  0349  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7713  034A  1283               	bcf	3,5	;RP0=0, select bank0
  7714  034B  1303               	bcf	3,6	;RP1=0, select bank0
  7715  034C  0825               	movf	?___ftadd+2,w
  7716  034D  1683               	bsf	3,5	;RP0=1, select bank1
  7717  034E  1303               	bcf	3,6	;RP1=0, select bank1
  7718  034F  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7719  0350  3001               	movlw	1
  7720  0351  07AE               	addwf	Fuzzy@a_243^(0+128),f
  7721  0352  1803               	skipnc
  7722  0353  0AAF               	incf	(Fuzzy@a_243+1)^(0+128),f
  7723  0354  3000               	movlw	0
  7724  0355  07AF               	addwf	(Fuzzy@a_243+1)^(0+128),f
  7725  0356  082F               	movf	(Fuzzy@a_243+1)^(0+128),w
  7726  0357  3A80               	xorlw	128
  7727  0358  00FF               	movwf	127
  7728  0359  3080               	movlw	128
  7729  035A  027F               	subwf	127,w
  7730  035B  1D03               	skipz
  7731  035C  2B5F               	goto	u525_25
  7732  035D  3010               	movlw	16
  7733  035E  022E               	subwf	Fuzzy@a_243^(0+128),w
  7734  035F                     u525_25:	
  7735  035F  1C03               	skipc
  7736  0360  2AC3               	goto	i1l3884
  7737  0361                     i1l3894:	
  7738                           
  7739                           ;main.c: 251: }
  7740                           ;main.c: 252: }
  7741                           ;main.c: 255: if (deltaV >= 1001)
  7742  0361  3003               	movlw	3
  7743  0362  1683               	bsf	3,5	;RP0=1, select bank1
  7744  0363  1303               	bcf	3,6	;RP1=0, select bank1
  7745  0364  0255               	subwf	(_deltaV+1)^(0+128),w
  7746  0365  30E9               	movlw	233
  7747  0366  1903               	skipnz
  7748  0367  0254               	subwf	_deltaV^(0+128),w
  7749  0368  1C03               	skipc
  7750  0369  2C5D               	goto	i1l3916
  7751                           
  7752                           ;main.c: 256: {
  7753                           ;main.c: 258: rule = trapmf(deltaV, 1001, 1500, 2000, 2001);
  7754  036A  0855               	movf	(_deltaV+1)^(0+128),w
  7755  036B  01F9               	clrf	___lwtoft@c+1
  7756  036C  07F9               	addwf	___lwtoft@c+1,f
  7757  036D  0854               	movf	_deltaV^(0+128),w
  7758  036E  01F8               	clrf	___lwtoft@c
  7759  036F  07F8               	addwf	___lwtoft@c,f
  7760  0370  160A  118A  22E1  120A  118A  	fcall	___lwtoft
  7761  0375  0878               	movf	?___lwtoft,w
  7762  0376  1283               	bcf	3,5	;RP0=0, select bank0
  7763  0377  1303               	bcf	3,6	;RP1=0, select bank0
  7764  0378  00C0               	movwf	trapmf@x
  7765  0379  0879               	movf	?___lwtoft+1,w
  7766  037A  00C1               	movwf	trapmf@x+1
  7767  037B  087A               	movf	?___lwtoft+2,w
  7768  037C  00C2               	movwf	trapmf@x+2
  7769  037D  3040               	movlw	64
  7770  037E  00C3               	movwf	trapmf@a
  7771  037F  307A               	movlw	122
  7772  0380  00C4               	movwf	trapmf@a+1
  7773  0381  3044               	movlw	68
  7774  0382  00C5               	movwf	trapmf@a+2
  7775  0383  3080               	movlw	128
  7776  0384  00C6               	movwf	trapmf@b
  7777  0385  30BB               	movlw	187
  7778  0386  00C7               	movwf	trapmf@b+1
  7779  0387  3044               	movlw	68
  7780  0388  00C8               	movwf	trapmf@b+2
  7781  0389  3000               	movlw	0
  7782  038A  00C9               	movwf	trapmf@c
  7783  038B  30FA               	movlw	250
  7784  038C  00CA               	movwf	trapmf@c+1
  7785  038D  3044               	movlw	68
  7786  038E  00CB               	movwf	trapmf@c+2
  7787  038F  3020               	movlw	32
  7788  0390  00CC               	movwf	trapmf@d
  7789  0391  30FA               	movlw	250
  7790  0392  00CD               	movwf	trapmf@d+1
  7791  0393  3044               	movlw	68
  7792  0394  00CE               	movwf	trapmf@d+2
  7793  0395  120A  158A  252A  120A  118A  	fcall	_trapmf
  7794  039A  1283               	bcf	3,5	;RP0=0, select bank0
  7795  039B  1303               	bcf	3,6	;RP1=0, select bank0
  7796  039C  0840               	movf	?_trapmf,w
  7797  039D  1683               	bsf	3,5	;RP0=1, select bank1
  7798  039E  1303               	bcf	3,6	;RP1=0, select bank1
  7799  039F  00BC               	movwf	Fuzzy@rule^(0+128)
  7800  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  7801  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  7802  03A2  0841               	movf	?_trapmf+1,w
  7803  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  7804  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  7805  03A5  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7806  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  7807  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  7808  03A8  0842               	movf	?_trapmf+2,w
  7809  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  7810  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  7811  03AB  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7812                           
  7813                           ;main.c: 260: x = 0;
  7814  03AC  3000               	movlw	0
  7815  03AD  00BF               	movwf	Fuzzy@x^(0+128)
  7816  03AE  3000               	movlw	0
  7817  03AF  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7818  03B0  3000               	movlw	0
  7819  03B1  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7820                           
  7821                           ;main.c: 261: for (int a = 0; a <= 15; a++) {
  7822  03B2  01B0               	clrf	Fuzzy@a_244^(0+128)
  7823  03B3  01B1               	clrf	(Fuzzy@a_244+1)^(0+128)
  7824  03B4  0831               	movf	(Fuzzy@a_244+1)^(0+128),w
  7825  03B5  3A80               	xorlw	128
  7826  03B6  00FF               	movwf	127
  7827  03B7  3080               	movlw	128
  7828  03B8  027F               	subwf	127,w
  7829  03B9  1D03               	skipz
  7830  03BA  2BBD               	goto	u527_25
  7831  03BB  3010               	movlw	16
  7832  03BC  0230               	subwf	Fuzzy@a_244^(0+128),w
  7833  03BD                     u527_25:	
  7834  03BD  1803               	btfsc	3,0
  7835  03BE  2C5D               	goto	i1l3916
  7836  03BF                     i1l3906:	
  7837                           
  7838                           ;main.c: 262: rulegrande = trapmf(x, 5, 10, 15, 16);
  7839  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  7840  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  7841  03C1  083F               	movf	Fuzzy@x^(0+128),w
  7842  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  7843  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  7844  03C4  00C0               	movwf	trapmf@x
  7845  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  7846  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  7847  03C7  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7848  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  7849  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  7850  03CA  00C1               	movwf	trapmf@x+1
  7851  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  7852  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  7853  03CD  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7854  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  7855  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  7856  03D0  00C2               	movwf	trapmf@x+2
  7857  03D1  3000               	movlw	0
  7858  03D2  00C3               	movwf	trapmf@a
  7859  03D3  30A0               	movlw	160
  7860  03D4  00C4               	movwf	trapmf@a+1
  7861  03D5  3040               	movlw	64
  7862  03D6  00C5               	movwf	trapmf@a+2
  7863  03D7  3000               	movlw	0
  7864  03D8  00C6               	movwf	trapmf@b
  7865  03D9  3020               	movlw	32
  7866  03DA  00C7               	movwf	trapmf@b+1
  7867  03DB  3041               	movlw	65
  7868  03DC  00C8               	movwf	trapmf@b+2
  7869  03DD  3000               	movlw	0
  7870  03DE  00C9               	movwf	trapmf@c
  7871  03DF  3070               	movlw	112
  7872  03E0  00CA               	movwf	trapmf@c+1
  7873  03E1  3041               	movlw	65
  7874  03E2  00CB               	movwf	trapmf@c+2
  7875  03E3  3000               	movlw	0
  7876  03E4  00CC               	movwf	trapmf@d
  7877  03E5  3080               	movlw	128
  7878  03E6  00CD               	movwf	trapmf@d+1
  7879  03E7  3041               	movlw	65
  7880  03E8  00CE               	movwf	trapmf@d+2
  7881  03E9  120A  158A  252A  120A  118A  	fcall	_trapmf
  7882  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  7883  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  7884  03F0  0840               	movf	?_trapmf,w
  7885  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  7886  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  7887  03F3  00C5               	movwf	_rulegrande^(0+128)
  7888  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  7889  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  7890  03F6  0841               	movf	?_trapmf+1,w
  7891  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  7892  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  7893  03F9  00C6               	movwf	(_rulegrande+1)^(0+128)
  7894  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  7895  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  7896  03FC  0842               	movf	?_trapmf+2,w
  7897  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  7898  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  7899  03FF  00C7               	movwf	(_rulegrande+2)^(0+128)
  7900                           
  7901                           ;main.c: 264: if (rulegrande >= rule) {
  7902  0400  0845               	movf	_rulegrande^(0+128),w
  7903  0401  00F0               	movwf	___ftge@ff1
  7904  0402  0846               	movf	(_rulegrande+1)^(0+128),w
  7905  0403  00F1               	movwf	___ftge@ff1+1
  7906  0404  0847               	movf	(_rulegrande+2)^(0+128),w
  7907  0405  00F2               	movwf	___ftge@ff1+2
  7908  0406  083C               	movf	Fuzzy@rule^(0+128),w
  7909  0407  00F3               	movwf	___ftge@ff2
  7910  0408  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7911  0409  00F4               	movwf	___ftge@ff2+1
  7912  040A  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7913  040B  00F5               	movwf	___ftge@ff2+2
  7914  040C  160A  118A  253C  120A  118A  	fcall	___ftge
  7915  0411  1C03               	btfss	3,0
  7916  0412  2C1B               	goto	i1l3910
  7917                           
  7918                           ;main.c: 265: rulegrande = rule;
  7919  0413  1683               	bsf	3,5	;RP0=1, select bank1
  7920  0414  1303               	bcf	3,6	;RP1=0, select bank1
  7921  0415  083C               	movf	Fuzzy@rule^(0+128),w
  7922  0416  00C5               	movwf	_rulegrande^(0+128)
  7923  0417  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7924  0418  00C6               	movwf	(_rulegrande+1)^(0+128)
  7925  0419  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7926  041A  00C7               	movwf	(_rulegrande+2)^(0+128)
  7927  041B                     i1l3910:	
  7928                           
  7929                           ;main.c: 266: }
  7930                           ;main.c: 268: x += 1;
  7931  041B  3000               	movlw	0
  7932  041C  1283               	bcf	3,5	;RP0=0, select bank0
  7933  041D  1303               	bcf	3,6	;RP1=0, select bank0
  7934  041E  00A3               	movwf	___ftadd@f1
  7935  041F  3080               	movlw	128
  7936  0420  00A4               	movwf	___ftadd@f1+1
  7937  0421  303F               	movlw	63
  7938  0422  00A5               	movwf	___ftadd@f1+2
  7939  0423  1683               	bsf	3,5	;RP0=1, select bank1
  7940  0424  1303               	bcf	3,6	;RP1=0, select bank1
  7941  0425  083F               	movf	Fuzzy@x^(0+128),w
  7942  0426  1283               	bcf	3,5	;RP0=0, select bank0
  7943  0427  1303               	bcf	3,6	;RP1=0, select bank0
  7944  0428  00A6               	movwf	___ftadd@f2
  7945  0429  1683               	bsf	3,5	;RP0=1, select bank1
  7946  042A  1303               	bcf	3,6	;RP1=0, select bank1
  7947  042B  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7948  042C  1283               	bcf	3,5	;RP0=0, select bank0
  7949  042D  1303               	bcf	3,6	;RP1=0, select bank0
  7950  042E  00A7               	movwf	___ftadd@f2+1
  7951  042F  1683               	bsf	3,5	;RP0=1, select bank1
  7952  0430  1303               	bcf	3,6	;RP1=0, select bank1
  7953  0431  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7954  0432  1283               	bcf	3,5	;RP0=0, select bank0
  7955  0433  1303               	bcf	3,6	;RP1=0, select bank0
  7956  0434  00A8               	movwf	___ftadd@f2+2
  7957  0435  120A  158A  2421  120A  118A  	fcall	___ftadd
  7958  043A  1283               	bcf	3,5	;RP0=0, select bank0
  7959  043B  1303               	bcf	3,6	;RP1=0, select bank0
  7960  043C  0823               	movf	?___ftadd,w
  7961  043D  1683               	bsf	3,5	;RP0=1, select bank1
  7962  043E  1303               	bcf	3,6	;RP1=0, select bank1
  7963  043F  00BF               	movwf	Fuzzy@x^(0+128)
  7964  0440  1283               	bcf	3,5	;RP0=0, select bank0
  7965  0441  1303               	bcf	3,6	;RP1=0, select bank0
  7966  0442  0824               	movf	?___ftadd+1,w
  7967  0443  1683               	bsf	3,5	;RP0=1, select bank1
  7968  0444  1303               	bcf	3,6	;RP1=0, select bank1
  7969  0445  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7970  0446  1283               	bcf	3,5	;RP0=0, select bank0
  7971  0447  1303               	bcf	3,6	;RP1=0, select bank0
  7972  0448  0825               	movf	?___ftadd+2,w
  7973  0449  1683               	bsf	3,5	;RP0=1, select bank1
  7974  044A  1303               	bcf	3,6	;RP1=0, select bank1
  7975  044B  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7976  044C  3001               	movlw	1
  7977  044D  07B0               	addwf	Fuzzy@a_244^(0+128),f
  7978  044E  1803               	skipnc
  7979  044F  0AB1               	incf	(Fuzzy@a_244+1)^(0+128),f
  7980  0450  3000               	movlw	0
  7981  0451  07B1               	addwf	(Fuzzy@a_244+1)^(0+128),f
  7982  0452  0831               	movf	(Fuzzy@a_244+1)^(0+128),w
  7983  0453  3A80               	xorlw	128
  7984  0454  00FF               	movwf	127
  7985  0455  3080               	movlw	128
  7986  0456  027F               	subwf	127,w
  7987  0457  1D03               	skipz
  7988  0458  2C5B               	goto	u529_25
  7989  0459  3010               	movlw	16
  7990  045A  0230               	subwf	Fuzzy@a_244^(0+128),w
  7991  045B                     u529_25:	
  7992  045B  1C03               	skipc
  7993  045C  2BBF               	goto	i1l3906
  7994  045D                     i1l3916:	
  7995                           
  7996                           ;main.c: 269: }
  7997                           ;main.c: 270: }
  7998                           ;main.c: 274: x = 0;
  7999  045D  3000               	movlw	0
  8000  045E  1683               	bsf	3,5	;RP0=1, select bank1
  8001  045F  1303               	bcf	3,6	;RP1=0, select bank1
  8002  0460  00BF               	movwf	Fuzzy@x^(0+128)
  8003  0461  3000               	movlw	0
  8004  0462  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  8005  0463  3000               	movlw	0
  8006  0464  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  8007                           
  8008                           ;main.c: 275: float total_area = 0;
  8009  0465  3000               	movlw	0
  8010  0466  00B7               	movwf	Fuzzy@total_area^(0+128)
  8011  0467  3000               	movlw	0
  8012  0468  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8013  0469  3000               	movlw	0
  8014  046A  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8015                           
  8016                           ;main.c: 276: float soma = 0;
  8017  046B  3000               	movlw	0
  8018  046C  00B4               	movwf	Fuzzy@soma^(0+128)
  8019  046D  3000               	movlw	0
  8020  046E  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8021  046F  3000               	movlw	0
  8022  0470  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8023                           
  8024                           ;main.c: 277: for (int a = 0; a <= 15; a++)
  8025  0471  01BA               	clrf	Fuzzy@a_247^(0+128)
  8026  0472  01BB               	clrf	(Fuzzy@a_247+1)^(0+128)
  8027  0473  083B               	movf	(Fuzzy@a_247+1)^(0+128),w
  8028  0474  3A80               	xorlw	128
  8029  0475  00FF               	movwf	127
  8030  0476  3080               	movlw	128
  8031  0477  027F               	subwf	127,w
  8032  0478  1D03               	skipz
  8033  0479  2C7C               	goto	u530_25
  8034  047A  3010               	movlw	16
  8035  047B  023A               	subwf	Fuzzy@a_247^(0+128),w
  8036  047C                     u530_25:	
  8037  047C  1803               	btfsc	3,0
  8038  047D  2EBC               	goto	i1l3944
  8039  047E                     i1l176:	
  8040                           
  8041                           ;main.c: 278: {
  8042                           ;main.c: 279: if (a >= 0 && a <= 5) {
  8043  047E  1683               	bsf	3,5	;RP0=1, select bank1
  8044  047F  1303               	bcf	3,6	;RP1=0, select bank1
  8045  0480  1BBB               	btfsc	(Fuzzy@a_247+1)^(0+128),7
  8046  0481  2D20               	goto	i1l3928
  8047  0482  083B               	movf	(Fuzzy@a_247+1)^(0+128),w
  8048  0483  3A80               	xorlw	128
  8049  0484  00FF               	movwf	127
  8050  0485  3080               	movlw	128
  8051  0486  027F               	subwf	127,w
  8052  0487  1D03               	skipz
  8053  0488  2C8B               	goto	u532_25
  8054  0489  3006               	movlw	6
  8055  048A  023A               	subwf	Fuzzy@a_247^(0+128),w
  8056  048B                     u532_25:	
  8057  048B  1803               	skipnc
  8058  048C  2D20               	goto	i1l3928
  8059                           
  8060                           ;main.c: 280: total_area += rulepequeno;
  8061  048D  1683               	bsf	3,5	;RP0=1, select bank1
  8062  048E  1303               	bcf	3,6	;RP1=0, select bank1
  8063  048F  084B               	movf	_rulepequeno^(0+128),w
  8064  0490  1283               	bcf	3,5	;RP0=0, select bank0
  8065  0491  1303               	bcf	3,6	;RP1=0, select bank0
  8066  0492  00A3               	movwf	___ftadd@f1
  8067  0493  1683               	bsf	3,5	;RP0=1, select bank1
  8068  0494  1303               	bcf	3,6	;RP1=0, select bank1
  8069  0495  084C               	movf	(_rulepequeno+1)^(0+128),w
  8070  0496  1283               	bcf	3,5	;RP0=0, select bank0
  8071  0497  1303               	bcf	3,6	;RP1=0, select bank0
  8072  0498  00A4               	movwf	___ftadd@f1+1
  8073  0499  1683               	bsf	3,5	;RP0=1, select bank1
  8074  049A  1303               	bcf	3,6	;RP1=0, select bank1
  8075  049B  084D               	movf	(_rulepequeno+2)^(0+128),w
  8076  049C  1283               	bcf	3,5	;RP0=0, select bank0
  8077  049D  1303               	bcf	3,6	;RP1=0, select bank0
  8078  049E  00A5               	movwf	___ftadd@f1+2
  8079  049F  1683               	bsf	3,5	;RP0=1, select bank1
  8080  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  8081  04A1  0837               	movf	Fuzzy@total_area^(0+128),w
  8082  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  8083  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  8084  04A4  00A6               	movwf	___ftadd@f2
  8085  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  8086  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  8087  04A7  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8088  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  8089  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  8090  04AA  00A7               	movwf	___ftadd@f2+1
  8091  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  8092  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  8093  04AD  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8094  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  8095  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  8096  04B0  00A8               	movwf	___ftadd@f2+2
  8097  04B1  120A  158A  2421  120A  118A  	fcall	___ftadd
  8098  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  8099  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  8100  04B8  0823               	movf	?___ftadd,w
  8101  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  8102  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  8103  04BB  00B7               	movwf	Fuzzy@total_area^(0+128)
  8104  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  8105  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  8106  04BE  0824               	movf	?___ftadd+1,w
  8107  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  8108  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  8109  04C1  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8110  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  8111  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  8112  04C4  0825               	movf	?___ftadd+2,w
  8113  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  8114  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  8115  04C7  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8116                           
  8117                           ;main.c: 281: soma += (x * rulepequeno);
  8118  04C8  083F               	movf	Fuzzy@x^(0+128),w
  8119  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  8120  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  8121  04CB  00D5               	movwf	___ftmul@f2
  8122  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  8123  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  8124  04CE  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8125  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  8126  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  8127  04D1  00D6               	movwf	___ftmul@f2+1
  8128  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  8129  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  8130  04D4  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8131  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  8132  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  8133  04D7  00D7               	movwf	___ftmul@f2+2
  8134  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  8135  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  8136  04DA  084B               	movf	_rulepequeno^(0+128),w
  8137  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  8138  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  8139  04DD  00D2               	movwf	___ftmul@f1
  8140  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  8141  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  8142  04E0  084C               	movf	(_rulepequeno+1)^(0+128),w
  8143  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  8144  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  8145  04E3  00D3               	movwf	___ftmul@f1+1
  8146  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  8147  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  8148  04E6  084D               	movf	(_rulepequeno+2)^(0+128),w
  8149  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  8150  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  8151  04E9  00D4               	movwf	___ftmul@f1+2
  8152  04EA  120A  158A  2277  120A  118A  	fcall	___ftmul
  8153  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  8154  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  8155  04F1  0852               	movf	?___ftmul,w
  8156  04F2  00A3               	movwf	___ftadd@f1
  8157  04F3  0853               	movf	?___ftmul+1,w
  8158  04F4  00A4               	movwf	___ftadd@f1+1
  8159  04F5  0854               	movf	?___ftmul+2,w
  8160  04F6  00A5               	movwf	___ftadd@f1+2
  8161  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  8162  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  8163  04F9  0834               	movf	Fuzzy@soma^(0+128),w
  8164  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  8165  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  8166  04FC  00A6               	movwf	___ftadd@f2
  8167  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  8168  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  8169  04FF  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8170  0500  1283               	bcf	3,5	;RP0=0, select bank0
  8171  0501  1303               	bcf	3,6	;RP1=0, select bank0
  8172  0502  00A7               	movwf	___ftadd@f2+1
  8173  0503  1683               	bsf	3,5	;RP0=1, select bank1
  8174  0504  1303               	bcf	3,6	;RP1=0, select bank1
  8175  0505  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8176  0506  1283               	bcf	3,5	;RP0=0, select bank0
  8177  0507  1303               	bcf	3,6	;RP1=0, select bank0
  8178  0508  00A8               	movwf	___ftadd@f2+2
  8179  0509  120A  158A  2421  120A  118A  	fcall	___ftadd
  8180  050E  1283               	bcf	3,5	;RP0=0, select bank0
  8181  050F  1303               	bcf	3,6	;RP1=0, select bank0
  8182  0510  0823               	movf	?___ftadd,w
  8183  0511  1683               	bsf	3,5	;RP0=1, select bank1
  8184  0512  1303               	bcf	3,6	;RP1=0, select bank1
  8185  0513  00B4               	movwf	Fuzzy@soma^(0+128)
  8186  0514  1283               	bcf	3,5	;RP0=0, select bank0
  8187  0515  1303               	bcf	3,6	;RP1=0, select bank0
  8188  0516  0824               	movf	?___ftadd+1,w
  8189  0517  1683               	bsf	3,5	;RP0=1, select bank1
  8190  0518  1303               	bcf	3,6	;RP1=0, select bank1
  8191  0519  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8192  051A  1283               	bcf	3,5	;RP0=0, select bank0
  8193  051B  1303               	bcf	3,6	;RP1=0, select bank0
  8194  051C  0825               	movf	?___ftadd+2,w
  8195  051D  1683               	bsf	3,5	;RP0=1, select bank1
  8196  051E  1303               	bcf	3,6	;RP1=0, select bank1
  8197  051F  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8198  0520                     i1l3928:	
  8199                           
  8200                           ;main.c: 282: }
  8201                           ;main.c: 284: if (a >= 5 && a <= 10) {
  8202  0520  1683               	bsf	3,5	;RP0=1, select bank1
  8203  0521  1303               	bcf	3,6	;RP1=0, select bank1
  8204  0522  083B               	movf	(Fuzzy@a_247+1)^(0+128),w
  8205  0523  3A80               	xorlw	128
  8206  0524  00FF               	movwf	127
  8207  0525  3080               	movlw	128
  8208  0526  027F               	subwf	127,w
  8209  0527  1D03               	skipz
  8210  0528  2D2B               	goto	u533_25
  8211  0529  3005               	movlw	5
  8212  052A  023A               	subwf	Fuzzy@a_247^(0+128),w
  8213  052B                     u533_25:	
  8214  052B  1C03               	skipc
  8215  052C  2DCD               	goto	i1l3934
  8216  052D  1683               	bsf	3,5	;RP0=1, select bank1
  8217  052E  1303               	bcf	3,6	;RP1=0, select bank1
  8218  052F  083B               	movf	(Fuzzy@a_247+1)^(0+128),w
  8219  0530  3A80               	xorlw	128
  8220  0531  00FF               	movwf	127
  8221  0532  3080               	movlw	128
  8222  0533  027F               	subwf	127,w
  8223  0534  1D03               	skipz
  8224  0535  2D38               	goto	u534_25
  8225  0536  300B               	movlw	11
  8226  0537  023A               	subwf	Fuzzy@a_247^(0+128),w
  8227  0538                     u534_25:	
  8228  0538  1803               	skipnc
  8229  0539  2DCD               	goto	i1l3934
  8230                           
  8231                           ;main.c: 285: total_area += rulemedio;
  8232  053A  1683               	bsf	3,5	;RP0=1, select bank1
  8233  053B  1303               	bcf	3,6	;RP1=0, select bank1
  8234  053C  0848               	movf	_rulemedio^(0+128),w
  8235  053D  1283               	bcf	3,5	;RP0=0, select bank0
  8236  053E  1303               	bcf	3,6	;RP1=0, select bank0
  8237  053F  00A3               	movwf	___ftadd@f1
  8238  0540  1683               	bsf	3,5	;RP0=1, select bank1
  8239  0541  1303               	bcf	3,6	;RP1=0, select bank1
  8240  0542  0849               	movf	(_rulemedio+1)^(0+128),w
  8241  0543  1283               	bcf	3,5	;RP0=0, select bank0
  8242  0544  1303               	bcf	3,6	;RP1=0, select bank0
  8243  0545  00A4               	movwf	___ftadd@f1+1
  8244  0546  1683               	bsf	3,5	;RP0=1, select bank1
  8245  0547  1303               	bcf	3,6	;RP1=0, select bank1
  8246  0548  084A               	movf	(_rulemedio+2)^(0+128),w
  8247  0549  1283               	bcf	3,5	;RP0=0, select bank0
  8248  054A  1303               	bcf	3,6	;RP1=0, select bank0
  8249  054B  00A5               	movwf	___ftadd@f1+2
  8250  054C  1683               	bsf	3,5	;RP0=1, select bank1
  8251  054D  1303               	bcf	3,6	;RP1=0, select bank1
  8252  054E  0837               	movf	Fuzzy@total_area^(0+128),w
  8253  054F  1283               	bcf	3,5	;RP0=0, select bank0
  8254  0550  1303               	bcf	3,6	;RP1=0, select bank0
  8255  0551  00A6               	movwf	___ftadd@f2
  8256  0552  1683               	bsf	3,5	;RP0=1, select bank1
  8257  0553  1303               	bcf	3,6	;RP1=0, select bank1
  8258  0554  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8259  0555  1283               	bcf	3,5	;RP0=0, select bank0
  8260  0556  1303               	bcf	3,6	;RP1=0, select bank0
  8261  0557  00A7               	movwf	___ftadd@f2+1
  8262  0558  1683               	bsf	3,5	;RP0=1, select bank1
  8263  0559  1303               	bcf	3,6	;RP1=0, select bank1
  8264  055A  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8265  055B  1283               	bcf	3,5	;RP0=0, select bank0
  8266  055C  1303               	bcf	3,6	;RP1=0, select bank0
  8267  055D  00A8               	movwf	___ftadd@f2+2
  8268  055E  120A  158A  2421  120A  118A  	fcall	___ftadd
  8269  0563  1283               	bcf	3,5	;RP0=0, select bank0
  8270  0564  1303               	bcf	3,6	;RP1=0, select bank0
  8271  0565  0823               	movf	?___ftadd,w
  8272  0566  1683               	bsf	3,5	;RP0=1, select bank1
  8273  0567  1303               	bcf	3,6	;RP1=0, select bank1
  8274  0568  00B7               	movwf	Fuzzy@total_area^(0+128)
  8275  0569  1283               	bcf	3,5	;RP0=0, select bank0
  8276  056A  1303               	bcf	3,6	;RP1=0, select bank0
  8277  056B  0824               	movf	?___ftadd+1,w
  8278  056C  1683               	bsf	3,5	;RP0=1, select bank1
  8279  056D  1303               	bcf	3,6	;RP1=0, select bank1
  8280  056E  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8281  056F  1283               	bcf	3,5	;RP0=0, select bank0
  8282  0570  1303               	bcf	3,6	;RP1=0, select bank0
  8283  0571  0825               	movf	?___ftadd+2,w
  8284  0572  1683               	bsf	3,5	;RP0=1, select bank1
  8285  0573  1303               	bcf	3,6	;RP1=0, select bank1
  8286  0574  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8287                           
  8288                           ;main.c: 286: soma += (x * rulemedio);
  8289  0575  083F               	movf	Fuzzy@x^(0+128),w
  8290  0576  1283               	bcf	3,5	;RP0=0, select bank0
  8291  0577  1303               	bcf	3,6	;RP1=0, select bank0
  8292  0578  00D5               	movwf	___ftmul@f2
  8293  0579  1683               	bsf	3,5	;RP0=1, select bank1
  8294  057A  1303               	bcf	3,6	;RP1=0, select bank1
  8295  057B  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8296  057C  1283               	bcf	3,5	;RP0=0, select bank0
  8297  057D  1303               	bcf	3,6	;RP1=0, select bank0
  8298  057E  00D6               	movwf	___ftmul@f2+1
  8299  057F  1683               	bsf	3,5	;RP0=1, select bank1
  8300  0580  1303               	bcf	3,6	;RP1=0, select bank1
  8301  0581  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8302  0582  1283               	bcf	3,5	;RP0=0, select bank0
  8303  0583  1303               	bcf	3,6	;RP1=0, select bank0
  8304  0584  00D7               	movwf	___ftmul@f2+2
  8305  0585  1683               	bsf	3,5	;RP0=1, select bank1
  8306  0586  1303               	bcf	3,6	;RP1=0, select bank1
  8307  0587  0848               	movf	_rulemedio^(0+128),w
  8308  0588  1283               	bcf	3,5	;RP0=0, select bank0
  8309  0589  1303               	bcf	3,6	;RP1=0, select bank0
  8310  058A  00D2               	movwf	___ftmul@f1
  8311  058B  1683               	bsf	3,5	;RP0=1, select bank1
  8312  058C  1303               	bcf	3,6	;RP1=0, select bank1
  8313  058D  0849               	movf	(_rulemedio+1)^(0+128),w
  8314  058E  1283               	bcf	3,5	;RP0=0, select bank0
  8315  058F  1303               	bcf	3,6	;RP1=0, select bank0
  8316  0590  00D3               	movwf	___ftmul@f1+1
  8317  0591  1683               	bsf	3,5	;RP0=1, select bank1
  8318  0592  1303               	bcf	3,6	;RP1=0, select bank1
  8319  0593  084A               	movf	(_rulemedio+2)^(0+128),w
  8320  0594  1283               	bcf	3,5	;RP0=0, select bank0
  8321  0595  1303               	bcf	3,6	;RP1=0, select bank0
  8322  0596  00D4               	movwf	___ftmul@f1+2
  8323  0597  120A  158A  2277  120A  118A  	fcall	___ftmul
  8324  059C  1283               	bcf	3,5	;RP0=0, select bank0
  8325  059D  1303               	bcf	3,6	;RP1=0, select bank0
  8326  059E  0852               	movf	?___ftmul,w
  8327  059F  00A3               	movwf	___ftadd@f1
  8328  05A0  0853               	movf	?___ftmul+1,w
  8329  05A1  00A4               	movwf	___ftadd@f1+1
  8330  05A2  0854               	movf	?___ftmul+2,w
  8331  05A3  00A5               	movwf	___ftadd@f1+2
  8332  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  8333  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  8334  05A6  0834               	movf	Fuzzy@soma^(0+128),w
  8335  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  8336  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  8337  05A9  00A6               	movwf	___ftadd@f2
  8338  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  8339  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  8340  05AC  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8341  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  8342  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  8343  05AF  00A7               	movwf	___ftadd@f2+1
  8344  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  8345  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  8346  05B2  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8347  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  8348  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  8349  05B5  00A8               	movwf	___ftadd@f2+2
  8350  05B6  120A  158A  2421  120A  118A  	fcall	___ftadd
  8351  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  8352  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  8353  05BD  0823               	movf	?___ftadd,w
  8354  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  8355  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  8356  05C0  00B4               	movwf	Fuzzy@soma^(0+128)
  8357  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  8358  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  8359  05C3  0824               	movf	?___ftadd+1,w
  8360  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  8361  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  8362  05C6  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8363  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  8364  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  8365  05C9  0825               	movf	?___ftadd+2,w
  8366  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  8367  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  8368  05CC  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8369  05CD                     i1l3934:	
  8370                           
  8371                           ;main.c: 287: }
  8372                           ;main.c: 289: if (a >= 10 && a <= 15) {
  8373  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  8374  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  8375  05CF  083B               	movf	(Fuzzy@a_247+1)^(0+128),w
  8376  05D0  3A80               	xorlw	128
  8377  05D1  00FF               	movwf	127
  8378  05D2  3080               	movlw	128
  8379  05D3  027F               	subwf	127,w
  8380  05D4  1D03               	skipz
  8381  05D5  2DD8               	goto	u535_25
  8382  05D6  300A               	movlw	10
  8383  05D7  023A               	subwf	Fuzzy@a_247^(0+128),w
  8384  05D8                     u535_25:	
  8385  05D8  1C03               	skipc
  8386  05D9  2E7A               	goto	i1l180
  8387  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  8388  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  8389  05DC  083B               	movf	(Fuzzy@a_247+1)^(0+128),w
  8390  05DD  3A80               	xorlw	128
  8391  05DE  00FF               	movwf	127
  8392  05DF  3080               	movlw	128
  8393  05E0  027F               	subwf	127,w
  8394  05E1  1D03               	skipz
  8395  05E2  2DE5               	goto	u536_25
  8396  05E3  3010               	movlw	16
  8397  05E4  023A               	subwf	Fuzzy@a_247^(0+128),w
  8398  05E5                     u536_25:	
  8399  05E5  1803               	skipnc
  8400  05E6  2E7A               	goto	i1l180
  8401                           
  8402                           ;main.c: 290: total_area += rulegrande;
  8403  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  8404  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  8405  05E9  0845               	movf	_rulegrande^(0+128),w
  8406  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  8407  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  8408  05EC  00A3               	movwf	___ftadd@f1
  8409  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  8410  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  8411  05EF  0846               	movf	(_rulegrande+1)^(0+128),w
  8412  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  8413  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  8414  05F2  00A4               	movwf	___ftadd@f1+1
  8415  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  8416  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  8417  05F5  0847               	movf	(_rulegrande+2)^(0+128),w
  8418  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  8419  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  8420  05F8  00A5               	movwf	___ftadd@f1+2
  8421  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  8422  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  8423  05FB  0837               	movf	Fuzzy@total_area^(0+128),w
  8424  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  8425  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  8426  05FE  00A6               	movwf	___ftadd@f2
  8427  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  8428  0600  1303               	bcf	3,6	;RP1=0, select bank1
  8429  0601  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8430  0602  1283               	bcf	3,5	;RP0=0, select bank0
  8431  0603  1303               	bcf	3,6	;RP1=0, select bank0
  8432  0604  00A7               	movwf	___ftadd@f2+1
  8433  0605  1683               	bsf	3,5	;RP0=1, select bank1
  8434  0606  1303               	bcf	3,6	;RP1=0, select bank1
  8435  0607  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8436  0608  1283               	bcf	3,5	;RP0=0, select bank0
  8437  0609  1303               	bcf	3,6	;RP1=0, select bank0
  8438  060A  00A8               	movwf	___ftadd@f2+2
  8439  060B  120A  158A  2421  120A  118A  	fcall	___ftadd
  8440  0610  1283               	bcf	3,5	;RP0=0, select bank0
  8441  0611  1303               	bcf	3,6	;RP1=0, select bank0
  8442  0612  0823               	movf	?___ftadd,w
  8443  0613  1683               	bsf	3,5	;RP0=1, select bank1
  8444  0614  1303               	bcf	3,6	;RP1=0, select bank1
  8445  0615  00B7               	movwf	Fuzzy@total_area^(0+128)
  8446  0616  1283               	bcf	3,5	;RP0=0, select bank0
  8447  0617  1303               	bcf	3,6	;RP1=0, select bank0
  8448  0618  0824               	movf	?___ftadd+1,w
  8449  0619  1683               	bsf	3,5	;RP0=1, select bank1
  8450  061A  1303               	bcf	3,6	;RP1=0, select bank1
  8451  061B  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8452  061C  1283               	bcf	3,5	;RP0=0, select bank0
  8453  061D  1303               	bcf	3,6	;RP1=0, select bank0
  8454  061E  0825               	movf	?___ftadd+2,w
  8455  061F  1683               	bsf	3,5	;RP0=1, select bank1
  8456  0620  1303               	bcf	3,6	;RP1=0, select bank1
  8457  0621  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8458                           
  8459                           ;main.c: 291: soma += (x * rulegrande);
  8460  0622  083F               	movf	Fuzzy@x^(0+128),w
  8461  0623  1283               	bcf	3,5	;RP0=0, select bank0
  8462  0624  1303               	bcf	3,6	;RP1=0, select bank0
  8463  0625  00D5               	movwf	___ftmul@f2
  8464  0626  1683               	bsf	3,5	;RP0=1, select bank1
  8465  0627  1303               	bcf	3,6	;RP1=0, select bank1
  8466  0628  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8467  0629  1283               	bcf	3,5	;RP0=0, select bank0
  8468  062A  1303               	bcf	3,6	;RP1=0, select bank0
  8469  062B  00D6               	movwf	___ftmul@f2+1
  8470  062C  1683               	bsf	3,5	;RP0=1, select bank1
  8471  062D  1303               	bcf	3,6	;RP1=0, select bank1
  8472  062E  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8473  062F  1283               	bcf	3,5	;RP0=0, select bank0
  8474  0630  1303               	bcf	3,6	;RP1=0, select bank0
  8475  0631  00D7               	movwf	___ftmul@f2+2
  8476  0632  1683               	bsf	3,5	;RP0=1, select bank1
  8477  0633  1303               	bcf	3,6	;RP1=0, select bank1
  8478  0634  0845               	movf	_rulegrande^(0+128),w
  8479  0635  1283               	bcf	3,5	;RP0=0, select bank0
  8480  0636  1303               	bcf	3,6	;RP1=0, select bank0
  8481  0637  00D2               	movwf	___ftmul@f1
  8482  0638  1683               	bsf	3,5	;RP0=1, select bank1
  8483  0639  1303               	bcf	3,6	;RP1=0, select bank1
  8484  063A  0846               	movf	(_rulegrande+1)^(0+128),w
  8485  063B  1283               	bcf	3,5	;RP0=0, select bank0
  8486  063C  1303               	bcf	3,6	;RP1=0, select bank0
  8487  063D  00D3               	movwf	___ftmul@f1+1
  8488  063E  1683               	bsf	3,5	;RP0=1, select bank1
  8489  063F  1303               	bcf	3,6	;RP1=0, select bank1
  8490  0640  0847               	movf	(_rulegrande+2)^(0+128),w
  8491  0641  1283               	bcf	3,5	;RP0=0, select bank0
  8492  0642  1303               	bcf	3,6	;RP1=0, select bank0
  8493  0643  00D4               	movwf	___ftmul@f1+2
  8494  0644  120A  158A  2277  120A  118A  	fcall	___ftmul
  8495  0649  1283               	bcf	3,5	;RP0=0, select bank0
  8496  064A  1303               	bcf	3,6	;RP1=0, select bank0
  8497  064B  0852               	movf	?___ftmul,w
  8498  064C  00A3               	movwf	___ftadd@f1
  8499  064D  0853               	movf	?___ftmul+1,w
  8500  064E  00A4               	movwf	___ftadd@f1+1
  8501  064F  0854               	movf	?___ftmul+2,w
  8502  0650  00A5               	movwf	___ftadd@f1+2
  8503  0651  1683               	bsf	3,5	;RP0=1, select bank1
  8504  0652  1303               	bcf	3,6	;RP1=0, select bank1
  8505  0653  0834               	movf	Fuzzy@soma^(0+128),w
  8506  0654  1283               	bcf	3,5	;RP0=0, select bank0
  8507  0655  1303               	bcf	3,6	;RP1=0, select bank0
  8508  0656  00A6               	movwf	___ftadd@f2
  8509  0657  1683               	bsf	3,5	;RP0=1, select bank1
  8510  0658  1303               	bcf	3,6	;RP1=0, select bank1
  8511  0659  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8512  065A  1283               	bcf	3,5	;RP0=0, select bank0
  8513  065B  1303               	bcf	3,6	;RP1=0, select bank0
  8514  065C  00A7               	movwf	___ftadd@f2+1
  8515  065D  1683               	bsf	3,5	;RP0=1, select bank1
  8516  065E  1303               	bcf	3,6	;RP1=0, select bank1
  8517  065F  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8518  0660  1283               	bcf	3,5	;RP0=0, select bank0
  8519  0661  1303               	bcf	3,6	;RP1=0, select bank0
  8520  0662  00A8               	movwf	___ftadd@f2+2
  8521  0663  120A  158A  2421  120A  118A  	fcall	___ftadd
  8522  0668  1283               	bcf	3,5	;RP0=0, select bank0
  8523  0669  1303               	bcf	3,6	;RP1=0, select bank0
  8524  066A  0823               	movf	?___ftadd,w
  8525  066B  1683               	bsf	3,5	;RP0=1, select bank1
  8526  066C  1303               	bcf	3,6	;RP1=0, select bank1
  8527  066D  00B4               	movwf	Fuzzy@soma^(0+128)
  8528  066E  1283               	bcf	3,5	;RP0=0, select bank0
  8529  066F  1303               	bcf	3,6	;RP1=0, select bank0
  8530  0670  0824               	movf	?___ftadd+1,w
  8531  0671  1683               	bsf	3,5	;RP0=1, select bank1
  8532  0672  1303               	bcf	3,6	;RP1=0, select bank1
  8533  0673  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8534  0674  1283               	bcf	3,5	;RP0=0, select bank0
  8535  0675  1303               	bcf	3,6	;RP1=0, select bank0
  8536  0676  0825               	movf	?___ftadd+2,w
  8537  0677  1683               	bsf	3,5	;RP0=1, select bank1
  8538  0678  1303               	bcf	3,6	;RP1=0, select bank1
  8539  0679  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8540  067A                     i1l180:	
  8541                           
  8542                           ;main.c: 292: }
  8543                           ;main.c: 293: x += 1;
  8544  067A  3000               	movlw	0
  8545  067B  1283               	bcf	3,5	;RP0=0, select bank0
  8546  067C  1303               	bcf	3,6	;RP1=0, select bank0
  8547  067D  00A3               	movwf	___ftadd@f1
  8548  067E  3080               	movlw	128
  8549  067F  00A4               	movwf	___ftadd@f1+1
  8550  0680  303F               	movlw	63
  8551  0681  00A5               	movwf	___ftadd@f1+2
  8552  0682  1683               	bsf	3,5	;RP0=1, select bank1
  8553  0683  1303               	bcf	3,6	;RP1=0, select bank1
  8554  0684  083F               	movf	Fuzzy@x^(0+128),w
  8555  0685  1283               	bcf	3,5	;RP0=0, select bank0
  8556  0686  1303               	bcf	3,6	;RP1=0, select bank0
  8557  0687  00A6               	movwf	___ftadd@f2
  8558  0688  1683               	bsf	3,5	;RP0=1, select bank1
  8559  0689  1303               	bcf	3,6	;RP1=0, select bank1
  8560  068A  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8561  068B  1283               	bcf	3,5	;RP0=0, select bank0
  8562  068C  1303               	bcf	3,6	;RP1=0, select bank0
  8563  068D  00A7               	movwf	___ftadd@f2+1
  8564  068E  1683               	bsf	3,5	;RP0=1, select bank1
  8565  068F  1303               	bcf	3,6	;RP1=0, select bank1
  8566  0690  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8567  0691  1283               	bcf	3,5	;RP0=0, select bank0
  8568  0692  1303               	bcf	3,6	;RP1=0, select bank0
  8569  0693  00A8               	movwf	___ftadd@f2+2
  8570  0694  120A  158A  2421  120A  118A  	fcall	___ftadd
  8571  0699  1283               	bcf	3,5	;RP0=0, select bank0
  8572  069A  1303               	bcf	3,6	;RP1=0, select bank0
  8573  069B  0823               	movf	?___ftadd,w
  8574  069C  1683               	bsf	3,5	;RP0=1, select bank1
  8575  069D  1303               	bcf	3,6	;RP1=0, select bank1
  8576  069E  00BF               	movwf	Fuzzy@x^(0+128)
  8577  069F  1283               	bcf	3,5	;RP0=0, select bank0
  8578  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  8579  06A1  0824               	movf	?___ftadd+1,w
  8580  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  8581  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  8582  06A4  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  8583  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  8584  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  8585  06A7  0825               	movf	?___ftadd+2,w
  8586  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  8587  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  8588  06AA  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  8589  06AB  3001               	movlw	1
  8590  06AC  07BA               	addwf	Fuzzy@a_247^(0+128),f
  8591  06AD  1803               	skipnc
  8592  06AE  0ABB               	incf	(Fuzzy@a_247+1)^(0+128),f
  8593  06AF  3000               	movlw	0
  8594  06B0  07BB               	addwf	(Fuzzy@a_247+1)^(0+128),f
  8595  06B1  083B               	movf	(Fuzzy@a_247+1)^(0+128),w
  8596  06B2  3A80               	xorlw	128
  8597  06B3  00FF               	movwf	127
  8598  06B4  3080               	movlw	128
  8599  06B5  027F               	subwf	127,w
  8600  06B6  1D03               	skipz
  8601  06B7  2EBA               	goto	u537_25
  8602  06B8  3010               	movlw	16
  8603  06B9  023A               	subwf	Fuzzy@a_247^(0+128),w
  8604  06BA                     u537_25:	
  8605  06BA  1C03               	skipc
  8606  06BB  2C7E               	goto	i1l176
  8607  06BC                     i1l3944:	
  8608                           
  8609                           ;main.c: 294: }
  8610                           ;main.c: 297: float reajuste = 0;
  8611  06BC  3000               	movlw	0
  8612  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  8613  06BE  1303               	bcf	3,6	;RP1=0, select bank1
  8614  06BF  00A5               	movwf	Fuzzy@reajuste^(0+128)
  8615  06C0  3000               	movlw	0
  8616  06C1  00A6               	movwf	(Fuzzy@reajuste+1)^(0+128)
  8617  06C2  3000               	movlw	0
  8618  06C3  00A7               	movwf	(Fuzzy@reajuste+2)^(0+128)
  8619                           
  8620                           ;main.c: 298: if (total_area != 0)
  8621  06C4  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8622  06C5  0438               	iorwf	(Fuzzy@total_area+1)^(0+128),w
  8623  06C6  0437               	iorwf	Fuzzy@total_area^(0+128),w
  8624  06C7  1903               	skipnz
  8625  06C8  2F02               	goto	i1l3948
  8626                           
  8627                           ;main.c: 299: {
  8628                           ;main.c: 300: reajuste = soma / total_area;
  8629  06C9  0837               	movf	Fuzzy@total_area^(0+128),w
  8630  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  8631  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  8632  06CC  00B0               	movwf	___ftdiv@f2
  8633  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  8634  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  8635  06CF  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8636  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  8637  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  8638  06D2  00B1               	movwf	___ftdiv@f2+1
  8639  06D3  1683               	bsf	3,5	;RP0=1, select bank1
  8640  06D4  1303               	bcf	3,6	;RP1=0, select bank1
  8641  06D5  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8642  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  8643  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  8644  06D8  00B2               	movwf	___ftdiv@f2+2
  8645  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  8646  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  8647  06DB  0834               	movf	Fuzzy@soma^(0+128),w
  8648  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  8649  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  8650  06DE  00B3               	movwf	___ftdiv@f1
  8651  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  8652  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  8653  06E1  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8654  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  8655  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  8656  06E4  00B4               	movwf	___ftdiv@f1+1
  8657  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  8658  06E6  1303               	bcf	3,6	;RP1=0, select bank1
  8659  06E7  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8660  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  8661  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  8662  06EA  00B5               	movwf	___ftdiv@f1+2
  8663  06EB  120A  158A  21BF  120A  118A  	fcall	___ftdiv
  8664  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  8665  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  8666  06F2  0830               	movf	?___ftdiv,w
  8667  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  8668  06F4  1303               	bcf	3,6	;RP1=0, select bank1
  8669  06F5  00A5               	movwf	Fuzzy@reajuste^(0+128)
  8670  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  8671  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  8672  06F8  0831               	movf	?___ftdiv+1,w
  8673  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  8674  06FA  1303               	bcf	3,6	;RP1=0, select bank1
  8675  06FB  00A6               	movwf	(Fuzzy@reajuste+1)^(0+128)
  8676  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  8677  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  8678  06FE  0832               	movf	?___ftdiv+2,w
  8679  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  8680  0700  1303               	bcf	3,6	;RP1=0, select bank1
  8681  0701  00A7               	movwf	(Fuzzy@reajuste+2)^(0+128)
  8682  0702                     i1l3948:	
  8683                           
  8684                           ;main.c: 301: }
  8685                           ;main.c: 304: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, deltaV)) * (setpointUI > 
      +                          rpm ? 1 : -1), 1023), 0);
  8686  0702  085B               	movf	(_setpointUI+1)^(0+128),w
  8687  0703  0259               	subwf	(_rpm+1)^(0+128),w
  8688  0704  1D03               	skipz
  8689  0705  2F08               	goto	u539_25
  8690  0706  085A               	movf	_setpointUI^(0+128),w
  8691  0707  0258               	subwf	_rpm^(0+128),w
  8692  0708                     u539_25:	
  8693  0708  1C03               	skipc
  8694  0709  2F0E               	goto	i1l3952
  8695  070A  30FF               	movlw	255
  8696  070B  00A8               	movwf	_Fuzzy$249^(0+128)
  8697  070C  30FF               	movlw	255
  8698  070D  2F11               	goto	L2
  8699  070E                     i1l3952:	
  8700  070E  3001               	movlw	1
  8701  070F  00A8               	movwf	_Fuzzy$249^(0+128)
  8702  0710  3000               	movlw	0
  8703  0711                     L2:	
  8704  0711  00A9               	movwf	(_Fuzzy$249^(0+128)+1)
  8705  0712  0829               	movf	(_Fuzzy$249+1)^(0+128),w
  8706  0713  1283               	bcf	3,5	;RP0=0, select bank0
  8707  0714  1303               	bcf	3,6	;RP1=0, select bank0
  8708  0715  01BD               	clrf	___wmul@multiplicand+1
  8709  0716  07BD               	addwf	___wmul@multiplicand+1,f
  8710  0717  1683               	bsf	3,5	;RP0=1, select bank1
  8711  0718  1303               	bcf	3,6	;RP1=0, select bank1
  8712  0719  0828               	movf	_Fuzzy$249^(0+128),w
  8713  071A  1283               	bcf	3,5	;RP0=0, select bank0
  8714  071B  1303               	bcf	3,6	;RP1=0, select bank0
  8715  071C  01BC               	clrf	___wmul@multiplicand
  8716  071D  07BC               	addwf	___wmul@multiplicand,f
  8717  071E  1683               	bsf	3,5	;RP0=1, select bank1
  8718  071F  1303               	bcf	3,6	;RP1=0, select bank1
  8719  0720  0855               	movf	(_deltaV+1)^(0+128),w
  8720  0721  01F9               	clrf	___lwtoft@c+1
  8721  0722  07F9               	addwf	___lwtoft@c+1,f
  8722  0723  0854               	movf	_deltaV^(0+128),w
  8723  0724  01F8               	clrf	___lwtoft@c
  8724  0725  07F8               	addwf	___lwtoft@c,f
  8725  0726  160A  118A  22E1  120A  118A  	fcall	___lwtoft
  8726  072B  0878               	movf	?___lwtoft,w
  8727  072C  1283               	bcf	3,5	;RP0=0, select bank0
  8728  072D  1303               	bcf	3,6	;RP1=0, select bank0
  8729  072E  00A3               	movwf	minimo@b
  8730  072F  0879               	movf	?___lwtoft+1,w
  8731  0730  00A4               	movwf	minimo@b+1
  8732  0731  087A               	movf	?___lwtoft+2,w
  8733  0732  00A5               	movwf	minimo@b+2
  8734  0733  1683               	bsf	3,5	;RP0=1, select bank1
  8735  0734  1303               	bcf	3,6	;RP1=0, select bank1
  8736  0735  0825               	movf	Fuzzy@reajuste^(0+128),w
  8737  0736  1283               	bcf	3,5	;RP0=0, select bank0
  8738  0737  1303               	bcf	3,6	;RP1=0, select bank0
  8739  0738  00A0               	movwf	minimo@a
  8740  0739  1683               	bsf	3,5	;RP0=1, select bank1
  8741  073A  1303               	bcf	3,6	;RP1=0, select bank1
  8742  073B  0826               	movf	(Fuzzy@reajuste+1)^(0+128),w
  8743  073C  1283               	bcf	3,5	;RP0=0, select bank0
  8744  073D  1303               	bcf	3,6	;RP1=0, select bank0
  8745  073E  00A1               	movwf	minimo@a+1
  8746  073F  1683               	bsf	3,5	;RP0=1, select bank1
  8747  0740  1303               	bcf	3,6	;RP1=0, select bank1
  8748  0741  0827               	movf	(Fuzzy@reajuste+2)^(0+128),w
  8749  0742  1283               	bcf	3,5	;RP0=0, select bank0
  8750  0743  1303               	bcf	3,6	;RP1=0, select bank0
  8751  0744  00A2               	movwf	minimo@a+2
  8752  0745  160A  118A  2390  120A  118A  	fcall	_minimo
  8753  074A  1283               	bcf	3,5	;RP0=0, select bank0
  8754  074B  1303               	bcf	3,6	;RP1=0, select bank0
  8755  074C  0820               	movf	?_minimo,w
  8756  074D  00AC               	movwf	___fttol@f1
  8757  074E  0821               	movf	?_minimo+1,w
  8758  074F  00AD               	movwf	___fttol@f1+1
  8759  0750  0822               	movf	?_minimo+2,w
  8760  0751  00AE               	movwf	___fttol@f1+2
  8761  0752  160A  118A  26E3  120A  118A  	fcall	___fttol
  8762  0757  1283               	bcf	3,5	;RP0=0, select bank0
  8763  0758  1303               	bcf	3,6	;RP1=0, select bank0
  8764  0759  082D               	movf	?___fttol+1,w
  8765  075A  01BB               	clrf	___wmul@multiplier+1
  8766  075B  07BB               	addwf	___wmul@multiplier+1,f
  8767  075C  082C               	movf	?___fttol,w
  8768  075D  01BA               	clrf	___wmul@multiplier
  8769  075E  07BA               	addwf	___wmul@multiplier,f
  8770  075F  160A  118A  2434  120A  118A  	fcall	___wmul
  8771  0764  1683               	bsf	3,5	;RP0=1, select bank1
  8772  0765  1303               	bcf	3,6	;RP1=0, select bank1
  8773  0766  0860               	movf	_pwm^(0+128),w
  8774  0767  1283               	bcf	3,5	;RP0=0, select bank0
  8775  0768  1303               	bcf	3,6	;RP1=0, select bank0
  8776  0769  073A               	addwf	?___wmul,w
  8777  076A  1683               	bsf	3,5	;RP0=1, select bank1
  8778  076B  1303               	bcf	3,6	;RP1=0, select bank1
  8779  076C  00A3               	movwf	_Fuzzy$1690^(0+128)
  8780  076D  0861               	movf	(_pwm+1)^(0+128),w
  8781  076E  1803               	skipnc
  8782  076F  0A61               	incf	(_pwm+1)^(0+128),w
  8783  0770  1283               	bcf	3,5	;RP0=0, select bank0
  8784  0771  1303               	bcf	3,6	;RP1=0, select bank0
  8785  0772  073B               	addwf	?___wmul+1,w
  8786  0773  1683               	bsf	3,5	;RP0=1, select bank1
  8787  0774  1303               	bcf	3,6	;RP1=0, select bank1
  8788  0775  00A4               	movwf	(_Fuzzy$1690+1)^(0+128)
  8789  0776  3000               	movlw	0
  8790  0777  1283               	bcf	3,5	;RP0=0, select bank0
  8791  0778  1303               	bcf	3,6	;RP1=0, select bank0
  8792  0779  00A9               	movwf	maximo@b
  8793  077A  3000               	movlw	0
  8794  077B  00AA               	movwf	maximo@b+1
  8795  077C  3000               	movlw	0
  8796  077D  00AB               	movwf	maximo@b+2
  8797  077E  30C0               	movlw	192
  8798  077F  00A3               	movwf	minimo@b
  8799  0780  307F               	movlw	127
  8800  0781  00A4               	movwf	minimo@b+1
  8801  0782  3044               	movlw	68
  8802  0783  00A5               	movwf	minimo@b+2
  8803  0784  1683               	bsf	3,5	;RP0=1, select bank1
  8804  0785  1303               	bcf	3,6	;RP1=0, select bank1
  8805  0786  0824               	movf	(_Fuzzy$1690+1)^(0+128),w
  8806  0787  01F9               	clrf	___lwtoft@c+1
  8807  0788  07F9               	addwf	___lwtoft@c+1,f
  8808  0789  0823               	movf	_Fuzzy$1690^(0+128),w
  8809  078A  01F8               	clrf	___lwtoft@c
  8810  078B  07F8               	addwf	___lwtoft@c,f
  8811  078C  160A  118A  22E1  120A  118A  	fcall	___lwtoft
  8812  0791  0878               	movf	?___lwtoft,w
  8813  0792  1283               	bcf	3,5	;RP0=0, select bank0
  8814  0793  1303               	bcf	3,6	;RP1=0, select bank0
  8815  0794  00A0               	movwf	minimo@a
  8816  0795  0879               	movf	?___lwtoft+1,w
  8817  0796  00A1               	movwf	minimo@a+1
  8818  0797  087A               	movf	?___lwtoft+2,w
  8819  0798  00A2               	movwf	minimo@a+2
  8820  0799  160A  118A  2390  120A  118A  	fcall	_minimo
  8821  079E  1283               	bcf	3,5	;RP0=0, select bank0
  8822  079F  1303               	bcf	3,6	;RP1=0, select bank0
  8823  07A0  0820               	movf	?_minimo,w
  8824  07A1  00A6               	movwf	maximo@a
  8825  07A2  0821               	movf	?_minimo+1,w
  8826  07A3  00A7               	movwf	maximo@a+1
  8827  07A4  0822               	movf	?_minimo+2,w
  8828  07A5  00A8               	movwf	maximo@a+2
  8829  07A6  160A  118A  2372  120A  118A  	fcall	_maximo
  8830  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  8831  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  8832  07AD  0826               	movf	?_maximo,w
  8833  07AE  00AC               	movwf	___fttol@f1
  8834  07AF  0827               	movf	?_maximo+1,w
  8835  07B0  00AD               	movwf	___fttol@f1+1
  8836  07B1  0828               	movf	?_maximo+2,w
  8837  07B2  00AE               	movwf	___fttol@f1+2
  8838  07B3  160A  118A  26E3  120A  118A  	fcall	___fttol
  8839  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  8840  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  8841  07BA  082D               	movf	?___fttol+1,w
  8842  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  8843  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  8844  07BD  01E1               	clrf	(_pwm+1)^(0+128)
  8845  07BE  07E1               	addwf	(_pwm+1)^(0+128),f
  8846  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  8847  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  8848  07C1  082C               	movf	?___fttol,w
  8849  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  8850  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  8851  07C4  01E0               	clrf	_pwm^(0+128)
  8852  07C5  07E0               	addwf	_pwm^(0+128),f
  8853                           
  8854                           ;main.c: 306: if(pwm > 0 && pwm < 1024)
  8855  07C6  0861               	movf	(_pwm+1)^(0+128),w
  8856  07C7  0460               	iorwf	_pwm^(0+128),w
  8857  07C8  1903               	skipnz
  8858  07C9  0008               	return
  8859  07CA  3004               	movlw	4
  8860  07CB  0261               	subwf	(_pwm+1)^(0+128),w
  8861  07CC  3000               	movlw	0
  8862  07CD  1903               	skipnz
  8863  07CE  0260               	subwf	_pwm^(0+128),w
  8864  07CF  1803               	skipnc
  8865  07D0  0008               	return
  8866                           
  8867                           ;main.c: 307: {
  8868                           ;main.c: 308: PWM_DutyCycle2(pwm);
  8869  07D1  0861               	movf	(_pwm+1)^(0+128),w
  8870  07D2  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  8871  07D3  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  8872  07D4  0860               	movf	_pwm^(0+128),w
  8873  07D5  01F0               	clrf	i1PWM_DutyCycle2@valor
  8874  07D6  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  8875  07D7  160A  118A  233B   	fcall	i1_PWM_DutyCycle2
  8876  07DA  0008               	return
  8877  07DB                     L16:	
  8878  07DB                     __end_of_Fuzzy:	
  8879  07DB  120A  158A  293F   	ljmp	i1l3832


Data Sizes:
    Strings     73
    Constant    0
    Data        5
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      79
    BANK1            80     34      67
    BANK3            96     26      61
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> display_rpm(BANK3[10]), STR_3(CODE[6]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _send->_USART_WriteChar
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___awtoft
    _trapmf->___awtoft
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    _minimo->___awtoft
    _maximo->___awtoft
    ___lwtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->___ftmul
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _maximo->_minimo
    ___wmul->___fttol
    ___fttol->_maximo
    ___ftmul->_trapmf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_Fuzzy

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1890
                                             23 BANK3      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     223
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     139
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     327
                                              2 BANK3      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      31
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      31
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     401
                                              0 BANK3      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      31
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      31
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0   53668
                                             68 BANK0      5     5      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                            ___lwdiv
                             ___wmul
                               _send
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send                                                 3     3      0     136
                                              1 COMMON     3     3      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               36    36      0   52498
                                             66 BANK0      2     2      0
                                              0 BANK1     34    34      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
                                _abs
                             _maximo
                             _minimo
                             _trapmf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   19869
                                             32 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3007
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    7603
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _minimo                                               6     0      6    3552
                                              0 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                           ___lwtoft (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (5) _maximo                                               6     0      6    3296
                                              6 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                           ___lwtoft (ARG)
                                _abs (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    2952
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     348
                                             26 BANK0      6     2      4
                            ___fttol (ARG)
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    2493
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     508
                                             12 BANK0     14    10      4
                           ___awtoft (ARG)
                           ___lwtoft (ARG)
                                _abs (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3053
                                             50 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _trapmf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    2434
                                              8 COMMON     6     3      3
                           ___ftpack
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _Fuzzy
     ___awtoft
       ___ftpack
       _abs (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _trapmf (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _abs (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     ___lwtoft
       ___ftpack
     ___wmul
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _abs
     _maximo
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _minimo
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
     _trapmf
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwdiv
   ___wmul
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     ___lwdiv (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
   _send
     _USART_WriteChar
   i1_PWM_DutyCycle2
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      3D       9       63.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     49      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DD      12        0.0%
ABS                  0      0      DD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jun 23 01:03:36 2022

         ?i1_PWM_DutyCycle2 0070                           _x 006D                           _y 00DC  
                         pc 0002                 ?_LCD_Cursor 01B3     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        fsr 0004         ___wmul@multiplicand 003C          ??i1_PWM_DutyCycle2 0072  
              ___ftadd@exp1 002F                ___ftadd@exp2 002E               _contagens_tm0 00D0  
              ___ftadd@sign 002D                         l622 1783                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0E80                         _abs 12C1  
                       _rpm 00D8                         fsr0 0004                         _pwm 00E0  
                       _sum 01A3  __size_of_USART_WriteString 001C                         indf 0000  
              __CFG_FOSC$HS 0000           ??_LCD_WriteString 01B7                 _rulepequeno 00CB  
              __CFG_LVP$OFF 0000                        ?_ISR 0070                ___ftdiv@cntr 003A  
              ___ftdiv@sign 003F                        ?_abs 0070          LCD_WriteString@Str 01B5  
                      l3112 17A4                        l3104 1794                        l3130 17F7  
                      l3122 17DC                        l3114 17B4                        l3126 17E9  
                      l3242 13BC                        l3314 0BD9                        l3256 1482  
                      STR_1 1049                        STR_2 1038                        STR_3 1053  
                      STR_4 1010                        u3805 07F3                        u3735 17A8  
                      u3815 14FC                        u3755 17B6                        u3845 1404  
                      u3765 17CB                        u3775 17DD                        u5717 0BD2  
                      u5807 165F                        u5727 0C1A                        u5817 166B  
                      u5737 131D                        _OERR 00C1                        u5827 13C8  
                      u5747 160D                        u5837 1465                        u5757 161D  
                      u5847 1473                        u5767 162B                        u5857 147F  
                      u5777 1637                        u5867 1306                        u5787 1643  
                      u5797 1651                        _TMR0 0001                        _TMR1 000E  
                      abs@a 0070                        _main 0B4A                ___ftpack@arg 0070  
        __size_of_LCD_Clear 0029                ___ftpack@exp 0073                        _send 166E  
                      btemp 007E            __end_of_ADC_Init 12E1                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 130C                ___ftmul@cntr 0060  
              ___ftmul@sign 0061     __end_of_USART_WriteChar 129C                       ??_ISR 0064  
              ___fttol@exp1 0039                       ??_abs 0072                ___fttol@lval 0035  
               ?_TIMER0_Set 0070            __end_of_LCD_Init 166E             __end_of___aldiv 1800  
                     ?_main 0070                       _EEADR 010D             __end_of___ftadd 0D2A  
                     ?_send 0070               __CFG_WDTE$OFF 0000             __end_of___ftdiv 0A77  
           __end_of___ftneg 12B6             __end_of___ftmul 0B4A                       _T1CON 0010  
           __end_of___fttol 1771             __end_of___lwdiv 14F1                       i1l126 0E77  
                     i1l243 1295                       i1l180 067A                       i1l176 047E  
                     i1l192 0FF4                       i1l563 1440                       i1l734 15E8  
                     i1l728 15CF                       i1l757 0CC9                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _TXREG 0019               __CFG_PWRTE$ON 0000  
                     _Fuzzy 0888               ___awtoft@sign 007D               ___ftpack@sign 0074  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 1434                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
            ??_LCD_WriteCmd 01B3              ?_LCD_WriteData 0070                 ?_USART_Init 01C2  
     i1TIMER0_Set@contagens 0070             __initialization 0015                __end_of_main 0C21  
              __end_of_send 16E3                      ??_main 01CA               ___fttol@sign1 0034  
                    ??_send 0071                ?_TIMER0_Init 0070           __end_of_LCD_Clear 1482  
                Fuzzy@a_242 00AC                  Fuzzy@a_243 00AE                  Fuzzy@a_244 00B0  
                Fuzzy@a_247 00BA                  Fuzzy@delta 00B2                      ?_Fuzzy 0070  
                _Fuzzy$1690 00A3                  _Fuzzy$1689 00A0                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _CCPR1L 0015  
                    _CCPR2L 001B                      _EECON2 018D            __end_of___awtoft 13EF  
          __end_of___ftpack 1601                      i1l2100 15A8                      i1l2110 15D4  
                    i1l2102 15B4                      i1l2112 15DE                      i1l2104 15B9  
                    i1l2210 09ED                      i1l2204 09D7                      i1l2232 0A51  
                    i1l2224 0A32                      i1l4010 0ECC                      i1l4002 0EB0  
                    i1l2404 13D8                      i1l2420 0AA5                      i1l2244 1563  
                    i1l2414 0A8F                      i1l2326 1357                      i1l4030 0F12  
                    i1l4022 0EF6                      i1l4014 0EDA                      i1l4006 0EBE  
                    i1l2096 15A1                      i1l2432 0AE4                      i1l2248 158A  
                    i1l2346 1438                      i1l2530 16BE                      i1l4050 0F4C  
                    i1l4042 0F31                      i1l4034 0F20                      i1l4026 0F04  
                    i1l4018 0EE8                      i1l2444 0B0C                      i1l2436 0AF4  
                    i1l2700 132C                      u201_25 15EF                      i1l4054 0F5A  
                    i1l4038 0F2E                      i1l2448 0B1C                      i1l2464 16FD  
                    i1l4080 0FA8                      i1l2490 174C                      i1l2482 172F  
                    i1l2538 16D8                      i1l4066 0F88                      i1l4058 0F6E  
                    i1l2492 1757                      i1l2484 173F                      i1l2708 1338  
                    i1l4092 0FEF                      i1l4068 0F8B                      i1l2494 175A  
                    i1l4094 0FF0                      i1l3720 0C4A                      i1l2498 1768  
                    i1l3730 0C60                      i1l3802 0DD5                      i1l3724 0C51  
                    i1l2860 14C9                      i1l3750 0C9B                      i1l3742 0C7A  
                    i1l3910 041B                      i1l2870 14EA                      i1l3760 0CB9  
                    i1l3752 0CA0                      i1l3808 0E5A                      i1l3832 093F  
                    i1l3770 0CED                      i1l3762 0CC5                      i1l3754 0CA4  
                    i1l3906 03BF                      i1l3842 0071                      i1l2866 14DF  
                    i1l2858 14BB                      i1l3780 0D10                      i1l3748 0C8F  
                    i1l3916 045D                      i1l3836 099B                      i1l3766 0CDB  
                    i1l3934 05CD                      i1l3862 01C6                      i1l3952 070E  
                    i1l3928 0520                      i1l3944 06BC                      i1l3858 016A  
                    i1l3796 0DA3                      i1l3948 0702                      i1l3884 02C3  
                    i1l3868 0208                      i1l3894 0361                      i1l3888 031F  
                    u230_25 09FF                      i1l3998 0EA2                      u231_25 0A11  
                    u232_25 0A33                      u233_25 0A44                      u234_25 0A52  
                    u237_21 1556                      u237_22 1557                      u237_23 155C  
                    u237_24 155D                      u239_21 157D                      u239_22 157E  
                    u239_23 1583                      u239_24 1584                      u271_25 0AB1  
                    u255_25 1441                      u511_25 093D                      u335_25 14BE  
                    u280_25 0B1D                      u272_25 0AC3                      u256_25 1448  
                    u281_25 0B25                      u513_25 006F                      u337_25 14CA  
          __end_of___lwtoft 12F5                      u194_25 15AD                      u290_25 174E  
                    u530_25 047C                      u522_25 0221                      u338_25 14D6  
                    u275_25 0AF5                      u523_25 02C1                      u339_25 14E0  
                    u196_25 15C8                      u276_25 0AFD                      u284_25 1704  
                    u532_25 048B                      u516_25 008A                      u293_25 134C  
                    u533_25 052B                      u525_25 035F                      u517_25 0168  
       __size_of_TIMER0_Set 0008                      u198_25 15D7                      u534_25 0538  
                    u287_25 1730                      u535_25 05D8                      u527_25 03BD  
                    u519_25 0206                      u536_25 05E5                      u537_25 06BA  
                    u529_25 045B                      u490_25 0C90                      u539_25 0708  
                    u493_25 0CA5                      u487_25 0C7B                      u496_25 0CBA  
                    _SSPADD 0093                      _SSPBUF 0013                      Fuzzy@a 00AA  
                    Fuzzy@x 00BF            LCD_WriteCmd@Byte 01B4                      ___ftge 153C  
                 ??___aldiv 01BB                      ___wmul 1434                   ??___ftadd 0029  
            _PWM_DutyCycle1 13EF              _PWM_DutyCycle2 07DE            ?_USART_WriteChar 0070  
                 ??___ftdiv 0036                   ??___ftneg 007E                      _deltaV 00D4  
                 ??___ftmul 0058                   ??___fttol 0030                   ??___lwdiv 0074  
                    _antigo 019D                      _buffer 0190                      _fitemp 00C2  
                    _maximo 1372                      _minimo 1390       USART_ReceiveChar@byte 0074  
                    _trapmf 0D2A                      _pulsos 00D6                      _status 006B  
     ___ftmul@f3_as_product 005D                   ?_ADC_Init 0070                      saved_w 007E  
       __size_of_USART_Init 004B               ?i1_TIMER0_Set 0070     __end_of__initialization 004B  
                 ?_LCD_Init 0070                  ___ftadd@f1 0023                  ___ftadd@f2 0026  
           ??_LCD_WriteData 01B3                  ___ftge@ff1 0070                  ___ftge@ff2 0073  
                ___ftdiv@f1 0033                  ___ftdiv@f2 0030                  ___ftdiv@f3 003B  
                ___ftneg@f1 0020                  ___awtoft@c 0078      __end_of_PWM_DutyCycle1 1410  
    __end_of_PWM_DutyCycle2 07FF                  ___ftmul@f1 0052                  ___ftmul@f2 0055  
                ___fttol@f1 002C              __pcstackCOMMON 0070               __end_of_Fuzzy 07DB  
              __pidataBANK1 1289               LCD_Cursor@Col 01B3               LCD_Cursor@Row 01B5  
              ??_LCD_Cursor 01B4             _LCD_WriteString 1482                  ___lwtoft@c 0078  
                 ?_PWM_Init 0070              _OPTION_REGbits 0081                  ??_ADC_Init 01B3  
      __end_of_LCD_WriteCmd 130C                     ??_Fuzzy 0062   __size_ofi1_PWM_DutyCycle2 001B  
            ??i1_TIMER0_Set 0070                  __pbssBANK0 0069                  __pbssBANK1 00C2  
                __pbssBANK3 0190          __end_of_LCD_Cursor 13CE                  ??_LCD_Init 01B5  
           ?_PWM_DutyCycle1 01B3             ?_PWM_DutyCycle2 01B3                  __pmaintext 0B4A  
                   ?___ftge 0070                     ?___wmul 003A                  __pintentry 0004  
              ??_TIMER0_Set 01B3                     _CCP1CON 0017                     _CCP2CON 001D  
                   ?_maximo 0026                     ?_minimo 0020                   ?___awtoft 0078  
                 ?___ftpack 0070               Fuzzy@reajuste 00A5                     ?_trapmf 0040  
                ??_PWM_Init 01B3                   ?___lwtoft 0078        __size_of_TIMER0_Init 000B  
                   _SSPCON2 0091                  __stringtab 1000          __end_of_TIMER0_Set 12A4  
   __end_of_LCD_WriteString 14B3                   _ADCResult 0069                ??_USART_Init 01C6  
         LCD_WriteData@Byte 01B4                     ___aldiv 1771             __size_of___ftge 005D  
                   ___ftadd 0C21                     ___ftdiv 09BF                     ___ftneg 12AC  
           __size_of___wmul 0025                     ___ftmul 0A77                     ___fttol 16E3  
                   ___lwdiv 14B3                  ??___awtoft 007B                  ??___ftpack 0075  
           __size_of_maximo 001E             __size_of_minimo 001E                     __ptext1 14F1  
                   __ptext2 1771                     __ptext3 129C                     __ptext4 12B6  
                   __ptext5 1410                     __ptext6 07DE                     __ptext7 13EF  
                   __ptext8 1482                     __ptext9 130C                  _pas_cooler 00DE  
                ??___lwtoft 007B             __size_of_trapmf 0156                __size_of_ISR 0180  
                 _T1CONbits 0010                   _T2CONbits 0012                __size_of_abs 000E  
          ___aldiv@dividend 01B7                   _LCD_Clear 1459          __end_of_USART_Init 153C  
                   clrloop0 12A5        end_of_initialization 004B                     maximo@a 0026  
                   maximo@b 0029                     minimo@a 0020                     minimo@b 0023  
                 _RCSTAbits 0018            ___aldiv@quotient 01BE                     psplit$0 250035  
                   psplit$1 350036                     psplit$2 360037                     trapmf@a 0043  
                   trapmf@b 0046                     trapmf@c 0049                     trapmf@d 004C  
                   trapmf@x 0040             Fuzzy@total_area 00B7        __end_ofi1_TIMER0_Set 1294  
     __size_of_LCD_WriteCmd 0017                   _PORTBbits 0006                   _PORTEbits 0009  
                _setpointUI 00DA                  ?_LCD_Clear 0070            i1_PWM_DutyCycle2 133B  
         __size_of_ADC_Init 0012                  _rulegrande 00C5         PWM_DutyCycle1@valor 01B3  
                _total_area 01A6         PWM_DutyCycle2@valor 01B3                 _CCP1CONbits 0017  
               ___ftdiv@exp 003E                 _CCP2CONbits 001D                   _TXSTAbits 0098  
          ?_LCD_WriteString 01B5           __size_of_LCD_Init 006D                _LCD_WriteCmd 12F5  
               ___ftmul@exp 005C              __end_of___ftge 1599              __end_of___wmul 1459  
            __end_of_maximo 1390              __end_of_minimo 13AE              __end_of_trapmf 0E80  
  __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024         start_initialization 0015  
               __end_of_ISR 1000                 __end_of_abs 12CF            ??_PWM_DutyCycle1 01B5  
          ??_PWM_DutyCycle2 01B5                   Fuzzy@soma 00B4                   Fuzzy@rule 00BC  
                 _Fuzzy$249 00A8       __end_of_LCD_WriteData 1323           _USART_ReceiveChar 1323  
                  ??___ftge 0076          ?_USART_ReceiveChar 0070                    ??___wmul 007E  
               __pdataBANK1 00DE                send@checksum 0072                    ??_maximo 007E  
                  ??_minimo 007E                    ??_trapmf 007E         ??_USART_ReceiveChar 0073  
         __size_of___awtoft 0021           __size_of___ftpack 0068                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00A0  
             __pcstackBANK3 01B3                 ??_LCD_Clear 01B5         __end_of__stringdata 1059  
 __end_of_USART_ReceiveChar 133B       __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 0072  
       TIMER0_Set@contagens 01B3                    ?___aldiv 01B3                    ?___ftadd 0023  
                  ?___ftdiv 0030                    ?___ftneg 0020                    ?___ftmul 0052  
                  ?___fttol 002C                    ?___lwdiv 0070                   __pstrings 1000  
                 _ativa_fan 01A0               ??_TIMER0_Init 01B3          USART_Init@BaudRate 01C2  
                  _ADC_Init 12CF              __size_of_Fuzzy FF53            ___lwdiv@quotient 0075  
                pnum$text22 0025           ??_USART_WriteChar 0070                i1_TIMER0_Set 128E  
           ___aldiv@divisor 01B3           interrupt_function 0004             ___aldiv@counter 01BC  
                  _LCD_Init 1601              ___wmul@product 003E                   clear_ram0 12A4  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 1356                 _display_rpm 01A9  
                _ADCON0bits 001F                 __stringbase 100F                  _ADCON1bits 009F  
               __stringdata 1010                    _PWM_Init 1410           ___wmul@multiplier 003A  
                 _rulemedio 00C8         __end_of_TIMER0_Init 12C1  __size_of_USART_ReceiveChar 0018  
                _EECON1bits 018C            __size_of___aldiv 008F            __size_of___ftadd 0109  
          __size_of___ftdiv 00B8            __size_of___ftneg 000A            __size_of___ftmul 00D3  
          __size_of___fttol 008E            __size_of___lwdiv 003E                    ___awtoft 13CE  
                  ___ftpack 1599          __end_of__stringtab 1010                    ___lwtoft 12E1  
                 send@index 0073                 _cruzeiroSet 00E2                 _cruzeiroVel 00D2  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077           _USART_WriteString 1356  
                  __ptext10 1601                    __ptext11 13AE                    __ptext20 1356  
                  __ptext12 1459                    __ptext21 1294                    __ptext13 12F5  
                  __ptext30 153C                    __ptext22 0888                    __ptext14 12CF  
                  __ptext31 12C1                    __ptext23 133B                    __ptext15 0E80  
                  __ptext32 1434                    __ptext24 0D2A                    __ptext16 128E  
                  __ptext33 12E1                    __ptext25 12AC                    __ptext17 166E  
                  __ptext34 16E3                    __ptext26 09BF                    __ptext18 14B3  
                  __ptext35 0A77                    __ptext27 0C21                    __ptext19 1323  
                  __ptext36 13CE                    __ptext28 1390                    __ptext37 1599  
                  __ptext29 1372                    _antigoUI 00CE          ?_USART_WriteString 0070  
             __size_of_main 00D7               __size_of_send 0075         USART_WriteChar@byte 0070  
       ??_USART_WriteString 0071                  _LCD_Cursor 13AE    __size_of_LCD_WriteString 0031  
        pnum$text22_split_1 0035          pnum$text22_split_2 0036          pnum$text22_split_3 0037  
               _TIMER0_Init 12B6                  _INTCONbits 000B   __end_of_USART_WriteString 1372  
                  intlevel1 0000                   stringcode 100A        USART_WriteString@str 0072  
                _TIMER0_Set 129C                    trapmf@ua 004F             _USART_WriteChar 1294  
                  stringdir 100A                    stringtab 1000                ___aldiv@sign 01BD  
    __size_of_LCD_WriteData 0017                 _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 0070  
                _SSPCONbits 0014                  _USART_Init 14F1  
