

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jun 22 15:27:19 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0094                     	;# 
   333  0098                     	;# 
   334  0099                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  009F                     	;# 
   339  010C                     	;# 
   340  010D                     	;# 
   341  010E                     	;# 
   342  010F                     	;# 
   343  018C                     	;# 
   344  018D                     	;# 
   345  0000                     	;# 
   346  0001                     	;# 
   347  0002                     	;# 
   348  0003                     	;# 
   349  0004                     	;# 
   350  0005                     	;# 
   351  0006                     	;# 
   352  0007                     	;# 
   353  0008                     	;# 
   354  0009                     	;# 
   355  000A                     	;# 
   356  000B                     	;# 
   357  000C                     	;# 
   358  000D                     	;# 
   359  000E                     	;# 
   360  000E                     	;# 
   361  000F                     	;# 
   362  0010                     	;# 
   363  0011                     	;# 
   364  0012                     	;# 
   365  0013                     	;# 
   366  0014                     	;# 
   367  0015                     	;# 
   368  0015                     	;# 
   369  0016                     	;# 
   370  0017                     	;# 
   371  0018                     	;# 
   372  0019                     	;# 
   373  001A                     	;# 
   374  001B                     	;# 
   375  001B                     	;# 
   376  001C                     	;# 
   377  001D                     	;# 
   378  001E                     	;# 
   379  001F                     	;# 
   380  0081                     	;# 
   381  0085                     	;# 
   382  0086                     	;# 
   383  0087                     	;# 
   384  0088                     	;# 
   385  0089                     	;# 
   386  008C                     	;# 
   387  008D                     	;# 
   388  008E                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0098                     	;# 
   394  0099                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009E                     	;# 
   398  009F                     	;# 
   399  010C                     	;# 
   400  010D                     	;# 
   401  010E                     	;# 
   402  010F                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  0091                     	;# 
   450  0092                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009C                     	;# 
   456  009D                     	;# 
   457  009E                     	;# 
   458  009F                     	;# 
   459  010C                     	;# 
   460  010D                     	;# 
   461  010E                     	;# 
   462  010F                     	;# 
   463  018C                     	;# 
   464  018D                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000D                     	;# 
   479  000E                     	;# 
   480  000E                     	;# 
   481  000F                     	;# 
   482  0010                     	;# 
   483  0011                     	;# 
   484  0012                     	;# 
   485  0013                     	;# 
   486  0014                     	;# 
   487  0015                     	;# 
   488  0015                     	;# 
   489  0016                     	;# 
   490  0017                     	;# 
   491  0018                     	;# 
   492  0019                     	;# 
   493  001A                     	;# 
   494  001B                     	;# 
   495  001B                     	;# 
   496  001C                     	;# 
   497  001D                     	;# 
   498  001E                     	;# 
   499  001F                     	;# 
   500  0081                     	;# 
   501  0085                     	;# 
   502  0086                     	;# 
   503  0087                     	;# 
   504  0088                     	;# 
   505  0089                     	;# 
   506  008C                     	;# 
   507  008D                     	;# 
   508  008E                     	;# 
   509  0091                     	;# 
   510  0092                     	;# 
   511  0093                     	;# 
   512  0094                     	;# 
   513  0098                     	;# 
   514  0099                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  018C                     	;# 
   524  018D                     	;# 
   525  0000                     	;# 
   526  0001                     	;# 
   527  0002                     	;# 
   528  0003                     	;# 
   529  0004                     	;# 
   530  0005                     	;# 
   531  0006                     	;# 
   532  0007                     	;# 
   533  0008                     	;# 
   534  0009                     	;# 
   535  000A                     	;# 
   536  000B                     	;# 
   537  000C                     	;# 
   538  000D                     	;# 
   539  000E                     	;# 
   540  000E                     	;# 
   541  000F                     	;# 
   542  0010                     	;# 
   543  0011                     	;# 
   544  0012                     	;# 
   545  0013                     	;# 
   546  0014                     	;# 
   547  0015                     	;# 
   548  0015                     	;# 
   549  0016                     	;# 
   550  0017                     	;# 
   551  0018                     	;# 
   552  0019                     	;# 
   553  001A                     	;# 
   554  001B                     	;# 
   555  001B                     	;# 
   556  001C                     	;# 
   557  001D                     	;# 
   558  001E                     	;# 
   559  001F                     	;# 
   560  0081                     	;# 
   561  0085                     	;# 
   562  0086                     	;# 
   563  0087                     	;# 
   564  0088                     	;# 
   565  0089                     	;# 
   566  008C                     	;# 
   567  008D                     	;# 
   568  008E                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0093                     	;# 
   572  0094                     	;# 
   573  0098                     	;# 
   574  0099                     	;# 
   575  009C                     	;# 
   576  009D                     	;# 
   577  009E                     	;# 
   578  009F                     	;# 
   579  010C                     	;# 
   580  010D                     	;# 
   581  010E                     	;# 
   582  010F                     	;# 
   583  018C                     	;# 
   584  018D                     	;# 
   585                           
   586                           	psect	idataBANK0
   587  0798                     __pidataBANK0:	
   588                           
   589                           ;initializer for _antigo
   590  0798  3400               	retlw	0
   591  0799  3448               	retlw	72
   592  079A  3442               	retlw	66
   593                           
   594                           ;initializer for _pas_cooler
   595  079B  3407               	retlw	7
   596  079C  3400               	retlw	0
   597                           
   598                           ;initializer for _pwm
   599  079D  3432               	retlw	50
   600  079E  3400               	retlw	0
   601                           
   602                           	psect	idataBANK1
   603  07AB                     __pidataBANK1:	
   604                           
   605                           ;initializer for _setpoint
   606  07AB  3400               	retlw	0
   607  07AC  34A0               	retlw	160
   608  07AD  3441               	retlw	65
   609  000E                     _TMR1	set	14
   610  001F                     _ADCON0bits	set	31
   611  001E                     _ADRESH	set	30
   612  0017                     _CCP1CON	set	23
   613  0017                     _CCP1CONbits	set	23
   614  001D                     _CCP2CON	set	29
   615  001D                     _CCP2CONbits	set	29
   616  0015                     _CCPR1L	set	21
   617  001B                     _CCPR2L	set	27
   618  000B                     _INTCONbits	set	11
   619  000C                     _PIR1bits	set	12
   620  000D                     _PIR2bits	set	13
   621  0005                     _PORTA	set	5
   622  0006                     _PORTB	set	6
   623  0006                     _PORTBbits	set	6
   624  0007                     _PORTC	set	7
   625  0008                     _PORTD	set	8
   626  0009                     _PORTE	set	9
   627  0009                     _PORTEbits	set	9
   628  001A                     _RCREG	set	26
   629  0018                     _RCSTAbits	set	24
   630  0013                     _SSPBUF	set	19
   631  0014                     _SSPCONbits	set	20
   632  0010                     _T1CON	set	16
   633  0010                     _T1CONbits	set	16
   634  0012                     _T2CONbits	set	18
   635  0001                     _TMR0	set	1
   636  000F                     _TMR1H	set	15
   637  000E                     _TMR1L	set	14
   638  0019                     _TXREG	set	25
   639  00C1                     _OERR	set	193
   640  009F                     _ADCON1bits	set	159
   641  009E                     _ADRESL	set	158
   642  0081                     _OPTION_REGbits	set	129
   643  008C                     _PIE1bits	set	140
   644  008D                     _PIE2bits	set	141
   645  0092                     _PR2	set	146
   646  0099                     _SPBRG	set	153
   647  0093                     _SSPADD	set	147
   648  0091                     _SSPCON2	set	145
   649  0091                     _SSPCON2bits	set	145
   650  0094                     _SSPSTATbits	set	148
   651  0085                     _TRISA	set	133
   652  0086                     _TRISB	set	134
   653  0087                     _TRISC	set	135
   654  0088                     _TRISD	set	136
   655  0089                     _TRISE	set	137
   656  0098                     _TXSTAbits	set	152
   657  010D                     _EEADR	set	269
   658  010C                     _EEDATA	set	268
   659  018C                     _EECON1bits	set	396
   660  018D                     _EECON2	set	397
   661                           
   662                           	psect	strings
   663  0518                     __pstrings:	
   664  0518                     stringtab:	
   665  0518                     __stringtab:	
   666                           
   667                           ;	String table - string pointers are 1 byte each
   668  0518  1BFF               	btfsc	btemp+1,7
   669  0519  2D22               	ljmp	stringcode
   670  051A  1383               	bcf	3,7
   671  051B  187F               	btfsc	btemp+1,0
   672  051C  1783               	bsf	3,7
   673  051D  0800               	movf	0,w
   674  051E  0A84               	incf	4,f
   675  051F  1903               	skipnz
   676  0520  0AFF               	incf	btemp+1,f
   677  0521  0008               	return
   678  0522                     stringcode:	
   679  0522                     stringdir:	
   680  0522  3005               	movlw	high stringdir
   681  0523  008A               	movwf	10
   682  0524  0804               	movf	4,w
   683  0525  0A84               	incf	4,f
   684  0526  0782               	addwf	2,f
   685  0527                     __stringbase:	
   686  0527  3400               	retlw	0
   687  0528                     __end_of__stringtab:	
   688  0528                     __stringdata:	
   689  0528                     STR_4:	
   690  0528  340A               	retlw	10
   691  0529  340D               	retlw	13
   692  052A  3420               	retlw	32	;' '
   693  052B  342D               	retlw	45	;'-'
   694  052C  342D               	retlw	45	;'-'
   695  052D  342D               	retlw	45	;'-'
   696  052E  342D               	retlw	45	;'-'
   697  052F  342D               	retlw	45	;'-'
   698  0530  342D               	retlw	45	;'-'
   699  0531  342D               	retlw	45	;'-'
   700  0532  3420               	retlw	32	;' '
   701  0533  3445               	retlw	69	;'E'
   702  0534  3453               	retlw	83	;'S'
   703  0535  3454               	retlw	84	;'T'
   704  0536  344F               	retlw	79	;'O'
   705  0537  3455               	retlw	85	;'U'
   706  0538  3452               	retlw	82	;'R'
   707  0539  344F               	retlw	79	;'O'
   708  053A  3420               	retlw	32	;' '
   709  053B  3444               	retlw	68	;'D'
   710  053C  3445               	retlw	69	;'E'
   711  053D  3420               	retlw	32	;' '
   712  053E  3450               	retlw	80	;'P'
   713  053F  3449               	retlw	73	;'I'
   714  0540  344C               	retlw	76	;'L'
   715  0541  3448               	retlw	72	;'H'
   716  0542  3441               	retlw	65	;'A'
   717  0543  3420               	retlw	32	;' '
   718  0544  342D               	retlw	45	;'-'
   719  0545  342D               	retlw	45	;'-'
   720  0546  342D               	retlw	45	;'-'
   721  0547  342D               	retlw	45	;'-'
   722  0548  342D               	retlw	45	;'-'
   723  0549  342D               	retlw	45	;'-'
   724  054A  342D               	retlw	45	;'-'
   725  054B  3420               	retlw	32	;' '
   726  054C  340A               	retlw	10
   727  054D  340D               	retlw	13
   728  054E  3420               	retlw	32	;' '
   729  054F  3400               	retlw	0
   730  0550                     STR_2:	
   731  0550  3449               	retlw	73	;'I'
   732  0551  346E               	retlw	110	;'n'
   733  0552  3469               	retlw	105	;'i'
   734  0553  3463               	retlw	99	;'c'
   735  0554  3469               	retlw	105	;'i'
   736  0555  3461               	retlw	97	;'a'
   737  0556  346C               	retlw	108	;'l'
   738  0557  3469               	retlw	105	;'i'
   739  0558  347A               	retlw	122	;'z'
   740  0559  3461               	retlw	97	;'a'
   741  055A  346E               	retlw	110	;'n'
   742  055B  3464               	retlw	100	;'d'
   743  055C  346F               	retlw	111	;'o'
   744  055D  342E               	retlw	46	;'.'
   745  055E  342E               	retlw	46	;'.'
   746  055F  342E               	retlw	46	;'.'
   747  0560  3400               	retlw	0
   748  0561                     STR_1:	
   749  0561  340A               	retlw	10
   750  0562  340D               	retlw	13
   751  0563  3464               	retlw	100	;'d'
   752  0564  3465               	retlw	101	;'e'
   753  0565  3473               	retlw	115	;'s'
   754  0566  346C               	retlw	108	;'l'
   755  0567  3469               	retlw	105	;'i'
   756  0568  3467               	retlw	103	;'g'
   757  0569  3461               	retlw	97	;'a'
   758  056A  3464               	retlw	100	;'d'
   759  056B  346F               	retlw	111	;'o'
   760  056C  340A               	retlw	10
   761  056D  340D               	retlw	13
   762  056E  3400               	retlw	0
   763  056F                     STR_3:	
   764  056F  346B               	retlw	107	;'k'
   765  0570  346D               	retlw	109	;'m'
   766  0571  3448               	retlw	72	;'H'
   767  0572  343A               	retlw	58	;':'
   768  0573  3420               	retlw	32	;' '
   769  0574  3400               	retlw	0
   770  0575                     __end_of__stringdata:	
   771                           
   772                           ; #config settings
   773  0000                     
   774                           	psect	cinit
   775  0015                     start_initialization:	
   776  0015                     __initialization:	
   777                           
   778                           ; Clear objects allocated to BANK0
   779  0015  1383               	bcf	3,7	;select IRP bank0
   780  0016  3020               	movlw	low __pbssBANK0
   781  0017  0084               	movwf	4
   782  0018  303C               	movlw	low (__pbssBANK0+28)
   783  0019  120A  118A  2788  120A  118A  	fcall	clear_ram0
   784                           
   785                           ; Clear objects allocated to BANK1
   786  001E  30A0               	movlw	low __pbssBANK1
   787  001F  0084               	movwf	4
   788  0020  30C9               	movlw	low (__pbssBANK1+41)
   789  0021  120A  118A  2788  120A  118A  	fcall	clear_ram0
   790                           
   791                           ; Initialize objects allocated to BANK1
   792  0026  30DD               	movlw	low (__pdataBANK1+3)
   793  0027  00FD               	movwf	btemp+-1
   794  0028  3007               	movlw	high __pidataBANK1
   795  0029  00FE               	movwf	btemp
   796  002A  30AB               	movlw	low __pidataBANK1
   797  002B  00FF               	movwf	btemp+1
   798  002C  30DA               	movlw	low __pdataBANK1
   799  002D  0084               	movwf	4
   800  002E  120A  118A  2752  120A  118A  	fcall	init_ram0
   801                           
   802                           ; Initialize objects allocated to BANK0
   803  0033  305D               	movlw	low (__pdataBANK0+7)
   804  0034  00FD               	movwf	btemp+-1
   805  0035  3007               	movlw	high __pidataBANK0
   806  0036  00FE               	movwf	btemp
   807  0037  3098               	movlw	low __pidataBANK0
   808  0038  00FF               	movwf	btemp+1
   809  0039  3056               	movlw	low __pdataBANK0
   810  003A  0084               	movwf	4
   811  003B  120A  118A  2752   	fcall	init_ram0
   812  003E                     end_of_initialization:	
   813                           ;End of C runtime variable initialization code
   814                           
   815  003E                     __end_of__initialization:	
   816  003E  0183               	clrf	3
   817  003F  120A  118A  296E   	ljmp	_main	;jump to C main() function
   818                           
   819                           	psect	bssBANK0
   820  0020                     __pbssBANK0:	
   821  0020                     _fitemp:	
   822  0020                     	ds	3
   823  0023                     _fop_rule1:	
   824  0023                     	ds	3
   825  0026                     _x:	
   826  0026                     	ds	3
   827  0029                     _y:	
   828  0029                     	ds	3
   829  002C                     _ADCResult:	
   830  002C                     	ds	2
   831  002E                     _antigoUI:	
   832  002E                     	ds	2
   833  0030                     _contagens_tm0:	
   834  0030                     	ds	2
   835  0032                     _deltaV:	
   836  0032                     	ds	2
   837  0034                     _pulsos:	
   838  0034                     	ds	2
   839  0036                     _rpm:	
   840  0036                     	ds	2
   841  0038                     _setpointUI:	
   842  0038                     	ds	2
   843  003A                     _status:	
   844  003A                     	ds	2
   845                           
   846                           	psect	dataBANK0
   847  0056                     __pdataBANK0:	
   848  0056                     _antigo:	
   849  0056                     	ds	3
   850  0059                     _pas_cooler:	
   851  0059                     	ds	2
   852  005B                     _pwm:	
   853  005B                     	ds	2
   854                           
   855                           	psect	bssBANK1
   856  00A0                     __pbssBANK1:	
   857  00A0                     _buffer:	
   858  00A0                     	ds	16
   859  00B0                     _ativa_fan:	
   860  00B0                     	ds	3
   861  00B3                     _fop_rule2:	
   862  00B3                     	ds	3
   863  00B6                     _fop_rule3:	
   864  00B6                     	ds	3
   865  00B9                     _sum:	
   866  00B9                     	ds	3
   867  00BC                     _total_area:	
   868  00BC                     	ds	3
   869  00BF                     _display_rpm:	
   870  00BF                     	ds	10
   871                           
   872                           	psect	dataBANK1
   873  00DA                     __pdataBANK1:	
   874  00DA                     _setpoint:	
   875  00DA                     	ds	3
   876                           
   877                           	psect	clrtext
   878  0788                     clear_ram0:	
   879                           ;	Called with FSR containing the base address, and
   880                           ;	W with the last address+1
   881                           
   882  0788  0064               	clrwdt	;clear the watchdog before getting into this loop
   883  0789                     clrloop0:	
   884  0789  0180               	clrf	0	;clear RAM location pointed to by FSR
   885  078A  0A84               	incf	4,f	;increment pointer
   886  078B  0604               	xorwf	4,w	;XOR with final address
   887  078C  1903               	btfsc	3,2	;have we reached the end yet?
   888  078D  3400               	retlw	0	;all done for this memory range, return
   889  078E  0604               	xorwf	4,w	;XOR again to restore value
   890  078F  2F89               	goto	clrloop0	;do the next byte
   891                           
   892                           	psect	inittext
   893  074E                     init_fetch0:	
   894                           ;	Called with low address in FSR and high address in W
   895                           
   896  074E  087E               	movf	126,w
   897  074F  008A               	movwf	10
   898  0750  087F               	movf	127,w
   899  0751  0082               	movwf	2
   900  0752                     init_ram0:	
   901                           ;Called with:
   902                           ;	high address of idata address in btemp 
   903                           ;	low address of idata address in btemp+1 
   904                           ;	low address of data in FSR
   905                           ;	high address + 1 of data in btemp-1
   906                           
   907  0752  274E  120A  118A   	fcall	init_fetch0
   908  0755  0080               	movwf	0
   909  0756  0A84               	incf	4,f
   910  0757  0804               	movf	4,w
   911  0758  067D               	xorwf	125,w
   912  0759  1903               	btfsc	3,2
   913  075A  3400               	retlw	0
   914  075B  0AFF               	incf	127,f
   915  075C  1903               	btfsc	3,2
   916  075D  0AFE               	incf	126,f
   917  075E  2F52               	goto	init_ram0
   918                           
   919                           	psect	cstackBANK1
   920  00C9                     __pcstackBANK1:	
   921  00C9                     ___aldiv@counter:	
   922                           
   923                           ; 1 bytes @ 0x0
   924  00C9                     	ds	1
   925  00CA                     ___aldiv@sign:	
   926                           
   927                           ; 1 bytes @ 0x1
   928  00CA                     	ds	1
   929  00CB                     ___aldiv@quotient:	
   930                           
   931                           ; 4 bytes @ 0x2
   932  00CB                     	ds	4
   933  00CF                     ?_USART_Init:	
   934  00CF                     USART_Init@BaudRate:	
   935                           ; 0 bytes @ 0x6
   936                           
   937                           
   938                           ; 4 bytes @ 0x6
   939  00CF                     	ds	4
   940  00D3                     ??_USART_Init:	
   941                           
   942                           ; 0 bytes @ 0xA
   943  00D3                     	ds	4
   944  00D7                     ??_main:	
   945                           
   946                           ; 0 bytes @ 0xE
   947  00D7                     	ds	3
   948                           
   949                           	psect	cstackCOMMON
   950  0070                     __pcstackCOMMON:	
   951  0070                     ?_USART_WriteChar:	
   952  0070                     ??_USART_WriteChar:	
   953                           ; 0 bytes @ 0x0
   954                           
   955  0070                     ?_USART_WriteString:	
   956                           ; 0 bytes @ 0x0
   957                           
   958  0070                     ?_TIMER0_Set:	
   959                           ; 0 bytes @ 0x0
   960                           
   961  0070                     ?_TIMER0_Init:	
   962                           ; 0 bytes @ 0x0
   963                           
   964  0070                     ?_ADC_Init:	
   965                           ; 0 bytes @ 0x0
   966                           
   967  0070                     ?_PWM_Init:	
   968                           ; 0 bytes @ 0x0
   969                           
   970  0070                     ?_LCD_Init:	
   971                           ; 0 bytes @ 0x0
   972                           
   973  0070                     ?_LCD_Clear:	
   974                           ; 0 bytes @ 0x0
   975                           
   976  0070                     ?_send:	
   977                           ; 0 bytes @ 0x0
   978                           
   979  0070                     ?_Fuzzy:	
   980                           ; 0 bytes @ 0x0
   981                           
   982  0070                     ?_ISR:	
   983                           ; 0 bytes @ 0x0
   984                           
   985  0070                     ?_main:	
   986                           ; 0 bytes @ 0x0
   987                           
   988  0070                     ?_LCD_WriteCmd:	
   989                           ; 0 bytes @ 0x0
   990                           
   991  0070                     ?_LCD_WriteData:	
   992                           ; 0 bytes @ 0x0
   993                           
   994  0070                     ?i1_TIMER0_Set:	
   995                           ; 0 bytes @ 0x0
   996                           
   997  0070                     ??i1_TIMER0_Set:	
   998                           ; 0 bytes @ 0x0
   999                           
  1000  0070                     ?i1_PWM_DutyCycle2:	
  1001                           ; 0 bytes @ 0x0
  1002                           
  1003  0070                     ?_USART_ReceiveChar:	
  1004                           ; 0 bytes @ 0x0
  1005                           
  1006  0070                     ?___lwdiv:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?___fttol:	
  1010                           ; 2 bytes @ 0x0
  1011                           
  1012  0070                     USART_WriteChar@byte:	
  1013                           ; 4 bytes @ 0x0
  1014                           
  1015  0070                     i1TIMER0_Set@contagens:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ___lwdiv@divisor:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     i1PWM_DutyCycle2@valor:	
  1022                           ; 2 bytes @ 0x0
  1023                           
  1024  0070                     ___fttol@f1:	
  1025                           ; 2 bytes @ 0x0
  1026                           
  1027                           
  1028                           ; 3 bytes @ 0x0
  1029  0070                     	ds	1
  1030  0071                     ??_USART_WriteString:	
  1031                           
  1032                           ; 0 bytes @ 0x1
  1033  0071                     	ds	1
  1034  0072                     ??i1_PWM_DutyCycle2:	
  1035  0072                     USART_WriteString@str:	
  1036                           ; 0 bytes @ 0x2
  1037                           
  1038  0072                     ___lwdiv@dividend:	
  1039                           ; 1 bytes @ 0x2
  1040                           
  1041                           
  1042                           ; 2 bytes @ 0x2
  1043  0072                     	ds	1
  1044  0073                     ??_USART_ReceiveChar:	
  1045                           
  1046                           ; 0 bytes @ 0x3
  1047  0073                     	ds	1
  1048  0074                     ??___fttol:	
  1049  0074                     ??___lwdiv:	
  1050                           ; 0 bytes @ 0x4
  1051                           
  1052  0074                     USART_ReceiveChar@byte:	
  1053                           ; 0 bytes @ 0x4
  1054                           
  1055                           
  1056                           ; 1 bytes @ 0x4
  1057  0074                     	ds	1
  1058  0075                     ___lwdiv@quotient:	
  1059                           
  1060                           ; 2 bytes @ 0x5
  1061  0075                     	ds	2
  1062  0077                     ___lwdiv@counter:	
  1063                           
  1064                           ; 1 bytes @ 0x7
  1065  0077                     	ds	1
  1066  0078                     ?___wmul:	
  1067  0078                     ___fttol@sign1:	
  1068                           ; 2 bytes @ 0x8
  1069                           
  1070  0078                     ___wmul@multiplier:	
  1071                           ; 1 bytes @ 0x8
  1072                           
  1073                           
  1074                           ; 2 bytes @ 0x8
  1075  0078                     	ds	1
  1076  0079                     ___fttol@lval:	
  1077                           
  1078                           ; 4 bytes @ 0x9
  1079  0079                     	ds	1
  1080  007A                     ___wmul@multiplicand:	
  1081                           
  1082                           ; 2 bytes @ 0xA
  1083  007A                     	ds	2
  1084  007C                     ??___wmul:	
  1085  007C                     ___wmul@product:	
  1086                           ; 0 bytes @ 0xC
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0xC
  1090  007C                     	ds	1
  1091  007D                     ___fttol@exp1:	
  1092                           
  1093                           ; 1 bytes @ 0xD
  1094  007D                     	ds	1
  1095                           
  1096                           	psect	cstackBANK0
  1097  003C                     __pcstackBANK0:	
  1098  003C                     ??_send:	
  1099  003C                     ??_Fuzzy:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102                           
  1103                           ; 0 bytes @ 0x0
  1104  003C                     	ds	1
  1105  003D                     send@checksum:	
  1106                           
  1107                           ; 1 bytes @ 0x1
  1108  003D                     	ds	1
  1109  003E                     send@velocidade:	
  1110  003E                     Fuzzy@mantem:	
  1111                           ; 2 bytes @ 0x2
  1112                           
  1113                           
  1114                           ; 3 bytes @ 0x2
  1115  003E                     	ds	2
  1116  0040                     send@index:	
  1117                           
  1118                           ; 1 bytes @ 0x4
  1119  0040                     	ds	1
  1120  0041                     Fuzzy@reduz:	
  1121                           
  1122                           ; 3 bytes @ 0x5
  1123  0041                     	ds	3
  1124  0044                     Fuzzy@aumenta:	
  1125                           
  1126                           ; 3 bytes @ 0x8
  1127  0044                     	ds	3
  1128  0047                     Fuzzy@freio:	
  1129                           
  1130                           ; 2 bytes @ 0xB
  1131  0047                     	ds	2
  1132  0049                     ??_ISR:	
  1133                           
  1134                           ; 0 bytes @ 0xD
  1135  0049                     	ds	4
  1136  004D                     ?_PWM_DutyCycle2:	
  1137  004D                     ??_TIMER0_Set:	
  1138                           ; 0 bytes @ 0x11
  1139                           
  1140  004D                     ??_TIMER0_Init:	
  1141                           ; 0 bytes @ 0x11
  1142                           
  1143  004D                     ??_ADC_Init:	
  1144                           ; 0 bytes @ 0x11
  1145                           
  1146  004D                     ??_PWM_Init:	
  1147                           ; 0 bytes @ 0x11
  1148                           
  1149  004D                     ?_LCD_Cursor:	
  1150                           ; 0 bytes @ 0x11
  1151                           
  1152  004D                     ?_PWM_DutyCycle1:	
  1153                           ; 0 bytes @ 0x11
  1154                           
  1155  004D                     ??_LCD_WriteCmd:	
  1156                           ; 0 bytes @ 0x11
  1157                           
  1158  004D                     ??_LCD_WriteData:	
  1159                           ; 0 bytes @ 0x11
  1160                           
  1161  004D                     ?___aldiv:	
  1162                           ; 0 bytes @ 0x11
  1163                           
  1164  004D                     TIMER0_Set@contagens:	
  1165                           ; 4 bytes @ 0x11
  1166                           
  1167  004D                     LCD_Cursor@Col:	
  1168                           ; 1 bytes @ 0x11
  1169                           
  1170  004D                     PWM_DutyCycle1@valor:	
  1171                           ; 1 bytes @ 0x11
  1172                           
  1173  004D                     PWM_DutyCycle2@valor:	
  1174                           ; 2 bytes @ 0x11
  1175                           
  1176  004D                     ___aldiv@divisor:	
  1177                           ; 2 bytes @ 0x11
  1178                           
  1179                           
  1180                           ; 4 bytes @ 0x11
  1181  004D                     	ds	1
  1182  004E                     ??_LCD_Cursor:	
  1183  004E                     LCD_WriteCmd@Byte:	
  1184                           ; 0 bytes @ 0x12
  1185                           
  1186  004E                     LCD_WriteData@Byte:	
  1187                           ; 1 bytes @ 0x12
  1188                           
  1189                           
  1190                           ; 1 bytes @ 0x12
  1191  004E                     	ds	1
  1192  004F                     ??_PWM_DutyCycle2:	
  1193  004F                     ??_LCD_Init:	
  1194                           ; 0 bytes @ 0x13
  1195                           
  1196  004F                     ?_LCD_WriteString:	
  1197                           ; 0 bytes @ 0x13
  1198                           
  1199  004F                     ??_PWM_DutyCycle1:	
  1200                           ; 0 bytes @ 0x13
  1201                           
  1202  004F                     ??_LCD_Clear:	
  1203                           ; 0 bytes @ 0x13
  1204                           
  1205  004F                     LCD_Cursor@Row:	
  1206                           ; 0 bytes @ 0x13
  1207                           
  1208  004F                     LCD_WriteString@Str:	
  1209                           ; 1 bytes @ 0x13
  1210                           
  1211                           
  1212                           ; 2 bytes @ 0x13
  1213  004F                     	ds	2
  1214  0051                     ??_LCD_WriteString:	
  1215  0051                     ___aldiv@dividend:	
  1216                           ; 0 bytes @ 0x15
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0x15
  1220  0051                     	ds	4
  1221  0055                     ??___aldiv:	
  1222                           
  1223                           ; 0 bytes @ 0x19
  1224  0055                     	ds	1
  1225                           
  1226                           	psect	maintext
  1227  016E                     __pmaintext:	
  1228 ;;
  1229 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1230 ;;
  1231 ;; *************** function _main *****************
  1232 ;; Defined at:
  1233 ;;		line 522 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;		None               void
  1240 ;; Registers used:
  1241 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 17F/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0
  1249 ;;      Temps:          0       0       3       0       0
  1250 ;;      Totals:         0       0       3       0       0
  1251 ;;Total ram usage:        3 bytes
  1252 ;; Hardware stack levels required when called:    6
  1253 ;; This function calls:
  1254 ;;		_ADC_Init
  1255 ;;		_LCD_Clear
  1256 ;;		_LCD_Cursor
  1257 ;;		_LCD_Init
  1258 ;;		_LCD_WriteString
  1259 ;;		_PWM_DutyCycle1
  1260 ;;		_PWM_DutyCycle2
  1261 ;;		_PWM_Init
  1262 ;;		_TIMER0_Init
  1263 ;;		_TIMER0_Set
  1264 ;;		_USART_Init
  1265 ;; This function is called by:
  1266 ;;		Startup code after reset
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _main
  1272  016E                     _main:	
  1273                           
  1274                           ;main.c: 524: TRISA = 0b00000001;
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1278  016E  3001               	movlw	1
  1279  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1280  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1281  0171  0085               	movwf	5	;volatile
  1282                           
  1283                           ;main.c: 525: PORTA = 0b00000001;
  1284  0172  3001               	movlw	1
  1285  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0175  0085               	movwf	5	;volatile
  1288                           
  1289                           ;main.c: 526: TRISB = 0b00000000;
  1290  0176  1683               	bsf	3,5	;RP0=1, select bank1
  1291  0177  1303               	bcf	3,6	;RP1=0, select bank1
  1292  0178  0186               	clrf	6	;volatile
  1293                           
  1294                           ;main.c: 527: PORTB = 0b00000000;
  1295  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1296  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1297  017B  0186               	clrf	6	;volatile
  1298                           
  1299                           ;main.c: 528: TRISC = 0b10000001;
  1300  017C  3081               	movlw	129
  1301  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1302  017E  1303               	bcf	3,6	;RP1=0, select bank1
  1303  017F  0087               	movwf	7	;volatile
  1304                           
  1305                           ;main.c: 529: PORTC = 0b11000000;
  1306  0180  30C0               	movlw	192
  1307  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0183  0087               	movwf	7	;volatile
  1310                           
  1311                           ;main.c: 530: TRISD = 0b00000000;
  1312  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1313  0185  1303               	bcf	3,6	;RP1=0, select bank1
  1314  0186  0188               	clrf	8	;volatile
  1315                           
  1316                           ;main.c: 531: PORTD = 0b00000000;
  1317  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0189  0188               	clrf	8	;volatile
  1320                           
  1321                           ;main.c: 532: TRISE = 0b00000000;
  1322  018A  1683               	bsf	3,5	;RP0=1, select bank1
  1323  018B  1303               	bcf	3,6	;RP1=0, select bank1
  1324  018C  0189               	clrf	9	;volatile
  1325                           
  1326                           ;main.c: 533: PORTE = 0b00000000;
  1327  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1328  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1329  018F  0189               	clrf	9	;volatile
  1330                           
  1331                           ;main.c: 536: T1CON = 0x03;
  1332  0190  3003               	movlw	3
  1333  0191  0090               	movwf	16	;volatile
  1334                           
  1335                           ;main.c: 537: TMR1L = 0x00;
  1336  0192  018E               	clrf	14	;volatile
  1337                           
  1338                           ;main.c: 538: TMR1H = 0x00;
  1339  0193  018F               	clrf	15	;volatile
  1340                           
  1341                           ;main.c: 541: USART_Init(115200);
  1342  0194  3000               	movlw	0
  1343  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1344  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1345  0197  00D2               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1346  0198  3001               	movlw	1
  1347  0199  00D1               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1348  019A  30C2               	movlw	194
  1349  019B  00D0               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1350  019C  3000               	movlw	0
  1351  019D  00CF               	movwf	USART_Init@BaudRate^(0+128)
  1352  019E  120A  118A  2575  120A  118A  	fcall	_USART_Init
  1353                           
  1354                           ;main.c: 542: TIMER0_Init();
  1355  01A3  120A  118A  277D  120A  118A  	fcall	_TIMER0_Init
  1356                           
  1357                           ;main.c: 543: ADC_Init();
  1358  01A8  120A  118A  273C  120A  118A  	fcall	_ADC_Init
  1359                           
  1360                           ;main.c: 544: PWM_Init();
  1361  01AD  120A  118A  265A  120A  118A  	fcall	_PWM_Init
  1362                           
  1363                           ;main.c: 545: LCD_Init();
  1364  01B2  120A  118A  244C  120A  118A  	fcall	_LCD_Init
  1365                           
  1366                           ;main.c: 548: INTCONbits.PEIE = 1;
  1367  01B7  170B               	bsf	11,6	;volatile
  1368                           
  1369                           ;main.c: 549: INTCONbits.GIE = 1;
  1370  01B8  178B               	bsf	11,7	;volatile
  1371                           
  1372                           ;main.c: 556: LCD_Init();
  1373  01B9  120A  118A  244C  120A  118A  	fcall	_LCD_Init
  1374                           
  1375                           ;main.c: 557: LCD_Cursor(0,0);
  1376  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1377  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1378  01C0  01CD               	clrf	LCD_Cursor@Col
  1379  01C1  3000               	movlw	0
  1380  01C2  120A  118A  2726  120A  118A  	fcall	_LCD_Cursor
  1381                           
  1382                           ;main.c: 558: LCD_WriteString("Inicializando...");
  1383  01C7  3029               	movlw	low (STR_2-__stringbase)
  1384  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1385  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1386  01CA  00CF               	movwf	LCD_WriteString@Str
  1387  01CB  3080               	movlw	128
  1388  01CC  00D0               	movwf	LCD_WriteString@Str+1
  1389  01CD  120A  118A  2635  120A  118A  	fcall	_LCD_WriteString
  1390                           
  1391                           ;main.c: 561: PWM_DutyCycle1(0);
  1392  01D2  3000               	movlw	0
  1393  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1394  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1395  01D5  00CD               	movwf	PWM_DutyCycle1@valor
  1396  01D6  3000               	movlw	0
  1397  01D7  00CE               	movwf	PWM_DutyCycle1@valor+1
  1398  01D8  120A  118A  26D8  120A  118A  	fcall	_PWM_DutyCycle1
  1399                           
  1400                           ;main.c: 562: PWM_DutyCycle2(0);
  1401  01DD  3000               	movlw	0
  1402  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1403  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1404  01E0  00CD               	movwf	PWM_DutyCycle2@valor
  1405  01E1  3000               	movlw	0
  1406  01E2  00CE               	movwf	PWM_DutyCycle2@valor+1
  1407  01E3  120A  118A  26BD  120A  118A  	fcall	_PWM_DutyCycle2
  1408                           
  1409                           ;main.c: 565: TIMER0_Set(238);
  1410  01E8  30EE               	movlw	238
  1411  01E9  120A  118A  279F  120A  118A  	fcall	_TIMER0_Set
  1412                           
  1413                           ;main.c: 568: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1414  01EE  3018               	movlw	24
  1415  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  1416  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  1417  01F1  00D9               	movwf	(??_main^(0+128)+2)
  1418  01F2  3061               	movlw	97
  1419  01F3  00D8               	movwf	(??_main^(0+128)+1)
  1420  01F4  306E               	movlw	110
  1421  01F5  00D7               	movwf	??_main^(0+128)
  1422  01F6                     u1677:	
  1423  01F6  0BD7               	decfsz	??_main^(0+128),f
  1424  01F7  29F6               	goto	u1677
  1425  01F8  0BD8               	decfsz	(??_main^(0+128)+1),f
  1426  01F9  29F6               	goto	u1677
  1427  01FA  0BD9               	decfsz	(??_main^(0+128)+2),f
  1428  01FB  29F6               	goto	u1677
  1429  01FC  0000               	nop
  1430  01FD                     l2305:	
  1431                           ;main.c: 571: while(1)
  1432                           
  1433                           
  1434                           ;main.c: 572: {
  1435                           ;main.c: 578: LCD_Clear();
  1436  01FD  120A  118A  260C  120A  118A  	fcall	_LCD_Clear
  1437                           
  1438                           ;main.c: 579: LCD_Cursor(0,0);
  1439  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1441  0204  01CD               	clrf	LCD_Cursor@Col
  1442  0205  3000               	movlw	0
  1443  0206  120A  118A  2726  120A  118A  	fcall	_LCD_Cursor
  1444                           
  1445                           ;main.c: 580: LCD_WriteString("kmH: ");
  1446  020B  3048               	movlw	low (STR_3-__stringbase)
  1447  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1448  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1449  020E  00CF               	movwf	LCD_WriteString@Str
  1450  020F  3080               	movlw	128
  1451  0210  00D0               	movwf	LCD_WriteString@Str+1
  1452  0211  120A  118A  2635  120A  118A  	fcall	_LCD_WriteString
  1453                           
  1454                           ;main.c: 581: LCD_Cursor(0,6);
  1455  0216  3006               	movlw	6
  1456  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1458  0219  00D7               	movwf	??_main^(0+128)
  1459  021A  0857               	movf	??_main^(0+128),w
  1460  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1461  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1462  021D  00CD               	movwf	LCD_Cursor@Col
  1463  021E  3000               	movlw	0
  1464  021F  120A  118A  2726  120A  118A  	fcall	_LCD_Cursor
  1465                           
  1466                           ;main.c: 582: LCD_WriteString(display_rpm);
  1467  0224  30BF               	movlw	_display_rpm& (0+255)
  1468  0225  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0226  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0227  00CF               	movwf	LCD_WriteString@Str
  1471  0228  3000               	movlw	0
  1472  0229  00D0               	movwf	LCD_WriteString@Str+1
  1473  022A  120A  118A  2635  120A  118A  	fcall	_LCD_WriteString
  1474                           
  1475                           ;main.c: 583: LCD_Cursor(1,0);
  1476  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0230  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0231  01CD               	clrf	LCD_Cursor@Col
  1479  0232  3001               	movlw	1
  1480  0233  120A  118A  2726  120A  118A  	fcall	_LCD_Cursor
  1481                           
  1482                           ;main.c: 588: _delay((unsigned long)((200)*(18432000/4000.0)));
  1483  0238  3005               	movlw	5
  1484  0239  1683               	bsf	3,5	;RP0=1, select bank1
  1485  023A  1303               	bcf	3,6	;RP1=0, select bank1
  1486  023B  00D9               	movwf	(??_main^(0+128)+2)
  1487  023C  30AD               	movlw	173
  1488  023D  00D8               	movwf	(??_main^(0+128)+1)
  1489  023E  30E0               	movlw	224
  1490  023F  00D7               	movwf	??_main^(0+128)
  1491  0240                     u1687:	
  1492  0240  0BD7               	decfsz	??_main^(0+128),f
  1493  0241  2A40               	goto	u1687
  1494  0242  0BD8               	decfsz	(??_main^(0+128)+1),f
  1495  0243  2A40               	goto	u1687
  1496  0244  0BD9               	decfsz	(??_main^(0+128)+2),f
  1497  0245  2A40               	goto	u1687
  1498  0246  29FD               	goto	l2305
  1499  0247                     __end_of_main:	
  1500                           
  1501                           	psect	text1
  1502  0575                     __ptext1:	
  1503 ;; *************** function _USART_Init *****************
  1504 ;; Defined at:
  1505 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  BaudRate        4    6[BANK1 ] long 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;		None               void
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         0       0       4       0       0
  1520 ;;      Locals:         0       0       0       0       0
  1521 ;;      Temps:          0       0       4       0       0
  1522 ;;      Totals:         0       0       8       0       0
  1523 ;;Total ram usage:        8 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    5
  1526 ;; This function calls:
  1527 ;;		___aldiv
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _USART_Init
  1535  0575                     _USART_Init:	
  1536                           
  1537                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1541  0575  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0576  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0577  084F               	movf	USART_Init@BaudRate^(0+128),w
  1544  0578  00D3               	movwf	??_USART_Init^(0+128)
  1545  0579  0850               	movf	(USART_Init@BaudRate+1)^(0+128),w
  1546  057A  00D4               	movwf	(??_USART_Init^(0+128)+1)
  1547  057B  0851               	movf	(USART_Init@BaudRate+2)^(0+128),w
  1548  057C  00D5               	movwf	(??_USART_Init^(0+128)+2)
  1549  057D  0852               	movf	(USART_Init@BaudRate+3)^(0+128),w
  1550  057E  00D6               	movwf	(??_USART_Init^(0+128)+3)
  1551  057F  3004               	movlw	4
  1552  0580                     u1665:	
  1553  0580  1003               	clrc
  1554  0581  0DD3               	rlf	??_USART_Init^(0+128),f
  1555  0582  0DD4               	rlf	(??_USART_Init^(0+128)+1),f
  1556  0583  0DD5               	rlf	(??_USART_Init^(0+128)+2),f
  1557  0584  0DD6               	rlf	(??_USART_Init^(0+128)+3),f
  1558  0585  3EFF               	addlw	-1
  1559  0586  1D03               	skipz
  1560  0587  2D80               	goto	u1665
  1561  0588  0856               	movf	(??_USART_Init+3)^(0+128),w
  1562  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1563  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1564  058B  00D0               	movwf	___aldiv@divisor+3
  1565  058C  1683               	bsf	3,5	;RP0=1, select bank1
  1566  058D  1303               	bcf	3,6	;RP1=0, select bank1
  1567  058E  0855               	movf	(??_USART_Init+2)^(0+128),w
  1568  058F  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0590  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0591  00CF               	movwf	___aldiv@divisor+2
  1571  0592  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0593  1303               	bcf	3,6	;RP1=0, select bank1
  1573  0594  0854               	movf	(??_USART_Init+1)^(0+128),w
  1574  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0597  00CE               	movwf	___aldiv@divisor+1
  1577  0598  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0599  1303               	bcf	3,6	;RP1=0, select bank1
  1579  059A  0853               	movf	??_USART_Init^(0+128),w
  1580  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1581  059C  1303               	bcf	3,6	;RP1=0, select bank0
  1582  059D  00CD               	movwf	___aldiv@divisor
  1583  059E  3001               	movlw	1
  1584  059F  00D4               	movwf	___aldiv@dividend+3
  1585  05A0  3019               	movlw	25
  1586  05A1  00D3               	movwf	___aldiv@dividend+2
  1587  05A2  3040               	movlw	64
  1588  05A3  00D2               	movwf	___aldiv@dividend+1
  1589  05A4  3000               	movlw	0
  1590  05A5  00D1               	movwf	___aldiv@dividend
  1591  05A6  120A  118A  2305   	fcall	___aldiv
  1592  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1593  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1594  05AB  084D               	movf	?___aldiv,w
  1595  05AC  3EFF               	addlw	255
  1596  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  1597  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  1598  05AF  0099               	movwf	25	;volatile
  1599                           
  1600                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1601  05B0  1398               	bcf	24,7	;volatile
  1602                           
  1603                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1604  05B1  1318               	bcf	24,6	;volatile
  1605                           
  1606                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1607  05B2  1698               	bsf	24,5	;volatile
  1608                           
  1609                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1610  05B3  1218               	bcf	24,4	;volatile
  1611                           
  1612                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1613  05B4  1518               	bsf	24,2	;volatile
  1614                           
  1615                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1616  05B5  1498               	bsf	24,1	;volatile
  1617                           
  1618                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1619  05B6  1018               	bcf	24,0	;volatile
  1620                           
  1621                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1622  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1623  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1624  05B9  1798               	bsf	24,7	;volatile
  1625                           
  1626                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1627  05BA  1318               	bcf	24,6	;volatile
  1628                           
  1629                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1630  05BB  1298               	bcf	24,5	;volatile
  1631                           
  1632                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1633  05BC  1618               	bsf	24,4	;volatile
  1634                           
  1635                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1636  05BD  1198               	bcf	24,3	;volatile
  1637                           
  1638                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1639  05BE  1118               	bcf	24,2	;volatile
  1640                           
  1641                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1642  05BF  1098               	bcf	24,1	;volatile
  1643                           
  1644                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1645  05C0  1018               	bcf	24,0	;volatile
  1646                           
  1647                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1648  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  1649  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  1650  05C3  120C               	bcf	12,4	;volatile
  1651                           
  1652                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1653  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  1654  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  1655  05C6  120C               	bcf	12,4	;volatile
  1656                           
  1657                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1658  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  1659  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  1660  05C9  168C               	bsf	12,5	;volatile
  1661                           
  1662                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1663  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1664  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1665  05CC  128C               	bcf	12,5	;volatile
  1666  05CD  0008               	return
  1667  05CE                     __end_of_USART_Init:	
  1668                           
  1669                           	psect	text2
  1670  0305                     __ptext2:	
  1671 ;; *************** function ___aldiv *****************
  1672 ;; Defined at:
  1673 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  divisor         4   17[BANK0 ] long 
  1676 ;;  dividend        4   21[BANK0 ] long 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  quotient        4    2[BANK1 ] long 
  1679 ;;  sign            1    1[BANK1 ] unsigned char 
  1680 ;;  counter         1    0[BANK1 ] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  4   17[BANK0 ] long 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         0       8       0       0       0
  1691 ;;      Locals:         0       0       6       0       0
  1692 ;;      Temps:          0       1       0       0       0
  1693 ;;      Totals:         0       9       6       0       0
  1694 ;;Total ram usage:       15 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    4
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_USART_Init
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           
  1705                           ;psect for function ___aldiv
  1706  0305                     ___aldiv:	
  1707                           
  1708                           ;incstack = 0
  1709                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1710  0305  1683               	bsf	3,5	;RP0=1, select bank1
  1711  0306  1303               	bcf	3,6	;RP1=0, select bank1
  1712  0307  01CA               	clrf	___aldiv@sign^(0+128)
  1713  0308  1283               	bcf	3,5	;RP0=0, select bank0
  1714  0309  1303               	bcf	3,6	;RP1=0, select bank0
  1715  030A  1FD0               	btfss	___aldiv@divisor+3,7
  1716  030B  2B1B               	goto	l577
  1717  030C  09CD               	comf	___aldiv@divisor,f
  1718  030D  09CE               	comf	___aldiv@divisor+1,f
  1719  030E  09CF               	comf	___aldiv@divisor+2,f
  1720  030F  09D0               	comf	___aldiv@divisor+3,f
  1721  0310  0ACD               	incf	___aldiv@divisor,f
  1722  0311  1903               	skipnz
  1723  0312  0ACE               	incf	___aldiv@divisor+1,f
  1724  0313  1903               	skipnz
  1725  0314  0ACF               	incf	___aldiv@divisor+2,f
  1726  0315  1903               	skipnz
  1727  0316  0AD0               	incf	___aldiv@divisor+3,f
  1728  0317  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0318  1303               	bcf	3,6	;RP1=0, select bank1
  1730  0319  01CA               	clrf	___aldiv@sign^(0+128)
  1731  031A  0ACA               	incf	___aldiv@sign^(0+128),f
  1732  031B                     l577:	
  1733  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1734  031C  1FD4               	btfss	___aldiv@dividend+3,7
  1735  031D  2B2F               	goto	l2193
  1736  031E  09D1               	comf	___aldiv@dividend,f
  1737  031F  09D2               	comf	___aldiv@dividend+1,f
  1738  0320  09D3               	comf	___aldiv@dividend+2,f
  1739  0321  09D4               	comf	___aldiv@dividend+3,f
  1740  0322  0AD1               	incf	___aldiv@dividend,f
  1741  0323  1903               	skipnz
  1742  0324  0AD2               	incf	___aldiv@dividend+1,f
  1743  0325  1903               	skipnz
  1744  0326  0AD3               	incf	___aldiv@dividend+2,f
  1745  0327  1903               	skipnz
  1746  0328  0AD4               	incf	___aldiv@dividend+3,f
  1747  0329  3001               	movlw	1
  1748  032A  00D5               	movwf	??___aldiv
  1749  032B  0855               	movf	??___aldiv,w
  1750  032C  1683               	bsf	3,5	;RP0=1, select bank1
  1751  032D  1303               	bcf	3,6	;RP1=0, select bank1
  1752  032E  06CA               	xorwf	___aldiv@sign^(0+128),f
  1753  032F                     l2193:	
  1754  032F  3000               	movlw	0
  1755  0330  1683               	bsf	3,5	;RP0=1, select bank1
  1756  0331  1303               	bcf	3,6	;RP1=0, select bank1
  1757  0332  00CE               	movwf	(___aldiv@quotient+3)^(0+128)
  1758  0333  3000               	movlw	0
  1759  0334  00CD               	movwf	(___aldiv@quotient+2)^(0+128)
  1760  0335  3000               	movlw	0
  1761  0336  00CC               	movwf	(___aldiv@quotient+1)^(0+128)
  1762  0337  3000               	movlw	0
  1763  0338  00CB               	movwf	___aldiv@quotient^(0+128)
  1764  0339  1283               	bcf	3,5	;RP0=0, select bank0
  1765  033A  1303               	bcf	3,6	;RP1=0, select bank0
  1766  033B  0850               	movf	___aldiv@divisor+3,w
  1767  033C  044F               	iorwf	___aldiv@divisor+2,w
  1768  033D  044E               	iorwf	___aldiv@divisor+1,w
  1769  033E  044D               	iorwf	___aldiv@divisor,w
  1770  033F  1903               	skipnz
  1771  0340  2B99               	goto	l2215
  1772  0341  1683               	bsf	3,5	;RP0=1, select bank1
  1773  0342  1303               	bcf	3,6	;RP1=0, select bank1
  1774  0343  01C9               	clrf	___aldiv@counter^(0+128)
  1775  0344  0AC9               	incf	___aldiv@counter^(0+128),f
  1776  0345                     l2201:	
  1777  0345  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0346  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0347  1BD0               	btfsc	___aldiv@divisor+3,7
  1780  0348  2B5A               	goto	l2203
  1781  0349  3001               	movlw	1
  1782  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1783  034B  00D5               	movwf	??___aldiv
  1784  034C                     u1595:	
  1785  034C  1003               	clrc
  1786  034D  0DCD               	rlf	___aldiv@divisor,f
  1787  034E  0DCE               	rlf	___aldiv@divisor+1,f
  1788  034F  0DCF               	rlf	___aldiv@divisor+2,f
  1789  0350  0DD0               	rlf	___aldiv@divisor+3,f
  1790  0351  0BD5               	decfsz	??___aldiv,f
  1791  0352  2B4C               	goto	u1595
  1792  0353  3001               	movlw	1
  1793  0354  00D5               	movwf	??___aldiv
  1794  0355  0855               	movf	??___aldiv,w
  1795  0356  1683               	bsf	3,5	;RP0=1, select bank1
  1796  0357  1303               	bcf	3,6	;RP1=0, select bank1
  1797  0358  07C9               	addwf	___aldiv@counter^(0+128),f
  1798  0359  2B45               	goto	l2201
  1799  035A                     l2203:	
  1800  035A  3001               	movlw	1
  1801  035B  1283               	bcf	3,5	;RP0=0, select bank0
  1802  035C  00D5               	movwf	??___aldiv
  1803  035D                     u1615:	
  1804  035D  1003               	clrc
  1805  035E  1683               	bsf	3,5	;RP0=1, select bank1
  1806  035F  1303               	bcf	3,6	;RP1=0, select bank1
  1807  0360  0DCB               	rlf	___aldiv@quotient^(0+128),f
  1808  0361  0DCC               	rlf	(___aldiv@quotient+1)^(0+128),f
  1809  0362  0DCD               	rlf	(___aldiv@quotient+2)^(0+128),f
  1810  0363  0DCE               	rlf	(___aldiv@quotient+3)^(0+128),f
  1811  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0366  0BD5               	decfsz	??___aldiv,f
  1814  0367  2B5D               	goto	u1615
  1815  0368  0850               	movf	___aldiv@divisor+3,w
  1816  0369  0254               	subwf	___aldiv@dividend+3,w
  1817  036A  1D03               	skipz
  1818  036B  2B76               	goto	u1625
  1819  036C  084F               	movf	___aldiv@divisor+2,w
  1820  036D  0253               	subwf	___aldiv@dividend+2,w
  1821  036E  1D03               	skipz
  1822  036F  2B76               	goto	u1625
  1823  0370  084E               	movf	___aldiv@divisor+1,w
  1824  0371  0252               	subwf	___aldiv@dividend+1,w
  1825  0372  1D03               	skipz
  1826  0373  2B76               	goto	u1625
  1827  0374  084D               	movf	___aldiv@divisor,w
  1828  0375  0251               	subwf	___aldiv@dividend,w
  1829  0376                     u1625:	
  1830  0376  1C03               	skipc
  1831  0377  2B89               	goto	l2211
  1832  0378  084D               	movf	___aldiv@divisor,w
  1833  0379  02D1               	subwf	___aldiv@dividend,f
  1834  037A  084E               	movf	___aldiv@divisor+1,w
  1835  037B  1C03               	skipc
  1836  037C  0F4E               	incfsz	___aldiv@divisor+1,w
  1837  037D  02D2               	subwf	___aldiv@dividend+1,f
  1838  037E  084F               	movf	___aldiv@divisor+2,w
  1839  037F  1C03               	skipc
  1840  0380  0F4F               	incfsz	___aldiv@divisor+2,w
  1841  0381  02D3               	subwf	___aldiv@dividend+2,f
  1842  0382  0850               	movf	___aldiv@divisor+3,w
  1843  0383  1C03               	skipc
  1844  0384  0F50               	incfsz	___aldiv@divisor+3,w
  1845  0385  02D4               	subwf	___aldiv@dividend+3,f
  1846  0386  1683               	bsf	3,5	;RP0=1, select bank1
  1847  0387  1303               	bcf	3,6	;RP1=0, select bank1
  1848  0388  144B               	bsf	___aldiv@quotient^(0+128),0
  1849  0389                     l2211:	
  1850  0389  3001               	movlw	1
  1851  038A                     u1635:	
  1852  038A  1003               	clrc
  1853  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1854  038C  0CD0               	rrf	___aldiv@divisor+3,f
  1855  038D  0CCF               	rrf	___aldiv@divisor+2,f
  1856  038E  0CCE               	rrf	___aldiv@divisor+1,f
  1857  038F  0CCD               	rrf	___aldiv@divisor,f
  1858  0390  3EFF               	addlw	-1
  1859  0391  1D03               	skipz
  1860  0392  2B8A               	goto	u1635
  1861  0393  3001               	movlw	1
  1862  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1863  0395  1303               	bcf	3,6	;RP1=0, select bank1
  1864  0396  02C9               	subwf	___aldiv@counter^(0+128),f
  1865  0397  1D03               	btfss	3,2
  1866  0398  2B5A               	goto	l2203
  1867  0399                     l2215:	
  1868  0399  1683               	bsf	3,5	;RP0=1, select bank1
  1869  039A  1303               	bcf	3,6	;RP1=0, select bank1
  1870  039B  084A               	movf	___aldiv@sign^(0+128),w
  1871  039C  1903               	btfsc	3,2
  1872  039D  2BA9               	goto	l2219
  1873  039E  09CB               	comf	___aldiv@quotient^(0+128),f
  1874  039F  09CC               	comf	(___aldiv@quotient+1)^(0+128),f
  1875  03A0  09CD               	comf	(___aldiv@quotient+2)^(0+128),f
  1876  03A1  09CE               	comf	(___aldiv@quotient+3)^(0+128),f
  1877  03A2  0ACB               	incf	___aldiv@quotient^(0+128),f
  1878  03A3  1903               	skipnz
  1879  03A4  0ACC               	incf	(___aldiv@quotient+1)^(0+128),f
  1880  03A5  1903               	skipnz
  1881  03A6  0ACD               	incf	(___aldiv@quotient+2)^(0+128),f
  1882  03A7  1903               	skipnz
  1883  03A8  0ACE               	incf	(___aldiv@quotient+3)^(0+128),f
  1884  03A9                     l2219:	
  1885  03A9  084E               	movf	(___aldiv@quotient+3)^(0+128),w
  1886  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1887  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1888  03AC  00D0               	movwf	?___aldiv+3
  1889  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  1890  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  1891  03AF  084D               	movf	(___aldiv@quotient+2)^(0+128),w
  1892  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1893  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1894  03B2  00CF               	movwf	?___aldiv+2
  1895  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  1896  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  1897  03B5  084C               	movf	(___aldiv@quotient+1)^(0+128),w
  1898  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1899  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1900  03B8  00CE               	movwf	?___aldiv+1
  1901  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  1902  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  1903  03BB  084B               	movf	___aldiv@quotient^(0+128),w
  1904  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1905  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1906  03BE  00CD               	movwf	?___aldiv
  1907  03BF  0008               	return
  1908  03C0                     __end_of___aldiv:	
  1909                           
  1910                           	psect	text3
  1911  079F                     __ptext3:	
  1912 ;; *************** function _TIMER0_Set *****************
  1913 ;; Defined at:
  1914 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  contagens       1    wreg     unsigned char 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  contagens       1   17[BANK0 ] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;		None               void
  1921 ;; Registers used:
  1922 ;;		wreg
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         0       0       0       0       0
  1929 ;;      Locals:         0       1       0       0       0
  1930 ;;      Temps:          0       0       0       0       0
  1931 ;;      Totals:         0       1       0       0       0
  1932 ;;Total ram usage:        1 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    4
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _TIMER0_Set
  1944  079F                     _TIMER0_Set:	
  1945                           
  1946                           ;incstack = 0
  1947                           ; Regs used in _TIMER0_Set: [wreg]
  1948                           ;TIMER0_Set@contagens stored from wreg
  1949  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1950  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1951  07A1  00CD               	movwf	TIMER0_Set@contagens
  1952                           
  1953                           ;timers.c: 22: TMR0 = contagens;
  1954  07A2  084D               	movf	TIMER0_Set@contagens,w
  1955  07A3  0081               	movwf	1	;volatile
  1956  07A4  0008               	return
  1957  07A5                     __end_of_TIMER0_Set:	
  1958                           
  1959                           	psect	text4
  1960  077D                     __ptext4:	
  1961 ;; *************** function _TIMER0_Init *****************
  1962 ;; Defined at:
  1963 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;		None               void
  1970 ;; Registers used:
  1971 ;;		None
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1977 ;;      Params:         0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0
  1980 ;;      Totals:         0       0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    4
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function _TIMER0_Init
  1993  077D                     _TIMER0_Init:	
  1994                           
  1995                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _TIMER0_Init: []
  1999  077D  1683               	bsf	3,5	;RP0=1, select bank1
  2000  077E  1303               	bcf	3,6	;RP1=0, select bank1
  2001  077F  1281               	bcf	1,5	;volatile
  2002                           
  2003                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2004  0780  1201               	bcf	1,4	;volatile
  2005                           
  2006                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2007  0781  1181               	bcf	1,3	;volatile
  2008                           
  2009                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2010  0782  1501               	bsf	1,2	;volatile
  2011                           
  2012                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2013  0783  1481               	bsf	1,1	;volatile
  2014                           
  2015                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2016  0784  1401               	bsf	1,0	;volatile
  2017                           
  2018                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2019  0785  110B               	bcf	11,2	;volatile
  2020                           
  2021                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2022  0786  168B               	bsf	11,5	;volatile
  2023  0787  0008               	return
  2024  0788                     __end_of_TIMER0_Init:	
  2025                           
  2026                           	psect	text5
  2027  065A                     __ptext5:	
  2028 ;; *************** function _PWM_Init *****************
  2029 ;; Defined at:
  2030 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;		None               void
  2037 ;; Registers used:
  2038 ;;		wreg
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         0       0       0       0       0
  2045 ;;      Locals:         0       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0
  2047 ;;      Totals:         0       0       0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    4
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _PWM_Init
  2060  065A                     _PWM_Init:	
  2061                           
  2062                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in _PWM_Init: [wreg]
  2066  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2067  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2068  065C  1492               	bsf	18,1	;volatile
  2069                           
  2070                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2071  065D  1012               	bcf	18,0	;volatile
  2072                           
  2073                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2074  065E  1312               	bcf	18,6	;volatile
  2075                           
  2076                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2077  065F  1292               	bcf	18,5	;volatile
  2078                           
  2079                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2080  0660  1212               	bcf	18,4	;volatile
  2081                           
  2082                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2083  0661  1192               	bcf	18,3	;volatile
  2084                           
  2085                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2086  0662  1512               	bsf	18,2	;volatile
  2087                           
  2088                           ;pwm.c: 27: PR2 = 255;
  2089  0663  30FF               	movlw	255
  2090  0664  1683               	bsf	3,5	;RP0=1, select bank1
  2091  0665  1303               	bcf	3,6	;RP1=0, select bank1
  2092  0666  0092               	movwf	18	;volatile
  2093                           
  2094                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2095  0667  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0668  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0669  1597               	bsf	23,3	;volatile
  2098                           
  2099                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2100  066A  1517               	bsf	23,2	;volatile
  2101                           
  2102                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2103  066B  1497               	bsf	23,1	;volatile
  2104                           
  2105                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2106  066C  1417               	bsf	23,0	;volatile
  2107                           
  2108                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2109  066D  1683               	bsf	3,5	;RP0=1, select bank1
  2110  066E  1303               	bcf	3,6	;RP1=0, select bank1
  2111  066F  150C               	bsf	12,2	;volatile
  2112                           
  2113                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2114  0670  1283               	bcf	3,5	;RP0=0, select bank0
  2115  0671  1303               	bcf	3,6	;RP1=0, select bank0
  2116  0672  110C               	bcf	12,2	;volatile
  2117                           
  2118                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2119  0673  159D               	bsf	29,3	;volatile
  2120                           
  2121                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2122  0674  151D               	bsf	29,2	;volatile
  2123                           
  2124                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2125  0675  149D               	bsf	29,1	;volatile
  2126                           
  2127                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2128  0676  141D               	bsf	29,0	;volatile
  2129                           
  2130                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2131  0677  1683               	bsf	3,5	;RP0=1, select bank1
  2132  0678  1303               	bcf	3,6	;RP1=0, select bank1
  2133  0679  140D               	bsf	13,0	;volatile
  2134                           
  2135                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2136  067A  1283               	bcf	3,5	;RP0=0, select bank0
  2137  067B  1303               	bcf	3,6	;RP1=0, select bank0
  2138  067C  100D               	bcf	13,0	;volatile
  2139  067D  0008               	return
  2140  067E                     __end_of_PWM_Init:	
  2141                           
  2142                           	psect	text6
  2143  06BD                     __ptext6:	
  2144 ;; *************** function _PWM_DutyCycle2 *****************
  2145 ;; Defined at:
  2146 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  valor           2   17[BANK0 ] int 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;		None               void
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2160 ;;      Params:         0       2       0       0       0
  2161 ;;      Locals:         0       0       0       0       0
  2162 ;;      Temps:          0       2       0       0       0
  2163 ;;      Totals:         0       4       0       0       0
  2164 ;;Total ram usage:        4 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    4
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _PWM_DutyCycle2
  2176  06BD                     _PWM_DutyCycle2:	
  2177                           
  2178                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2182  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2183  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2184  06BF  084E               	movf	PWM_DutyCycle2@valor+1,w
  2185  06C0  00D0               	movwf	??_PWM_DutyCycle2+1
  2186  06C1  084D               	movf	PWM_DutyCycle2@valor,w
  2187  06C2  00CF               	movwf	??_PWM_DutyCycle2
  2188  06C3  0D50               	rlf	??_PWM_DutyCycle2+1,w
  2189  06C4  0CD0               	rrf	??_PWM_DutyCycle2+1,f
  2190  06C5  0CCF               	rrf	??_PWM_DutyCycle2,f
  2191  06C6  0D50               	rlf	??_PWM_DutyCycle2+1,w
  2192  06C7  0CD0               	rrf	??_PWM_DutyCycle2+1,f
  2193  06C8  0CCF               	rrf	??_PWM_DutyCycle2,f
  2194  06C9  084F               	movf	??_PWM_DutyCycle2,w
  2195  06CA  009B               	movwf	27	;volatile
  2196                           
  2197                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2198  06CB  084D               	movf	PWM_DutyCycle2@valor,w
  2199  06CC  00CF               	movwf	??_PWM_DutyCycle2
  2200  06CD  3003               	movlw	3
  2201  06CE                     u1265:	
  2202  06CE  1003               	clrc
  2203  06CF  0DCF               	rlf	??_PWM_DutyCycle2,f
  2204  06D0  3EFF               	addlw	-1
  2205  06D1  1D03               	skipz
  2206  06D2  2ECE               	goto	u1265
  2207  06D3  1003               	clrc
  2208  06D4  0D4F               	rlf	??_PWM_DutyCycle2,w
  2209  06D5  380C               	iorlw	12
  2210  06D6  009D               	movwf	29	;volatile
  2211  06D7  0008               	return
  2212  06D8                     __end_of_PWM_DutyCycle2:	
  2213                           
  2214                           	psect	text7
  2215  06D8                     __ptext7:	
  2216 ;; *************** function _PWM_DutyCycle1 *****************
  2217 ;; Defined at:
  2218 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  valor           2   17[BANK0 ] int 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;		None               void
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2232 ;;      Params:         0       2       0       0       0
  2233 ;;      Locals:         0       0       0       0       0
  2234 ;;      Temps:          0       2       0       0       0
  2235 ;;      Totals:         0       4       0       0       0
  2236 ;;Total ram usage:        4 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    4
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           
  2247                           ;psect for function _PWM_DutyCycle1
  2248  06D8                     _PWM_DutyCycle1:	
  2249                           
  2250                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2251                           
  2252                           ;incstack = 0
  2253                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2254  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2255  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  2256  06DA  084E               	movf	PWM_DutyCycle1@valor+1,w
  2257  06DB  00D0               	movwf	??_PWM_DutyCycle1+1
  2258  06DC  084D               	movf	PWM_DutyCycle1@valor,w
  2259  06DD  00CF               	movwf	??_PWM_DutyCycle1
  2260  06DE  0D50               	rlf	??_PWM_DutyCycle1+1,w
  2261  06DF  0CD0               	rrf	??_PWM_DutyCycle1+1,f
  2262  06E0  0CCF               	rrf	??_PWM_DutyCycle1,f
  2263  06E1  0D50               	rlf	??_PWM_DutyCycle1+1,w
  2264  06E2  0CD0               	rrf	??_PWM_DutyCycle1+1,f
  2265  06E3  0CCF               	rrf	??_PWM_DutyCycle1,f
  2266  06E4  084F               	movf	??_PWM_DutyCycle1,w
  2267  06E5  0095               	movwf	21	;volatile
  2268                           
  2269                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2270  06E6  084D               	movf	PWM_DutyCycle1@valor,w
  2271  06E7  00CF               	movwf	??_PWM_DutyCycle1
  2272  06E8  3003               	movlw	3
  2273  06E9                     u1315:	
  2274  06E9  1003               	clrc
  2275  06EA  0DCF               	rlf	??_PWM_DutyCycle1,f
  2276  06EB  3EFF               	addlw	-1
  2277  06EC  1D03               	skipz
  2278  06ED  2EE9               	goto	u1315
  2279  06EE  1003               	clrc
  2280  06EF  0D4F               	rlf	??_PWM_DutyCycle1,w
  2281  06F0  380C               	iorlw	12
  2282  06F1  0097               	movwf	23	;volatile
  2283  06F2  0008               	return
  2284  06F3                     __end_of_PWM_DutyCycle1:	
  2285                           
  2286                           	psect	text8
  2287  0635                     __ptext8:	
  2288 ;; *************** function _LCD_WriteString *****************
  2289 ;; Defined at:
  2290 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  Str             2   19[BANK0 ] PTR const unsigned char 
  2293 ;;		 -> display_rpm(10), STR_3(6), STR_2(17), 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;		None               void
  2298 ;; Registers used:
  2299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2305 ;;      Params:         0       2       0       0       0
  2306 ;;      Locals:         0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0
  2308 ;;      Totals:         0       2       0       0       0
  2309 ;;Total ram usage:        2 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    5
  2312 ;; This function calls:
  2313 ;;		_LCD_WriteData
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _LCD_WriteString
  2321  0635                     _LCD_WriteString:	
  2322  0635                     l1997:	
  2323                           ;lcd.c: 63: while(*Str != '\0')
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2327                           
  2328  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0637  0850               	movf	LCD_WriteString@Str+1,w
  2331  0638  00FF               	movwf	127
  2332  0639  084F               	movf	LCD_WriteString@Str,w
  2333  063A  0084               	movwf	4
  2334  063B  120A  118A  2518  120A  118A  	fcall	stringtab
  2335  0640  3800               	iorlw	0
  2336  0641  1903               	btfsc	3,2
  2337  0642  0008               	return
  2338                           
  2339                           ;lcd.c: 64: {
  2340                           ;lcd.c: 65: LCD_WriteData(*Str);
  2341  0643  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0644  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0645  0850               	movf	LCD_WriteString@Str+1,w
  2344  0646  00FF               	movwf	127
  2345  0647  084F               	movf	LCD_WriteString@Str,w
  2346  0648  0084               	movwf	4
  2347  0649  120A  118A  2518  120A  118A  	fcall	stringtab
  2348  064E  120A  118A  275F  120A  118A  	fcall	_LCD_WriteData
  2349                           
  2350                           ;lcd.c: 66: Str++;
  2351  0653  3001               	movlw	1
  2352  0654  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0655  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0656  07CF               	addwf	LCD_WriteString@Str,f
  2355  0657  1803               	skipnc
  2356  0658  0AD0               	incf	LCD_WriteString@Str+1,f
  2357  0659  2E35               	goto	l1997
  2358  065A                     __end_of_LCD_WriteString:	
  2359                           
  2360                           	psect	text9
  2361  075F                     __ptext9:	
  2362 ;; *************** function _LCD_WriteData *****************
  2363 ;; Defined at:
  2364 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  Byte            1    wreg     unsigned char 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  Byte            1   18[BANK0 ] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;		None               void
  2371 ;; Registers used:
  2372 ;;		wreg
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         0       0       0       0       0
  2379 ;;      Locals:         0       1       0       0       0
  2380 ;;      Temps:          0       1       0       0       0
  2381 ;;      Totals:         0       2       0       0       0
  2382 ;;Total ram usage:        2 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    4
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_LCD_WriteString
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function _LCD_WriteData
  2394  075F                     _LCD_WriteData:	
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _LCD_WriteData: [wreg]
  2398                           ;LCD_WriteData@Byte stored from wreg
  2399  075F  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0760  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0761  00CE               	movwf	LCD_WriteData@Byte
  2402                           
  2403                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  2404  0762  1409               	bsf	9,0	;volatile
  2405                           
  2406                           ;lcd.c: 51: PORTD = Byte;
  2407  0763  084E               	movf	LCD_WriteData@Byte,w
  2408  0764  0088               	movwf	8	;volatile
  2409                           
  2410                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  2411  0765  1489               	bsf	9,1	;volatile
  2412                           
  2413                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2414  0766  303D               	movlw	61
  2415  0767  00CD               	movwf	??_LCD_WriteData
  2416  0768                     u1697:	
  2417  0768  0BCD               	decfsz	??_LCD_WriteData,f
  2418  0769  2F68               	goto	u1697
  2419                           
  2420                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  2421  076A  1283               	bcf	3,5	;RP0=0, select bank0
  2422  076B  1303               	bcf	3,6	;RP1=0, select bank0
  2423  076C  1089               	bcf	9,1	;volatile
  2424  076D  0008               	return
  2425  076E                     __end_of_LCD_WriteData:	
  2426                           
  2427                           	psect	text10
  2428  044C                     __ptext10:	
  2429 ;; *************** function _LCD_Init *****************
  2430 ;; Defined at:
  2431 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;		None               void
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0
  2447 ;;      Temps:          0       2       0       0       0
  2448 ;;      Totals:         0       2       0       0       0
  2449 ;;Total ram usage:        2 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    5
  2452 ;; This function calls:
  2453 ;;		_LCD_WriteCmd
  2454 ;; This function is called by:
  2455 ;;		_main
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           
  2460                           ;psect for function _LCD_Init
  2461  044C                     _LCD_Init:	
  2462                           
  2463                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2464                           
  2465                           ;incstack = 0
  2466                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2467  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2468  044D  1303               	bcf	3,6	;RP1=0, select bank1
  2469  044E  119F               	bcf	31,3	;volatile
  2470                           
  2471                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2472  044F  151F               	bsf	31,2	;volatile
  2473                           
  2474                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2475  0450  109F               	bcf	31,1	;volatile
  2476                           
  2477                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2478  0451  101F               	bcf	31,0	;volatile
  2479                           
  2480                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2481  0452  305A               	movlw	90
  2482  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0455  00D0               	movwf	??_LCD_Init+1
  2485  0456  30C3               	movlw	195
  2486  0457  00CF               	movwf	??_LCD_Init
  2487  0458                     u1707:	
  2488  0458  0BCF               	decfsz	??_LCD_Init,f
  2489  0459  2C58               	goto	u1707
  2490  045A  0BD0               	decfsz	??_LCD_Init+1,f
  2491  045B  2C58               	goto	u1707
  2492                           
  2493                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2494  045C  3030               	movlw	48
  2495  045D  120A  118A  276E  120A  118A  	fcall	_LCD_WriteCmd
  2496                           
  2497                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2498  0462  3018               	movlw	24
  2499  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0465  00D0               	movwf	??_LCD_Init+1
  2502  0466  30EF               	movlw	239
  2503  0467  00CF               	movwf	??_LCD_Init
  2504  0468                     u1717:	
  2505  0468  0BCF               	decfsz	??_LCD_Init,f
  2506  0469  2C68               	goto	u1717
  2507  046A  0BD0               	decfsz	??_LCD_Init+1,f
  2508  046B  2C68               	goto	u1717
  2509                           
  2510                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2511  046C  3030               	movlw	48
  2512  046D  120A  118A  276E  120A  118A  	fcall	_LCD_WriteCmd
  2513                           
  2514                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2515  0472  3099               	movlw	153
  2516  0473  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0474  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0475  00CF               	movwf	??_LCD_Init
  2519  0476                     u1727:	
  2520  0476  0BCF               	decfsz	??_LCD_Init,f
  2521  0477  2C76               	goto	u1727
  2522                           
  2523                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2524  0478  3030               	movlw	48
  2525  0479  120A  118A  276E  120A  118A  	fcall	_LCD_WriteCmd
  2526                           
  2527                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2528  047E  303D               	movlw	61
  2529  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0481  00CF               	movwf	??_LCD_Init
  2532  0482                     u1737:	
  2533  0482  0BCF               	decfsz	??_LCD_Init,f
  2534  0483  2C82               	goto	u1737
  2535                           
  2536                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2537  0484  3038               	movlw	56
  2538  0485  120A  118A  276E  120A  118A  	fcall	_LCD_WriteCmd
  2539                           
  2540                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2541  048A  303D               	movlw	61
  2542  048B  1283               	bcf	3,5	;RP0=0, select bank0
  2543  048C  1303               	bcf	3,6	;RP1=0, select bank0
  2544  048D  00CF               	movwf	??_LCD_Init
  2545  048E                     u1747:	
  2546  048E  0BCF               	decfsz	??_LCD_Init,f
  2547  048F  2C8E               	goto	u1747
  2548                           
  2549                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2550  0490  3001               	movlw	1
  2551  0491  120A  118A  276E  120A  118A  	fcall	_LCD_WriteCmd
  2552                           
  2553                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2554  0496  300C               	movlw	12
  2555  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0499  00D0               	movwf	??_LCD_Init+1
  2558  049A  30F7               	movlw	247
  2559  049B  00CF               	movwf	??_LCD_Init
  2560  049C                     u1757:	
  2561  049C  0BCF               	decfsz	??_LCD_Init,f
  2562  049D  2C9C               	goto	u1757
  2563  049E  0BD0               	decfsz	??_LCD_Init+1,f
  2564  049F  2C9C               	goto	u1757
  2565                           
  2566                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2567  04A0  300C               	movlw	12
  2568  04A1  120A  118A  276E  120A  118A  	fcall	_LCD_WriteCmd
  2569                           
  2570                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2571  04A6  303D               	movlw	61
  2572  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2573  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2574  04A9  00CF               	movwf	??_LCD_Init
  2575  04AA                     u1767:	
  2576  04AA  0BCF               	decfsz	??_LCD_Init,f
  2577  04AB  2CAA               	goto	u1767
  2578                           
  2579                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2580  04AC  3006               	movlw	6
  2581  04AD  120A  118A  276E  120A  118A  	fcall	_LCD_WriteCmd
  2582                           
  2583                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2584  04B2  303D               	movlw	61
  2585  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2586  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2587  04B5  00CF               	movwf	??_LCD_Init
  2588  04B6                     u1777:	
  2589  04B6  0BCF               	decfsz	??_LCD_Init,f
  2590  04B7  2CB6               	goto	u1777
  2591  04B8  0008               	return
  2592  04B9                     __end_of_LCD_Init:	
  2593                           
  2594                           	psect	text11
  2595  0726                     __ptext11:	
  2596 ;; *************** function _LCD_Cursor *****************
  2597 ;; Defined at:
  2598 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  Row             1    wreg     unsigned char 
  2601 ;;  Col             1   17[BANK0 ] unsigned char 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  Row             1   19[BANK0 ] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;		None               void
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2613 ;;      Params:         0       1       0       0       0
  2614 ;;      Locals:         0       1       0       0       0
  2615 ;;      Temps:          0       1       0       0       0
  2616 ;;      Totals:         0       3       0       0       0
  2617 ;;Total ram usage:        3 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    4
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           
  2628                           ;psect for function _LCD_Cursor
  2629  0726                     _LCD_Cursor:	
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  2633                           ;LCD_Cursor@Row stored from wreg
  2634  0726  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0727  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0728  00CF               	movwf	LCD_Cursor@Row
  2637                           
  2638                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  2639  0729  1009               	bcf	9,0	;volatile
  2640                           
  2641                           ;lcd.c: 14: if (Row == 0)
  2642  072A  08CF               	movf	LCD_Cursor@Row,f
  2643  072B  1D03               	skipz
  2644  072C  2F30               	goto	l1983
  2645                           
  2646                           ;lcd.c: 15: {
  2647                           ;lcd.c: 16: PORTD = 0x80 + Col;
  2648  072D  084D               	movf	LCD_Cursor@Col,w
  2649  072E  3E80               	addlw	128
  2650  072F  2F32               	goto	L1
  2651  0730                     l1983:	
  2652                           ;lcd.c: 17: }
  2653                           
  2654                           
  2655                           ;lcd.c: 18: else
  2656                           ;lcd.c: 19: {
  2657                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  2658  0730  084D               	movf	LCD_Cursor@Col,w
  2659  0731  3EC0               	addlw	192
  2660  0732                     L1:	
  2661  0732  0088               	movwf	8	;volatile
  2662                           
  2663                           ;lcd.c: 21: }
  2664                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  2665  0733  1489               	bsf	9,1	;volatile
  2666                           
  2667                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2668  0734  303D               	movlw	61
  2669  0735  00CE               	movwf	??_LCD_Cursor
  2670  0736                     u1787:	
  2671  0736  0BCE               	decfsz	??_LCD_Cursor,f
  2672  0737  2F36               	goto	u1787
  2673                           
  2674                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  2675  0738  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0739  1303               	bcf	3,6	;RP1=0, select bank0
  2677  073A  1089               	bcf	9,1	;volatile
  2678  073B  0008               	return
  2679  073C                     __end_of_LCD_Cursor:	
  2680                           
  2681                           	psect	text12
  2682  060C                     __ptext12:	
  2683 ;; *************** function _LCD_Clear *****************
  2684 ;; Defined at:
  2685 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;		None               void
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0
  2701 ;;      Temps:          0       2       0       0       0
  2702 ;;      Totals:         0       2       0       0       0
  2703 ;;Total ram usage:        2 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    5
  2706 ;; This function calls:
  2707 ;;		_LCD_WriteCmd
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _LCD_Clear
  2715  060C                     _LCD_Clear:	
  2716                           
  2717                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2721  060C  3001               	movlw	1
  2722  060D  120A  118A  276E  120A  118A  	fcall	_LCD_WriteCmd
  2723                           
  2724                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  2725  0612  300C               	movlw	12
  2726  0613  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0614  1303               	bcf	3,6	;RP1=0, select bank0
  2728  0615  00D0               	movwf	??_LCD_Clear+1
  2729  0616  30F7               	movlw	247
  2730  0617  00CF               	movwf	??_LCD_Clear
  2731  0618                     u1797:	
  2732  0618  0BCF               	decfsz	??_LCD_Clear,f
  2733  0619  2E18               	goto	u1797
  2734  061A  0BD0               	decfsz	??_LCD_Clear+1,f
  2735  061B  2E18               	goto	u1797
  2736                           
  2737                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  2738  061C  300C               	movlw	12
  2739  061D  120A  118A  276E  120A  118A  	fcall	_LCD_WriteCmd
  2740                           
  2741                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2742  0622  303D               	movlw	61
  2743  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0625  00CF               	movwf	??_LCD_Clear
  2746  0626                     u1807:	
  2747  0626  0BCF               	decfsz	??_LCD_Clear,f
  2748  0627  2E26               	goto	u1807
  2749                           
  2750                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  2751  0628  3006               	movlw	6
  2752  0629  120A  118A  276E  120A  118A  	fcall	_LCD_WriteCmd
  2753                           
  2754                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2755  062E  303D               	movlw	61
  2756  062F  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0630  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0631  00CF               	movwf	??_LCD_Clear
  2759  0632                     u1817:	
  2760  0632  0BCF               	decfsz	??_LCD_Clear,f
  2761  0633  2E32               	goto	u1817
  2762  0634  0008               	return
  2763  0635                     __end_of_LCD_Clear:	
  2764                           
  2765                           	psect	text13
  2766  076E                     __ptext13:	
  2767 ;; *************** function _LCD_WriteCmd *****************
  2768 ;; Defined at:
  2769 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  Byte            1    wreg     unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  Byte            1   18[BANK0 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;		None               void
  2776 ;; Registers used:
  2777 ;;		wreg
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       0       0
  2784 ;;      Locals:         0       1       0       0       0
  2785 ;;      Temps:          0       1       0       0       0
  2786 ;;      Totals:         0       2       0       0       0
  2787 ;;Total ram usage:        2 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    4
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_LCD_Clear
  2794 ;;		_LCD_Init
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _LCD_WriteCmd
  2800  076E                     _LCD_WriteCmd:	
  2801                           
  2802                           ;incstack = 0
  2803                           ; Regs used in _LCD_WriteCmd: [wreg]
  2804                           ;LCD_WriteCmd@Byte stored from wreg
  2805  076E  1283               	bcf	3,5	;RP0=0, select bank0
  2806  076F  1303               	bcf	3,6	;RP1=0, select bank0
  2807  0770  00CE               	movwf	LCD_WriteCmd@Byte
  2808                           
  2809                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  2810  0771  1009               	bcf	9,0	;volatile
  2811                           
  2812                           ;lcd.c: 36: PORTD = Byte;
  2813  0772  084E               	movf	LCD_WriteCmd@Byte,w
  2814  0773  0088               	movwf	8	;volatile
  2815                           
  2816                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  2817  0774  1489               	bsf	9,1	;volatile
  2818                           
  2819                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2820  0775  303D               	movlw	61
  2821  0776  00CD               	movwf	??_LCD_WriteCmd
  2822  0777                     u1827:	
  2823  0777  0BCD               	decfsz	??_LCD_WriteCmd,f
  2824  0778  2F77               	goto	u1827
  2825                           
  2826                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  2827  0779  1283               	bcf	3,5	;RP0=0, select bank0
  2828  077A  1303               	bcf	3,6	;RP1=0, select bank0
  2829  077B  1089               	bcf	9,1	;volatile
  2830  077C  0008               	return
  2831  077D                     __end_of_LCD_WriteCmd:	
  2832                           
  2833                           	psect	text14
  2834  073C                     __ptext14:	
  2835 ;; *************** function _ADC_Init *****************
  2836 ;; Defined at:
  2837 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		None
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0
  2854 ;;      Totals:         0       0       0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    4
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _ADC_Init
  2867  073C                     _ADC_Init:	
  2868                           
  2869                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  2870                           
  2871                           ;incstack = 0
  2872                           ; Regs used in _ADC_Init: []
  2873  073C  1683               	bsf	3,5	;RP0=1, select bank1
  2874  073D  1303               	bcf	3,6	;RP1=0, select bank1
  2875  073E  179F               	bsf	31,7	;volatile
  2876                           
  2877                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  2878  073F  159F               	bsf	31,3	;volatile
  2879                           
  2880                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  2881  0740  151F               	bsf	31,2	;volatile
  2882                           
  2883                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  2884  0741  149F               	bsf	31,1	;volatile
  2885                           
  2886                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  2887  0742  101F               	bcf	31,0	;volatile
  2888                           
  2889                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  2890  0743  1283               	bcf	3,5	;RP0=0, select bank0
  2891  0744  1303               	bcf	3,6	;RP1=0, select bank0
  2892  0745  179F               	bsf	31,7	;volatile
  2893                           
  2894                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  2895  0746  131F               	bcf	31,6	;volatile
  2896                           
  2897                           ;adc.c: 42: PIE1bits.ADIE = 0;
  2898  0747  1683               	bsf	3,5	;RP0=1, select bank1
  2899  0748  1303               	bcf	3,6	;RP1=0, select bank1
  2900  0749  130C               	bcf	12,6	;volatile
  2901                           
  2902                           ;adc.c: 43: PIR1bits.ADIF = 0;
  2903  074A  1283               	bcf	3,5	;RP0=0, select bank0
  2904  074B  1303               	bcf	3,6	;RP1=0, select bank0
  2905  074C  130C               	bcf	12,6	;volatile
  2906  074D  0008               	return
  2907  074E                     __end_of_ADC_Init:	
  2908                           
  2909                           	psect	text15
  2910  0042                     __ptext15:	
  2911 ;; *************** function _ISR *****************
  2912 ;; Defined at:
  2913 ;;		line 371 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;		None               void
  2920 ;; Registers used:
  2921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0
  2929 ;;      Temps:          0       4       0       0       0
  2930 ;;      Totals:         0       4       0       0       0
  2931 ;;Total ram usage:        4 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    3
  2934 ;; This function calls:
  2935 ;;		_Fuzzy
  2936 ;;		_USART_ReceiveChar
  2937 ;;		_USART_WriteString
  2938 ;;		___lwdiv
  2939 ;;		___wmul
  2940 ;;		_send
  2941 ;;		i1_PWM_DutyCycle2
  2942 ;;		i1_TIMER0_Set
  2943 ;; This function is called by:
  2944 ;;		Interrupt level 1
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _ISR
  2950  0042                     _ISR:	
  2951                           
  2952                           ;main.c: 374: if (PIR1bits.RCIF)
  2953  0042  1E8C               	btfss	12,5	;volatile
  2954  0043  28F7               	goto	i1l2097
  2955                           
  2956                           ;main.c: 375: {
  2957                           ;main.c: 376: if (USART_ReceiveChar() == '0')
  2958  0044  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  2959  0049  3A30               	xorlw	48
  2960  004A  1D03               	skipz
  2961  004B  285C               	goto	i1l2051
  2962                           
  2963                           ;main.c: 377: {
  2964                           ;main.c: 378: USART_WriteString("\n\rdesligado\n\r");
  2965  004C  303A               	movlw	(STR_1-__stringbase)& (0+255)
  2966  004D  120A  118A  26A1  120A  118A  	fcall	_USART_WriteString
  2967                           
  2968                           ;main.c: 380: PWM_DutyCycle2(0);
  2969  0052  3000               	movlw	0
  2970  0053  00F0               	movwf	i1PWM_DutyCycle2@valor
  2971  0054  3000               	movlw	0
  2972  0055  00F1               	movwf	i1PWM_DutyCycle2@valor+1
  2973  0056  120A  118A  26F3  120A  118A  	fcall	i1_PWM_DutyCycle2
  2974                           
  2975                           ;main.c: 381: return;
  2976  005B  2961               	goto	i1l158
  2977  005C                     i1l2051:	
  2978                           
  2979                           ;main.c: 382: }
  2980                           ;main.c: 384: if (USART_ReceiveChar() == '1')
  2981  005C  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  2982  0061  3A31               	xorlw	49
  2983  0062  1D03               	skipz
  2984  0063  286A               	goto	i1l2055
  2985                           
  2986                           ;main.c: 385: {
  2987                           ;main.c: 386: setpointUI = 720;
  2988  0064  30D0               	movlw	208
  2989  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0067  00B8               	movwf	_setpointUI
  2992  0068  3002               	movlw	2
  2993  0069  00B9               	movwf	_setpointUI+1
  2994  006A                     i1l2055:	
  2995                           
  2996                           ;main.c: 388: }
  2997                           ;main.c: 390: if (USART_ReceiveChar() == '2')
  2998  006A  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  2999  006F  3A32               	xorlw	50
  3000  0070  1D03               	skipz
  3001  0071  2878               	goto	i1l2059
  3002                           
  3003                           ;main.c: 391: {
  3004                           ;main.c: 392: setpointUI = 1450;
  3005  0072  30AA               	movlw	170
  3006  0073  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0074  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0075  00B8               	movwf	_setpointUI
  3009  0076  3005               	movlw	5
  3010  0077  00B9               	movwf	_setpointUI+1
  3011  0078                     i1l2059:	
  3012                           
  3013                           ;main.c: 394: }
  3014                           ;main.c: 396: if (USART_ReceiveChar() == '3')
  3015  0078  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  3016  007D  3A33               	xorlw	51
  3017  007E  1D03               	skipz
  3018  007F  2886               	goto	i1l2063
  3019                           
  3020                           ;main.c: 397: {
  3021                           ;main.c: 398: setpointUI = 2828;
  3022  0080  300C               	movlw	12
  3023  0081  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0082  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0083  00B8               	movwf	_setpointUI
  3026  0084  300B               	movlw	11
  3027  0085  00B9               	movwf	_setpointUI+1
  3028  0086                     i1l2063:	
  3029                           
  3030                           ;main.c: 400: }
  3031                           ;main.c: 402: if (USART_ReceiveChar() == '4')
  3032  0086  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  3033  008B  3A34               	xorlw	52
  3034  008C  1D03               	skipz
  3035  008D  2894               	goto	i1l2067
  3036                           
  3037                           ;main.c: 403: {
  3038                           ;main.c: 404: setpointUI = 3256;
  3039  008E  30B8               	movlw	184
  3040  008F  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0090  1303               	bcf	3,6	;RP1=0, select bank0
  3042  0091  00B8               	movwf	_setpointUI
  3043  0092  300C               	movlw	12
  3044  0093  00B9               	movwf	_setpointUI+1
  3045  0094                     i1l2067:	
  3046                           
  3047                           ;main.c: 406: }
  3048                           ;main.c: 408: if (USART_ReceiveChar() == '5')
  3049  0094  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  3050  0099  3A35               	xorlw	53
  3051  009A  1D03               	skipz
  3052  009B  28A2               	goto	i1l2071
  3053                           
  3054                           ;main.c: 409: {
  3055                           ;main.c: 410: setpointUI = 4510;
  3056  009C  309E               	movlw	158
  3057  009D  1283               	bcf	3,5	;RP0=0, select bank0
  3058  009E  1303               	bcf	3,6	;RP1=0, select bank0
  3059  009F  00B8               	movwf	_setpointUI
  3060  00A0  3011               	movlw	17
  3061  00A1  00B9               	movwf	_setpointUI+1
  3062  00A2                     i1l2071:	
  3063                           
  3064                           ;main.c: 412: }
  3065                           ;main.c: 414: if (USART_ReceiveChar() == '6')
  3066  00A2  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  3067  00A7  3A36               	xorlw	54
  3068  00A8  1D03               	skipz
  3069  00A9  28B0               	goto	i1l2075
  3070                           
  3071                           ;main.c: 415: {
  3072                           ;main.c: 416: setpointUI = 5760;
  3073  00AA  3080               	movlw	128
  3074  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  3075  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  3076  00AD  00B8               	movwf	_setpointUI
  3077  00AE  3016               	movlw	22
  3078  00AF  00B9               	movwf	_setpointUI+1
  3079  00B0                     i1l2075:	
  3080                           
  3081                           ;main.c: 418: }
  3082                           ;main.c: 420: if (USART_ReceiveChar() == '7')
  3083  00B0  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  3084  00B5  3A37               	xorlw	55
  3085  00B6  1D03               	skipz
  3086  00B7  28BE               	goto	i1l2079
  3087                           
  3088                           ;main.c: 421: {
  3089                           ;main.c: 422: setpointUI = 6890;
  3090  00B8  30EA               	movlw	234
  3091  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  3092  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  3093  00BB  00B8               	movwf	_setpointUI
  3094  00BC  301A               	movlw	26
  3095  00BD  00B9               	movwf	_setpointUI+1
  3096  00BE                     i1l2079:	
  3097                           
  3098                           ;main.c: 424: }
  3099                           ;main.c: 426: if (USART_ReceiveChar() == '8')
  3100  00BE  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  3101  00C3  3A38               	xorlw	56
  3102  00C4  1D03               	skipz
  3103  00C5  28CC               	goto	i1l2083
  3104                           
  3105                           ;main.c: 427: {
  3106                           ;main.c: 428: setpointUI = 8100;
  3107  00C6  30A4               	movlw	164
  3108  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  3109  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  3110  00C9  00B8               	movwf	_setpointUI
  3111  00CA  301F               	movlw	31
  3112  00CB  00B9               	movwf	_setpointUI+1
  3113  00CC                     i1l2083:	
  3114                           
  3115                           ;main.c: 430: }
  3116                           ;main.c: 432: if (USART_ReceiveChar() == '9')
  3117  00CC  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  3118  00D1  3A39               	xorlw	57
  3119  00D2  1D03               	skipz
  3120  00D3  28DA               	goto	i1l2087
  3121                           
  3122                           ;main.c: 433: {
  3123                           ;main.c: 434: setpointUI = 9000;
  3124  00D4  3028               	movlw	40
  3125  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  3126  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  3127  00D7  00B8               	movwf	_setpointUI
  3128  00D8  3023               	movlw	35
  3129  00D9  00B9               	movwf	_setpointUI+1
  3130  00DA                     i1l2087:	
  3131                           
  3132                           ;main.c: 436: }
  3133                           ;main.c: 440: Fuzzy();
  3134  00DA  120A  118A  24B9  120A  118A  	fcall	_Fuzzy
  3135                           
  3136                           ;main.c: 441: antigoUI = setpointUI;
  3137  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  3138  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  3139  00E1  0839               	movf	_setpointUI+1,w
  3140  00E2  01AF               	clrf	_antigoUI+1
  3141  00E3  07AF               	addwf	_antigoUI+1,f
  3142  00E4  0838               	movf	_setpointUI,w
  3143  00E5  01AE               	clrf	_antigoUI
  3144  00E6  07AE               	addwf	_antigoUI,f
  3145                           
  3146                           ;main.c: 444: if(USART_ReceiveChar() == 'X')
  3147  00E7  120A  118A  270E  120A  118A  	fcall	_USART_ReceiveChar
  3148  00EC  3A58               	xorlw	88
  3149  00ED  1D03               	skipz
  3150  00EE  28F4               	goto	i1l2095
  3151                           
  3152                           ;main.c: 445: {
  3153                           ;main.c: 446: send();
  3154  00EF  120A  118A  2247  120A  118A  	fcall	_send
  3155  00F4                     i1l2095:	
  3156                           
  3157                           ;main.c: 447: }
  3158                           ;main.c: 449: PIR1bits.RCIF = 0;
  3159  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  3160  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  3161  00F6  128C               	bcf	12,5	;volatile
  3162  00F7                     i1l2097:	
  3163                           
  3164                           ;main.c: 450: }
  3165                           ;main.c: 453: if (PIR1bits.ADIF)
  3166  00F7  1B0C               	btfsc	12,6	;volatile
  3167                           
  3168                           ;main.c: 454: {
  3169                           ;main.c: 458: PIR1bits.ADIF = 0;
  3170  00F8  130C               	bcf	12,6	;volatile
  3171                           
  3172                           ;main.c: 459: }
  3173                           ;main.c: 463: if (INTCONbits.T0IF)
  3174  00F9  1D0B               	btfss	11,2	;volatile
  3175  00FA  295D               	goto	i1l2125
  3176                           
  3177                           ;main.c: 464: {
  3178                           ;main.c: 466: TIMER0_Set(238);
  3179  00FB  30EE               	movlw	238
  3180  00FC  120A  118A  27A5  120A  118A  	fcall	i1_TIMER0_Set
  3181                           
  3182                           ;main.c: 469: if (contagens_tm0 < 499)
  3183  0101  3001               	movlw	1
  3184  0102  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0103  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0104  0231               	subwf	_contagens_tm0+1,w
  3187  0105  30F3               	movlw	243
  3188  0106  1903               	skipnz
  3189  0107  0230               	subwf	_contagens_tm0,w
  3190  0108  1803               	skipnc
  3191  0109  2912               	goto	i1l2109
  3192                           
  3193                           ;main.c: 470: {
  3194                           ;main.c: 472: contagens_tm0++;
  3195  010A  3001               	movlw	1
  3196  010B  07B0               	addwf	_contagens_tm0,f
  3197  010C  1803               	skipnc
  3198  010D  0AB1               	incf	_contagens_tm0+1,f
  3199  010E  3000               	movlw	0
  3200  010F  07B1               	addwf	_contagens_tm0+1,f
  3201                           
  3202                           ;main.c: 475: PORTBbits.RB6 = 1;
  3203  0110  1706               	bsf	6,6	;volatile
  3204                           
  3205                           ;main.c: 476: }
  3206  0111  295C               	goto	i1l2123
  3207  0112                     i1l2109:	
  3208                           
  3209                           ;main.c: 477: else
  3210                           ;main.c: 478: {
  3211                           ;main.c: 480: contagens_tm0 = 0;
  3212  0112  01B0               	clrf	_contagens_tm0
  3213  0113  01B1               	clrf	_contagens_tm0+1
  3214                           
  3215                           ;main.c: 483: pulsos = (TMR1H << 8) + TMR1L;
  3216  0114  080F               	movf	15,w	;volatile
  3217  0115  01B5               	clrf	_pulsos+1
  3218  0116  07B5               	addwf	_pulsos+1,f
  3219  0117  080E               	movf	14,w	;volatile
  3220  0118  01B4               	clrf	_pulsos
  3221  0119  07B4               	addwf	_pulsos,f
  3222                           
  3223                           ;main.c: 484: rpm = ((pulsos / pas_cooler) * 120);
  3224  011A  085A               	movf	_pas_cooler+1,w
  3225  011B  01F1               	clrf	___lwdiv@divisor+1
  3226  011C  07F1               	addwf	___lwdiv@divisor+1,f
  3227  011D  0859               	movf	_pas_cooler,w
  3228  011E  01F0               	clrf	___lwdiv@divisor
  3229  011F  07F0               	addwf	___lwdiv@divisor,f
  3230  0120  0835               	movf	_pulsos+1,w
  3231  0121  01F3               	clrf	___lwdiv@dividend+1
  3232  0122  07F3               	addwf	___lwdiv@dividend+1,f
  3233  0123  0834               	movf	_pulsos,w
  3234  0124  01F2               	clrf	___lwdiv@dividend
  3235  0125  07F2               	addwf	___lwdiv@dividend,f
  3236  0126  120A  118A  25CE  120A  118A  	fcall	___lwdiv
  3237  012B  0871               	movf	?___lwdiv+1,w
  3238  012C  01F9               	clrf	___wmul@multiplier+1
  3239  012D  07F9               	addwf	___wmul@multiplier+1,f
  3240  012E  0870               	movf	?___lwdiv,w
  3241  012F  01F8               	clrf	___wmul@multiplier
  3242  0130  07F8               	addwf	___wmul@multiplier,f
  3243  0131  3078               	movlw	120
  3244  0132  00FA               	movwf	___wmul@multiplicand
  3245  0133  3000               	movlw	0
  3246  0134  00FB               	movwf	___wmul@multiplicand+1
  3247  0135  120A  118A  267E  120A  118A  	fcall	___wmul
  3248  013A  0879               	movf	?___wmul+1,w
  3249  013B  1283               	bcf	3,5	;RP0=0, select bank0
  3250  013C  1303               	bcf	3,6	;RP1=0, select bank0
  3251  013D  01B7               	clrf	_rpm+1
  3252  013E  07B7               	addwf	_rpm+1,f
  3253  013F  0878               	movf	?___wmul,w
  3254  0140  01B6               	clrf	_rpm
  3255  0141  07B6               	addwf	_rpm,f
  3256                           
  3257                           ;main.c: 488: rpm = rpm / 40;
  3258  0142  3028               	movlw	40
  3259  0143  00F0               	movwf	___lwdiv@divisor
  3260  0144  3000               	movlw	0
  3261  0145  00F1               	movwf	___lwdiv@divisor+1
  3262  0146  0837               	movf	_rpm+1,w
  3263  0147  01F3               	clrf	___lwdiv@dividend+1
  3264  0148  07F3               	addwf	___lwdiv@dividend+1,f
  3265  0149  0836               	movf	_rpm,w
  3266  014A  01F2               	clrf	___lwdiv@dividend
  3267  014B  07F2               	addwf	___lwdiv@dividend,f
  3268  014C  120A  118A  25CE  120A  118A  	fcall	___lwdiv
  3269  0151  0871               	movf	?___lwdiv+1,w
  3270  0152  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0153  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0154  01B7               	clrf	_rpm+1
  3273  0155  07B7               	addwf	_rpm+1,f
  3274  0156  0870               	movf	?___lwdiv,w
  3275  0157  01B6               	clrf	_rpm
  3276  0158  07B6               	addwf	_rpm,f
  3277                           
  3278                           ;main.c: 491: TMR1L = 0x00;
  3279  0159  018E               	clrf	14	;volatile
  3280                           
  3281                           ;main.c: 492: TMR1H = 0x00;
  3282  015A  018F               	clrf	15	;volatile
  3283                           
  3284                           ;main.c: 495: PORTBbits.RB6 = 0;
  3285  015B  1306               	bcf	6,6	;volatile
  3286  015C                     i1l2123:	
  3287                           
  3288                           ;main.c: 496: }
  3289                           ;main.c: 499: INTCONbits.T0IF = 0;
  3290  015C  110B               	bcf	11,2	;volatile
  3291  015D                     i1l2125:	
  3292                           
  3293                           ;main.c: 500: }
  3294                           ;main.c: 503: if (PIR1bits.TMR1IF)
  3295  015D  180C               	btfsc	12,0	;volatile
  3296                           
  3297                           ;main.c: 504: {
  3298                           ;main.c: 508: PIR1bits.TMR1IF = 0;
  3299  015E  100C               	bcf	12,0	;volatile
  3300                           
  3301                           ;main.c: 509: }
  3302                           ;main.c: 512: if (PIR1bits.SSPIF)
  3303  015F  198C               	btfsc	12,3	;volatile
  3304                           
  3305                           ;main.c: 513: {
  3306                           ;main.c: 517: PIR1bits.SSPIF = 0;
  3307  0160  118C               	bcf	12,3	;volatile
  3308  0161                     i1l158:	
  3309  0161  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0162  1303               	bcf	3,6	;RP1=0, select bank0
  3311  0163  084C               	movf	??_ISR+3,w
  3312  0164  00FF               	movwf	127
  3313  0165  084B               	movf	??_ISR+2,w
  3314  0166  008A               	movwf	10
  3315  0167  084A               	movf	??_ISR+1,w
  3316  0168  0084               	movwf	4
  3317  0169  0E49               	swapf	??_ISR^0,w
  3318  016A  0083               	movwf	3
  3319  016B  0EFE               	swapf	126,f
  3320  016C  0E7E               	swapf	126,w
  3321  016D  0009               	retfie
  3322  016E                     __end_of_ISR:	
  3323                           
  3324                           	psect	intentry
  3325  0004                     __pintentry:	
  3326                           ;incstack = 0
  3327                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3328                           
  3329  0004                     interrupt_function:	
  3330  007E                     saved_w	set	btemp
  3331  0004  00FE               	movwf	btemp
  3332  0005  0E03               	swapf	3,w
  3333  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3335  0008  00C9               	movwf	??_ISR
  3336  0009  0804               	movf	4,w
  3337  000A  00CA               	movwf	??_ISR+1
  3338  000B  080A               	movf	10,w
  3339  000C  00CB               	movwf	??_ISR+2
  3340  000D  087F               	movf	btemp+1,w
  3341  000E  00CC               	movwf	??_ISR+3
  3342  000F  120A  118A  2842   	ljmp	_ISR
  3343                           
  3344                           	psect	text16
  3345  07A5                     __ptext16:	
  3346 ;; *************** function i1_TIMER0_Set *****************
  3347 ;; Defined at:
  3348 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  contagens       1    wreg     unsigned char 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  contagens       1    0[COMMON] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;		None               void
  3355 ;; Registers used:
  3356 ;;		wreg
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3362 ;;      Params:         0       0       0       0       0
  3363 ;;      Locals:         1       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0
  3365 ;;      Totals:         1       0       0       0       0
  3366 ;;Total ram usage:        1 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_ISR
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function i1_TIMER0_Set
  3377  07A5                     i1_TIMER0_Set:	
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in i1_TIMER0_Set: [wreg]
  3381                           ;i1TIMER0_Set@contagens stored from wreg
  3382  07A5  00F0               	movwf	i1TIMER0_Set@contagens
  3383                           
  3384                           ;timers.c: 22: TMR0 = contagens;
  3385  07A6  0870               	movf	i1TIMER0_Set@contagens,w
  3386  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  3387  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  3388  07A9  0081               	movwf	1	;volatile
  3389  07AA  0008               	return
  3390  07AB                     __end_ofi1_TIMER0_Set:	
  3391                           
  3392                           	psect	text17
  3393  0247                     __ptext17:	
  3394 ;; *************** function _send *****************
  3395 ;; Defined at:
  3396 ;;		line 105 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  index           1    4[BANK0 ] unsigned char 
  3401 ;;  velocidade      2    2[BANK0 ] unsigned int 
  3402 ;;  checksum        1    1[BANK0 ] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;		None               void
  3405 ;; Registers used:
  3406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3412 ;;      Params:         0       0       0       0       0
  3413 ;;      Locals:         0       4       0       0       0
  3414 ;;      Temps:          0       1       0       0       0
  3415 ;;      Totals:         0       5       0       0       0
  3416 ;;Total ram usage:        5 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    1
  3419 ;; This function calls:
  3420 ;;		_USART_WriteChar
  3421 ;;		___wmul
  3422 ;; This function is called by:
  3423 ;;		_ISR
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _send
  3429  0247                     _send:	
  3430                           
  3431                           ;main.c: 108: buffer[0] = '#';
  3432                           
  3433                           ;incstack = 0
  3434                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3435  0247  3023               	movlw	35
  3436  0248  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0249  1303               	bcf	3,6	;RP1=0, select bank0
  3438  024A  00BC               	movwf	??_send
  3439  024B  083C               	movf	??_send,w
  3440  024C  1683               	bsf	3,5	;RP0=1, select bank1
  3441  024D  1303               	bcf	3,6	;RP1=0, select bank1
  3442  024E  00A0               	movwf	_buffer^(0+128)
  3443                           
  3444                           ;main.c: 109: buffer[1] = '$';
  3445  024F  3024               	movlw	36
  3446  0250  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0251  1303               	bcf	3,6	;RP1=0, select bank0
  3448  0252  00BC               	movwf	??_send
  3449  0253  083C               	movf	??_send,w
  3450  0254  1683               	bsf	3,5	;RP0=1, select bank1
  3451  0255  1303               	bcf	3,6	;RP1=0, select bank1
  3452  0256  00A1               	movwf	(_buffer^(0+128)+1)
  3453                           
  3454                           ;main.c: 110: buffer[2] = ':';
  3455  0257  303A               	movlw	58
  3456  0258  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0259  1303               	bcf	3,6	;RP1=0, select bank0
  3458  025A  00BC               	movwf	??_send
  3459  025B  083C               	movf	??_send,w
  3460  025C  1683               	bsf	3,5	;RP0=1, select bank1
  3461  025D  1303               	bcf	3,6	;RP1=0, select bank1
  3462  025E  00A2               	movwf	(_buffer^(0+128)+2)
  3463                           
  3464                           ;main.c: 112: unsigned int velocidade = rpm * 40;
  3465  025F  1283               	bcf	3,5	;RP0=0, select bank0
  3466  0260  1303               	bcf	3,6	;RP1=0, select bank0
  3467  0261  0837               	movf	_rpm+1,w
  3468  0262  01F9               	clrf	___wmul@multiplier+1
  3469  0263  07F9               	addwf	___wmul@multiplier+1,f
  3470  0264  0836               	movf	_rpm,w
  3471  0265  01F8               	clrf	___wmul@multiplier
  3472  0266  07F8               	addwf	___wmul@multiplier,f
  3473  0267  3028               	movlw	40
  3474  0268  00FA               	movwf	___wmul@multiplicand
  3475  0269  3000               	movlw	0
  3476  026A  00FB               	movwf	___wmul@multiplicand+1
  3477  026B  120A  118A  267E  120A  118A  	fcall	___wmul
  3478  0270  0879               	movf	?___wmul+1,w
  3479  0271  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0272  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0273  01BF               	clrf	send@velocidade+1
  3482  0274  07BF               	addwf	send@velocidade+1,f
  3483  0275  0878               	movf	?___wmul,w
  3484  0276  01BE               	clrf	send@velocidade
  3485  0277  07BE               	addwf	send@velocidade,f
  3486                           
  3487                           ;main.c: 114: buffer[3] = (velocidade >> 8) & 0xFF;
  3488  0278  083F               	movf	send@velocidade+1,w
  3489  0279  00BC               	movwf	??_send
  3490  027A  083C               	movf	??_send,w
  3491  027B  1683               	bsf	3,5	;RP0=1, select bank1
  3492  027C  1303               	bcf	3,6	;RP1=0, select bank1
  3493  027D  00A3               	movwf	(_buffer^(0+128)+3)
  3494                           
  3495                           ;main.c: 115: buffer[4] = velocidade & 0xFF;
  3496  027E  1283               	bcf	3,5	;RP0=0, select bank0
  3497  027F  1303               	bcf	3,6	;RP1=0, select bank0
  3498  0280  083E               	movf	send@velocidade,w
  3499  0281  00BC               	movwf	??_send
  3500  0282  083C               	movf	??_send,w
  3501  0283  1683               	bsf	3,5	;RP0=1, select bank1
  3502  0284  1303               	bcf	3,6	;RP1=0, select bank1
  3503  0285  00A4               	movwf	(_buffer^(0+128)+4)
  3504                           
  3505                           ;main.c: 116: buffer[5] = 'V';
  3506  0286  3056               	movlw	86
  3507  0287  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0288  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0289  00BC               	movwf	??_send
  3510  028A  083C               	movf	??_send,w
  3511  028B  1683               	bsf	3,5	;RP0=1, select bank1
  3512  028C  1303               	bcf	3,6	;RP1=0, select bank1
  3513  028D  00A5               	movwf	(_buffer^(0+128)+5)
  3514                           
  3515                           ;main.c: 119: buffer[6] = (setpointUI >> 8) & 0xFF;
  3516  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3517  028F  1303               	bcf	3,6	;RP1=0, select bank0
  3518  0290  0839               	movf	_setpointUI+1,w
  3519  0291  00BC               	movwf	??_send
  3520  0292  083C               	movf	??_send,w
  3521  0293  1683               	bsf	3,5	;RP0=1, select bank1
  3522  0294  1303               	bcf	3,6	;RP1=0, select bank1
  3523  0295  00A6               	movwf	(_buffer^(0+128)+6)
  3524                           
  3525                           ;main.c: 120: buffer[7] = setpointUI & 0xFF;
  3526  0296  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0297  1303               	bcf	3,6	;RP1=0, select bank0
  3528  0298  0838               	movf	_setpointUI,w
  3529  0299  00BC               	movwf	??_send
  3530  029A  083C               	movf	??_send,w
  3531  029B  1683               	bsf	3,5	;RP0=1, select bank1
  3532  029C  1303               	bcf	3,6	;RP1=0, select bank1
  3533  029D  00A7               	movwf	(_buffer^(0+128)+7)
  3534                           
  3535                           ;main.c: 121: buffer[8] = 'S';
  3536  029E  3053               	movlw	83
  3537  029F  1283               	bcf	3,5	;RP0=0, select bank0
  3538  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  3539  02A1  00BC               	movwf	??_send
  3540  02A2  083C               	movf	??_send,w
  3541  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  3542  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  3543  02A5  00A8               	movwf	(_buffer^(0+128)+8)
  3544                           
  3545                           ;main.c: 124: buffer[9] = (deltaV >> 8) & 0xFF;
  3546  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  3547  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  3548  02A8  0833               	movf	_deltaV+1,w
  3549  02A9  00BC               	movwf	??_send
  3550  02AA  083C               	movf	??_send,w
  3551  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  3552  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  3553  02AD  00A9               	movwf	(_buffer^(0+128)+9)
  3554                           
  3555                           ;main.c: 125: buffer[10] = deltaV & 0xFF;
  3556  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  3557  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  3558  02B0  0832               	movf	_deltaV,w
  3559  02B1  00BC               	movwf	??_send
  3560  02B2  083C               	movf	??_send,w
  3561  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  3562  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  3563  02B5  00AA               	movwf	(_buffer^(0+128)+10)
  3564                           
  3565                           ;main.c: 126: buffer[11] = 'S';
  3566  02B6  3053               	movlw	83
  3567  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  3568  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  3569  02B9  00BC               	movwf	??_send
  3570  02BA  083C               	movf	??_send,w
  3571  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  3572  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  3573  02BD  00AB               	movwf	(_buffer^(0+128)+11)
  3574                           
  3575                           ;main.c: 129: buffer[12] = (antigoUI >> 8) & 0xFF;
  3576  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  3577  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  3578  02C0  082F               	movf	_antigoUI+1,w
  3579  02C1  00BC               	movwf	??_send
  3580  02C2  083C               	movf	??_send,w
  3581  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  3582  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  3583  02C5  00AC               	movwf	(_buffer^(0+128)+12)
  3584                           
  3585                           ;main.c: 130: buffer[13] = antigoUI & 0xFF;
  3586  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  3587  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  3588  02C8  082E               	movf	_antigoUI,w
  3589  02C9  00BC               	movwf	??_send
  3590  02CA  083C               	movf	??_send,w
  3591  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  3592  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  3593  02CD  00AD               	movwf	(_buffer^(0+128)+13)
  3594                           
  3595                           ;main.c: 131: buffer[14] = 'S';
  3596  02CE  3053               	movlw	83
  3597  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3598  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  3599  02D1  00BC               	movwf	??_send
  3600  02D2  083C               	movf	??_send,w
  3601  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  3602  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  3603  02D5  00AE               	movwf	(_buffer^(0+128)+14)
  3604                           
  3605                           ;main.c: 133: unsigned char checksum = 0x00;
  3606  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  3607  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  3608  02D8  01BD               	clrf	send@checksum
  3609                           
  3610                           ;main.c: 134: for (unsigned char index = 0; index < 15; index++)
  3611  02D9  01C0               	clrf	send@index
  3612  02DA  300F               	movlw	15
  3613  02DB  0240               	subwf	send@index,w
  3614  02DC  1803               	btfsc	3,0
  3615  02DD  2AFA               	goto	i1l1819
  3616  02DE                     i1l1811:	
  3617                           
  3618                           ;main.c: 135: {
  3619                           ;main.c: 136: USART_WriteChar(buffer[index]);
  3620  02DE  0840               	movf	send@index,w
  3621  02DF  3EA0               	addlw	_buffer& (0+255)
  3622  02E0  0084               	movwf	4
  3623  02E1  1383               	bcf	3,7	;select IRP bank1
  3624  02E2  0800               	movf	0,w
  3625  02E3  120A  118A  2790  120A  118A  	fcall	_USART_WriteChar
  3626                           
  3627                           ;main.c: 137: checksum ^= buffer[index];
  3628  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  3629  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  3630  02EA  0840               	movf	send@index,w
  3631  02EB  3EA0               	addlw	_buffer& (0+255)
  3632  02EC  0084               	movwf	4
  3633  02ED  1383               	bcf	3,7	;select IRP bank1
  3634  02EE  0800               	movf	0,w
  3635  02EF  00BC               	movwf	??_send
  3636  02F0  083C               	movf	??_send,w
  3637  02F1  06BD               	xorwf	send@checksum,f
  3638  02F2  3001               	movlw	1
  3639  02F3  00BC               	movwf	??_send
  3640  02F4  083C               	movf	??_send,w
  3641  02F5  07C0               	addwf	send@index,f
  3642  02F6  300F               	movlw	15
  3643  02F7  0240               	subwf	send@index,w
  3644  02F8  1C03               	skipc
  3645  02F9  2ADE               	goto	i1l1811
  3646  02FA                     i1l1819:	
  3647                           
  3648                           ;main.c: 138: }
  3649                           ;main.c: 139: buffer[15] = checksum;
  3650  02FA  083D               	movf	send@checksum,w
  3651  02FB  00BC               	movwf	??_send
  3652  02FC  083C               	movf	??_send,w
  3653  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  3654  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  3655  02FF  00AF               	movwf	(_buffer^(0+128)+15)
  3656                           
  3657                           ;main.c: 140: USART_WriteChar(buffer[15]);
  3658  0300  082F               	movf	(_buffer^(0+128)+15),w
  3659  0301  120A  118A  2790   	fcall	_USART_WriteChar
  3660  0304  0008               	return
  3661  0305                     __end_of_send:	
  3662                           
  3663                           	psect	text18
  3664  067E                     __ptext18:	
  3665 ;; *************** function ___wmul *****************
  3666 ;; Defined at:
  3667 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  multiplier      2    8[COMMON] unsigned int 
  3670 ;;  multiplicand    2   10[COMMON] unsigned int 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  product         2   12[COMMON] unsigned int 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  2    8[COMMON] unsigned int 
  3675 ;; Registers used:
  3676 ;;		wreg, status,2, status,0
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3682 ;;      Params:         4       0       0       0       0
  3683 ;;      Locals:         2       0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0
  3685 ;;      Totals:         6       0       0       0       0
  3686 ;;Total ram usage:        6 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_send
  3692 ;;		_ISR
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           
  3697                           ;psect for function ___wmul
  3698  067E                     ___wmul:	
  3699                           
  3700                           ;incstack = 0
  3701                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3702  067E  01FC               	clrf	___wmul@product
  3703  067F  01FD               	clrf	___wmul@product+1
  3704  0680                     i1l1677:	
  3705  0680  1C78               	btfss	___wmul@multiplier,0
  3706  0681  2E88               	goto	i1l522
  3707  0682  087A               	movf	___wmul@multiplicand,w
  3708  0683  07FC               	addwf	___wmul@product,f
  3709  0684  1803               	skipnc
  3710  0685  0AFD               	incf	___wmul@product+1,f
  3711  0686  087B               	movf	___wmul@multiplicand+1,w
  3712  0687  07FD               	addwf	___wmul@product+1,f
  3713  0688                     i1l522:	
  3714  0688  3001               	movlw	1
  3715  0689                     u95_25:	
  3716  0689  1003               	clrc
  3717  068A  0DFA               	rlf	___wmul@multiplicand,f
  3718  068B  0DFB               	rlf	___wmul@multiplicand+1,f
  3719  068C  3EFF               	addlw	-1
  3720  068D  1D03               	skipz
  3721  068E  2E89               	goto	u95_25
  3722  068F  3001               	movlw	1
  3723  0690                     u96_25:	
  3724  0690  1003               	clrc
  3725  0691  0CF9               	rrf	___wmul@multiplier+1,f
  3726  0692  0CF8               	rrf	___wmul@multiplier,f
  3727  0693  3EFF               	addlw	-1
  3728  0694  1D03               	skipz
  3729  0695  2E90               	goto	u96_25
  3730  0696  0879               	movf	___wmul@multiplier+1,w
  3731  0697  0478               	iorwf	___wmul@multiplier,w
  3732  0698  1D03               	skipz
  3733  0699  2E80               	goto	i1l1677
  3734  069A  087D               	movf	___wmul@product+1,w
  3735  069B  01F9               	clrf	?___wmul+1
  3736  069C  07F9               	addwf	?___wmul+1,f
  3737  069D  087C               	movf	___wmul@product,w
  3738  069E  01F8               	clrf	?___wmul
  3739  069F  07F8               	addwf	?___wmul,f
  3740  06A0  0008               	return
  3741  06A1                     __end_of___wmul:	
  3742                           
  3743                           	psect	text19
  3744  05CE                     __ptext19:	
  3745 ;; *************** function ___lwdiv *****************
  3746 ;; Defined at:
  3747 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  divisor         2    0[COMMON] unsigned int 
  3750 ;;  dividend        2    2[COMMON] unsigned int 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  quotient        2    5[COMMON] unsigned int 
  3753 ;;  counter         1    7[COMMON] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  2    0[COMMON] unsigned int 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         4       0       0       0       0
  3764 ;;      Locals:         3       0       0       0       0
  3765 ;;      Temps:          1       0       0       0       0
  3766 ;;      Totals:         8       0       0       0       0
  3767 ;;Total ram usage:        8 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_ISR
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function ___lwdiv
  3778  05CE                     ___lwdiv:	
  3779                           
  3780                           ;incstack = 0
  3781                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3782  05CE  01F5               	clrf	___lwdiv@quotient
  3783  05CF  01F6               	clrf	___lwdiv@quotient+1
  3784  05D0  0871               	movf	___lwdiv@divisor+1,w
  3785  05D1  0470               	iorwf	___lwdiv@divisor,w
  3786  05D2  1903               	skipnz
  3787  05D3  2E05               	goto	i1l2035
  3788  05D4  01F7               	clrf	___lwdiv@counter
  3789  05D5  0AF7               	incf	___lwdiv@counter,f
  3790  05D6                     i1l2023:	
  3791  05D6  1BF1               	btfsc	___lwdiv@divisor+1,7
  3792  05D7  2DE4               	goto	i1l2025
  3793  05D8  3001               	movlw	1
  3794  05D9                     u133_25:	
  3795  05D9  1003               	clrc
  3796  05DA  0DF0               	rlf	___lwdiv@divisor,f
  3797  05DB  0DF1               	rlf	___lwdiv@divisor+1,f
  3798  05DC  3EFF               	addlw	-1
  3799  05DD  1D03               	skipz
  3800  05DE  2DD9               	goto	u133_25
  3801  05DF  3001               	movlw	1
  3802  05E0  00F4               	movwf	??___lwdiv
  3803  05E1  0874               	movf	??___lwdiv,w
  3804  05E2  07F7               	addwf	___lwdiv@counter,f
  3805  05E3  2DD6               	goto	i1l2023
  3806  05E4                     i1l2025:	
  3807  05E4  3001               	movlw	1
  3808  05E5                     u135_25:	
  3809  05E5  1003               	clrc
  3810  05E6  0DF5               	rlf	___lwdiv@quotient,f
  3811  05E7  0DF6               	rlf	___lwdiv@quotient+1,f
  3812  05E8  3EFF               	addlw	-1
  3813  05E9  1D03               	skipz
  3814  05EA  2DE5               	goto	u135_25
  3815  05EB  0871               	movf	___lwdiv@divisor+1,w
  3816  05EC  0273               	subwf	___lwdiv@dividend+1,w
  3817  05ED  1D03               	skipz
  3818  05EE  2DF1               	goto	u136_25
  3819  05EF  0870               	movf	___lwdiv@divisor,w
  3820  05F0  0272               	subwf	___lwdiv@dividend,w
  3821  05F1                     u136_25:	
  3822  05F1  1C03               	skipc
  3823  05F2  2DFA               	goto	i1l2031
  3824  05F3  0870               	movf	___lwdiv@divisor,w
  3825  05F4  02F2               	subwf	___lwdiv@dividend,f
  3826  05F5  0871               	movf	___lwdiv@divisor+1,w
  3827  05F6  1C03               	skipc
  3828  05F7  03F3               	decf	___lwdiv@dividend+1,f
  3829  05F8  02F3               	subwf	___lwdiv@dividend+1,f
  3830  05F9  1475               	bsf	___lwdiv@quotient,0
  3831  05FA                     i1l2031:	
  3832  05FA  3001               	movlw	1
  3833  05FB                     u137_25:	
  3834  05FB  1003               	clrc
  3835  05FC  0CF1               	rrf	___lwdiv@divisor+1,f
  3836  05FD  0CF0               	rrf	___lwdiv@divisor,f
  3837  05FE  3EFF               	addlw	-1
  3838  05FF  1D03               	skipz
  3839  0600  2DFB               	goto	u137_25
  3840  0601  3001               	movlw	1
  3841  0602  02F7               	subwf	___lwdiv@counter,f
  3842  0603  1D03               	btfss	3,2
  3843  0604  2DE4               	goto	i1l2025
  3844  0605                     i1l2035:	
  3845  0605  0876               	movf	___lwdiv@quotient+1,w
  3846  0606  01F1               	clrf	?___lwdiv+1
  3847  0607  07F1               	addwf	?___lwdiv+1,f
  3848  0608  0875               	movf	___lwdiv@quotient,w
  3849  0609  01F0               	clrf	?___lwdiv
  3850  060A  07F0               	addwf	?___lwdiv,f
  3851  060B  0008               	return
  3852  060C                     __end_of___lwdiv:	
  3853                           
  3854                           	psect	text20
  3855  070E                     __ptext20:	
  3856 ;; *************** function _USART_ReceiveChar *****************
  3857 ;; Defined at:
  3858 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;		None
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  byte            1    4[COMMON] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      unsigned char 
  3865 ;; Registers used:
  3866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3872 ;;      Params:         0       0       0       0       0
  3873 ;;      Locals:         1       0       0       0       0
  3874 ;;      Temps:          1       0       0       0       0
  3875 ;;      Totals:         2       0       0       0       0
  3876 ;;Total ram usage:        2 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    2
  3879 ;; This function calls:
  3880 ;;		_USART_WriteString
  3881 ;; This function is called by:
  3882 ;;		_ISR
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           
  3887                           ;psect for function _USART_ReceiveChar
  3888  070E                     _USART_ReceiveChar:	
  3889                           
  3890                           ;usart.c: 65: unsigned char byte;
  3891                           ;usart.c: 67: if (!OERR)
  3892                           
  3893                           ;incstack = 0
  3894                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3895  070E  1283               	bcf	3,5	;RP0=0, select bank0
  3896  070F  1303               	bcf	3,6	;RP1=0, select bank0
  3897  0710  1898               	btfsc	24,1	;volatile
  3898  0711  2F17               	goto	i1l1865
  3899                           
  3900                           ;usart.c: 68: {
  3901                           ;usart.c: 69: byte = RCREG;
  3902  0712  081A               	movf	26,w	;volatile
  3903  0713  00F3               	movwf	??_USART_ReceiveChar
  3904  0714  0873               	movf	??_USART_ReceiveChar,w
  3905  0715  00F4               	movwf	USART_ReceiveChar@byte
  3906  0716  2F23               	goto	i1l1873
  3907  0717                     i1l1865:	
  3908                           ;usart.c: 71: }
  3909                           
  3910                           ;usart.c: 70: PIR1bits.RCIF = 0;
  3911                           
  3912                           
  3913                           ;usart.c: 72: else
  3914                           ;usart.c: 73: {
  3915                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  3916  0717  3001               	movlw	(STR_4-__stringbase)& (0+255)
  3917  0718  120A  118A  26A1   	fcall	_USART_WriteString
  3918                           
  3919                           ;usart.c: 76: RCSTAbits.CREN = 0;
  3920  071B  1283               	bcf	3,5	;RP0=0, select bank0
  3921  071C  1303               	bcf	3,6	;RP1=0, select bank0
  3922  071D  1218               	bcf	24,4	;volatile
  3923                           
  3924                           ;usart.c: 77: byte = RCREG;
  3925  071E  081A               	movf	26,w	;volatile
  3926  071F  00F3               	movwf	??_USART_ReceiveChar
  3927  0720  0873               	movf	??_USART_ReceiveChar,w
  3928  0721  00F4               	movwf	USART_ReceiveChar@byte
  3929                           
  3930                           ;usart.c: 78: RCSTAbits.CREN = 1;
  3931  0722  1618               	bsf	24,4	;volatile
  3932  0723                     i1l1873:	
  3933                           
  3934                           ;usart.c: 79: PIR1bits.RCIF = 0;
  3935  0723  128C               	bcf	12,5	;volatile
  3936                           
  3937                           ;usart.c: 80: }
  3938                           ;usart.c: 82: return(byte);
  3939  0724  0874               	movf	USART_ReceiveChar@byte,w
  3940  0725  0008               	return
  3941  0726                     __end_of_USART_ReceiveChar:	
  3942                           
  3943                           	psect	text21
  3944  06A1                     __ptext21:	
  3945 ;; *************** function _USART_WriteString *****************
  3946 ;; Defined at:
  3947 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  str             1    wreg     PTR const unsigned char 
  3950 ;;		 -> STR_4(40), STR_1(14), 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  str             1    2[COMMON] PTR const unsigned char 
  3953 ;;		 -> STR_4(40), STR_1(14), 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;		None               void
  3956 ;; Registers used:
  3957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3963 ;;      Params:         0       0       0       0       0
  3964 ;;      Locals:         1       0       0       0       0
  3965 ;;      Temps:          1       0       0       0       0
  3966 ;;      Totals:         2       0       0       0       0
  3967 ;;Total ram usage:        2 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    1
  3970 ;; This function calls:
  3971 ;;		_USART_WriteChar
  3972 ;; This function is called by:
  3973 ;;		_ISR
  3974 ;;		_USART_ReceiveChar
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           
  3979                           ;psect for function _USART_WriteString
  3980  06A1                     _USART_WriteString:	
  3981                           
  3982                           ;incstack = 0
  3983                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3984                           ;USART_WriteString@str stored from wreg
  3985  06A1  00F2               	movwf	USART_WriteString@str
  3986  06A2                     i1l1657:	
  3987                           ;usart.c: 54: while(*str != '\0')
  3988                           
  3989  06A2  0872               	movf	USART_WriteString@str,w
  3990  06A3  0084               	movwf	4
  3991  06A4  120A  118A  2522  120A  118A  	fcall	stringdir
  3992  06A9  3800               	iorlw	0
  3993  06AA  1903               	btfsc	3,2
  3994  06AB  0008               	return
  3995                           
  3996                           ;usart.c: 55: {
  3997                           ;usart.c: 56: USART_WriteChar(*str);
  3998  06AC  0872               	movf	USART_WriteString@str,w
  3999  06AD  0084               	movwf	4
  4000  06AE  120A  118A  2522  120A  118A  	fcall	stringdir
  4001  06B3  120A  118A  2790  120A  118A  	fcall	_USART_WriteChar
  4002                           
  4003                           ;usart.c: 57: str++;
  4004  06B8  3001               	movlw	1
  4005  06B9  00F1               	movwf	??_USART_WriteString
  4006  06BA  0871               	movf	??_USART_WriteString,w
  4007  06BB  07F2               	addwf	USART_WriteString@str,f
  4008  06BC  2EA2               	goto	i1l1657
  4009  06BD                     __end_of_USART_WriteString:	
  4010                           
  4011                           	psect	text22
  4012  0790                     __ptext22:	
  4013 ;; *************** function _USART_WriteChar *****************
  4014 ;; Defined at:
  4015 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  byte            1    wreg     unsigned char 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  byte            1    0[COMMON] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;		None               void
  4022 ;; Registers used:
  4023 ;;		wreg
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4029 ;;      Params:         0       0       0       0       0
  4030 ;;      Locals:         1       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0
  4032 ;;      Totals:         1       0       0       0       0
  4033 ;;Total ram usage:        1 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_send
  4039 ;;		_USART_WriteString
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _USART_WriteChar
  4045  0790                     _USART_WriteChar:	
  4046                           
  4047                           ;incstack = 0
  4048                           ; Regs used in _USART_WriteChar: [wreg]
  4049                           ;USART_WriteChar@byte stored from wreg
  4050  0790  00F0               	movwf	USART_WriteChar@byte
  4051  0791                     i1l202:	
  4052                           ;usart.c: 46: while(!PIR1bits.TXIF);
  4053                           
  4054  0791  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0792  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0793  1E0C               	btfss	12,4	;volatile
  4057  0794  2F91               	goto	i1l202
  4058                           
  4059                           ;usart.c: 47: TXREG = byte;
  4060  0795  0870               	movf	USART_WriteChar@byte,w
  4061  0796  0099               	movwf	25	;volatile
  4062  0797  0008               	return
  4063  0798                     __end_of_USART_WriteChar:	
  4064                           
  4065                           	psect	text23
  4066  04B9                     __ptext23:	
  4067 ;; *************** function _Fuzzy *****************
  4068 ;; Defined at:
  4069 ;;		line 165 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  aumenta         3    8[BANK0 ] float 
  4074 ;;  reduz           3    5[BANK0 ] float 
  4075 ;;  mantem          3    2[BANK0 ] float 
  4076 ;;  tip             3    0        float 
  4077 ;;  freio           2   11[BANK0 ] unsigned int 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;		None               void
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0, pclath, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         0       0       0       0       0
  4088 ;;      Locals:         0      11       0       0       0
  4089 ;;      Temps:          0       2       0       0       0
  4090 ;;      Totals:         0      13       0       0       0
  4091 ;;Total ram usage:       13 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    1
  4094 ;; This function calls:
  4095 ;;		___fttol
  4096 ;;		i1_PWM_DutyCycle2
  4097 ;; This function is called by:
  4098 ;;		_ISR
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           
  4103                           ;psect for function _Fuzzy
  4104  04B9                     _Fuzzy:	
  4105                           
  4106                           ;main.c: 180: unsigned int freio = 0;
  4107                           
  4108                           ;incstack = 0
  4109                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+pclath+cstack]
  4110  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  4111  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  4112  04BB  01C7               	clrf	Fuzzy@freio
  4113  04BC  01C8               	clrf	Fuzzy@freio+1
  4114                           
  4115                           ;main.c: 186: float mantem = 0;
  4116  04BD  3000               	movlw	0
  4117  04BE  00BE               	movwf	Fuzzy@mantem
  4118  04BF  3000               	movlw	0
  4119  04C0  00BF               	movwf	Fuzzy@mantem+1
  4120  04C1  3000               	movlw	0
  4121  04C2  00C0               	movwf	Fuzzy@mantem+2
  4122                           
  4123                           ;main.c: 187: float reduz = 0;
  4124  04C3  3000               	movlw	0
  4125  04C4  00C1               	movwf	Fuzzy@reduz
  4126  04C5  3000               	movlw	0
  4127  04C6  00C2               	movwf	Fuzzy@reduz+1
  4128  04C7  3000               	movlw	0
  4129  04C8  00C3               	movwf	Fuzzy@reduz+2
  4130                           
  4131                           ;main.c: 188: float aumenta = 0;
  4132  04C9  3000               	movlw	0
  4133  04CA  00C4               	movwf	Fuzzy@aumenta
  4134  04CB  3000               	movlw	0
  4135  04CC  00C5               	movwf	Fuzzy@aumenta+1
  4136  04CD  3000               	movlw	0
  4137  04CE  00C6               	movwf	Fuzzy@aumenta+2
  4138                           
  4139                           ;main.c: 189: float tip;
  4140                           ;main.c: 190: fitemp = 0;
  4141  04CF  3000               	movlw	0
  4142  04D0  00A0               	movwf	_fitemp
  4143  04D1  3000               	movlw	0
  4144  04D2  00A1               	movwf	_fitemp+1
  4145  04D3  3000               	movlw	0
  4146  04D4  00A2               	movwf	_fitemp+2
  4147                           
  4148                           ;main.c: 193: if (setpointUI == antigoUI)
  4149  04D5  082F               	movf	_antigoUI+1,w
  4150  04D6  0639               	xorwf	_setpointUI+1,w
  4151  04D7  1D03               	skipz
  4152  04D8  2CDB               	goto	u121_25
  4153  04D9  082E               	movf	_antigoUI,w
  4154  04DA  0638               	xorwf	_setpointUI,w
  4155  04DB                     u121_25:	
  4156  04DB  1903               	btfsc	3,2
  4157  04DC  0008               	return
  4158                           
  4159                           ;main.c: 196: }
  4160                           ;main.c: 198: deltaV = (setpointUI - antigoUI);
  4161                           
  4162                           ;main.c: 194: {
  4163                           ;main.c: 195: return;
  4164  04DD  092E               	comf	_antigoUI,w
  4165  04DE  00BC               	movwf	??_Fuzzy
  4166  04DF  092F               	comf	_antigoUI+1,w
  4167  04E0  00BD               	movwf	??_Fuzzy+1
  4168  04E1  0ABC               	incf	??_Fuzzy,f
  4169  04E2  1903               	skipnz
  4170  04E3  0ABD               	incf	??_Fuzzy+1,f
  4171  04E4  0838               	movf	_setpointUI,w
  4172  04E5  073C               	addwf	??_Fuzzy,w
  4173  04E6  00B2               	movwf	_deltaV
  4174  04E7  0839               	movf	_setpointUI+1,w
  4175  04E8  1803               	skipnc
  4176  04E9  0A39               	incf	_setpointUI+1,w
  4177  04EA  073D               	addwf	??_Fuzzy+1,w
  4178  04EB  00B3               	movwf	_deltaV+1
  4179                           
  4180                           ;main.c: 199: antigoUI = antigo;
  4181  04EC  0856               	movf	_antigo,w
  4182  04ED  00F0               	movwf	___fttol@f1
  4183  04EE  0857               	movf	_antigo+1,w
  4184  04EF  00F1               	movwf	___fttol@f1+1
  4185  04F0  0858               	movf	_antigo+2,w
  4186  04F1  00F2               	movwf	___fttol@f1+2
  4187  04F2  120A  118A  23C0  120A  118A  	fcall	___fttol
  4188  04F7  0871               	movf	?___fttol+1,w
  4189  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  4190  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  4191  04FA  01AF               	clrf	_antigoUI+1
  4192  04FB  07AF               	addwf	_antigoUI+1,f
  4193  04FC  0870               	movf	?___fttol,w
  4194  04FD  01AE               	clrf	_antigoUI
  4195  04FE  07AE               	addwf	_antigoUI,f
  4196                           
  4197                           ;main.c: 345: if (freio = 1)
  4198  04FF  3001               	movlw	1
  4199  0500  00C7               	movwf	Fuzzy@freio
  4200  0501  3000               	movlw	0
  4201  0502  00C8               	movwf	Fuzzy@freio+1
  4202                           
  4203                           ;main.c: 346: {
  4204                           ;main.c: 347: if (deltaV >0 && deltaV < 1020)
  4205  0503  0833               	movf	_deltaV+1,w
  4206  0504  0432               	iorwf	_deltaV,w
  4207  0505  1903               	skipnz
  4208  0506  0008               	return
  4209  0507  3003               	movlw	3
  4210  0508  0233               	subwf	_deltaV+1,w
  4211  0509  30FC               	movlw	252
  4212  050A  1903               	skipnz
  4213  050B  0232               	subwf	_deltaV,w
  4214  050C  1803               	skipnc
  4215  050D  0008               	return
  4216                           
  4217                           ;main.c: 348: {
  4218                           ;main.c: 349: PWM_DutyCycle2(deltaV);
  4219  050E  0833               	movf	_deltaV+1,w
  4220  050F  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4221  0510  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4222  0511  0832               	movf	_deltaV,w
  4223  0512  01F0               	clrf	i1PWM_DutyCycle2@valor
  4224  0513  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4225  0514  120A  118A  26F3   	fcall	i1_PWM_DutyCycle2
  4226                           
  4227                           ;main.c: 350: }
  4228                           ;main.c: 351: }else
  4229  0517  0008               	return
  4230  0518                     __end_of_Fuzzy:	
  4231                           ;main.c: 354: {
  4232                           ;main.c: 355: PWM_DutyCycle2(deltaV);
  4233                           
  4234                           ;main.c: 352: {
  4235                           ;main.c: 353: if (deltaV > 0 && deltaV < 1020)
  4236                           
  4237                           
  4238                           	psect	text24
  4239  06F3                     __ptext24:	
  4240 ;; *************** function i1_PWM_DutyCycle2 *****************
  4241 ;; Defined at:
  4242 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  valor           2    0[COMMON] int 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;		None               void
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         2       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0
  4258 ;;      Temps:          2       0       0       0       0
  4259 ;;      Totals:         4       0       0       0       0
  4260 ;;Total ram usage:        4 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; This function calls:
  4263 ;;		Nothing
  4264 ;; This function is called by:
  4265 ;;		_Fuzzy
  4266 ;;		_ISR
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           
  4271                           ;psect for function i1_PWM_DutyCycle2
  4272  06F3                     i1_PWM_DutyCycle2:	
  4273                           
  4274                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4275                           
  4276                           ;incstack = 0
  4277                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  4278  06F3  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  4279  06F4  00F3               	movwf	??i1_PWM_DutyCycle2+1
  4280  06F5  0870               	movf	i1PWM_DutyCycle2@valor,w
  4281  06F6  00F2               	movwf	??i1_PWM_DutyCycle2
  4282  06F7  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4283  06F8  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4284  06F9  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4285  06FA  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4286  06FB  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4287  06FC  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4288  06FD  0872               	movf	??i1_PWM_DutyCycle2,w
  4289  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  4290  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  4291  0700  009B               	movwf	27	;volatile
  4292                           
  4293                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4294  0701  0870               	movf	i1PWM_DutyCycle2@valor,w
  4295  0702  00F2               	movwf	??i1_PWM_DutyCycle2
  4296  0703  3003               	movlw	3
  4297  0704                     u118_25:	
  4298  0704  1003               	clrc
  4299  0705  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  4300  0706  3EFF               	addlw	-1
  4301  0707  1D03               	skipz
  4302  0708  2F04               	goto	u118_25
  4303  0709  1003               	clrc
  4304  070A  0D72               	rlf	??i1_PWM_DutyCycle2,w
  4305  070B  380C               	iorlw	12
  4306  070C  009D               	movwf	29	;volatile
  4307  070D  0008               	return
  4308  070E                     __end_ofi1_PWM_DutyCycle2:	
  4309                           
  4310                           	psect	text25
  4311  03C0                     __ptext25:	
  4312 ;; *************** function ___fttol *****************
  4313 ;; Defined at:
  4314 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  f1              3    0[COMMON] float 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  lval            4    9[COMMON] unsigned long 
  4319 ;;  exp1            1   13[COMMON] unsigned char 
  4320 ;;  sign1           1    8[COMMON] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  4    0[COMMON] long 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4330 ;;      Params:         4       0       0       0       0
  4331 ;;      Locals:         6       0       0       0       0
  4332 ;;      Temps:          4       0       0       0       0
  4333 ;;      Totals:        14       0       0       0       0
  4334 ;;Total ram usage:       14 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_Fuzzy
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function ___fttol
  4345  03C0                     ___fttol:	
  4346                           
  4347                           ;incstack = 0
  4348                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4349  03C0  0870               	movf	___fttol@f1,w
  4350  03C1  00F4               	movwf	??___fttol
  4351  03C2  0871               	movf	___fttol@f1+1,w
  4352  03C3  00F5               	movwf	??___fttol+1
  4353  03C4  0872               	movf	___fttol@f1+2,w
  4354  03C5  00F6               	movwf	??___fttol+2
  4355  03C6  1003               	clrc
  4356  03C7  0D75               	rlf	??___fttol+1,w
  4357  03C8  0D76               	rlf	??___fttol+2,w
  4358  03C9  00F7               	movwf	??___fttol+3
  4359  03CA  0877               	movf	??___fttol+3,w
  4360  03CB  00FD               	movwf	___fttol@exp1
  4361  03CC  08FD               	movf	___fttol@exp1,f
  4362  03CD  1D03               	skipz
  4363  03CE  2BD8               	goto	i1l1733
  4364  03CF  3000               	movlw	0
  4365  03D0  00F3               	movwf	?___fttol+3
  4366  03D1  3000               	movlw	0
  4367  03D2  00F2               	movwf	?___fttol+2
  4368  03D3  3000               	movlw	0
  4369  03D4  00F1               	movwf	?___fttol+1
  4370  03D5  3000               	movlw	0
  4371  03D6  00F0               	movwf	?___fttol
  4372  03D7  0008               	return
  4373  03D8                     i1l1733:	
  4374  03D8  0870               	movf	___fttol@f1,w
  4375  03D9  00F4               	movwf	??___fttol
  4376  03DA  0871               	movf	___fttol@f1+1,w
  4377  03DB  00F5               	movwf	??___fttol+1
  4378  03DC  0872               	movf	___fttol@f1+2,w
  4379  03DD  00F6               	movwf	??___fttol+2
  4380  03DE  3017               	movlw	23
  4381  03DF                     u109_25:	
  4382  03DF  1003               	clrc
  4383  03E0  0CF6               	rrf	??___fttol+2,f
  4384  03E1  0CF5               	rrf	??___fttol+1,f
  4385  03E2  0CF4               	rrf	??___fttol,f
  4386  03E3  3EFF               	addlw	-1
  4387  03E4  1D03               	skipz
  4388  03E5  2BDF               	goto	u109_25
  4389  03E6  0874               	movf	??___fttol,w
  4390  03E7  00F7               	movwf	??___fttol+3
  4391  03E8  0877               	movf	??___fttol+3,w
  4392  03E9  00F8               	movwf	___fttol@sign1
  4393  03EA  17F1               	bsf	___fttol@f1+1,7
  4394  03EB  30FF               	movlw	255
  4395  03EC  05F0               	andwf	___fttol@f1,f
  4396  03ED  30FF               	movlw	255
  4397  03EE  05F1               	andwf	___fttol@f1+1,f
  4398  03EF  3000               	movlw	0
  4399  03F0  05F2               	andwf	___fttol@f1+2,f
  4400  03F1  0870               	movf	___fttol@f1,w
  4401  03F2  00F9               	movwf	___fttol@lval
  4402  03F3  0871               	movf	___fttol@f1+1,w
  4403  03F4  00FA               	movwf	___fttol@lval+1
  4404  03F5  0872               	movf	___fttol@f1+2,w
  4405  03F6  00FB               	movwf	___fttol@lval+2
  4406  03F7  01FC               	clrf	___fttol@lval+3
  4407  03F8  308E               	movlw	142
  4408  03F9  02FD               	subwf	___fttol@exp1,f
  4409  03FA  1FFD               	btfss	___fttol@exp1,7
  4410  03FB  2C1A               	goto	i1l1753
  4411  03FC  087D               	movf	___fttol@exp1,w
  4412  03FD  3A80               	xorlw	128
  4413  03FE  3E8F               	addlw	143
  4414  03FF  1803               	skipnc
  4415  0400  2C0A               	goto	i1l1751
  4416  0401  3000               	movlw	0
  4417  0402  00F3               	movwf	?___fttol+3
  4418  0403  3000               	movlw	0
  4419  0404  00F2               	movwf	?___fttol+2
  4420  0405  3000               	movlw	0
  4421  0406  00F1               	movwf	?___fttol+1
  4422  0407  3000               	movlw	0
  4423  0408  00F0               	movwf	?___fttol
  4424  0409  0008               	return
  4425  040A                     i1l1751:	
  4426  040A  3001               	movlw	1
  4427  040B                     u112_25:	
  4428  040B  1003               	clrc
  4429  040C  0CFC               	rrf	___fttol@lval+3,f
  4430  040D  0CFB               	rrf	___fttol@lval+2,f
  4431  040E  0CFA               	rrf	___fttol@lval+1,f
  4432  040F  0CF9               	rrf	___fttol@lval,f
  4433  0410  3EFF               	addlw	-1
  4434  0411  1D03               	skipz
  4435  0412  2C0B               	goto	u112_25
  4436  0413  3001               	movlw	1
  4437  0414  00F4               	movwf	??___fttol
  4438  0415  0874               	movf	??___fttol,w
  4439  0416  07FD               	addwf	___fttol@exp1,f
  4440  0417  1903               	btfsc	3,2
  4441  0418  2C35               	goto	i1l1763
  4442  0419  2C0A               	goto	i1l1751
  4443  041A                     i1l1753:	
  4444  041A  3018               	movlw	24
  4445  041B  027D               	subwf	___fttol@exp1,w
  4446  041C  1C03               	skipc
  4447  041D  2C32               	goto	i1l1761
  4448  041E  3000               	movlw	0
  4449  041F  00F3               	movwf	?___fttol+3
  4450  0420  3000               	movlw	0
  4451  0421  00F2               	movwf	?___fttol+2
  4452  0422  3000               	movlw	0
  4453  0423  00F1               	movwf	?___fttol+1
  4454  0424  3000               	movlw	0
  4455  0425  00F0               	movwf	?___fttol
  4456  0426  0008               	return
  4457  0427                     i1l1759:	
  4458  0427  3001               	movlw	1
  4459  0428  00F4               	movwf	??___fttol
  4460  0429                     u115_25:	
  4461  0429  1003               	clrc
  4462  042A  0DF9               	rlf	___fttol@lval,f
  4463  042B  0DFA               	rlf	___fttol@lval+1,f
  4464  042C  0DFB               	rlf	___fttol@lval+2,f
  4465  042D  0DFC               	rlf	___fttol@lval+3,f
  4466  042E  0BF4               	decfsz	??___fttol,f
  4467  042F  2C29               	goto	u115_25
  4468  0430  3001               	movlw	1
  4469  0431  02FD               	subwf	___fttol@exp1,f
  4470  0432                     i1l1761:	
  4471  0432  08FD               	movf	___fttol@exp1,f
  4472  0433  1D03               	skipz
  4473  0434  2C27               	goto	i1l1759
  4474  0435                     i1l1763:	
  4475  0435  0878               	movf	___fttol@sign1,w
  4476  0436  1903               	btfsc	3,2
  4477  0437  2C43               	goto	i1l1767
  4478  0438  09F9               	comf	___fttol@lval,f
  4479  0439  09FA               	comf	___fttol@lval+1,f
  4480  043A  09FB               	comf	___fttol@lval+2,f
  4481  043B  09FC               	comf	___fttol@lval+3,f
  4482  043C  0AF9               	incf	___fttol@lval,f
  4483  043D  1903               	skipnz
  4484  043E  0AFA               	incf	___fttol@lval+1,f
  4485  043F  1903               	skipnz
  4486  0440  0AFB               	incf	___fttol@lval+2,f
  4487  0441  1903               	skipnz
  4488  0442  0AFC               	incf	___fttol@lval+3,f
  4489  0443                     i1l1767:	
  4490  0443  087C               	movf	___fttol@lval+3,w
  4491  0444  00F3               	movwf	?___fttol+3
  4492  0445  087B               	movf	___fttol@lval+2,w
  4493  0446  00F2               	movwf	?___fttol+2
  4494  0447  087A               	movf	___fttol@lval+1,w
  4495  0448  00F1               	movwf	?___fttol+1
  4496  0449  0879               	movf	___fttol@lval,w
  4497  044A  00F0               	movwf	?___fttol
  4498  044B  0008               	return
  4499  044C                     __end_of___fttol:	
  4500  007E                     btemp	set	126	;btemp
  4501  007E                     wtemp	set	126
  4502  007E                     wtemp0	set	126
  4503  0080                     wtemp1	set	128
  4504  0082                     wtemp2	set	130
  4505  0084                     wtemp3	set	132
  4506  0086                     wtemp4	set	134
  4507  0088                     wtemp5	set	136
  4508  007F                     wtemp6	set	127
  4509  007E                     ttemp	set	126
  4510  007E                     ttemp0	set	126
  4511  0081                     ttemp1	set	129
  4512  0084                     ttemp2	set	132
  4513  0087                     ttemp3	set	135
  4514  007F                     ttemp4	set	127
  4515  007E                     ltemp	set	126
  4516  007E                     ltemp0	set	126
  4517  0082                     ltemp1	set	130
  4518  0086                     ltemp2	set	134
  4519  0080                     ltemp3	set	128


Data Sizes:
    Strings     77
    Constant    0
    Data        10
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      61
    BANK1            80     17      61
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> display_rpm(BANK1[10]), STR_3(CODE[6]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___wmul
    _send->___wmul
    ___wmul->___lwdiv
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___fttol

Critical Paths under _main in BANK0

    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy

Critical Paths under _main in BANK1

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1684
                                             14 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                              6 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                             17 BANK0      9     1      8
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                             17 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                             17 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     259
                                             19 BANK0      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                             19 BANK0      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     322
                                             17 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                             19 BANK0      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0    2160
                                             13 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                            ___lwdiv
                             ___wmul
                               _send
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send                                                 5     5      0     529
                                              0 BANK0      5     5      0
                    _USART_WriteChar
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     348
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               16    16      0     443
                                              0 BANK0     13    13      0
                            ___fttol
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _Fuzzy
     ___fttol
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwdiv
   ___wmul
     ___lwdiv (ARG)
   _send
     _USART_WriteChar
     ___wmul
       ___lwdiv (ARG)
   i1_PWM_DutyCycle2
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     11      3D       7       76.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      3D       5       76.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      88      12        0.0%
ABS                  0      0      88       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jun 22 15:27:19 2022

         ?i1_PWM_DutyCycle2 0070                           _x 0026                           _y 0029  
                         pc 0002                 ?_LCD_Cursor 004D     __size_of_PWM_DutyCycle1 001B  
   __size_of_PWM_DutyCycle2 001B                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        fsr 0004         ___wmul@multiplicand 007A          ??i1_PWM_DutyCycle2 0072  
             _contagens_tm0 0030                         l577 031B                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0042                         _rpm 0036  
                       fsr0 0004                         _pwm 005B                         _sum 00B9  
__size_of_USART_WriteString 001C                         indf 0000                __CFG_FOSC$HS 0000  
         ??_LCD_WriteString 0051                __CFG_LVP$OFF 0000                        ?_ISR 0070  
                      l2201 0345                        l2211 0389                        l2203 035A  
        LCD_WriteString@Str 004F                        l2215 0399                        l2305 01FD  
                      l2219 03A9                        l2193 032F                        l1983 0730  
                      l1997 0635                        STR_1 0561                        STR_2 0550  
                      STR_3 056F                        STR_4 0528                        u1315 06E9  
                      u1265 06CE                        u1615 035D                        u1625 0376  
                      u1707 0458                        u1635 038A                        u1717 0468  
                      u1807 0626                        u1727 0476                        u1817 0632  
                      u1737 0482                        u1665 0580                        u1827 0777  
                      u1747 048E                        u1595 034C                        u1757 049C  
                      u1677 01F6                        u1767 04AA                        u1687 0240  
                      u1777 04B6                        u1697 0768                        u1787 0736  
                      u1797 0618                        _OERR 00C1                        _TMR0 0001  
                      _TMR1 000E                        _main 016E          __size_of_LCD_Clear 0029  
                      _send 0247                        btemp 007E            __end_of_ADC_Init 074E  
                      ltemp 007E                        start 0012                        ttemp 007E  
                      wtemp 007E               ?_LCD_WriteCmd 0070               _LCD_WriteData 075F  
   __end_of_USART_WriteChar 0798                       ??_ISR 0049                ___fttol@exp1 007D  
              ___fttol@lval 0079                 ?_TIMER0_Set 0070            __end_of_LCD_Init 04B9  
           __end_of___aldiv 03C0                       ?_main 0070                       _EEADR 010D  
                     ?_send 0070               __CFG_WDTE$OFF 0000                       _T1CON 0010  
           __end_of___fttol 044C             __end_of___lwdiv 060C                       i1l202 0791  
                     i1l158 0161                       i1l522 0688                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       u95_25 0689                       u96_25 0690  
                     _TXREG 0019               __CFG_PWRTE$ON 0000                       _Fuzzy 04B9  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0016                       pclath 000A  
          __end_of_PWM_Init 067E                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
            ??_LCD_WriteCmd 004D              ?_LCD_WriteData 0070                 ?_USART_Init 00CF  
     i1TIMER0_Set@contagens 0070             __initialization 0015                __end_of_main 0247  
              __end_of_send 0305                      ??_main 00D7               ___fttol@sign1 0078  
                    ??_send 003C                ?_TIMER0_Init 0070           __end_of_LCD_Clear 0635  
                    ?_Fuzzy 0070                  Fuzzy@freio 0047                  Fuzzy@reduz 0041  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _CCPR1L 0015                      _CCPR2L 001B                      _EECON2 018D  
                    i1l2031 05FA                      i1l2023 05D6                      i1l2025 05E4  
                    i1l2035 0605                      i1l2123 015C                      i1l2051 005C  
                    i1l2109 0112                      i1l2125 015D                      i1l2071 00A2  
                    i1l2063 0086                      i1l2055 006A                      i1l2083 00CC  
                    i1l2075 00B0                      i1l2067 0094                      i1l2059 0078  
                    u112_25 040B                      i1l2095 00F4                      i1l2087 00DA  
                    i1l2079 00BE                      i1l2097 00F7                      i1l1811 02DE  
                    i1l1733 03D8                      u121_25 04DB                      i1l1751 040A  
                    i1l1761 0432                      i1l1753 041A                      i1l1657 06A2  
                    i1l1763 0435                      i1l1819 02FA                      i1l1677 0680  
                    i1l1767 0443                      i1l1759 0427                      i1l1873 0723  
                    i1l1865 0717                      u115_25 0429                      u109_25 03DF  
                    u133_25 05D9                      u118_25 0704                      u135_25 05E5  
                    u136_25 05F1                      u137_25 05FB         __size_of_TIMER0_Set 0006  
                    _SSPADD 0093                      _SSPBUF 0013            LCD_WriteCmd@Byte 004E  
                 ??___aldiv 0055                      ___wmul 067E              _PWM_DutyCycle1 06D8  
            _PWM_DutyCycle2 06BD            ?_USART_WriteChar 0070                      _deltaV 0032  
                 ??___fttol 0074                   ??___lwdiv 0074                      _antigo 0056  
                    _buffer 00A0                      _fitemp 0020       USART_ReceiveChar@byte 0074  
                    _pulsos 0034                      _status 003A                   ?_ADC_Init 0070  
                    saved_w 007E         __size_of_USART_Init 0059               ?i1_TIMER0_Set 0070  
   __end_of__initialization 003E                   ?_LCD_Init 0070             ??_LCD_WriteData 004D  
    __end_of_PWM_DutyCycle1 06F3      __end_of_PWM_DutyCycle2 06D8                  ___fttol@f1 0070  
            __pcstackCOMMON 0070               __end_of_Fuzzy 0518                __pidataBANK0 0798  
              __pidataBANK1 07AB               LCD_Cursor@Col 004D               LCD_Cursor@Row 004F  
              ??_LCD_Cursor 004E             _LCD_WriteString 0635                   ?_PWM_Init 0070  
            _OPTION_REGbits 0081                  ??_ADC_Init 004D        __end_of_LCD_WriteCmd 077D  
                   ??_Fuzzy 003C   __size_ofi1_PWM_DutyCycle2 001B              ??i1_TIMER0_Set 0070  
                __pbssBANK0 0020                  __pbssBANK1 00A0          __end_of_LCD_Cursor 073C  
                ??_LCD_Init 004F             ?_PWM_DutyCycle1 004D             ?_PWM_DutyCycle2 004D  
                __pmaintext 016E                 Fuzzy@mantem 003E                     ?___wmul 0078  
                __pintentry 0004                ??_TIMER0_Set 004D                     _CCP1CON 0017  
                   _CCP2CON 001D                  ??_PWM_Init 004D        __size_of_TIMER0_Init 000B  
                   _SSPCON2 0091                  __stringtab 0518          __end_of_TIMER0_Set 07A5  
   __end_of_LCD_WriteString 065A                   _ADCResult 002C                ??_USART_Init 00D3  
         LCD_WriteData@Byte 004E                     ___aldiv 0305             __size_of___wmul 0023  
                   ___fttol 03C0                     ___lwdiv 05CE                     __ptext1 0575  
                   __ptext2 0305                     __ptext3 079F                     __ptext4 077D  
                   __ptext5 065A                     __ptext6 06BD                     __ptext7 06D8  
                   __ptext8 0635                     __ptext9 075F                  _pas_cooler 0059  
              __size_of_ISR 012C                   _T1CONbits 0010                   _T2CONbits 0012  
          ___aldiv@dividend 0051                   _LCD_Clear 060C          __end_of_USART_Init 05CE  
                   clrloop0 0789        end_of_initialization 003E                   _RCSTAbits 0018  
          ___aldiv@quotient 00CB        __end_ofi1_TIMER0_Set 07AB       __size_of_LCD_WriteCmd 000F  
                 _PORTBbits 0006                   _PORTEbits 0009                  _setpointUI 0038  
                ?_LCD_Clear 0070            i1_PWM_DutyCycle2 06F3           __size_of_ADC_Init 0012  
       PWM_DutyCycle1@valor 004D                  _total_area 00BC         PWM_DutyCycle2@valor 004D  
               _CCP1CONbits 0017                 _CCP2CONbits 001D                   _TXSTAbits 0098  
          ?_LCD_WriteString 004F           __size_of_LCD_Init 006D                _LCD_WriteCmd 076E  
            __end_of___wmul 06A1    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 016E            ??_PWM_DutyCycle1 004F  
          ??_PWM_DutyCycle2 004F       __end_of_LCD_WriteData 076E           _USART_ReceiveChar 070E  
        ?_USART_ReceiveChar 0070                    ??___wmul 007C                  init_fetch0 074E  
               __pdataBANK0 0056                 __pdataBANK1 00DA                send@checksum 003D  
            send@velocidade 003E         ??_USART_ReceiveChar 0073                   ___latbits 0002  
             __pcstackBANK0 003C               __pcstackBANK1 00C9                 ??_LCD_Clear 004F  
       __end_of__stringdata 0575   __end_of_USART_ReceiveChar 0726       __size_ofi1_TIMER0_Set 0006  
          ___lwdiv@dividend 0072         TIMER0_Set@contagens 004D                Fuzzy@aumenta 0044  
                  ?___aldiv 004D                    ?___fttol 0070                    ?___lwdiv 0070  
                 __pstrings 0518                   _ativa_fan 00B0               ??_TIMER0_Init 004D  
        USART_Init@BaudRate 00CF                    _ADC_Init 073C                   _fop_rule1 0023  
                 _fop_rule2 00B3                   _fop_rule3 00B6              __size_of_Fuzzy 005F  
          ___lwdiv@quotient 0075           ??_USART_WriteChar 0070                i1_TIMER0_Set 07A5  
           ___aldiv@divisor 004D           interrupt_function 0004             ___aldiv@counter 00C9  
                  _LCD_Init 044C              ___wmul@product 007C                   clear_ram0 0788  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 070E                 _display_rpm 00BF  
                _ADCON0bits 001F                 __stringbase 0527                  _ADCON1bits 009F  
               __stringdata 0528                    _PWM_Init 065A           ___wmul@multiplier 0078  
       __end_of_TIMER0_Init 0788  __size_of_USART_ReceiveChar 0018                  _EECON1bits 018C  
          __size_of___aldiv 00BB            __size_of___fttol 008C            __size_of___lwdiv 003E  
        __end_of__stringtab 0528                   send@index 0040             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077           _USART_WriteString 06A1                    __ptext10 044C  
                  __ptext11 0726                    __ptext20 070E                    __ptext12 060C  
                  __ptext21 06A1                    __ptext13 076E                    __ptext22 0790  
                  __ptext14 073C                    __ptext23 04B9                    __ptext15 0042  
                  __ptext24 06F3                    __ptext16 07A5                    __ptext25 03C0  
                  __ptext17 0247                    __ptext18 067E                    __ptext19 05CE  
                  _antigoUI 002E          ?_USART_WriteString 0070               __size_of_main 00D9  
             __size_of_send 00BE         USART_WriteChar@byte 0070         ??_USART_WriteString 0071  
                  _setpoint 00DA                  _LCD_Cursor 0726    __size_of_LCD_WriteString 0025  
               _TIMER0_Init 077D                  _INTCONbits 000B   __end_of_USART_WriteString 06BD  
                  init_ram0 0752                    intlevel1 0000                   stringcode 0522  
      USART_WriteString@str 0072                  _TIMER0_Set 079F             _USART_WriteChar 0790  
                  stringdir 0522                    stringtab 0518                ___aldiv@sign 00CA  
    __size_of_LCD_WriteData 000F                 _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 0070  
                _SSPCONbits 0014                  _USART_Init 0575  
