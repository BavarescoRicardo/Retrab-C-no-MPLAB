

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue May 24 16:26:38 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0088                     	;# 
   214  0089                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  010C                     	;# 
   349  010D                     	;# 
   350  010E                     	;# 
   351  010F                     	;# 
   352  018C                     	;# 
   353  018D                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0008                     	;# 
   363  0009                     	;# 
   364  000A                     	;# 
   365  000B                     	;# 
   366  000C                     	;# 
   367  000D                     	;# 
   368  000E                     	;# 
   369  000E                     	;# 
   370  000F                     	;# 
   371  0010                     	;# 
   372  0011                     	;# 
   373  0012                     	;# 
   374  0013                     	;# 
   375  0014                     	;# 
   376  0015                     	;# 
   377  0015                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001B                     	;# 
   385  001C                     	;# 
   386  001D                     	;# 
   387  001E                     	;# 
   388  001F                     	;# 
   389  0081                     	;# 
   390  0085                     	;# 
   391  0086                     	;# 
   392  0087                     	;# 
   393  0088                     	;# 
   394  0089                     	;# 
   395  008C                     	;# 
   396  008D                     	;# 
   397  008E                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0094                     	;# 
   402  0098                     	;# 
   403  0099                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009E                     	;# 
   407  009F                     	;# 
   408  010C                     	;# 
   409  010D                     	;# 
   410  010E                     	;# 
   411  010F                     	;# 
   412  018C                     	;# 
   413  018D                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0088                     	;# 
   454  0089                     	;# 
   455  008C                     	;# 
   456  008D                     	;# 
   457  008E                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0094                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  010F                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  000E                     	;# 
   490  000F                     	;# 
   491  0010                     	;# 
   492  0011                     	;# 
   493  0012                     	;# 
   494  0013                     	;# 
   495  0014                     	;# 
   496  0015                     	;# 
   497  0015                     	;# 
   498  0016                     	;# 
   499  0017                     	;# 
   500  0018                     	;# 
   501  0019                     	;# 
   502  001A                     	;# 
   503  001B                     	;# 
   504  001B                     	;# 
   505  001C                     	;# 
   506  001D                     	;# 
   507  001E                     	;# 
   508  001F                     	;# 
   509  0081                     	;# 
   510  0085                     	;# 
   511  0086                     	;# 
   512  0087                     	;# 
   513  0088                     	;# 
   514  0089                     	;# 
   515  008C                     	;# 
   516  008D                     	;# 
   517  008E                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0093                     	;# 
   521  0094                     	;# 
   522  0098                     	;# 
   523  0099                     	;# 
   524  009C                     	;# 
   525  009D                     	;# 
   526  009E                     	;# 
   527  009F                     	;# 
   528  010C                     	;# 
   529  010D                     	;# 
   530  010E                     	;# 
   531  010F                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0008                     	;# 
   543  0009                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  000D                     	;# 
   548  000E                     	;# 
   549  000E                     	;# 
   550  000F                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  001D                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  0081                     	;# 
   570  0085                     	;# 
   571  0086                     	;# 
   572  0087                     	;# 
   573  0088                     	;# 
   574  0089                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  008E                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0093                     	;# 
   581  0094                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009C                     	;# 
   585  009D                     	;# 
   586  009E                     	;# 
   587  009F                     	;# 
   588  010C                     	;# 
   589  010D                     	;# 
   590  010E                     	;# 
   591  010F                     	;# 
   592  018C                     	;# 
   593  018D                     	;# 
   594                           
   595                           	psect	idataBANK1
   596  083A                     __pidataBANK1:	
   597                           
   598                           ;initializer for _pas_cooler
   599  083A  3407               	retlw	7
   600  083B  3400               	retlw	0
   601                           
   602                           ;initializer for _tf
   603  083C  3414               	retlw	20
   604  083D  3400               	retlw	0
   605                           
   606                           	psect	stringtext
   607  1000                     __pstringtext:	
   608  1000                     stringtab:	
   609  1000                     __stringtab:	
   610                           
   611                           ;	String table - string pointers are 2 bytes each
   612  1000  1BFF               	btfsc	btemp+1,7
   613  1001  280A               	ljmp	stringcode
   614  1002  1383               	bcf	3,7
   615  1003  187F               	btfsc	btemp+1,0
   616  1004  1783               	bsf	3,7
   617  1005  0800               	movf	0,w
   618  1006  0A84               	incf	4,f
   619  1007  1903               	skipnz
   620  1008  0AFF               	incf	btemp+1,f
   621  1009  0008               	return
   622  100A                     stringcode:	
   623  100A  087F               	movf	btemp+1,w
   624  100B  397F               	andlw	127
   625  100C  008A               	movwf	10
   626  100D  0804               	movf	4,w
   627  100E  0A84               	incf	4,f
   628  100F  1903               	skipnz
   629  1010  0AFF               	incf	btemp+1,f
   630  1011  0082               	movwf	2
   631  1012                     __stringbase:	
   632  1012                     __end_of__stringtab:	
   633  1012                     _dpowers:	
   634  1012  3401               	retlw	1
   635  1013  3400               	retlw	0
   636  1014  340A               	retlw	10
   637  1015  3400               	retlw	0
   638  1016  3464               	retlw	100
   639  1017  3400               	retlw	0
   640  1018  34E8               	retlw	232
   641  1019  3403               	retlw	3
   642  101A  3410               	retlw	16
   643  101B  3427               	retlw	39
   644  101C                     __end_of_dpowers:	
   645  000E                     _TMR1	set	14
   646  001F                     _ADCON0bits	set	31
   647  001E                     _ADRESH	set	30
   648  0017                     _CCP1CON	set	23
   649  0017                     _CCP1CONbits	set	23
   650  001D                     _CCP2CON	set	29
   651  001D                     _CCP2CONbits	set	29
   652  0015                     _CCPR1L	set	21
   653  001B                     _CCPR2L	set	27
   654  000B                     _INTCONbits	set	11
   655  000C                     _PIR1bits	set	12
   656  000D                     _PIR2bits	set	13
   657  0005                     _PORTA	set	5
   658  0006                     _PORTB	set	6
   659  0006                     _PORTBbits	set	6
   660  0007                     _PORTC	set	7
   661  0008                     _PORTD	set	8
   662  0009                     _PORTE	set	9
   663  0009                     _PORTEbits	set	9
   664  001A                     _RCREG	set	26
   665  0018                     _RCSTAbits	set	24
   666  0013                     _SSPBUF	set	19
   667  0014                     _SSPCONbits	set	20
   668  0010                     _T1CON	set	16
   669  0010                     _T1CONbits	set	16
   670  0012                     _T2CONbits	set	18
   671  0001                     _TMR0	set	1
   672  000F                     _TMR1H	set	15
   673  000E                     _TMR1L	set	14
   674  0019                     _TXREG	set	25
   675  00C1                     _OERR	set	193
   676  009F                     _ADCON1bits	set	159
   677  009E                     _ADRESL	set	158
   678  0081                     _OPTION_REGbits	set	129
   679  008C                     _PIE1bits	set	140
   680  008D                     _PIE2bits	set	141
   681  0092                     _PR2	set	146
   682  0099                     _SPBRG	set	153
   683  0093                     _SSPADD	set	147
   684  0091                     _SSPCON2	set	145
   685  0091                     _SSPCON2bits	set	145
   686  0094                     _SSPSTATbits	set	148
   687  0085                     _TRISA	set	133
   688  0086                     _TRISB	set	134
   689  0087                     _TRISC	set	135
   690  0088                     _TRISD	set	136
   691  0089                     _TRISE	set	137
   692  0098                     _TXSTAbits	set	152
   693  010D                     _EEADR	set	269
   694  010C                     _EEDATA	set	268
   695  018C                     _EECON1bits	set	396
   696  018D                     _EECON2	set	397
   697  101C                     __stringdata:	
   698  101C                     STR_19:	
   699  101C  340A               	retlw	10
   700  101D  340D               	retlw	13
   701  101E  3420               	retlw	32	;' '
   702  101F  342D               	retlw	45	;'-'
   703  1020  342D               	retlw	45	;'-'
   704  1021  342D               	retlw	45	;'-'
   705  1022  342D               	retlw	45	;'-'
   706  1023  342D               	retlw	45	;'-'
   707  1024  342D               	retlw	45	;'-'
   708  1025  342D               	retlw	45	;'-'
   709  1026  3420               	retlw	32	;' '
   710  1027  3445               	retlw	69	;'E'
   711  1028  3453               	retlw	83	;'S'
   712  1029  3454               	retlw	84	;'T'
   713  102A  344F               	retlw	79	;'O'
   714  102B  3455               	retlw	85	;'U'
   715  102C  3452               	retlw	82	;'R'
   716  102D  344F               	retlw	79	;'O'
   717  102E  3420               	retlw	32	;' '
   718  102F  3444               	retlw	68	;'D'
   719  1030  3445               	retlw	69	;'E'
   720  1031  3420               	retlw	32	;' '
   721  1032  3450               	retlw	80	;'P'
   722  1033  3449               	retlw	73	;'I'
   723  1034  344C               	retlw	76	;'L'
   724  1035  3448               	retlw	72	;'H'
   725  1036  3441               	retlw	65	;'A'
   726  1037  3420               	retlw	32	;' '
   727  1038  342D               	retlw	45	;'-'
   728  1039  342D               	retlw	45	;'-'
   729  103A  342D               	retlw	45	;'-'
   730  103B  342D               	retlw	45	;'-'
   731  103C  342D               	retlw	45	;'-'
   732  103D  342D               	retlw	45	;'-'
   733  103E  342D               	retlw	45	;'-'
   734  103F  3420               	retlw	32	;' '
   735  1040  340A               	retlw	10
   736  1041  340D               	retlw	13
   737  1042  3420               	retlw	32	;' '
   738  1043  3400               	retlw	0
   739  1044                     STR_11:	
   740  1044  3449               	retlw	73	;'I'
   741  1045  346E               	retlw	110	;'n'
   742  1046  3469               	retlw	105	;'i'
   743  1047  3463               	retlw	99	;'c'
   744  1048  3469               	retlw	105	;'i'
   745  1049  3461               	retlw	97	;'a'
   746  104A  346C               	retlw	108	;'l'
   747  104B  3469               	retlw	105	;'i'
   748  104C  347A               	retlw	122	;'z'
   749  104D  3461               	retlw	97	;'a'
   750  104E  346E               	retlw	110	;'n'
   751  104F  3464               	retlw	100	;'d'
   752  1050  346F               	retlw	111	;'o'
   753  1051  3420               	retlw	32	;' '
   754  1052  346F               	retlw	111	;'o'
   755  1053  3420               	retlw	32	;' '
   756  1054  3450               	retlw	80	;'P'
   757  1055  3449               	retlw	73	;'I'
   758  1056  3443               	retlw	67	;'C'
   759  1057  3431               	retlw	49	;'1'
   760  1058  3436               	retlw	54	;'6'
   761  1059  3446               	retlw	70	;'F'
   762  105A  3438               	retlw	56	;'8'
   763  105B  3437               	retlw	55	;'7'
   764  105C  3437               	retlw	55	;'7'
   765  105D  3441               	retlw	65	;'A'
   766  105E  340A               	retlw	10
   767  105F  340D               	retlw	13
   768  1060  3400               	retlw	0
   769  1061                     STR_12:	
   770  1061  3455               	retlw	85	;'U'
   771  1062  3453               	retlw	83	;'S'
   772  1063  3441               	retlw	65	;'A'
   773  1064  3452               	retlw	82	;'R'
   774  1065  3454               	retlw	84	;'T'
   775  1066  343A               	retlw	58	;':'
   776  1067  3420               	retlw	32	;' '
   777  1068  3431               	retlw	49	;'1'
   778  1069  3431               	retlw	49	;'1'
   779  106A  3435               	retlw	53	;'5'
   780  106B  342E               	retlw	46	;'.'
   781  106C  3432               	retlw	50	;'2'
   782  106D  3430               	retlw	48	;'0'
   783  106E  3430               	retlw	48	;'0'
   784  106F  3462               	retlw	98	;'b'
   785  1070  3470               	retlw	112	;'p'
   786  1071  3473               	retlw	115	;'s'
   787  1072  340A               	retlw	10
   788  1073  340D               	retlw	13
   789  1074  3400               	retlw	0
   790  1075                     STR_13:	
   791  1075  3449               	retlw	73	;'I'
   792  1076  346E               	retlw	110	;'n'
   793  1077  3469               	retlw	105	;'i'
   794  1078  3463               	retlw	99	;'c'
   795  1079  3469               	retlw	105	;'i'
   796  107A  3461               	retlw	97	;'a'
   797  107B  346C               	retlw	108	;'l'
   798  107C  3469               	retlw	105	;'i'
   799  107D  347A               	retlw	122	;'z'
   800  107E  3461               	retlw	97	;'a'
   801  107F  346E               	retlw	110	;'n'
   802  1080  3464               	retlw	100	;'d'
   803  1081  346F               	retlw	111	;'o'
   804  1082  342E               	retlw	46	;'.'
   805  1083  342E               	retlw	46	;'.'
   806  1084  342E               	retlw	46	;'.'
   807  1085  3400               	retlw	0
   808  1086                     STR_9:	
   809  1086  340A               	retlw	10
   810  1087  340D               	retlw	13
   811  1088  3470               	retlw	112	;'p'
   812  1089  3477               	retlw	119	;'w'
   813  108A  346D               	retlw	109	;'m'
   814  108B  3420               	retlw	32	;' '
   815  108C  343D               	retlw	61	;'='
   816  108D  3420               	retlw	32	;' '
   817  108E  3431               	retlw	49	;'1'
   818  108F  3430               	retlw	48	;'0'
   819  1090  3430               	retlw	48	;'0'
   820  1091  3430               	retlw	48	;'0'
   821  1092  340A               	retlw	10
   822  1093  340D               	retlw	13
   823  1094  3400               	retlw	0
   824  1095                     STR_10:	
   825  1095  340A               	retlw	10
   826  1096  340D               	retlw	13
   827  1097  3470               	retlw	112	;'p'
   828  1098  3477               	retlw	119	;'w'
   829  1099  346D               	retlw	109	;'m'
   830  109A  3420               	retlw	32	;' '
   831  109B  343D               	retlw	61	;'='
   832  109C  3420               	retlw	32	;' '
   833  109D  3431               	retlw	49	;'1'
   834  109E  3430               	retlw	48	;'0'
   835  109F  3432               	retlw	50	;'2'
   836  10A0  3433               	retlw	51	;'3'
   837  10A1  340A               	retlw	10
   838  10A2  340D               	retlw	13
   839  10A3  3400               	retlw	0
   840  10A4                     STR_6:	
   841  10A4  340A               	retlw	10
   842  10A5  340D               	retlw	13
   843  10A6  3470               	retlw	112	;'p'
   844  10A7  3477               	retlw	119	;'w'
   845  10A8  346D               	retlw	109	;'m'
   846  10A9  3420               	retlw	32	;' '
   847  10AA  343D               	retlw	61	;'='
   848  10AB  3420               	retlw	32	;' '
   849  10AC  3435               	retlw	53	;'5'
   850  10AD  3431               	retlw	49	;'1'
   851  10AE  3432               	retlw	50	;'2'
   852  10AF  340A               	retlw	10
   853  10B0  340D               	retlw	13
   854  10B1  3400               	retlw	0
   855  10B2                     STR_5:	
   856  10B2  340A               	retlw	10
   857  10B3  340D               	retlw	13
   858  10B4  3470               	retlw	112	;'p'
   859  10B5  3477               	retlw	119	;'w'
   860  10B6  346D               	retlw	109	;'m'
   861  10B7  3420               	retlw	32	;' '
   862  10B8  343D               	retlw	61	;'='
   863  10B9  3420               	retlw	32	;' '
   864  10BA  3432               	retlw	50	;'2'
   865  10BB  3435               	retlw	53	;'5'
   866  10BC  3436               	retlw	54	;'6'
   867  10BD  340A               	retlw	10
   868  10BE  340D               	retlw	13
   869  10BF  3400               	retlw	0
   870  10C0                     STR_8:	
   871  10C0  340A               	retlw	10
   872  10C1  340D               	retlw	13
   873  10C2  3470               	retlw	112	;'p'
   874  10C3  3477               	retlw	119	;'w'
   875  10C4  346D               	retlw	109	;'m'
   876  10C5  3420               	retlw	32	;' '
   877  10C6  343D               	retlw	61	;'='
   878  10C7  3420               	retlw	32	;' '
   879  10C8  3438               	retlw	56	;'8'
   880  10C9  3439               	retlw	57	;'9'
   881  10CA  3436               	retlw	54	;'6'
   882  10CB  340A               	retlw	10
   883  10CC  340D               	retlw	13
   884  10CD  3400               	retlw	0
   885  10CE                     STR_4:	
   886  10CE  340A               	retlw	10
   887  10CF  340D               	retlw	13
   888  10D0  3470               	retlw	112	;'p'
   889  10D1  3477               	retlw	119	;'w'
   890  10D2  346D               	retlw	109	;'m'
   891  10D3  3420               	retlw	32	;' '
   892  10D4  343D               	retlw	61	;'='
   893  10D5  3420               	retlw	32	;' '
   894  10D6  3431               	retlw	49	;'1'
   895  10D7  3432               	retlw	50	;'2'
   896  10D8  3438               	retlw	56	;'8'
   897  10D9  340A               	retlw	10
   898  10DA  340D               	retlw	13
   899  10DB  3400               	retlw	0
   900  10DC                     STR_7:	
   901  10DC  340A               	retlw	10
   902  10DD  340D               	retlw	13
   903  10DE  3470               	retlw	112	;'p'
   904  10DF  3477               	retlw	119	;'w'
   905  10E0  346D               	retlw	109	;'m'
   906  10E1  3420               	retlw	32	;' '
   907  10E2  343D               	retlw	61	;'='
   908  10E3  3420               	retlw	32	;' '
   909  10E4  3437               	retlw	55	;'7'
   910  10E5  3436               	retlw	54	;'6'
   911  10E6  3438               	retlw	56	;'8'
   912  10E7  340A               	retlw	10
   913  10E8  340D               	retlw	13
   914  10E9  3400               	retlw	0
   915  10EA                     STR_1:	
   916  10EA  340A               	retlw	10
   917  10EB  340D               	retlw	13
   918  10EC  3464               	retlw	100	;'d'
   919  10ED  3465               	retlw	101	;'e'
   920  10EE  3473               	retlw	115	;'s'
   921  10EF  346C               	retlw	108	;'l'
   922  10F0  3469               	retlw	105	;'i'
   923  10F1  3467               	retlw	103	;'g'
   924  10F2  3461               	retlw	97	;'a'
   925  10F3  3464               	retlw	100	;'d'
   926  10F4  346F               	retlw	111	;'o'
   927  10F5  340A               	retlw	10
   928  10F6  340D               	retlw	13
   929  10F7  3400               	retlw	0
   930  10F8                     STR_2:	
   931  10F8  340A               	retlw	10
   932  10F9  340D               	retlw	13
   933  10FA  3470               	retlw	112	;'p'
   934  10FB  3477               	retlw	119	;'w'
   935  10FC  346D               	retlw	109	;'m'
   936  10FD  3420               	retlw	32	;' '
   937  10FE  343D               	retlw	61	;'='
   938  10FF  3420               	retlw	32	;' '
   939  1100  3433               	retlw	51	;'3'
   940  1101  3432               	retlw	50	;'2'
   941  1102  340A               	retlw	10
   942  1103  340D               	retlw	13
   943  1104  3400               	retlw	0
   944  1105                     STR_3:	
   945  1105  340A               	retlw	10
   946  1106  340D               	retlw	13
   947  1107  3470               	retlw	112	;'p'
   948  1108  3477               	retlw	119	;'w'
   949  1109  346D               	retlw	109	;'m'
   950  110A  3420               	retlw	32	;' '
   951  110B  343D               	retlw	61	;'='
   952  110C  3420               	retlw	32	;' '
   953  110D  3436               	retlw	54	;'6'
   954  110E  3434               	retlw	52	;'4'
   955  110F  340A               	retlw	10
   956  1110  340D               	retlw	13
   957  1111  3400               	retlw	0
   958  1112                     STR_18:	
   959  1112  3450               	retlw	80	;'P'
   960  1113  3457               	retlw	87	;'W'
   961  1114  344D               	retlw	77	;'M'
   962  1115  343A               	retlw	58	;':'
   963  1116  3420               	retlw	32	;' '
   964  1117  3400               	retlw	0
   965  1118                     STR_17:	
   966  1118  3444               	retlw	68	;'D'
   967  1119  346C               	retlw	108	;'l'
   968  111A  3456               	retlw	86	;'V'
   969  111B  343A               	retlw	58	;':'
   970  111C  3420               	retlw	32	;' '
   971  111D  3400               	retlw	0
   972  111E                     STR_14:	
   973  111E  3425               	retlw	37	;'%'
   974  111F  3430               	retlw	48	;'0'
   975  1120  3434               	retlw	52	;'4'
   976  1121  3464               	retlw	100	;'d'
   977  1122  3400               	retlw	0
   978  1123                     __end_of__stringdata:	
   979                           
   980                           ; #config settings
   981  0000                     
   982                           	psect	cinit
   983  0015                     start_initialization:	
   984  0015                     __initialization:	
   985                           
   986                           ; Clear objects allocated to BANK0
   987  0015  1383               	bcf	3,7	;select IRP bank0
   988  0016  3041               	movlw	low __pbssBANK0
   989  0017  0084               	movwf	4
   990  0018  3059               	movlw	low (__pbssBANK0+24)
   991  0019  120A  158A  205A  120A  118A  	fcall	clear_ram0
   992                           
   993                           ; Clear objects allocated to BANK1
   994  001E  30A0               	movlw	low __pbssBANK1
   995  001F  0084               	movwf	4
   996  0020  30DA               	movlw	low (__pbssBANK1+58)
   997  0021  120A  158A  205A  120A  118A  	fcall	clear_ram0
   998                           
   999                           ; Initialize objects allocated to BANK1
  1000  0026  1683               	bsf	3,5	;RP0=1, select bank1
  1001  0027  1303               	bcf	3,6	;RP1=0, select bank1
  1002  0028  120A  158A  203A  120A  118A  	fcall	__pidataBANK1	;fetch initializer
  1003  002D  00EB               	movwf	__pdataBANK1& (0+127)
  1004  002E  120A  158A  203B  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
  1005  0033  00EC               	movwf	(__pdataBANK1+1)& (0+127)
  1006  0034  120A  158A  203C  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
  1007  0039  00ED               	movwf	(__pdataBANK1+2)& (0+127)
  1008  003A  120A  158A  203D   	fcall	__pidataBANK1+3	;fetch initializer
  1009  003D  00EE               	movwf	(__pdataBANK1+3)& (0+127)
  1010  003E                     end_of_initialization:	
  1011                           ;End of C runtime variable initialization code
  1012                           
  1013  003E                     __end_of__initialization:	
  1014  003E  0183               	clrf	3
  1015  003F  120A  158A  2D2E   	ljmp	_main	;jump to C main() function
  1016                           
  1017                           	psect	bssBANK0
  1018  0041                     __pbssBANK0:	
  1019  0041                     _fitemp:	
  1020  0041                     	ds	2
  1021  0043                     _fop_rule1:	
  1022  0043                     	ds	2
  1023  0045                     _fop_rule2:	
  1024  0045                     	ds	2
  1025  0047                     _fop_rule3:	
  1026  0047                     	ds	2
  1027  0049                     _pwm:	
  1028  0049                     	ds	2
  1029  004B                     _pwmAnt:	
  1030  004B                     	ds	2
  1031  004D                     _temp:	
  1032  004D                     	ds	2
  1033  004F                     _tip:	
  1034  004F                     	ds	2
  1035  0051                     _total_area:	
  1036  0051                     	ds	2
  1037  0053                     _x:	
  1038  0053                     	ds	2
  1039  0055                     _y:	
  1040  0055                     	ds	2
  1041  0057                     _ativa_fan:	
  1042  0057                     	ds	2
  1043                           
  1044                           	psect	bssBANK1
  1045  00A0                     __pbssBANK1:	
  1046  00A0                     _ADCResult:	
  1047  00A0                     	ds	2
  1048  00A2                     _contador_rb6:	
  1049  00A2                     	ds	2
  1050  00A4                     _contagens_tm0:	
  1051  00A4                     	ds	2
  1052  00A6                     _deltaV:	
  1053  00A6                     	ds	2
  1054  00A8                     _derro:	
  1055  00A8                     	ds	2
  1056  00AA                     _fisetpoint:	
  1057  00AA                     	ds	2
  1058  00AC                     _foTip:	
  1059  00AC                     	ds	2
  1060  00AE                     _ideal:	
  1061  00AE                     	ds	2
  1062  00B0                     _posicao_do_grafico:	
  1063  00B0                     	ds	2
  1064  00B2                     _posicao_do_grafico_food:	
  1065  00B2                     	ds	2
  1066  00B4                     _posicao_do_grafico_service:	
  1067  00B4                     	ds	2
  1068  00B6                     _pulsos:	
  1069  00B6                     	ds	2
  1070  00B8                     _rpm:	
  1071  00B8                     	ds	2
  1072  00BA                     _status:	
  1073  00BA                     	ds	2
  1074  00BC                     _sum:	
  1075  00BC                     	ds	2
  1076  00BE                     _temp_lida:	
  1077  00BE                     	ds	2
  1078  00C0                     _tempo_rb6:	
  1079  00C0                     	ds	2
  1080  00C2                     _tip_average:	
  1081  00C2                     	ds	2
  1082  00C4                     _tip_gorgeous:	
  1083  00C4                     	ds	2
  1084  00C6                     _display_pwm:	
  1085  00C6                     	ds	10
  1086  00D0                     _display_rpm:	
  1087  00D0                     	ds	10
  1088                           
  1089                           	psect	dataBANK1
  1090  00EB                     __pdataBANK1:	
  1091  00EB                     _pas_cooler:	
  1092  00EB                     	ds	2
  1093  00ED                     _tf:	
  1094  00ED                     	ds	2
  1095                           
  1096                           	psect	clrtext
  1097  085A                     clear_ram0:	
  1098                           ;	Called with FSR containing the base address, and
  1099                           ;	W with the last address+1
  1100                           
  1101  085A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1102  085B                     clrloop0:	
  1103  085B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1104  085C  0A84               	incf	4,f	;increment pointer
  1105  085D  0604               	xorwf	4,w	;XOR with final address
  1106  085E  1903               	btfsc	3,2	;have we reached the end yet?
  1107  085F  3400               	retlw	0	;all done for this memory range, return
  1108  0860  0604               	xorwf	4,w	;XOR again to restore value
  1109  0861  285B               	goto	clrloop0	;do the next byte
  1110                           
  1111                           	psect	cstackBANK3
  1112  0190                     __pcstackBANK3:	
  1113  0190                     sprintf@ap:	
  1114                           
  1115                           ; 1 bytes @ 0x0
  1116  0190                     	ds	1
  1117  0191                     sprintf@prec:	
  1118                           
  1119                           ; 1 bytes @ 0x1
  1120  0191                     	ds	1
  1121  0192                     sprintf@_val:	
  1122                           
  1123                           ; 4 bytes @ 0x2
  1124  0192                     	ds	4
  1125  0196                     sprintf@flag:	
  1126                           
  1127                           ; 1 bytes @ 0x6
  1128  0196                     	ds	1
  1129  0197                     sprintf@width:	
  1130                           
  1131                           ; 2 bytes @ 0x7
  1132  0197                     	ds	2
  1133  0199                     sprintf@sp:	
  1134                           
  1135                           ; 1 bytes @ 0x9
  1136  0199                     	ds	1
  1137  019A                     sprintf@c:	
  1138                           
  1139                           ; 1 bytes @ 0xA
  1140  019A                     	ds	1
  1141                           
  1142                           	psect	cstackBANK1
  1143  00DA                     __pcstackBANK1:	
  1144  00DA                     ?___lwmod:	
  1145  00DA                     ___aldiv@counter:	
  1146                           ; 2 bytes @ 0x0
  1147                           
  1148  00DA                     ___lwmod@divisor:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151                           
  1152                           ; 2 bytes @ 0x0
  1153  00DA                     	ds	1
  1154  00DB                     ___aldiv@sign:	
  1155                           
  1156                           ; 1 bytes @ 0x1
  1157  00DB                     	ds	1
  1158  00DC                     ___lwmod@dividend:	
  1159  00DC                     ___aldiv@quotient:	
  1160                           ; 2 bytes @ 0x2
  1161                           
  1162                           
  1163                           ; 4 bytes @ 0x2
  1164  00DC                     	ds	2
  1165  00DE                     ?_sprintf:	
  1166  00DE                     sprintf@f:	
  1167                           ; 2 bytes @ 0x4
  1168                           
  1169                           
  1170                           ; 2 bytes @ 0x4
  1171  00DE                     	ds	2
  1172  00E0                     ?_USART_Init:	
  1173  00E0                     USART_Init@BaudRate:	
  1174                           ; 0 bytes @ 0x6
  1175                           
  1176                           
  1177                           ; 4 bytes @ 0x6
  1178  00E0                     	ds	2
  1179  00E2                     ??_sprintf:	
  1180                           
  1181                           ; 0 bytes @ 0x8
  1182  00E2                     	ds	2
  1183  00E4                     ??_USART_Init:	
  1184                           
  1185                           ; 0 bytes @ 0xA
  1186  00E4                     	ds	4
  1187  00E8                     ??_main:	
  1188                           
  1189                           ; 0 bytes @ 0xE
  1190  00E8                     	ds	3
  1191                           
  1192                           	psect	cstackCOMMON
  1193  0070                     __pcstackCOMMON:	
  1194  0070                     ?_TIMER0_Set:	
  1195  0070                     ?_TIMER0_Init:	
  1196                           ; 0 bytes @ 0x0
  1197                           
  1198  0070                     ?_ADC_Init:	
  1199                           ; 0 bytes @ 0x0
  1200                           
  1201  0070                     ?_PWM_Init:	
  1202                           ; 0 bytes @ 0x0
  1203                           
  1204  0070                     ?_LCD_Init:	
  1205                           ; 0 bytes @ 0x0
  1206                           
  1207  0070                     ?_LCD_Clear:	
  1208                           ; 0 bytes @ 0x0
  1209                           
  1210  0070                     ?_isdigit:	
  1211                           ; 0 bytes @ 0x0
  1212                           
  1213  0070                     ?_ISR:	
  1214                           ; 1 bit 
  1215                           
  1216  0070                     ?_main:	
  1217                           ; 0 bytes @ 0x0
  1218                           
  1219  0070                     ?_USART_WriteChar:	
  1220                           ; 0 bytes @ 0x0
  1221                           
  1222  0070                     ?_LCD_WriteCmd:	
  1223                           ; 0 bytes @ 0x0
  1224                           
  1225  0070                     ?_LCD_WriteData:	
  1226                           ; 0 bytes @ 0x0
  1227                           
  1228  0070                     ?i1_USART_WriteChar:	
  1229                           ; 0 bytes @ 0x0
  1230                           
  1231  0070                     ??i1_USART_WriteChar:	
  1232                           ; 0 bytes @ 0x0
  1233                           
  1234  0070                     ?i1_TIMER0_Set:	
  1235                           ; 0 bytes @ 0x0
  1236                           
  1237  0070                     ??i1_TIMER0_Set:	
  1238                           ; 0 bytes @ 0x0
  1239                           
  1240  0070                     ?_USART_ReceiveChar:	
  1241                           ; 0 bytes @ 0x0
  1242                           
  1243  0070                     ?_max_val:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?i1___lwdiv:	
  1247                           ; 2 bytes @ 0x0
  1248                           
  1249  0070                     ?___ftpack:	
  1250                           ; 2 bytes @ 0x0
  1251                           
  1252  0070                     i1USART_WriteChar@byte:	
  1253                           ; 3 bytes @ 0x0
  1254                           
  1255  0070                     i1TIMER0_Set@contagens:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     max_val@a:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     i1___lwdiv@divisor:	
  1262                           ; 2 bytes @ 0x0
  1263                           
  1264  0070                     ___ftpack@arg:	
  1265                           ; 2 bytes @ 0x0
  1266                           
  1267                           
  1268                           ; 3 bytes @ 0x0
  1269  0070                     	ds	1
  1270  0071                     ?i1_USART_WriteString:	
  1271  0071                     i1USART_WriteString@str:	
  1272                           ; 0 bytes @ 0x1
  1273                           
  1274                           
  1275                           ; 2 bytes @ 0x1
  1276  0071                     	ds	1
  1277  0072                     max_val@b:	
  1278  0072                     i1___lwdiv@dividend:	
  1279                           ; 2 bytes @ 0x2
  1280                           
  1281                           
  1282                           ; 2 bytes @ 0x2
  1283  0072                     	ds	1
  1284  0073                     ??_USART_ReceiveChar:	
  1285  0073                     ??i1_USART_WriteString:	
  1286                           ; 0 bytes @ 0x3
  1287                           
  1288  0073                     ___ftpack@exp:	
  1289                           ; 0 bytes @ 0x3
  1290                           
  1291                           
  1292                           ; 1 bytes @ 0x3
  1293  0073                     	ds	1
  1294  0074                     ??_max_val:	
  1295  0074                     ??i1___lwdiv:	
  1296                           ; 0 bytes @ 0x4
  1297                           
  1298  0074                     USART_ReceiveChar@byte:	
  1299                           ; 0 bytes @ 0x4
  1300                           
  1301  0074                     ___ftpack@sign:	
  1302                           ; 1 bytes @ 0x4
  1303                           
  1304                           
  1305                           ; 1 bytes @ 0x4
  1306  0074                     	ds	1
  1307  0075                     ??___ftpack:	
  1308  0075                     i1___lwdiv@quotient:	
  1309                           ; 0 bytes @ 0x5
  1310                           
  1311                           
  1312                           ; 2 bytes @ 0x5
  1313  0075                     	ds	2
  1314  0077                     i1___lwdiv@counter:	
  1315                           
  1316                           ; 1 bytes @ 0x7
  1317  0077                     	ds	1
  1318  0078                     ??_trimf:	
  1319  0078                     ??_trapmf:	
  1320                           ; 0 bytes @ 0x8
  1321                           
  1322  0078                     ?i1___wmul:	
  1323                           ; 0 bytes @ 0x8
  1324                           
  1325  0078                     ?___lwtoft:	
  1326                           ; 2 bytes @ 0x8
  1327                           
  1328  0078                     ___lwtoft@c:	
  1329                           ; 3 bytes @ 0x8
  1330                           
  1331  0078                     i1___wmul@multiplier:	
  1332                           ; 2 bytes @ 0x8
  1333                           
  1334                           
  1335                           ; 2 bytes @ 0x8
  1336  0078                     	ds	2
  1337  007A                     i1___wmul@multiplicand:	
  1338                           
  1339                           ; 2 bytes @ 0xA
  1340  007A                     	ds	1
  1341  007B                     ??___lwtoft:	
  1342                           
  1343                           ; 0 bytes @ 0xB
  1344  007B                     	ds	1
  1345  007C                     ??i1___wmul:	
  1346  007C                     trimf@ua:	
  1347                           ; 0 bytes @ 0xC
  1348                           
  1349  007C                     trapmf@ua:	
  1350                           ; 2 bytes @ 0xC
  1351                           
  1352  007C                     i1___wmul@product:	
  1353                           ; 2 bytes @ 0xC
  1354                           
  1355                           
  1356                           ; 2 bytes @ 0xC
  1357  007C                     	ds	2
  1358                           
  1359                           	psect	cstackBANK0
  1360  0020                     __pcstackBANK0:	
  1361  0020                     ?___ftge:	
  1362  0020                     ?i1_PWM_DutyCycle2:	
  1363                           ; 1 bit 
  1364                           
  1365  0020                     ?_trimf:	
  1366                           ; 0 bytes @ 0x0
  1367                           
  1368  0020                     ?_trapmf:	
  1369                           ; 2 bytes @ 0x0
  1370                           
  1371  0020                     trimf@x:	
  1372                           ; 2 bytes @ 0x0
  1373                           
  1374  0020                     trapmf@x:	
  1375                           ; 2 bytes @ 0x0
  1376                           
  1377  0020                     i1PWM_DutyCycle2@valor:	
  1378                           ; 2 bytes @ 0x0
  1379                           
  1380  0020                     ___ftge@ff1:	
  1381                           ; 2 bytes @ 0x0
  1382                           
  1383                           
  1384                           ; 3 bytes @ 0x0
  1385  0020                     	ds	2
  1386  0022                     ??i1_PWM_DutyCycle2:	
  1387  0022                     trimf@a:	
  1388                           ; 0 bytes @ 0x2
  1389                           
  1390  0022                     trapmf@a:	
  1391                           ; 2 bytes @ 0x2
  1392                           
  1393                           
  1394                           ; 2 bytes @ 0x2
  1395  0022                     	ds	1
  1396  0023                     ___ftge@ff2:	
  1397                           
  1398                           ; 3 bytes @ 0x3
  1399  0023                     	ds	1
  1400  0024                     trimf@b:	
  1401  0024                     trapmf@b:	
  1402                           ; 2 bytes @ 0x4
  1403                           
  1404                           
  1405                           ; 2 bytes @ 0x4
  1406  0024                     	ds	2
  1407  0026                     ??___ftge:	
  1408  0026                     trimf@c:	
  1409                           ; 0 bytes @ 0x6
  1410                           
  1411  0026                     trapmf@c:	
  1412                           ; 2 bytes @ 0x6
  1413                           
  1414                           
  1415                           ; 2 bytes @ 0x6
  1416  0026                     	ds	2
  1417  0028                     trapmf@d:	
  1418                           
  1419                           ; 2 bytes @ 0x8
  1420  0028                     	ds	4
  1421  002C                     ?_Fuzzy:	
  1422  002C                     Fuzzy@setpoint:	
  1423                           ; 0 bytes @ 0xC
  1424                           
  1425                           
  1426                           ; 2 bytes @ 0xC
  1427  002C                     	ds	2
  1428  002E                     ??_Fuzzy:	
  1429                           
  1430                           ; 0 bytes @ 0xE
  1431  002E                     	ds	2
  1432  0030                     Fuzzy@velocidade:	
  1433                           
  1434                           ; 1 bytes @ 0x10
  1435  0030                     	ds	1
  1436  0031                     Fuzzy@sum:	
  1437                           
  1438                           ; 2 bytes @ 0x11
  1439  0031                     	ds	2
  1440  0033                     ??_ISR:	
  1441                           
  1442                           ; 0 bytes @ 0x13
  1443  0033                     	ds	4
  1444  0037                     ?_PWM_DutyCycle2:	
  1445  0037                     ??_TIMER0_Set:	
  1446                           ; 0 bytes @ 0x17
  1447                           
  1448  0037                     ??_TIMER0_Init:	
  1449                           ; 0 bytes @ 0x17
  1450                           
  1451  0037                     ??_ADC_Init:	
  1452                           ; 0 bytes @ 0x17
  1453                           
  1454  0037                     ??_PWM_Init:	
  1455                           ; 0 bytes @ 0x17
  1456                           
  1457  0037                     ?_LCD_Cursor:	
  1458                           ; 0 bytes @ 0x17
  1459                           
  1460  0037                     ?_PWM_DutyCycle1:	
  1461                           ; 0 bytes @ 0x17
  1462                           
  1463  0037                     ??_isdigit:	
  1464                           ; 0 bytes @ 0x17
  1465                           
  1466  0037                     ??_USART_WriteChar:	
  1467                           ; 0 bytes @ 0x17
  1468                           
  1469  0037                     ??_LCD_WriteCmd:	
  1470                           ; 0 bytes @ 0x17
  1471                           
  1472  0037                     ??_LCD_WriteData:	
  1473                           ; 0 bytes @ 0x17
  1474                           
  1475  0037                     ?___wmul:	
  1476                           ; 0 bytes @ 0x17
  1477                           
  1478  0037                     ?___lwdiv:	
  1479                           ; 2 bytes @ 0x17
  1480                           
  1481  0037                     ?___aldiv:	
  1482                           ; 2 bytes @ 0x17
  1483                           
  1484  0037                     USART_WriteChar@byte:	
  1485                           ; 4 bytes @ 0x17
  1486                           
  1487  0037                     TIMER0_Set@contagens:	
  1488                           ; 1 bytes @ 0x17
  1489                           
  1490  0037                     LCD_Cursor@Col:	
  1491                           ; 1 bytes @ 0x17
  1492                           
  1493  0037                     _isdigit$1452:	
  1494                           ; 1 bytes @ 0x17
  1495                           
  1496  0037                     PWM_DutyCycle1@valor:	
  1497                           ; 1 bytes @ 0x17
  1498                           
  1499  0037                     PWM_DutyCycle2@valor:	
  1500                           ; 2 bytes @ 0x17
  1501                           
  1502  0037                     ___wmul@multiplier:	
  1503                           ; 2 bytes @ 0x17
  1504                           
  1505  0037                     ___lwdiv@divisor:	
  1506                           ; 2 bytes @ 0x17
  1507                           
  1508  0037                     ___aldiv@divisor:	
  1509                           ; 2 bytes @ 0x17
  1510                           
  1511                           
  1512                           ; 4 bytes @ 0x17
  1513  0037                     	ds	1
  1514  0038                     ?_USART_WriteString:	
  1515  0038                     ??_LCD_Cursor:	
  1516                           ; 0 bytes @ 0x18
  1517                           
  1518  0038                     LCD_WriteCmd@Byte:	
  1519                           ; 0 bytes @ 0x18
  1520                           
  1521  0038                     LCD_WriteData@Byte:	
  1522                           ; 1 bytes @ 0x18
  1523                           
  1524  0038                     isdigit@c:	
  1525                           ; 1 bytes @ 0x18
  1526                           
  1527  0038                     USART_WriteString@str:	
  1528                           ; 1 bytes @ 0x18
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x18
  1532  0038                     	ds	1
  1533  0039                     ??_PWM_DutyCycle2:	
  1534  0039                     ??_LCD_Init:	
  1535                           ; 0 bytes @ 0x19
  1536                           
  1537  0039                     ?_LCD_WriteString:	
  1538                           ; 0 bytes @ 0x19
  1539                           
  1540  0039                     ??_PWM_DutyCycle1:	
  1541                           ; 0 bytes @ 0x19
  1542                           
  1543  0039                     ??_LCD_Clear:	
  1544                           ; 0 bytes @ 0x19
  1545                           
  1546  0039                     LCD_Cursor@Row:	
  1547                           ; 0 bytes @ 0x19
  1548                           
  1549  0039                     LCD_WriteString@Str:	
  1550                           ; 1 bytes @ 0x19
  1551                           
  1552  0039                     ___wmul@multiplicand:	
  1553                           ; 2 bytes @ 0x19
  1554                           
  1555  0039                     ___lwdiv@dividend:	
  1556                           ; 2 bytes @ 0x19
  1557                           
  1558                           
  1559                           ; 2 bytes @ 0x19
  1560  0039                     	ds	1
  1561  003A                     ??_USART_WriteString:	
  1562                           
  1563                           ; 0 bytes @ 0x1A
  1564  003A                     	ds	1
  1565  003B                     ??_LCD_WriteString:	
  1566  003B                     ??___wmul:	
  1567                           ; 0 bytes @ 0x1B
  1568                           
  1569  003B                     ??___lwdiv:	
  1570                           ; 0 bytes @ 0x1B
  1571                           
  1572  003B                     ___wmul@product:	
  1573                           ; 0 bytes @ 0x1B
  1574                           
  1575  003B                     ___aldiv@dividend:	
  1576                           ; 2 bytes @ 0x1B
  1577                           
  1578                           
  1579                           ; 4 bytes @ 0x1B
  1580  003B                     	ds	1
  1581  003C                     ___lwdiv@counter:	
  1582                           
  1583                           ; 1 bytes @ 0x1C
  1584  003C                     	ds	1
  1585  003D                     ___lwdiv@quotient:	
  1586                           
  1587                           ; 2 bytes @ 0x1D
  1588  003D                     	ds	2
  1589  003F                     ??___aldiv:	
  1590  003F                     ??___lwmod:	
  1591                           ; 0 bytes @ 0x1F
  1592                           
  1593                           
  1594                           ; 0 bytes @ 0x1F
  1595  003F                     	ds	1
  1596  0040                     ___lwmod@counter:	
  1597                           
  1598                           ; 1 bytes @ 0x20
  1599  0040                     	ds	1
  1600                           
  1601                           	psect	maintext
  1602  0D2E                     __pmaintext:	
  1603 ;;
  1604 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1605 ;;
  1606 ;; *************** function _main *****************
  1607 ;; Defined at:
  1608 ;;		line 484 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;		None               void
  1615 ;; Registers used:
  1616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 17F/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0
  1624 ;;      Temps:          0       0       3       0       0
  1625 ;;      Totals:         0       0       3       0       0
  1626 ;;Total ram usage:        3 bytes
  1627 ;; Hardware stack levels required when called:    6
  1628 ;; This function calls:
  1629 ;;		_ADC_Init
  1630 ;;		_LCD_Clear
  1631 ;;		_LCD_Cursor
  1632 ;;		_LCD_Init
  1633 ;;		_LCD_WriteString
  1634 ;;		_PWM_DutyCycle1
  1635 ;;		_PWM_DutyCycle2
  1636 ;;		_PWM_Init
  1637 ;;		_TIMER0_Init
  1638 ;;		_TIMER0_Set
  1639 ;;		_USART_Init
  1640 ;;		_USART_WriteString
  1641 ;;		_sprintf
  1642 ;; This function is called by:
  1643 ;;		Startup code after reset
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _main
  1649  0D2E                     _main:	
  1650                           
  1651                           ;main.c: 486: TRISA = 0b00000001;
  1652                           
  1653                           ;incstack = 0
  1654                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1655  0D2E  3001               	movlw	1
  1656  0D2F  1683               	bsf	3,5	;RP0=1, select bank1
  1657  0D30  1303               	bcf	3,6	;RP1=0, select bank1
  1658  0D31  0085               	movwf	5	;volatile
  1659                           
  1660                           ;main.c: 487: PORTA = 0b00000001;
  1661  0D32  3001               	movlw	1
  1662  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0D34  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0D35  0085               	movwf	5	;volatile
  1665                           
  1666                           ;main.c: 488: TRISB = 0b00000000;
  1667  0D36  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0D37  1303               	bcf	3,6	;RP1=0, select bank1
  1669  0D38  0186               	clrf	6	;volatile
  1670                           
  1671                           ;main.c: 489: PORTB = 0b00000000;
  1672  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0D3B  0186               	clrf	6	;volatile
  1675                           
  1676                           ;main.c: 490: TRISC = 0b10000001;
  1677  0D3C  3081               	movlw	129
  1678  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  1679  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  1680  0D3F  0087               	movwf	7	;volatile
  1681                           
  1682                           ;main.c: 491: PORTC = 0b11000000;
  1683  0D40  30C0               	movlw	192
  1684  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0D43  0087               	movwf	7	;volatile
  1687                           
  1688                           ;main.c: 492: TRISD = 0b00000000;
  1689  0D44  1683               	bsf	3,5	;RP0=1, select bank1
  1690  0D45  1303               	bcf	3,6	;RP1=0, select bank1
  1691  0D46  0188               	clrf	8	;volatile
  1692                           
  1693                           ;main.c: 493: PORTD = 0b00000000;
  1694  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0D49  0188               	clrf	8	;volatile
  1697                           
  1698                           ;main.c: 494: TRISE = 0b00000000;
  1699  0D4A  1683               	bsf	3,5	;RP0=1, select bank1
  1700  0D4B  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0D4C  0189               	clrf	9	;volatile
  1702                           
  1703                           ;main.c: 495: PORTE = 0b00000000;
  1704  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  1705  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  1706  0D4F  0189               	clrf	9	;volatile
  1707                           
  1708                           ;main.c: 498: T1CON = 0x03;
  1709  0D50  3003               	movlw	3
  1710  0D51  0090               	movwf	16	;volatile
  1711                           
  1712                           ;main.c: 499: TMR1L = 0x00;
  1713  0D52  018E               	clrf	14	;volatile
  1714                           
  1715                           ;main.c: 500: TMR1H = 0x00;
  1716  0D53  018F               	clrf	15	;volatile
  1717                           
  1718                           ;main.c: 503: USART_Init(115200);
  1719  0D54  3000               	movlw	0
  1720  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0D56  1303               	bcf	3,6	;RP1=0, select bank1
  1722  0D57  00E3               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1723  0D58  3001               	movlw	1
  1724  0D59  00E2               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1725  0D5A  30C2               	movlw	194
  1726  0D5B  00E1               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1727  0D5C  3000               	movlw	0
  1728  0D5D  00E0               	movwf	USART_Init@BaudRate^(0+128)
  1729  0D5E  120A  158A  2302  120A  158A  	fcall	_USART_Init
  1730                           
  1731                           ;main.c: 504: TIMER0_Init();
  1732  0D63  120A  158A  2062  120A  158A  	fcall	_TIMER0_Init
  1733                           
  1734                           ;main.c: 505: ADC_Init();
  1735  0D68  120A  158A  20AA  120A  158A  	fcall	_ADC_Init
  1736                           
  1737                           ;main.c: 506: PWM_Init();
  1738  0D6D  120A  158A  2184  120A  158A  	fcall	_PWM_Init
  1739                           
  1740                           ;main.c: 507: LCD_Init();
  1741  0D72  120A  158A  2422  120A  158A  	fcall	_LCD_Init
  1742                           
  1743                           ;main.c: 510: INTCONbits.PEIE = 1;
  1744  0D77  170B               	bsf	11,6	;volatile
  1745                           
  1746                           ;main.c: 511: INTCONbits.GIE = 1;
  1747  0D78  178B               	bsf	11,7	;volatile
  1748                           
  1749                           ;main.c: 514: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1750  0D79  3044               	movlw	low (STR_11| (0+32768))
  1751  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  1752  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  1753  0D7C  00B8               	movwf	USART_WriteString@str
  1754  0D7D  3090               	movlw	high (STR_11| (0+32768))
  1755  0D7E  00B9               	movwf	USART_WriteString@str+1
  1756  0D7F  120A  158A  21CD  120A  158A  	fcall	_USART_WriteString
  1757                           
  1758                           ;main.c: 515: USART_WriteString("USART: 115.200bps\n\r");
  1759  0D84  3061               	movlw	low (STR_12| (0+32768))
  1760  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0D87  00B8               	movwf	USART_WriteString@str
  1763  0D88  3090               	movlw	high (STR_12| (0+32768))
  1764  0D89  00B9               	movwf	USART_WriteString@str+1
  1765  0D8A  120A  158A  21CD  120A  158A  	fcall	_USART_WriteString
  1766                           
  1767                           ;main.c: 518: LCD_Init();
  1768  0D8F  120A  158A  2422  120A  158A  	fcall	_LCD_Init
  1769                           
  1770                           ;main.c: 519: LCD_Cursor(0,0);
  1771  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0D96  01B7               	clrf	LCD_Cursor@Col
  1774  0D97  3000               	movlw	0
  1775  0D98  120A  158A  20BC  120A  158A  	fcall	_LCD_Cursor
  1776                           
  1777                           ;main.c: 520: LCD_WriteString("Inicializando...");
  1778  0D9D  3075               	movlw	low (STR_13| (0+32768))
  1779  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0DA0  00B9               	movwf	LCD_WriteString@Str
  1782  0DA1  3090               	movlw	high (STR_13| (0+32768))
  1783  0DA2  00BA               	movwf	LCD_WriteString@Str+1
  1784  0DA3  120A  158A  21A8  120A  158A  	fcall	_LCD_WriteString
  1785                           
  1786                           ;main.c: 523: PWM_DutyCycle1(0);
  1787  0DA8  3000               	movlw	0
  1788  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0DAA  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0DAB  00B7               	movwf	PWM_DutyCycle1@valor
  1791  0DAC  3000               	movlw	0
  1792  0DAD  00B8               	movwf	PWM_DutyCycle1@valor+1
  1793  0DAE  120A  158A  2108  120A  158A  	fcall	_PWM_DutyCycle1
  1794                           
  1795                           ;main.c: 524: PWM_DutyCycle2(0);
  1796  0DB3  3000               	movlw	0
  1797  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0DB6  00B7               	movwf	PWM_DutyCycle2@valor
  1800  0DB7  3000               	movlw	0
  1801  0DB8  00B8               	movwf	PWM_DutyCycle2@valor+1
  1802  0DB9  120A  158A  2123  120A  158A  	fcall	_PWM_DutyCycle2
  1803                           
  1804                           ;main.c: 527: TIMER0_Set(238);
  1805  0DBE  30EE               	movlw	238
  1806  0DBF  120A  158A  2044  120A  158A  	fcall	_TIMER0_Set
  1807                           
  1808                           ;main.c: 530: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1809  0DC4  3018               	movlw	24
  1810  0DC5  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0DC6  1303               	bcf	3,6	;RP1=0, select bank1
  1812  0DC7  00EA               	movwf	(??_main^(0+128)+2)
  1813  0DC8  3061               	movlw	97
  1814  0DC9  00E9               	movwf	(??_main^(0+128)+1)
  1815  0DCA  306E               	movlw	110
  1816  0DCB  00E8               	movwf	??_main^(0+128)
  1817  0DCC                     u3397:	
  1818  0DCC  0BE8               	decfsz	??_main^(0+128),f
  1819  0DCD  2DCC               	goto	u3397
  1820  0DCE  0BE9               	decfsz	(??_main^(0+128)+1),f
  1821  0DCF  2DCC               	goto	u3397
  1822  0DD0  0BEA               	decfsz	(??_main^(0+128)+2),f
  1823  0DD1  2DCC               	goto	u3397
  1824  0DD2  0000               	nop
  1825  0DD3                     l215:	
  1826                           ;main.c: 533: while(1)
  1827                           
  1828                           
  1829                           ;main.c: 534: {
  1830                           ;main.c: 536: sprintf(display_rpm,"%04d", deltaV);
  1831  0DD3  301E               	movlw	low (STR_14| (0+32768))
  1832  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  1833  0DD5  1303               	bcf	3,6	;RP1=0, select bank1
  1834  0DD6  00DE               	movwf	sprintf@f^(0+128)
  1835  0DD7  3091               	movlw	high (STR_14| (0+32768))
  1836  0DD8  00DF               	movwf	(sprintf@f^(0+128)+1)
  1837  0DD9  0827               	movf	(_deltaV+1)^(0+128),w
  1838  0DDA  01E1               	clrf	((?_sprintf+1)^(0+128)+2)
  1839  0DDB  07E1               	addwf	((?_sprintf+1)^(0+128)+2),f
  1840  0DDC  0826               	movf	_deltaV^(0+128),w
  1841  0DDD  01E0               	clrf	(?_sprintf^(0+128)+2)
  1842  0DDE  07E0               	addwf	(?_sprintf^(0+128)+2),f
  1843  0DDF  30D0               	movlw	_display_rpm& (0+255)
  1844  0DE0  120A  118A  240F  120A  158A  	fcall	_sprintf
  1845                           
  1846                           ;main.c: 537: sprintf(display_pwm,"%04d", pwm);
  1847  0DE5  301E               	movlw	low (STR_14| (0+32768))
  1848  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  1849  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  1850  0DE8  00DE               	movwf	sprintf@f^(0+128)
  1851  0DE9  3091               	movlw	high (STR_14| (0+32768))
  1852  0DEA  00DF               	movwf	(sprintf@f^(0+128)+1)
  1853  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0DED  084A               	movf	_pwm+1,w
  1856  0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  1857  0DEF  1303               	bcf	3,6	;RP1=0, select bank1
  1858  0DF0  01E1               	clrf	((?_sprintf+1)^(0+128)+2)
  1859  0DF1  07E1               	addwf	((?_sprintf+1)^(0+128)+2),f
  1860  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0DF3  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0DF4  0849               	movf	_pwm,w
  1863  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0DF6  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0DF7  01E0               	clrf	(?_sprintf^(0+128)+2)
  1866  0DF8  07E0               	addwf	(?_sprintf^(0+128)+2),f
  1867  0DF9  30C6               	movlw	_display_pwm& (0+255)
  1868  0DFA  120A  118A  240F  120A  158A  	fcall	_sprintf
  1869                           
  1870                           ;main.c: 541: USART_WriteString(display_rpm);
  1871  0DFF  30D0               	movlw	_display_rpm& (0+255)
  1872  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0E01  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0E02  00B8               	movwf	USART_WriteString@str
  1875  0E03  3000               	movlw	0
  1876  0E04  00B9               	movwf	USART_WriteString@str+1
  1877  0E05  120A  158A  21CD  120A  158A  	fcall	_USART_WriteString
  1878                           
  1879                           ;main.c: 542: USART_WriteString("\n\r");
  1880  0E0A  3092               	movlw	low ((STR_9+12)| (0+32768))
  1881  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0E0D  00B8               	movwf	USART_WriteString@str
  1884  0E0E  3090               	movlw	high ((STR_9+12)| (0+32768))
  1885  0E0F  00B9               	movwf	USART_WriteString@str+1
  1886  0E10  120A  158A  21CD  120A  158A  	fcall	_USART_WriteString
  1887                           
  1888                           ;main.c: 545: LCD_Clear();
  1889  0E15  120A  158A  2217  120A  158A  	fcall	_LCD_Clear
  1890                           
  1891                           ;main.c: 546: LCD_Cursor(0,0);
  1892  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0E1C  01B7               	clrf	LCD_Cursor@Col
  1895  0E1D  3000               	movlw	0
  1896  0E1E  120A  158A  20BC  120A  158A  	fcall	_LCD_Cursor
  1897                           
  1898                           ;main.c: 547: LCD_WriteString("DlV: ");
  1899  0E23  3018               	movlw	low (STR_17| (0+32768))
  1900  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0E26  00B9               	movwf	LCD_WriteString@Str
  1903  0E27  3091               	movlw	high (STR_17| (0+32768))
  1904  0E28  00BA               	movwf	LCD_WriteString@Str+1
  1905  0E29  120A  158A  21A8  120A  158A  	fcall	_LCD_WriteString
  1906                           
  1907                           ;main.c: 548: LCD_Cursor(0,6);
  1908  0E2E  3006               	movlw	6
  1909  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0E30  1303               	bcf	3,6	;RP1=0, select bank1
  1911  0E31  00E8               	movwf	??_main^(0+128)
  1912  0E32  0868               	movf	??_main^(0+128),w
  1913  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0E35  00B7               	movwf	LCD_Cursor@Col
  1916  0E36  3000               	movlw	0
  1917  0E37  120A  158A  20BC  120A  158A  	fcall	_LCD_Cursor
  1918                           
  1919                           ;main.c: 549: LCD_WriteString(display_rpm);
  1920  0E3C  30D0               	movlw	_display_rpm& (0+255)
  1921  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0E3F  00B9               	movwf	LCD_WriteString@Str
  1924  0E40  3000               	movlw	0
  1925  0E41  00BA               	movwf	LCD_WriteString@Str+1
  1926  0E42  120A  158A  21A8  120A  158A  	fcall	_LCD_WriteString
  1927                           
  1928                           ;main.c: 550: LCD_Cursor(1,0);
  1929  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0E49  01B7               	clrf	LCD_Cursor@Col
  1932  0E4A  3001               	movlw	1
  1933  0E4B  120A  158A  20BC  120A  158A  	fcall	_LCD_Cursor
  1934                           
  1935                           ;main.c: 551: LCD_WriteString("PWM: ");
  1936  0E50  3012               	movlw	low (STR_18| (0+32768))
  1937  0E51  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0E52  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0E53  00B9               	movwf	LCD_WriteString@Str
  1940  0E54  3091               	movlw	high (STR_18| (0+32768))
  1941  0E55  00BA               	movwf	LCD_WriteString@Str+1
  1942  0E56  120A  158A  21A8  120A  158A  	fcall	_LCD_WriteString
  1943                           
  1944                           ;main.c: 552: LCD_Cursor(1,6);
  1945  0E5B  3006               	movlw	6
  1946  0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  1947  0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  1948  0E5E  00E8               	movwf	??_main^(0+128)
  1949  0E5F  0868               	movf	??_main^(0+128),w
  1950  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0E62  00B7               	movwf	LCD_Cursor@Col
  1953  0E63  3001               	movlw	1
  1954  0E64  120A  158A  20BC  120A  158A  	fcall	_LCD_Cursor
  1955                           
  1956                           ;main.c: 553: LCD_WriteString(display_pwm);
  1957  0E69  30C6               	movlw	_display_pwm& (0+255)
  1958  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0E6C  00B9               	movwf	LCD_WriteString@Str
  1961  0E6D  3000               	movlw	0
  1962  0E6E  00BA               	movwf	LCD_WriteString@Str+1
  1963  0E6F  120A  158A  21A8  120A  158A  	fcall	_LCD_WriteString
  1964                           
  1965                           ;main.c: 555: _delay((unsigned long)((200)*(18432000/4000.0)));
  1966  0E74  3005               	movlw	5
  1967  0E75  1683               	bsf	3,5	;RP0=1, select bank1
  1968  0E76  1303               	bcf	3,6	;RP1=0, select bank1
  1969  0E77  00EA               	movwf	(??_main^(0+128)+2)
  1970  0E78  30AD               	movlw	173
  1971  0E79  00E9               	movwf	(??_main^(0+128)+1)
  1972  0E7A  30E0               	movlw	224
  1973  0E7B  00E8               	movwf	??_main^(0+128)
  1974  0E7C                     u3407:	
  1975  0E7C  0BE8               	decfsz	??_main^(0+128),f
  1976  0E7D  2E7C               	goto	u3407
  1977  0E7E  0BE9               	decfsz	(??_main^(0+128)+1),f
  1978  0E7F  2E7C               	goto	u3407
  1979  0E80  0BEA               	decfsz	(??_main^(0+128)+2),f
  1980  0E81  2E7C               	goto	u3407
  1981  0E82  2DD3               	goto	l215
  1982  0E83                     __end_of_main:	
  1983                           
  1984                           	psect	text1
  1985  040F                     __ptext1:	
  1986 ;; *************** function _sprintf *****************
  1987 ;; Defined at:
  1988 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  sp              1    wreg     PTR unsigned char 
  1991 ;;		 -> display_pwm(10), display_rpm(10), 
  1992 ;;  f               2    4[BANK1 ] PTR const unsigned char 
  1993 ;;		 -> STR_15(5), STR_14(5), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  sp              1    9[BANK3 ] PTR unsigned char 
  1996 ;;		 -> display_pwm(10), display_rpm(10), 
  1997 ;;  _val            4    2[BANK3 ] struct .
  1998 ;;  width           2    7[BANK3 ] int 
  1999 ;;  c               1   10[BANK3 ] char 
  2000 ;;  flag            1    6[BANK3 ] unsigned char 
  2001 ;;  prec            1    1[BANK3 ] char 
  2002 ;;  ap              1    0[BANK3 ] PTR void [1]
  2003 ;;		 -> ?_sprintf(2), 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  2    4[BANK1 ] int 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         0       0       4       0       0
  2014 ;;      Locals:         0       0       0      11       0
  2015 ;;      Temps:          0       0       3       0       0
  2016 ;;      Totals:         0       0       7      11       0
  2017 ;;Total ram usage:       18 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    5
  2020 ;; This function calls:
  2021 ;;		___lwdiv
  2022 ;;		___lwmod
  2023 ;;		___wmul
  2024 ;;		_isdigit
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _sprintf
  2032  040F                     _sprintf:	
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2036                           ;sprintf@sp stored from wreg
  2037  040F  1683               	bsf	3,5	;RP0=1, select bank3
  2038  0410  1703               	bsf	3,6	;RP1=1, select bank3
  2039  0411  0099               	movwf	sprintf@sp^(0+384)
  2040                           
  2041                           ;doprnt.c: 494: va_list ap;
  2042                           ;doprnt.c: 499: signed char c;
  2043                           ;doprnt.c: 501: int width;
  2044                           ;doprnt.c: 506: signed char prec;
  2045                           ;doprnt.c: 508: unsigned char flag;
  2046                           ;doprnt.c: 527: union {
  2047                           ;doprnt.c: 528: unsigned int _val;
  2048                           ;doprnt.c: 529: struct {
  2049                           ;doprnt.c: 530: const char * _cp;
  2050                           ;doprnt.c: 531: unsigned _len;
  2051                           ;doprnt.c: 532: } _str;
  2052                           ;doprnt.c: 533: } _val;
  2053                           ;doprnt.c: 542: *ap = __va_start();
  2054  0412  30E0               	movlw	(?_sprintf+2)& (0+255)
  2055  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2056  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2057  0415  00E2               	movwf	??_sprintf^(0+128)
  2058  0416  0862               	movf	??_sprintf^(0+128),w
  2059  0417  1683               	bsf	3,5	;RP0=1, select bank3
  2060  0418  1703               	bsf	3,6	;RP1=1, select bank3
  2061  0419  0090               	movwf	sprintf@ap^(0+384)
  2062  041A                     l3143:	
  2063                           ;doprnt.c: 545: while(c = *f++) {
  2064                           
  2065  041A  1683               	bsf	3,5	;RP0=1, select bank1
  2066  041B  1303               	bcf	3,6	;RP1=0, select bank1
  2067  041C  085F               	movf	(sprintf@f+1)^(0+128),w
  2068  041D  00E3               	movwf	(??_sprintf^(0+128)+1)
  2069  041E  085E               	movf	sprintf@f^(0+128),w
  2070  041F  00E2               	movwf	??_sprintf^(0+128)
  2071  0420  0ADE               	incf	sprintf@f^(0+128),f
  2072  0421  1903               	skipnz
  2073  0422  0ADF               	incf	(sprintf@f+1)^(0+128),f
  2074  0423  0863               	movf	(??_sprintf+1)^(0+128),w
  2075  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0426  00FF               	movwf	127
  2078  0427  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0428  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0429  0862               	movf	??_sprintf^(0+128),w
  2081  042A  0084               	movwf	4
  2082  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2083  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2084  042D  160A  118A  2000  120A  118A  	fcall	stringtab
  2085  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0433  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0434  00E4               	movwf	(??_sprintf+2)^(0+128)
  2088  0435  0864               	movf	(??_sprintf+2)^(0+128),w
  2089  0436  1683               	bsf	3,5	;RP0=1, select bank3
  2090  0437  1703               	bsf	3,6	;RP1=1, select bank3
  2091  0438  009A               	movwf	sprintf@c^(0+384)
  2092  0439  089A               	movf	sprintf@c^(0+384),f
  2093  043A  1903               	btfsc	3,2
  2094  043B  2EA9               	goto	l3145
  2095                           
  2096                           ;doprnt.c: 547: if(c != '%')
  2097  043C  081A               	movf	sprintf@c^(0+384),w
  2098  043D  3A25               	xorlw	37
  2099  043E  1903               	skipnz
  2100  043F  2C54               	goto	l3049
  2101                           
  2102                           ;doprnt.c: 549: {
  2103                           ;doprnt.c: 550: ((*sp++ = (c)));
  2104  0440  081A               	movf	sprintf@c^(0+384),w
  2105  0441  1683               	bsf	3,5	;RP0=1, select bank1
  2106  0442  1303               	bcf	3,6	;RP1=0, select bank1
  2107  0443  00E2               	movwf	??_sprintf^(0+128)
  2108  0444  1683               	bsf	3,5	;RP0=1, select bank3
  2109  0445  1703               	bsf	3,6	;RP1=1, select bank3
  2110  0446  0819               	movf	sprintf@sp^(0+384),w
  2111  0447  0084               	movwf	4
  2112  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2113  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2114  044A  0862               	movf	??_sprintf^(0+128),w
  2115  044B  1383               	bcf	3,7	;select IRP bank0
  2116  044C  0080               	movwf	0
  2117  044D  3001               	movlw	1
  2118  044E  00E2               	movwf	??_sprintf^(0+128)
  2119  044F  0862               	movf	??_sprintf^(0+128),w
  2120  0450  1683               	bsf	3,5	;RP0=1, select bank3
  2121  0451  1703               	bsf	3,6	;RP1=1, select bank3
  2122  0452  0799               	addwf	sprintf@sp^(0+384),f
  2123                           
  2124                           ;doprnt.c: 551: continue;
  2125  0453  2C1A               	goto	l3143
  2126  0454                     l3049:	
  2127                           
  2128                           ;doprnt.c: 552: }
  2129                           ;doprnt.c: 555: width = 0;
  2130  0454  0197               	clrf	sprintf@width^(0+384)
  2131  0455  0198               	clrf	(sprintf@width+1)^(0+384)
  2132                           
  2133                           ;doprnt.c: 557: flag = 0;
  2134  0456  0196               	clrf	sprintf@flag^(0+384)
  2135                           
  2136                           ;doprnt.c: 560: switch(*f) {
  2137                           
  2138                           ;doprnt.c: 559: for(;;) {
  2139  0457  2C61               	goto	l3053
  2140  0458                     l492:	
  2141                           ;doprnt.c: 588: case '0':
  2142                           
  2143                           
  2144                           ;doprnt.c: 589: flag |= 0x04;
  2145  0458  1683               	bsf	3,5	;RP0=1, select bank3
  2146  0459  1703               	bsf	3,6	;RP1=1, select bank3
  2147  045A  1516               	bsf	sprintf@flag^(0+384),2
  2148                           
  2149                           ;doprnt.c: 590: f++;
  2150  045B  3001               	movlw	1
  2151  045C  1683               	bsf	3,5	;RP0=1, select bank1
  2152  045D  1303               	bcf	3,6	;RP1=0, select bank1
  2153  045E  07DE               	addwf	sprintf@f^(0+128),f
  2154  045F  1803               	skipnc
  2155  0460  0ADF               	incf	(sprintf@f+1)^(0+128),f
  2156  0461                     l3053:	
  2157                           ;doprnt.c: 593: }
  2158                           
  2159                           ;doprnt.c: 591: continue;
  2160                           
  2161  0461  1683               	bsf	3,5	;RP0=1, select bank1
  2162  0462  1303               	bcf	3,6	;RP1=0, select bank1
  2163  0463  085F               	movf	(sprintf@f+1)^(0+128),w
  2164  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0466  00FF               	movwf	127
  2167  0467  1683               	bsf	3,5	;RP0=1, select bank1
  2168  0468  1303               	bcf	3,6	;RP1=0, select bank1
  2169  0469  085E               	movf	sprintf@f^(0+128),w
  2170  046A  0084               	movwf	4
  2171  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2172  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2173  046D  160A  118A  2000  120A  118A  	fcall	stringtab
  2174                           
  2175                           ; Switch size 1, requested type "space"
  2176                           ; Number of cases is 1, Range of values is 48 to 48
  2177                           ; switch strategies available:
  2178                           ; Name         Instructions Cycles
  2179                           ; simple_byte            4     3 (average)
  2180                           ; direct_byte           14    11 (fixed)
  2181                           ; jumptable            263     9 (fixed)
  2182                           ;	Chosen strategy is simple_byte
  2183  0472  3A30               	xorlw	48	; case 48
  2184  0473  1903               	skipnz
  2185  0474  2C58               	goto	l492
  2186  0475  2C76               	goto	l3055
  2187  0476                     l3055:	
  2188                           ;doprnt.c: 595: }
  2189                           
  2190                           ;doprnt.c: 594: break;
  2191                           
  2192                           
  2193                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2194  0476  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0477  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0478  085F               	movf	(sprintf@f+1)^(0+128),w
  2197  0479  1283               	bcf	3,5	;RP0=0, select bank0
  2198  047A  1303               	bcf	3,6	;RP1=0, select bank0
  2199  047B  00FF               	movwf	127
  2200  047C  1683               	bsf	3,5	;RP0=1, select bank1
  2201  047D  1303               	bcf	3,6	;RP1=0, select bank1
  2202  047E  085E               	movf	sprintf@f^(0+128),w
  2203  047F  0084               	movwf	4
  2204  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0482  160A  118A  2000  120A  118A  	fcall	stringtab
  2207  0487  120A  158A  209A  120A  118A  	fcall	_isdigit
  2208  048C  1C03               	btfss	3,0
  2209  048D  2CFA               	goto	l3069
  2210                           
  2211                           ;doprnt.c: 607: width = 0;
  2212  048E  1683               	bsf	3,5	;RP0=1, select bank3
  2213  048F  1703               	bsf	3,6	;RP1=1, select bank3
  2214  0490  0197               	clrf	sprintf@width^(0+384)
  2215  0491  0198               	clrf	(sprintf@width+1)^(0+384)
  2216  0492                     l3059:	
  2217                           ;doprnt.c: 608: do {
  2218                           
  2219                           
  2220                           ;doprnt.c: 609: width *= 10;
  2221  0492  300A               	movlw	10
  2222  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0494  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0495  00B7               	movwf	___wmul@multiplier
  2225  0496  3000               	movlw	0
  2226  0497  00B8               	movwf	___wmul@multiplier+1
  2227  0498  1683               	bsf	3,5	;RP0=1, select bank3
  2228  0499  1703               	bsf	3,6	;RP1=1, select bank3
  2229  049A  0818               	movf	(sprintf@width+1)^(0+384),w
  2230  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2231  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2232  049D  01BA               	clrf	___wmul@multiplicand+1
  2233  049E  07BA               	addwf	___wmul@multiplicand+1,f
  2234  049F  1683               	bsf	3,5	;RP0=1, select bank3
  2235  04A0  1703               	bsf	3,6	;RP1=1, select bank3
  2236  04A1  0817               	movf	sprintf@width^(0+384),w
  2237  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2238  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2239  04A4  01B9               	clrf	___wmul@multiplicand
  2240  04A5  07B9               	addwf	___wmul@multiplicand,f
  2241  04A6  120A  158A  21F2  120A  118A  	fcall	___wmul
  2242  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2243  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2244  04AD  0838               	movf	?___wmul+1,w
  2245  04AE  1683               	bsf	3,5	;RP0=1, select bank3
  2246  04AF  1703               	bsf	3,6	;RP1=1, select bank3
  2247  04B0  0198               	clrf	(sprintf@width+1)^(0+384)
  2248  04B1  0798               	addwf	(sprintf@width+1)^(0+384),f
  2249  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2250  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  2251  04B4  0837               	movf	?___wmul,w
  2252  04B5  1683               	bsf	3,5	;RP0=1, select bank3
  2253  04B6  1703               	bsf	3,6	;RP1=1, select bank3
  2254  04B7  0197               	clrf	sprintf@width^(0+384)
  2255  04B8  0797               	addwf	sprintf@width^(0+384),f
  2256                           
  2257                           ;doprnt.c: 610: width += *f++ - '0';
  2258  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  2259  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  2260  04BB  085F               	movf	(sprintf@f+1)^(0+128),w
  2261  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2262  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2263  04BE  00FF               	movwf	127
  2264  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  2265  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  2266  04C1  085E               	movf	sprintf@f^(0+128),w
  2267  04C2  0084               	movwf	4
  2268  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2269  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2270  04C5  160A  118A  2000  120A  118A  	fcall	stringtab
  2271  04CA  3ED0               	addlw	208
  2272  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  2273  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  2274  04CD  00E2               	movwf	??_sprintf^(0+128)
  2275  04CE  30FF               	movlw	255
  2276  04CF  1803               	skipnc
  2277  04D0  3000               	movlw	0
  2278  04D1  00E3               	movwf	(??_sprintf^(0+128)+1)
  2279  04D2  0862               	movf	??_sprintf^(0+128),w
  2280  04D3  1683               	bsf	3,5	;RP0=1, select bank3
  2281  04D4  1703               	bsf	3,6	;RP1=1, select bank3
  2282  04D5  0797               	addwf	sprintf@width^(0+384),f
  2283  04D6  1803               	skipnc
  2284  04D7  0A98               	incf	(sprintf@width+1)^(0+384),f
  2285  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  2286  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  2287  04DA  0863               	movf	(??_sprintf+1)^(0+128),w
  2288  04DB  1683               	bsf	3,5	;RP0=1, select bank3
  2289  04DC  1703               	bsf	3,6	;RP1=1, select bank3
  2290  04DD  0798               	addwf	(sprintf@width+1)^(0+384),f
  2291  04DE  3001               	movlw	1
  2292  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  2293  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  2294  04E1  07DE               	addwf	sprintf@f^(0+128),f
  2295  04E2  1803               	skipnc
  2296  04E3  0ADF               	incf	(sprintf@f+1)^(0+128),f
  2297                           
  2298                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2299  04E4  085F               	movf	(sprintf@f+1)^(0+128),w
  2300  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2301  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2302  04E7  00FF               	movwf	127
  2303  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2304  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2305  04EA  085E               	movf	sprintf@f^(0+128),w
  2306  04EB  0084               	movwf	4
  2307  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2308  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2309  04EE  160A  118A  2000  120A  118A  	fcall	stringtab
  2310  04F3  120A  158A  209A  120A  118A  	fcall	_isdigit
  2311  04F8  1803               	btfsc	3,0
  2312  04F9  2C92               	goto	l3059
  2313  04FA                     l3069:	
  2314                           ;doprnt.c: 831: }
  2315                           
  2316                           ;doprnt.c: 822: continue;
  2317                           
  2318                           ;doprnt.c: 811: default:
  2319                           
  2320                           ;doprnt.c: 707: case 'i':
  2321                           ;doprnt.c: 708: break;
  2322                           
  2323                           ;doprnt.c: 706: case 'd':
  2324                           
  2325                           ;doprnt.c: 647: goto alldone;
  2326                           
  2327                           ;doprnt.c: 646: case 0:
  2328                           
  2329                           ;doprnt.c: 617: }
  2330                           ;doprnt.c: 644: switch(c = *f++) {
  2331                           
  2332  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2333  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2334  04FC  085F               	movf	(sprintf@f+1)^(0+128),w
  2335  04FD  00E3               	movwf	(??_sprintf^(0+128)+1)
  2336  04FE  085E               	movf	sprintf@f^(0+128),w
  2337  04FF  00E2               	movwf	??_sprintf^(0+128)
  2338  0500  0ADE               	incf	sprintf@f^(0+128),f
  2339  0501  1903               	skipnz
  2340  0502  0ADF               	incf	(sprintf@f+1)^(0+128),f
  2341  0503  0863               	movf	(??_sprintf+1)^(0+128),w
  2342  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2343  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2344  0506  00FF               	movwf	127
  2345  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2346  0508  1303               	bcf	3,6	;RP1=0, select bank1
  2347  0509  0862               	movf	??_sprintf^(0+128),w
  2348  050A  0084               	movwf	4
  2349  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2350  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2351  050D  160A  118A  2000  120A  118A  	fcall	stringtab
  2352  0512  1683               	bsf	3,5	;RP0=1, select bank3
  2353  0513  1703               	bsf	3,6	;RP1=1, select bank3
  2354  0514  009A               	movwf	sprintf@c^(0+384)
  2355                           
  2356                           ; Switch size 1, requested type "space"
  2357                           ; Number of cases is 3, Range of values is 0 to 105
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte           10     6 (average)
  2361                           ; jumptable            260     6 (fixed)
  2362                           ;	Chosen strategy is simple_byte
  2363  0515  3A00               	xorlw	0	; case 0
  2364  0516  1903               	skipnz
  2365  0517  2EA9               	goto	l3145
  2366  0518  3A64               	xorlw	100	; case 100
  2367  0519  1903               	skipnz
  2368  051A  2D1F               	goto	l3071
  2369  051B  3A0D               	xorlw	13	; case 105
  2370  051C  1903               	skipnz
  2371  051D  2D1F               	goto	l3071
  2372  051E  2C1A               	goto	l3143
  2373  051F                     l3071:	
  2374                           
  2375                           ;doprnt.c: 1262: {
  2376                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2377  051F  1683               	bsf	3,5	;RP0=1, select bank3
  2378  0520  1703               	bsf	3,6	;RP1=1, select bank3
  2379  0521  0810               	movf	sprintf@ap^(0+384),w
  2380  0522  0084               	movwf	4
  2381  0523  1383               	bcf	3,7	;select IRP bank0
  2382  0524  0800               	movf	0,w
  2383  0525  0092               	movwf	sprintf@_val^(0+384)
  2384  0526  0A84               	incf	4,f
  2385  0527  0800               	movf	0,w
  2386  0528  0093               	movwf	(sprintf@_val+1)^(0+384)
  2387  0529  3002               	movlw	2
  2388  052A  1683               	bsf	3,5	;RP0=1, select bank1
  2389  052B  1303               	bcf	3,6	;RP1=0, select bank1
  2390  052C  00E2               	movwf	??_sprintf^(0+128)
  2391  052D  0862               	movf	??_sprintf^(0+128),w
  2392  052E  1683               	bsf	3,5	;RP0=1, select bank3
  2393  052F  1703               	bsf	3,6	;RP1=1, select bank3
  2394  0530  0790               	addwf	sprintf@ap^(0+384),f
  2395                           
  2396                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2397  0531  1F93               	btfss	(sprintf@_val+1)^(0+384),7
  2398  0532  2D40               	goto	l3081
  2399                           
  2400                           ;doprnt.c: 1271: flag |= 0x03;
  2401  0533  3003               	movlw	3
  2402  0534  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0535  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0536  00E2               	movwf	??_sprintf^(0+128)
  2405  0537  0862               	movf	??_sprintf^(0+128),w
  2406  0538  1683               	bsf	3,5	;RP0=1, select bank3
  2407  0539  1703               	bsf	3,6	;RP1=1, select bank3
  2408  053A  0496               	iorwf	sprintf@flag^(0+384),f
  2409                           
  2410                           ;doprnt.c: 1272: _val._val = -_val._val;
  2411  053B  0992               	comf	sprintf@_val^(0+384),f
  2412  053C  0993               	comf	(sprintf@_val+1)^(0+384),f
  2413  053D  0A92               	incf	sprintf@_val^(0+384),f
  2414  053E  1903               	skipnz
  2415  053F  0A93               	incf	(sprintf@_val+1)^(0+384),f
  2416  0540                     l3081:	
  2417                           
  2418                           ;doprnt.c: 1273: }
  2419                           ;doprnt.c: 1275: }
  2420                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2421  0540  019A               	clrf	sprintf@c^(0+384)
  2422  0541  0A9A               	incf	sprintf@c^(0+384),f
  2423  0542  081A               	movf	sprintf@c^(0+384),w
  2424  0543  3A05               	xorlw	5
  2425  0544  1903               	btfsc	3,2
  2426  0545  2D7F               	goto	l3093
  2427  0546                     l3085:	
  2428                           
  2429                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2430  0546  081A               	movf	sprintf@c^(0+384),w
  2431  0547  1683               	bsf	3,5	;RP0=1, select bank1
  2432  0548  1303               	bcf	3,6	;RP1=0, select bank1
  2433  0549  00E2               	movwf	??_sprintf^(0+128)
  2434  054A  0762               	addwf	??_sprintf^(0+128),w
  2435  054B  3E12               	addlw	low (_dpowers| (0+32768))
  2436  054C  0084               	movwf	4
  2437  054D  3090               	movlw	high (_dpowers| (0+32768))
  2438  054E  1803               	skipnc
  2439  054F  3E01               	addlw	1
  2440  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0552  00FF               	movwf	127
  2443  0553  160A  118A  2000  120A  118A  	fcall	stringtab
  2444  0558  1683               	bsf	3,5	;RP0=1, select bank1
  2445  0559  1303               	bcf	3,6	;RP1=0, select bank1
  2446  055A  00E3               	movwf	(??_sprintf+1)^(0+128)
  2447  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2448  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2449  055D  160A  118A  2000  120A  118A  	fcall	stringtab
  2450  0562  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0563  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0564  00E4               	movwf	((??_sprintf+1)^(0+128)+1)
  2453  0565  0864               	movf	(??_sprintf+2)^(0+128),w
  2454  0566  1683               	bsf	3,5	;RP0=1, select bank3
  2455  0567  1703               	bsf	3,6	;RP1=1, select bank3
  2456  0568  0213               	subwf	(sprintf@_val+1)^(0+384),w
  2457  0569  1D03               	skipz
  2458  056A  2D71               	goto	u3255
  2459  056B  1683               	bsf	3,5	;RP0=1, select bank1
  2460  056C  1303               	bcf	3,6	;RP1=0, select bank1
  2461  056D  0863               	movf	(??_sprintf+1)^(0+128),w
  2462  056E  1683               	bsf	3,5	;RP0=1, select bank3
  2463  056F  1703               	bsf	3,6	;RP1=1, select bank3
  2464  0570  0212               	subwf	sprintf@_val^(0+384),w
  2465  0571                     u3255:	
  2466  0571  1C03               	btfss	3,0
  2467  0572  2D7F               	goto	l3093
  2468                           
  2469                           ;doprnt.c: 1316: break;
  2470  0573  3001               	movlw	1
  2471  0574  1683               	bsf	3,5	;RP0=1, select bank1
  2472  0575  1303               	bcf	3,6	;RP1=0, select bank1
  2473  0576  00E2               	movwf	??_sprintf^(0+128)
  2474  0577  0862               	movf	??_sprintf^(0+128),w
  2475  0578  1683               	bsf	3,5	;RP0=1, select bank3
  2476  0579  1703               	bsf	3,6	;RP1=1, select bank3
  2477  057A  079A               	addwf	sprintf@c^(0+384),f
  2478  057B  081A               	movf	sprintf@c^(0+384),w
  2479  057C  3A05               	xorlw	5
  2480  057D  1D03               	skipz
  2481  057E  2D46               	goto	l3085
  2482  057F                     l3093:	
  2483                           
  2484                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2485  057F  0818               	movf	(sprintf@width+1)^(0+384),w
  2486  0580  0417               	iorwf	sprintf@width^(0+384),w
  2487  0581  1903               	skipnz
  2488  0582  2D8D               	goto	l510
  2489  0583  0816               	movf	sprintf@flag^(0+384),w
  2490  0584  3903               	andlw	3
  2491  0585  1903               	btfsc	3,2
  2492  0586  2D8D               	goto	l510
  2493                           
  2494                           ;doprnt.c: 1355: width--;
  2495  0587  30FF               	movlw	255
  2496  0588  0797               	addwf	sprintf@width^(0+384),f
  2497  0589  1803               	skipnc
  2498  058A  0A98               	incf	(sprintf@width+1)^(0+384),f
  2499  058B  30FF               	movlw	255
  2500  058C  0798               	addwf	(sprintf@width+1)^(0+384),f
  2501  058D                     l510:	
  2502                           
  2503                           ;doprnt.c: 1390: if(width > c)
  2504  058D  081A               	movf	sprintf@c^(0+384),w
  2505  058E  1683               	bsf	3,5	;RP0=1, select bank1
  2506  058F  1303               	bcf	3,6	;RP1=0, select bank1
  2507  0590  00E2               	movwf	??_sprintf^(0+128)
  2508  0591  01E3               	clrf	(??_sprintf^(0+128)+1)
  2509  0592  1BE2               	btfsc	??_sprintf^(0+128),7
  2510  0593  03E3               	decf	(??_sprintf^(0+128)+1),f
  2511  0594  0863               	movf	(??_sprintf+1)^(0+128),w
  2512  0595  3A80               	xorlw	128
  2513  0596  00E4               	movwf	(??_sprintf+2)^(0+128)
  2514  0597  1683               	bsf	3,5	;RP0=1, select bank3
  2515  0598  1703               	bsf	3,6	;RP1=1, select bank3
  2516  0599  0818               	movf	(sprintf@width+1)^(0+384),w
  2517  059A  3A80               	xorlw	128
  2518  059B  1683               	bsf	3,5	;RP0=1, select bank1
  2519  059C  1303               	bcf	3,6	;RP1=0, select bank1
  2520  059D  0264               	subwf	(??_sprintf+2)^(0+128),w
  2521  059E  1D03               	skipz
  2522  059F  2DA6               	goto	u3295
  2523  05A0  1683               	bsf	3,5	;RP0=1, select bank3
  2524  05A1  1703               	bsf	3,6	;RP1=1, select bank3
  2525  05A2  0817               	movf	sprintf@width^(0+384),w
  2526  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  2527  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  2528  05A5  0262               	subwf	??_sprintf^(0+128),w
  2529  05A6                     u3295:	
  2530  05A6  1803               	skipnc
  2531  05A7  2DBE               	goto	l3101
  2532                           
  2533                           ;doprnt.c: 1391: width -= c;
  2534  05A8  1683               	bsf	3,5	;RP0=1, select bank3
  2535  05A9  1703               	bsf	3,6	;RP1=1, select bank3
  2536  05AA  081A               	movf	sprintf@c^(0+384),w
  2537  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  2538  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  2539  05AD  00E2               	movwf	??_sprintf^(0+128)
  2540  05AE  01E3               	clrf	(??_sprintf^(0+128)+1)
  2541  05AF  1BE2               	btfsc	??_sprintf^(0+128),7
  2542  05B0  03E3               	decf	(??_sprintf^(0+128)+1),f
  2543  05B1  0862               	movf	??_sprintf^(0+128),w
  2544  05B2  1683               	bsf	3,5	;RP0=1, select bank3
  2545  05B3  1703               	bsf	3,6	;RP1=1, select bank3
  2546  05B4  0297               	subwf	sprintf@width^(0+384),f
  2547  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  2548  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  2549  05B7  0863               	movf	(??_sprintf+1)^(0+128),w
  2550  05B8  1683               	bsf	3,5	;RP0=1, select bank3
  2551  05B9  1703               	bsf	3,6	;RP1=1, select bank3
  2552  05BA  1C03               	skipc
  2553  05BB  0398               	decf	(sprintf@width+1)^(0+384),f
  2554  05BC  0298               	subwf	(sprintf@width+1)^(0+384),f
  2555  05BD  2DC2               	goto	l3103
  2556  05BE                     l3101:	
  2557                           
  2558                           ;doprnt.c: 1392: else
  2559                           ;doprnt.c: 1393: width = 0;
  2560  05BE  1683               	bsf	3,5	;RP0=1, select bank3
  2561  05BF  1703               	bsf	3,6	;RP1=1, select bank3
  2562  05C0  0197               	clrf	sprintf@width^(0+384)
  2563  05C1  0198               	clrf	(sprintf@width+1)^(0+384)
  2564  05C2                     l3103:	
  2565                           
  2566                           ;doprnt.c: 1396: if(flag & 0x04) {
  2567  05C2  1D16               	btfss	sprintf@flag^(0+384),2
  2568  05C3  2DF9               	goto	l3119
  2569                           
  2570                           ;doprnt.c: 1401: if(flag & 0x03)
  2571  05C4  0816               	movf	sprintf@flag^(0+384),w
  2572  05C5  3903               	andlw	3
  2573  05C6  1903               	btfsc	3,2
  2574  05C7  2DDB               	goto	l3111
  2575                           
  2576                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2577  05C8  302D               	movlw	45
  2578  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  2579  05CA  1303               	bcf	3,6	;RP1=0, select bank1
  2580  05CB  00E2               	movwf	??_sprintf^(0+128)
  2581  05CC  1683               	bsf	3,5	;RP0=1, select bank3
  2582  05CD  1703               	bsf	3,6	;RP1=1, select bank3
  2583  05CE  0819               	movf	sprintf@sp^(0+384),w
  2584  05CF  0084               	movwf	4
  2585  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  2586  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  2587  05D2  0862               	movf	??_sprintf^(0+128),w
  2588  05D3  1383               	bcf	3,7	;select IRP bank0
  2589  05D4  0080               	movwf	0
  2590  05D5  3001               	movlw	1
  2591  05D6  00E2               	movwf	??_sprintf^(0+128)
  2592  05D7  0862               	movf	??_sprintf^(0+128),w
  2593  05D8  1683               	bsf	3,5	;RP0=1, select bank3
  2594  05D9  1703               	bsf	3,6	;RP1=1, select bank3
  2595  05DA  0799               	addwf	sprintf@sp^(0+384),f
  2596  05DB                     l3111:	
  2597                           
  2598                           ;doprnt.c: 1424: if(width)
  2599  05DB  0818               	movf	(sprintf@width+1)^(0+384),w
  2600  05DC  0417               	iorwf	sprintf@width^(0+384),w
  2601  05DD  1903               	skipnz
  2602  05DE  2E31               	goto	l3133
  2603                           
  2604                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2605                           
  2606                           ;doprnt.c: 1425: do
  2607  05DF  3030               	movlw	48
  2608  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  2609  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  2610  05E2  00E2               	movwf	??_sprintf^(0+128)
  2611  05E3  1683               	bsf	3,5	;RP0=1, select bank3
  2612  05E4  1703               	bsf	3,6	;RP1=1, select bank3
  2613  05E5  0819               	movf	sprintf@sp^(0+384),w
  2614  05E6  0084               	movwf	4
  2615  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  2616  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  2617  05E9  0862               	movf	??_sprintf^(0+128),w
  2618  05EA  1383               	bcf	3,7	;select IRP bank0
  2619  05EB  0080               	movwf	0
  2620  05EC  3001               	movlw	1
  2621  05ED  00E2               	movwf	??_sprintf^(0+128)
  2622  05EE  0862               	movf	??_sprintf^(0+128),w
  2623  05EF  1683               	bsf	3,5	;RP0=1, select bank3
  2624  05F0  1703               	bsf	3,6	;RP1=1, select bank3
  2625  05F1  0799               	addwf	sprintf@sp^(0+384),f
  2626                           
  2627                           ;doprnt.c: 1427: while(--width);
  2628  05F2  30FF               	movlw	255
  2629  05F3  0797               	addwf	sprintf@width^(0+384),f
  2630  05F4  1803               	skipnc
  2631  05F5  0A98               	incf	(sprintf@width+1)^(0+384),f
  2632  05F6  30FF               	movlw	255
  2633  05F7  0798               	addwf	(sprintf@width+1)^(0+384),f
  2634  05F8  2DDB               	goto	l3111
  2635  05F9                     l3119:	
  2636                           ;doprnt.c: 1429: } else
  2637                           
  2638                           
  2639                           ;doprnt.c: 1431: {
  2640                           ;doprnt.c: 1433: if(width
  2641                           ;doprnt.c: 1437: )
  2642  05F9  0818               	movf	(sprintf@width+1)^(0+384),w
  2643  05FA  0417               	iorwf	sprintf@width^(0+384),w
  2644  05FB  1903               	skipnz
  2645  05FC  2E1A               	goto	l3127
  2646  05FD                     l3121:	
  2647                           ;doprnt.c: 1438: do
  2648                           
  2649                           
  2650                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2651  05FD  3020               	movlw	32
  2652  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  2653  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  2654  0600  00E2               	movwf	??_sprintf^(0+128)
  2655  0601  1683               	bsf	3,5	;RP0=1, select bank3
  2656  0602  1703               	bsf	3,6	;RP1=1, select bank3
  2657  0603  0819               	movf	sprintf@sp^(0+384),w
  2658  0604  0084               	movwf	4
  2659  0605  1683               	bsf	3,5	;RP0=1, select bank1
  2660  0606  1303               	bcf	3,6	;RP1=0, select bank1
  2661  0607  0862               	movf	??_sprintf^(0+128),w
  2662  0608  1383               	bcf	3,7	;select IRP bank0
  2663  0609  0080               	movwf	0
  2664  060A  3001               	movlw	1
  2665  060B  00E2               	movwf	??_sprintf^(0+128)
  2666  060C  0862               	movf	??_sprintf^(0+128),w
  2667  060D  1683               	bsf	3,5	;RP0=1, select bank3
  2668  060E  1703               	bsf	3,6	;RP1=1, select bank3
  2669  060F  0799               	addwf	sprintf@sp^(0+384),f
  2670                           
  2671                           ;doprnt.c: 1440: while(--width);
  2672  0610  30FF               	movlw	255
  2673  0611  0797               	addwf	sprintf@width^(0+384),f
  2674  0612  1803               	skipnc
  2675  0613  0A98               	incf	(sprintf@width+1)^(0+384),f
  2676  0614  30FF               	movlw	255
  2677  0615  0798               	addwf	(sprintf@width+1)^(0+384),f
  2678  0616  0818               	movf	(sprintf@width+1)^(0+384),w
  2679  0617  0417               	iorwf	sprintf@width^(0+384),w
  2680  0618  1D03               	skipz
  2681  0619  2DFD               	goto	l3121
  2682  061A                     l3127:	
  2683                           
  2684                           ;doprnt.c: 1447: if(flag & 0x03)
  2685  061A  0816               	movf	sprintf@flag^(0+384),w
  2686  061B  3903               	andlw	3
  2687  061C  1903               	btfsc	3,2
  2688  061D  2E31               	goto	l3133
  2689                           
  2690                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2691  061E  302D               	movlw	45
  2692  061F  1683               	bsf	3,5	;RP0=1, select bank1
  2693  0620  1303               	bcf	3,6	;RP1=0, select bank1
  2694  0621  00E2               	movwf	??_sprintf^(0+128)
  2695  0622  1683               	bsf	3,5	;RP0=1, select bank3
  2696  0623  1703               	bsf	3,6	;RP1=1, select bank3
  2697  0624  0819               	movf	sprintf@sp^(0+384),w
  2698  0625  0084               	movwf	4
  2699  0626  1683               	bsf	3,5	;RP0=1, select bank1
  2700  0627  1303               	bcf	3,6	;RP1=0, select bank1
  2701  0628  0862               	movf	??_sprintf^(0+128),w
  2702  0629  1383               	bcf	3,7	;select IRP bank0
  2703  062A  0080               	movwf	0
  2704  062B  3001               	movlw	1
  2705  062C  00E2               	movwf	??_sprintf^(0+128)
  2706  062D  0862               	movf	??_sprintf^(0+128),w
  2707  062E  1683               	bsf	3,5	;RP0=1, select bank3
  2708  062F  1703               	bsf	3,6	;RP1=1, select bank3
  2709  0630  0799               	addwf	sprintf@sp^(0+384),f
  2710  0631                     l3133:	
  2711                           
  2712                           ;doprnt.c: 1478: }
  2713                           ;doprnt.c: 1481: prec = c;
  2714  0631  081A               	movf	sprintf@c^(0+384),w
  2715  0632  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0633  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0634  00E2               	movwf	??_sprintf^(0+128)
  2718  0635  0862               	movf	??_sprintf^(0+128),w
  2719  0636  1683               	bsf	3,5	;RP0=1, select bank3
  2720  0637  1703               	bsf	3,6	;RP1=1, select bank3
  2721  0638  0091               	movwf	sprintf@prec^(0+384)
  2722  0639                     l3141:	
  2723                           ;doprnt.c: 1483: while(prec--) {
  2724                           
  2725  0639  30FF               	movlw	-1
  2726  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2727  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2728  063C  00E2               	movwf	??_sprintf^(0+128)
  2729  063D  0862               	movf	??_sprintf^(0+128),w
  2730  063E  1683               	bsf	3,5	;RP0=1, select bank3
  2731  063F  1703               	bsf	3,6	;RP1=1, select bank3
  2732  0640  0791               	addwf	sprintf@prec^(0+384),f
  2733  0641  0811               	movf	sprintf@prec^(0+384),w
  2734  0642  3AFF               	xorlw	-1
  2735  0643  1903               	btfsc	3,2
  2736  0644  2C1A               	goto	l3143
  2737                           
  2738                           ;doprnt.c: 1487: {
  2739                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2740  0645  300A               	movlw	10
  2741  0646  1683               	bsf	3,5	;RP0=1, select bank1
  2742  0647  1303               	bcf	3,6	;RP1=0, select bank1
  2743  0648  00DA               	movwf	___lwmod@divisor^(0+128)
  2744  0649  3000               	movlw	0
  2745  064A  00DB               	movwf	(___lwmod@divisor^(0+128)+1)
  2746  064B  1683               	bsf	3,5	;RP0=1, select bank3
  2747  064C  1703               	bsf	3,6	;RP1=1, select bank3
  2748  064D  0811               	movf	sprintf@prec^(0+384),w
  2749  064E  1683               	bsf	3,5	;RP0=1, select bank1
  2750  064F  1303               	bcf	3,6	;RP1=0, select bank1
  2751  0650  00E2               	movwf	??_sprintf^(0+128)
  2752  0651  0762               	addwf	??_sprintf^(0+128),w
  2753  0652  3E12               	addlw	low (_dpowers| (0+32768))
  2754  0653  0084               	movwf	4
  2755  0654  3090               	movlw	high (_dpowers| (0+32768))
  2756  0655  1803               	skipnc
  2757  0656  3E01               	addlw	1
  2758  0657  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0658  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0659  00FF               	movwf	127
  2761  065A  160A  118A  2000  120A  118A  	fcall	stringtab
  2762  065F  00B7               	movwf	___lwdiv@divisor
  2763  0660  160A  118A  2000  120A  118A  	fcall	stringtab
  2764  0665  00B8               	movwf	___lwdiv@divisor+1
  2765  0666  1683               	bsf	3,5	;RP0=1, select bank3
  2766  0667  1703               	bsf	3,6	;RP1=1, select bank3
  2767  0668  0813               	movf	(sprintf@_val+1)^(0+384),w
  2768  0669  1283               	bcf	3,5	;RP0=0, select bank0
  2769  066A  1303               	bcf	3,6	;RP1=0, select bank0
  2770  066B  01BA               	clrf	___lwdiv@dividend+1
  2771  066C  07BA               	addwf	___lwdiv@dividend+1,f
  2772  066D  1683               	bsf	3,5	;RP0=1, select bank3
  2773  066E  1703               	bsf	3,6	;RP1=1, select bank3
  2774  066F  0812               	movf	sprintf@_val^(0+384),w
  2775  0670  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0671  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0672  01B9               	clrf	___lwdiv@dividend
  2778  0673  07B9               	addwf	___lwdiv@dividend,f
  2779  0674  120A  158A  227E  120A  118A  	fcall	___lwdiv
  2780  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2781  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2782  067B  0838               	movf	?___lwdiv+1,w
  2783  067C  1683               	bsf	3,5	;RP0=1, select bank1
  2784  067D  1303               	bcf	3,6	;RP1=0, select bank1
  2785  067E  01DD               	clrf	(___lwmod@dividend+1)^(0+128)
  2786  067F  07DD               	addwf	(___lwmod@dividend+1)^(0+128),f
  2787  0680  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0681  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0682  0837               	movf	?___lwdiv,w
  2790  0683  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0684  1303               	bcf	3,6	;RP1=0, select bank1
  2792  0685  01DC               	clrf	___lwmod@dividend^(0+128)
  2793  0686  07DC               	addwf	___lwmod@dividend^(0+128),f
  2794  0687  120A  158A  22BE  120A  118A  	fcall	___lwmod
  2795  068C  1683               	bsf	3,5	;RP0=1, select bank1
  2796  068D  1303               	bcf	3,6	;RP1=0, select bank1
  2797  068E  085A               	movf	?___lwmod^(0+128),w
  2798  068F  3E30               	addlw	48
  2799  0690  00E3               	movwf	(??_sprintf+1)^(0+128)
  2800  0691  0863               	movf	(??_sprintf+1)^(0+128),w
  2801  0692  1683               	bsf	3,5	;RP0=1, select bank3
  2802  0693  1703               	bsf	3,6	;RP1=1, select bank3
  2803  0694  009A               	movwf	sprintf@c^(0+384)
  2804                           
  2805                           ;doprnt.c: 1532: }
  2806                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2807  0695  081A               	movf	sprintf@c^(0+384),w
  2808  0696  1683               	bsf	3,5	;RP0=1, select bank1
  2809  0697  1303               	bcf	3,6	;RP1=0, select bank1
  2810  0698  00E2               	movwf	??_sprintf^(0+128)
  2811  0699  1683               	bsf	3,5	;RP0=1, select bank3
  2812  069A  1703               	bsf	3,6	;RP1=1, select bank3
  2813  069B  0819               	movf	sprintf@sp^(0+384),w
  2814  069C  0084               	movwf	4
  2815  069D  1683               	bsf	3,5	;RP0=1, select bank1
  2816  069E  1303               	bcf	3,6	;RP1=0, select bank1
  2817  069F  0862               	movf	??_sprintf^(0+128),w
  2818  06A0  1383               	bcf	3,7	;select IRP bank0
  2819  06A1  0080               	movwf	0
  2820  06A2  3001               	movlw	1
  2821  06A3  00E2               	movwf	??_sprintf^(0+128)
  2822  06A4  0862               	movf	??_sprintf^(0+128),w
  2823  06A5  1683               	bsf	3,5	;RP0=1, select bank3
  2824  06A6  1703               	bsf	3,6	;RP1=1, select bank3
  2825  06A7  0799               	addwf	sprintf@sp^(0+384),f
  2826  06A8  2E39               	goto	l3141
  2827  06A9                     l3145:	
  2828                           ;doprnt.c: 1534: }
  2829                           ;doprnt.c: 1542: }
  2830                           ;doprnt.c: 1544: alldone:
  2831                           
  2832                           
  2833                           ;doprnt.c: 1547: *sp = 0;
  2834  06A9  1683               	bsf	3,5	;RP0=1, select bank3
  2835  06AA  1703               	bsf	3,6	;RP1=1, select bank3
  2836  06AB  0819               	movf	sprintf@sp^(0+384),w
  2837  06AC  0084               	movwf	4
  2838  06AD  1383               	bcf	3,7	;select IRP bank0
  2839  06AE  0180               	clrf	0
  2840  06AF  0008               	return
  2841  06B0                     __end_of_sprintf:	
  2842                           ;doprnt.c: 1549: return 0;
  2843                           ;	Return value of _sprintf is never used
  2844                           
  2845                           
  2846                           	psect	text2
  2847  089A                     __ptext2:	
  2848 ;; *************** function _isdigit *****************
  2849 ;; Defined at:
  2850 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  c               1    wreg     unsigned char 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  c               1   24[BANK0 ] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;		None               void
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         0       2       0       0       0
  2866 ;;      Temps:          0       0       0       0       0
  2867 ;;      Totals:         0       2       0       0       0
  2868 ;;Total ram usage:        2 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    4
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_sprintf
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           
  2879                           ;psect for function _isdigit
  2880  089A                     _isdigit:	
  2881                           
  2882                           ;incstack = 0
  2883                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2884                           ;isdigit@c stored from wreg
  2885  089A  1283               	bcf	3,5	;RP0=0, select bank0
  2886  089B  1303               	bcf	3,6	;RP1=0, select bank0
  2887  089C  00B8               	movwf	isdigit@c
  2888  089D  01B7               	clrf	_isdigit$1452
  2889  089E  303A               	movlw	58
  2890  089F  0238               	subwf	isdigit@c,w
  2891  08A0  1803               	skipnc
  2892  08A1  28A8               	goto	l2897
  2893  08A2  3030               	movlw	48
  2894  08A3  0238               	subwf	isdigit@c,w
  2895  08A4  1C03               	skipc
  2896  08A5  28A8               	goto	l2897
  2897  08A6  01B7               	clrf	_isdigit$1452
  2898  08A7  0AB7               	incf	_isdigit$1452,f
  2899  08A8                     l2897:	
  2900  08A8  0C37               	rrf	_isdigit$1452,w
  2901  08A9  0008               	return
  2902  08AA                     __end_of_isdigit:	
  2903                           
  2904                           	psect	text3
  2905  09F2                     __ptext3:	
  2906 ;; *************** function ___wmul *****************
  2907 ;; Defined at:
  2908 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  multiplier      2   23[BANK0 ] unsigned int 
  2911 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  product         2   27[BANK0 ] unsigned int 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  2   23[BANK0 ] unsigned int 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       4       0       0       0
  2924 ;;      Locals:         0       2       0       0       0
  2925 ;;      Temps:          0       0       0       0       0
  2926 ;;      Totals:         0       6       0       0       0
  2927 ;;Total ram usage:        6 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    4
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_sprintf
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function ___wmul
  2939  09F2                     ___wmul:	
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2943  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  2944  09F3  1303               	bcf	3,6	;RP1=0, select bank0
  2945  09F4  01BB               	clrf	___wmul@product
  2946  09F5  01BC               	clrf	___wmul@product+1
  2947  09F6                     l2903:	
  2948  09F6  1C37               	btfss	___wmul@multiplier,0
  2949  09F7  29FE               	goto	l611
  2950  09F8  0839               	movf	___wmul@multiplicand,w
  2951  09F9  07BB               	addwf	___wmul@product,f
  2952  09FA  1803               	skipnc
  2953  09FB  0ABC               	incf	___wmul@product+1,f
  2954  09FC  083A               	movf	___wmul@multiplicand+1,w
  2955  09FD  07BC               	addwf	___wmul@product+1,f
  2956  09FE                     l611:	
  2957  09FE  3001               	movlw	1
  2958  09FF                     u2935:	
  2959  09FF  1003               	clrc
  2960  0A00  0DB9               	rlf	___wmul@multiplicand,f
  2961  0A01  0DBA               	rlf	___wmul@multiplicand+1,f
  2962  0A02  3EFF               	addlw	-1
  2963  0A03  1D03               	skipz
  2964  0A04  29FF               	goto	u2935
  2965  0A05  3001               	movlw	1
  2966  0A06                     u2945:	
  2967  0A06  1003               	clrc
  2968  0A07  0CB8               	rrf	___wmul@multiplier+1,f
  2969  0A08  0CB7               	rrf	___wmul@multiplier,f
  2970  0A09  3EFF               	addlw	-1
  2971  0A0A  1D03               	skipz
  2972  0A0B  2A06               	goto	u2945
  2973  0A0C  0838               	movf	___wmul@multiplier+1,w
  2974  0A0D  0437               	iorwf	___wmul@multiplier,w
  2975  0A0E  1D03               	skipz
  2976  0A0F  29F6               	goto	l2903
  2977  0A10  083C               	movf	___wmul@product+1,w
  2978  0A11  01B8               	clrf	?___wmul+1
  2979  0A12  07B8               	addwf	?___wmul+1,f
  2980  0A13  083B               	movf	___wmul@product,w
  2981  0A14  01B7               	clrf	?___wmul
  2982  0A15  07B7               	addwf	?___wmul,f
  2983  0A16  0008               	return
  2984  0A17                     __end_of___wmul:	
  2985                           
  2986                           	psect	text4
  2987  0ABE                     __ptext4:	
  2988 ;; *************** function ___lwmod *****************
  2989 ;; Defined at:
  2990 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  divisor         2    0[BANK1 ] unsigned int 
  2993 ;;  dividend        2    2[BANK1 ] unsigned int 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  counter         1   32[BANK0 ] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2    0[BANK1 ] unsigned int 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3005 ;;      Params:         0       0       4       0       0
  3006 ;;      Locals:         0       1       0       0       0
  3007 ;;      Temps:          0       1       0       0       0
  3008 ;;      Totals:         0       2       4       0       0
  3009 ;;Total ram usage:        6 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    4
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_sprintf
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function ___lwmod
  3021  0ABE                     ___lwmod:	
  3022                           
  3023                           ;incstack = 0
  3024                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3025  0ABE  1683               	bsf	3,5	;RP0=1, select bank1
  3026  0ABF  1303               	bcf	3,6	;RP1=0, select bank1
  3027  0AC0  085B               	movf	(___lwmod@divisor+1)^(0+128),w
  3028  0AC1  045A               	iorwf	___lwmod@divisor^(0+128),w
  3029  0AC2  1903               	skipnz
  3030  0AC3  2AF9               	goto	l2997
  3031  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0AC6  01C0               	clrf	___lwmod@counter
  3034  0AC7  0AC0               	incf	___lwmod@counter,f
  3035  0AC8                     l2987:	
  3036  0AC8  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0AC9  1303               	bcf	3,6	;RP1=0, select bank1
  3038  0ACA  1BDB               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3039  0ACB  2ADC               	goto	l2989
  3040  0ACC  3001               	movlw	1
  3041  0ACD  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0ACE  1303               	bcf	3,6	;RP1=0, select bank1
  3043  0ACF                     u3145:	
  3044  0ACF  1003               	clrc
  3045  0AD0  0DDA               	rlf	___lwmod@divisor^(0+128),f
  3046  0AD1  0DDB               	rlf	(___lwmod@divisor+1)^(0+128),f
  3047  0AD2  3EFF               	addlw	-1
  3048  0AD3  1D03               	skipz
  3049  0AD4  2ACF               	goto	u3145
  3050  0AD5  3001               	movlw	1
  3051  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0AD8  00BF               	movwf	??___lwmod
  3054  0AD9  083F               	movf	??___lwmod,w
  3055  0ADA  07C0               	addwf	___lwmod@counter,f
  3056  0ADB  2AC8               	goto	l2987
  3057  0ADC                     l2989:	
  3058  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  3059  0ADD  1303               	bcf	3,6	;RP1=0, select bank1
  3060  0ADE  085B               	movf	(___lwmod@divisor+1)^(0+128),w
  3061  0ADF  025D               	subwf	(___lwmod@dividend+1)^(0+128),w
  3062  0AE0  1D03               	skipz
  3063  0AE1  2AE4               	goto	u3165
  3064  0AE2  085A               	movf	___lwmod@divisor^(0+128),w
  3065  0AE3  025C               	subwf	___lwmod@dividend^(0+128),w
  3066  0AE4                     u3165:	
  3067  0AE4  1C03               	skipc
  3068  0AE5  2AEC               	goto	l2993
  3069  0AE6  085A               	movf	___lwmod@divisor^(0+128),w
  3070  0AE7  02DC               	subwf	___lwmod@dividend^(0+128),f
  3071  0AE8  085B               	movf	(___lwmod@divisor+1)^(0+128),w
  3072  0AE9  1C03               	skipc
  3073  0AEA  03DD               	decf	(___lwmod@dividend+1)^(0+128),f
  3074  0AEB  02DD               	subwf	(___lwmod@dividend+1)^(0+128),f
  3075  0AEC                     l2993:	
  3076  0AEC  3001               	movlw	1
  3077  0AED                     u3175:	
  3078  0AED  1003               	clrc
  3079  0AEE  0CDB               	rrf	(___lwmod@divisor+1)^(0+128),f
  3080  0AEF  0CDA               	rrf	___lwmod@divisor^(0+128),f
  3081  0AF0  3EFF               	addlw	-1
  3082  0AF1  1D03               	skipz
  3083  0AF2  2AED               	goto	u3175
  3084  0AF3  3001               	movlw	1
  3085  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0AF6  02C0               	subwf	___lwmod@counter,f
  3088  0AF7  1D03               	btfss	3,2
  3089  0AF8  2ADC               	goto	l2989
  3090  0AF9                     l2997:	
  3091  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  3092  0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  3093  0AFB  085D               	movf	(___lwmod@dividend+1)^(0+128),w
  3094  0AFC  01DB               	clrf	(?___lwmod+1)^(0+128)
  3095  0AFD  07DB               	addwf	(?___lwmod+1)^(0+128),f
  3096  0AFE  085C               	movf	___lwmod@dividend^(0+128),w
  3097  0AFF  01DA               	clrf	?___lwmod^(0+128)
  3098  0B00  07DA               	addwf	?___lwmod^(0+128),f
  3099  0B01  0008               	return
  3100  0B02                     __end_of___lwmod:	
  3101                           
  3102                           	psect	text5
  3103  0A7E                     __ptext5:	
  3104 ;; *************** function ___lwdiv *****************
  3105 ;; Defined at:
  3106 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  divisor         2   23[BANK0 ] unsigned int 
  3109 ;;  dividend        2   25[BANK0 ] unsigned int 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  quotient        2   29[BANK0 ] unsigned int 
  3112 ;;  counter         1   28[BANK0 ] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  2   23[BANK0 ] unsigned int 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       4       0       0       0
  3123 ;;      Locals:         0       3       0       0       0
  3124 ;;      Temps:          0       1       0       0       0
  3125 ;;      Totals:         0       8       0       0       0
  3126 ;;Total ram usage:        8 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    4
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_sprintf
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function ___lwdiv
  3138  0A7E                     ___lwdiv:	
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3142  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0A80  01BD               	clrf	___lwdiv@quotient
  3145  0A81  01BE               	clrf	___lwdiv@quotient+1
  3146  0A82  0838               	movf	___lwdiv@divisor+1,w
  3147  0A83  0437               	iorwf	___lwdiv@divisor,w
  3148  0A84  1903               	skipnz
  3149  0A85  2AB7               	goto	l2975
  3150  0A86  01BC               	clrf	___lwdiv@counter
  3151  0A87  0ABC               	incf	___lwdiv@counter,f
  3152  0A88                     l2963:	
  3153  0A88  1BB8               	btfsc	___lwdiv@divisor+1,7
  3154  0A89  2A96               	goto	l2965
  3155  0A8A  3001               	movlw	1
  3156  0A8B                     u3075:	
  3157  0A8B  1003               	clrc
  3158  0A8C  0DB7               	rlf	___lwdiv@divisor,f
  3159  0A8D  0DB8               	rlf	___lwdiv@divisor+1,f
  3160  0A8E  3EFF               	addlw	-1
  3161  0A8F  1D03               	skipz
  3162  0A90  2A8B               	goto	u3075
  3163  0A91  3001               	movlw	1
  3164  0A92  00BB               	movwf	??___lwdiv
  3165  0A93  083B               	movf	??___lwdiv,w
  3166  0A94  07BC               	addwf	___lwdiv@counter,f
  3167  0A95  2A88               	goto	l2963
  3168  0A96                     l2965:	
  3169  0A96  3001               	movlw	1
  3170  0A97                     u3095:	
  3171  0A97  1003               	clrc
  3172  0A98  0DBD               	rlf	___lwdiv@quotient,f
  3173  0A99  0DBE               	rlf	___lwdiv@quotient+1,f
  3174  0A9A  3EFF               	addlw	-1
  3175  0A9B  1D03               	skipz
  3176  0A9C  2A97               	goto	u3095
  3177  0A9D  0838               	movf	___lwdiv@divisor+1,w
  3178  0A9E  023A               	subwf	___lwdiv@dividend+1,w
  3179  0A9F  1D03               	skipz
  3180  0AA0  2AA3               	goto	u3105
  3181  0AA1  0837               	movf	___lwdiv@divisor,w
  3182  0AA2  0239               	subwf	___lwdiv@dividend,w
  3183  0AA3                     u3105:	
  3184  0AA3  1C03               	skipc
  3185  0AA4  2AAC               	goto	l2971
  3186  0AA5  0837               	movf	___lwdiv@divisor,w
  3187  0AA6  02B9               	subwf	___lwdiv@dividend,f
  3188  0AA7  0838               	movf	___lwdiv@divisor+1,w
  3189  0AA8  1C03               	skipc
  3190  0AA9  03BA               	decf	___lwdiv@dividend+1,f
  3191  0AAA  02BA               	subwf	___lwdiv@dividend+1,f
  3192  0AAB  143D               	bsf	___lwdiv@quotient,0
  3193  0AAC                     l2971:	
  3194  0AAC  3001               	movlw	1
  3195  0AAD                     u3115:	
  3196  0AAD  1003               	clrc
  3197  0AAE  0CB8               	rrf	___lwdiv@divisor+1,f
  3198  0AAF  0CB7               	rrf	___lwdiv@divisor,f
  3199  0AB0  3EFF               	addlw	-1
  3200  0AB1  1D03               	skipz
  3201  0AB2  2AAD               	goto	u3115
  3202  0AB3  3001               	movlw	1
  3203  0AB4  02BC               	subwf	___lwdiv@counter,f
  3204  0AB5  1D03               	btfss	3,2
  3205  0AB6  2A96               	goto	l2965
  3206  0AB7                     l2975:	
  3207  0AB7  083E               	movf	___lwdiv@quotient+1,w
  3208  0AB8  01B8               	clrf	?___lwdiv+1
  3209  0AB9  07B8               	addwf	?___lwdiv+1,f
  3210  0ABA  083D               	movf	___lwdiv@quotient,w
  3211  0ABB  01B7               	clrf	?___lwdiv
  3212  0ABC  07B7               	addwf	?___lwdiv,f
  3213  0ABD  0008               	return
  3214  0ABE                     __end_of___lwdiv:	
  3215                           
  3216                           	psect	text6
  3217  09CD                     __ptext6:	
  3218 ;; *************** function _USART_WriteString *****************
  3219 ;; Defined at:
  3220 ;;		line 52 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  str             2   24[BANK0 ] PTR const unsigned char 
  3223 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3224 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  3225 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  3226 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;		None               void
  3231 ;; Registers used:
  3232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3238 ;;      Params:         0       2       0       0       0
  3239 ;;      Locals:         0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0
  3241 ;;      Totals:         0       2       0       0       0
  3242 ;;Total ram usage:        2 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    5
  3245 ;; This function calls:
  3246 ;;		_USART_WriteChar
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           
  3253                           ;psect for function _USART_WriteString
  3254  09CD                     _USART_WriteString:	
  3255  09CD                     l2473:	
  3256                           ;usart.c: 54: while(*str != '\0')
  3257                           
  3258                           ;incstack = 0
  3259                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3260                           
  3261  09CD  1283               	bcf	3,5	;RP0=0, select bank0
  3262  09CE  1303               	bcf	3,6	;RP1=0, select bank0
  3263  09CF  0839               	movf	USART_WriteString@str+1,w
  3264  09D0  00FF               	movwf	127
  3265  09D1  0838               	movf	USART_WriteString@str,w
  3266  09D2  0084               	movwf	4
  3267  09D3  160A  118A  2000  120A  158A  	fcall	stringtab
  3268  09D8  3800               	iorlw	0
  3269  09D9  1903               	btfsc	3,2
  3270  09DA  0008               	return
  3271                           
  3272                           ;usart.c: 55: {
  3273                           ;usart.c: 56: USART_WriteChar(*str);
  3274  09DB  1283               	bcf	3,5	;RP0=0, select bank0
  3275  09DC  1303               	bcf	3,6	;RP1=0, select bank0
  3276  09DD  0839               	movf	USART_WriteString@str+1,w
  3277  09DE  00FF               	movwf	127
  3278  09DF  0838               	movf	USART_WriteString@str,w
  3279  09E0  0084               	movwf	4
  3280  09E1  160A  118A  2000  120A  158A  	fcall	stringtab
  3281  09E6  120A  158A  2052  120A  158A  	fcall	_USART_WriteChar
  3282                           
  3283                           ;usart.c: 57: str++;
  3284  09EB  3001               	movlw	1
  3285  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  3286  09ED  1303               	bcf	3,6	;RP1=0, select bank0
  3287  09EE  07B8               	addwf	USART_WriteString@str,f
  3288  09EF  1803               	skipnc
  3289  09F0  0AB9               	incf	USART_WriteString@str+1,f
  3290  09F1  29CD               	goto	l2473
  3291  09F2                     __end_of_USART_WriteString:	
  3292                           
  3293                           	psect	text7
  3294  0852                     __ptext7:	
  3295 ;; *************** function _USART_WriteChar *****************
  3296 ;; Defined at:
  3297 ;;		line 44 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  byte            1    wreg     unsigned char 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  byte            1   23[BANK0 ] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;		None               void
  3304 ;; Registers used:
  3305 ;;		wreg
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         0       0       0       0       0
  3312 ;;      Locals:         0       1       0       0       0
  3313 ;;      Temps:          0       0       0       0       0
  3314 ;;      Totals:         0       1       0       0       0
  3315 ;;Total ram usage:        1 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    4
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_USART_WriteString
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _USART_WriteChar
  3327  0852                     _USART_WriteChar:	
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _USART_WriteChar: [wreg]
  3331                           ;USART_WriteChar@byte stored from wreg
  3332  0852  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0853  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0854  00B7               	movwf	USART_WriteChar@byte
  3335  0855                     l240:	
  3336                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3337                           
  3338  0855  1E0C               	btfss	12,4	;volatile
  3339  0856  2855               	goto	l240
  3340                           
  3341                           ;usart.c: 47: TXREG = byte;
  3342  0857  0837               	movf	USART_WriteChar@byte,w
  3343  0858  0099               	movwf	25	;volatile
  3344  0859  0008               	return
  3345  085A                     __end_of_USART_WriteChar:	
  3346                           
  3347                           	psect	text8
  3348  0B02                     __ptext8:	
  3349 ;; *************** function _USART_Init *****************
  3350 ;; Defined at:
  3351 ;;		line 6 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  BaudRate        4    6[BANK1 ] long 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;		None               void
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, pclath, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3365 ;;      Params:         0       0       4       0       0
  3366 ;;      Locals:         0       0       0       0       0
  3367 ;;      Temps:          0       0       4       0       0
  3368 ;;      Totals:         0       0       8       0       0
  3369 ;;Total ram usage:        8 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    5
  3372 ;; This function calls:
  3373 ;;		___aldiv
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _USART_Init
  3381  0B02                     _USART_Init:	
  3382                           
  3383                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3387  0B02  1683               	bsf	3,5	;RP0=1, select bank1
  3388  0B03  1303               	bcf	3,6	;RP1=0, select bank1
  3389  0B04  0860               	movf	USART_Init@BaudRate^(0+128),w
  3390  0B05  00E4               	movwf	??_USART_Init^(0+128)
  3391  0B06  0861               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3392  0B07  00E5               	movwf	(??_USART_Init^(0+128)+1)
  3393  0B08  0862               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3394  0B09  00E6               	movwf	(??_USART_Init^(0+128)+2)
  3395  0B0A  0863               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3396  0B0B  00E7               	movwf	(??_USART_Init^(0+128)+3)
  3397  0B0C  3004               	movlw	4
  3398  0B0D                     u3195:	
  3399  0B0D  1003               	clrc
  3400  0B0E  0DE4               	rlf	??_USART_Init^(0+128),f
  3401  0B0F  0DE5               	rlf	(??_USART_Init^(0+128)+1),f
  3402  0B10  0DE6               	rlf	(??_USART_Init^(0+128)+2),f
  3403  0B11  0DE7               	rlf	(??_USART_Init^(0+128)+3),f
  3404  0B12  3EFF               	addlw	-1
  3405  0B13  1D03               	skipz
  3406  0B14  2B0D               	goto	u3195
  3407  0B15  0867               	movf	(??_USART_Init+3)^(0+128),w
  3408  0B16  1283               	bcf	3,5	;RP0=0, select bank0
  3409  0B17  1303               	bcf	3,6	;RP1=0, select bank0
  3410  0B18  00BA               	movwf	___aldiv@divisor+3
  3411  0B19  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0B1A  1303               	bcf	3,6	;RP1=0, select bank1
  3413  0B1B  0866               	movf	(??_USART_Init+2)^(0+128),w
  3414  0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  3415  0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  3416  0B1E  00B9               	movwf	___aldiv@divisor+2
  3417  0B1F  1683               	bsf	3,5	;RP0=1, select bank1
  3418  0B20  1303               	bcf	3,6	;RP1=0, select bank1
  3419  0B21  0865               	movf	(??_USART_Init+1)^(0+128),w
  3420  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  3422  0B24  00B8               	movwf	___aldiv@divisor+1
  3423  0B25  1683               	bsf	3,5	;RP0=1, select bank1
  3424  0B26  1303               	bcf	3,6	;RP1=0, select bank1
  3425  0B27  0864               	movf	??_USART_Init^(0+128),w
  3426  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0B2A  00B7               	movwf	___aldiv@divisor
  3429  0B2B  3001               	movlw	1
  3430  0B2C  00BE               	movwf	___aldiv@dividend+3
  3431  0B2D  3019               	movlw	25
  3432  0B2E  00BD               	movwf	___aldiv@dividend+2
  3433  0B2F  3040               	movlw	64
  3434  0B30  00BC               	movwf	___aldiv@dividend+1
  3435  0B31  3000               	movlw	0
  3436  0B32  00BB               	movwf	___aldiv@dividend
  3437  0B33  120A  118A  26B0   	fcall	___aldiv
  3438  0B36  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0B37  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0B38  0837               	movf	?___aldiv,w
  3441  0B39  3EFF               	addlw	255
  3442  0B3A  1683               	bsf	3,5	;RP0=1, select bank1
  3443  0B3B  1303               	bcf	3,6	;RP1=0, select bank1
  3444  0B3C  0099               	movwf	25	;volatile
  3445                           
  3446                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3447  0B3D  1398               	bcf	24,7	;volatile
  3448                           
  3449                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3450  0B3E  1318               	bcf	24,6	;volatile
  3451                           
  3452                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3453  0B3F  1698               	bsf	24,5	;volatile
  3454                           
  3455                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3456  0B40  1218               	bcf	24,4	;volatile
  3457                           
  3458                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3459  0B41  1518               	bsf	24,2	;volatile
  3460                           
  3461                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3462  0B42  1498               	bsf	24,1	;volatile
  3463                           
  3464                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3465  0B43  1018               	bcf	24,0	;volatile
  3466                           
  3467                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3468  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0B46  1798               	bsf	24,7	;volatile
  3471                           
  3472                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3473  0B47  1318               	bcf	24,6	;volatile
  3474                           
  3475                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3476  0B48  1298               	bcf	24,5	;volatile
  3477                           
  3478                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3479  0B49  1618               	bsf	24,4	;volatile
  3480                           
  3481                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3482  0B4A  1198               	bcf	24,3	;volatile
  3483                           
  3484                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3485  0B4B  1118               	bcf	24,2	;volatile
  3486                           
  3487                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3488  0B4C  1098               	bcf	24,1	;volatile
  3489                           
  3490                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3491  0B4D  1018               	bcf	24,0	;volatile
  3492                           
  3493                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3494  0B4E  1683               	bsf	3,5	;RP0=1, select bank1
  3495  0B4F  1303               	bcf	3,6	;RP1=0, select bank1
  3496  0B50  120C               	bcf	12,4	;volatile
  3497                           
  3498                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3499  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0B53  120C               	bcf	12,4	;volatile
  3502                           
  3503                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3504  0B54  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0B55  1303               	bcf	3,6	;RP1=0, select bank1
  3506  0B56  168C               	bsf	12,5	;volatile
  3507                           
  3508                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3509  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0B59  128C               	bcf	12,5	;volatile
  3512  0B5A  0008               	return
  3513  0B5B                     __end_of_USART_Init:	
  3514                           
  3515                           	psect	text9
  3516  06B0                     __ptext9:	
  3517 ;; *************** function ___aldiv *****************
  3518 ;; Defined at:
  3519 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  divisor         4   23[BANK0 ] long 
  3522 ;;  dividend        4   27[BANK0 ] long 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  quotient        4    2[BANK1 ] long 
  3525 ;;  sign            1    1[BANK1 ] unsigned char 
  3526 ;;  counter         1    0[BANK1 ] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  4   23[BANK0 ] long 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3536 ;;      Params:         0       8       0       0       0
  3537 ;;      Locals:         0       0       6       0       0
  3538 ;;      Temps:          0       1       0       0       0
  3539 ;;      Totals:         0       9       6       0       0
  3540 ;;Total ram usage:       15 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    4
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_USART_Init
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           
  3551                           ;psect for function ___aldiv
  3552  06B0                     ___aldiv:	
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3556  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3557  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  3558  06B2  01DB               	clrf	___aldiv@sign^(0+128)
  3559  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3560  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3561  06B5  1FBA               	btfss	___aldiv@divisor+3,7
  3562  06B6  2EC6               	goto	l666
  3563  06B7  09B7               	comf	___aldiv@divisor,f
  3564  06B8  09B8               	comf	___aldiv@divisor+1,f
  3565  06B9  09B9               	comf	___aldiv@divisor+2,f
  3566  06BA  09BA               	comf	___aldiv@divisor+3,f
  3567  06BB  0AB7               	incf	___aldiv@divisor,f
  3568  06BC  1903               	skipnz
  3569  06BD  0AB8               	incf	___aldiv@divisor+1,f
  3570  06BE  1903               	skipnz
  3571  06BF  0AB9               	incf	___aldiv@divisor+2,f
  3572  06C0  1903               	skipnz
  3573  06C1  0ABA               	incf	___aldiv@divisor+3,f
  3574  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  3575  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  3576  06C4  01DB               	clrf	___aldiv@sign^(0+128)
  3577  06C5  0ADB               	incf	___aldiv@sign^(0+128),f
  3578  06C6                     l666:	
  3579  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  3580  06C7  1FBE               	btfss	___aldiv@dividend+3,7
  3581  06C8  2EDA               	goto	l2923
  3582  06C9  09BB               	comf	___aldiv@dividend,f
  3583  06CA  09BC               	comf	___aldiv@dividend+1,f
  3584  06CB  09BD               	comf	___aldiv@dividend+2,f
  3585  06CC  09BE               	comf	___aldiv@dividend+3,f
  3586  06CD  0ABB               	incf	___aldiv@dividend,f
  3587  06CE  1903               	skipnz
  3588  06CF  0ABC               	incf	___aldiv@dividend+1,f
  3589  06D0  1903               	skipnz
  3590  06D1  0ABD               	incf	___aldiv@dividend+2,f
  3591  06D2  1903               	skipnz
  3592  06D3  0ABE               	incf	___aldiv@dividend+3,f
  3593  06D4  3001               	movlw	1
  3594  06D5  00BF               	movwf	??___aldiv
  3595  06D6  083F               	movf	??___aldiv,w
  3596  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  3597  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  3598  06D9  06DB               	xorwf	___aldiv@sign^(0+128),f
  3599  06DA                     l2923:	
  3600  06DA  3000               	movlw	0
  3601  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  3602  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  3603  06DD  00DF               	movwf	(___aldiv@quotient+3)^(0+128)
  3604  06DE  3000               	movlw	0
  3605  06DF  00DE               	movwf	(___aldiv@quotient+2)^(0+128)
  3606  06E0  3000               	movlw	0
  3607  06E1  00DD               	movwf	(___aldiv@quotient+1)^(0+128)
  3608  06E2  3000               	movlw	0
  3609  06E3  00DC               	movwf	___aldiv@quotient^(0+128)
  3610  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3611  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3612  06E6  083A               	movf	___aldiv@divisor+3,w
  3613  06E7  0439               	iorwf	___aldiv@divisor+2,w
  3614  06E8  0438               	iorwf	___aldiv@divisor+1,w
  3615  06E9  0437               	iorwf	___aldiv@divisor,w
  3616  06EA  1903               	skipnz
  3617  06EB  2F44               	goto	l2945
  3618  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  3619  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  3620  06EE  01DA               	clrf	___aldiv@counter^(0+128)
  3621  06EF  0ADA               	incf	___aldiv@counter^(0+128),f
  3622  06F0                     l2931:	
  3623  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  3624  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  3625  06F2  1BBA               	btfsc	___aldiv@divisor+3,7
  3626  06F3  2F05               	goto	l2933
  3627  06F4  3001               	movlw	1
  3628  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  3629  06F6  00BF               	movwf	??___aldiv
  3630  06F7                     u2995:	
  3631  06F7  1003               	clrc
  3632  06F8  0DB7               	rlf	___aldiv@divisor,f
  3633  06F9  0DB8               	rlf	___aldiv@divisor+1,f
  3634  06FA  0DB9               	rlf	___aldiv@divisor+2,f
  3635  06FB  0DBA               	rlf	___aldiv@divisor+3,f
  3636  06FC  0BBF               	decfsz	??___aldiv,f
  3637  06FD  2EF7               	goto	u2995
  3638  06FE  3001               	movlw	1
  3639  06FF  00BF               	movwf	??___aldiv
  3640  0700  083F               	movf	??___aldiv,w
  3641  0701  1683               	bsf	3,5	;RP0=1, select bank1
  3642  0702  1303               	bcf	3,6	;RP1=0, select bank1
  3643  0703  07DA               	addwf	___aldiv@counter^(0+128),f
  3644  0704  2EF0               	goto	l2931
  3645  0705                     l2933:	
  3646  0705  3001               	movlw	1
  3647  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0707  00BF               	movwf	??___aldiv
  3649  0708                     u3015:	
  3650  0708  1003               	clrc
  3651  0709  1683               	bsf	3,5	;RP0=1, select bank1
  3652  070A  1303               	bcf	3,6	;RP1=0, select bank1
  3653  070B  0DDC               	rlf	___aldiv@quotient^(0+128),f
  3654  070C  0DDD               	rlf	(___aldiv@quotient+1)^(0+128),f
  3655  070D  0DDE               	rlf	(___aldiv@quotient+2)^(0+128),f
  3656  070E  0DDF               	rlf	(___aldiv@quotient+3)^(0+128),f
  3657  070F  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0710  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0711  0BBF               	decfsz	??___aldiv,f
  3660  0712  2F08               	goto	u3015
  3661  0713  083A               	movf	___aldiv@divisor+3,w
  3662  0714  023E               	subwf	___aldiv@dividend+3,w
  3663  0715  1D03               	skipz
  3664  0716  2F21               	goto	u3025
  3665  0717  0839               	movf	___aldiv@divisor+2,w
  3666  0718  023D               	subwf	___aldiv@dividend+2,w
  3667  0719  1D03               	skipz
  3668  071A  2F21               	goto	u3025
  3669  071B  0838               	movf	___aldiv@divisor+1,w
  3670  071C  023C               	subwf	___aldiv@dividend+1,w
  3671  071D  1D03               	skipz
  3672  071E  2F21               	goto	u3025
  3673  071F  0837               	movf	___aldiv@divisor,w
  3674  0720  023B               	subwf	___aldiv@dividend,w
  3675  0721                     u3025:	
  3676  0721  1C03               	skipc
  3677  0722  2F34               	goto	l2941
  3678  0723  0837               	movf	___aldiv@divisor,w
  3679  0724  02BB               	subwf	___aldiv@dividend,f
  3680  0725  0838               	movf	___aldiv@divisor+1,w
  3681  0726  1C03               	skipc
  3682  0727  0F38               	incfsz	___aldiv@divisor+1,w
  3683  0728  02BC               	subwf	___aldiv@dividend+1,f
  3684  0729  0839               	movf	___aldiv@divisor+2,w
  3685  072A  1C03               	skipc
  3686  072B  0F39               	incfsz	___aldiv@divisor+2,w
  3687  072C  02BD               	subwf	___aldiv@dividend+2,f
  3688  072D  083A               	movf	___aldiv@divisor+3,w
  3689  072E  1C03               	skipc
  3690  072F  0F3A               	incfsz	___aldiv@divisor+3,w
  3691  0730  02BE               	subwf	___aldiv@dividend+3,f
  3692  0731  1683               	bsf	3,5	;RP0=1, select bank1
  3693  0732  1303               	bcf	3,6	;RP1=0, select bank1
  3694  0733  145C               	bsf	___aldiv@quotient^(0+128),0
  3695  0734                     l2941:	
  3696  0734  3001               	movlw	1
  3697  0735                     u3035:	
  3698  0735  1003               	clrc
  3699  0736  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0737  0CBA               	rrf	___aldiv@divisor+3,f
  3701  0738  0CB9               	rrf	___aldiv@divisor+2,f
  3702  0739  0CB8               	rrf	___aldiv@divisor+1,f
  3703  073A  0CB7               	rrf	___aldiv@divisor,f
  3704  073B  3EFF               	addlw	-1
  3705  073C  1D03               	skipz
  3706  073D  2F35               	goto	u3035
  3707  073E  3001               	movlw	1
  3708  073F  1683               	bsf	3,5	;RP0=1, select bank1
  3709  0740  1303               	bcf	3,6	;RP1=0, select bank1
  3710  0741  02DA               	subwf	___aldiv@counter^(0+128),f
  3711  0742  1D03               	btfss	3,2
  3712  0743  2F05               	goto	l2933
  3713  0744                     l2945:	
  3714  0744  1683               	bsf	3,5	;RP0=1, select bank1
  3715  0745  1303               	bcf	3,6	;RP1=0, select bank1
  3716  0746  085B               	movf	___aldiv@sign^(0+128),w
  3717  0747  1903               	btfsc	3,2
  3718  0748  2F54               	goto	l2949
  3719  0749  09DC               	comf	___aldiv@quotient^(0+128),f
  3720  074A  09DD               	comf	(___aldiv@quotient+1)^(0+128),f
  3721  074B  09DE               	comf	(___aldiv@quotient+2)^(0+128),f
  3722  074C  09DF               	comf	(___aldiv@quotient+3)^(0+128),f
  3723  074D  0ADC               	incf	___aldiv@quotient^(0+128),f
  3724  074E  1903               	skipnz
  3725  074F  0ADD               	incf	(___aldiv@quotient+1)^(0+128),f
  3726  0750  1903               	skipnz
  3727  0751  0ADE               	incf	(___aldiv@quotient+2)^(0+128),f
  3728  0752  1903               	skipnz
  3729  0753  0ADF               	incf	(___aldiv@quotient+3)^(0+128),f
  3730  0754                     l2949:	
  3731  0754  085F               	movf	(___aldiv@quotient+3)^(0+128),w
  3732  0755  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0756  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0757  00BA               	movwf	?___aldiv+3
  3735  0758  1683               	bsf	3,5	;RP0=1, select bank1
  3736  0759  1303               	bcf	3,6	;RP1=0, select bank1
  3737  075A  085E               	movf	(___aldiv@quotient+2)^(0+128),w
  3738  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3739  075C  1303               	bcf	3,6	;RP1=0, select bank0
  3740  075D  00B9               	movwf	?___aldiv+2
  3741  075E  1683               	bsf	3,5	;RP0=1, select bank1
  3742  075F  1303               	bcf	3,6	;RP1=0, select bank1
  3743  0760  085D               	movf	(___aldiv@quotient+1)^(0+128),w
  3744  0761  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0762  1303               	bcf	3,6	;RP1=0, select bank0
  3746  0763  00B8               	movwf	?___aldiv+1
  3747  0764  1683               	bsf	3,5	;RP0=1, select bank1
  3748  0765  1303               	bcf	3,6	;RP1=0, select bank1
  3749  0766  085C               	movf	___aldiv@quotient^(0+128),w
  3750  0767  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0768  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0769  00B7               	movwf	?___aldiv
  3753  076A  0008               	return
  3754  076B                     __end_of___aldiv:	
  3755                           
  3756                           	psect	text10
  3757  0844                     __ptext10:	
  3758 ;; *************** function _TIMER0_Set *****************
  3759 ;; Defined at:
  3760 ;;		line 20 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\timers.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  contagens       1    wreg     unsigned char 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  contagens       1   23[BANK0 ] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;		None               void
  3767 ;; Registers used:
  3768 ;;		wreg
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3774 ;;      Params:         0       0       0       0       0
  3775 ;;      Locals:         0       1       0       0       0
  3776 ;;      Temps:          0       0       0       0       0
  3777 ;;      Totals:         0       1       0       0       0
  3778 ;;Total ram usage:        1 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    4
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           
  3789                           ;psect for function _TIMER0_Set
  3790  0844                     _TIMER0_Set:	
  3791                           
  3792                           ;incstack = 0
  3793                           ; Regs used in _TIMER0_Set: [wreg]
  3794                           ;TIMER0_Set@contagens stored from wreg
  3795  0844  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0845  1303               	bcf	3,6	;RP1=0, select bank0
  3797  0846  00B7               	movwf	TIMER0_Set@contagens
  3798                           
  3799                           ;timers.c: 22: TMR0 = contagens;
  3800  0847  0837               	movf	TIMER0_Set@contagens,w
  3801  0848  0081               	movwf	1	;volatile
  3802  0849  0008               	return
  3803  084A                     __end_of_TIMER0_Set:	
  3804                           
  3805                           	psect	text11
  3806  0862                     __ptext11:	
  3807 ;; *************** function _TIMER0_Init *****************
  3808 ;; Defined at:
  3809 ;;		line 6 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\timers.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;		None
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;		None
  3814 ;; Return value:  Size  Location     Type
  3815 ;;		None               void
  3816 ;; Registers used:
  3817 ;;		None
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3823 ;;      Params:         0       0       0       0       0
  3824 ;;      Locals:         0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0
  3826 ;;      Totals:         0       0       0       0       0
  3827 ;;Total ram usage:        0 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    4
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _TIMER0_Init
  3839  0862                     _TIMER0_Init:	
  3840                           
  3841                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3842                           
  3843                           ;incstack = 0
  3844                           ; Regs used in _TIMER0_Init: []
  3845  0862  1683               	bsf	3,5	;RP0=1, select bank1
  3846  0863  1303               	bcf	3,6	;RP1=0, select bank1
  3847  0864  1281               	bcf	1,5	;volatile
  3848                           
  3849                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3850  0865  1201               	bcf	1,4	;volatile
  3851                           
  3852                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3853  0866  1181               	bcf	1,3	;volatile
  3854                           
  3855                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3856  0867  1501               	bsf	1,2	;volatile
  3857                           
  3858                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3859  0868  1481               	bsf	1,1	;volatile
  3860                           
  3861                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3862  0869  1401               	bsf	1,0	;volatile
  3863                           
  3864                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3865  086A  110B               	bcf	11,2	;volatile
  3866                           
  3867                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3868  086B  168B               	bsf	11,5	;volatile
  3869  086C  0008               	return
  3870  086D                     __end_of_TIMER0_Init:	
  3871                           
  3872                           	psect	text12
  3873  0984                     __ptext12:	
  3874 ;; *************** function _PWM_Init *****************
  3875 ;; Defined at:
  3876 ;;		line 5 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\pwm.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;		None               void
  3883 ;; Registers used:
  3884 ;;		wreg
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3890 ;;      Params:         0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0
  3893 ;;      Totals:         0       0       0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    4
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_main
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _PWM_Init
  3906  0984                     _PWM_Init:	
  3907                           
  3908                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3909                           
  3910                           ;incstack = 0
  3911                           ; Regs used in _PWM_Init: [wreg]
  3912  0984  1283               	bcf	3,5	;RP0=0, select bank0
  3913  0985  1303               	bcf	3,6	;RP1=0, select bank0
  3914  0986  1492               	bsf	18,1	;volatile
  3915                           
  3916                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3917  0987  1012               	bcf	18,0	;volatile
  3918                           
  3919                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3920  0988  1312               	bcf	18,6	;volatile
  3921                           
  3922                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3923  0989  1292               	bcf	18,5	;volatile
  3924                           
  3925                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3926  098A  1212               	bcf	18,4	;volatile
  3927                           
  3928                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3929  098B  1192               	bcf	18,3	;volatile
  3930                           
  3931                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3932  098C  1512               	bsf	18,2	;volatile
  3933                           
  3934                           ;pwm.c: 27: PR2 = 255;
  3935  098D  30FF               	movlw	255
  3936  098E  1683               	bsf	3,5	;RP0=1, select bank1
  3937  098F  1303               	bcf	3,6	;RP1=0, select bank1
  3938  0990  0092               	movwf	18	;volatile
  3939                           
  3940                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3941  0991  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0992  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0993  1597               	bsf	23,3	;volatile
  3944                           
  3945                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3946  0994  1517               	bsf	23,2	;volatile
  3947                           
  3948                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3949  0995  1497               	bsf	23,1	;volatile
  3950                           
  3951                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3952  0996  1417               	bsf	23,0	;volatile
  3953                           
  3954                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3955  0997  1683               	bsf	3,5	;RP0=1, select bank1
  3956  0998  1303               	bcf	3,6	;RP1=0, select bank1
  3957  0999  150C               	bsf	12,2	;volatile
  3958                           
  3959                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3960  099A  1283               	bcf	3,5	;RP0=0, select bank0
  3961  099B  1303               	bcf	3,6	;RP1=0, select bank0
  3962  099C  110C               	bcf	12,2	;volatile
  3963                           
  3964                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3965  099D  159D               	bsf	29,3	;volatile
  3966                           
  3967                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3968  099E  151D               	bsf	29,2	;volatile
  3969                           
  3970                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3971  099F  149D               	bsf	29,1	;volatile
  3972                           
  3973                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3974  09A0  141D               	bsf	29,0	;volatile
  3975                           
  3976                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3977  09A1  1683               	bsf	3,5	;RP0=1, select bank1
  3978  09A2  1303               	bcf	3,6	;RP1=0, select bank1
  3979  09A3  140D               	bsf	13,0	;volatile
  3980                           
  3981                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3982  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  3983  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  3984  09A6  100D               	bcf	13,0	;volatile
  3985  09A7  0008               	return
  3986  09A8                     __end_of_PWM_Init:	
  3987                           
  3988                           	psect	text13
  3989  0923                     __ptext13:	
  3990 ;; *************** function _PWM_DutyCycle2 *****************
  3991 ;; Defined at:
  3992 ;;		line 96 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\pwm.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  valor           2   23[BANK0 ] int 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;		None               void
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4006 ;;      Params:         0       2       0       0       0
  4007 ;;      Locals:         0       0       0       0       0
  4008 ;;      Temps:          0       2       0       0       0
  4009 ;;      Totals:         0       4       0       0       0
  4010 ;;Total ram usage:        4 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    4
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_main
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _PWM_DutyCycle2
  4022  0923                     _PWM_DutyCycle2:	
  4023                           
  4024                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  4028  0923  1283               	bcf	3,5	;RP0=0, select bank0
  4029  0924  1303               	bcf	3,6	;RP1=0, select bank0
  4030  0925  0838               	movf	PWM_DutyCycle2@valor+1,w
  4031  0926  00BA               	movwf	??_PWM_DutyCycle2+1
  4032  0927  0837               	movf	PWM_DutyCycle2@valor,w
  4033  0928  00B9               	movwf	??_PWM_DutyCycle2
  4034  0929  0D3A               	rlf	??_PWM_DutyCycle2+1,w
  4035  092A  0CBA               	rrf	??_PWM_DutyCycle2+1,f
  4036  092B  0CB9               	rrf	??_PWM_DutyCycle2,f
  4037  092C  0D3A               	rlf	??_PWM_DutyCycle2+1,w
  4038  092D  0CBA               	rrf	??_PWM_DutyCycle2+1,f
  4039  092E  0CB9               	rrf	??_PWM_DutyCycle2,f
  4040  092F  0839               	movf	??_PWM_DutyCycle2,w
  4041  0930  009B               	movwf	27	;volatile
  4042                           
  4043                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4044  0931  0837               	movf	PWM_DutyCycle2@valor,w
  4045  0932  00B9               	movwf	??_PWM_DutyCycle2
  4046  0933  3003               	movlw	3
  4047  0934                     u2465:	
  4048  0934  1003               	clrc
  4049  0935  0DB9               	rlf	??_PWM_DutyCycle2,f
  4050  0936  3EFF               	addlw	-1
  4051  0937  1D03               	skipz
  4052  0938  2934               	goto	u2465
  4053  0939  1003               	clrc
  4054  093A  0D39               	rlf	??_PWM_DutyCycle2,w
  4055  093B  380C               	iorlw	12
  4056  093C  009D               	movwf	29	;volatile
  4057  093D  0008               	return
  4058  093E                     __end_of_PWM_DutyCycle2:	
  4059                           
  4060                           	psect	text14
  4061  0908                     __ptext14:	
  4062 ;; *************** function _PWM_DutyCycle1 *****************
  4063 ;; Defined at:
  4064 ;;		line 64 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\pwm.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  valor           2   23[BANK0 ] int 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;		None               void
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4078 ;;      Params:         0       2       0       0       0
  4079 ;;      Locals:         0       0       0       0       0
  4080 ;;      Temps:          0       2       0       0       0
  4081 ;;      Totals:         0       4       0       0       0
  4082 ;;Total ram usage:        4 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    4
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_main
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           
  4093                           ;psect for function _PWM_DutyCycle1
  4094  0908                     _PWM_DutyCycle1:	
  4095                           
  4096                           ;pwm.c: 91: CCPR1L = valor >> 2;
  4097                           
  4098                           ;incstack = 0
  4099                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  4100  0908  1283               	bcf	3,5	;RP0=0, select bank0
  4101  0909  1303               	bcf	3,6	;RP1=0, select bank0
  4102  090A  0838               	movf	PWM_DutyCycle1@valor+1,w
  4103  090B  00BA               	movwf	??_PWM_DutyCycle1+1
  4104  090C  0837               	movf	PWM_DutyCycle1@valor,w
  4105  090D  00B9               	movwf	??_PWM_DutyCycle1
  4106  090E  0D3A               	rlf	??_PWM_DutyCycle1+1,w
  4107  090F  0CBA               	rrf	??_PWM_DutyCycle1+1,f
  4108  0910  0CB9               	rrf	??_PWM_DutyCycle1,f
  4109  0911  0D3A               	rlf	??_PWM_DutyCycle1+1,w
  4110  0912  0CBA               	rrf	??_PWM_DutyCycle1+1,f
  4111  0913  0CB9               	rrf	??_PWM_DutyCycle1,f
  4112  0914  0839               	movf	??_PWM_DutyCycle1,w
  4113  0915  0095               	movwf	21	;volatile
  4114                           
  4115                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  4116  0916  0837               	movf	PWM_DutyCycle1@valor,w
  4117  0917  00B9               	movwf	??_PWM_DutyCycle1
  4118  0918  3003               	movlw	3
  4119  0919                     u2525:	
  4120  0919  1003               	clrc
  4121  091A  0DB9               	rlf	??_PWM_DutyCycle1,f
  4122  091B  3EFF               	addlw	-1
  4123  091C  1D03               	skipz
  4124  091D  2919               	goto	u2525
  4125  091E  1003               	clrc
  4126  091F  0D39               	rlf	??_PWM_DutyCycle1,w
  4127  0920  380C               	iorlw	12
  4128  0921  0097               	movwf	23	;volatile
  4129  0922  0008               	return
  4130  0923                     __end_of_PWM_DutyCycle1:	
  4131                           
  4132                           	psect	text15
  4133  09A8                     __ptext15:	
  4134 ;; *************** function _LCD_WriteString *****************
  4135 ;; Defined at:
  4136 ;;		line 61 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  Str             2   25[BANK0 ] PTR const unsigned char 
  4139 ;;		 -> STR_18(6), STR_17(6), display_pwm(10), display_rpm(10), 
  4140 ;;		 -> STR_13(17), 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;		None               void
  4145 ;; Registers used:
  4146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         0       2       0       0       0
  4153 ;;      Locals:         0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0
  4155 ;;      Totals:         0       2       0       0       0
  4156 ;;Total ram usage:        2 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    5
  4159 ;; This function calls:
  4160 ;;		_LCD_WriteData
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _LCD_WriteString
  4168  09A8                     _LCD_WriteString:	
  4169  09A8                     l2593:	
  4170                           ;lcd.c: 63: while(*Str != '\0')
  4171                           
  4172                           ;incstack = 0
  4173                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4174                           
  4175  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4176  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4177  09AA  083A               	movf	LCD_WriteString@Str+1,w
  4178  09AB  00FF               	movwf	127
  4179  09AC  0839               	movf	LCD_WriteString@Str,w
  4180  09AD  0084               	movwf	4
  4181  09AE  160A  118A  2000  120A  158A  	fcall	stringtab
  4182  09B3  3800               	iorlw	0
  4183  09B4  1903               	btfsc	3,2
  4184  09B5  0008               	return
  4185                           
  4186                           ;lcd.c: 64: {
  4187                           ;lcd.c: 65: LCD_WriteData(*Str);
  4188  09B6  1283               	bcf	3,5	;RP0=0, select bank0
  4189  09B7  1303               	bcf	3,6	;RP1=0, select bank0
  4190  09B8  083A               	movf	LCD_WriteString@Str+1,w
  4191  09B9  00FF               	movwf	127
  4192  09BA  0839               	movf	LCD_WriteString@Str,w
  4193  09BB  0084               	movwf	4
  4194  09BC  160A  118A  2000  120A  158A  	fcall	stringtab
  4195  09C1  120A  158A  208B  120A  158A  	fcall	_LCD_WriteData
  4196                           
  4197                           ;lcd.c: 66: Str++;
  4198  09C6  3001               	movlw	1
  4199  09C7  1283               	bcf	3,5	;RP0=0, select bank0
  4200  09C8  1303               	bcf	3,6	;RP1=0, select bank0
  4201  09C9  07B9               	addwf	LCD_WriteString@Str,f
  4202  09CA  1803               	skipnc
  4203  09CB  0ABA               	incf	LCD_WriteString@Str+1,f
  4204  09CC  29A8               	goto	l2593
  4205  09CD                     __end_of_LCD_WriteString:	
  4206                           
  4207                           	psect	text16
  4208  088B                     __ptext16:	
  4209 ;; *************** function _LCD_WriteData *****************
  4210 ;; Defined at:
  4211 ;;		line 47 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  Byte            1    wreg     unsigned char 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  Byte            1   24[BANK0 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;		None               void
  4218 ;; Registers used:
  4219 ;;		wreg
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4225 ;;      Params:         0       0       0       0       0
  4226 ;;      Locals:         0       1       0       0       0
  4227 ;;      Temps:          0       1       0       0       0
  4228 ;;      Totals:         0       2       0       0       0
  4229 ;;Total ram usage:        2 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    4
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_LCD_WriteString
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           
  4240                           ;psect for function _LCD_WriteData
  4241  088B                     _LCD_WriteData:	
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in _LCD_WriteData: [wreg]
  4245                           ;LCD_WriteData@Byte stored from wreg
  4246  088B  1283               	bcf	3,5	;RP0=0, select bank0
  4247  088C  1303               	bcf	3,6	;RP1=0, select bank0
  4248  088D  00B8               	movwf	LCD_WriteData@Byte
  4249                           
  4250                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4251  088E  1409               	bsf	9,0	;volatile
  4252                           
  4253                           ;lcd.c: 51: PORTD = Byte;
  4254  088F  0838               	movf	LCD_WriteData@Byte,w
  4255  0890  0088               	movwf	8	;volatile
  4256                           
  4257                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4258  0891  1489               	bsf	9,1	;volatile
  4259                           
  4260                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4261  0892  303D               	movlw	61
  4262  0893  00B7               	movwf	??_LCD_WriteData
  4263  0894                     u3417:	
  4264  0894  0BB7               	decfsz	??_LCD_WriteData,f
  4265  0895  2894               	goto	u3417
  4266                           
  4267                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4268  0896  1283               	bcf	3,5	;RP0=0, select bank0
  4269  0897  1303               	bcf	3,6	;RP1=0, select bank0
  4270  0898  1089               	bcf	9,1	;volatile
  4271  0899  0008               	return
  4272  089A                     __end_of_LCD_WriteData:	
  4273                           
  4274                           	psect	text17
  4275  0C22                     __ptext17:	
  4276 ;; *************** function _LCD_Init *****************
  4277 ;; Defined at:
  4278 ;;		line 87 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;		None               void
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0, pclath, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4292 ;;      Params:         0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0
  4294 ;;      Temps:          0       2       0       0       0
  4295 ;;      Totals:         0       2       0       0       0
  4296 ;;Total ram usage:        2 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    5
  4299 ;; This function calls:
  4300 ;;		_LCD_WriteCmd
  4301 ;; This function is called by:
  4302 ;;		_main
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           
  4307                           ;psect for function _LCD_Init
  4308  0C22                     _LCD_Init:	
  4309                           
  4310                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4311                           
  4312                           ;incstack = 0
  4313                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4314  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  4315  0C23  1303               	bcf	3,6	;RP1=0, select bank1
  4316  0C24  119F               	bcf	31,3	;volatile
  4317                           
  4318                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4319  0C25  151F               	bsf	31,2	;volatile
  4320                           
  4321                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4322  0C26  109F               	bcf	31,1	;volatile
  4323                           
  4324                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4325  0C27  101F               	bcf	31,0	;volatile
  4326                           
  4327                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4328  0C28  305A               	movlw	90
  4329  0C29  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0C2A  1303               	bcf	3,6	;RP1=0, select bank0
  4331  0C2B  00BA               	movwf	??_LCD_Init+1
  4332  0C2C  30C3               	movlw	195
  4333  0C2D  00B9               	movwf	??_LCD_Init
  4334  0C2E                     u3427:	
  4335  0C2E  0BB9               	decfsz	??_LCD_Init,f
  4336  0C2F  2C2E               	goto	u3427
  4337  0C30  0BBA               	decfsz	??_LCD_Init+1,f
  4338  0C31  2C2E               	goto	u3427
  4339                           
  4340                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4341  0C32  3030               	movlw	48
  4342  0C33  120A  158A  207C  120A  158A  	fcall	_LCD_WriteCmd
  4343                           
  4344                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4345  0C38  3018               	movlw	24
  4346  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0C3B  00BA               	movwf	??_LCD_Init+1
  4349  0C3C  30EF               	movlw	239
  4350  0C3D  00B9               	movwf	??_LCD_Init
  4351  0C3E                     u3437:	
  4352  0C3E  0BB9               	decfsz	??_LCD_Init,f
  4353  0C3F  2C3E               	goto	u3437
  4354  0C40  0BBA               	decfsz	??_LCD_Init+1,f
  4355  0C41  2C3E               	goto	u3437
  4356                           
  4357                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4358  0C42  3030               	movlw	48
  4359  0C43  120A  158A  207C  120A  158A  	fcall	_LCD_WriteCmd
  4360                           
  4361                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4362  0C48  3099               	movlw	153
  4363  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0C4B  00B9               	movwf	??_LCD_Init
  4366  0C4C                     u3447:	
  4367  0C4C  0BB9               	decfsz	??_LCD_Init,f
  4368  0C4D  2C4C               	goto	u3447
  4369                           
  4370                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4371  0C4E  3030               	movlw	48
  4372  0C4F  120A  158A  207C  120A  158A  	fcall	_LCD_WriteCmd
  4373                           
  4374                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4375  0C54  303D               	movlw	61
  4376  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  4377  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  4378  0C57  00B9               	movwf	??_LCD_Init
  4379  0C58                     u3457:	
  4380  0C58  0BB9               	decfsz	??_LCD_Init,f
  4381  0C59  2C58               	goto	u3457
  4382                           
  4383                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4384  0C5A  3038               	movlw	56
  4385  0C5B  120A  158A  207C  120A  158A  	fcall	_LCD_WriteCmd
  4386                           
  4387                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4388  0C60  303D               	movlw	61
  4389  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  4390  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  4391  0C63  00B9               	movwf	??_LCD_Init
  4392  0C64                     u3467:	
  4393  0C64  0BB9               	decfsz	??_LCD_Init,f
  4394  0C65  2C64               	goto	u3467
  4395                           
  4396                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4397  0C66  3001               	movlw	1
  4398  0C67  120A  158A  207C  120A  158A  	fcall	_LCD_WriteCmd
  4399                           
  4400                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4401  0C6C  300C               	movlw	12
  4402  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0C6F  00BA               	movwf	??_LCD_Init+1
  4405  0C70  30F7               	movlw	247
  4406  0C71  00B9               	movwf	??_LCD_Init
  4407  0C72                     u3477:	
  4408  0C72  0BB9               	decfsz	??_LCD_Init,f
  4409  0C73  2C72               	goto	u3477
  4410  0C74  0BBA               	decfsz	??_LCD_Init+1,f
  4411  0C75  2C72               	goto	u3477
  4412                           
  4413                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4414  0C76  300C               	movlw	12
  4415  0C77  120A  158A  207C  120A  158A  	fcall	_LCD_WriteCmd
  4416                           
  4417                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4418  0C7C  303D               	movlw	61
  4419  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  4420  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  4421  0C7F  00B9               	movwf	??_LCD_Init
  4422  0C80                     u3487:	
  4423  0C80  0BB9               	decfsz	??_LCD_Init,f
  4424  0C81  2C80               	goto	u3487
  4425                           
  4426                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4427  0C82  3006               	movlw	6
  4428  0C83  120A  158A  207C  120A  158A  	fcall	_LCD_WriteCmd
  4429                           
  4430                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4431  0C88  303D               	movlw	61
  4432  0C89  1283               	bcf	3,5	;RP0=0, select bank0
  4433  0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  4434  0C8B  00B9               	movwf	??_LCD_Init
  4435  0C8C                     u3497:	
  4436  0C8C  0BB9               	decfsz	??_LCD_Init,f
  4437  0C8D  2C8C               	goto	u3497
  4438  0C8E  0008               	return
  4439  0C8F                     __end_of_LCD_Init:	
  4440                           
  4441                           	psect	text18
  4442  08BC                     __ptext18:	
  4443 ;; *************** function _LCD_Cursor *****************
  4444 ;; Defined at:
  4445 ;;		line 10 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  Row             1    wreg     unsigned char 
  4448 ;;  Col             1   23[BANK0 ] unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  Row             1   25[BANK0 ] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;		None               void
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4460 ;;      Params:         0       1       0       0       0
  4461 ;;      Locals:         0       1       0       0       0
  4462 ;;      Temps:          0       1       0       0       0
  4463 ;;      Totals:         0       3       0       0       0
  4464 ;;Total ram usage:        3 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    4
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_main
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           
  4475                           ;psect for function _LCD_Cursor
  4476  08BC                     _LCD_Cursor:	
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4480                           ;LCD_Cursor@Row stored from wreg
  4481  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  4482  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  4483  08BE  00B9               	movwf	LCD_Cursor@Row
  4484                           
  4485                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4486  08BF  1009               	bcf	9,0	;volatile
  4487                           
  4488                           ;lcd.c: 14: if (Row == 0)
  4489  08C0  08B9               	movf	LCD_Cursor@Row,f
  4490  08C1  1D03               	skipz
  4491  08C2  28C6               	goto	l2579
  4492                           
  4493                           ;lcd.c: 15: {
  4494                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4495  08C3  0837               	movf	LCD_Cursor@Col,w
  4496  08C4  3E80               	addlw	128
  4497  08C5  28C8               	goto	L2
  4498  08C6                     l2579:	
  4499                           ;lcd.c: 17: }
  4500                           
  4501                           
  4502                           ;lcd.c: 18: else
  4503                           ;lcd.c: 19: {
  4504                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4505  08C6  0837               	movf	LCD_Cursor@Col,w
  4506  08C7  3EC0               	addlw	192
  4507  08C8                     L2:	
  4508  08C8  0088               	movwf	8	;volatile
  4509                           
  4510                           ;lcd.c: 21: }
  4511                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4512  08C9  1489               	bsf	9,1	;volatile
  4513                           
  4514                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4515  08CA  303D               	movlw	61
  4516  08CB  00B8               	movwf	??_LCD_Cursor
  4517  08CC                     u3507:	
  4518  08CC  0BB8               	decfsz	??_LCD_Cursor,f
  4519  08CD  28CC               	goto	u3507
  4520                           
  4521                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4522  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  4523  08CF  1303               	bcf	3,6	;RP1=0, select bank0
  4524  08D0  1089               	bcf	9,1	;volatile
  4525  08D1  0008               	return
  4526  08D2                     __end_of_LCD_Cursor:	
  4527                           
  4528                           	psect	text19
  4529  0A17                     __ptext19:	
  4530 ;; *************** function _LCD_Clear *****************
  4531 ;; Defined at:
  4532 ;;		line 71 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;		None               void
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0, pclath, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4546 ;;      Params:         0       0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0
  4548 ;;      Temps:          0       2       0       0       0
  4549 ;;      Totals:         0       2       0       0       0
  4550 ;;Total ram usage:        2 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    5
  4553 ;; This function calls:
  4554 ;;		_LCD_WriteCmd
  4555 ;; This function is called by:
  4556 ;;		_main
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           
  4561                           ;psect for function _LCD_Clear
  4562  0A17                     _LCD_Clear:	
  4563                           
  4564                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4568  0A17  3001               	movlw	1
  4569  0A18  120A  158A  207C  120A  158A  	fcall	_LCD_WriteCmd
  4570                           
  4571                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4572  0A1D  300C               	movlw	12
  4573  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  4574  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  4575  0A20  00BA               	movwf	??_LCD_Clear+1
  4576  0A21  30F7               	movlw	247
  4577  0A22  00B9               	movwf	??_LCD_Clear
  4578  0A23                     u3517:	
  4579  0A23  0BB9               	decfsz	??_LCD_Clear,f
  4580  0A24  2A23               	goto	u3517
  4581  0A25  0BBA               	decfsz	??_LCD_Clear+1,f
  4582  0A26  2A23               	goto	u3517
  4583                           
  4584                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4585  0A27  300C               	movlw	12
  4586  0A28  120A  158A  207C  120A  158A  	fcall	_LCD_WriteCmd
  4587                           
  4588                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4589  0A2D  303D               	movlw	61
  4590  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  4591  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  4592  0A30  00B9               	movwf	??_LCD_Clear
  4593  0A31                     u3527:	
  4594  0A31  0BB9               	decfsz	??_LCD_Clear,f
  4595  0A32  2A31               	goto	u3527
  4596                           
  4597                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4598  0A33  3006               	movlw	6
  4599  0A34  120A  158A  207C  120A  158A  	fcall	_LCD_WriteCmd
  4600                           
  4601                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4602  0A39  303D               	movlw	61
  4603  0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0A3C  00B9               	movwf	??_LCD_Clear
  4606  0A3D                     u3537:	
  4607  0A3D  0BB9               	decfsz	??_LCD_Clear,f
  4608  0A3E  2A3D               	goto	u3537
  4609  0A3F  0008               	return
  4610  0A40                     __end_of_LCD_Clear:	
  4611                           
  4612                           	psect	text20
  4613  087C                     __ptext20:	
  4614 ;; *************** function _LCD_WriteCmd *****************
  4615 ;; Defined at:
  4616 ;;		line 32 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  Byte            1    wreg     unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  Byte            1   24[BANK0 ] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;		None               void
  4623 ;; Registers used:
  4624 ;;		wreg
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4630 ;;      Params:         0       0       0       0       0
  4631 ;;      Locals:         0       1       0       0       0
  4632 ;;      Temps:          0       1       0       0       0
  4633 ;;      Totals:         0       2       0       0       0
  4634 ;;Total ram usage:        2 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    4
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_LCD_Clear
  4641 ;;		_LCD_Init
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _LCD_WriteCmd
  4647  087C                     _LCD_WriteCmd:	
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _LCD_WriteCmd: [wreg]
  4651                           ;LCD_WriteCmd@Byte stored from wreg
  4652  087C  1283               	bcf	3,5	;RP0=0, select bank0
  4653  087D  1303               	bcf	3,6	;RP1=0, select bank0
  4654  087E  00B8               	movwf	LCD_WriteCmd@Byte
  4655                           
  4656                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4657  087F  1009               	bcf	9,0	;volatile
  4658                           
  4659                           ;lcd.c: 36: PORTD = Byte;
  4660  0880  0838               	movf	LCD_WriteCmd@Byte,w
  4661  0881  0088               	movwf	8	;volatile
  4662                           
  4663                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4664  0882  1489               	bsf	9,1	;volatile
  4665                           
  4666                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4667  0883  303D               	movlw	61
  4668  0884  00B7               	movwf	??_LCD_WriteCmd
  4669  0885                     u3547:	
  4670  0885  0BB7               	decfsz	??_LCD_WriteCmd,f
  4671  0886  2885               	goto	u3547
  4672                           
  4673                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4674  0887  1283               	bcf	3,5	;RP0=0, select bank0
  4675  0888  1303               	bcf	3,6	;RP1=0, select bank0
  4676  0889  1089               	bcf	9,1	;volatile
  4677  088A  0008               	return
  4678  088B                     __end_of_LCD_WriteCmd:	
  4679                           
  4680                           	psect	text21
  4681  08AA                     __ptext21:	
  4682 ;; *************** function _ADC_Init *****************
  4683 ;; Defined at:
  4684 ;;		line 6 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\adc.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;		None               void
  4691 ;; Registers used:
  4692 ;;		None
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4698 ;;      Params:         0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    4
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_main
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           
  4713                           ;psect for function _ADC_Init
  4714  08AA                     _ADC_Init:	
  4715                           
  4716                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in _ADC_Init: []
  4720  08AA  1683               	bsf	3,5	;RP0=1, select bank1
  4721  08AB  1303               	bcf	3,6	;RP1=0, select bank1
  4722  08AC  179F               	bsf	31,7	;volatile
  4723                           
  4724                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4725  08AD  159F               	bsf	31,3	;volatile
  4726                           
  4727                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4728  08AE  151F               	bsf	31,2	;volatile
  4729                           
  4730                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4731  08AF  149F               	bsf	31,1	;volatile
  4732                           
  4733                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4734  08B0  101F               	bcf	31,0	;volatile
  4735                           
  4736                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4737  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  4738  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  4739  08B3  179F               	bsf	31,7	;volatile
  4740                           
  4741                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4742  08B4  131F               	bcf	31,6	;volatile
  4743                           
  4744                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4745  08B5  1683               	bsf	3,5	;RP0=1, select bank1
  4746  08B6  1303               	bcf	3,6	;RP1=0, select bank1
  4747  08B7  130C               	bcf	12,6	;volatile
  4748                           
  4749                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4750  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  4751  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  4752  08BA  130C               	bcf	12,6	;volatile
  4753  08BB  0008               	return
  4754  08BC                     __end_of_ADC_Init:	
  4755                           
  4756                           	psect	text22
  4757  0E83                     __ptext22:	
  4758 ;; *************** function _ISR *****************
  4759 ;; Defined at:
  4760 ;;		line 321 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;		None               void
  4767 ;; Registers used:
  4768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4774 ;;      Params:         0       0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0
  4776 ;;      Temps:          0       4       0       0       0
  4777 ;;      Totals:         0       4       0       0       0
  4778 ;;Total ram usage:        4 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    3
  4781 ;; This function calls:
  4782 ;;		_Fuzzy
  4783 ;;		_USART_ReceiveChar
  4784 ;;		i1_PWM_DutyCycle2
  4785 ;;		i1_TIMER0_Set
  4786 ;;		i1_USART_WriteString
  4787 ;;		i1___lwdiv
  4788 ;;		i1___wmul
  4789 ;; This function is called by:
  4790 ;;		Interrupt level 1
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           
  4795                           ;psect for function _ISR
  4796  0E83                     _ISR:	
  4797                           
  4798                           ;main.c: 324: if (PIR1bits.RCIF)
  4799  0E83  1E8C               	btfss	12,5	;volatile
  4800  0E84  2F94               	goto	i1l2797
  4801                           
  4802                           ;main.c: 325: {
  4803                           ;main.c: 326: pwmAnt = pwm;
  4804  0E85  084A               	movf	_pwm+1,w
  4805  0E86  01CC               	clrf	_pwmAnt+1
  4806  0E87  07CC               	addwf	_pwmAnt+1,f
  4807  0E88  0849               	movf	_pwm,w
  4808  0E89  01CB               	clrf	_pwmAnt
  4809  0E8A  07CB               	addwf	_pwmAnt,f
  4810                           
  4811                           ;main.c: 327: if (USART_ReceiveChar() == '0')
  4812  0E8B  120A  158A  20ED  120A  158A  	fcall	_USART_ReceiveChar
  4813  0E90  3A30               	xorlw	48
  4814  0E91  1D03               	skipz
  4815  0E92  2EAB               	goto	i1l2731
  4816                           
  4817                           ;main.c: 328: {
  4818                           ;main.c: 329: USART_WriteString("\n\rdesligado\n\r");
  4819  0E93  30EA               	movlw	low (STR_1| (0+32768))
  4820  0E94  00F1               	movwf	i1USART_WriteString@str
  4821  0E95  3090               	movlw	high (STR_1| (0+32768))
  4822  0E96  00F2               	movwf	i1USART_WriteString@str+1
  4823  0E97  120A  158A  2161  120A  158A  	fcall	i1_USART_WriteString
  4824                           
  4825                           ;main.c: 330: pwm = 0;
  4826  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0E9E  01C9               	clrf	_pwm
  4829  0E9F  01CA               	clrf	_pwm+1
  4830                           
  4831                           ;main.c: 331: PWM_DutyCycle2(pwm);
  4832  0EA0  084A               	movf	_pwm+1,w
  4833  0EA1  01A1               	clrf	i1PWM_DutyCycle2@valor+1
  4834  0EA2  07A1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4835  0EA3  0849               	movf	_pwm,w
  4836  0EA4  01A0               	clrf	i1PWM_DutyCycle2@valor
  4837  0EA5  07A0               	addwf	i1PWM_DutyCycle2@valor,f
  4838  0EA6  120A  158A  20D2  120A  158A  	fcall	i1_PWM_DutyCycle2
  4839  0EAB                     i1l2731:	
  4840                           
  4841                           ;main.c: 333: }
  4842                           ;main.c: 335: if (USART_ReceiveChar() == '1')
  4843  0EAB  120A  158A  20ED  120A  158A  	fcall	_USART_ReceiveChar
  4844  0EB0  3A31               	xorlw	49
  4845  0EB1  1D03               	skipz
  4846  0EB2  2EC2               	goto	i1l2737
  4847                           
  4848                           ;main.c: 336: {
  4849                           ;main.c: 337: USART_WriteString("\n\rpwm = 32\n\r");
  4850  0EB3  30F8               	movlw	low (STR_2| (0+32768))
  4851  0EB4  00F1               	movwf	i1USART_WriteString@str
  4852  0EB5  3090               	movlw	high (STR_2| (0+32768))
  4853  0EB6  00F2               	movwf	i1USART_WriteString@str+1
  4854  0EB7  120A  158A  2161  120A  158A  	fcall	i1_USART_WriteString
  4855                           
  4856                           ;main.c: 338: pwm = 32;
  4857  0EBC  3020               	movlw	32
  4858  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  4859  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  4860  0EBF  00C9               	movwf	_pwm
  4861  0EC0  3000               	movlw	0
  4862  0EC1  00CA               	movwf	_pwm+1
  4863  0EC2                     i1l2737:	
  4864                           
  4865                           ;main.c: 340: }
  4866                           ;main.c: 342: if (USART_ReceiveChar() == '2')
  4867  0EC2  120A  158A  20ED  120A  158A  	fcall	_USART_ReceiveChar
  4868  0EC7  3A32               	xorlw	50
  4869  0EC8  1D03               	skipz
  4870  0EC9  2ED9               	goto	i1l2743
  4871                           
  4872                           ;main.c: 343: {
  4873                           ;main.c: 344: USART_WriteString("\n\rpwm = 64\n\r");
  4874  0ECA  3005               	movlw	low (STR_3| (0+32768))
  4875  0ECB  00F1               	movwf	i1USART_WriteString@str
  4876  0ECC  3091               	movlw	high (STR_3| (0+32768))
  4877  0ECD  00F2               	movwf	i1USART_WriteString@str+1
  4878  0ECE  120A  158A  2161  120A  158A  	fcall	i1_USART_WriteString
  4879                           
  4880                           ;main.c: 345: pwm = 64;
  4881  0ED3  3040               	movlw	64
  4882  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  4883  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  4884  0ED6  00C9               	movwf	_pwm
  4885  0ED7  3000               	movlw	0
  4886  0ED8  00CA               	movwf	_pwm+1
  4887  0ED9                     i1l2743:	
  4888                           
  4889                           ;main.c: 347: }
  4890                           ;main.c: 349: if (USART_ReceiveChar() == '3')
  4891  0ED9  120A  158A  20ED  120A  158A  	fcall	_USART_ReceiveChar
  4892  0EDE  3A33               	xorlw	51
  4893  0EDF  1D03               	skipz
  4894  0EE0  2EF5               	goto	i1l2753
  4895                           
  4896                           ;main.c: 350: {
  4897                           ;main.c: 351: USART_WriteString("\n\rpwm = 128\n\r");
  4898  0EE1  30CE               	movlw	low (STR_4| (0+32768))
  4899  0EE2  00F1               	movwf	i1USART_WriteString@str
  4900  0EE3  3090               	movlw	high (STR_4| (0+32768))
  4901  0EE4  00F2               	movwf	i1USART_WriteString@str+1
  4902  0EE5  120A  158A  2161  120A  158A  	fcall	i1_USART_WriteString
  4903                           
  4904                           ;main.c: 352: pwm = 128;
  4905  0EEA  3080               	movlw	128
  4906  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  4907  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  4908  0EED  00C9               	movwf	_pwm
  4909  0EEE  3000               	movlw	0
  4910  0EEF  00CA               	movwf	_pwm+1
  4911                           
  4912                           ;main.c: 354: if(PORTBbits.RB0 == 0)
  4913  0EF0  1806               	btfsc	6,0	;volatile
  4914  0EF1  2EF4               	goto	i1l196
  4915                           
  4916                           ;main.c: 355: {
  4917                           ;main.c: 356: PORTBbits.RB0 = 1;
  4918  0EF2  1406               	bsf	6,0	;volatile
  4919                           
  4920                           ;main.c: 357: }else{
  4921  0EF3  2EF5               	goto	i1l2753
  4922  0EF4                     i1l196:	
  4923                           
  4924                           ;main.c: 358: PORTBbits.RB0 = 0;
  4925  0EF4  1006               	bcf	6,0	;volatile
  4926  0EF5                     i1l2753:	
  4927                           
  4928                           ;main.c: 359: }
  4929                           ;main.c: 360: }
  4930                           ;main.c: 362: if (USART_ReceiveChar() == '4')
  4931  0EF5  120A  158A  20ED  120A  158A  	fcall	_USART_ReceiveChar
  4932  0EFA  3A34               	xorlw	52
  4933  0EFB  1D03               	skipz
  4934  0EFC  2F11               	goto	i1l2763
  4935                           
  4936                           ;main.c: 363: {
  4937                           ;main.c: 364: USART_WriteString("\n\rpwm = 256\n\r");
  4938  0EFD  30B2               	movlw	low (STR_5| (0+32768))
  4939  0EFE  00F1               	movwf	i1USART_WriteString@str
  4940  0EFF  3090               	movlw	high (STR_5| (0+32768))
  4941  0F00  00F2               	movwf	i1USART_WriteString@str+1
  4942  0F01  120A  158A  2161  120A  158A  	fcall	i1_USART_WriteString
  4943                           
  4944                           ;main.c: 365: pwm = 256;
  4945  0F06  3000               	movlw	0
  4946  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  4947  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  4948  0F09  00C9               	movwf	_pwm
  4949  0F0A  3001               	movlw	1
  4950  0F0B  00CA               	movwf	_pwm+1
  4951                           
  4952                           ;main.c: 367: if(PORTBbits.RB1 == 0)
  4953  0F0C  1886               	btfsc	6,1	;volatile
  4954  0F0D  2F10               	goto	i1l199
  4955                           
  4956                           ;main.c: 368: {
  4957                           ;main.c: 369: PORTBbits.RB1 = 1;
  4958  0F0E  1486               	bsf	6,1	;volatile
  4959                           
  4960                           ;main.c: 370: }else{
  4961  0F0F  2F11               	goto	i1l2763
  4962  0F10                     i1l199:	
  4963                           
  4964                           ;main.c: 371: PORTBbits.RB1 = 0;
  4965  0F10  1086               	bcf	6,1	;volatile
  4966  0F11                     i1l2763:	
  4967                           
  4968                           ;main.c: 372: }
  4969                           ;main.c: 373: }
  4970                           ;main.c: 375: if (USART_ReceiveChar() == '5')
  4971  0F11  120A  158A  20ED  120A  158A  	fcall	_USART_ReceiveChar
  4972  0F16  3A35               	xorlw	53
  4973  0F17  1D03               	skipz
  4974  0F18  2F28               	goto	i1l2769
  4975                           
  4976                           ;main.c: 376: {
  4977                           ;main.c: 377: USART_WriteString("\n\rpwm = 512\n\r");
  4978  0F19  30A4               	movlw	low (STR_6| (0+32768))
  4979  0F1A  00F1               	movwf	i1USART_WriteString@str
  4980  0F1B  3090               	movlw	high (STR_6| (0+32768))
  4981  0F1C  00F2               	movwf	i1USART_WriteString@str+1
  4982  0F1D  120A  158A  2161  120A  158A  	fcall	i1_USART_WriteString
  4983                           
  4984                           ;main.c: 378: pwm = 512;
  4985  0F22  3000               	movlw	0
  4986  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  4987  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  4988  0F25  00C9               	movwf	_pwm
  4989  0F26  3002               	movlw	2
  4990  0F27  00CA               	movwf	_pwm+1
  4991  0F28                     i1l2769:	
  4992                           
  4993                           ;main.c: 380: }
  4994                           ;main.c: 382: if (USART_ReceiveChar() == '6')
  4995  0F28  120A  158A  20ED  120A  158A  	fcall	_USART_ReceiveChar
  4996  0F2D  3A36               	xorlw	54
  4997  0F2E  1D03               	skipz
  4998  0F2F  2F3F               	goto	i1l2775
  4999                           
  5000                           ;main.c: 383: {
  5001                           ;main.c: 384: USART_WriteString("\n\rpwm = 768\n\r");
  5002  0F30  30DC               	movlw	low (STR_7| (0+32768))
  5003  0F31  00F1               	movwf	i1USART_WriteString@str
  5004  0F32  3090               	movlw	high (STR_7| (0+32768))
  5005  0F33  00F2               	movwf	i1USART_WriteString@str+1
  5006  0F34  120A  158A  2161  120A  158A  	fcall	i1_USART_WriteString
  5007                           
  5008                           ;main.c: 385: pwm = 768;
  5009  0F39  3000               	movlw	0
  5010  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0F3C  00C9               	movwf	_pwm
  5013  0F3D  3003               	movlw	3
  5014  0F3E  00CA               	movwf	_pwm+1
  5015  0F3F                     i1l2775:	
  5016                           
  5017                           ;main.c: 387: }
  5018                           ;main.c: 389: if (USART_ReceiveChar() == '7')
  5019  0F3F  120A  158A  20ED  120A  158A  	fcall	_USART_ReceiveChar
  5020  0F44  3A37               	xorlw	55
  5021  0F45  1D03               	skipz
  5022  0F46  2F56               	goto	i1l2781
  5023                           
  5024                           ;main.c: 390: {
  5025                           ;main.c: 391: USART_WriteString("\n\rpwm = 896\n\r");
  5026  0F47  30C0               	movlw	low (STR_8| (0+32768))
  5027  0F48  00F1               	movwf	i1USART_WriteString@str
  5028  0F49  3090               	movlw	high (STR_8| (0+32768))
  5029  0F4A  00F2               	movwf	i1USART_WriteString@str+1
  5030  0F4B  120A  158A  2161  120A  158A  	fcall	i1_USART_WriteString
  5031                           
  5032                           ;main.c: 392: pwm = 896;
  5033  0F50  3080               	movlw	128
  5034  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  5035  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  5036  0F53  00C9               	movwf	_pwm
  5037  0F54  3003               	movlw	3
  5038  0F55  00CA               	movwf	_pwm+1
  5039  0F56                     i1l2781:	
  5040                           
  5041                           ;main.c: 394: }
  5042                           ;main.c: 396: if (USART_ReceiveChar() == '8')
  5043  0F56  120A  158A  20ED  120A  158A  	fcall	_USART_ReceiveChar
  5044  0F5B  3A38               	xorlw	56
  5045  0F5C  1D03               	skipz
  5046  0F5D  2F6D               	goto	i1l2787
  5047                           
  5048                           ;main.c: 397: {
  5049                           ;main.c: 398: USART_WriteString("\n\rpwm = 1000\n\r");
  5050  0F5E  3086               	movlw	low (STR_9| (0+32768))
  5051  0F5F  00F1               	movwf	i1USART_WriteString@str
  5052  0F60  3090               	movlw	high (STR_9| (0+32768))
  5053  0F61  00F2               	movwf	i1USART_WriteString@str+1
  5054  0F62  120A  158A  2161  120A  158A  	fcall	i1_USART_WriteString
  5055                           
  5056                           ;main.c: 399: pwm = 1000;
  5057  0F67  30E8               	movlw	232
  5058  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  5059  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  5060  0F6A  00C9               	movwf	_pwm
  5061  0F6B  3003               	movlw	3
  5062  0F6C  00CA               	movwf	_pwm+1
  5063  0F6D                     i1l2787:	
  5064                           
  5065                           ;main.c: 401: }
  5066                           ;main.c: 403: if (USART_ReceiveChar() == '9')
  5067  0F6D  120A  158A  20ED  120A  158A  	fcall	_USART_ReceiveChar
  5068  0F72  3A39               	xorlw	57
  5069  0F73  1D03               	skipz
  5070  0F74  2F84               	goto	i1l2793
  5071                           
  5072                           ;main.c: 404: {
  5073                           ;main.c: 405: USART_WriteString("\n\rpwm = 1023\n\r");
  5074  0F75  3095               	movlw	low (STR_10| (0+32768))
  5075  0F76  00F1               	movwf	i1USART_WriteString@str
  5076  0F77  3090               	movlw	high (STR_10| (0+32768))
  5077  0F78  00F2               	movwf	i1USART_WriteString@str+1
  5078  0F79  120A  158A  2161  120A  158A  	fcall	i1_USART_WriteString
  5079                           
  5080                           ;main.c: 406: pwm = 1023;
  5081  0F7E  30FF               	movlw	255
  5082  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  5083  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  5084  0F81  00C9               	movwf	_pwm
  5085  0F82  3003               	movlw	3
  5086  0F83  00CA               	movwf	_pwm+1
  5087  0F84                     i1l2793:	
  5088                           
  5089                           ;main.c: 408: }
  5090                           ;main.c: 412: Fuzzy(pwm);
  5091  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  5092  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  5093  0F86  084A               	movf	_pwm+1,w
  5094  0F87  01AD               	clrf	Fuzzy@setpoint+1
  5095  0F88  07AD               	addwf	Fuzzy@setpoint+1,f
  5096  0F89  0849               	movf	_pwm,w
  5097  0F8A  01AC               	clrf	Fuzzy@setpoint
  5098  0F8B  07AC               	addwf	Fuzzy@setpoint,f
  5099  0F8C  120A  118A  2042  120A  158A  	fcall	_Fuzzy
  5100                           
  5101                           ;main.c: 415: PIR1bits.RCIF = 0;
  5102  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0F93  128C               	bcf	12,5	;volatile
  5105  0F94                     i1l2797:	
  5106                           
  5107                           ;main.c: 416: }
  5108                           ;main.c: 419: if (PIR1bits.ADIF)
  5109  0F94  1B0C               	btfsc	12,6	;volatile
  5110                           
  5111                           ;main.c: 420: {
  5112                           ;main.c: 424: PIR1bits.ADIF = 0;
  5113  0F95  130C               	bcf	12,6	;volatile
  5114                           
  5115                           ;main.c: 425: }
  5116                           ;main.c: 429: if (INTCONbits.T0IF)
  5117  0F96  1D0B               	btfss	11,2	;volatile
  5118  0F97  2FF1               	goto	i1l2823
  5119                           
  5120                           ;main.c: 430: {
  5121                           ;main.c: 432: TIMER0_Set(238);
  5122  0F98  30EE               	movlw	238
  5123  0F99  120A  158A  203E  120A  158A  	fcall	i1_TIMER0_Set
  5124                           
  5125                           ;main.c: 435: if (contagens_tm0 < 499)
  5126  0F9E  3001               	movlw	1
  5127  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  5128  0FA0  1303               	bcf	3,6	;RP1=0, select bank1
  5129  0FA1  0225               	subwf	(_contagens_tm0+1)^(0+128),w
  5130  0FA2  30F3               	movlw	243
  5131  0FA3  1903               	skipnz
  5132  0FA4  0224               	subwf	_contagens_tm0^(0+128),w
  5133  0FA5  1803               	skipnc
  5134  0FA6  2FB1               	goto	i1l2809
  5135                           
  5136                           ;main.c: 436: {
  5137                           ;main.c: 438: contagens_tm0++;
  5138  0FA7  3001               	movlw	1
  5139  0FA8  07A4               	addwf	_contagens_tm0^(0+128),f
  5140  0FA9  1803               	skipnc
  5141  0FAA  0AA5               	incf	(_contagens_tm0+1)^(0+128),f
  5142  0FAB  3000               	movlw	0
  5143  0FAC  07A5               	addwf	(_contagens_tm0+1)^(0+128),f
  5144                           
  5145                           ;main.c: 441: PORTBbits.RB6 = 1;
  5146  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0FAF  1706               	bsf	6,6	;volatile
  5149                           
  5150                           ;main.c: 442: }
  5151  0FB0  2FF0               	goto	i1l2821
  5152  0FB1                     i1l2809:	
  5153                           
  5154                           ;main.c: 443: else
  5155                           ;main.c: 444: {
  5156                           ;main.c: 446: contagens_tm0 = 0;
  5157  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  5158  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  5159  0FB3  01A4               	clrf	_contagens_tm0^(0+128)
  5160  0FB4  01A5               	clrf	(_contagens_tm0+1)^(0+128)
  5161                           
  5162                           ;main.c: 449: pulsos = (TMR1H << 8) + TMR1L;
  5163  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  5164  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  5165  0FB7  080F               	movf	15,w	;volatile
  5166  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  5167  0FB9  1303               	bcf	3,6	;RP1=0, select bank1
  5168  0FBA  01B7               	clrf	(_pulsos+1)^(0+128)
  5169  0FBB  07B7               	addwf	(_pulsos+1)^(0+128),f
  5170  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0FBE  080E               	movf	14,w	;volatile
  5173  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  5174  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  5175  0FC1  01B6               	clrf	_pulsos^(0+128)
  5176  0FC2  07B6               	addwf	_pulsos^(0+128),f
  5177                           
  5178                           ;main.c: 450: rpm = ((pulsos / pas_cooler) * 120);
  5179  0FC3  086C               	movf	(_pas_cooler+1)^(0+128),w
  5180  0FC4  01F1               	clrf	i1___lwdiv@divisor+1
  5181  0FC5  07F1               	addwf	i1___lwdiv@divisor+1,f
  5182  0FC6  086B               	movf	_pas_cooler^(0+128),w
  5183  0FC7  01F0               	clrf	i1___lwdiv@divisor
  5184  0FC8  07F0               	addwf	i1___lwdiv@divisor,f
  5185  0FC9  0837               	movf	(_pulsos+1)^(0+128),w
  5186  0FCA  01F3               	clrf	i1___lwdiv@dividend+1
  5187  0FCB  07F3               	addwf	i1___lwdiv@dividend+1,f
  5188  0FCC  0836               	movf	_pulsos^(0+128),w
  5189  0FCD  01F2               	clrf	i1___lwdiv@dividend
  5190  0FCE  07F2               	addwf	i1___lwdiv@dividend,f
  5191  0FCF  120A  158A  2240  120A  158A  	fcall	i1___lwdiv
  5192  0FD4  0871               	movf	?i1___lwdiv+1,w
  5193  0FD5  01F9               	clrf	i1___wmul@multiplier+1
  5194  0FD6  07F9               	addwf	i1___wmul@multiplier+1,f
  5195  0FD7  0870               	movf	?i1___lwdiv,w
  5196  0FD8  01F8               	clrf	i1___wmul@multiplier
  5197  0FD9  07F8               	addwf	i1___wmul@multiplier,f
  5198  0FDA  3078               	movlw	120
  5199  0FDB  00FA               	movwf	i1___wmul@multiplicand
  5200  0FDC  3000               	movlw	0
  5201  0FDD  00FB               	movwf	i1___wmul@multiplicand+1
  5202  0FDE  120A  158A  213E  120A  158A  	fcall	i1___wmul
  5203  0FE3  0879               	movf	?i1___wmul+1,w
  5204  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  5205  0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  5206  0FE6  01B9               	clrf	(_rpm+1)^(0+128)
  5207  0FE7  07B9               	addwf	(_rpm+1)^(0+128),f
  5208  0FE8  0878               	movf	?i1___wmul,w
  5209  0FE9  01B8               	clrf	_rpm^(0+128)
  5210  0FEA  07B8               	addwf	_rpm^(0+128),f
  5211                           
  5212                           ;main.c: 453: TMR1L = 0x00;
  5213  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  5214  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  5215  0FED  018E               	clrf	14	;volatile
  5216                           
  5217                           ;main.c: 454: TMR1H = 0x00;
  5218  0FEE  018F               	clrf	15	;volatile
  5219                           
  5220                           ;main.c: 457: PORTBbits.RB6 = 0;
  5221  0FEF  1306               	bcf	6,6	;volatile
  5222  0FF0                     i1l2821:	
  5223                           
  5224                           ;main.c: 458: }
  5225                           ;main.c: 461: INTCONbits.T0IF = 0;
  5226  0FF0  110B               	bcf	11,2	;volatile
  5227  0FF1                     i1l2823:	
  5228                           
  5229                           ;main.c: 462: }
  5230                           ;main.c: 465: if (PIR1bits.TMR1IF)
  5231  0FF1  180C               	btfsc	12,0	;volatile
  5232                           
  5233                           ;main.c: 466: {
  5234                           ;main.c: 470: PIR1bits.TMR1IF = 0;
  5235  0FF2  100C               	bcf	12,0	;volatile
  5236                           
  5237                           ;main.c: 471: }
  5238                           ;main.c: 474: if (PIR1bits.SSPIF)
  5239  0FF3  198C               	btfsc	12,3	;volatile
  5240                           
  5241                           ;main.c: 475: {
  5242                           ;main.c: 479: PIR1bits.SSPIF = 0;
  5243  0FF4  118C               	bcf	12,3	;volatile
  5244  0FF5  0836               	movf	??_ISR+3,w
  5245  0FF6  00FF               	movwf	127
  5246  0FF7  0835               	movf	??_ISR+2,w
  5247  0FF8  008A               	movwf	10
  5248  0FF9  0834               	movf	??_ISR+1,w
  5249  0FFA  0084               	movwf	4
  5250  0FFB  0E33               	swapf	??_ISR^0,w
  5251  0FFC  0083               	movwf	3
  5252  0FFD  0EFE               	swapf	126,f
  5253  0FFE  0E7E               	swapf	126,w
  5254  0FFF  0009               	retfie
  5255  1000                     __end_of_ISR:	
  5256                           
  5257                           	psect	intentry
  5258  0004                     __pintentry:	
  5259                           ;incstack = 0
  5260                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5261                           
  5262  0004                     interrupt_function:	
  5263  007E                     saved_w	set	btemp
  5264  0004  00FE               	movwf	btemp
  5265  0005  0E03               	swapf	3,w
  5266  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5267  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5268  0008  00B3               	movwf	??_ISR
  5269  0009  0804               	movf	4,w
  5270  000A  00B4               	movwf	??_ISR+1
  5271  000B  080A               	movf	10,w
  5272  000C  00B5               	movwf	??_ISR+2
  5273  000D  087F               	movf	btemp+1,w
  5274  000E  00B6               	movwf	??_ISR+3
  5275  000F  120A  158A  2E83   	ljmp	_ISR
  5276                           
  5277                           	psect	text23
  5278  083E                     __ptext23:	
  5279 ;; *************** function i1_TIMER0_Set *****************
  5280 ;; Defined at:
  5281 ;;		line 20 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\timers.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  contagens       1    wreg     unsigned char 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  contagens       1    0[COMMON] unsigned char 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;		None               void
  5288 ;; Registers used:
  5289 ;;		wreg
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5295 ;;      Params:         0       0       0       0       0
  5296 ;;      Locals:         1       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0
  5298 ;;      Totals:         1       0       0       0       0
  5299 ;;Total ram usage:        1 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; This function calls:
  5302 ;;		Nothing
  5303 ;; This function is called by:
  5304 ;;		_ISR
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           
  5309                           ;psect for function i1_TIMER0_Set
  5310  083E                     i1_TIMER0_Set:	
  5311                           
  5312                           ;incstack = 0
  5313                           ; Regs used in i1_TIMER0_Set: [wreg]
  5314                           ;i1TIMER0_Set@contagens stored from wreg
  5315  083E  00F0               	movwf	i1TIMER0_Set@contagens
  5316                           
  5317                           ;timers.c: 22: TMR0 = contagens;
  5318  083F  0870               	movf	i1TIMER0_Set@contagens,w
  5319  0840  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0841  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0842  0081               	movwf	1	;volatile
  5322  0843  0008               	return
  5323  0844                     __end_ofi1_TIMER0_Set:	
  5324                           
  5325                           	psect	text24
  5326  08ED                     __ptext24:	
  5327 ;; *************** function _USART_ReceiveChar *****************
  5328 ;; Defined at:
  5329 ;;		line 63 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;		None
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  byte            1    4[COMMON] unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      unsigned char 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5343 ;;      Params:         0       0       0       0       0
  5344 ;;      Locals:         1       0       0       0       0
  5345 ;;      Temps:          1       0       0       0       0
  5346 ;;      Totals:         2       0       0       0       0
  5347 ;;Total ram usage:        2 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    2
  5350 ;; This function calls:
  5351 ;;		i1_USART_WriteString
  5352 ;; This function is called by:
  5353 ;;		_ISR
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function _USART_ReceiveChar
  5359  08ED                     _USART_ReceiveChar:	
  5360                           
  5361                           ;usart.c: 65: unsigned char byte;
  5362                           ;usart.c: 67: if (!OERR)
  5363                           
  5364                           ;incstack = 0
  5365                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5366  08ED  1283               	bcf	3,5	;RP0=0, select bank0
  5367  08EE  1303               	bcf	3,6	;RP1=0, select bank0
  5368  08EF  1898               	btfsc	24,1	;volatile
  5369  08F0  28F6               	goto	i1l2453
  5370                           
  5371                           ;usart.c: 68: {
  5372                           ;usart.c: 69: byte = RCREG;
  5373  08F1  081A               	movf	26,w	;volatile
  5374  08F2  00F3               	movwf	??_USART_ReceiveChar
  5375  08F3  0873               	movf	??_USART_ReceiveChar,w
  5376  08F4  00F4               	movwf	USART_ReceiveChar@byte
  5377  08F5  2905               	goto	i1l2461
  5378  08F6                     i1l2453:	
  5379                           ;usart.c: 71: }
  5380                           
  5381                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5382                           
  5383                           
  5384                           ;usart.c: 72: else
  5385                           ;usart.c: 73: {
  5386                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5387  08F6  301C               	movlw	low (STR_19| (0+32768))
  5388  08F7  00F1               	movwf	i1USART_WriteString@str
  5389  08F8  3090               	movlw	high (STR_19| (0+32768))
  5390  08F9  00F2               	movwf	i1USART_WriteString@str+1
  5391  08FA  120A  158A  2161   	fcall	i1_USART_WriteString
  5392                           
  5393                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5394  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  5395  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  5396  08FF  1218               	bcf	24,4	;volatile
  5397                           
  5398                           ;usart.c: 77: byte = RCREG;
  5399  0900  081A               	movf	26,w	;volatile
  5400  0901  00F3               	movwf	??_USART_ReceiveChar
  5401  0902  0873               	movf	??_USART_ReceiveChar,w
  5402  0903  00F4               	movwf	USART_ReceiveChar@byte
  5403                           
  5404                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5405  0904  1618               	bsf	24,4	;volatile
  5406  0905                     i1l2461:	
  5407                           
  5408                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5409  0905  128C               	bcf	12,5	;volatile
  5410                           
  5411                           ;usart.c: 80: }
  5412                           ;usart.c: 82: return(byte);
  5413  0906  0874               	movf	USART_ReceiveChar@byte,w
  5414  0907  0008               	return
  5415  0908                     __end_of_USART_ReceiveChar:	
  5416                           
  5417                           	psect	text25
  5418  0961                     __ptext25:	
  5419 ;; *************** function i1_USART_WriteString *****************
  5420 ;; Defined at:
  5421 ;;		line 52 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  str             2    1[COMMON] PTR const unsigned char 
  5424 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5425 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  5426 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  5427 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;		None               void
  5432 ;; Registers used:
  5433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5439 ;;      Params:         2       0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0
  5442 ;;      Totals:         2       0       0       0       0
  5443 ;;Total ram usage:        2 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    1
  5446 ;; This function calls:
  5447 ;;		i1_USART_WriteChar
  5448 ;; This function is called by:
  5449 ;;		_ISR
  5450 ;;		_USART_ReceiveChar
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           
  5455                           ;psect for function i1_USART_WriteString
  5456  0961                     i1_USART_WriteString:	
  5457  0961                     i1l2315:	
  5458                           ;usart.c: 54: while(*str != '\0')
  5459                           
  5460                           ;incstack = 0
  5461                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5462                           
  5463  0961  0872               	movf	i1USART_WriteString@str+1,w
  5464  0962  1283               	bcf	3,5	;RP0=0, select bank0
  5465  0963  1303               	bcf	3,6	;RP1=0, select bank0
  5466  0964  00FF               	movwf	127
  5467  0965  0871               	movf	i1USART_WriteString@str,w
  5468  0966  0084               	movwf	4
  5469  0967  160A  118A  2000  120A  158A  	fcall	stringtab
  5470  096C  3800               	iorlw	0
  5471  096D  1903               	btfsc	3,2
  5472  096E  0008               	return
  5473                           
  5474                           ;usart.c: 55: {
  5475                           ;usart.c: 56: USART_WriteChar(*str);
  5476  096F  0872               	movf	i1USART_WriteString@str+1,w
  5477  0970  1283               	bcf	3,5	;RP0=0, select bank0
  5478  0971  1303               	bcf	3,6	;RP1=0, select bank0
  5479  0972  00FF               	movwf	127
  5480  0973  0871               	movf	i1USART_WriteString@str,w
  5481  0974  0084               	movwf	4
  5482  0975  160A  118A  2000  120A  158A  	fcall	stringtab
  5483  097A  120A  158A  204A  120A  158A  	fcall	i1_USART_WriteChar
  5484                           
  5485                           ;usart.c: 57: str++;
  5486  097F  3001               	movlw	1
  5487  0980  07F1               	addwf	i1USART_WriteString@str,f
  5488  0981  1803               	skipnc
  5489  0982  0AF2               	incf	i1USART_WriteString@str+1,f
  5490  0983  2961               	goto	i1l2315
  5491  0984                     __end_ofi1_USART_WriteString:	
  5492                           
  5493                           	psect	text26
  5494  084A                     __ptext26:	
  5495 ;; *************** function i1_USART_WriteChar *****************
  5496 ;; Defined at:
  5497 ;;		line 44 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  byte            1    wreg     unsigned char 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  byte            1    0[COMMON] unsigned char 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;		None               void
  5504 ;; Registers used:
  5505 ;;		wreg
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5511 ;;      Params:         0       0       0       0       0
  5512 ;;      Locals:         1       0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0
  5514 ;;      Totals:         1       0       0       0       0
  5515 ;;Total ram usage:        1 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		i1_USART_WriteString
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           
  5525                           ;psect for function i1_USART_WriteChar
  5526  084A                     i1_USART_WriteChar:	
  5527                           
  5528                           ;incstack = 0
  5529                           ; Regs used in i1_USART_WriteChar: [wreg]
  5530                           ;i1USART_WriteChar@byte stored from wreg
  5531  084A  00F0               	movwf	i1USART_WriteChar@byte
  5532  084B                     i1l240:	
  5533                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5534                           
  5535  084B  1283               	bcf	3,5	;RP0=0, select bank0
  5536  084C  1303               	bcf	3,6	;RP1=0, select bank0
  5537  084D  1E0C               	btfss	12,4	;volatile
  5538  084E  284B               	goto	i1l240
  5539                           
  5540                           ;usart.c: 47: TXREG = byte;
  5541  084F  0870               	movf	i1USART_WriteChar@byte,w
  5542  0850  0099               	movwf	25	;volatile
  5543  0851  0008               	return
  5544  0852                     __end_ofi1_USART_WriteChar:	
  5545                           
  5546                           	psect	text27
  5547  0042                     __ptext27:	
  5548 ;; *************** function _Fuzzy *****************
  5549 ;; Defined at:
  5550 ;;		line 136 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  setpoint        2   12[BANK0 ] unsigned int 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  sum             2   17[BANK0 ] unsigned int 
  5555 ;;  velocidade      1   16[BANK0 ] unsigned char [1]
  5556 ;; Return value:  Size  Location     Type
  5557 ;;		None               void
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0, pclath, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5565 ;;      Params:         0       2       0       0       0
  5566 ;;      Locals:         0       3       0       0       0
  5567 ;;      Temps:          0       2       0       0       0
  5568 ;;      Totals:         0       7       0       0       0
  5569 ;;Total ram usage:        7 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    2
  5572 ;; This function calls:
  5573 ;;		___ftge
  5574 ;;		___lwtoft
  5575 ;;		_max_val
  5576 ;;		_trapmf
  5577 ;;		_trimf
  5578 ;;		i1_PWM_DutyCycle2
  5579 ;;		i1___lwdiv
  5580 ;;		i1___wmul
  5581 ;; This function is called by:
  5582 ;;		_ISR
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function _Fuzzy
  5588  0042                     _Fuzzy:	
  5589                           
  5590                           ;main.c: 147: fitemp =0;
  5591                           
  5592                           ;incstack = 0
  5593                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+pclath+cstack]
  5594  0042  1283               	bcf	3,5	;RP0=0, select bank0
  5595  0043  1303               	bcf	3,6	;RP1=0, select bank0
  5596  0044  01C1               	clrf	_fitemp
  5597  0045  01C2               	clrf	_fitemp+1
  5598                           
  5599                           ;main.c: 150: temp = (setpoint - pwmAnt);
  5600  0046  094B               	comf	_pwmAnt,w
  5601  0047  00AE               	movwf	??_Fuzzy
  5602  0048  094C               	comf	_pwmAnt+1,w
  5603  0049  00AF               	movwf	??_Fuzzy+1
  5604  004A  0AAE               	incf	??_Fuzzy,f
  5605  004B  1903               	skipnz
  5606  004C  0AAF               	incf	??_Fuzzy+1,f
  5607  004D  082C               	movf	Fuzzy@setpoint,w
  5608  004E  072E               	addwf	??_Fuzzy,w
  5609  004F  00CD               	movwf	_temp
  5610  0050  082D               	movf	Fuzzy@setpoint+1,w
  5611  0051  1803               	skipnc
  5612  0052  0A2D               	incf	Fuzzy@setpoint+1,w
  5613  0053  072F               	addwf	??_Fuzzy+1,w
  5614  0054  00CE               	movwf	_temp+1
  5615                           
  5616                           ;main.c: 152: if(PORTBbits.RB2 == 0)
  5617  0055  1906               	btfsc	6,2	;volatile
  5618  0056  2859               	goto	i1l167
  5619                           
  5620                           ;main.c: 153: {
  5621                           ;main.c: 154: PORTBbits.RB2 = 1;
  5622  0057  1506               	bsf	6,2	;volatile
  5623                           
  5624                           ;main.c: 155: }else{
  5625  0058  285A               	goto	i1l2341
  5626  0059                     i1l167:	
  5627                           
  5628                           ;main.c: 156: PORTBbits.RB2 = 0;
  5629  0059  1106               	bcf	6,2	;volatile
  5630  005A                     i1l2341:	
  5631                           
  5632                           ;main.c: 157: }
  5633                           ;main.c: 159: deltaV = (setpoint - pwmAnt);
  5634  005A  094B               	comf	_pwmAnt,w
  5635  005B  00AE               	movwf	??_Fuzzy
  5636  005C  094C               	comf	_pwmAnt+1,w
  5637  005D  00AF               	movwf	??_Fuzzy+1
  5638  005E  0AAE               	incf	??_Fuzzy,f
  5639  005F  1903               	skipnz
  5640  0060  0AAF               	incf	??_Fuzzy+1,f
  5641  0061  082C               	movf	Fuzzy@setpoint,w
  5642  0062  072E               	addwf	??_Fuzzy,w
  5643  0063  1683               	bsf	3,5	;RP0=1, select bank1
  5644  0064  1303               	bcf	3,6	;RP1=0, select bank1
  5645  0065  00A6               	movwf	_deltaV^(0+128)
  5646  0066  1283               	bcf	3,5	;RP0=0, select bank0
  5647  0067  1303               	bcf	3,6	;RP1=0, select bank0
  5648  0068  082D               	movf	Fuzzy@setpoint+1,w
  5649  0069  1803               	skipnc
  5650  006A  0A2D               	incf	Fuzzy@setpoint+1,w
  5651  006B  072F               	addwf	??_Fuzzy+1,w
  5652  006C  1683               	bsf	3,5	;RP0=1, select bank1
  5653  006D  1303               	bcf	3,6	;RP1=0, select bank1
  5654  006E  00A7               	movwf	(_deltaV+1)^(0+128)
  5655                           
  5656                           ;main.c: 162: if (temp >10) temp = 10;
  5657  006F  3000               	movlw	0
  5658  0070  1283               	bcf	3,5	;RP0=0, select bank0
  5659  0071  1303               	bcf	3,6	;RP1=0, select bank0
  5660  0072  024E               	subwf	_temp+1,w
  5661  0073  300B               	movlw	11
  5662  0074  1903               	skipnz
  5663  0075  024D               	subwf	_temp,w
  5664  0076  1C03               	skipc
  5665  0077  287C               	goto	i1l2349
  5666  0078  300A               	movlw	10
  5667  0079  00CD               	movwf	_temp
  5668  007A  3000               	movlw	0
  5669  007B  00CE               	movwf	_temp+1
  5670  007C                     i1l2349:	
  5671                           ;main.c: 163: if (temp <0) temp = 0;
  5672                           
  5673                           
  5674                           ;main.c: 166: if (temp < 2.5)
  5675  007C  084E               	movf	_temp+1,w
  5676  007D  01F9               	clrf	___lwtoft@c+1
  5677  007E  07F9               	addwf	___lwtoft@c+1,f
  5678  007F  084D               	movf	_temp,w
  5679  0080  01F8               	clrf	___lwtoft@c
  5680  0081  07F8               	addwf	___lwtoft@c,f
  5681  0082  120A  118A  27EB  120A  118A  	fcall	___lwtoft
  5682  0087  0878               	movf	?___lwtoft,w
  5683  0088  1283               	bcf	3,5	;RP0=0, select bank0
  5684  0089  1303               	bcf	3,6	;RP1=0, select bank0
  5685  008A  00A0               	movwf	___ftge@ff1
  5686  008B  0879               	movf	?___lwtoft+1,w
  5687  008C  00A1               	movwf	___ftge@ff1+1
  5688  008D  087A               	movf	?___lwtoft+2,w
  5689  008E  00A2               	movwf	___ftge@ff1+2
  5690  008F  3000               	movlw	0
  5691  0090  00A3               	movwf	___ftge@ff2
  5692  0091  3020               	movlw	32
  5693  0092  00A4               	movwf	___ftge@ff2+1
  5694  0093  3040               	movlw	64
  5695  0094  00A5               	movwf	___ftge@ff2+2
  5696  0095  120A  158A  235B  120A  118A  	fcall	___ftge
  5697  009A  1803               	btfsc	3,0
  5698  009B  291D               	goto	i1l2363
  5699                           
  5700                           ;main.c: 167: {
  5701                           ;main.c: 169: fitemp = trapmf(temp,-1,0,1.5,3);
  5702  009C  1283               	bcf	3,5	;RP0=0, select bank0
  5703  009D  1303               	bcf	3,6	;RP1=0, select bank0
  5704  009E  084E               	movf	_temp+1,w
  5705  009F  01A1               	clrf	trapmf@x+1
  5706  00A0  07A1               	addwf	trapmf@x+1,f
  5707  00A1  084D               	movf	_temp,w
  5708  00A2  01A0               	clrf	trapmf@x
  5709  00A3  07A0               	addwf	trapmf@x,f
  5710  00A4  30FF               	movlw	255
  5711  00A5  00A2               	movwf	trapmf@a
  5712  00A6  30FF               	movlw	255
  5713  00A7  00A3               	movwf	trapmf@a+1
  5714  00A8  3000               	movlw	0
  5715  00A9  00A4               	movwf	trapmf@b
  5716  00AA  3000               	movlw	0
  5717  00AB  00A5               	movwf	trapmf@b+1
  5718  00AC  3001               	movlw	1
  5719  00AD  00A6               	movwf	trapmf@c
  5720  00AE  3000               	movlw	0
  5721  00AF  00A7               	movwf	trapmf@c+1
  5722  00B0  3003               	movlw	3
  5723  00B1  00A8               	movwf	trapmf@d
  5724  00B2  3000               	movlw	0
  5725  00B3  00A9               	movwf	trapmf@d+1
  5726  00B4  120A  158A  248F  120A  118A  	fcall	_trapmf
  5727  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  5728  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  5729  00BB  0821               	movf	?_trapmf+1,w
  5730  00BC  01C2               	clrf	_fitemp+1
  5731  00BD  07C2               	addwf	_fitemp+1,f
  5732  00BE  0820               	movf	?_trapmf,w
  5733  00BF  01C1               	clrf	_fitemp
  5734  00C0  07C1               	addwf	_fitemp,f
  5735                           
  5736                           ;main.c: 172: fop_rule1 = max_val(fitemp,0.1);
  5737  00C1  0842               	movf	_fitemp+1,w
  5738  00C2  01F1               	clrf	max_val@a+1
  5739  00C3  07F1               	addwf	max_val@a+1,f
  5740  00C4  0841               	movf	_fitemp,w
  5741  00C5  01F0               	clrf	max_val@a
  5742  00C6  07F0               	addwf	max_val@a,f
  5743  00C7  3000               	movlw	0
  5744  00C8  00F2               	movwf	max_val@b
  5745  00C9  3000               	movlw	0
  5746  00CA  00F3               	movwf	max_val@b+1
  5747  00CB  120A  158A  206D  120A  118A  	fcall	_max_val
  5748  00D0  0871               	movf	?_max_val+1,w
  5749  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  5750  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  5751  00D3  01C4               	clrf	_fop_rule1+1
  5752  00D4  07C4               	addwf	_fop_rule1+1,f
  5753  00D5  0870               	movf	?_max_val,w
  5754  00D6  01C3               	clrf	_fop_rule1
  5755  00D7  07C3               	addwf	_fop_rule1,f
  5756                           
  5757                           ;main.c: 175: x=0;
  5758  00D8  01D3               	clrf	_x
  5759  00D9  01D4               	clrf	_x+1
  5760                           
  5761                           ;main.c: 176: y=0;
  5762  00DA  01D5               	clrf	_y
  5763  00DB  01D6               	clrf	_y+1
  5764                           
  5765                           ;main.c: 178: y = trapmf(x,-1,0,1.5,3);
  5766  00DC  0854               	movf	_x+1,w
  5767  00DD  01A1               	clrf	trapmf@x+1
  5768  00DE  07A1               	addwf	trapmf@x+1,f
  5769  00DF  0853               	movf	_x,w
  5770  00E0  01A0               	clrf	trapmf@x
  5771  00E1  07A0               	addwf	trapmf@x,f
  5772  00E2  30FF               	movlw	255
  5773  00E3  00A2               	movwf	trapmf@a
  5774  00E4  30FF               	movlw	255
  5775  00E5  00A3               	movwf	trapmf@a+1
  5776  00E6  3000               	movlw	0
  5777  00E7  00A4               	movwf	trapmf@b
  5778  00E8  3000               	movlw	0
  5779  00E9  00A5               	movwf	trapmf@b+1
  5780  00EA  3001               	movlw	1
  5781  00EB  00A6               	movwf	trapmf@c
  5782  00EC  3000               	movlw	0
  5783  00ED  00A7               	movwf	trapmf@c+1
  5784  00EE  3003               	movlw	3
  5785  00EF  00A8               	movwf	trapmf@d
  5786  00F0  3000               	movlw	0
  5787  00F1  00A9               	movwf	trapmf@d+1
  5788  00F2  120A  158A  248F  120A  118A  	fcall	_trapmf
  5789  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  5790  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  5791  00F9  0821               	movf	?_trapmf+1,w
  5792  00FA  01D6               	clrf	_y+1
  5793  00FB  07D6               	addwf	_y+1,f
  5794  00FC  0820               	movf	?_trapmf,w
  5795  00FD  01D5               	clrf	_y
  5796  00FE  07D5               	addwf	_y,f
  5797                           
  5798                           ;main.c: 180: if (y > fop_rule1)
  5799  00FF  0856               	movf	_y+1,w
  5800  0100  0244               	subwf	_fop_rule1+1,w
  5801  0101  1D03               	skipz
  5802  0102  2905               	goto	u230_25
  5803  0103  0855               	movf	_y,w
  5804  0104  0243               	subwf	_fop_rule1,w
  5805  0105                     u230_25:	
  5806  0105  1803               	skipnc
  5807  0106  2910               	goto	i1l2361
  5808                           
  5809                           ;main.c: 181: {
  5810                           ;main.c: 182: ideal = fop_rule1;
  5811  0107  0844               	movf	_fop_rule1+1,w
  5812  0108  1683               	bsf	3,5	;RP0=1, select bank1
  5813  0109  1303               	bcf	3,6	;RP1=0, select bank1
  5814  010A  01AF               	clrf	(_ideal+1)^(0+128)
  5815  010B  07AF               	addwf	(_ideal+1)^(0+128),f
  5816  010C  1283               	bcf	3,5	;RP0=0, select bank0
  5817  010D  1303               	bcf	3,6	;RP1=0, select bank0
  5818  010E  0843               	movf	_fop_rule1,w
  5819  010F  2919               	goto	L3
  5820  0110                     i1l2361:	
  5821                           ;main.c: 183: }
  5822                           
  5823                           
  5824                           ;main.c: 184: else
  5825                           ;main.c: 185: {
  5826                           ;main.c: 186: ideal = y;
  5827  0110  1283               	bcf	3,5	;RP0=0, select bank0
  5828  0111  0856               	movf	_y+1,w
  5829  0112  1683               	bsf	3,5	;RP0=1, select bank1
  5830  0113  1303               	bcf	3,6	;RP1=0, select bank1
  5831  0114  01AF               	clrf	(_ideal+1)^(0+128)
  5832  0115  07AF               	addwf	(_ideal+1)^(0+128),f
  5833  0116  1283               	bcf	3,5	;RP0=0, select bank0
  5834  0117  1303               	bcf	3,6	;RP1=0, select bank0
  5835  0118  0855               	movf	_y,w
  5836  0119                     L3:	
  5837  0119  1683               	bsf	3,5	;RP0=1, select bank1
  5838  011A  1303               	bcf	3,6	;RP1=0, select bank1
  5839  011B  01AE               	clrf	_ideal^(0+128)
  5840  011C  07AE               	addwf	_ideal^(0+128),f
  5841  011D                     i1l2363:	
  5842                           
  5843                           ;main.c: 187: }
  5844                           ;main.c: 189: }
  5845                           ;main.c: 193: if ((temp > 2) && (temp < 7))
  5846  011D  3000               	movlw	0
  5847  011E  1283               	bcf	3,5	;RP0=0, select bank0
  5848  011F  1303               	bcf	3,6	;RP1=0, select bank0
  5849  0120  024E               	subwf	_temp+1,w
  5850  0121  3003               	movlw	3
  5851  0122  1903               	skipnz
  5852  0123  024D               	subwf	_temp,w
  5853  0124  1C03               	skipc
  5854  0125  29A4               	goto	i1l2379
  5855  0126  3000               	movlw	0
  5856  0127  024E               	subwf	_temp+1,w
  5857  0128  3007               	movlw	7
  5858  0129  1903               	skipnz
  5859  012A  024D               	subwf	_temp,w
  5860  012B  1803               	skipnc
  5861  012C  29A4               	goto	i1l2379
  5862                           
  5863                           ;main.c: 194: {
  5864                           ;main.c: 196: fitemp = trimf(temp,2,5,8);
  5865  012D  084E               	movf	_temp+1,w
  5866  012E  01A1               	clrf	trimf@x+1
  5867  012F  07A1               	addwf	trimf@x+1,f
  5868  0130  084D               	movf	_temp,w
  5869  0131  01A0               	clrf	trimf@x
  5870  0132  07A0               	addwf	trimf@x,f
  5871  0133  3002               	movlw	2
  5872  0134  00A2               	movwf	trimf@a
  5873  0135  3000               	movlw	0
  5874  0136  00A3               	movwf	trimf@a+1
  5875  0137  3005               	movlw	5
  5876  0138  00A4               	movwf	trimf@b
  5877  0139  3000               	movlw	0
  5878  013A  00A5               	movwf	trimf@b+1
  5879  013B  3008               	movlw	8
  5880  013C  00A6               	movwf	trimf@c
  5881  013D  3000               	movlw	0
  5882  013E  00A7               	movwf	trimf@c+1
  5883  013F  120A  118A  276B  120A  118A  	fcall	_trimf
  5884  0144  1283               	bcf	3,5	;RP0=0, select bank0
  5885  0145  1303               	bcf	3,6	;RP1=0, select bank0
  5886  0146  0821               	movf	?_trimf+1,w
  5887  0147  01C2               	clrf	_fitemp+1
  5888  0148  07C2               	addwf	_fitemp+1,f
  5889  0149  0820               	movf	?_trimf,w
  5890  014A  01C1               	clrf	_fitemp
  5891  014B  07C1               	addwf	_fitemp,f
  5892                           
  5893                           ;main.c: 199: fop_rule2 = max_val(fitemp,0.1);
  5894  014C  0842               	movf	_fitemp+1,w
  5895  014D  01F1               	clrf	max_val@a+1
  5896  014E  07F1               	addwf	max_val@a+1,f
  5897  014F  0841               	movf	_fitemp,w
  5898  0150  01F0               	clrf	max_val@a
  5899  0151  07F0               	addwf	max_val@a,f
  5900  0152  3000               	movlw	0
  5901  0153  00F2               	movwf	max_val@b
  5902  0154  3000               	movlw	0
  5903  0155  00F3               	movwf	max_val@b+1
  5904  0156  120A  158A  206D  120A  118A  	fcall	_max_val
  5905  015B  0871               	movf	?_max_val+1,w
  5906  015C  1283               	bcf	3,5	;RP0=0, select bank0
  5907  015D  1303               	bcf	3,6	;RP1=0, select bank0
  5908  015E  01C6               	clrf	_fop_rule2+1
  5909  015F  07C6               	addwf	_fop_rule2+1,f
  5910  0160  0870               	movf	?_max_val,w
  5911  0161  01C5               	clrf	_fop_rule2
  5912  0162  07C5               	addwf	_fop_rule2,f
  5913                           
  5914                           ;main.c: 202: x=0;
  5915  0163  01D3               	clrf	_x
  5916  0164  01D4               	clrf	_x+1
  5917                           
  5918                           ;main.c: 203: y=0;
  5919  0165  01D5               	clrf	_y
  5920  0166  01D6               	clrf	_y+1
  5921                           
  5922                           ;main.c: 205: y = trimf(x,2,5,8);
  5923  0167  0854               	movf	_x+1,w
  5924  0168  01A1               	clrf	trimf@x+1
  5925  0169  07A1               	addwf	trimf@x+1,f
  5926  016A  0853               	movf	_x,w
  5927  016B  01A0               	clrf	trimf@x
  5928  016C  07A0               	addwf	trimf@x,f
  5929  016D  3002               	movlw	2
  5930  016E  00A2               	movwf	trimf@a
  5931  016F  3000               	movlw	0
  5932  0170  00A3               	movwf	trimf@a+1
  5933  0171  3005               	movlw	5
  5934  0172  00A4               	movwf	trimf@b
  5935  0173  3000               	movlw	0
  5936  0174  00A5               	movwf	trimf@b+1
  5937  0175  3008               	movlw	8
  5938  0176  00A6               	movwf	trimf@c
  5939  0177  3000               	movlw	0
  5940  0178  00A7               	movwf	trimf@c+1
  5941  0179  120A  118A  276B  120A  118A  	fcall	_trimf
  5942  017E  1283               	bcf	3,5	;RP0=0, select bank0
  5943  017F  1303               	bcf	3,6	;RP1=0, select bank0
  5944  0180  0821               	movf	?_trimf+1,w
  5945  0181  01D6               	clrf	_y+1
  5946  0182  07D6               	addwf	_y+1,f
  5947  0183  0820               	movf	?_trimf,w
  5948  0184  01D5               	clrf	_y
  5949  0185  07D5               	addwf	_y,f
  5950                           
  5951                           ;main.c: 207: if (y >= fop_rule2)
  5952  0186  0846               	movf	_fop_rule2+1,w
  5953  0187  0256               	subwf	_y+1,w
  5954  0188  1D03               	skipz
  5955  0189  298C               	goto	u233_25
  5956  018A  0845               	movf	_fop_rule2,w
  5957  018B  0255               	subwf	_y,w
  5958  018C                     u233_25:	
  5959  018C  1C03               	skipc
  5960  018D  2997               	goto	i1l2377
  5961                           
  5962                           ;main.c: 208: {
  5963                           ;main.c: 209: tip_average = fop_rule2;
  5964  018E  0846               	movf	_fop_rule2+1,w
  5965  018F  1683               	bsf	3,5	;RP0=1, select bank1
  5966  0190  1303               	bcf	3,6	;RP1=0, select bank1
  5967  0191  01C3               	clrf	(_tip_average+1)^(0+128)
  5968  0192  07C3               	addwf	(_tip_average+1)^(0+128),f
  5969  0193  1283               	bcf	3,5	;RP0=0, select bank0
  5970  0194  1303               	bcf	3,6	;RP1=0, select bank0
  5971  0195  0845               	movf	_fop_rule2,w
  5972  0196  29A0               	goto	L4
  5973  0197                     i1l2377:	
  5974                           ;main.c: 210: }
  5975                           
  5976                           
  5977                           ;main.c: 211: else
  5978                           ;main.c: 212: {
  5979                           ;main.c: 213: tip_average = y;
  5980  0197  1283               	bcf	3,5	;RP0=0, select bank0
  5981  0198  0856               	movf	_y+1,w
  5982  0199  1683               	bsf	3,5	;RP0=1, select bank1
  5983  019A  1303               	bcf	3,6	;RP1=0, select bank1
  5984  019B  01C3               	clrf	(_tip_average+1)^(0+128)
  5985  019C  07C3               	addwf	(_tip_average+1)^(0+128),f
  5986  019D  1283               	bcf	3,5	;RP0=0, select bank0
  5987  019E  1303               	bcf	3,6	;RP1=0, select bank0
  5988  019F  0855               	movf	_y,w
  5989  01A0                     L4:	
  5990  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  5991  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  5992  01A2  01C2               	clrf	_tip_average^(0+128)
  5993  01A3  07C2               	addwf	_tip_average^(0+128),f
  5994  01A4                     i1l2379:	
  5995                           
  5996                           ;main.c: 214: }
  5997                           ;main.c: 217: }
  5998                           ;main.c: 221: if (temp > 7 )
  5999  01A4  3000               	movlw	0
  6000  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  6001  01A6  024E               	subwf	_temp+1,w
  6002  01A7  3008               	movlw	8
  6003  01A8  1903               	skipnz
  6004  01A9  024D               	subwf	_temp,w
  6005  01AA  1C03               	skipc
  6006  01AB  2A2B               	goto	i1l2393
  6007                           
  6008                           ;main.c: 222: {
  6009                           ;main.c: 224: fitemp = trapmf(temp,6,8.5,10,11);
  6010  01AC  084E               	movf	_temp+1,w
  6011  01AD  01A1               	clrf	trapmf@x+1
  6012  01AE  07A1               	addwf	trapmf@x+1,f
  6013  01AF  084D               	movf	_temp,w
  6014  01B0  01A0               	clrf	trapmf@x
  6015  01B1  07A0               	addwf	trapmf@x,f
  6016  01B2  3006               	movlw	6
  6017  01B3  00A2               	movwf	trapmf@a
  6018  01B4  3000               	movlw	0
  6019  01B5  00A3               	movwf	trapmf@a+1
  6020  01B6  3008               	movlw	8
  6021  01B7  00A4               	movwf	trapmf@b
  6022  01B8  3000               	movlw	0
  6023  01B9  00A5               	movwf	trapmf@b+1
  6024  01BA  300A               	movlw	10
  6025  01BB  00A6               	movwf	trapmf@c
  6026  01BC  3000               	movlw	0
  6027  01BD  00A7               	movwf	trapmf@c+1
  6028  01BE  300B               	movlw	11
  6029  01BF  00A8               	movwf	trapmf@d
  6030  01C0  3000               	movlw	0
  6031  01C1  00A9               	movwf	trapmf@d+1
  6032  01C2  120A  158A  248F  120A  118A  	fcall	_trapmf
  6033  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  6034  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  6035  01C9  0821               	movf	?_trapmf+1,w
  6036  01CA  01C2               	clrf	_fitemp+1
  6037  01CB  07C2               	addwf	_fitemp+1,f
  6038  01CC  0820               	movf	?_trapmf,w
  6039  01CD  01C1               	clrf	_fitemp
  6040  01CE  07C1               	addwf	_fitemp,f
  6041                           
  6042                           ;main.c: 228: fop_rule3 = max_val(fitemp,0.1);
  6043  01CF  0842               	movf	_fitemp+1,w
  6044  01D0  01F1               	clrf	max_val@a+1
  6045  01D1  07F1               	addwf	max_val@a+1,f
  6046  01D2  0841               	movf	_fitemp,w
  6047  01D3  01F0               	clrf	max_val@a
  6048  01D4  07F0               	addwf	max_val@a,f
  6049  01D5  3000               	movlw	0
  6050  01D6  00F2               	movwf	max_val@b
  6051  01D7  3000               	movlw	0
  6052  01D8  00F3               	movwf	max_val@b+1
  6053  01D9  120A  158A  206D  120A  118A  	fcall	_max_val
  6054  01DE  0871               	movf	?_max_val+1,w
  6055  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  6056  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  6057  01E1  01C8               	clrf	_fop_rule3+1
  6058  01E2  07C8               	addwf	_fop_rule3+1,f
  6059  01E3  0870               	movf	?_max_val,w
  6060  01E4  01C7               	clrf	_fop_rule3
  6061  01E5  07C7               	addwf	_fop_rule3,f
  6062                           
  6063                           ;main.c: 231: x=0;
  6064  01E6  01D3               	clrf	_x
  6065  01E7  01D4               	clrf	_x+1
  6066                           
  6067                           ;main.c: 232: y=0;
  6068  01E8  01D5               	clrf	_y
  6069  01E9  01D6               	clrf	_y+1
  6070                           
  6071                           ;main.c: 234: y = trapmf(x,7,8.5,10,11);
  6072  01EA  0854               	movf	_x+1,w
  6073  01EB  01A1               	clrf	trapmf@x+1
  6074  01EC  07A1               	addwf	trapmf@x+1,f
  6075  01ED  0853               	movf	_x,w
  6076  01EE  01A0               	clrf	trapmf@x
  6077  01EF  07A0               	addwf	trapmf@x,f
  6078  01F0  3007               	movlw	7
  6079  01F1  00A2               	movwf	trapmf@a
  6080  01F2  3000               	movlw	0
  6081  01F3  00A3               	movwf	trapmf@a+1
  6082  01F4  3008               	movlw	8
  6083  01F5  00A4               	movwf	trapmf@b
  6084  01F6  3000               	movlw	0
  6085  01F7  00A5               	movwf	trapmf@b+1
  6086  01F8  300A               	movlw	10
  6087  01F9  00A6               	movwf	trapmf@c
  6088  01FA  3000               	movlw	0
  6089  01FB  00A7               	movwf	trapmf@c+1
  6090  01FC  300B               	movlw	11
  6091  01FD  00A8               	movwf	trapmf@d
  6092  01FE  3000               	movlw	0
  6093  01FF  00A9               	movwf	trapmf@d+1
  6094  0200  120A  158A  248F  120A  118A  	fcall	_trapmf
  6095  0205  1283               	bcf	3,5	;RP0=0, select bank0
  6096  0206  1303               	bcf	3,6	;RP1=0, select bank0
  6097  0207  0821               	movf	?_trapmf+1,w
  6098  0208  01D6               	clrf	_y+1
  6099  0209  07D6               	addwf	_y+1,f
  6100  020A  0820               	movf	?_trapmf,w
  6101  020B  01D5               	clrf	_y
  6102  020C  07D5               	addwf	_y,f
  6103                           
  6104                           ;main.c: 236: if (y >= fop_rule3)
  6105  020D  0848               	movf	_fop_rule3+1,w
  6106  020E  0256               	subwf	_y+1,w
  6107  020F  1D03               	skipz
  6108  0210  2A13               	goto	u235_25
  6109  0211  0847               	movf	_fop_rule3,w
  6110  0212  0255               	subwf	_y,w
  6111  0213                     u235_25:	
  6112  0213  1C03               	skipc
  6113  0214  2A1E               	goto	i1l2391
  6114                           
  6115                           ;main.c: 237: {
  6116                           ;main.c: 238: tip_gorgeous = fop_rule3;
  6117  0215  0848               	movf	_fop_rule3+1,w
  6118  0216  1683               	bsf	3,5	;RP0=1, select bank1
  6119  0217  1303               	bcf	3,6	;RP1=0, select bank1
  6120  0218  01C5               	clrf	(_tip_gorgeous+1)^(0+128)
  6121  0219  07C5               	addwf	(_tip_gorgeous+1)^(0+128),f
  6122  021A  1283               	bcf	3,5	;RP0=0, select bank0
  6123  021B  1303               	bcf	3,6	;RP1=0, select bank0
  6124  021C  0847               	movf	_fop_rule3,w
  6125  021D  2A27               	goto	L5
  6126  021E                     i1l2391:	
  6127                           ;main.c: 239: }
  6128                           
  6129                           
  6130                           ;main.c: 240: else
  6131                           ;main.c: 241: {
  6132                           ;main.c: 242: tip_gorgeous = y;
  6133  021E  1283               	bcf	3,5	;RP0=0, select bank0
  6134  021F  0856               	movf	_y+1,w
  6135  0220  1683               	bsf	3,5	;RP0=1, select bank1
  6136  0221  1303               	bcf	3,6	;RP1=0, select bank1
  6137  0222  01C5               	clrf	(_tip_gorgeous+1)^(0+128)
  6138  0223  07C5               	addwf	(_tip_gorgeous+1)^(0+128),f
  6139  0224  1283               	bcf	3,5	;RP0=0, select bank0
  6140  0225  1303               	bcf	3,6	;RP1=0, select bank0
  6141  0226  0855               	movf	_y,w
  6142  0227                     L5:	
  6143  0227  1683               	bsf	3,5	;RP0=1, select bank1
  6144  0228  1303               	bcf	3,6	;RP1=0, select bank1
  6145  0229  01C4               	clrf	_tip_gorgeous^(0+128)
  6146  022A  07C4               	addwf	_tip_gorgeous^(0+128),f
  6147  022B                     i1l2393:	
  6148                           
  6149                           ;main.c: 243: }
  6150                           ;main.c: 245: }
  6151                           ;main.c: 249: if (temp < 2.5)
  6152  022B  1283               	bcf	3,5	;RP0=0, select bank0
  6153  022C  084E               	movf	_temp+1,w
  6154  022D  01F9               	clrf	___lwtoft@c+1
  6155  022E  07F9               	addwf	___lwtoft@c+1,f
  6156  022F  084D               	movf	_temp,w
  6157  0230  01F8               	clrf	___lwtoft@c
  6158  0231  07F8               	addwf	___lwtoft@c,f
  6159  0232  120A  118A  27EB  120A  118A  	fcall	___lwtoft
  6160  0237  0878               	movf	?___lwtoft,w
  6161  0238  1283               	bcf	3,5	;RP0=0, select bank0
  6162  0239  1303               	bcf	3,6	;RP1=0, select bank0
  6163  023A  00A0               	movwf	___ftge@ff1
  6164  023B  0879               	movf	?___lwtoft+1,w
  6165  023C  00A1               	movwf	___ftge@ff1+1
  6166  023D  087A               	movf	?___lwtoft+2,w
  6167  023E  00A2               	movwf	___ftge@ff1+2
  6168  023F  3000               	movlw	0
  6169  0240  00A3               	movwf	___ftge@ff2
  6170  0241  3020               	movlw	32
  6171  0242  00A4               	movwf	___ftge@ff2+1
  6172  0243  3040               	movlw	64
  6173  0244  00A5               	movwf	___ftge@ff2+2
  6174  0245  120A  158A  235B  120A  118A  	fcall	___ftge
  6175  024A  1803               	btfsc	3,0
  6176  024B  2A5A               	goto	i1l2397
  6177                           
  6178                           ;main.c: 250: {
  6179                           ;main.c: 251: tip = ideal ;
  6180  024C  1683               	bsf	3,5	;RP0=1, select bank1
  6181  024D  1303               	bcf	3,6	;RP1=0, select bank1
  6182  024E  082F               	movf	(_ideal+1)^(0+128),w
  6183  024F  1283               	bcf	3,5	;RP0=0, select bank0
  6184  0250  1303               	bcf	3,6	;RP1=0, select bank0
  6185  0251  01D0               	clrf	_tip+1
  6186  0252  07D0               	addwf	_tip+1,f
  6187  0253  1683               	bsf	3,5	;RP0=1, select bank1
  6188  0254  1303               	bcf	3,6	;RP1=0, select bank1
  6189  0255  082E               	movf	_ideal^(0+128),w
  6190  0256  1283               	bcf	3,5	;RP0=0, select bank0
  6191  0257  1303               	bcf	3,6	;RP1=0, select bank0
  6192  0258  01CF               	clrf	_tip
  6193  0259  07CF               	addwf	_tip,f
  6194  025A                     i1l2397:	
  6195                           
  6196                           ;main.c: 252: }
  6197                           ;main.c: 254: if (temp >= 2.5 && temp < 7.5)
  6198  025A  1283               	bcf	3,5	;RP0=0, select bank0
  6199  025B  1303               	bcf	3,6	;RP1=0, select bank0
  6200  025C  084E               	movf	_temp+1,w
  6201  025D  01F9               	clrf	___lwtoft@c+1
  6202  025E  07F9               	addwf	___lwtoft@c+1,f
  6203  025F  084D               	movf	_temp,w
  6204  0260  01F8               	clrf	___lwtoft@c
  6205  0261  07F8               	addwf	___lwtoft@c,f
  6206  0262  120A  118A  27EB  120A  118A  	fcall	___lwtoft
  6207  0267  0878               	movf	?___lwtoft,w
  6208  0268  1283               	bcf	3,5	;RP0=0, select bank0
  6209  0269  1303               	bcf	3,6	;RP1=0, select bank0
  6210  026A  00A0               	movwf	___ftge@ff1
  6211  026B  0879               	movf	?___lwtoft+1,w
  6212  026C  00A1               	movwf	___ftge@ff1+1
  6213  026D  087A               	movf	?___lwtoft+2,w
  6214  026E  00A2               	movwf	___ftge@ff1+2
  6215  026F  3000               	movlw	0
  6216  0270  00A3               	movwf	___ftge@ff2
  6217  0271  3020               	movlw	32
  6218  0272  00A4               	movwf	___ftge@ff2+1
  6219  0273  3040               	movlw	64
  6220  0274  00A5               	movwf	___ftge@ff2+2
  6221  0275  120A  158A  235B  120A  118A  	fcall	___ftge
  6222  027A  1C03               	btfss	3,0
  6223  027B  2AAC               	goto	i1l2403
  6224  027C  1283               	bcf	3,5	;RP0=0, select bank0
  6225  027D  1303               	bcf	3,6	;RP1=0, select bank0
  6226  027E  084E               	movf	_temp+1,w
  6227  027F  01F9               	clrf	___lwtoft@c+1
  6228  0280  07F9               	addwf	___lwtoft@c+1,f
  6229  0281  084D               	movf	_temp,w
  6230  0282  01F8               	clrf	___lwtoft@c
  6231  0283  07F8               	addwf	___lwtoft@c,f
  6232  0284  120A  118A  27EB  120A  118A  	fcall	___lwtoft
  6233  0289  0878               	movf	?___lwtoft,w
  6234  028A  1283               	bcf	3,5	;RP0=0, select bank0
  6235  028B  1303               	bcf	3,6	;RP1=0, select bank0
  6236  028C  00A0               	movwf	___ftge@ff1
  6237  028D  0879               	movf	?___lwtoft+1,w
  6238  028E  00A1               	movwf	___ftge@ff1+1
  6239  028F  087A               	movf	?___lwtoft+2,w
  6240  0290  00A2               	movwf	___ftge@ff1+2
  6241  0291  3000               	movlw	0
  6242  0292  00A3               	movwf	___ftge@ff2
  6243  0293  30F0               	movlw	240
  6244  0294  00A4               	movwf	___ftge@ff2+1
  6245  0295  3040               	movlw	64
  6246  0296  00A5               	movwf	___ftge@ff2+2
  6247  0297  120A  158A  235B  120A  118A  	fcall	___ftge
  6248  029C  1803               	btfsc	3,0
  6249  029D  2AAC               	goto	i1l2403
  6250                           
  6251                           ;main.c: 255: {
  6252                           ;main.c: 256: tip = tip_average ;
  6253  029E  1683               	bsf	3,5	;RP0=1, select bank1
  6254  029F  1303               	bcf	3,6	;RP1=0, select bank1
  6255  02A0  0843               	movf	(_tip_average+1)^(0+128),w
  6256  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  6257  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  6258  02A3  01D0               	clrf	_tip+1
  6259  02A4  07D0               	addwf	_tip+1,f
  6260  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  6261  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  6262  02A7  0842               	movf	_tip_average^(0+128),w
  6263  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  6264  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  6265  02AA  01CF               	clrf	_tip
  6266  02AB  07CF               	addwf	_tip,f
  6267  02AC                     i1l2403:	
  6268                           
  6269                           ;main.c: 257: }
  6270                           ;main.c: 259: if (temp >= 7.5 && temp <= 10)
  6271  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  6272  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  6273  02AE  084E               	movf	_temp+1,w
  6274  02AF  01F9               	clrf	___lwtoft@c+1
  6275  02B0  07F9               	addwf	___lwtoft@c+1,f
  6276  02B1  084D               	movf	_temp,w
  6277  02B2  01F8               	clrf	___lwtoft@c
  6278  02B3  07F8               	addwf	___lwtoft@c,f
  6279  02B4  120A  118A  27EB  120A  118A  	fcall	___lwtoft
  6280  02B9  0878               	movf	?___lwtoft,w
  6281  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  6282  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  6283  02BC  00A0               	movwf	___ftge@ff1
  6284  02BD  0879               	movf	?___lwtoft+1,w
  6285  02BE  00A1               	movwf	___ftge@ff1+1
  6286  02BF  087A               	movf	?___lwtoft+2,w
  6287  02C0  00A2               	movwf	___ftge@ff1+2
  6288  02C1  3000               	movlw	0
  6289  02C2  00A3               	movwf	___ftge@ff2
  6290  02C3  30F0               	movlw	240
  6291  02C4  00A4               	movwf	___ftge@ff2+1
  6292  02C5  3040               	movlw	64
  6293  02C6  00A5               	movwf	___ftge@ff2+2
  6294  02C7  120A  158A  235B  120A  118A  	fcall	___ftge
  6295  02CC  1C03               	btfss	3,0
  6296  02CD  2AE5               	goto	i1l2409
  6297  02CE  3000               	movlw	0
  6298  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  6299  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  6300  02D1  024E               	subwf	_temp+1,w
  6301  02D2  300B               	movlw	11
  6302  02D3  1903               	skipnz
  6303  02D4  024D               	subwf	_temp,w
  6304  02D5  1803               	skipnc
  6305  02D6  2AE5               	goto	i1l2409
  6306                           
  6307                           ;main.c: 260: {
  6308                           ;main.c: 261: tip = tip_gorgeous;
  6309  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  6310  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  6311  02D9  0845               	movf	(_tip_gorgeous+1)^(0+128),w
  6312  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  6313  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  6314  02DC  01D0               	clrf	_tip+1
  6315  02DD  07D0               	addwf	_tip+1,f
  6316  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  6317  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  6318  02E0  0844               	movf	_tip_gorgeous^(0+128),w
  6319  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  6320  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  6321  02E3  01CF               	clrf	_tip
  6322  02E4  07CF               	addwf	_tip,f
  6323  02E5                     i1l2409:	
  6324                           
  6325                           ;main.c: 262: }
  6326                           ;main.c: 267: total_area = 1;
  6327  02E5  3001               	movlw	1
  6328  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  6329  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  6330  02E8  00D1               	movwf	_total_area
  6331  02E9  3000               	movlw	0
  6332  02EA  00D2               	movwf	_total_area+1
  6333                           
  6334                           ;main.c: 268: unsigned int sum = 0;
  6335  02EB  01B1               	clrf	Fuzzy@sum
  6336  02EC  01B2               	clrf	Fuzzy@sum+1
  6337                           
  6338                           ;main.c: 270: total_area = total_area + tip ;
  6339  02ED  084F               	movf	_tip,w
  6340  02EE  0751               	addwf	_total_area,w
  6341  02EF  00D1               	movwf	_total_area
  6342  02F0  0850               	movf	_tip+1,w
  6343  02F1  1803               	skipnc
  6344  02F2  0A50               	incf	_tip+1,w
  6345  02F3  0752               	addwf	_total_area+1,w
  6346  02F4  00D2               	movwf	_total_area+1
  6347                           
  6348                           ;main.c: 271: sum = tip;
  6349  02F5  0850               	movf	_tip+1,w
  6350  02F6  01B2               	clrf	Fuzzy@sum+1
  6351  02F7  07B2               	addwf	Fuzzy@sum+1,f
  6352  02F8  084F               	movf	_tip,w
  6353  02F9  01B1               	clrf	Fuzzy@sum
  6354  02FA  07B1               	addwf	Fuzzy@sum,f
  6355                           
  6356                           ;main.c: 276: ativa_fan = sum/total_area;
  6357  02FB  0852               	movf	_total_area+1,w
  6358  02FC  01F1               	clrf	i1___lwdiv@divisor+1
  6359  02FD  07F1               	addwf	i1___lwdiv@divisor+1,f
  6360  02FE  0851               	movf	_total_area,w
  6361  02FF  01F0               	clrf	i1___lwdiv@divisor
  6362  0300  07F0               	addwf	i1___lwdiv@divisor,f
  6363  0301  0832               	movf	Fuzzy@sum+1,w
  6364  0302  01F3               	clrf	i1___lwdiv@dividend+1
  6365  0303  07F3               	addwf	i1___lwdiv@dividend+1,f
  6366  0304  0831               	movf	Fuzzy@sum,w
  6367  0305  01F2               	clrf	i1___lwdiv@dividend
  6368  0306  07F2               	addwf	i1___lwdiv@dividend,f
  6369  0307  120A  158A  2240  120A  118A  	fcall	i1___lwdiv
  6370  030C  0871               	movf	?i1___lwdiv+1,w
  6371  030D  1283               	bcf	3,5	;RP0=0, select bank0
  6372  030E  1303               	bcf	3,6	;RP1=0, select bank0
  6373  030F  01D8               	clrf	_ativa_fan+1
  6374  0310  07D8               	addwf	_ativa_fan+1,f
  6375  0311  0870               	movf	?i1___lwdiv,w
  6376  0312  01D7               	clrf	_ativa_fan
  6377  0313  07D7               	addwf	_ativa_fan,f
  6378                           
  6379                           ;main.c: 280: char velocidade[1];
  6380                           ;main.c: 282: if(ativa_fan <= 2.5 )
  6381  0314  3000               	movlw	0
  6382  0315  00A0               	movwf	___ftge@ff1
  6383  0316  3020               	movlw	32
  6384  0317  00A1               	movwf	___ftge@ff1+1
  6385  0318  3040               	movlw	64
  6386  0319  00A2               	movwf	___ftge@ff1+2
  6387  031A  0858               	movf	_ativa_fan+1,w
  6388  031B  01F9               	clrf	___lwtoft@c+1
  6389  031C  07F9               	addwf	___lwtoft@c+1,f
  6390  031D  0857               	movf	_ativa_fan,w
  6391  031E  01F8               	clrf	___lwtoft@c
  6392  031F  07F8               	addwf	___lwtoft@c,f
  6393  0320  120A  118A  27EB  120A  118A  	fcall	___lwtoft
  6394  0325  0878               	movf	?___lwtoft,w
  6395  0326  1283               	bcf	3,5	;RP0=0, select bank0
  6396  0327  1303               	bcf	3,6	;RP1=0, select bank0
  6397  0328  00A3               	movwf	___ftge@ff2
  6398  0329  0879               	movf	?___lwtoft+1,w
  6399  032A  00A4               	movwf	___ftge@ff2+1
  6400  032B  087A               	movf	?___lwtoft+2,w
  6401  032C  00A5               	movwf	___ftge@ff2+2
  6402  032D  120A  158A  235B  120A  118A  	fcall	___ftge
  6403  0332  1C03               	btfss	3,0
  6404  0333  2B3A               	goto	i1l2423
  6405                           
  6406                           ;main.c: 283: {
  6407                           ;main.c: 285: velocidade[0] = '0';
  6408  0334  3030               	movlw	48
  6409  0335  1283               	bcf	3,5	;RP0=0, select bank0
  6410  0336  1303               	bcf	3,6	;RP1=0, select bank0
  6411  0337  00AE               	movwf	??_Fuzzy
  6412  0338  082E               	movf	??_Fuzzy,w
  6413  0339  00B0               	movwf	Fuzzy@velocidade
  6414  033A                     i1l2423:	
  6415                           
  6416                           ;main.c: 286: }
  6417                           ;main.c: 287: if(ativa_fan > 2.5 && ativa_fan < 7.5)
  6418  033A  3000               	movlw	0
  6419  033B  1283               	bcf	3,5	;RP0=0, select bank0
  6420  033C  1303               	bcf	3,6	;RP1=0, select bank0
  6421  033D  00A0               	movwf	___ftge@ff1
  6422  033E  3020               	movlw	32
  6423  033F  00A1               	movwf	___ftge@ff1+1
  6424  0340  3040               	movlw	64
  6425  0341  00A2               	movwf	___ftge@ff1+2
  6426  0342  0858               	movf	_ativa_fan+1,w
  6427  0343  01F9               	clrf	___lwtoft@c+1
  6428  0344  07F9               	addwf	___lwtoft@c+1,f
  6429  0345  0857               	movf	_ativa_fan,w
  6430  0346  01F8               	clrf	___lwtoft@c
  6431  0347  07F8               	addwf	___lwtoft@c,f
  6432  0348  120A  118A  27EB  120A  118A  	fcall	___lwtoft
  6433  034D  0878               	movf	?___lwtoft,w
  6434  034E  1283               	bcf	3,5	;RP0=0, select bank0
  6435  034F  1303               	bcf	3,6	;RP1=0, select bank0
  6436  0350  00A3               	movwf	___ftge@ff2
  6437  0351  0879               	movf	?___lwtoft+1,w
  6438  0352  00A4               	movwf	___ftge@ff2+1
  6439  0353  087A               	movf	?___lwtoft+2,w
  6440  0354  00A5               	movwf	___ftge@ff2+2
  6441  0355  120A  158A  235B  120A  118A  	fcall	___ftge
  6442  035A  1803               	btfsc	3,0
  6443  035B  2B84               	goto	i1l2429
  6444  035C  1283               	bcf	3,5	;RP0=0, select bank0
  6445  035D  1303               	bcf	3,6	;RP1=0, select bank0
  6446  035E  0858               	movf	_ativa_fan+1,w
  6447  035F  01F9               	clrf	___lwtoft@c+1
  6448  0360  07F9               	addwf	___lwtoft@c+1,f
  6449  0361  0857               	movf	_ativa_fan,w
  6450  0362  01F8               	clrf	___lwtoft@c
  6451  0363  07F8               	addwf	___lwtoft@c,f
  6452  0364  120A  118A  27EB  120A  118A  	fcall	___lwtoft
  6453  0369  0878               	movf	?___lwtoft,w
  6454  036A  1283               	bcf	3,5	;RP0=0, select bank0
  6455  036B  1303               	bcf	3,6	;RP1=0, select bank0
  6456  036C  00A0               	movwf	___ftge@ff1
  6457  036D  0879               	movf	?___lwtoft+1,w
  6458  036E  00A1               	movwf	___ftge@ff1+1
  6459  036F  087A               	movf	?___lwtoft+2,w
  6460  0370  00A2               	movwf	___ftge@ff1+2
  6461  0371  3000               	movlw	0
  6462  0372  00A3               	movwf	___ftge@ff2
  6463  0373  30F0               	movlw	240
  6464  0374  00A4               	movwf	___ftge@ff2+1
  6465  0375  3040               	movlw	64
  6466  0376  00A5               	movwf	___ftge@ff2+2
  6467  0377  120A  158A  235B  120A  118A  	fcall	___ftge
  6468  037C  1803               	btfsc	3,0
  6469  037D  2B84               	goto	i1l2429
  6470                           
  6471                           ;main.c: 288: {
  6472                           ;main.c: 290: velocidade[0] = '7';
  6473  037E  3037               	movlw	55
  6474  037F  1283               	bcf	3,5	;RP0=0, select bank0
  6475  0380  1303               	bcf	3,6	;RP1=0, select bank0
  6476  0381  00AE               	movwf	??_Fuzzy
  6477  0382  082E               	movf	??_Fuzzy,w
  6478  0383  00B0               	movwf	Fuzzy@velocidade
  6479  0384                     i1l2429:	
  6480                           
  6481                           ;main.c: 291: }
  6482                           ;main.c: 293: if(ativa_fan >= 7.5)
  6483  0384  1283               	bcf	3,5	;RP0=0, select bank0
  6484  0385  1303               	bcf	3,6	;RP1=0, select bank0
  6485  0386  0858               	movf	_ativa_fan+1,w
  6486  0387  01F9               	clrf	___lwtoft@c+1
  6487  0388  07F9               	addwf	___lwtoft@c+1,f
  6488  0389  0857               	movf	_ativa_fan,w
  6489  038A  01F8               	clrf	___lwtoft@c
  6490  038B  07F8               	addwf	___lwtoft@c,f
  6491  038C  120A  118A  27EB  120A  118A  	fcall	___lwtoft
  6492  0391  0878               	movf	?___lwtoft,w
  6493  0392  1283               	bcf	3,5	;RP0=0, select bank0
  6494  0393  1303               	bcf	3,6	;RP1=0, select bank0
  6495  0394  00A0               	movwf	___ftge@ff1
  6496  0395  0879               	movf	?___lwtoft+1,w
  6497  0396  00A1               	movwf	___ftge@ff1+1
  6498  0397  087A               	movf	?___lwtoft+2,w
  6499  0398  00A2               	movwf	___ftge@ff1+2
  6500  0399  3000               	movlw	0
  6501  039A  00A3               	movwf	___ftge@ff2
  6502  039B  30F0               	movlw	240
  6503  039C  00A4               	movwf	___ftge@ff2+1
  6504  039D  3040               	movlw	64
  6505  039E  00A5               	movwf	___ftge@ff2+2
  6506  039F  120A  158A  235B  120A  118A  	fcall	___ftge
  6507  03A4  1C03               	btfss	3,0
  6508  03A5  2BAC               	goto	i1l2433
  6509                           
  6510                           ;main.c: 294: {
  6511                           ;main.c: 296: velocidade[0] = '9';
  6512  03A6  3039               	movlw	57
  6513  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  6514  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  6515  03A9  00AE               	movwf	??_Fuzzy
  6516  03AA  082E               	movf	??_Fuzzy,w
  6517  03AB  00B0               	movwf	Fuzzy@velocidade
  6518  03AC                     i1l2433:	
  6519                           
  6520                           ;main.c: 297: }
  6521                           ;main.c: 300: deltaV = ativa_fan*100;
  6522  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  6523  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  6524  03AE  0858               	movf	_ativa_fan+1,w
  6525  03AF  01F9               	clrf	i1___wmul@multiplier+1
  6526  03B0  07F9               	addwf	i1___wmul@multiplier+1,f
  6527  03B1  0857               	movf	_ativa_fan,w
  6528  03B2  01F8               	clrf	i1___wmul@multiplier
  6529  03B3  07F8               	addwf	i1___wmul@multiplier,f
  6530  03B4  3064               	movlw	100
  6531  03B5  00FA               	movwf	i1___wmul@multiplicand
  6532  03B6  3000               	movlw	0
  6533  03B7  00FB               	movwf	i1___wmul@multiplicand+1
  6534  03B8  120A  158A  213E  120A  118A  	fcall	i1___wmul
  6535  03BD  0879               	movf	?i1___wmul+1,w
  6536  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  6537  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  6538  03C0  01A7               	clrf	(_deltaV+1)^(0+128)
  6539  03C1  07A7               	addwf	(_deltaV+1)^(0+128),f
  6540  03C2  0878               	movf	?i1___wmul,w
  6541  03C3  01A6               	clrf	_deltaV^(0+128)
  6542  03C4  07A6               	addwf	_deltaV^(0+128),f
  6543                           
  6544                           ;main.c: 301: if(ativa_fan*100 >= 0 && ativa_fan*100 < 1024 ){
  6545  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  6546  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  6547  03C7  0858               	movf	_ativa_fan+1,w
  6548  03C8  01F9               	clrf	i1___wmul@multiplier+1
  6549  03C9  07F9               	addwf	i1___wmul@multiplier+1,f
  6550  03CA  0857               	movf	_ativa_fan,w
  6551  03CB  01F8               	clrf	i1___wmul@multiplier
  6552  03CC  07F8               	addwf	i1___wmul@multiplier,f
  6553  03CD  3064               	movlw	100
  6554  03CE  00FA               	movwf	i1___wmul@multiplicand
  6555  03CF  3000               	movlw	0
  6556  03D0  00FB               	movwf	i1___wmul@multiplicand+1
  6557  03D1  120A  158A  213E  120A  118A  	fcall	i1___wmul
  6558  03D6  3004               	movlw	4
  6559  03D7  0279               	subwf	?i1___wmul+1,w
  6560  03D8  3000               	movlw	0
  6561  03D9  1903               	skipnz
  6562  03DA  0278               	subwf	?i1___wmul,w
  6563  03DB  1803               	skipnc
  6564  03DC  2BF7               	goto	i1l2439
  6565                           
  6566                           ;main.c: 302: PWM_DutyCycle2(ativa_fan*100);
  6567  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  6568  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  6569  03DF  0858               	movf	_ativa_fan+1,w
  6570  03E0  01F9               	clrf	i1___wmul@multiplier+1
  6571  03E1  07F9               	addwf	i1___wmul@multiplier+1,f
  6572  03E2  0857               	movf	_ativa_fan,w
  6573  03E3  01F8               	clrf	i1___wmul@multiplier
  6574  03E4  07F8               	addwf	i1___wmul@multiplier,f
  6575  03E5  3064               	movlw	100
  6576  03E6  00FA               	movwf	i1___wmul@multiplicand
  6577  03E7  3000               	movlw	0
  6578  03E8  00FB               	movwf	i1___wmul@multiplicand+1
  6579  03E9  120A  158A  213E  120A  118A  	fcall	i1___wmul
  6580  03EE  0879               	movf	?i1___wmul+1,w
  6581  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  6582  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  6583  03F1  01A1               	clrf	i1PWM_DutyCycle2@valor+1
  6584  03F2  07A1               	addwf	i1PWM_DutyCycle2@valor+1,f
  6585  03F3  0878               	movf	?i1___wmul,w
  6586  03F4  01A0               	clrf	i1PWM_DutyCycle2@valor
  6587  03F5  07A0               	addwf	i1PWM_DutyCycle2@valor,f
  6588  03F6  2BFD               	goto	L6
  6589  03F7                     i1l2439:	
  6590                           ;main.c: 303: }else
  6591                           
  6592                           
  6593                           ;main.c: 304: {
  6594                           ;main.c: 305: PWM_DutyCycle2(0);
  6595  03F7  3000               	movlw	0
  6596  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  6597  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  6598  03FA  00A0               	movwf	i1PWM_DutyCycle2@valor
  6599  03FB  3000               	movlw	0
  6600  03FC  00A1               	movwf	i1PWM_DutyCycle2@valor+1
  6601  03FD                     L6:	
  6602  03FD  120A  158A  20D2   	fcall	i1_PWM_DutyCycle2
  6603                           
  6604                           ;main.c: 306: }
  6605                           ;main.c: 308: rpm = ativa_fan;
  6606  0400  1283               	bcf	3,5	;RP0=0, select bank0
  6607  0401  1303               	bcf	3,6	;RP1=0, select bank0
  6608  0402  0858               	movf	_ativa_fan+1,w
  6609  0403  1683               	bsf	3,5	;RP0=1, select bank1
  6610  0404  1303               	bcf	3,6	;RP1=0, select bank1
  6611  0405  01B9               	clrf	(_rpm+1)^(0+128)
  6612  0406  07B9               	addwf	(_rpm+1)^(0+128),f
  6613  0407  1283               	bcf	3,5	;RP0=0, select bank0
  6614  0408  1303               	bcf	3,6	;RP1=0, select bank0
  6615  0409  0857               	movf	_ativa_fan,w
  6616  040A  1683               	bsf	3,5	;RP0=1, select bank1
  6617  040B  1303               	bcf	3,6	;RP1=0, select bank1
  6618  040C  01B8               	clrf	_rpm^(0+128)
  6619  040D  07B8               	addwf	_rpm^(0+128),f
  6620  040E  0008               	return
  6621  040F                     __end_of_Fuzzy:	
  6622                           
  6623                           	psect	text28
  6624  093E                     __ptext28:	
  6625 ;; *************** function i1___wmul *****************
  6626 ;; Defined at:
  6627 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  multiplier      2    8[COMMON] unsigned int 
  6630 ;;  multiplicand    2   10[COMMON] unsigned int 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  __wmul          2   12[COMMON] unsigned int 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  2    8[COMMON] unsigned int 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6642 ;;      Params:         4       0       0       0       0
  6643 ;;      Locals:         2       0       0       0       0
  6644 ;;      Temps:          0       0       0       0       0
  6645 ;;      Totals:         6       0       0       0       0
  6646 ;;Total ram usage:        6 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_Fuzzy
  6652 ;;		_ISR
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           
  6657                           ;psect for function i1___wmul
  6658  093E                     i1___wmul:	
  6659                           
  6660                           ;incstack = 0
  6661                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  6662  093E  01FC               	clrf	i1___wmul@product
  6663  093F  01FD               	clrf	i1___wmul@product+1
  6664  0940                     i1l2323:	
  6665  0940  1C78               	btfss	i1___wmul@multiplier,0
  6666  0941  2948               	goto	i1l611
  6667  0942  087A               	movf	i1___wmul@multiplicand,w
  6668  0943  07FC               	addwf	i1___wmul@product,f
  6669  0944  1803               	skipnc
  6670  0945  0AFD               	incf	i1___wmul@product+1,f
  6671  0946  087B               	movf	i1___wmul@multiplicand+1,w
  6672  0947  07FD               	addwf	i1___wmul@product+1,f
  6673  0948                     i1l611:	
  6674  0948  3001               	movlw	1
  6675  0949                     u224_25:	
  6676  0949  1003               	clrc
  6677  094A  0DFA               	rlf	i1___wmul@multiplicand,f
  6678  094B  0DFB               	rlf	i1___wmul@multiplicand+1,f
  6679  094C  3EFF               	addlw	-1
  6680  094D  1D03               	skipz
  6681  094E  2949               	goto	u224_25
  6682  094F  3001               	movlw	1
  6683  0950                     u225_25:	
  6684  0950  1003               	clrc
  6685  0951  0CF9               	rrf	i1___wmul@multiplier+1,f
  6686  0952  0CF8               	rrf	i1___wmul@multiplier,f
  6687  0953  3EFF               	addlw	-1
  6688  0954  1D03               	skipz
  6689  0955  2950               	goto	u225_25
  6690  0956  0879               	movf	i1___wmul@multiplier+1,w
  6691  0957  0478               	iorwf	i1___wmul@multiplier,w
  6692  0958  1D03               	skipz
  6693  0959  2940               	goto	i1l2323
  6694  095A  087D               	movf	i1___wmul@product+1,w
  6695  095B  01F9               	clrf	?i1___wmul+1
  6696  095C  07F9               	addwf	?i1___wmul+1,f
  6697  095D  087C               	movf	i1___wmul@product,w
  6698  095E  01F8               	clrf	?i1___wmul
  6699  095F  07F8               	addwf	?i1___wmul,f
  6700  0960  0008               	return
  6701  0961                     __end_ofi1___wmul:	
  6702                           
  6703                           	psect	text29
  6704  08D2                     __ptext29:	
  6705 ;; *************** function i1_PWM_DutyCycle2 *****************
  6706 ;; Defined at:
  6707 ;;		line 96 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\pwm.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  valor           2    0[BANK0 ] int 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;		None               void
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6721 ;;      Params:         0       2       0       0       0
  6722 ;;      Locals:         0       0       0       0       0
  6723 ;;      Temps:          0       2       0       0       0
  6724 ;;      Totals:         0       4       0       0       0
  6725 ;;Total ram usage:        4 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_Fuzzy
  6731 ;;		_ISR
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           
  6736                           ;psect for function i1_PWM_DutyCycle2
  6737  08D2                     i1_PWM_DutyCycle2:	
  6738                           
  6739                           ;pwm.c: 98: CCPR2L = valor >> 2;
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  6743  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  6744  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  6745  08D4  0821               	movf	i1PWM_DutyCycle2@valor+1,w
  6746  08D5  00A3               	movwf	??i1_PWM_DutyCycle2+1
  6747  08D6  0820               	movf	i1PWM_DutyCycle2@valor,w
  6748  08D7  00A2               	movwf	??i1_PWM_DutyCycle2
  6749  08D8  0D23               	rlf	??i1_PWM_DutyCycle2+1,w
  6750  08D9  0CA3               	rrf	??i1_PWM_DutyCycle2+1,f
  6751  08DA  0CA2               	rrf	??i1_PWM_DutyCycle2,f
  6752  08DB  0D23               	rlf	??i1_PWM_DutyCycle2+1,w
  6753  08DC  0CA3               	rrf	??i1_PWM_DutyCycle2+1,f
  6754  08DD  0CA2               	rrf	??i1_PWM_DutyCycle2,f
  6755  08DE  0822               	movf	??i1_PWM_DutyCycle2,w
  6756  08DF  009B               	movwf	27	;volatile
  6757                           
  6758                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  6759  08E0  0820               	movf	i1PWM_DutyCycle2@valor,w
  6760  08E1  00A2               	movwf	??i1_PWM_DutyCycle2
  6761  08E2  3003               	movlw	3
  6762  08E3                     u222_25:	
  6763  08E3  1003               	clrc
  6764  08E4  0DA2               	rlf	??i1_PWM_DutyCycle2,f
  6765  08E5  3EFF               	addlw	-1
  6766  08E6  1D03               	skipz
  6767  08E7  28E3               	goto	u222_25
  6768  08E8  1003               	clrc
  6769  08E9  0D22               	rlf	??i1_PWM_DutyCycle2,w
  6770  08EA  380C               	iorlw	12
  6771  08EB  009D               	movwf	29	;volatile
  6772  08EC  0008               	return
  6773  08ED                     __end_ofi1_PWM_DutyCycle2:	
  6774                           
  6775                           	psect	text30
  6776  076B                     __ptext30:	
  6777 ;; *************** function _trimf *****************
  6778 ;; Defined at:
  6779 ;;		line 78 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  x               2    0[BANK0 ] unsigned int 
  6782 ;;  a               2    2[BANK0 ] unsigned int 
  6783 ;;  b               2    4[BANK0 ] unsigned int 
  6784 ;;  c               2    6[BANK0 ] unsigned int 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  ua              2   12[COMMON] unsigned int 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  2    0[BANK0 ] unsigned int 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0, pclath, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6796 ;;      Params:         0       8       0       0       0
  6797 ;;      Locals:         2       0       0       0       0
  6798 ;;      Temps:          4       0       0       0       0
  6799 ;;      Totals:         6       8       0       0       0
  6800 ;;Total ram usage:       14 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    1
  6803 ;; This function calls:
  6804 ;;		i1___lwdiv
  6805 ;; This function is called by:
  6806 ;;		_Fuzzy
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           
  6811                           ;psect for function _trimf
  6812  076B                     _trimf:	
  6813                           
  6814                           ;main.c: 80: unsigned int ua = 0;
  6815                           
  6816                           ;incstack = 0
  6817                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  6818  076B  01FC               	clrf	trimf@ua
  6819  076C  01FD               	clrf	trimf@ua+1
  6820                           
  6821                           ;main.c: 82: if (x <= a)
  6822  076D  1283               	bcf	3,5	;RP0=0, select bank0
  6823  076E  1303               	bcf	3,6	;RP1=0, select bank0
  6824  076F  0821               	movf	trimf@x+1,w
  6825  0770  0223               	subwf	trimf@a+1,w
  6826  0771  1D03               	skipz
  6827  0772  2F75               	goto	u171_25
  6828  0773  0820               	movf	trimf@x,w
  6829  0774  0222               	subwf	trimf@a,w
  6830  0775                     u171_25:	
  6831  0775  1803               	btfsc	3,0
  6832  0776  2FE0               	goto	i1l2105
  6833                           
  6834                           ;main.c: 84: else if ((a < x) && (x <= b))
  6835                           
  6836                           ;main.c: 83: ua = 0;
  6837  0777  0821               	movf	trimf@x+1,w
  6838  0778  0223               	subwf	trimf@a+1,w
  6839  0779  1D03               	skipz
  6840  077A  2F7D               	goto	u172_25
  6841  077B  0820               	movf	trimf@x,w
  6842  077C  0222               	subwf	trimf@a,w
  6843  077D                     u172_25:	
  6844  077D  1803               	skipnc
  6845  077E  2F9A               	goto	i1l2097
  6846  077F  0821               	movf	trimf@x+1,w
  6847  0780  0225               	subwf	trimf@b+1,w
  6848  0781  1D03               	skipz
  6849  0782  2F85               	goto	u173_25
  6850  0783  0820               	movf	trimf@x,w
  6851  0784  0224               	subwf	trimf@b,w
  6852  0785                     u173_25:	
  6853  0785  1C03               	skipc
  6854  0786  2F9A               	goto	i1l2097
  6855                           
  6856                           ;main.c: 85: ua = ((x - a) / (b - a));
  6857  0787  0922               	comf	trimf@a,w
  6858  0788  00F8               	movwf	??_trimf
  6859  0789  0923               	comf	trimf@a+1,w
  6860  078A  00F9               	movwf	??_trimf+1
  6861  078B  0AF8               	incf	??_trimf,f
  6862  078C  1903               	skipnz
  6863  078D  0AF9               	incf	??_trimf+1,f
  6864  078E  0824               	movf	trimf@b,w
  6865  078F  0778               	addwf	??_trimf,w
  6866  0790  00F0               	movwf	i1___lwdiv@divisor
  6867  0791  0825               	movf	trimf@b+1,w
  6868  0792  1803               	skipnc
  6869  0793  0A25               	incf	trimf@b+1,w
  6870  0794  0779               	addwf	??_trimf+1,w
  6871  0795  00F1               	movwf	i1___lwdiv@divisor+1
  6872  0796  0922               	comf	trimf@a,w
  6873  0797  00FA               	movwf	??_trimf+2
  6874  0798  0923               	comf	trimf@a+1,w
  6875  0799  2FBE               	goto	L8
  6876  079A                     i1l2097:	
  6877                           
  6878                           ;main.c: 86: else if ((b < x) && (x <= c))
  6879  079A  1283               	bcf	3,5	;RP0=0, select bank0
  6880  079B  1303               	bcf	3,6	;RP1=0, select bank0
  6881  079C  0821               	movf	trimf@x+1,w
  6882  079D  0225               	subwf	trimf@b+1,w
  6883  079E  1D03               	skipz
  6884  079F  2FA2               	goto	u174_25
  6885  07A0  0820               	movf	trimf@x,w
  6886  07A1  0224               	subwf	trimf@b,w
  6887  07A2                     u174_25:	
  6888  07A2  1803               	skipnc
  6889  07A3  2FD6               	goto	i1l2103
  6890  07A4  0821               	movf	trimf@x+1,w
  6891  07A5  0227               	subwf	trimf@c+1,w
  6892  07A6  1D03               	skipz
  6893  07A7  2FAA               	goto	u175_25
  6894  07A8  0820               	movf	trimf@x,w
  6895  07A9  0226               	subwf	trimf@c,w
  6896  07AA                     u175_25:	
  6897  07AA  1C03               	skipc
  6898  07AB  2FD6               	goto	i1l2103
  6899                           
  6900                           ;main.c: 87: ua = ((x - c) / (b - c));
  6901  07AC  0926               	comf	trimf@c,w
  6902  07AD  00F8               	movwf	??_trimf
  6903  07AE  0927               	comf	trimf@c+1,w
  6904  07AF  00F9               	movwf	??_trimf+1
  6905  07B0  0AF8               	incf	??_trimf,f
  6906  07B1  1903               	skipnz
  6907  07B2  0AF9               	incf	??_trimf+1,f
  6908  07B3  0824               	movf	trimf@b,w
  6909  07B4  0778               	addwf	??_trimf,w
  6910  07B5  00F0               	movwf	i1___lwdiv@divisor
  6911  07B6  0825               	movf	trimf@b+1,w
  6912  07B7  1803               	skipnc
  6913  07B8  0A25               	incf	trimf@b+1,w
  6914  07B9  0779               	addwf	??_trimf+1,w
  6915  07BA  00F1               	movwf	i1___lwdiv@divisor+1
  6916  07BB  0926               	comf	trimf@c,w
  6917  07BC  00FA               	movwf	??_trimf+2
  6918  07BD  0927               	comf	trimf@c+1,w
  6919  07BE                     L8:	
  6920  07BE  00FB               	movwf	??_trimf+3
  6921  07BF  0AFA               	incf	??_trimf+2,f
  6922  07C0  1903               	skipnz
  6923  07C1  0AFB               	incf	??_trimf+3,f
  6924  07C2  0820               	movf	trimf@x,w
  6925  07C3  077A               	addwf	??_trimf+2,w
  6926  07C4  00F2               	movwf	i1___lwdiv@dividend
  6927  07C5  0821               	movf	trimf@x+1,w
  6928  07C6  1803               	skipnc
  6929  07C7  0A21               	incf	trimf@x+1,w
  6930  07C8  077B               	addwf	??_trimf+3,w
  6931  07C9  00F3               	movwf	i1___lwdiv@dividend+1
  6932  07CA  120A  158A  2240  120A  118A  	fcall	i1___lwdiv
  6933  07CF  0871               	movf	?i1___lwdiv+1,w
  6934  07D0  01FD               	clrf	trimf@ua+1
  6935  07D1  07FD               	addwf	trimf@ua+1,f
  6936  07D2  0870               	movf	?i1___lwdiv,w
  6937  07D3  01FC               	clrf	trimf@ua
  6938  07D4  07FC               	addwf	trimf@ua,f
  6939  07D5  2FE2               	goto	i1l2107
  6940  07D6                     i1l2103:	
  6941                           
  6942                           ;main.c: 88: else if (x > c)
  6943  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  6944  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  6945  07D8  0821               	movf	trimf@x+1,w
  6946  07D9  0227               	subwf	trimf@c+1,w
  6947  07DA  1D03               	skipz
  6948  07DB  2FDE               	goto	u176_25
  6949  07DC  0820               	movf	trimf@x,w
  6950  07DD  0226               	subwf	trimf@c,w
  6951  07DE                     u176_25:	
  6952  07DE  1803               	skipnc
  6953  07DF  2FE2               	goto	i1l2107
  6954  07E0                     i1l2105:	
  6955                           
  6956                           ;main.c: 89: ua = 0;
  6957  07E0  01FC               	clrf	trimf@ua
  6958  07E1  01FD               	clrf	trimf@ua+1
  6959  07E2                     i1l2107:	
  6960                           
  6961                           ;main.c: 91: return(ua);
  6962  07E2  087D               	movf	trimf@ua+1,w
  6963  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  6964  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  6965  07E5  01A1               	clrf	?_trimf+1
  6966  07E6  07A1               	addwf	?_trimf+1,f
  6967  07E7  087C               	movf	trimf@ua,w
  6968  07E8  01A0               	clrf	?_trimf
  6969  07E9  07A0               	addwf	?_trimf,f
  6970  07EA  0008               	return
  6971  07EB                     __end_of_trimf:	
  6972                           
  6973                           	psect	text31
  6974  0C8F                     __ptext31:	
  6975 ;; *************** function _trapmf *****************
  6976 ;; Defined at:
  6977 ;;		line 97 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  x               2    0[BANK0 ] unsigned int 
  6980 ;;  a               2    2[BANK0 ] unsigned int 
  6981 ;;  b               2    4[BANK0 ] unsigned int 
  6982 ;;  c               2    6[BANK0 ] unsigned int 
  6983 ;;  d               2    8[BANK0 ] unsigned int 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  ua              2   12[COMMON] unsigned int 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  2    0[BANK0 ] unsigned int 
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0, pclath, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6995 ;;      Params:         0      10       0       0       0
  6996 ;;      Locals:         2       0       0       0       0
  6997 ;;      Temps:          4       0       0       0       0
  6998 ;;      Totals:         6      10       0       0       0
  6999 ;;Total ram usage:       16 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    1
  7002 ;; This function calls:
  7003 ;;		i1___lwdiv
  7004 ;; This function is called by:
  7005 ;;		_Fuzzy
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           
  7010                           ;psect for function _trapmf
  7011  0C8F                     _trapmf:	
  7012                           
  7013                           ;main.c: 99: unsigned int ua = 0;
  7014                           
  7015                           ;incstack = 0
  7016                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7017  0C8F  01FC               	clrf	trapmf@ua
  7018  0C90  01FD               	clrf	trapmf@ua+1
  7019                           
  7020                           ;main.c: 101: if (x <= a)
  7021  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  7022  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  7023  0C93  0821               	movf	trapmf@x+1,w
  7024  0C94  0223               	subwf	trapmf@a+1,w
  7025  0C95  1D03               	skipz
  7026  0C96  2C99               	goto	u177_25
  7027  0C97  0820               	movf	trapmf@x,w
  7028  0C98  0222               	subwf	trapmf@a,w
  7029  0C99                     u177_25:	
  7030  0C99  1803               	btfsc	3,0
  7031  0C9A  2D23               	goto	i1l2137
  7032                           
  7033                           ;main.c: 103: else if ((a < x) && (x <= b))
  7034                           
  7035                           ;main.c: 102: ua = 0;
  7036  0C9B  0821               	movf	trapmf@x+1,w
  7037  0C9C  0223               	subwf	trapmf@a+1,w
  7038  0C9D  1D03               	skipz
  7039  0C9E  2CA1               	goto	u178_25
  7040  0C9F  0820               	movf	trapmf@x,w
  7041  0CA0  0222               	subwf	trapmf@a,w
  7042  0CA1                     u178_25:	
  7043  0CA1  1803               	skipnc
  7044  0CA2  2CC8               	goto	i1l2123
  7045  0CA3  0821               	movf	trapmf@x+1,w
  7046  0CA4  0225               	subwf	trapmf@b+1,w
  7047  0CA5  1D03               	skipz
  7048  0CA6  2CA9               	goto	u179_25
  7049  0CA7  0820               	movf	trapmf@x,w
  7050  0CA8  0224               	subwf	trapmf@b,w
  7051  0CA9                     u179_25:	
  7052  0CA9  1C03               	skipc
  7053  0CAA  2CC8               	goto	i1l2123
  7054                           
  7055                           ;main.c: 104: ua = ((x - a) / (b - a));
  7056  0CAB  0922               	comf	trapmf@a,w
  7057  0CAC  00F8               	movwf	??_trapmf
  7058  0CAD  0923               	comf	trapmf@a+1,w
  7059  0CAE  00F9               	movwf	??_trapmf+1
  7060  0CAF  0AF8               	incf	??_trapmf,f
  7061  0CB0  1903               	skipnz
  7062  0CB1  0AF9               	incf	??_trapmf+1,f
  7063  0CB2  0824               	movf	trapmf@b,w
  7064  0CB3  0778               	addwf	??_trapmf,w
  7065  0CB4  00F0               	movwf	i1___lwdiv@divisor
  7066  0CB5  0825               	movf	trapmf@b+1,w
  7067  0CB6  1803               	skipnc
  7068  0CB7  0A25               	incf	trapmf@b+1,w
  7069  0CB8  0779               	addwf	??_trapmf+1,w
  7070  0CB9  00F1               	movwf	i1___lwdiv@divisor+1
  7071  0CBA  0922               	comf	trapmf@a,w
  7072  0CBB  00FA               	movwf	??_trapmf+2
  7073  0CBC  0923               	comf	trapmf@a+1,w
  7074  0CBD  00FB               	movwf	??_trapmf+3
  7075  0CBE  0AFA               	incf	??_trapmf+2,f
  7076  0CBF  1903               	skipnz
  7077  0CC0  0AFB               	incf	??_trapmf+3,f
  7078  0CC1  0820               	movf	trapmf@x,w
  7079  0CC2  077A               	addwf	??_trapmf+2,w
  7080  0CC3  00F2               	movwf	i1___lwdiv@dividend
  7081  0CC4  0821               	movf	trapmf@x+1,w
  7082  0CC5  1803               	skipnc
  7083  0CC6  0A21               	incf	trapmf@x+1,w
  7084  0CC7  2D0B               	goto	L10
  7085  0CC8                     i1l2123:	
  7086                           
  7087                           ;main.c: 105: else if ((b <= x) && (x <= c))
  7088  0CC8  1283               	bcf	3,5	;RP0=0, select bank0
  7089  0CC9  1303               	bcf	3,6	;RP1=0, select bank0
  7090  0CCA  0825               	movf	trapmf@b+1,w
  7091  0CCB  0221               	subwf	trapmf@x+1,w
  7092  0CCC  1D03               	skipz
  7093  0CCD  2CD0               	goto	u180_25
  7094  0CCE  0824               	movf	trapmf@b,w
  7095  0CCF  0220               	subwf	trapmf@x,w
  7096  0CD0                     u180_25:	
  7097  0CD0  1C03               	skipc
  7098  0CD1  2CDF               	goto	i1l2129
  7099  0CD2  0821               	movf	trapmf@x+1,w
  7100  0CD3  0227               	subwf	trapmf@c+1,w
  7101  0CD4  1D03               	skipz
  7102  0CD5  2CD8               	goto	u181_25
  7103  0CD6  0820               	movf	trapmf@x,w
  7104  0CD7  0226               	subwf	trapmf@c,w
  7105  0CD8                     u181_25:	
  7106  0CD8  1C03               	skipc
  7107  0CD9  2CDF               	goto	i1l2129
  7108                           
  7109                           ;main.c: 106: ua = 1;
  7110  0CDA  3001               	movlw	1
  7111  0CDB  00FC               	movwf	trapmf@ua
  7112  0CDC  3000               	movlw	0
  7113  0CDD  00FD               	movwf	trapmf@ua+1
  7114  0CDE  2D25               	goto	i1l2139
  7115  0CDF                     i1l2129:	
  7116                           
  7117                           ;main.c: 107: else if ((c < x) && (x <= d))
  7118  0CDF  0821               	movf	trapmf@x+1,w
  7119  0CE0  0227               	subwf	trapmf@c+1,w
  7120  0CE1  1D03               	skipz
  7121  0CE2  2CE5               	goto	u182_25
  7122  0CE3  0820               	movf	trapmf@x,w
  7123  0CE4  0226               	subwf	trapmf@c,w
  7124  0CE5                     u182_25:	
  7125  0CE5  1803               	skipnc
  7126  0CE6  2D19               	goto	i1l2135
  7127  0CE7  0821               	movf	trapmf@x+1,w
  7128  0CE8  0229               	subwf	trapmf@d+1,w
  7129  0CE9  1D03               	skipz
  7130  0CEA  2CED               	goto	u183_25
  7131  0CEB  0820               	movf	trapmf@x,w
  7132  0CEC  0228               	subwf	trapmf@d,w
  7133  0CED                     u183_25:	
  7134  0CED  1C03               	skipc
  7135  0CEE  2D19               	goto	i1l2135
  7136                           
  7137                           ;main.c: 108: ua = ((d - x) / (d - c));
  7138  0CEF  0926               	comf	trapmf@c,w
  7139  0CF0  00F8               	movwf	??_trapmf
  7140  0CF1  0927               	comf	trapmf@c+1,w
  7141  0CF2  00F9               	movwf	??_trapmf+1
  7142  0CF3  0AF8               	incf	??_trapmf,f
  7143  0CF4  1903               	skipnz
  7144  0CF5  0AF9               	incf	??_trapmf+1,f
  7145  0CF6  0828               	movf	trapmf@d,w
  7146  0CF7  0778               	addwf	??_trapmf,w
  7147  0CF8  00F0               	movwf	i1___lwdiv@divisor
  7148  0CF9  0829               	movf	trapmf@d+1,w
  7149  0CFA  1803               	skipnc
  7150  0CFB  0A29               	incf	trapmf@d+1,w
  7151  0CFC  0779               	addwf	??_trapmf+1,w
  7152  0CFD  00F1               	movwf	i1___lwdiv@divisor+1
  7153  0CFE  0920               	comf	trapmf@x,w
  7154  0CFF  00FA               	movwf	??_trapmf+2
  7155  0D00  0921               	comf	trapmf@x+1,w
  7156  0D01  00FB               	movwf	??_trapmf+3
  7157  0D02  0AFA               	incf	??_trapmf+2,f
  7158  0D03  1903               	skipnz
  7159  0D04  0AFB               	incf	??_trapmf+3,f
  7160  0D05  0828               	movf	trapmf@d,w
  7161  0D06  077A               	addwf	??_trapmf+2,w
  7162  0D07  00F2               	movwf	i1___lwdiv@dividend
  7163  0D08  0829               	movf	trapmf@d+1,w
  7164  0D09  1803               	skipnc
  7165  0D0A  0A29               	incf	trapmf@d+1,w
  7166  0D0B                     L10:	
  7167  0D0B  077B               	addwf	??_trapmf+3,w
  7168  0D0C  00F3               	movwf	i1___lwdiv@dividend+1
  7169  0D0D  120A  158A  2240  120A  158A  	fcall	i1___lwdiv
  7170  0D12  0871               	movf	?i1___lwdiv+1,w
  7171  0D13  01FD               	clrf	trapmf@ua+1
  7172  0D14  07FD               	addwf	trapmf@ua+1,f
  7173  0D15  0870               	movf	?i1___lwdiv,w
  7174  0D16  01FC               	clrf	trapmf@ua
  7175  0D17  07FC               	addwf	trapmf@ua,f
  7176  0D18  2D25               	goto	i1l2139
  7177  0D19                     i1l2135:	
  7178                           
  7179                           ;main.c: 109: else if (x > d)
  7180  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  7181  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  7182  0D1B  0821               	movf	trapmf@x+1,w
  7183  0D1C  0229               	subwf	trapmf@d+1,w
  7184  0D1D  1D03               	skipz
  7185  0D1E  2D21               	goto	u184_25
  7186  0D1F  0820               	movf	trapmf@x,w
  7187  0D20  0228               	subwf	trapmf@d,w
  7188  0D21                     u184_25:	
  7189  0D21  1803               	skipnc
  7190  0D22  2D25               	goto	i1l2139
  7191  0D23                     i1l2137:	
  7192                           
  7193                           ;main.c: 110: ua = 0;
  7194  0D23  01FC               	clrf	trapmf@ua
  7195  0D24  01FD               	clrf	trapmf@ua+1
  7196  0D25                     i1l2139:	
  7197                           
  7198                           ;main.c: 112: return(ua);
  7199  0D25  087D               	movf	trapmf@ua+1,w
  7200  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  7201  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  7202  0D28  01A1               	clrf	?_trapmf+1
  7203  0D29  07A1               	addwf	?_trapmf+1,f
  7204  0D2A  087C               	movf	trapmf@ua,w
  7205  0D2B  01A0               	clrf	?_trapmf
  7206  0D2C  07A0               	addwf	?_trapmf,f
  7207  0D2D  0008               	return
  7208  0D2E                     __end_of_trapmf:	
  7209                           
  7210                           	psect	text32
  7211  0A40                     __ptext32:	
  7212 ;; *************** function i1___lwdiv *****************
  7213 ;; Defined at:
  7214 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  divisor         2    0[COMMON] unsigned int 
  7217 ;;  dividend        2    2[COMMON] unsigned int 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  __lwdiv         2    5[COMMON] unsigned int 
  7220 ;;  __lwdiv         1    7[COMMON] unsigned char 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  2    0[COMMON] unsigned int 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7230 ;;      Params:         4       0       0       0       0
  7231 ;;      Locals:         3       0       0       0       0
  7232 ;;      Temps:          1       0       0       0       0
  7233 ;;      Totals:         8       0       0       0       0
  7234 ;;Total ram usage:        8 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_trimf
  7240 ;;		_trapmf
  7241 ;;		_Fuzzy
  7242 ;;		_ISR
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           
  7247                           ;psect for function i1___lwdiv
  7248  0A40                     i1___lwdiv:	
  7249                           
  7250                           ;incstack = 0
  7251                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7252  0A40  01F5               	clrf	i1___lwdiv@quotient
  7253  0A41  01F6               	clrf	i1___lwdiv@quotient+1
  7254  0A42  0871               	movf	i1___lwdiv@divisor+1,w
  7255  0A43  0470               	iorwf	i1___lwdiv@divisor,w
  7256  0A44  1903               	skipnz
  7257  0A45  2A77               	goto	i1l2081
  7258  0A46  01F7               	clrf	i1___lwdiv@counter
  7259  0A47  0AF7               	incf	i1___lwdiv@counter,f
  7260  0A48                     i1l2069:	
  7261  0A48  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  7262  0A49  2A56               	goto	i1l2071
  7263  0A4A  3001               	movlw	1
  7264  0A4B                     u165_25:	
  7265  0A4B  1003               	clrc
  7266  0A4C  0DF0               	rlf	i1___lwdiv@divisor,f
  7267  0A4D  0DF1               	rlf	i1___lwdiv@divisor+1,f
  7268  0A4E  3EFF               	addlw	-1
  7269  0A4F  1D03               	skipz
  7270  0A50  2A4B               	goto	u165_25
  7271  0A51  3001               	movlw	1
  7272  0A52  00F4               	movwf	??i1___lwdiv
  7273  0A53  0874               	movf	??i1___lwdiv,w
  7274  0A54  07F7               	addwf	i1___lwdiv@counter,f
  7275  0A55  2A48               	goto	i1l2069
  7276  0A56                     i1l2071:	
  7277  0A56  3001               	movlw	1
  7278  0A57                     u167_25:	
  7279  0A57  1003               	clrc
  7280  0A58  0DF5               	rlf	i1___lwdiv@quotient,f
  7281  0A59  0DF6               	rlf	i1___lwdiv@quotient+1,f
  7282  0A5A  3EFF               	addlw	-1
  7283  0A5B  1D03               	skipz
  7284  0A5C  2A57               	goto	u167_25
  7285  0A5D  0871               	movf	i1___lwdiv@divisor+1,w
  7286  0A5E  0273               	subwf	i1___lwdiv@dividend+1,w
  7287  0A5F  1D03               	skipz
  7288  0A60  2A63               	goto	u168_25
  7289  0A61  0870               	movf	i1___lwdiv@divisor,w
  7290  0A62  0272               	subwf	i1___lwdiv@dividend,w
  7291  0A63                     u168_25:	
  7292  0A63  1C03               	skipc
  7293  0A64  2A6C               	goto	i1l2077
  7294  0A65  0870               	movf	i1___lwdiv@divisor,w
  7295  0A66  02F2               	subwf	i1___lwdiv@dividend,f
  7296  0A67  0871               	movf	i1___lwdiv@divisor+1,w
  7297  0A68  1C03               	skipc
  7298  0A69  03F3               	decf	i1___lwdiv@dividend+1,f
  7299  0A6A  02F3               	subwf	i1___lwdiv@dividend+1,f
  7300  0A6B  1475               	bsf	i1___lwdiv@quotient,0
  7301  0A6C                     i1l2077:	
  7302  0A6C  3001               	movlw	1
  7303  0A6D                     u169_25:	
  7304  0A6D  1003               	clrc
  7305  0A6E  0CF1               	rrf	i1___lwdiv@divisor+1,f
  7306  0A6F  0CF0               	rrf	i1___lwdiv@divisor,f
  7307  0A70  3EFF               	addlw	-1
  7308  0A71  1D03               	skipz
  7309  0A72  2A6D               	goto	u169_25
  7310  0A73  3001               	movlw	1
  7311  0A74  02F7               	subwf	i1___lwdiv@counter,f
  7312  0A75  1D03               	btfss	3,2
  7313  0A76  2A56               	goto	i1l2071
  7314  0A77                     i1l2081:	
  7315  0A77  0876               	movf	i1___lwdiv@quotient+1,w
  7316  0A78  01F1               	clrf	?i1___lwdiv+1
  7317  0A79  07F1               	addwf	?i1___lwdiv+1,f
  7318  0A7A  0875               	movf	i1___lwdiv@quotient,w
  7319  0A7B  01F0               	clrf	?i1___lwdiv
  7320  0A7C  07F0               	addwf	?i1___lwdiv,f
  7321  0A7D  0008               	return
  7322  0A7E                     __end_ofi1___lwdiv:	
  7323                           
  7324                           	psect	text33
  7325  086D                     __ptext33:	
  7326 ;; *************** function _max_val *****************
  7327 ;; Defined at:
  7328 ;;		line 127 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  a               2    0[COMMON] unsigned int 
  7331 ;;  b               2    2[COMMON] unsigned int 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  2    0[COMMON] unsigned int 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2, status,0
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7343 ;;      Params:         4       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0
  7345 ;;      Temps:          0       0       0       0       0
  7346 ;;      Totals:         4       0       0       0       0
  7347 ;;Total ram usage:        4 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_Fuzzy
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           
  7357                           ;psect for function _max_val
  7358  086D                     _max_val:	
  7359                           
  7360                           ;main.c: 129: if (a > b)
  7361                           
  7362                           ;incstack = 0
  7363                           ; Regs used in _max_val: [wreg+status,2+status,0]
  7364  086D  0871               	movf	max_val@a+1,w
  7365  086E  0273               	subwf	max_val@b+1,w
  7366  086F  1D03               	skipz
  7367  0870  2873               	goto	u185_25
  7368  0871  0870               	movf	max_val@a,w
  7369  0872  0272               	subwf	max_val@b,w
  7370  0873                     u185_25:	
  7371  0873  1C03               	btfss	3,0
  7372  0874  0008               	return
  7373                           
  7374                           ;main.c: 131: else
  7375                           ;main.c: 132: return b;
  7376                           
  7377                           ;main.c: 130: return a;
  7378  0875  0873               	movf	max_val@b+1,w
  7379  0876  01F1               	clrf	?_max_val+1
  7380  0877  07F1               	addwf	?_max_val+1,f
  7381  0878  0872               	movf	max_val@b,w
  7382  0879  01F0               	clrf	?_max_val
  7383  087A  07F0               	addwf	?_max_val,f
  7384  087B  0008               	return
  7385  087C                     __end_of_max_val:	
  7386                           
  7387                           	psect	text34
  7388  07EB                     __ptext34:	
  7389 ;; *************** function ___lwtoft *****************
  7390 ;; Defined at:
  7391 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  c               2    8[COMMON] unsigned int 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;		None
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  3    8[COMMON] float 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2, status,0, pclath, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7405 ;;      Params:         3       0       0       0       0
  7406 ;;      Locals:         0       0       0       0       0
  7407 ;;      Temps:          1       0       0       0       0
  7408 ;;      Totals:         4       0       0       0       0
  7409 ;;Total ram usage:        4 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; Hardware stack levels required when called:    1
  7412 ;; This function calls:
  7413 ;;		___ftpack
  7414 ;; This function is called by:
  7415 ;;		_Fuzzy
  7416 ;; This function uses a non-reentrant model
  7417 ;;
  7418                           
  7419                           
  7420                           ;psect for function ___lwtoft
  7421  07EB                     ___lwtoft:	
  7422                           
  7423                           ;incstack = 0
  7424                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7425  07EB  0878               	movf	___lwtoft@c,w
  7426  07EC  00F0               	movwf	___ftpack@arg
  7427  07ED  0879               	movf	___lwtoft@c+1,w
  7428  07EE  00F1               	movwf	___ftpack@arg+1
  7429  07EF  01F2               	clrf	___ftpack@arg+2
  7430  07F0  308E               	movlw	142
  7431  07F1  00FB               	movwf	??___lwtoft
  7432  07F2  087B               	movf	??___lwtoft,w
  7433  07F3  00F3               	movwf	___ftpack@exp
  7434  07F4  01F4               	clrf	___ftpack@sign
  7435  07F5  120A  158A  23BA   	fcall	___ftpack
  7436  07F8  0870               	movf	?___ftpack,w
  7437  07F9  00F8               	movwf	?___lwtoft
  7438  07FA  0871               	movf	?___ftpack+1,w
  7439  07FB  00F9               	movwf	?___lwtoft+1
  7440  07FC  0872               	movf	?___ftpack+2,w
  7441  07FD  00FA               	movwf	?___lwtoft+2
  7442  07FE  0008               	return
  7443  07FF                     __end_of___lwtoft:	
  7444                           
  7445                           	psect	text35
  7446  0BBA                     __ptext35:	
  7447 ;; *************** function ___ftpack *****************
  7448 ;; Defined at:
  7449 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  arg             3    0[COMMON] unsigned um
  7452 ;;  exp             1    3[COMMON] unsigned char 
  7453 ;;  sign            1    4[COMMON] unsigned char 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  3    0[COMMON] float 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7465 ;;      Params:         5       0       0       0       0
  7466 ;;      Locals:         0       0       0       0       0
  7467 ;;      Temps:          3       0       0       0       0
  7468 ;;      Totals:         8       0       0       0       0
  7469 ;;Total ram usage:        8 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		___lwtoft
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           
  7479                           ;psect for function ___ftpack
  7480  0BBA                     ___ftpack:	
  7481                           
  7482                           ;incstack = 0
  7483                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7484  0BBA  0873               	movf	___ftpack@exp,w
  7485  0BBB  1903               	btfsc	3,2
  7486  0BBC  2BC2               	goto	i1l2029
  7487  0BBD  0872               	movf	___ftpack@arg+2,w
  7488  0BBE  0471               	iorwf	___ftpack@arg+1,w
  7489  0BBF  0470               	iorwf	___ftpack@arg,w
  7490  0BC0  1D03               	skipz
  7491  0BC1  2BD5               	goto	i1l2035
  7492  0BC2                     i1l2029:	
  7493  0BC2  3000               	movlw	0
  7494  0BC3  00F0               	movwf	?___ftpack
  7495  0BC4  3000               	movlw	0
  7496  0BC5  00F1               	movwf	?___ftpack+1
  7497  0BC6  3000               	movlw	0
  7498  0BC7  00F2               	movwf	?___ftpack+2
  7499  0BC8  0008               	return
  7500  0BC9                     i1l2033:	
  7501  0BC9  3001               	movlw	1
  7502  0BCA  00F5               	movwf	??___ftpack
  7503  0BCB  0875               	movf	??___ftpack,w
  7504  0BCC  07F3               	addwf	___ftpack@exp,f
  7505  0BCD  3001               	movlw	1
  7506  0BCE                     u154_25:	
  7507  0BCE  1003               	clrc
  7508  0BCF  0CF2               	rrf	___ftpack@arg+2,f
  7509  0BD0  0CF1               	rrf	___ftpack@arg+1,f
  7510  0BD1  0CF0               	rrf	___ftpack@arg,f
  7511  0BD2  3EFF               	addlw	-1
  7512  0BD3  1D03               	skipz
  7513  0BD4  2BCE               	goto	u154_25
  7514  0BD5                     i1l2035:	
  7515  0BD5  30FE               	movlw	254
  7516  0BD6  0572               	andwf	___ftpack@arg+2,w
  7517  0BD7  1903               	btfsc	3,2
  7518  0BD8  2BF0               	goto	i1l772
  7519  0BD9  2BC9               	goto	i1l2033
  7520  0BDA                     i1l2037:	
  7521  0BDA  3001               	movlw	1
  7522  0BDB  00F5               	movwf	??___ftpack
  7523  0BDC  0875               	movf	??___ftpack,w
  7524  0BDD  07F3               	addwf	___ftpack@exp,f
  7525  0BDE  3001               	movlw	1
  7526  0BDF  07F0               	addwf	___ftpack@arg,f
  7527  0BE0  3000               	movlw	0
  7528  0BE1  1803               	skipnc
  7529  0BE2  3001               	movlw	1
  7530  0BE3  07F1               	addwf	___ftpack@arg+1,f
  7531  0BE4  3000               	movlw	0
  7532  0BE5  1803               	skipnc
  7533  0BE6  3001               	movlw	1
  7534  0BE7  07F2               	addwf	___ftpack@arg+2,f
  7535  0BE8  3001               	movlw	1
  7536  0BE9                     u156_25:	
  7537  0BE9  1003               	clrc
  7538  0BEA  0CF2               	rrf	___ftpack@arg+2,f
  7539  0BEB  0CF1               	rrf	___ftpack@arg+1,f
  7540  0BEC  0CF0               	rrf	___ftpack@arg,f
  7541  0BED  3EFF               	addlw	-1
  7542  0BEE  1D03               	skipz
  7543  0BEF  2BE9               	goto	u156_25
  7544  0BF0                     i1l772:	
  7545  0BF0  30FF               	movlw	255
  7546  0BF1  0572               	andwf	___ftpack@arg+2,w
  7547  0BF2  1903               	btfsc	3,2
  7548  0BF3  2BFF               	goto	i1l2045
  7549  0BF4  2BDA               	goto	i1l2037
  7550  0BF5                     i1l2043:	
  7551  0BF5  3001               	movlw	1
  7552  0BF6  02F3               	subwf	___ftpack@exp,f
  7553  0BF7  3001               	movlw	1
  7554  0BF8                     u158_25:	
  7555  0BF8  1003               	clrc
  7556  0BF9  0DF0               	rlf	___ftpack@arg,f
  7557  0BFA  0DF1               	rlf	___ftpack@arg+1,f
  7558  0BFB  0DF2               	rlf	___ftpack@arg+2,f
  7559  0BFC  3EFF               	addlw	-1
  7560  0BFD  1D03               	skipz
  7561  0BFE  2BF8               	goto	u158_25
  7562  0BFF                     i1l2045:	
  7563  0BFF  1FF1               	btfss	___ftpack@arg+1,7
  7564  0C00  2BF5               	goto	i1l2043
  7565  0C01  1873               	btfsc	___ftpack@exp,0
  7566  0C02  2C09               	goto	i1l778
  7567  0C03  30FF               	movlw	255
  7568  0C04  05F0               	andwf	___ftpack@arg,f
  7569  0C05  307F               	movlw	127
  7570  0C06  05F1               	andwf	___ftpack@arg+1,f
  7571  0C07  30FF               	movlw	255
  7572  0C08  05F2               	andwf	___ftpack@arg+2,f
  7573  0C09                     i1l778:	
  7574  0C09  1003               	clrc
  7575  0C0A  0CF3               	rrf	___ftpack@exp,f
  7576  0C0B  0873               	movf	___ftpack@exp,w
  7577  0C0C  00F5               	movwf	??___ftpack
  7578  0C0D  01F6               	clrf	??___ftpack+1
  7579  0C0E  01F7               	clrf	??___ftpack+2
  7580  0C0F  3010               	movlw	16
  7581  0C10                     u161_25:	
  7582  0C10  1003               	clrc
  7583  0C11  0DF5               	rlf	??___ftpack,f
  7584  0C12  0DF6               	rlf	??___ftpack+1,f
  7585  0C13  0DF7               	rlf	??___ftpack+2,f
  7586  0C14  3EFF               	addlw	-1
  7587  0C15  1D03               	skipz
  7588  0C16  2C10               	goto	u161_25
  7589  0C17  0875               	movf	??___ftpack,w
  7590  0C18  04F0               	iorwf	___ftpack@arg,f
  7591  0C19  0876               	movf	??___ftpack+1,w
  7592  0C1A  04F1               	iorwf	___ftpack@arg+1,f
  7593  0C1B  0877               	movf	??___ftpack+2,w
  7594  0C1C  04F2               	iorwf	___ftpack@arg+2,f
  7595  0C1D  0874               	movf	___ftpack@sign,w
  7596  0C1E  1903               	btfsc	3,2
  7597  0C1F  0008               	return
  7598  0C20  17F2               	bsf	___ftpack@arg+2,7
  7599  0C21  0008               	return
  7600  0C22                     __end_of___ftpack:	
  7601                           
  7602                           	psect	text36
  7603  0B5B                     __ptext36:	
  7604 ;; *************** function ___ftge *****************
  7605 ;; Defined at:
  7606 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;  ff1             3    0[BANK0 ] float 
  7609 ;;  ff2             3    3[BANK0 ] float 
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;		None               void
  7614 ;; Registers used:
  7615 ;;		wreg, status,2, status,0
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7621 ;;      Params:         0       6       0       0       0
  7622 ;;      Locals:         0       0       0       0       0
  7623 ;;      Temps:          0       6       0       0       0
  7624 ;;      Totals:         0      12       0       0       0
  7625 ;;Total ram usage:       12 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; This function calls:
  7628 ;;		Nothing
  7629 ;; This function is called by:
  7630 ;;		_Fuzzy
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           
  7635                           ;psect for function ___ftge
  7636  0B5B                     ___ftge:	
  7637                           
  7638                           ;incstack = 0
  7639                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7640  0B5B  1283               	bcf	3,5	;RP0=0, select bank0
  7641  0B5C  1303               	bcf	3,6	;RP1=0, select bank0
  7642  0B5D  1FA2               	btfss	___ftge@ff1+2,7
  7643  0B5E  2B84               	goto	i1l2241
  7644  0B5F  3000               	movlw	0
  7645  0B60  00A6               	movwf	??___ftge
  7646  0B61  3000               	movlw	0
  7647  0B62  00A7               	movwf	??___ftge+1
  7648  0B63  3080               	movlw	128
  7649  0B64  00A8               	movwf	??___ftge+2
  7650  0B65  0920               	comf	___ftge@ff1,w
  7651  0B66  00A9               	movwf	??___ftge+3
  7652  0B67  0921               	comf	___ftge@ff1+1,w
  7653  0B68  00AA               	movwf	??___ftge+4
  7654  0B69  0922               	comf	___ftge@ff1+2,w
  7655  0B6A  00AB               	movwf	??___ftge+5
  7656  0B6B  0AA9               	incf	??___ftge+3,f
  7657  0B6C  1903               	skipnz
  7658  0B6D  0AAA               	incf	??___ftge+4,f
  7659  0B6E  1903               	skipnz
  7660  0B6F  0AAB               	incf	??___ftge+5,f
  7661  0B70  0829               	movf	??___ftge+3,w
  7662  0B71  07A6               	addwf	??___ftge,f
  7663  0B72  082A               	movf	??___ftge+4,w
  7664  0B73  1803               	skipnc
  7665  0B74  0F2A               	incfsz	??___ftge+4,w
  7666  0B75  2B77               	goto	u204_21
  7667  0B76  2B78               	goto	u204_22
  7668  0B77                     u204_21:	
  7669  0B77  07A7               	addwf	??___ftge+1,f
  7670  0B78                     u204_22:	
  7671  0B78  082B               	movf	??___ftge+5,w
  7672  0B79  1803               	skipnc
  7673  0B7A  0F2B               	incfsz	??___ftge+5,w
  7674  0B7B  2B7D               	goto	u204_23
  7675  0B7C  2B7E               	goto	u204_24
  7676  0B7D                     u204_23:	
  7677  0B7D  07A8               	addwf	??___ftge+2,f
  7678  0B7E                     u204_24:	
  7679  0B7E  0826               	movf	??___ftge,w
  7680  0B7F  00A0               	movwf	___ftge@ff1
  7681  0B80  0827               	movf	??___ftge+1,w
  7682  0B81  00A1               	movwf	___ftge@ff1+1
  7683  0B82  0828               	movf	??___ftge+2,w
  7684  0B83  00A2               	movwf	___ftge@ff1+2
  7685  0B84                     i1l2241:	
  7686  0B84  1FA5               	btfss	___ftge@ff2+2,7
  7687  0B85  2BAB               	goto	i1l2245
  7688  0B86  3000               	movlw	0
  7689  0B87  00A6               	movwf	??___ftge
  7690  0B88  3000               	movlw	0
  7691  0B89  00A7               	movwf	??___ftge+1
  7692  0B8A  3080               	movlw	128
  7693  0B8B  00A8               	movwf	??___ftge+2
  7694  0B8C  0923               	comf	___ftge@ff2,w
  7695  0B8D  00A9               	movwf	??___ftge+3
  7696  0B8E  0924               	comf	___ftge@ff2+1,w
  7697  0B8F  00AA               	movwf	??___ftge+4
  7698  0B90  0925               	comf	___ftge@ff2+2,w
  7699  0B91  00AB               	movwf	??___ftge+5
  7700  0B92  0AA9               	incf	??___ftge+3,f
  7701  0B93  1903               	skipnz
  7702  0B94  0AAA               	incf	??___ftge+4,f
  7703  0B95  1903               	skipnz
  7704  0B96  0AAB               	incf	??___ftge+5,f
  7705  0B97  0829               	movf	??___ftge+3,w
  7706  0B98  07A6               	addwf	??___ftge,f
  7707  0B99  082A               	movf	??___ftge+4,w
  7708  0B9A  1803               	skipnc
  7709  0B9B  0F2A               	incfsz	??___ftge+4,w
  7710  0B9C  2B9E               	goto	u206_21
  7711  0B9D  2B9F               	goto	u206_22
  7712  0B9E                     u206_21:	
  7713  0B9E  07A7               	addwf	??___ftge+1,f
  7714  0B9F                     u206_22:	
  7715  0B9F  082B               	movf	??___ftge+5,w
  7716  0BA0  1803               	skipnc
  7717  0BA1  0F2B               	incfsz	??___ftge+5,w
  7718  0BA2  2BA4               	goto	u206_23
  7719  0BA3  2BA5               	goto	u206_24
  7720  0BA4                     u206_23:	
  7721  0BA4  07A8               	addwf	??___ftge+2,f
  7722  0BA5                     u206_24:	
  7723  0BA5  0826               	movf	??___ftge,w
  7724  0BA6  00A3               	movwf	___ftge@ff2
  7725  0BA7  0827               	movf	??___ftge+1,w
  7726  0BA8  00A4               	movwf	___ftge@ff2+1
  7727  0BA9  0828               	movf	??___ftge+2,w
  7728  0BAA  00A5               	movwf	___ftge@ff2+2
  7729  0BAB                     i1l2245:	
  7730  0BAB  3080               	movlw	128
  7731  0BAC  06A2               	xorwf	___ftge@ff1+2,f
  7732  0BAD  3080               	movlw	128
  7733  0BAE  06A5               	xorwf	___ftge@ff2+2,f
  7734  0BAF  0825               	movf	___ftge@ff2+2,w
  7735  0BB0  0222               	subwf	___ftge@ff1+2,w
  7736  0BB1  1D03               	skipz
  7737  0BB2  0008               	return
  7738  0BB3  0824               	movf	___ftge@ff2+1,w
  7739  0BB4  0221               	subwf	___ftge@ff1+1,w
  7740  0BB5  1D03               	skipz
  7741  0BB6  0008               	return
  7742  0BB7  0823               	movf	___ftge@ff2,w
  7743  0BB8  0220               	subwf	___ftge@ff1,w
  7744  0BB9  0008               	return
  7745  0BBA                     __end_of___ftge:	
  7746  007E                     btemp	set	126	;btemp
  7747  007E                     wtemp	set	126
  7748  007E                     wtemp0	set	126
  7749  0080                     wtemp1	set	128
  7750  0082                     wtemp2	set	130
  7751  0084                     wtemp3	set	132
  7752  0086                     wtemp4	set	134
  7753  0088                     wtemp5	set	136
  7754  007F                     wtemp6	set	127
  7755  007E                     ttemp	set	126
  7756  007E                     ttemp0	set	126
  7757  0081                     ttemp1	set	129
  7758  0084                     ttemp2	set	132
  7759  0087                     ttemp3	set	135
  7760  007F                     ttemp4	set	127
  7761  007E                     ltemp	set	126
  7762  007E                     ltemp0	set	126
  7763  0082                     ltemp1	set	130
  7764  0086                     ltemp2	set	134
  7765  0080                     ltemp3	set	128


Data Sizes:
    Strings     263
    Constant    10
    Data        4
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      57
    BANK1            80     17      79
    BANK3            96     11      11
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK1[10]), display_rpm(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1256$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[6]), STR_17(CODE[6]), display_pwm(BANK1[10]), display_rpm(BANK1[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK1[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->_trapmf
    _Fuzzy->_trimf
    _Fuzzy->i1___wmul
    i1___wmul->i1___lwdiv
    i1_PWM_DutyCycle2->i1___wmul
    _trimf->i1___lwdiv
    _trapmf->i1___lwdiv
    ___lwtoft->___ftpack
    ___ftge->___lwtoft

Critical Paths under _main in BANK0

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->___ftge

Critical Paths under _main in BANK1

    _main->_USART_Init
    _sprintf->___lwmod
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6189
                                             14 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    3572
                                              4 BANK1      7     3      4
                                              0 BANK3     11    11      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                             23 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     626
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                             31 BANK0      2     2      0
                                              0 BANK1      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     899
                                             23 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                             24 BANK0      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                              6 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                             23 BANK0      9     1      8
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                             25 BANK0      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                             23 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                             25 BANK0      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                             23 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                             25 BANK0      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                             23 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   10731
                                             19 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                                7     5      2    9083
                                             12 BANK0      7     5      2
                             ___ftge
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     300
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 BANK0      4     2      2
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _trimf                                               14     6      8    1453
                                              8 COMMON     6     6      0
                                              0 BANK0      8     0      8
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              16     6     10    2310
                                              8 COMMON     6     6      0
                                              0 BANK0     10     0     10
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     474
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _max_val                                              4     0      4     472
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    2529
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1931
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) ___ftge                                              12     6      6    1288
                                              0 BANK0     12     6      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _max_val
     _trapmf
       i1___lwdiv
     _trimf
       i1___lwdiv
     i1_PWM_DutyCycle2
       i1___wmul (ARG)
         i1___lwdiv (ARG)
     i1___lwdiv
     i1___wmul
       i1___lwdiv (ARG)
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   i1_PWM_DutyCycle2
     i1___wmul (ARG)
       i1___lwdiv (ARG)
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      B       B       9       11.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     11      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      39       5       71.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A1      12        0.0%
ABS                  0      0      A1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue May 24 16:26:38 2022

           ?i1_PWM_DutyCycle2 0020                             _x 0053                             _y 0055  
                           pc 0002                   ?_LCD_Cursor 0037       __size_of_PWM_DutyCycle1 001B  
     __size_of_PWM_DutyCycle2 001B                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 00ED                            fsr 0004           ___wmul@multiplicand 0039  
          ??i1_PWM_DutyCycle2 0022              i1___wmul@product 007C                 _contagens_tm0 00A4  
                         l215 0DD3                           l240 0855                           l510 058D  
                         l611 09FE                           l492 0458                           l666 06C6  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0E83  
                         _tip 004F                           _rpm 00B8                           fsr0 0004  
                         _pwm 0049                           _sum 00BC    __size_of_USART_WriteString 0025  
                         indf 0000                  __CFG_FOSC$HS 0000             ??_LCD_WriteString 003B  
                __CFG_LVP$OFF 0000                          ?_ISR 0070                          l3101 05BE  
          LCD_WriteString@Str 0039                          l3111 05DB                          l3103 05C2  
                        l3121 05FD                          l3141 0639                          l3133 0631  
                        l3053 0461                          l3127 061A                          l3119 05F9  
                        l3071 051F                          l3055 0476                          l3143 041A  
                        l3081 0540                          l3145 06A9                          l3049 0454  
                        l3059 0492                          l3093 057F                          l3085 0546  
                        l3069 04FA                          l2473 09CD                          l2903 09F6  
                        l2593 09A8                          l2579 08C6                          l2931 06F0  
                        l2923 06DA                          l2941 0734                          l2933 0705  
                        l2945 0744                          l2971 0AAC                          l2963 0A88  
                        l2949 0754                          l2965 0A96                          l2975 0AB7  
                        l2993 0AEC                          l2897 08A8                          l2987 0AC8  
                        l2989 0ADC                          l2997 0AF9                          STR_1 10EA  
                        STR_2 10F8                          STR_3 1105                          STR_4 10CE  
                        STR_5 10B2                          STR_6 10A4                          STR_7 10DC  
                        STR_8 10C0                          STR_9 1086                          u3015 0708  
                        u3025 0721                          u3105 0AA3                          u3035 0735  
                        u3115 0AAD                          u3145 0ACF                          u3075 0A8B  
                        u2525 0919                          u3165 0AE4                          u3095 0A97  
                        u3175 0AED                          u3255 0571                          u3407 0E7C  
                        u3417 0894                          u2465 0934                          u3507 08CC  
                        u3427 0C2E                          u3195 0B0D                          u3517 0A23  
                        u3437 0C3E                          u3527 0A31                          u3447 0C4C  
                        u3295 05A6                          u3537 0A3D                          u3457 0C58  
                        u3547 0885                          u3467 0C64                          u3477 0C72  
                        u3397 0DCC                          u3487 0C80                          u2935 09FF  
                        u3497 0C8C                          u2945 0A06                          u2995 06F7  
                        _OERR 00C1                          _TMR0 0001                          _TMR1 000E  
                        _main 0D2E                  ___ftpack@arg 0070            __size_of_LCD_Clear 0029  
                ___ftpack@exp 0073                          _temp 004D                          btemp 007E  
            __end_of_ADC_Init 08BC                          ltemp 007E                          start 0012  
                        ttemp 007E                          wtemp 007E                 ?_LCD_WriteCmd 0070  
               _LCD_WriteData 088B       __end_of_USART_WriteChar 085A                         ??_ISR 0033  
                 ?_TIMER0_Set 0070              __end_of_LCD_Init 0C8F               __end_of___aldiv 076B  
                       ?_main 0070                         _EEADR 010D                         STR_10 1095  
                       STR_11 1044                         STR_12 1061                         STR_13 1075  
                       STR_14 111E                         STR_15 111E                         STR_16 1092  
                       STR_17 1118                 __CFG_WDTE$OFF 0000                         STR_18 1112  
                       STR_19 101C                         _T1CON 0010               __end_of___lwdiv 0ABE  
                       i1l240 084B                         i1l167 0059               __end_of___lwmod 0B02  
                       i1l611 0948                         i1l196 0EF4                         i1l199 0F10  
                       i1l772 0BF0                         i1l778 0C09                         _RCREG 001A  
                       _TMR1H 000F                         _TMR1L 000E                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _TXREG 0019                 __CFG_PWRTE$ON 0000  
                       _Fuzzy 0042                         _foTip 00AC                         _ideal 00AE  
                       _derro 00A8               __end_of_dpowers 101C               __end_of_max_val 087C  
             __end_of_isdigit 08AA                 ___ftpack@sign 0074                         _trimf 076B  
              __CFG_BOREN$OFF 0000           __size_of_LCD_Cursor 0016                         pclath 000A  
            __end_of_PWM_Init 09A8              __end_ofi1___wmul 0961                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
         i1___wmul@multiplier 0078                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __end_of_sprintf 06B0  
          __size_ofi1___lwdiv 003E                ??_LCD_WriteCmd 0037                ?_LCD_WriteData 0070  
                 ?_USART_Init 00E0         i1TIMER0_Set@contagens 0070               __initialization 0015  
                __end_of_main 0E83                        ??_main 00E8                  ?_TIMER0_Init 0070  
           __end_of_LCD_Clear 0A40                        ?_Fuzzy 002C                        _ADRESH 001E  
                      _ADRESL 009E                        _EEDATA 010C                        _CCPR1L 0015  
                      _CCPR2L 001B                        _EECON2 018D              __end_of___ftpack 0C22  
                      ?_trimf 0020                        i1l2103 07D6                        i1l2033 0BC9  
                      i1l2105 07E0                        i1l2043 0BF5                        i1l2035 0BD5  
                      i1l2123 0CC8                        i1l2107 07E2                        i1l2045 0BFF  
                      i1l2037 0BDA                        i1l2029 0BC2                        i1l2071 0A56  
                      i1l2135 0D19                        i1l2241 0B84                        i1l2081 0A77  
                      i1l2137 0D23                        i1l2129 0CDF                        i1l2139 0D25  
                      i1l2323 0940                        i1l2403 02AC                        i1l2315 0961  
                      i1l2245 0BAB                        i1l2077 0A6C                        i1l2069 0A48  
                      i1l2341 005A                        i1l2423 033A                        i1l2097 079A  
                      i1l2433 03AC                        i1l2409 02E5                        i1l2361 0110  
                      i1l2363 011D                        i1l2429 0384                        i1l2349 007C  
                      i1l2461 0905                        i1l2453 08F6                        i1l2439 03F7  
                      i1l2391 021E                        i1l2393 022B                        i1l2377 0197  
                      i1l2379 01A4                        i1l2731 0EAB                        i1l2397 025A  
                      i1l2821 0FF0                        i1l2823 0FF1                        i1l2743 0ED9  
                      i1l2809 0FB1                        i1l2753 0EF5                        i1l2737 0EC2  
                      i1l2763 0F11                        i1l2781 0F56                        i1l2775 0F3F  
                      u204_21 0B77                        i1l2793 0F84                        i1l2769 0F28  
                      u204_22 0B78                        u204_23 0B7D                        i1l2787 0F6D  
                      u204_24 0B7E                        i1l2797 0F94                        u206_21 0B9E  
                      u206_22 0B9F                        u206_23 0BA4                        u206_24 0BA5  
                      u222_25 08E3                        u230_25 0105                        u224_25 0949  
                      u161_25 0C10                        u225_25 0950                        u233_25 018C  
                      u154_25 0BCE                        u171_25 0775                        u235_25 0213  
                      u156_25 0BE9                        u180_25 0CD0                        u172_25 077D  
                      u165_25 0A4B                        u181_25 0CD8                        u173_25 0785  
                      u158_25 0BF8                        u182_25 0CE5                        u174_25 07A2  
                      u167_25 0A57                        u183_25 0CED                        u175_25 07AA  
                      u168_25 0A63                        u184_25 0D21                        u176_25 07DE  
                      u185_25 0873                        u169_25 0A6D                        u177_25 0C99  
            __end_of___lwtoft 07FF                        u178_25 0CA1                        u179_25 0CA9  
         __size_of_TIMER0_Set 0006                        _SSPADD 0093                        _SSPBUF 0013  
            LCD_WriteCmd@Byte 0038           i1_USART_WriteString 0961                        ___ftge 0B5B  
                   ??___aldiv 003F                        ___wmul 09F2                _PWM_DutyCycle1 0908  
              _PWM_DutyCycle2 0923              ?_USART_WriteChar 0070                        _deltaV 00A6  
                   ??___lwdiv 003B                     ??___lwmod 003F                        _fitemp 0041  
       USART_ReceiveChar@byte 0074                        _pwmAnt 004B                        _trapmf 0C8F  
                      _pulsos 00B6                        _status 00BA                     ??_max_val 0074  
           __end_ofi1___lwdiv 0A7E                     ??_isdigit 0037                     ?_ADC_Init 0070  
                      saved_w 007E          ?i1_USART_WriteString 0071           __size_of_USART_Init 0059  
                      trimf@a 0022                        trimf@b 0024                        trimf@c 0026  
                      trimf@x 0020                     ??_sprintf 00E2                 ?i1_TIMER0_Set 0070  
     __end_of__initialization 003E                     ?_LCD_Init 0070               ??_LCD_WriteData 0037  
                  ___ftge@ff1 0020                    ___ftge@ff2 0023        __end_of_PWM_DutyCycle1 0923  
      __end_of_PWM_DutyCycle2 093E                __pcstackCOMMON 0070                 __end_of_Fuzzy 040F  
                __pidataBANK1 083A                 LCD_Cursor@Col 0037                 LCD_Cursor@Row 0039  
                ??_LCD_Cursor 0038               _LCD_WriteString 09A8                 __end_of_trimf 07EB  
                  ___lwtoft@c 0078                     ?_PWM_Init 0070                     ?i1___wmul 0078  
              _OPTION_REGbits 0081                    ??_ADC_Init 0037          __end_of_LCD_WriteCmd 088B  
       ??i1_USART_WriteString 0073                       ??_Fuzzy 002E     __size_ofi1_PWM_DutyCycle2 001B  
              ??i1_TIMER0_Set 0070                  sprintf@width 0197                       ??_trimf 0078  
                  __pbssBANK0 0041                    __pbssBANK1 00A0            __end_of_LCD_Cursor 08D2  
                  ??_LCD_Init 0039         i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 0037  
             ?_PWM_DutyCycle2 0037                    __pmaintext 0D2E                       ?___ftge 0020  
                     ?___wmul 0037                    __pintentry 0004                  ??_TIMER0_Set 0037  
                     _CCP1CON 0017                       _CCP2CON 001D                     ?___ftpack 0070  
                     ?_trapmf 0020                    ??_PWM_Init 0037                    ??i1___wmul 007C  
                   ?___lwtoft 0078                 Fuzzy@setpoint 002C          __size_of_TIMER0_Init 000B  
     _posicao_do_grafico_food 00B2                       _SSPCON2 0091                    __stringtab 1000  
                  _fisetpoint 00AA            __end_of_TIMER0_Set 084A       __end_of_LCD_WriteString 09CD  
                   _ADCResult 00A0                  ??_USART_Init 00E4             LCD_WriteData@Byte 0038  
                     ___aldiv 06B0               __size_of___ftge 005F               __size_of___wmul 0025  
                     ___lwdiv 0A7E                       ___lwmod 0ABE                    ??___ftpack 0075  
          _posicao_do_grafico 00B0                       __ptext1 040F                       __ptext2 089A  
                     __ptext3 09F2                       __ptext4 0ABE                       __ptext5 0A7E  
                     __ptext6 09CD                       __ptext7 0852                       __ptext8 0B02  
                     __ptext9 06B0                    _pas_cooler 00EB                    ??___lwtoft 007B  
             __size_of_trapmf 009F                  __size_of_ISR 017D                     _T1CONbits 0010  
                     _dpowers 1012             i1___lwdiv@divisor 0070                     _T2CONbits 0012  
                     _max_val 086D                       _isdigit 089A             i1___lwdiv@counter 0077  
            ___aldiv@dividend 003B                     _LCD_Clear 0A17            __end_of_USART_Init 0B5B  
                     _sprintf 040F                       clrloop0 085B          end_of_initialization 003E  
             Fuzzy@velocidade 0030                     _RCSTAbits 0018              ___aldiv@quotient 00DC  
                     trapmf@a 0022                       trapmf@b 0024                       trapmf@c 0026  
                     trapmf@d 0028                       trapmf@x 0020                       trimf@ua 007C  
                __pstringtext 1000          __end_ofi1_TIMER0_Set 0844         i1___wmul@multiplicand 007A  
       __size_of_LCD_WriteCmd 000F                     _PORTBbits 0006                     _PORTEbits 0009  
                  ?_LCD_Clear 0070              i1_PWM_DutyCycle2 08D2             __size_of_ADC_Init 0012  
                   i1___lwdiv 0A40                  _contador_rb6 00A2           PWM_DutyCycle1@valor 0037  
                  _total_area 0051           PWM_DutyCycle2@valor 0037                   _CCP1CONbits 0017  
                 _CCP2CONbits 001D                     _TXSTAbits 0098              ?_LCD_WriteString 0039  
           __size_of_LCD_Init 006D                  _LCD_WriteCmd 087C                __end_of___ftge 0BBA  
              __end_of___wmul 0A17             i1_USART_WriteChar 084A            ?i1_USART_WriteChar 0070  
              __end_of_trapmf 0D2E      __size_of_USART_WriteChar 0008             __size_of_PWM_Init 0024  
         start_initialization 0015             __size_ofi1___wmul 0023                   __end_of_ISR 1000  
         ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070              ??_PWM_DutyCycle1 0039  
            ??_PWM_DutyCycle2 0039         __end_of_LCD_WriteData 089A             _USART_ReceiveChar 08ED  
                    ??___ftge 0026            ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 0852  
                    ??___wmul 003B                   __pdataBANK1 00EB   __end_ofi1_USART_WriteString 0984  
                    ??_trapmf 0078           ??_USART_ReceiveChar 0073             __size_of___ftpack 0068  
                   ___latbits 0002             __size_of___lwtoft 0014                 __pcstackBANK0 0020  
               __pcstackBANK1 00DA                 __pcstackBANK3 0190                   ??_LCD_Clear 0039  
         __end_of__stringdata 1123                  _isdigit$1452 0037                   sprintf@_val 0192  
                 sprintf@flag 0196                   sprintf@prec 0191     __end_of_USART_ReceiveChar 0908  
       __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 0039           TIMER0_Set@contagens 0037  
                    ?___aldiv 0037                      ?___lwdiv 0037                      ?___lwmod 00DA  
                   _ativa_fan 0057                 ??_TIMER0_Init 0037            USART_Init@BaudRate 00E0  
                    ?_max_val 0070                      ?_isdigit 0070                      _ADC_Init 08AA  
                   _fop_rule1 0043                     _fop_rule2 0045                     _fop_rule3 0047  
              __size_of_Fuzzy 03CD    _posicao_do_grafico_service 00B4              ___lwdiv@quotient 003D  
                 ??i1___lwdiv 0074                      ?_sprintf 00DE                __size_of_trimf 0080  
           ??_USART_WriteChar 0037                  i1_TIMER0_Set 083E               ___aldiv@divisor 0037  
           interrupt_function 0004               ___aldiv@counter 00DA                      _LCD_Init 0C22  
              ___wmul@product 003B                     clear_ram0 085A                      _PIE1bits 008C  
                    _PIE2bits 008D                      _PIR1bits 000C                      _PIR2bits 000D  
                   _temp_lida 00BE      __end_ofi1_PWM_DutyCycle2 08ED                     _tempo_rb6 00C0  
  __size_ofi1_USART_WriteChar 0008                   _display_rpm 00D0                   _display_pwm 00C6  
                  _ADCON0bits 001F                   __stringbase 1012                    _ADCON1bits 009F  
                 __stringdata 101C                      _PWM_Init 0984             ___wmul@multiplier 0037  
                    i1___wmul 093E           __end_of_TIMER0_Init 086D    __size_of_USART_ReceiveChar 001B  
                  _EECON1bits 018C                      Fuzzy@sum 0031              __size_of___aldiv 00BB  
            __size_of___lwdiv 0040              __size_of___lwmod 0044                      ___ftpack 0BBA  
          __end_of__stringtab 1012                      ___lwtoft 07EB              __size_of_max_val 000F  
            __size_of_isdigit 0010               ___lwdiv@divisor 0037               ___lwdiv@counter 003C  
           _USART_WriteString 09CD                      __ptext10 0844                      __ptext11 0862  
                    __ptext20 087C                      __ptext12 0984                      __ptext21 08AA  
                    __ptext13 0923                      __ptext30 076B                      __ptext22 0E83  
                    __ptext14 0908                      __ptext31 0C8F                      __ptext23 083E  
                    __ptext15 09A8                      __ptext32 0A40                      __ptext24 08ED  
                    __ptext16 088B                      __ptext33 086D                      __ptext25 0961  
                    __ptext17 0C22                      __ptext34 07EB                      __ptext26 084A  
                    __ptext18 08BC                      __ptext35 0BBA                      __ptext27 0042  
                    __ptext19 0A17                      __ptext36 0B5B                      __ptext28 093E  
                    __ptext29 08D2            ?_USART_WriteString 0038              __size_of_sprintf 02A1  
          i1___lwdiv@dividend 0072                 __size_of_main 0155           USART_WriteChar@byte 0037  
         ??_USART_WriteString 003A        i1USART_WriteString@str 0071                    _LCD_Cursor 08BC  
    __size_of_LCD_WriteString 0025            i1___lwdiv@quotient 0075                   _TIMER0_Init 0862  
                  _INTCONbits 000B     __end_of_USART_WriteString 09F2                      max_val@a 0070  
                    max_val@b 0072                      isdigit@c 0038                      intlevel1 0000  
                   sprintf@ap 0190                     sprintf@sp 0199              ___lwmod@dividend 00DC  
                   stringcode 100A                  _tip_gorgeous 00C4          USART_WriteString@str 0038  
                  _TIMER0_Set 0844                      trapmf@ua 007C               _USART_WriteChar 0852  
                    sprintf@c 019A                      sprintf@f 00DE               ___lwmod@divisor 00DA  
             ___lwmod@counter 0040                   _tip_average 00C2                      stringtab 1000  
                ___aldiv@sign 00DB        __size_of_LCD_WriteData 000F  __size_ofi1_USART_WriteString 0023  
                 _SSPCON2bits 0091         i1PWM_DutyCycle2@valor 0020                    _SSPCONbits 0014  
                  _USART_Init 0B02  
