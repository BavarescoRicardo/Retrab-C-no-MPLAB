

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Jun 21 23:00:15 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK0
   603  0800                     __pidataBANK0:	
   604                           
   605                           ;initializer for _tf
   606  0800  3400               	retlw	0
   607  0801  3448               	retlw	72
   608  0802  3442               	retlw	66
   609                           
   610                           	psect	idataBANK1
   611  11FC                     __pidataBANK1:	
   612                           
   613                           ;initializer for _setpoint
   614  11FC  3400               	retlw	0
   615  11FD  34A0               	retlw	160
   616  11FE  3441               	retlw	65
   617                           
   618                           ;initializer for _pas_cooler
   619  11FF  3407               	retlw	7
   620  1200  3400               	retlw	0
   621                           
   622                           	psect	idataBANK3
   623  07FE                     __pidataBANK3:	
   624                           
   625                           ;initializer for _pwm
   626  07FE  3432               	retlw	50
   627  07FF  3400               	retlw	0
   628                           
   629                           	psect	strings
   630  1000                     __pstrings:	
   631  1000                     stringtab:	
   632  1000                     __stringtab:	
   633                           
   634                           ;	String table - string pointers are 1 byte each
   635  1000  1BFF               	btfsc	btemp+1,7
   636  1001  280A               	ljmp	stringcode
   637  1002  1383               	bcf	3,7
   638  1003  187F               	btfsc	btemp+1,0
   639  1004  1783               	bsf	3,7
   640  1005  0800               	movf	0,w
   641  1006  0A84               	incf	4,f
   642  1007  1903               	skipnz
   643  1008  0AFF               	incf	btemp+1,f
   644  1009  0008               	return
   645  100A                     stringcode:	
   646  100A                     stringdir:	
   647  100A  3010               	movlw	high stringdir
   648  100B  008A               	movwf	10
   649  100C  0804               	movf	4,w
   650  100D  0A84               	incf	4,f
   651  100E  0782               	addwf	2,f
   652  100F                     __stringbase:	
   653  100F  3400               	retlw	0
   654  1010                     __end_of__stringtab:	
   655  1010                     _dpowers:	
   656  1010  3401               	retlw	1
   657  1011  3400               	retlw	0
   658  1012  340A               	retlw	10
   659  1013  3400               	retlw	0
   660  1014  3464               	retlw	100
   661  1015  3400               	retlw	0
   662  1016  34E8               	retlw	232
   663  1017  3403               	retlw	3
   664  1018  3410               	retlw	16
   665  1019  3427               	retlw	39
   666  101A                     __end_of_dpowers:	
   667  000E                     _TMR1	set	14
   668  001F                     _ADCON0bits	set	31
   669  001E                     _ADRESH	set	30
   670  0017                     _CCP1CON	set	23
   671  0017                     _CCP1CONbits	set	23
   672  001D                     _CCP2CON	set	29
   673  001D                     _CCP2CONbits	set	29
   674  0015                     _CCPR1L	set	21
   675  001B                     _CCPR2L	set	27
   676  000B                     _INTCONbits	set	11
   677  000C                     _PIR1bits	set	12
   678  000D                     _PIR2bits	set	13
   679  0005                     _PORTA	set	5
   680  0006                     _PORTB	set	6
   681  0006                     _PORTBbits	set	6
   682  0007                     _PORTC	set	7
   683  0008                     _PORTD	set	8
   684  0009                     _PORTE	set	9
   685  0009                     _PORTEbits	set	9
   686  001A                     _RCREG	set	26
   687  0018                     _RCSTAbits	set	24
   688  0013                     _SSPBUF	set	19
   689  0014                     _SSPCONbits	set	20
   690  0010                     _T1CON	set	16
   691  0010                     _T1CONbits	set	16
   692  0012                     _T2CONbits	set	18
   693  0001                     _TMR0	set	1
   694  000F                     _TMR1H	set	15
   695  000E                     _TMR1L	set	14
   696  0019                     _TXREG	set	25
   697  00C1                     _OERR	set	193
   698  009F                     _ADCON1bits	set	159
   699  009E                     _ADRESL	set	158
   700  0081                     _OPTION_REGbits	set	129
   701  008C                     _PIE1bits	set	140
   702  008D                     _PIE2bits	set	141
   703  0092                     _PR2	set	146
   704  0099                     _SPBRG	set	153
   705  0093                     _SSPADD	set	147
   706  0091                     _SSPCON2	set	145
   707  0091                     _SSPCON2bits	set	145
   708  0094                     _SSPSTATbits	set	148
   709  0085                     _TRISA	set	133
   710  0086                     _TRISB	set	134
   711  0087                     _TRISC	set	135
   712  0088                     _TRISD	set	136
   713  0089                     _TRISE	set	137
   714  0098                     _TXSTAbits	set	152
   715  010D                     _EEADR	set	269
   716  010C                     _EEDATA	set	268
   717  018C                     _EECON1bits	set	396
   718  018D                     _EECON2	set	397
   719  101A                     __stringdata:	
   720  101A                     STR_5:	
   721  101A  340A               	retlw	10
   722  101B  340D               	retlw	13
   723  101C  3420               	retlw	32	;' '
   724  101D  342D               	retlw	45	;'-'
   725  101E  342D               	retlw	45	;'-'
   726  101F  342D               	retlw	45	;'-'
   727  1020  342D               	retlw	45	;'-'
   728  1021  342D               	retlw	45	;'-'
   729  1022  342D               	retlw	45	;'-'
   730  1023  342D               	retlw	45	;'-'
   731  1024  3420               	retlw	32	;' '
   732  1025  3445               	retlw	69	;'E'
   733  1026  3453               	retlw	83	;'S'
   734  1027  3454               	retlw	84	;'T'
   735  1028  344F               	retlw	79	;'O'
   736  1029  3455               	retlw	85	;'U'
   737  102A  3452               	retlw	82	;'R'
   738  102B  344F               	retlw	79	;'O'
   739  102C  3420               	retlw	32	;' '
   740  102D  3444               	retlw	68	;'D'
   741  102E  3445               	retlw	69	;'E'
   742  102F  3420               	retlw	32	;' '
   743  1030  3450               	retlw	80	;'P'
   744  1031  3449               	retlw	73	;'I'
   745  1032  344C               	retlw	76	;'L'
   746  1033  3448               	retlw	72	;'H'
   747  1034  3441               	retlw	65	;'A'
   748  1035  3420               	retlw	32	;' '
   749  1036  342D               	retlw	45	;'-'
   750  1037  342D               	retlw	45	;'-'
   751  1038  342D               	retlw	45	;'-'
   752  1039  342D               	retlw	45	;'-'
   753  103A  342D               	retlw	45	;'-'
   754  103B  342D               	retlw	45	;'-'
   755  103C  342D               	retlw	45	;'-'
   756  103D  3420               	retlw	32	;' '
   757  103E  340A               	retlw	10
   758  103F  340D               	retlw	13
   759  1040  3420               	retlw	32	;' '
   760  1041  3400               	retlw	0
   761  1042                     STR_2:	
   762  1042  3449               	retlw	73	;'I'
   763  1043  346E               	retlw	110	;'n'
   764  1044  3469               	retlw	105	;'i'
   765  1045  3463               	retlw	99	;'c'
   766  1046  3469               	retlw	105	;'i'
   767  1047  3461               	retlw	97	;'a'
   768  1048  346C               	retlw	108	;'l'
   769  1049  3469               	retlw	105	;'i'
   770  104A  347A               	retlw	122	;'z'
   771  104B  3461               	retlw	97	;'a'
   772  104C  346E               	retlw	110	;'n'
   773  104D  3464               	retlw	100	;'d'
   774  104E  346F               	retlw	111	;'o'
   775  104F  342E               	retlw	46	;'.'
   776  1050  342E               	retlw	46	;'.'
   777  1051  342E               	retlw	46	;'.'
   778  1052  3400               	retlw	0
   779  1053                     STR_1:	
   780  1053  340A               	retlw	10
   781  1054  340D               	retlw	13
   782  1055  3464               	retlw	100	;'d'
   783  1056  3465               	retlw	101	;'e'
   784  1057  3473               	retlw	115	;'s'
   785  1058  346C               	retlw	108	;'l'
   786  1059  3469               	retlw	105	;'i'
   787  105A  3467               	retlw	103	;'g'
   788  105B  3461               	retlw	97	;'a'
   789  105C  3464               	retlw	100	;'d'
   790  105D  346F               	retlw	111	;'o'
   791  105E  340A               	retlw	10
   792  105F  340D               	retlw	13
   793  1060  3400               	retlw	0
   794  1061                     STR_4:	
   795  1061  3452               	retlw	82	;'R'
   796  1062  3450               	retlw	80	;'P'
   797  1063  344D               	retlw	77	;'M'
   798  1064  343A               	retlw	58	;':'
   799  1065  3420               	retlw	32	;' '
   800  1066  3400               	retlw	0
   801  1067                     STR_3:	
   802  1067  3425               	retlw	37	;'%'
   803  1068  3430               	retlw	48	;'0'
   804  1069  3434               	retlw	52	;'4'
   805  106A  3464               	retlw	100	;'d'
   806  106B  3400               	retlw	0
   807  106C                     __end_of__stringdata:	
   808                           
   809                           ; #config settings
   810  0000                     
   811                           	psect	cinit
   812  0015                     start_initialization:	
   813  0015                     __initialization:	
   814                           
   815                           ; Clear objects allocated to BANK1
   816  0015  1383               	bcf	3,7	;select IRP bank0
   817  0016  30A0               	movlw	low __pbssBANK1
   818  0017  0084               	movwf	4
   819  0018  30C9               	movlw	low (__pbssBANK1+41)
   820  0019  160A  118A  2217  120A  118A  	fcall	clear_ram0
   821                           
   822                           ; Clear objects allocated to BANK3
   823  001E  1783               	bsf	3,7	;select IRP bank2
   824  001F  3090               	movlw	low __pbssBANK3
   825  0020  0084               	movwf	4
   826  0021  30A1               	movlw	low (__pbssBANK3+17)
   827  0022  160A  118A  2217  120A  118A  	fcall	clear_ram0
   828                           
   829                           ; Initialize objects allocated to BANK3
   830  0027  1683               	bsf	3,5	;RP0=1, select bank3
   831  0028  1703               	bsf	3,6	;RP1=1, select bank3
   832  0029  120A  118A  27FE  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   833  002E  00A1               	movwf	__pdataBANK3& (0+127)
   834  002F  120A  118A  27FF  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   835  0034  00A2               	movwf	(__pdataBANK3+1)& (0+127)
   836                           
   837                           ; Initialize objects allocated to BANK1
   838  0035  1683               	bsf	3,5	;RP0=1, select bank1
   839  0036  1303               	bcf	3,6	;RP1=0, select bank1
   840  0037  160A  118A  21FC  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   841  003C  00EB               	movwf	__pdataBANK1& (0+127)
   842  003D  160A  118A  21FD  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   843  0042  00EC               	movwf	(__pdataBANK1+1)& (0+127)
   844  0043  160A  118A  21FE  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   845  0048  00ED               	movwf	(__pdataBANK1+2)& (0+127)
   846  0049  160A  118A  21FF  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   847  004E  00EE               	movwf	(__pdataBANK1+3)& (0+127)
   848  004F  160A  118A  2200  120A  118A  	fcall	__pidataBANK1+4	;fetch initializer
   849  0054  00EF               	movwf	(__pdataBANK1+4)& (0+127)
   850                           
   851                           ; Initialize objects allocated to BANK0
   852  0055  1283               	bcf	3,5	;RP0=0, select bank0
   853  0056  1303               	bcf	3,6	;RP1=0, select bank0
   854  0057  120A  158A  2000  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   855  005C  00ED               	movwf	__pdataBANK0& (0+127)
   856  005D  120A  158A  2001  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   857  0062  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   858  0063  120A  158A  2002   	fcall	__pidataBANK0+2	;fetch initializer
   859  0066  00EF               	movwf	(__pdataBANK0+2)& (0+127)
   860  0067                     end_of_initialization:	
   861                           ;End of C runtime variable initialization code
   862                           
   863  0067                     __end_of__initialization:	
   864  0067  0183               	clrf	3
   865  0068  120A  158A  28A8   	ljmp	_main	;jump to C main() function
   866                           
   867                           	psect	dataBANK0
   868  006D                     __pdataBANK0:	
   869  006D                     _tf:	
   870  006D                     	ds	3
   871                           
   872                           	psect	bssBANK1
   873  00A0                     __pbssBANK1:	
   874  00A0                     _ativa_fan:	
   875  00A0                     	ds	3
   876  00A3                     _fitemp:	
   877  00A3                     	ds	3
   878  00A6                     _fop_rule1:	
   879  00A6                     	ds	3
   880  00A9                     _fop_rule2:	
   881  00A9                     	ds	3
   882  00AC                     _fop_rule3:	
   883  00AC                     	ds	3
   884  00AF                     _sum:	
   885  00AF                     	ds	3
   886  00B2                     _total_area:	
   887  00B2                     	ds	3
   888  00B5                     _x:	
   889  00B5                     	ds	3
   890  00B8                     _y:	
   891  00B8                     	ds	3
   892  00BB                     _ADCResult:	
   893  00BB                     	ds	2
   894  00BD                     _contagens_tm0:	
   895  00BD                     	ds	2
   896  00BF                     _deltaV:	
   897  00BF                     	ds	2
   898  00C1                     _pulsos:	
   899  00C1                     	ds	2
   900  00C3                     _rpm:	
   901  00C3                     	ds	2
   902  00C5                     _setpointUI:	
   903  00C5                     	ds	2
   904  00C7                     _status:	
   905  00C7                     	ds	2
   906                           
   907                           	psect	dataBANK1
   908  00EB                     __pdataBANK1:	
   909  00EB                     _setpoint:	
   910  00EB                     	ds	3
   911  00EE                     _pas_cooler:	
   912  00EE                     	ds	2
   913                           
   914                           	psect	bssBANK3
   915  0190                     __pbssBANK3:	
   916  0190                     _buffer:	
   917  0190                     	ds	7
   918  0197                     _display_rpm:	
   919  0197                     	ds	10
   920                           
   921                           	psect	dataBANK3
   922  01A1                     __pdataBANK3:	
   923  01A1                     _pwm:	
   924  01A1                     	ds	2
   925                           
   926                           	psect	clrtext
   927  1217                     clear_ram0:	
   928                           ;	Called with FSR containing the base address, and
   929                           ;	W with the last address+1
   930                           
   931  1217  0064               	clrwdt	;clear the watchdog before getting into this loop
   932  1218                     clrloop0:	
   933  1218  0180               	clrf	0	;clear RAM location pointed to by FSR
   934  1219  0A84               	incf	4,f	;increment pointer
   935  121A  0604               	xorwf	4,w	;XOR with final address
   936  121B  1903               	btfsc	3,2	;have we reached the end yet?
   937  121C  3400               	retlw	0	;all done for this memory range, return
   938  121D  0604               	xorwf	4,w	;XOR again to restore value
   939  121E  2A18               	goto	clrloop0	;do the next byte
   940                           
   941                           	psect	cstackBANK1
   942  00C9                     __pcstackBANK1:	
   943  00C9                     ?_PWM_DutyCycle2:	
   944  00C9                     ??_TIMER0_Set:	
   945                           ; 0 bytes @ 0x0
   946                           
   947  00C9                     ??_TIMER0_Init:	
   948                           ; 0 bytes @ 0x0
   949                           
   950  00C9                     ??_ADC_Init:	
   951                           ; 0 bytes @ 0x0
   952                           
   953  00C9                     ??_PWM_Init:	
   954                           ; 0 bytes @ 0x0
   955                           
   956  00C9                     ?_LCD_Cursor:	
   957                           ; 0 bytes @ 0x0
   958                           
   959  00C9                     ?_PWM_DutyCycle1:	
   960                           ; 0 bytes @ 0x0
   961                           
   962  00C9                     ??_isdigit:	
   963                           ; 0 bytes @ 0x0
   964                           
   965  00C9                     ??_LCD_WriteCmd:	
   966                           ; 0 bytes @ 0x0
   967                           
   968  00C9                     ??_LCD_WriteData:	
   969                           ; 0 bytes @ 0x0
   970                           
   971  00C9                     ?___wmul:	
   972                           ; 0 bytes @ 0x0
   973                           
   974  00C9                     ?___lwdiv:	
   975                           ; 2 bytes @ 0x0
   976                           
   977  00C9                     ?___aldiv:	
   978                           ; 2 bytes @ 0x0
   979                           
   980  00C9                     TIMER0_Set@contagens:	
   981                           ; 4 bytes @ 0x0
   982                           
   983  00C9                     LCD_Cursor@Col:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  00C9                     _isdigit$1439:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  00C9                     PWM_DutyCycle1@valor:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  00C9                     PWM_DutyCycle2@valor:	
   993                           ; 2 bytes @ 0x0
   994                           
   995  00C9                     ___wmul@multiplier:	
   996                           ; 2 bytes @ 0x0
   997                           
   998  00C9                     ___lwdiv@divisor:	
   999                           ; 2 bytes @ 0x0
  1000                           
  1001  00C9                     ___aldiv@divisor:	
  1002                           ; 2 bytes @ 0x0
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x0
  1006  00C9                     	ds	1
  1007  00CA                     ??_LCD_Cursor:	
  1008  00CA                     LCD_WriteCmd@Byte:	
  1009                           ; 0 bytes @ 0x1
  1010                           
  1011  00CA                     LCD_WriteData@Byte:	
  1012                           ; 1 bytes @ 0x1
  1013                           
  1014  00CA                     isdigit@c:	
  1015                           ; 1 bytes @ 0x1
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x1
  1019  00CA                     	ds	1
  1020  00CB                     ??_PWM_DutyCycle2:	
  1021  00CB                     ??_LCD_Init:	
  1022                           ; 0 bytes @ 0x2
  1023                           
  1024  00CB                     ?_LCD_WriteString:	
  1025                           ; 0 bytes @ 0x2
  1026                           
  1027  00CB                     ??_PWM_DutyCycle1:	
  1028                           ; 0 bytes @ 0x2
  1029                           
  1030  00CB                     ??_LCD_Clear:	
  1031                           ; 0 bytes @ 0x2
  1032                           
  1033  00CB                     LCD_Cursor@Row:	
  1034                           ; 0 bytes @ 0x2
  1035                           
  1036  00CB                     LCD_WriteString@Str:	
  1037                           ; 1 bytes @ 0x2
  1038                           
  1039  00CB                     ___wmul@multiplicand:	
  1040                           ; 2 bytes @ 0x2
  1041                           
  1042  00CB                     ___lwdiv@dividend:	
  1043                           ; 2 bytes @ 0x2
  1044                           
  1045                           
  1046                           ; 2 bytes @ 0x2
  1047  00CB                     	ds	2
  1048  00CD                     ??_LCD_WriteString:	
  1049  00CD                     ??___wmul:	
  1050                           ; 0 bytes @ 0x4
  1051                           
  1052  00CD                     ??___lwdiv:	
  1053                           ; 0 bytes @ 0x4
  1054                           
  1055  00CD                     ___wmul@product:	
  1056                           ; 0 bytes @ 0x4
  1057                           
  1058  00CD                     ___aldiv@dividend:	
  1059                           ; 2 bytes @ 0x4
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x4
  1063  00CD                     	ds	1
  1064  00CE                     ___lwdiv@quotient:	
  1065                           
  1066                           ; 2 bytes @ 0x5
  1067  00CE                     	ds	2
  1068  00D0                     ___lwdiv@counter:	
  1069                           
  1070                           ; 1 bytes @ 0x7
  1071  00D0                     	ds	1
  1072  00D1                     ??___aldiv:	
  1073  00D1                     ?___lwmod:	
  1074                           ; 0 bytes @ 0x8
  1075                           
  1076  00D1                     ___lwmod@divisor:	
  1077                           ; 2 bytes @ 0x8
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x8
  1081  00D1                     	ds	1
  1082  00D2                     ___aldiv@counter:	
  1083                           
  1084                           ; 1 bytes @ 0x9
  1085  00D2                     	ds	1
  1086  00D3                     ___aldiv@sign:	
  1087  00D3                     ___lwmod@dividend:	
  1088                           ; 1 bytes @ 0xA
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0xA
  1092  00D3                     	ds	1
  1093  00D4                     ___aldiv@quotient:	
  1094                           
  1095                           ; 4 bytes @ 0xB
  1096  00D4                     	ds	1
  1097  00D5                     ??___lwmod:	
  1098                           
  1099                           ; 0 bytes @ 0xC
  1100  00D5                     	ds	1
  1101  00D6                     ___lwmod@counter:	
  1102                           
  1103                           ; 1 bytes @ 0xD
  1104  00D6                     	ds	1
  1105  00D7                     ?_sprintf:	
  1106  00D7                     sprintf@f:	
  1107                           ; 2 bytes @ 0xE
  1108                           
  1109                           
  1110                           ; 1 bytes @ 0xE
  1111  00D7                     	ds	1
  1112  00D8                     ?_USART_Init:	
  1113  00D8                     USART_Init@BaudRate:	
  1114                           ; 0 bytes @ 0xF
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0xF
  1118  00D8                     	ds	2
  1119  00DA                     ??_sprintf:	
  1120                           
  1121                           ; 0 bytes @ 0x11
  1122  00DA                     	ds	2
  1123  00DC                     ??_USART_Init:	
  1124                           
  1125                           ; 0 bytes @ 0x13
  1126  00DC                     	ds	1
  1127  00DD                     sprintf@ap:	
  1128                           
  1129                           ; 1 bytes @ 0x14
  1130  00DD                     	ds	1
  1131  00DE                     sprintf@prec:	
  1132                           
  1133                           ; 1 bytes @ 0x15
  1134  00DE                     	ds	1
  1135  00DF                     sprintf@_val:	
  1136                           
  1137                           ; 4 bytes @ 0x16
  1138  00DF                     	ds	4
  1139  00E3                     sprintf@flag:	
  1140                           
  1141                           ; 1 bytes @ 0x1A
  1142  00E3                     	ds	1
  1143  00E4                     sprintf@width:	
  1144                           
  1145                           ; 2 bytes @ 0x1B
  1146  00E4                     	ds	2
  1147  00E6                     sprintf@sp:	
  1148                           
  1149                           ; 1 bytes @ 0x1D
  1150  00E6                     	ds	1
  1151  00E7                     sprintf@c:	
  1152                           
  1153                           ; 1 bytes @ 0x1E
  1154  00E7                     	ds	1
  1155  00E8                     ??_main:	
  1156                           
  1157                           ; 0 bytes @ 0x1F
  1158  00E8                     	ds	3
  1159                           
  1160                           	psect	cstackCOMMON
  1161  0070                     __pcstackCOMMON:	
  1162  0070                     ?_USART_WriteChar:	
  1163  0070                     ??_USART_WriteChar:	
  1164                           ; 0 bytes @ 0x0
  1165                           
  1166  0070                     ?_USART_WriteString:	
  1167                           ; 0 bytes @ 0x0
  1168                           
  1169  0070                     ?_TIMER0_Set:	
  1170                           ; 0 bytes @ 0x0
  1171                           
  1172  0070                     ?_TIMER0_Init:	
  1173                           ; 0 bytes @ 0x0
  1174                           
  1175  0070                     ?_ADC_Init:	
  1176                           ; 0 bytes @ 0x0
  1177                           
  1178  0070                     ?_PWM_Init:	
  1179                           ; 0 bytes @ 0x0
  1180                           
  1181  0070                     ?_LCD_Init:	
  1182                           ; 0 bytes @ 0x0
  1183                           
  1184  0070                     ?_LCD_Clear:	
  1185                           ; 0 bytes @ 0x0
  1186                           
  1187  0070                     ?_isdigit:	
  1188                           ; 0 bytes @ 0x0
  1189                           
  1190  0070                     ?_send:	
  1191                           ; 1 bit 
  1192                           
  1193  0070                     ?_Fuzzy:	
  1194                           ; 0 bytes @ 0x0
  1195                           
  1196  0070                     ?_ISR:	
  1197                           ; 0 bytes @ 0x0
  1198                           
  1199  0070                     ?_main:	
  1200                           ; 0 bytes @ 0x0
  1201                           
  1202  0070                     ?_LCD_WriteCmd:	
  1203                           ; 0 bytes @ 0x0
  1204                           
  1205  0070                     ?_LCD_WriteData:	
  1206                           ; 0 bytes @ 0x0
  1207                           
  1208  0070                     ?i1_TIMER0_Set:	
  1209                           ; 0 bytes @ 0x0
  1210                           
  1211  0070                     ??i1_TIMER0_Set:	
  1212                           ; 0 bytes @ 0x0
  1213                           
  1214  0070                     ?_USART_ReceiveChar:	
  1215                           ; 0 bytes @ 0x0
  1216                           
  1217  0070                     ?i1___lwdiv:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ?___ftpack:	
  1221                           ; 2 bytes @ 0x0
  1222                           
  1223  0070                     USART_WriteChar@byte:	
  1224                           ; 3 bytes @ 0x0
  1225                           
  1226  0070                     i1TIMER0_Set@contagens:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     i1___lwdiv@divisor:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ___ftpack@arg:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235                           
  1236                           ; 3 bytes @ 0x0
  1237  0070                     	ds	1
  1238  0071                     ??_USART_WriteString:	
  1239  0071                     ??_send:	
  1240                           ; 0 bytes @ 0x1
  1241                           
  1242                           
  1243                           ; 0 bytes @ 0x1
  1244  0071                     	ds	1
  1245  0072                     send@checksum:	
  1246  0072                     USART_WriteString@str:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0072                     i1___lwdiv@dividend:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252                           
  1253                           ; 2 bytes @ 0x2
  1254  0072                     	ds	1
  1255  0073                     ??_USART_ReceiveChar:	
  1256  0073                     send@index:	
  1257                           ; 0 bytes @ 0x3
  1258                           
  1259  0073                     ___ftpack@exp:	
  1260                           ; 1 bytes @ 0x3
  1261                           
  1262                           
  1263                           ; 1 bytes @ 0x3
  1264  0073                     	ds	1
  1265  0074                     ??i1___lwdiv:	
  1266  0074                     USART_ReceiveChar@byte:	
  1267                           ; 0 bytes @ 0x4
  1268                           
  1269  0074                     ___ftpack@sign:	
  1270                           ; 1 bytes @ 0x4
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0x4
  1274  0074                     	ds	1
  1275  0075                     ??___ftpack:	
  1276  0075                     i1___lwdiv@quotient:	
  1277                           ; 0 bytes @ 0x5
  1278                           
  1279                           
  1280                           ; 2 bytes @ 0x5
  1281  0075                     	ds	2
  1282  0077                     i1___lwdiv@counter:	
  1283                           
  1284                           ; 1 bytes @ 0x7
  1285  0077                     	ds	1
  1286  0078                     ?i1___wmul:	
  1287  0078                     ?___ftmul:	
  1288                           ; 2 bytes @ 0x8
  1289                           
  1290  0078                     ?___lwtoft:	
  1291                           ; 3 bytes @ 0x8
  1292                           
  1293  0078                     ___lwtoft@c:	
  1294                           ; 3 bytes @ 0x8
  1295                           
  1296  0078                     i1___wmul@multiplier:	
  1297                           ; 2 bytes @ 0x8
  1298                           
  1299  0078                     ___ftmul@f1:	
  1300                           ; 2 bytes @ 0x8
  1301                           
  1302                           
  1303                           ; 3 bytes @ 0x8
  1304  0078                     	ds	2
  1305  007A                     i1___wmul@multiplicand:	
  1306                           
  1307                           ; 2 bytes @ 0xA
  1308  007A                     	ds	1
  1309  007B                     ??___lwtoft:	
  1310  007B                     ___ftmul@f2:	
  1311                           ; 0 bytes @ 0xB
  1312                           
  1313                           
  1314                           ; 3 bytes @ 0xB
  1315  007B                     	ds	1
  1316  007C                     ??_trimf:	
  1317  007C                     ??_trapmf:	
  1318                           ; 0 bytes @ 0xC
  1319                           
  1320  007C                     ??_max_val:	
  1321                           ; 0 bytes @ 0xC
  1322                           
  1323  007C                     ??___ftneg:	
  1324                           ; 0 bytes @ 0xC
  1325                           
  1326  007C                     ??i1_PWM_DutyCycle2:	
  1327                           ; 0 bytes @ 0xC
  1328                           
  1329  007C                     ??i1___wmul:	
  1330                           ; 0 bytes @ 0xC
  1331                           
  1332  007C                     i1___wmul@product:	
  1333                           ; 0 bytes @ 0xC
  1334                           
  1335                           
  1336                           ; 2 bytes @ 0xC
  1337  007C                     	ds	2
  1338  007E                     ??_Fuzzy:	
  1339                           
  1340                           	psect	cstackBANK0
  1341  0020                     __pcstackBANK0:	
  1342                           ; 0 bytes @ 0xE
  1343                           
  1344  0020                     ??___ftmul:	
  1345  0020                     ?___ftneg:	
  1346                           ; 0 bytes @ 0x0
  1347                           
  1348  0020                     ___ftneg@f1:	
  1349                           ; 3 bytes @ 0x0
  1350                           
  1351                           
  1352                           ; 3 bytes @ 0x0
  1353  0020                     	ds	3
  1354  0023                     ?___ftadd:	
  1355  0023                     ___ftadd@f1:	
  1356                           ; 3 bytes @ 0x3
  1357                           
  1358                           
  1359                           ; 3 bytes @ 0x3
  1360  0023                     	ds	1
  1361  0024                     ___ftmul@exp:	
  1362                           
  1363                           ; 1 bytes @ 0x4
  1364  0024                     	ds	1
  1365  0025                     ___ftmul@f3_as_product:	
  1366                           
  1367                           ; 3 bytes @ 0x5
  1368  0025                     	ds	1
  1369  0026                     ___ftadd@f2:	
  1370                           
  1371                           ; 3 bytes @ 0x6
  1372  0026                     	ds	2
  1373  0028                     ___ftmul@cntr:	
  1374                           
  1375                           ; 1 bytes @ 0x8
  1376  0028                     	ds	1
  1377  0029                     ??___ftadd:	
  1378  0029                     ___ftmul@sign:	
  1379                           ; 0 bytes @ 0x9
  1380                           
  1381                           
  1382                           ; 1 bytes @ 0x9
  1383  0029                     	ds	4
  1384  002D                     ___ftadd@sign:	
  1385                           
  1386                           ; 1 bytes @ 0xD
  1387  002D                     	ds	1
  1388  002E                     ___ftadd@exp2:	
  1389                           
  1390                           ; 1 bytes @ 0xE
  1391  002E                     	ds	1
  1392  002F                     ___ftadd@exp1:	
  1393                           
  1394                           ; 1 bytes @ 0xF
  1395  002F                     	ds	1
  1396  0030                     ?___ftge:	
  1397  0030                     ?___ftdiv:	
  1398                           ; 1 bit 
  1399                           
  1400  0030                     ?___fttol:	
  1401                           ; 3 bytes @ 0x10
  1402                           
  1403  0030                     ___ftdiv@f2:	
  1404                           ; 4 bytes @ 0x10
  1405                           
  1406  0030                     ___ftge@ff1:	
  1407                           ; 3 bytes @ 0x10
  1408                           
  1409  0030                     ___fttol@f1:	
  1410                           ; 3 bytes @ 0x10
  1411                           
  1412                           
  1413                           ; 3 bytes @ 0x10
  1414  0030                     	ds	3
  1415  0033                     ___ftdiv@f1:	
  1416  0033                     ___ftge@ff2:	
  1417                           ; 3 bytes @ 0x13
  1418                           
  1419                           
  1420                           ; 3 bytes @ 0x13
  1421  0033                     	ds	1
  1422  0034                     ??___fttol:	
  1423                           
  1424                           ; 0 bytes @ 0x14
  1425  0034                     	ds	2
  1426  0036                     ??___ftdiv:	
  1427  0036                     ??___ftge:	
  1428                           ; 0 bytes @ 0x16
  1429                           
  1430                           
  1431                           ; 0 bytes @ 0x16
  1432  0036                     	ds	2
  1433  0038                     ___fttol@sign1:	
  1434                           
  1435                           ; 1 bytes @ 0x18
  1436  0038                     	ds	1
  1437  0039                     ___fttol@lval:	
  1438                           
  1439                           ; 4 bytes @ 0x19
  1440  0039                     	ds	1
  1441  003A                     ___ftdiv@cntr:	
  1442                           
  1443                           ; 1 bytes @ 0x1A
  1444  003A                     	ds	1
  1445  003B                     ___ftdiv@f3:	
  1446                           
  1447                           ; 3 bytes @ 0x1B
  1448  003B                     	ds	1
  1449  003C                     ?_max_val:	
  1450  003C                     max_val@a:	
  1451                           ; 3 bytes @ 0x1C
  1452                           
  1453                           
  1454                           ; 3 bytes @ 0x1C
  1455  003C                     	ds	1
  1456  003D                     ___fttol@exp1:	
  1457                           
  1458                           ; 1 bytes @ 0x1D
  1459  003D                     	ds	1
  1460  003E                     ?i1_PWM_DutyCycle2:	
  1461  003E                     ___ftdiv@exp:	
  1462                           ; 0 bytes @ 0x1E
  1463                           
  1464  003E                     i1PWM_DutyCycle2@valor:	
  1465                           ; 1 bytes @ 0x1E
  1466                           
  1467                           
  1468                           ; 2 bytes @ 0x1E
  1469  003E                     	ds	1
  1470  003F                     ___ftdiv@sign:	
  1471  003F                     max_val@b:	
  1472                           ; 1 bytes @ 0x1F
  1473                           
  1474                           
  1475                           ; 3 bytes @ 0x1F
  1476  003F                     	ds	1
  1477  0040                     ?_trimf:	
  1478  0040                     ?_trapmf:	
  1479                           ; 3 bytes @ 0x20
  1480                           
  1481  0040                     trimf@x:	
  1482                           ; 3 bytes @ 0x20
  1483                           
  1484  0040                     trapmf@x:	
  1485                           ; 3 bytes @ 0x20
  1486                           
  1487                           
  1488                           ; 3 bytes @ 0x20
  1489  0040                     	ds	3
  1490  0043                     trimf@a:	
  1491  0043                     trapmf@a:	
  1492                           ; 3 bytes @ 0x23
  1493                           
  1494                           
  1495                           ; 3 bytes @ 0x23
  1496  0043                     	ds	3
  1497  0046                     trimf@b:	
  1498  0046                     trapmf@b:	
  1499                           ; 3 bytes @ 0x26
  1500                           
  1501                           
  1502                           ; 3 bytes @ 0x26
  1503  0046                     	ds	3
  1504  0049                     trimf@c:	
  1505  0049                     trapmf@c:	
  1506                           ; 3 bytes @ 0x29
  1507                           
  1508                           
  1509                           ; 3 bytes @ 0x29
  1510  0049                     	ds	3
  1511  004C                     trimf@ua:	
  1512  004C                     trapmf@d:	
  1513                           ; 3 bytes @ 0x2C
  1514                           
  1515                           
  1516                           ; 3 bytes @ 0x2C
  1517  004C                     	ds	3
  1518  004F                     trapmf@ua:	
  1519                           
  1520                           ; 3 bytes @ 0x2F
  1521  004F                     	ds	3
  1522  0052                     Fuzzy@freio:	
  1523                           
  1524                           ; 2 bytes @ 0x32
  1525  0052                     	ds	2
  1526  0054                     Fuzzy@tip:	
  1527                           
  1528                           ; 3 bytes @ 0x34
  1529  0054                     	ds	3
  1530  0057                     Fuzzy@a:	
  1531                           
  1532                           ; 2 bytes @ 0x37
  1533  0057                     	ds	2
  1534  0059                     Fuzzy@a_246:	
  1535                           
  1536                           ; 2 bytes @ 0x39
  1537  0059                     	ds	2
  1538  005B                     Fuzzy@a_247:	
  1539                           
  1540                           ; 2 bytes @ 0x3B
  1541  005B                     	ds	2
  1542  005D                     Fuzzy@mantem:	
  1543                           
  1544                           ; 3 bytes @ 0x3D
  1545  005D                     	ds	3
  1546  0060                     Fuzzy@reduz:	
  1547                           
  1548                           ; 3 bytes @ 0x40
  1549  0060                     	ds	3
  1550  0063                     Fuzzy@aumenta:	
  1551                           
  1552                           ; 3 bytes @ 0x43
  1553  0063                     	ds	3
  1554  0066                     Fuzzy@deltaRpm:	
  1555                           
  1556                           ; 3 bytes @ 0x46
  1557  0066                     	ds	3
  1558  0069                     ??_ISR:	
  1559                           
  1560                           ; 0 bytes @ 0x49
  1561  0069                     	ds	4
  1562                           
  1563                           	psect	maintext
  1564  08A8                     __pmaintext:	
  1565 ;;
  1566 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1567 ;;
  1568 ;; *************** function _main *****************
  1569 ;; Defined at:
  1570 ;;		line 495 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;		None               void
  1577 ;; Registers used:
  1578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 17F/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0
  1586 ;;      Temps:          0       0       3       0       0
  1587 ;;      Totals:         0       0       3       0       0
  1588 ;;Total ram usage:        3 bytes
  1589 ;; Hardware stack levels required when called:    7
  1590 ;; This function calls:
  1591 ;;		_ADC_Init
  1592 ;;		_LCD_Clear
  1593 ;;		_LCD_Cursor
  1594 ;;		_LCD_Init
  1595 ;;		_LCD_WriteString
  1596 ;;		_PWM_DutyCycle1
  1597 ;;		_PWM_DutyCycle2
  1598 ;;		_PWM_Init
  1599 ;;		_TIMER0_Init
  1600 ;;		_TIMER0_Set
  1601 ;;		_USART_Init
  1602 ;;		_sprintf
  1603 ;; This function is called by:
  1604 ;;		Startup code after reset
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _main
  1610  08A8                     _main:	
  1611                           
  1612                           ;main.c: 497: TRISA = 0b00000001;
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1616  08A8  3001               	movlw	1
  1617  08A9  1683               	bsf	3,5	;RP0=1, select bank1
  1618  08AA  1303               	bcf	3,6	;RP1=0, select bank1
  1619  08AB  0085               	movwf	5	;volatile
  1620                           
  1621                           ;main.c: 498: PORTA = 0b00000001;
  1622  08AC  3001               	movlw	1
  1623  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  1624  08AE  1303               	bcf	3,6	;RP1=0, select bank0
  1625  08AF  0085               	movwf	5	;volatile
  1626                           
  1627                           ;main.c: 499: TRISB = 0b00000000;
  1628  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  1629  08B1  1303               	bcf	3,6	;RP1=0, select bank1
  1630  08B2  0186               	clrf	6	;volatile
  1631                           
  1632                           ;main.c: 500: PORTB = 0b00000000;
  1633  08B3  1283               	bcf	3,5	;RP0=0, select bank0
  1634  08B4  1303               	bcf	3,6	;RP1=0, select bank0
  1635  08B5  0186               	clrf	6	;volatile
  1636                           
  1637                           ;main.c: 501: TRISC = 0b10000001;
  1638  08B6  3081               	movlw	129
  1639  08B7  1683               	bsf	3,5	;RP0=1, select bank1
  1640  08B8  1303               	bcf	3,6	;RP1=0, select bank1
  1641  08B9  0087               	movwf	7	;volatile
  1642                           
  1643                           ;main.c: 502: PORTC = 0b11000000;
  1644  08BA  30C0               	movlw	192
  1645  08BB  1283               	bcf	3,5	;RP0=0, select bank0
  1646  08BC  1303               	bcf	3,6	;RP1=0, select bank0
  1647  08BD  0087               	movwf	7	;volatile
  1648                           
  1649                           ;main.c: 503: TRISD = 0b00000000;
  1650  08BE  1683               	bsf	3,5	;RP0=1, select bank1
  1651  08BF  1303               	bcf	3,6	;RP1=0, select bank1
  1652  08C0  0188               	clrf	8	;volatile
  1653                           
  1654                           ;main.c: 504: PORTD = 0b00000000;
  1655  08C1  1283               	bcf	3,5	;RP0=0, select bank0
  1656  08C2  1303               	bcf	3,6	;RP1=0, select bank0
  1657  08C3  0188               	clrf	8	;volatile
  1658                           
  1659                           ;main.c: 505: TRISE = 0b00000000;
  1660  08C4  1683               	bsf	3,5	;RP0=1, select bank1
  1661  08C5  1303               	bcf	3,6	;RP1=0, select bank1
  1662  08C6  0189               	clrf	9	;volatile
  1663                           
  1664                           ;main.c: 506: PORTE = 0b00000000;
  1665  08C7  1283               	bcf	3,5	;RP0=0, select bank0
  1666  08C8  1303               	bcf	3,6	;RP1=0, select bank0
  1667  08C9  0189               	clrf	9	;volatile
  1668                           
  1669                           ;main.c: 509: T1CON = 0x03;
  1670  08CA  3003               	movlw	3
  1671  08CB  0090               	movwf	16	;volatile
  1672                           
  1673                           ;main.c: 510: TMR1L = 0x00;
  1674  08CC  018E               	clrf	14	;volatile
  1675                           
  1676                           ;main.c: 511: TMR1H = 0x00;
  1677  08CD  018F               	clrf	15	;volatile
  1678                           
  1679                           ;main.c: 514: USART_Init(115200);
  1680  08CE  3000               	movlw	0
  1681  08CF  1683               	bsf	3,5	;RP0=1, select bank1
  1682  08D0  1303               	bcf	3,6	;RP1=0, select bank1
  1683  08D1  00DB               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1684  08D2  3001               	movlw	1
  1685  08D3  00DA               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1686  08D4  30C2               	movlw	194
  1687  08D5  00D9               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1688  08D6  3000               	movlw	0
  1689  08D7  00D8               	movwf	USART_Init@BaudRate^(0+128)
  1690  08D8  160A  118A  24B2  120A  158A  	fcall	_USART_Init
  1691                           
  1692                           ;main.c: 515: TIMER0_Init();
  1693  08DD  160A  118A  2229  120A  158A  	fcall	_TIMER0_Init
  1694                           
  1695                           ;main.c: 516: ADC_Init();
  1696  08E2  160A  118A  2244  120A  158A  	fcall	_ADC_Init
  1697                           
  1698                           ;main.c: 517: PWM_Init();
  1699  08E7  160A  118A  235B  120A  158A  	fcall	_PWM_Init
  1700                           
  1701                           ;main.c: 518: LCD_Init();
  1702  08EC  160A  118A  260C  120A  158A  	fcall	_LCD_Init
  1703                           
  1704                           ;main.c: 521: INTCONbits.PEIE = 1;
  1705  08F1  170B               	bsf	11,6	;volatile
  1706                           
  1707                           ;main.c: 522: INTCONbits.GIE = 1;
  1708  08F2  178B               	bsf	11,7	;volatile
  1709                           
  1710                           ;main.c: 529: LCD_Init();
  1711  08F3  160A  118A  260C  120A  158A  	fcall	_LCD_Init
  1712                           
  1713                           ;main.c: 530: LCD_Cursor(0,0);
  1714  08F8  1683               	bsf	3,5	;RP0=1, select bank1
  1715  08F9  1303               	bcf	3,6	;RP1=0, select bank1
  1716  08FA  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1717  08FB  3000               	movlw	0
  1718  08FC  160A  118A  22D6  120A  158A  	fcall	_LCD_Cursor
  1719                           
  1720                           ;main.c: 531: LCD_WriteString("Inicializando...");
  1721  0901  3033               	movlw	low (STR_2-__stringbase)
  1722  0902  1683               	bsf	3,5	;RP0=1, select bank1
  1723  0903  1303               	bcf	3,6	;RP1=0, select bank1
  1724  0904  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1725  0905  3080               	movlw	128
  1726  0906  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1727  0907  160A  118A  23CD  120A  158A  	fcall	_LCD_WriteString
  1728                           
  1729                           ;main.c: 534: PWM_DutyCycle1(0);
  1730  090C  3000               	movlw	0
  1731  090D  1683               	bsf	3,5	;RP0=1, select bank1
  1732  090E  1303               	bcf	3,6	;RP1=0, select bank1
  1733  090F  00C9               	movwf	PWM_DutyCycle1@valor^(0+128)
  1734  0910  3000               	movlw	0
  1735  0911  00CA               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1736  0912  160A  118A  22F6  120A  158A  	fcall	_PWM_DutyCycle1
  1737                           
  1738                           ;main.c: 535: PWM_DutyCycle2(0);
  1739  0917  3000               	movlw	0
  1740  0918  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0919  1303               	bcf	3,6	;RP1=0, select bank1
  1742  091A  00C9               	movwf	PWM_DutyCycle2@valor^(0+128)
  1743  091B  3000               	movlw	0
  1744  091C  00CA               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1745  091D  160A  118A  2317  120A  158A  	fcall	_PWM_DutyCycle2
  1746                           
  1747                           ;main.c: 538: TIMER0_Set(238);
  1748  0922  30EE               	movlw	238
  1749  0923  160A  118A  220F  120A  158A  	fcall	_TIMER0_Set
  1750                           
  1751                           ;main.c: 541: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1752  0928  3018               	movlw	24
  1753  0929  1683               	bsf	3,5	;RP0=1, select bank1
  1754  092A  1303               	bcf	3,6	;RP1=0, select bank1
  1755  092B  00EA               	movwf	(??_main^(0+128)+2)
  1756  092C  3061               	movlw	97
  1757  092D  00E9               	movwf	(??_main^(0+128)+1)
  1758  092E  306E               	movlw	110
  1759  092F  00E8               	movwf	??_main^(0+128)
  1760  0930                     u4107:	
  1761  0930  0BE8               	decfsz	??_main^(0+128),f
  1762  0931  2930               	goto	u4107
  1763  0932  0BE9               	decfsz	(??_main^(0+128)+1),f
  1764  0933  2930               	goto	u4107
  1765  0934  0BEA               	decfsz	(??_main^(0+128)+2),f
  1766  0935  2930               	goto	u4107
  1767  0936  0000               	nop
  1768  0937                     l199:	
  1769                           ;main.c: 544: while(1)
  1770                           
  1771                           
  1772                           ;main.c: 545: {
  1773                           ;main.c: 549: sprintf(display_rpm,"%04d", rpm);
  1774  0937  3058               	movlw	(STR_3-__stringbase)& (0+255)
  1775  0938  1683               	bsf	3,5	;RP0=1, select bank1
  1776  0939  1303               	bcf	3,6	;RP1=0, select bank1
  1777  093A  00E8               	movwf	??_main^(0+128)
  1778  093B  0868               	movf	??_main^(0+128),w
  1779  093C  00D7               	movwf	sprintf@f^(0+128)
  1780  093D  0844               	movf	(_rpm+1)^(0+128),w
  1781  093E  01D9               	clrf	((?_sprintf+1)^(0+128)+1)
  1782  093F  07D9               	addwf	((?_sprintf+1)^(0+128)+1),f
  1783  0940  0843               	movf	_rpm^(0+128),w
  1784  0941  01D8               	clrf	(?_sprintf^(0+128)+1)
  1785  0942  07D8               	addwf	(?_sprintf^(0+128)+1),f
  1786  0943  3097               	movlw	_display_rpm& (0+255)
  1787  0944  120A  158A  2649  120A  158A  	fcall	_sprintf
  1788                           
  1789                           ;main.c: 552: LCD_Clear();
  1790  0949  160A  118A  23A4  120A  158A  	fcall	_LCD_Clear
  1791                           
  1792                           ;main.c: 553: LCD_Cursor(0,0);
  1793  094E  1683               	bsf	3,5	;RP0=1, select bank1
  1794  094F  1303               	bcf	3,6	;RP1=0, select bank1
  1795  0950  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1796  0951  3000               	movlw	0
  1797  0952  160A  118A  22D6  120A  158A  	fcall	_LCD_Cursor
  1798                           
  1799                           ;main.c: 554: LCD_WriteString("RPM: ");
  1800  0957  3052               	movlw	low (STR_4-__stringbase)
  1801  0958  1683               	bsf	3,5	;RP0=1, select bank1
  1802  0959  1303               	bcf	3,6	;RP1=0, select bank1
  1803  095A  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1804  095B  3080               	movlw	128
  1805  095C  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1806  095D  160A  118A  23CD  120A  158A  	fcall	_LCD_WriteString
  1807                           
  1808                           ;main.c: 555: LCD_Cursor(0,6);
  1809  0962  3006               	movlw	6
  1810  0963  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0964  1303               	bcf	3,6	;RP1=0, select bank1
  1812  0965  00E8               	movwf	??_main^(0+128)
  1813  0966  0868               	movf	??_main^(0+128),w
  1814  0967  00C9               	movwf	LCD_Cursor@Col^(0+128)
  1815  0968  3000               	movlw	0
  1816  0969  160A  118A  22D6  120A  158A  	fcall	_LCD_Cursor
  1817                           
  1818                           ;main.c: 556: LCD_WriteString(display_rpm);
  1819  096E  3097               	movlw	_display_rpm& (0+255)
  1820  096F  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0970  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0971  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1823  0972  3001               	movlw	1
  1824  0973  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1825  0974  160A  118A  23CD  120A  158A  	fcall	_LCD_WriteString
  1826                           
  1827                           ;main.c: 559: LCD_Cursor(1,6);
  1828  0979  3006               	movlw	6
  1829  097A  1683               	bsf	3,5	;RP0=1, select bank1
  1830  097B  1303               	bcf	3,6	;RP1=0, select bank1
  1831  097C  00E8               	movwf	??_main^(0+128)
  1832  097D  0868               	movf	??_main^(0+128),w
  1833  097E  00C9               	movwf	LCD_Cursor@Col^(0+128)
  1834  097F  3001               	movlw	1
  1835  0980  160A  118A  22D6  120A  158A  	fcall	_LCD_Cursor
  1836                           
  1837                           ;main.c: 562: _delay((unsigned long)((200)*(18432000/4000.0)));
  1838  0985  3005               	movlw	5
  1839  0986  1683               	bsf	3,5	;RP0=1, select bank1
  1840  0987  1303               	bcf	3,6	;RP1=0, select bank1
  1841  0988  00EA               	movwf	(??_main^(0+128)+2)
  1842  0989  30AD               	movlw	173
  1843  098A  00E9               	movwf	(??_main^(0+128)+1)
  1844  098B  30E0               	movlw	224
  1845  098C  00E8               	movwf	??_main^(0+128)
  1846  098D                     u4117:	
  1847  098D  0BE8               	decfsz	??_main^(0+128),f
  1848  098E  298D               	goto	u4117
  1849  098F  0BE9               	decfsz	(??_main^(0+128)+1),f
  1850  0990  298D               	goto	u4117
  1851  0991  0BEA               	decfsz	(??_main^(0+128)+2),f
  1852  0992  298D               	goto	u4117
  1853  0993  2937               	goto	l199
  1854  0994                     __end_of_main:	
  1855                           
  1856                           	psect	text1
  1857  0E49                     __ptext1:	
  1858 ;; *************** function _sprintf *****************
  1859 ;; Defined at:
  1860 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  sp              1    wreg     PTR unsigned char 
  1863 ;;		 -> display_rpm(10), 
  1864 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  1865 ;;		 -> STR_3(5), 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1868 ;;		 -> display_rpm(10), 
  1869 ;;  _val            4   22[BANK1 ] struct .
  1870 ;;  width           2   27[BANK1 ] int 
  1871 ;;  c               1   30[BANK1 ] char 
  1872 ;;  flag            1   26[BANK1 ] unsigned char 
  1873 ;;  prec            1   21[BANK1 ] char 
  1874 ;;  ap              1   20[BANK1 ] PTR void [1]
  1875 ;;		 -> ?_sprintf(2), 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2   14[BANK1 ] int 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       3       0       0
  1886 ;;      Locals:         0       0      11       0       0
  1887 ;;      Temps:          0       0       3       0       0
  1888 ;;      Totals:         0       0      17       0       0
  1889 ;;Total ram usage:       17 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    6
  1892 ;; This function calls:
  1893 ;;		___lwdiv
  1894 ;;		___lwmod
  1895 ;;		___wmul
  1896 ;;		_isdigit
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _sprintf
  1904  0E49                     _sprintf:	
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1908                           ;sprintf@sp stored from wreg
  1909  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  1911  0E4B  00E6               	movwf	sprintf@sp^(0+128)
  1912                           
  1913                           ;doprnt.c: 494: va_list ap;
  1914                           ;doprnt.c: 499: signed char c;
  1915                           ;doprnt.c: 501: int width;
  1916                           ;doprnt.c: 506: signed char prec;
  1917                           ;doprnt.c: 508: unsigned char flag;
  1918                           ;doprnt.c: 527: union {
  1919                           ;doprnt.c: 528: unsigned int _val;
  1920                           ;doprnt.c: 529: struct {
  1921                           ;doprnt.c: 530: const char * _cp;
  1922                           ;doprnt.c: 531: unsigned _len;
  1923                           ;doprnt.c: 532: } _str;
  1924                           ;doprnt.c: 533: } _val;
  1925                           ;doprnt.c: 542: *ap = __va_start();
  1926  0E4C  30D8               	movlw	(?_sprintf+1)& (0+255)
  1927  0E4D  00DA               	movwf	??_sprintf^(0+128)
  1928  0E4E  085A               	movf	??_sprintf^(0+128),w
  1929  0E4F  00DD               	movwf	sprintf@ap^(0+128)
  1930  0E50                     l3129:	
  1931                           ;doprnt.c: 545: while(c = *f++) {
  1932                           
  1933  0E50  3001               	movlw	1
  1934  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  1935  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  1936  0E53  07D7               	addwf	sprintf@f^(0+128),f
  1937  0E54  30FF               	movlw	-1
  1938  0E55  0757               	addwf	sprintf@f^(0+128),w
  1939  0E56  0084               	movwf	4
  1940  0E57  160A  118A  200A  120A  158A  	fcall	stringdir
  1941  0E5C  00DA               	movwf	??_sprintf^(0+128)
  1942  0E5D  085A               	movf	??_sprintf^(0+128),w
  1943  0E5E  00E7               	movwf	sprintf@c^(0+128)
  1944  0E5F  08E7               	movf	sprintf@c^(0+128),f
  1945  0E60  1903               	btfsc	3,2
  1946  0E61  2FF9               	goto	l3131
  1947                           
  1948                           ;doprnt.c: 547: if(c != '%')
  1949  0E62  0867               	movf	sprintf@c^(0+128),w
  1950  0E63  3A25               	xorlw	37
  1951  0E64  1903               	skipnz
  1952  0E65  2E72               	goto	l3033
  1953                           
  1954                           ;doprnt.c: 549: {
  1955                           ;doprnt.c: 550: ((*sp++ = (c)));
  1956  0E66  0867               	movf	sprintf@c^(0+128),w
  1957  0E67  00DA               	movwf	??_sprintf^(0+128)
  1958  0E68  0866               	movf	sprintf@sp^(0+128),w
  1959  0E69  0084               	movwf	4
  1960  0E6A  085A               	movf	??_sprintf^(0+128),w
  1961  0E6B  1783               	bsf	3,7	;select IRP bank2
  1962  0E6C  0080               	movwf	0
  1963  0E6D  3001               	movlw	1
  1964  0E6E  00DA               	movwf	??_sprintf^(0+128)
  1965  0E6F  085A               	movf	??_sprintf^(0+128),w
  1966  0E70  07E6               	addwf	sprintf@sp^(0+128),f
  1967                           
  1968                           ;doprnt.c: 551: continue;
  1969  0E71  2E50               	goto	l3129
  1970  0E72                     l3033:	
  1971                           
  1972                           ;doprnt.c: 552: }
  1973                           ;doprnt.c: 555: width = 0;
  1974  0E72  01E4               	clrf	sprintf@width^(0+128)
  1975  0E73  01E5               	clrf	(sprintf@width+1)^(0+128)
  1976                           
  1977                           ;doprnt.c: 557: flag = 0;
  1978  0E74  01E3               	clrf	sprintf@flag^(0+128)
  1979                           
  1980                           ;doprnt.c: 560: switch(*f) {
  1981                           
  1982                           ;doprnt.c: 559: for(;;) {
  1983  0E75  2E7B               	goto	l3039
  1984  0E76                     l476:	
  1985                           ;doprnt.c: 588: case '0':
  1986                           
  1987                           
  1988                           ;doprnt.c: 589: flag |= 0x04;
  1989  0E76  1563               	bsf	sprintf@flag^(0+128),2
  1990                           
  1991                           ;doprnt.c: 590: f++;
  1992  0E77  3001               	movlw	1
  1993  0E78  00DA               	movwf	??_sprintf^(0+128)
  1994  0E79  085A               	movf	??_sprintf^(0+128),w
  1995  0E7A  07D7               	addwf	sprintf@f^(0+128),f
  1996  0E7B                     l3039:	
  1997                           ;doprnt.c: 593: }
  1998                           
  1999                           ;doprnt.c: 591: continue;
  2000                           
  2001  0E7B  0857               	movf	sprintf@f^(0+128),w
  2002  0E7C  0084               	movwf	4
  2003  0E7D  160A  118A  200A  120A  158A  	fcall	stringdir
  2004                           
  2005                           ; Switch size 1, requested type "space"
  2006                           ; Number of cases is 1, Range of values is 48 to 48
  2007                           ; switch strategies available:
  2008                           ; Name         Instructions Cycles
  2009                           ; simple_byte            4     3 (average)
  2010                           ; direct_byte           14    11 (fixed)
  2011                           ; jumptable            263     9 (fixed)
  2012                           ;	Chosen strategy is simple_byte
  2013  0E82  3A30               	xorlw	48	; case 48
  2014  0E83  1903               	skipnz
  2015  0E84  2E76               	goto	l476
  2016  0E85  2E86               	goto	l3041
  2017  0E86                     l3041:	
  2018                           ;doprnt.c: 595: }
  2019                           
  2020                           ;doprnt.c: 594: break;
  2021                           
  2022                           
  2023                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2024  0E86  0857               	movf	sprintf@f^(0+128),w
  2025  0E87  0084               	movwf	4
  2026  0E88  160A  118A  200A  120A  158A  	fcall	stringdir
  2027  0E8D  160A  118A  2234  120A  158A  	fcall	_isdigit
  2028  0E92  1C03               	btfss	3,0
  2029  0E93  2ED6               	goto	l3055
  2030                           
  2031                           ;doprnt.c: 607: width = 0;
  2032  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0E95  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0E96  01E4               	clrf	sprintf@width^(0+128)
  2035  0E97  01E5               	clrf	(sprintf@width+1)^(0+128)
  2036  0E98                     l3045:	
  2037                           ;doprnt.c: 608: do {
  2038                           
  2039                           
  2040                           ;doprnt.c: 609: width *= 10;
  2041  0E98  300A               	movlw	10
  2042  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  2043  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  2044  0E9B  00C9               	movwf	___wmul@multiplier^(0+128)
  2045  0E9C  3000               	movlw	0
  2046  0E9D  00CA               	movwf	(___wmul@multiplier^(0+128)+1)
  2047  0E9E  0865               	movf	(sprintf@width+1)^(0+128),w
  2048  0E9F  01CC               	clrf	(___wmul@multiplicand+1)^(0+128)
  2049  0EA0  07CC               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2050  0EA1  0864               	movf	sprintf@width^(0+128),w
  2051  0EA2  01CB               	clrf	___wmul@multiplicand^(0+128)
  2052  0EA3  07CB               	addwf	___wmul@multiplicand^(0+128),f
  2053  0EA4  160A  118A  237F  120A  158A  	fcall	___wmul
  2054  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  2056  0EAB  084A               	movf	(?___wmul+1)^(0+128),w
  2057  0EAC  01E5               	clrf	(sprintf@width+1)^(0+128)
  2058  0EAD  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2059  0EAE  0849               	movf	?___wmul^(0+128),w
  2060  0EAF  01E4               	clrf	sprintf@width^(0+128)
  2061  0EB0  07E4               	addwf	sprintf@width^(0+128),f
  2062                           
  2063                           ;doprnt.c: 610: width += *f++ - '0';
  2064  0EB1  0857               	movf	sprintf@f^(0+128),w
  2065  0EB2  0084               	movwf	4
  2066  0EB3  160A  118A  200A  120A  158A  	fcall	stringdir
  2067  0EB8  3ED0               	addlw	208
  2068  0EB9  00DA               	movwf	??_sprintf^(0+128)
  2069  0EBA  30FF               	movlw	255
  2070  0EBB  1803               	skipnc
  2071  0EBC  3000               	movlw	0
  2072  0EBD  00DB               	movwf	(??_sprintf^(0+128)+1)
  2073  0EBE  085A               	movf	??_sprintf^(0+128),w
  2074  0EBF  07E4               	addwf	sprintf@width^(0+128),f
  2075  0EC0  1803               	skipnc
  2076  0EC1  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2077  0EC2  085B               	movf	(??_sprintf+1)^(0+128),w
  2078  0EC3  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2079  0EC4  3001               	movlw	1
  2080  0EC5  00DA               	movwf	??_sprintf^(0+128)
  2081  0EC6  085A               	movf	??_sprintf^(0+128),w
  2082  0EC7  07D7               	addwf	sprintf@f^(0+128),f
  2083                           
  2084                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2085  0EC8  0857               	movf	sprintf@f^(0+128),w
  2086  0EC9  0084               	movwf	4
  2087  0ECA  160A  118A  200A  120A  158A  	fcall	stringdir
  2088  0ECF  160A  118A  2234  120A  158A  	fcall	_isdigit
  2089  0ED4  1803               	btfsc	3,0
  2090  0ED5  2E98               	goto	l3045
  2091  0ED6                     l3055:	
  2092                           ;doprnt.c: 831: }
  2093                           
  2094                           ;doprnt.c: 822: continue;
  2095                           
  2096                           ;doprnt.c: 811: default:
  2097                           
  2098                           ;doprnt.c: 707: case 'i':
  2099                           ;doprnt.c: 708: break;
  2100                           
  2101                           ;doprnt.c: 706: case 'd':
  2102                           
  2103                           ;doprnt.c: 647: goto alldone;
  2104                           
  2105                           ;doprnt.c: 646: case 0:
  2106                           
  2107                           ;doprnt.c: 617: }
  2108                           ;doprnt.c: 644: switch(c = *f++) {
  2109                           
  2110  0ED6  3001               	movlw	1
  2111  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  2112  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  2113  0ED9  07D7               	addwf	sprintf@f^(0+128),f
  2114  0EDA  30FF               	movlw	-1
  2115  0EDB  0757               	addwf	sprintf@f^(0+128),w
  2116  0EDC  0084               	movwf	4
  2117  0EDD  160A  118A  200A  120A  158A  	fcall	stringdir
  2118  0EE2  00E7               	movwf	sprintf@c^(0+128)
  2119                           
  2120                           ; Switch size 1, requested type "space"
  2121                           ; Number of cases is 3, Range of values is 0 to 105
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte           10     6 (average)
  2125                           ; jumptable            260     6 (fixed)
  2126                           ;	Chosen strategy is simple_byte
  2127  0EE3  3A00               	xorlw	0	; case 0
  2128  0EE4  1903               	skipnz
  2129  0EE5  2FF9               	goto	l3131
  2130  0EE6  3A64               	xorlw	100	; case 100
  2131  0EE7  1903               	skipnz
  2132  0EE8  2EED               	goto	l3057
  2133  0EE9  3A0D               	xorlw	13	; case 105
  2134  0EEA  1903               	skipnz
  2135  0EEB  2EED               	goto	l3057
  2136  0EEC  2E50               	goto	l3129
  2137  0EED                     l3057:	
  2138                           
  2139                           ;doprnt.c: 1262: {
  2140                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2141  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  2142  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  2143  0EEF  085D               	movf	sprintf@ap^(0+128),w
  2144  0EF0  0084               	movwf	4
  2145  0EF1  1383               	bcf	3,7	;select IRP bank0
  2146  0EF2  0800               	movf	0,w
  2147  0EF3  00DF               	movwf	sprintf@_val^(0+128)
  2148  0EF4  0A84               	incf	4,f
  2149  0EF5  0800               	movf	0,w
  2150  0EF6  00E0               	movwf	(sprintf@_val+1)^(0+128)
  2151  0EF7  3002               	movlw	2
  2152  0EF8  00DA               	movwf	??_sprintf^(0+128)
  2153  0EF9  085A               	movf	??_sprintf^(0+128),w
  2154  0EFA  07DD               	addwf	sprintf@ap^(0+128),f
  2155                           
  2156                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2157  0EFB  1FE0               	btfss	(sprintf@_val+1)^(0+128),7
  2158  0EFC  2F06               	goto	l3067
  2159                           
  2160                           ;doprnt.c: 1271: flag |= 0x03;
  2161  0EFD  3003               	movlw	3
  2162  0EFE  00DA               	movwf	??_sprintf^(0+128)
  2163  0EFF  085A               	movf	??_sprintf^(0+128),w
  2164  0F00  04E3               	iorwf	sprintf@flag^(0+128),f
  2165                           
  2166                           ;doprnt.c: 1272: _val._val = -_val._val;
  2167  0F01  09DF               	comf	sprintf@_val^(0+128),f
  2168  0F02  09E0               	comf	(sprintf@_val+1)^(0+128),f
  2169  0F03  0ADF               	incf	sprintf@_val^(0+128),f
  2170  0F04  1903               	skipnz
  2171  0F05  0AE0               	incf	(sprintf@_val+1)^(0+128),f
  2172  0F06                     l3067:	
  2173                           
  2174                           ;doprnt.c: 1273: }
  2175                           ;doprnt.c: 1275: }
  2176                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2177  0F06  01E7               	clrf	sprintf@c^(0+128)
  2178  0F07  0AE7               	incf	sprintf@c^(0+128),f
  2179  0F08  0867               	movf	sprintf@c^(0+128),w
  2180  0F09  3A05               	xorlw	5
  2181  0F0A  1903               	btfsc	3,2
  2182  0F0B  2F2D               	goto	l3079
  2183  0F0C                     l3071:	
  2184                           
  2185                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2186  0F0C  0867               	movf	sprintf@c^(0+128),w
  2187  0F0D  00DA               	movwf	??_sprintf^(0+128)
  2188  0F0E  075A               	addwf	??_sprintf^(0+128),w
  2189  0F0F  3E01               	addlw	low (_dpowers-__stringbase)
  2190  0F10  0084               	movwf	4
  2191  0F11  160A  118A  200A  120A  158A  	fcall	stringdir
  2192  0F16  00DB               	movwf	(??_sprintf+1)^(0+128)
  2193  0F17  160A  118A  200A  120A  158A  	fcall	stringdir
  2194  0F1C  00DC               	movwf	((??_sprintf+1)^(0+128)+1)
  2195  0F1D  085C               	movf	(??_sprintf+2)^(0+128),w
  2196  0F1E  0260               	subwf	(sprintf@_val+1)^(0+128),w
  2197  0F1F  1D03               	skipz
  2198  0F20  2F23               	goto	u3685
  2199  0F21  085B               	movf	(??_sprintf+1)^(0+128),w
  2200  0F22  025F               	subwf	sprintf@_val^(0+128),w
  2201  0F23                     u3685:	
  2202  0F23  1C03               	btfss	3,0
  2203  0F24  2F2D               	goto	l3079
  2204                           
  2205                           ;doprnt.c: 1316: break;
  2206  0F25  3001               	movlw	1
  2207  0F26  00DA               	movwf	??_sprintf^(0+128)
  2208  0F27  085A               	movf	??_sprintf^(0+128),w
  2209  0F28  07E7               	addwf	sprintf@c^(0+128),f
  2210  0F29  0867               	movf	sprintf@c^(0+128),w
  2211  0F2A  3A05               	xorlw	5
  2212  0F2B  1D03               	skipz
  2213  0F2C  2F0C               	goto	l3071
  2214  0F2D                     l3079:	
  2215                           
  2216                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2217  0F2D  0865               	movf	(sprintf@width+1)^(0+128),w
  2218  0F2E  0464               	iorwf	sprintf@width^(0+128),w
  2219  0F2F  1903               	skipnz
  2220  0F30  2F3B               	goto	l494
  2221  0F31  0863               	movf	sprintf@flag^(0+128),w
  2222  0F32  3903               	andlw	3
  2223  0F33  1903               	btfsc	3,2
  2224  0F34  2F3B               	goto	l494
  2225                           
  2226                           ;doprnt.c: 1355: width--;
  2227  0F35  30FF               	movlw	255
  2228  0F36  07E4               	addwf	sprintf@width^(0+128),f
  2229  0F37  1803               	skipnc
  2230  0F38  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2231  0F39  30FF               	movlw	255
  2232  0F3A  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2233  0F3B                     l494:	
  2234                           
  2235                           ;doprnt.c: 1390: if(width > c)
  2236  0F3B  0867               	movf	sprintf@c^(0+128),w
  2237  0F3C  00DA               	movwf	??_sprintf^(0+128)
  2238  0F3D  01DB               	clrf	(??_sprintf^(0+128)+1)
  2239  0F3E  1BDA               	btfsc	??_sprintf^(0+128),7
  2240  0F3F  03DB               	decf	(??_sprintf^(0+128)+1),f
  2241  0F40  085B               	movf	(??_sprintf+1)^(0+128),w
  2242  0F41  3A80               	xorlw	128
  2243  0F42  00DC               	movwf	(??_sprintf+2)^(0+128)
  2244  0F43  0865               	movf	(sprintf@width+1)^(0+128),w
  2245  0F44  3A80               	xorlw	128
  2246  0F45  025C               	subwf	(??_sprintf+2)^(0+128),w
  2247  0F46  1D03               	skipz
  2248  0F47  2F4A               	goto	u3725
  2249  0F48  0864               	movf	sprintf@width^(0+128),w
  2250  0F49  025A               	subwf	??_sprintf^(0+128),w
  2251  0F4A                     u3725:	
  2252  0F4A  1803               	skipnc
  2253  0F4B  2F5A               	goto	l3087
  2254                           
  2255                           ;doprnt.c: 1391: width -= c;
  2256  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  2258  0F4E  0867               	movf	sprintf@c^(0+128),w
  2259  0F4F  00DA               	movwf	??_sprintf^(0+128)
  2260  0F50  01DB               	clrf	(??_sprintf^(0+128)+1)
  2261  0F51  1BDA               	btfsc	??_sprintf^(0+128),7
  2262  0F52  03DB               	decf	(??_sprintf^(0+128)+1),f
  2263  0F53  085A               	movf	??_sprintf^(0+128),w
  2264  0F54  02E4               	subwf	sprintf@width^(0+128),f
  2265  0F55  085B               	movf	(??_sprintf+1)^(0+128),w
  2266  0F56  1C03               	skipc
  2267  0F57  03E5               	decf	(sprintf@width+1)^(0+128),f
  2268  0F58  02E5               	subwf	(sprintf@width+1)^(0+128),f
  2269  0F59  2F5E               	goto	l3089
  2270  0F5A                     l3087:	
  2271                           
  2272                           ;doprnt.c: 1392: else
  2273                           ;doprnt.c: 1393: width = 0;
  2274  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  2275  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  2276  0F5C  01E4               	clrf	sprintf@width^(0+128)
  2277  0F5D  01E5               	clrf	(sprintf@width+1)^(0+128)
  2278  0F5E                     l3089:	
  2279                           
  2280                           ;doprnt.c: 1396: if(flag & 0x04) {
  2281  0F5E  1D63               	btfss	sprintf@flag^(0+128),2
  2282  0F5F  2F85               	goto	l3105
  2283                           
  2284                           ;doprnt.c: 1401: if(flag & 0x03)
  2285  0F60  0863               	movf	sprintf@flag^(0+128),w
  2286  0F61  3903               	andlw	3
  2287  0F62  1903               	btfsc	3,2
  2288  0F63  2F6F               	goto	l3097
  2289                           
  2290                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2291  0F64  302D               	movlw	45
  2292  0F65  00DA               	movwf	??_sprintf^(0+128)
  2293  0F66  0866               	movf	sprintf@sp^(0+128),w
  2294  0F67  0084               	movwf	4
  2295  0F68  085A               	movf	??_sprintf^(0+128),w
  2296  0F69  1783               	bsf	3,7	;select IRP bank2
  2297  0F6A  0080               	movwf	0
  2298  0F6B  3001               	movlw	1
  2299  0F6C  00DA               	movwf	??_sprintf^(0+128)
  2300  0F6D  085A               	movf	??_sprintf^(0+128),w
  2301  0F6E  07E6               	addwf	sprintf@sp^(0+128),f
  2302  0F6F                     l3097:	
  2303                           
  2304                           ;doprnt.c: 1424: if(width)
  2305  0F6F  0865               	movf	(sprintf@width+1)^(0+128),w
  2306  0F70  0464               	iorwf	sprintf@width^(0+128),w
  2307  0F71  1903               	skipnz
  2308  0F72  2FAD               	goto	l3119
  2309                           
  2310                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2311                           
  2312                           ;doprnt.c: 1425: do
  2313  0F73  3030               	movlw	48
  2314  0F74  00DA               	movwf	??_sprintf^(0+128)
  2315  0F75  0866               	movf	sprintf@sp^(0+128),w
  2316  0F76  0084               	movwf	4
  2317  0F77  085A               	movf	??_sprintf^(0+128),w
  2318  0F78  1783               	bsf	3,7	;select IRP bank2
  2319  0F79  0080               	movwf	0
  2320  0F7A  3001               	movlw	1
  2321  0F7B  00DA               	movwf	??_sprintf^(0+128)
  2322  0F7C  085A               	movf	??_sprintf^(0+128),w
  2323  0F7D  07E6               	addwf	sprintf@sp^(0+128),f
  2324                           
  2325                           ;doprnt.c: 1427: while(--width);
  2326  0F7E  30FF               	movlw	255
  2327  0F7F  07E4               	addwf	sprintf@width^(0+128),f
  2328  0F80  1803               	skipnc
  2329  0F81  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2330  0F82  30FF               	movlw	255
  2331  0F83  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2332  0F84  2F6F               	goto	l3097
  2333  0F85                     l3105:	
  2334                           ;doprnt.c: 1429: } else
  2335                           
  2336                           
  2337                           ;doprnt.c: 1431: {
  2338                           ;doprnt.c: 1433: if(width
  2339                           ;doprnt.c: 1437: )
  2340  0F85  0865               	movf	(sprintf@width+1)^(0+128),w
  2341  0F86  0464               	iorwf	sprintf@width^(0+128),w
  2342  0F87  1903               	skipnz
  2343  0F88  2F9E               	goto	l3113
  2344  0F89                     l3107:	
  2345                           ;doprnt.c: 1438: do
  2346                           
  2347                           
  2348                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2349  0F89  3020               	movlw	32
  2350  0F8A  00DA               	movwf	??_sprintf^(0+128)
  2351  0F8B  0866               	movf	sprintf@sp^(0+128),w
  2352  0F8C  0084               	movwf	4
  2353  0F8D  085A               	movf	??_sprintf^(0+128),w
  2354  0F8E  1783               	bsf	3,7	;select IRP bank2
  2355  0F8F  0080               	movwf	0
  2356  0F90  3001               	movlw	1
  2357  0F91  00DA               	movwf	??_sprintf^(0+128)
  2358  0F92  085A               	movf	??_sprintf^(0+128),w
  2359  0F93  07E6               	addwf	sprintf@sp^(0+128),f
  2360                           
  2361                           ;doprnt.c: 1440: while(--width);
  2362  0F94  30FF               	movlw	255
  2363  0F95  07E4               	addwf	sprintf@width^(0+128),f
  2364  0F96  1803               	skipnc
  2365  0F97  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2366  0F98  30FF               	movlw	255
  2367  0F99  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2368  0F9A  0865               	movf	(sprintf@width+1)^(0+128),w
  2369  0F9B  0464               	iorwf	sprintf@width^(0+128),w
  2370  0F9C  1D03               	skipz
  2371  0F9D  2F89               	goto	l3107
  2372  0F9E                     l3113:	
  2373                           
  2374                           ;doprnt.c: 1447: if(flag & 0x03)
  2375  0F9E  0863               	movf	sprintf@flag^(0+128),w
  2376  0F9F  3903               	andlw	3
  2377  0FA0  1903               	btfsc	3,2
  2378  0FA1  2FAD               	goto	l3119
  2379                           
  2380                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2381  0FA2  302D               	movlw	45
  2382  0FA3  00DA               	movwf	??_sprintf^(0+128)
  2383  0FA4  0866               	movf	sprintf@sp^(0+128),w
  2384  0FA5  0084               	movwf	4
  2385  0FA6  085A               	movf	??_sprintf^(0+128),w
  2386  0FA7  1783               	bsf	3,7	;select IRP bank2
  2387  0FA8  0080               	movwf	0
  2388  0FA9  3001               	movlw	1
  2389  0FAA  00DA               	movwf	??_sprintf^(0+128)
  2390  0FAB  085A               	movf	??_sprintf^(0+128),w
  2391  0FAC  07E6               	addwf	sprintf@sp^(0+128),f
  2392  0FAD                     l3119:	
  2393                           
  2394                           ;doprnt.c: 1478: }
  2395                           ;doprnt.c: 1481: prec = c;
  2396  0FAD  0867               	movf	sprintf@c^(0+128),w
  2397  0FAE  00DA               	movwf	??_sprintf^(0+128)
  2398  0FAF  085A               	movf	??_sprintf^(0+128),w
  2399  0FB0  00DE               	movwf	sprintf@prec^(0+128)
  2400  0FB1                     l3127:	
  2401                           ;doprnt.c: 1483: while(prec--) {
  2402                           
  2403  0FB1  30FF               	movlw	-1
  2404  0FB2  00DA               	movwf	??_sprintf^(0+128)
  2405  0FB3  085A               	movf	??_sprintf^(0+128),w
  2406  0FB4  07DE               	addwf	sprintf@prec^(0+128),f
  2407  0FB5  085E               	movf	sprintf@prec^(0+128),w
  2408  0FB6  3AFF               	xorlw	-1
  2409  0FB7  1903               	btfsc	3,2
  2410  0FB8  2E50               	goto	l3129
  2411                           
  2412                           ;doprnt.c: 1487: {
  2413                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2414  0FB9  300A               	movlw	10
  2415  0FBA  00D1               	movwf	___lwmod@divisor^(0+128)
  2416  0FBB  3000               	movlw	0
  2417  0FBC  00D2               	movwf	(___lwmod@divisor^(0+128)+1)
  2418  0FBD  085E               	movf	sprintf@prec^(0+128),w
  2419  0FBE  00DA               	movwf	??_sprintf^(0+128)
  2420  0FBF  075A               	addwf	??_sprintf^(0+128),w
  2421  0FC0  3E01               	addlw	low (_dpowers-__stringbase)
  2422  0FC1  0084               	movwf	4
  2423  0FC2  160A  118A  200A  120A  158A  	fcall	stringdir
  2424  0FC7  00C9               	movwf	___lwdiv@divisor^(0+128)
  2425  0FC8  160A  118A  200A  120A  158A  	fcall	stringdir
  2426  0FCD  00CA               	movwf	(___lwdiv@divisor+1)^(0+128)
  2427  0FCE  0860               	movf	(sprintf@_val+1)^(0+128),w
  2428  0FCF  01CC               	clrf	(___lwdiv@dividend+1)^(0+128)
  2429  0FD0  07CC               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2430  0FD1  085F               	movf	sprintf@_val^(0+128),w
  2431  0FD2  01CB               	clrf	___lwdiv@dividend^(0+128)
  2432  0FD3  07CB               	addwf	___lwdiv@dividend^(0+128),f
  2433  0FD4  160A  118A  2472  120A  158A  	fcall	___lwdiv
  2434  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2435  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  2436  0FDB  084A               	movf	(?___lwdiv+1)^(0+128),w
  2437  0FDC  01D4               	clrf	(___lwmod@dividend+1)^(0+128)
  2438  0FDD  07D4               	addwf	(___lwmod@dividend+1)^(0+128),f
  2439  0FDE  0849               	movf	?___lwdiv^(0+128),w
  2440  0FDF  01D3               	clrf	___lwmod@dividend^(0+128)
  2441  0FE0  07D3               	addwf	___lwmod@dividend^(0+128),f
  2442  0FE1  160A  118A  23FE  120A  158A  	fcall	___lwmod
  2443  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2444  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2445  0FE8  0851               	movf	?___lwmod^(0+128),w
  2446  0FE9  3E30               	addlw	48
  2447  0FEA  00DB               	movwf	(??_sprintf+1)^(0+128)
  2448  0FEB  085B               	movf	(??_sprintf+1)^(0+128),w
  2449  0FEC  00E7               	movwf	sprintf@c^(0+128)
  2450                           
  2451                           ;doprnt.c: 1532: }
  2452                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2453  0FED  0867               	movf	sprintf@c^(0+128),w
  2454  0FEE  00DA               	movwf	??_sprintf^(0+128)
  2455  0FEF  0866               	movf	sprintf@sp^(0+128),w
  2456  0FF0  0084               	movwf	4
  2457  0FF1  085A               	movf	??_sprintf^(0+128),w
  2458  0FF2  1783               	bsf	3,7	;select IRP bank2
  2459  0FF3  0080               	movwf	0
  2460  0FF4  3001               	movlw	1
  2461  0FF5  00DA               	movwf	??_sprintf^(0+128)
  2462  0FF6  085A               	movf	??_sprintf^(0+128),w
  2463  0FF7  07E6               	addwf	sprintf@sp^(0+128),f
  2464  0FF8  2FB1               	goto	l3127
  2465  0FF9                     l3131:	
  2466                           ;doprnt.c: 1534: }
  2467                           ;doprnt.c: 1542: }
  2468                           ;doprnt.c: 1544: alldone:
  2469                           
  2470                           
  2471                           ;doprnt.c: 1547: *sp = 0;
  2472  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0FFB  0866               	movf	sprintf@sp^(0+128),w
  2475  0FFC  0084               	movwf	4
  2476  0FFD  1783               	bsf	3,7	;select IRP bank2
  2477  0FFE  0180               	clrf	0
  2478  0FFF  0008               	return
  2479  1000                     __end_of_sprintf:	
  2480                           ;doprnt.c: 1549: return 0;
  2481                           ;	Return value of _sprintf is never used
  2482                           
  2483                           
  2484                           	psect	text2
  2485  1234                     __ptext2:	
  2486 ;; *************** function _isdigit *****************
  2487 ;; Defined at:
  2488 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  c               1    wreg     unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  c               1    1[BANK1 ] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;		None               void
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2502 ;;      Params:         0       0       0       0       0
  2503 ;;      Locals:         0       0       2       0       0
  2504 ;;      Temps:          0       0       0       0       0
  2505 ;;      Totals:         0       0       2       0       0
  2506 ;;Total ram usage:        2 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    5
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_sprintf
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function _isdigit
  2518  1234                     _isdigit:	
  2519                           
  2520                           ;incstack = 0
  2521                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2522                           ;isdigit@c stored from wreg
  2523  1234  1683               	bsf	3,5	;RP0=1, select bank1
  2524  1235  1303               	bcf	3,6	;RP1=0, select bank1
  2525  1236  00CA               	movwf	isdigit@c^(0+128)
  2526  1237  01C9               	clrf	_isdigit$1439^(0+128)
  2527  1238  303A               	movlw	58
  2528  1239  024A               	subwf	isdigit@c^(0+128),w
  2529  123A  1803               	skipnc
  2530  123B  2A42               	goto	l2507
  2531  123C  3030               	movlw	48
  2532  123D  024A               	subwf	isdigit@c^(0+128),w
  2533  123E  1C03               	skipc
  2534  123F  2A42               	goto	l2507
  2535  1240  01C9               	clrf	_isdigit$1439^(0+128)
  2536  1241  0AC9               	incf	_isdigit$1439^(0+128),f
  2537  1242                     l2507:	
  2538  1242  0C49               	rrf	_isdigit$1439^(0+128),w
  2539  1243  0008               	return
  2540  1244                     __end_of_isdigit:	
  2541                           
  2542                           	psect	text3
  2543  137F                     __ptext3:	
  2544 ;; *************** function ___wmul *****************
  2545 ;; Defined at:
  2546 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2549 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  product         2    4[BANK1 ] unsigned int 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  2    0[BANK1 ] unsigned int 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       4       0       0
  2562 ;;      Locals:         0       0       2       0       0
  2563 ;;      Temps:          0       0       0       0       0
  2564 ;;      Totals:         0       0       6       0       0
  2565 ;;Total ram usage:        6 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    5
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_sprintf
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function ___wmul
  2577  137F                     ___wmul:	
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2581  137F  1683               	bsf	3,5	;RP0=1, select bank1
  2582  1380  1303               	bcf	3,6	;RP1=0, select bank1
  2583  1381  01CD               	clrf	___wmul@product^(0+128)
  2584  1382  01CE               	clrf	(___wmul@product+1)^(0+128)
  2585  1383                     l2513:	
  2586  1383  1C49               	btfss	___wmul@multiplier^(0+128),0
  2587  1384  2B8B               	goto	l595
  2588  1385  084B               	movf	___wmul@multiplicand^(0+128),w
  2589  1386  07CD               	addwf	___wmul@product^(0+128),f
  2590  1387  1803               	skipnc
  2591  1388  0ACE               	incf	(___wmul@product+1)^(0+128),f
  2592  1389  084C               	movf	(___wmul@multiplicand+1)^(0+128),w
  2593  138A  07CE               	addwf	(___wmul@product+1)^(0+128),f
  2594  138B                     l595:	
  2595  138B  3001               	movlw	1
  2596  138C                     u2815:	
  2597  138C  1003               	clrc
  2598  138D  0DCB               	rlf	___wmul@multiplicand^(0+128),f
  2599  138E  0DCC               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2600  138F  3EFF               	addlw	-1
  2601  1390  1D03               	skipz
  2602  1391  2B8C               	goto	u2815
  2603  1392  3001               	movlw	1
  2604  1393                     u2825:	
  2605  1393  1003               	clrc
  2606  1394  0CCA               	rrf	(___wmul@multiplier+1)^(0+128),f
  2607  1395  0CC9               	rrf	___wmul@multiplier^(0+128),f
  2608  1396  3EFF               	addlw	-1
  2609  1397  1D03               	skipz
  2610  1398  2B93               	goto	u2825
  2611  1399  084A               	movf	(___wmul@multiplier+1)^(0+128),w
  2612  139A  0449               	iorwf	___wmul@multiplier^(0+128),w
  2613  139B  1D03               	skipz
  2614  139C  2B83               	goto	l2513
  2615  139D  084E               	movf	(___wmul@product+1)^(0+128),w
  2616  139E  01CA               	clrf	(?___wmul+1)^(0+128)
  2617  139F  07CA               	addwf	(?___wmul+1)^(0+128),f
  2618  13A0  084D               	movf	___wmul@product^(0+128),w
  2619  13A1  01C9               	clrf	?___wmul^(0+128)
  2620  13A2  07C9               	addwf	?___wmul^(0+128),f
  2621  13A3  0008               	return
  2622  13A4                     __end_of___wmul:	
  2623                           
  2624                           	psect	text4
  2625  13FE                     __ptext4:	
  2626 ;; *************** function ___lwmod *****************
  2627 ;; Defined at:
  2628 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  divisor         2    8[BANK1 ] unsigned int 
  2631 ;;  dividend        2   10[BANK1 ] unsigned int 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  counter         1   13[BANK1 ] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  2    8[BANK1 ] unsigned int 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         0       0       4       0       0
  2644 ;;      Locals:         0       0       1       0       0
  2645 ;;      Temps:          0       0       1       0       0
  2646 ;;      Totals:         0       0       6       0       0
  2647 ;;Total ram usage:        6 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    5
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_sprintf
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function ___lwmod
  2659  13FE                     ___lwmod:	
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2663  13FE  1683               	bsf	3,5	;RP0=1, select bank1
  2664  13FF  1303               	bcf	3,6	;RP1=0, select bank1
  2665  1400  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  2666  1401  0451               	iorwf	___lwmod@divisor^(0+128),w
  2667  1402  1903               	skipnz
  2668  1403  2C2D               	goto	l2701
  2669  1404  01D6               	clrf	___lwmod@counter^(0+128)
  2670  1405  0AD6               	incf	___lwmod@counter^(0+128),f
  2671  1406                     l2691:	
  2672  1406  1BD2               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2673  1407  2C14               	goto	l2693
  2674  1408  3001               	movlw	1
  2675  1409                     u3265:	
  2676  1409  1003               	clrc
  2677  140A  0DD1               	rlf	___lwmod@divisor^(0+128),f
  2678  140B  0DD2               	rlf	(___lwmod@divisor+1)^(0+128),f
  2679  140C  3EFF               	addlw	-1
  2680  140D  1D03               	skipz
  2681  140E  2C09               	goto	u3265
  2682  140F  3001               	movlw	1
  2683  1410  00D5               	movwf	??___lwmod^(0+128)
  2684  1411  0855               	movf	??___lwmod^(0+128),w
  2685  1412  07D6               	addwf	___lwmod@counter^(0+128),f
  2686  1413  2C06               	goto	l2691
  2687  1414                     l2693:	
  2688  1414  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  2689  1415  0254               	subwf	(___lwmod@dividend+1)^(0+128),w
  2690  1416  1D03               	skipz
  2691  1417  2C1A               	goto	u3285
  2692  1418  0851               	movf	___lwmod@divisor^(0+128),w
  2693  1419  0253               	subwf	___lwmod@dividend^(0+128),w
  2694  141A                     u3285:	
  2695  141A  1C03               	skipc
  2696  141B  2C22               	goto	l2697
  2697  141C  0851               	movf	___lwmod@divisor^(0+128),w
  2698  141D  02D3               	subwf	___lwmod@dividend^(0+128),f
  2699  141E  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  2700  141F  1C03               	skipc
  2701  1420  03D4               	decf	(___lwmod@dividend+1)^(0+128),f
  2702  1421  02D4               	subwf	(___lwmod@dividend+1)^(0+128),f
  2703  1422                     l2697:	
  2704  1422  3001               	movlw	1
  2705  1423                     u3295:	
  2706  1423  1003               	clrc
  2707  1424  0CD2               	rrf	(___lwmod@divisor+1)^(0+128),f
  2708  1425  0CD1               	rrf	___lwmod@divisor^(0+128),f
  2709  1426  3EFF               	addlw	-1
  2710  1427  1D03               	skipz
  2711  1428  2C23               	goto	u3295
  2712  1429  3001               	movlw	1
  2713  142A  02D6               	subwf	___lwmod@counter^(0+128),f
  2714  142B  1D03               	btfss	3,2
  2715  142C  2C14               	goto	l2693
  2716  142D                     l2701:	
  2717  142D  0854               	movf	(___lwmod@dividend+1)^(0+128),w
  2718  142E  01D2               	clrf	(?___lwmod+1)^(0+128)
  2719  142F  07D2               	addwf	(?___lwmod+1)^(0+128),f
  2720  1430  0853               	movf	___lwmod@dividend^(0+128),w
  2721  1431  01D1               	clrf	?___lwmod^(0+128)
  2722  1432  07D1               	addwf	?___lwmod^(0+128),f
  2723  1433  0008               	return
  2724  1434                     __end_of___lwmod:	
  2725                           
  2726                           	psect	text5
  2727  1472                     __ptext5:	
  2728 ;; *************** function ___lwdiv *****************
  2729 ;; Defined at:
  2730 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  divisor         2    0[BANK1 ] unsigned int 
  2733 ;;  dividend        2    2[BANK1 ] unsigned int 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  quotient        2    5[BANK1 ] unsigned int 
  2736 ;;  counter         1    7[BANK1 ] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  2    0[BANK1 ] unsigned int 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       0       4       0       0
  2747 ;;      Locals:         0       0       3       0       0
  2748 ;;      Temps:          0       0       1       0       0
  2749 ;;      Totals:         0       0       8       0       0
  2750 ;;Total ram usage:        8 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    5
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_sprintf
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function ___lwdiv
  2762  1472                     ___lwdiv:	
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2766  1472  1683               	bsf	3,5	;RP0=1, select bank1
  2767  1473  1303               	bcf	3,6	;RP1=0, select bank1
  2768  1474  01CE               	clrf	___lwdiv@quotient^(0+128)
  2769  1475  01CF               	clrf	(___lwdiv@quotient+1)^(0+128)
  2770  1476  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  2771  1477  0449               	iorwf	___lwdiv@divisor^(0+128),w
  2772  1478  1903               	skipnz
  2773  1479  2CAB               	goto	l2679
  2774  147A  01D0               	clrf	___lwdiv@counter^(0+128)
  2775  147B  0AD0               	incf	___lwdiv@counter^(0+128),f
  2776  147C                     l2667:	
  2777  147C  1BCA               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2778  147D  2C8A               	goto	l2669
  2779  147E  3001               	movlw	1
  2780  147F                     u3195:	
  2781  147F  1003               	clrc
  2782  1480  0DC9               	rlf	___lwdiv@divisor^(0+128),f
  2783  1481  0DCA               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2784  1482  3EFF               	addlw	-1
  2785  1483  1D03               	skipz
  2786  1484  2C7F               	goto	u3195
  2787  1485  3001               	movlw	1
  2788  1486  00CD               	movwf	??___lwdiv^(0+128)
  2789  1487  084D               	movf	??___lwdiv^(0+128),w
  2790  1488  07D0               	addwf	___lwdiv@counter^(0+128),f
  2791  1489  2C7C               	goto	l2667
  2792  148A                     l2669:	
  2793  148A  3001               	movlw	1
  2794  148B                     u3215:	
  2795  148B  1003               	clrc
  2796  148C  0DCE               	rlf	___lwdiv@quotient^(0+128),f
  2797  148D  0DCF               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2798  148E  3EFF               	addlw	-1
  2799  148F  1D03               	skipz
  2800  1490  2C8B               	goto	u3215
  2801  1491  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  2802  1492  024C               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2803  1493  1D03               	skipz
  2804  1494  2C97               	goto	u3225
  2805  1495  0849               	movf	___lwdiv@divisor^(0+128),w
  2806  1496  024B               	subwf	___lwdiv@dividend^(0+128),w
  2807  1497                     u3225:	
  2808  1497  1C03               	skipc
  2809  1498  2CA0               	goto	l2675
  2810  1499  0849               	movf	___lwdiv@divisor^(0+128),w
  2811  149A  02CB               	subwf	___lwdiv@dividend^(0+128),f
  2812  149B  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  2813  149C  1C03               	skipc
  2814  149D  03CC               	decf	(___lwdiv@dividend+1)^(0+128),f
  2815  149E  02CC               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2816  149F  144E               	bsf	___lwdiv@quotient^(0+128),0
  2817  14A0                     l2675:	
  2818  14A0  3001               	movlw	1
  2819  14A1                     u3235:	
  2820  14A1  1003               	clrc
  2821  14A2  0CCA               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2822  14A3  0CC9               	rrf	___lwdiv@divisor^(0+128),f
  2823  14A4  3EFF               	addlw	-1
  2824  14A5  1D03               	skipz
  2825  14A6  2CA1               	goto	u3235
  2826  14A7  3001               	movlw	1
  2827  14A8  02D0               	subwf	___lwdiv@counter^(0+128),f
  2828  14A9  1D03               	btfss	3,2
  2829  14AA  2C8A               	goto	l2669
  2830  14AB                     l2679:	
  2831  14AB  084F               	movf	(___lwdiv@quotient+1)^(0+128),w
  2832  14AC  01CA               	clrf	(?___lwdiv+1)^(0+128)
  2833  14AD  07CA               	addwf	(?___lwdiv+1)^(0+128),f
  2834  14AE  084E               	movf	___lwdiv@quotient^(0+128),w
  2835  14AF  01C9               	clrf	?___lwdiv^(0+128)
  2836  14B0  07C9               	addwf	?___lwdiv^(0+128),f
  2837  14B1  0008               	return
  2838  14B2                     __end_of___lwdiv:	
  2839                           
  2840                           	psect	text6
  2841  14B2                     __ptext6:	
  2842 ;; *************** function _USART_Init *****************
  2843 ;; Defined at:
  2844 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  BaudRate        4   15[BANK1 ] long 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;		None               void
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       4       0       0
  2859 ;;      Locals:         0       0       0       0       0
  2860 ;;      Temps:          0       0       4       0       0
  2861 ;;      Totals:         0       0       8       0       0
  2862 ;;Total ram usage:        8 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    6
  2865 ;; This function calls:
  2866 ;;		___aldiv
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _USART_Init
  2874  14B2                     _USART_Init:	
  2875                           
  2876                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  2880  14B2  1683               	bsf	3,5	;RP0=1, select bank1
  2881  14B3  1303               	bcf	3,6	;RP1=0, select bank1
  2882  14B4  0858               	movf	USART_Init@BaudRate^(0+128),w
  2883  14B5  00DC               	movwf	??_USART_Init^(0+128)
  2884  14B6  0859               	movf	(USART_Init@BaudRate+1)^(0+128),w
  2885  14B7  00DD               	movwf	(??_USART_Init^(0+128)+1)
  2886  14B8  085A               	movf	(USART_Init@BaudRate+2)^(0+128),w
  2887  14B9  00DE               	movwf	(??_USART_Init^(0+128)+2)
  2888  14BA  085B               	movf	(USART_Init@BaudRate+3)^(0+128),w
  2889  14BB  00DF               	movwf	(??_USART_Init^(0+128)+3)
  2890  14BC  3004               	movlw	4
  2891  14BD                     u3595:	
  2892  14BD  1003               	clrc
  2893  14BE  0DDC               	rlf	??_USART_Init^(0+128),f
  2894  14BF  0DDD               	rlf	(??_USART_Init^(0+128)+1),f
  2895  14C0  0DDE               	rlf	(??_USART_Init^(0+128)+2),f
  2896  14C1  0DDF               	rlf	(??_USART_Init^(0+128)+3),f
  2897  14C2  3EFF               	addlw	-1
  2898  14C3  1D03               	skipz
  2899  14C4  2CBD               	goto	u3595
  2900  14C5  085F               	movf	(??_USART_Init+3)^(0+128),w
  2901  14C6  00CC               	movwf	(___aldiv@divisor+3)^(0+128)
  2902  14C7  085E               	movf	(??_USART_Init+2)^(0+128),w
  2903  14C8  00CB               	movwf	(___aldiv@divisor+2)^(0+128)
  2904  14C9  085D               	movf	(??_USART_Init+1)^(0+128),w
  2905  14CA  00CA               	movwf	(___aldiv@divisor+1)^(0+128)
  2906  14CB  085C               	movf	??_USART_Init^(0+128),w
  2907  14CC  00C9               	movwf	___aldiv@divisor^(0+128)
  2908  14CD  3001               	movlw	1
  2909  14CE  00D0               	movwf	(___aldiv@dividend+3)^(0+128)
  2910  14CF  3019               	movlw	25
  2911  14D0  00CF               	movwf	(___aldiv@dividend+2)^(0+128)
  2912  14D1  3040               	movlw	64
  2913  14D2  00CE               	movwf	(___aldiv@dividend+1)^(0+128)
  2914  14D3  3000               	movlw	0
  2915  14D4  00CD               	movwf	___aldiv@dividend^(0+128)
  2916  14D5  120A  118A  2757   	fcall	___aldiv
  2917  14D8  1683               	bsf	3,5	;RP0=1, select bank1
  2918  14D9  1303               	bcf	3,6	;RP1=0, select bank1
  2919  14DA  0849               	movf	?___aldiv^(0+128),w
  2920  14DB  3EFF               	addlw	255
  2921  14DC  0099               	movwf	25	;volatile
  2922                           
  2923                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  2924  14DD  1398               	bcf	24,7	;volatile
  2925                           
  2926                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  2927  14DE  1318               	bcf	24,6	;volatile
  2928                           
  2929                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  2930  14DF  1698               	bsf	24,5	;volatile
  2931                           
  2932                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  2933  14E0  1218               	bcf	24,4	;volatile
  2934                           
  2935                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  2936  14E1  1518               	bsf	24,2	;volatile
  2937                           
  2938                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  2939  14E2  1498               	bsf	24,1	;volatile
  2940                           
  2941                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  2942  14E3  1018               	bcf	24,0	;volatile
  2943                           
  2944                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  2945  14E4  1283               	bcf	3,5	;RP0=0, select bank0
  2946  14E5  1303               	bcf	3,6	;RP1=0, select bank0
  2947  14E6  1798               	bsf	24,7	;volatile
  2948                           
  2949                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  2950  14E7  1318               	bcf	24,6	;volatile
  2951                           
  2952                           ;usart.c: 28: RCSTAbits.SREN = 0;
  2953  14E8  1298               	bcf	24,5	;volatile
  2954                           
  2955                           ;usart.c: 29: RCSTAbits.CREN = 1;
  2956  14E9  1618               	bsf	24,4	;volatile
  2957                           
  2958                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  2959  14EA  1198               	bcf	24,3	;volatile
  2960                           
  2961                           ;usart.c: 31: RCSTAbits.FERR = 0;
  2962  14EB  1118               	bcf	24,2	;volatile
  2963                           
  2964                           ;usart.c: 32: RCSTAbits.OERR = 0;
  2965  14EC  1098               	bcf	24,1	;volatile
  2966                           
  2967                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  2968  14ED  1018               	bcf	24,0	;volatile
  2969                           
  2970                           ;usart.c: 36: PIE1bits.TXIE = 0;
  2971  14EE  1683               	bsf	3,5	;RP0=1, select bank1
  2972  14EF  1303               	bcf	3,6	;RP1=0, select bank1
  2973  14F0  120C               	bcf	12,4	;volatile
  2974                           
  2975                           ;usart.c: 37: PIR1bits.TXIF = 0;
  2976  14F1  1283               	bcf	3,5	;RP0=0, select bank0
  2977  14F2  1303               	bcf	3,6	;RP1=0, select bank0
  2978  14F3  120C               	bcf	12,4	;volatile
  2979                           
  2980                           ;usart.c: 38: PIE1bits.RCIE = 1;
  2981  14F4  1683               	bsf	3,5	;RP0=1, select bank1
  2982  14F5  1303               	bcf	3,6	;RP1=0, select bank1
  2983  14F6  168C               	bsf	12,5	;volatile
  2984                           
  2985                           ;usart.c: 39: PIR1bits.RCIF = 0;
  2986  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  2987  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  2988  14F9  128C               	bcf	12,5	;volatile
  2989  14FA  0008               	return
  2990  14FB                     __end_of_USART_Init:	
  2991                           
  2992                           	psect	text7
  2993  0757                     __ptext7:	
  2994 ;; *************** function ___aldiv *****************
  2995 ;; Defined at:
  2996 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  divisor         4    0[BANK1 ] long 
  2999 ;;  dividend        4    4[BANK1 ] long 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  quotient        4   11[BANK1 ] long 
  3002 ;;  sign            1   10[BANK1 ] unsigned char 
  3003 ;;  counter         1    9[BANK1 ] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  4    0[BANK1 ] long 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3013 ;;      Params:         0       0       8       0       0
  3014 ;;      Locals:         0       0       6       0       0
  3015 ;;      Temps:          0       0       1       0       0
  3016 ;;      Totals:         0       0      15       0       0
  3017 ;;Total ram usage:       15 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    5
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_USART_Init
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function ___aldiv
  3029  0757                     ___aldiv:	
  3030                           
  3031                           ;incstack = 0
  3032                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3033  0757  1683               	bsf	3,5	;RP0=1, select bank1
  3034  0758  1303               	bcf	3,6	;RP1=0, select bank1
  3035  0759  01D3               	clrf	___aldiv@sign^(0+128)
  3036  075A  1FCC               	btfss	(___aldiv@divisor+3)^(0+128),7
  3037  075B  2F69               	goto	l650
  3038  075C  09C9               	comf	___aldiv@divisor^(0+128),f
  3039  075D  09CA               	comf	(___aldiv@divisor+1)^(0+128),f
  3040  075E  09CB               	comf	(___aldiv@divisor+2)^(0+128),f
  3041  075F  09CC               	comf	(___aldiv@divisor+3)^(0+128),f
  3042  0760  0AC9               	incf	___aldiv@divisor^(0+128),f
  3043  0761  1903               	skipnz
  3044  0762  0ACA               	incf	(___aldiv@divisor+1)^(0+128),f
  3045  0763  1903               	skipnz
  3046  0764  0ACB               	incf	(___aldiv@divisor+2)^(0+128),f
  3047  0765  1903               	skipnz
  3048  0766  0ACC               	incf	(___aldiv@divisor+3)^(0+128),f
  3049  0767  01D3               	clrf	___aldiv@sign^(0+128)
  3050  0768  0AD3               	incf	___aldiv@sign^(0+128),f
  3051  0769                     l650:	
  3052  0769  1FD0               	btfss	(___aldiv@dividend+3)^(0+128),7
  3053  076A  2F7A               	goto	l2533
  3054  076B  09CD               	comf	___aldiv@dividend^(0+128),f
  3055  076C  09CE               	comf	(___aldiv@dividend+1)^(0+128),f
  3056  076D  09CF               	comf	(___aldiv@dividend+2)^(0+128),f
  3057  076E  09D0               	comf	(___aldiv@dividend+3)^(0+128),f
  3058  076F  0ACD               	incf	___aldiv@dividend^(0+128),f
  3059  0770  1903               	skipnz
  3060  0771  0ACE               	incf	(___aldiv@dividend+1)^(0+128),f
  3061  0772  1903               	skipnz
  3062  0773  0ACF               	incf	(___aldiv@dividend+2)^(0+128),f
  3063  0774  1903               	skipnz
  3064  0775  0AD0               	incf	(___aldiv@dividend+3)^(0+128),f
  3065  0776  3001               	movlw	1
  3066  0777  00D1               	movwf	??___aldiv^(0+128)
  3067  0778  0851               	movf	??___aldiv^(0+128),w
  3068  0779  06D3               	xorwf	___aldiv@sign^(0+128),f
  3069  077A                     l2533:	
  3070  077A  3000               	movlw	0
  3071  077B  00D7               	movwf	(___aldiv@quotient+3)^(0+128)
  3072  077C  3000               	movlw	0
  3073  077D  00D6               	movwf	(___aldiv@quotient+2)^(0+128)
  3074  077E  3000               	movlw	0
  3075  077F  00D5               	movwf	(___aldiv@quotient+1)^(0+128)
  3076  0780  3000               	movlw	0
  3077  0781  00D4               	movwf	___aldiv@quotient^(0+128)
  3078  0782  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3079  0783  044B               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3080  0784  044A               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3081  0785  0449               	iorwf	___aldiv@divisor^(0+128),w
  3082  0786  1903               	skipnz
  3083  0787  2FCF               	goto	l2555
  3084  0788  01D2               	clrf	___aldiv@counter^(0+128)
  3085  0789  0AD2               	incf	___aldiv@counter^(0+128),f
  3086  078A                     l2541:	
  3087  078A  1BCC               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3088  078B  2F9A               	goto	l2543
  3089  078C  3001               	movlw	1
  3090  078D  00D1               	movwf	??___aldiv^(0+128)
  3091  078E                     u2875:	
  3092  078E  1003               	clrc
  3093  078F  0DC9               	rlf	___aldiv@divisor^(0+128),f
  3094  0790  0DCA               	rlf	(___aldiv@divisor+1)^(0+128),f
  3095  0791  0DCB               	rlf	(___aldiv@divisor+2)^(0+128),f
  3096  0792  0DCC               	rlf	(___aldiv@divisor+3)^(0+128),f
  3097  0793  0BD1               	decfsz	??___aldiv^(0+128),f
  3098  0794  2F8E               	goto	u2875
  3099  0795  3001               	movlw	1
  3100  0796  00D1               	movwf	??___aldiv^(0+128)
  3101  0797  0851               	movf	??___aldiv^(0+128),w
  3102  0798  07D2               	addwf	___aldiv@counter^(0+128),f
  3103  0799  2F8A               	goto	l2541
  3104  079A                     l2543:	
  3105  079A  3001               	movlw	1
  3106  079B  00D1               	movwf	??___aldiv^(0+128)
  3107  079C                     u2895:	
  3108  079C  1003               	clrc
  3109  079D  0DD4               	rlf	___aldiv@quotient^(0+128),f
  3110  079E  0DD5               	rlf	(___aldiv@quotient+1)^(0+128),f
  3111  079F  0DD6               	rlf	(___aldiv@quotient+2)^(0+128),f
  3112  07A0  0DD7               	rlf	(___aldiv@quotient+3)^(0+128),f
  3113  07A1  0BD1               	decfsz	??___aldiv^(0+128),f
  3114  07A2  2F9C               	goto	u2895
  3115  07A3  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3116  07A4  0250               	subwf	(___aldiv@dividend+3)^(0+128),w
  3117  07A5  1D03               	skipz
  3118  07A6  2FB1               	goto	u2905
  3119  07A7  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  3120  07A8  024F               	subwf	(___aldiv@dividend+2)^(0+128),w
  3121  07A9  1D03               	skipz
  3122  07AA  2FB1               	goto	u2905
  3123  07AB  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  3124  07AC  024E               	subwf	(___aldiv@dividend+1)^(0+128),w
  3125  07AD  1D03               	skipz
  3126  07AE  2FB1               	goto	u2905
  3127  07AF  0849               	movf	___aldiv@divisor^(0+128),w
  3128  07B0  024D               	subwf	___aldiv@dividend^(0+128),w
  3129  07B1                     u2905:	
  3130  07B1  1C03               	skipc
  3131  07B2  2FC2               	goto	l2551
  3132  07B3  0849               	movf	___aldiv@divisor^(0+128),w
  3133  07B4  02CD               	subwf	___aldiv@dividend^(0+128),f
  3134  07B5  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  3135  07B6  1C03               	skipc
  3136  07B7  0F4A               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3137  07B8  02CE               	subwf	(___aldiv@dividend+1)^(0+128),f
  3138  07B9  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  3139  07BA  1C03               	skipc
  3140  07BB  0F4B               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3141  07BC  02CF               	subwf	(___aldiv@dividend+2)^(0+128),f
  3142  07BD  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3143  07BE  1C03               	skipc
  3144  07BF  0F4C               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3145  07C0  02D0               	subwf	(___aldiv@dividend+3)^(0+128),f
  3146  07C1  1454               	bsf	___aldiv@quotient^(0+128),0
  3147  07C2                     l2551:	
  3148  07C2  3001               	movlw	1
  3149  07C3                     u2915:	
  3150  07C3  1003               	clrc
  3151  07C4  0CCC               	rrf	(___aldiv@divisor+3)^(0+128),f
  3152  07C5  0CCB               	rrf	(___aldiv@divisor+2)^(0+128),f
  3153  07C6  0CCA               	rrf	(___aldiv@divisor+1)^(0+128),f
  3154  07C7  0CC9               	rrf	___aldiv@divisor^(0+128),f
  3155  07C8  3EFF               	addlw	-1
  3156  07C9  1D03               	skipz
  3157  07CA  2FC3               	goto	u2915
  3158  07CB  3001               	movlw	1
  3159  07CC  02D2               	subwf	___aldiv@counter^(0+128),f
  3160  07CD  1D03               	btfss	3,2
  3161  07CE  2F9A               	goto	l2543
  3162  07CF                     l2555:	
  3163  07CF  0853               	movf	___aldiv@sign^(0+128),w
  3164  07D0  1903               	btfsc	3,2
  3165  07D1  2FDD               	goto	l2559
  3166  07D2  09D4               	comf	___aldiv@quotient^(0+128),f
  3167  07D3  09D5               	comf	(___aldiv@quotient+1)^(0+128),f
  3168  07D4  09D6               	comf	(___aldiv@quotient+2)^(0+128),f
  3169  07D5  09D7               	comf	(___aldiv@quotient+3)^(0+128),f
  3170  07D6  0AD4               	incf	___aldiv@quotient^(0+128),f
  3171  07D7  1903               	skipnz
  3172  07D8  0AD5               	incf	(___aldiv@quotient+1)^(0+128),f
  3173  07D9  1903               	skipnz
  3174  07DA  0AD6               	incf	(___aldiv@quotient+2)^(0+128),f
  3175  07DB  1903               	skipnz
  3176  07DC  0AD7               	incf	(___aldiv@quotient+3)^(0+128),f
  3177  07DD                     l2559:	
  3178  07DD  0857               	movf	(___aldiv@quotient+3)^(0+128),w
  3179  07DE  00CC               	movwf	(?___aldiv+3)^(0+128)
  3180  07DF  0856               	movf	(___aldiv@quotient+2)^(0+128),w
  3181  07E0  00CB               	movwf	(?___aldiv+2)^(0+128)
  3182  07E1  0855               	movf	(___aldiv@quotient+1)^(0+128),w
  3183  07E2  00CA               	movwf	(?___aldiv+1)^(0+128)
  3184  07E3  0854               	movf	___aldiv@quotient^(0+128),w
  3185  07E4  00C9               	movwf	?___aldiv^(0+128)
  3186  07E5  0008               	return
  3187  07E6                     __end_of___aldiv:	
  3188                           
  3189                           	psect	text8
  3190  120F                     __ptext8:	
  3191 ;; *************** function _TIMER0_Set *****************
  3192 ;; Defined at:
  3193 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  contagens       1    wreg     unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  contagens       1    0[BANK1 ] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;		None               void
  3200 ;; Registers used:
  3201 ;;		wreg
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       0       0       0       0
  3208 ;;      Locals:         0       0       1       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         0       0       1       0       0
  3211 ;;Total ram usage:        1 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    5
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _TIMER0_Set
  3223  120F                     _TIMER0_Set:	
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _TIMER0_Set: [wreg]
  3227                           ;TIMER0_Set@contagens stored from wreg
  3228  120F  1683               	bsf	3,5	;RP0=1, select bank1
  3229  1210  1303               	bcf	3,6	;RP1=0, select bank1
  3230  1211  00C9               	movwf	TIMER0_Set@contagens^(0+128)
  3231                           
  3232                           ;timers.c: 22: TMR0 = contagens;
  3233  1212  0849               	movf	TIMER0_Set@contagens^(0+128),w
  3234  1213  1283               	bcf	3,5	;RP0=0, select bank0
  3235  1214  1303               	bcf	3,6	;RP1=0, select bank0
  3236  1215  0081               	movwf	1	;volatile
  3237  1216  0008               	return
  3238  1217                     __end_of_TIMER0_Set:	
  3239                           
  3240                           	psect	text9
  3241  1229                     __ptext9:	
  3242 ;; *************** function _TIMER0_Init *****************
  3243 ;; Defined at:
  3244 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;		None               void
  3251 ;; Registers used:
  3252 ;;		None
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0
  3261 ;;      Totals:         0       0       0       0       0
  3262 ;;Total ram usage:        0 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    5
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function _TIMER0_Init
  3274  1229                     _TIMER0_Init:	
  3275                           
  3276                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in _TIMER0_Init: []
  3280  1229  1683               	bsf	3,5	;RP0=1, select bank1
  3281  122A  1303               	bcf	3,6	;RP1=0, select bank1
  3282  122B  1281               	bcf	1,5	;volatile
  3283                           
  3284                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3285  122C  1201               	bcf	1,4	;volatile
  3286                           
  3287                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3288  122D  1181               	bcf	1,3	;volatile
  3289                           
  3290                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3291  122E  1501               	bsf	1,2	;volatile
  3292                           
  3293                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3294  122F  1481               	bsf	1,1	;volatile
  3295                           
  3296                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3297  1230  1401               	bsf	1,0	;volatile
  3298                           
  3299                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3300  1231  110B               	bcf	11,2	;volatile
  3301                           
  3302                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3303  1232  168B               	bsf	11,5	;volatile
  3304  1233  0008               	return
  3305  1234                     __end_of_TIMER0_Init:	
  3306                           
  3307                           	psect	text10
  3308  135B                     __ptext10:	
  3309 ;; *************** function _PWM_Init *****************
  3310 ;; Defined at:
  3311 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;		None               void
  3318 ;; Registers used:
  3319 ;;		wreg
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    5
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function _PWM_Init
  3341  135B                     _PWM_Init:	
  3342                           
  3343                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3344                           
  3345                           ;incstack = 0
  3346                           ; Regs used in _PWM_Init: [wreg]
  3347  135B  1283               	bcf	3,5	;RP0=0, select bank0
  3348  135C  1303               	bcf	3,6	;RP1=0, select bank0
  3349  135D  1492               	bsf	18,1	;volatile
  3350                           
  3351                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3352  135E  1012               	bcf	18,0	;volatile
  3353                           
  3354                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3355  135F  1312               	bcf	18,6	;volatile
  3356                           
  3357                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3358  1360  1292               	bcf	18,5	;volatile
  3359                           
  3360                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3361  1361  1212               	bcf	18,4	;volatile
  3362                           
  3363                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3364  1362  1192               	bcf	18,3	;volatile
  3365                           
  3366                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3367  1363  1512               	bsf	18,2	;volatile
  3368                           
  3369                           ;pwm.c: 27: PR2 = 255;
  3370  1364  30FF               	movlw	255
  3371  1365  1683               	bsf	3,5	;RP0=1, select bank1
  3372  1366  1303               	bcf	3,6	;RP1=0, select bank1
  3373  1367  0092               	movwf	18	;volatile
  3374                           
  3375                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3376  1368  1283               	bcf	3,5	;RP0=0, select bank0
  3377  1369  1303               	bcf	3,6	;RP1=0, select bank0
  3378  136A  1597               	bsf	23,3	;volatile
  3379                           
  3380                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3381  136B  1517               	bsf	23,2	;volatile
  3382                           
  3383                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3384  136C  1497               	bsf	23,1	;volatile
  3385                           
  3386                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3387  136D  1417               	bsf	23,0	;volatile
  3388                           
  3389                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3390  136E  1683               	bsf	3,5	;RP0=1, select bank1
  3391  136F  1303               	bcf	3,6	;RP1=0, select bank1
  3392  1370  150C               	bsf	12,2	;volatile
  3393                           
  3394                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3395  1371  1283               	bcf	3,5	;RP0=0, select bank0
  3396  1372  1303               	bcf	3,6	;RP1=0, select bank0
  3397  1373  110C               	bcf	12,2	;volatile
  3398                           
  3399                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3400  1374  159D               	bsf	29,3	;volatile
  3401                           
  3402                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3403  1375  151D               	bsf	29,2	;volatile
  3404                           
  3405                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3406  1376  149D               	bsf	29,1	;volatile
  3407                           
  3408                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3409  1377  141D               	bsf	29,0	;volatile
  3410                           
  3411                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3412  1378  1683               	bsf	3,5	;RP0=1, select bank1
  3413  1379  1303               	bcf	3,6	;RP1=0, select bank1
  3414  137A  140D               	bsf	13,0	;volatile
  3415                           
  3416                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3417  137B  1283               	bcf	3,5	;RP0=0, select bank0
  3418  137C  1303               	bcf	3,6	;RP1=0, select bank0
  3419  137D  100D               	bcf	13,0	;volatile
  3420  137E  0008               	return
  3421  137F                     __end_of_PWM_Init:	
  3422                           
  3423                           	psect	text11
  3424  1317                     __ptext11:	
  3425 ;; *************** function _PWM_DutyCycle2 *****************
  3426 ;; Defined at:
  3427 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  valor           2    0[BANK1 ] int 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;		None               void
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3441 ;;      Params:         0       0       2       0       0
  3442 ;;      Locals:         0       0       0       0       0
  3443 ;;      Temps:          0       0       2       0       0
  3444 ;;      Totals:         0       0       4       0       0
  3445 ;;Total ram usage:        4 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    5
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function _PWM_DutyCycle2
  3457  1317                     _PWM_DutyCycle2:	
  3458                           
  3459                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3460                           
  3461                           ;incstack = 0
  3462                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3463  1317  1683               	bsf	3,5	;RP0=1, select bank1
  3464  1318  1303               	bcf	3,6	;RP1=0, select bank1
  3465  1319  084A               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3466  131A  00CC               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3467  131B  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  3468  131C  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  3469  131D  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3470  131E  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3471  131F  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  3472  1320  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3473  1321  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3474  1322  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  3475  1323  084B               	movf	??_PWM_DutyCycle2^(0+128),w
  3476  1324  1283               	bcf	3,5	;RP0=0, select bank0
  3477  1325  1303               	bcf	3,6	;RP1=0, select bank0
  3478  1326  009B               	movwf	27	;volatile
  3479                           
  3480                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3481  1327  1683               	bsf	3,5	;RP0=1, select bank1
  3482  1328  1303               	bcf	3,6	;RP1=0, select bank1
  3483  1329  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  3484  132A  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  3485  132B  3003               	movlw	3
  3486  132C                     u3575:	
  3487  132C  1003               	clrc
  3488  132D  0DCB               	rlf	??_PWM_DutyCycle2^(0+128),f
  3489  132E  3EFF               	addlw	-1
  3490  132F  1D03               	skipz
  3491  1330  2B2C               	goto	u3575
  3492  1331  1003               	clrc
  3493  1332  0D4B               	rlf	??_PWM_DutyCycle2^(0+128),w
  3494  1333  380C               	iorlw	12
  3495  1334  1283               	bcf	3,5	;RP0=0, select bank0
  3496  1335  1303               	bcf	3,6	;RP1=0, select bank0
  3497  1336  009D               	movwf	29	;volatile
  3498  1337  0008               	return
  3499  1338                     __end_of_PWM_DutyCycle2:	
  3500                           
  3501                           	psect	text12
  3502  12F6                     __ptext12:	
  3503 ;; *************** function _PWM_DutyCycle1 *****************
  3504 ;; Defined at:
  3505 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  valor           2    0[BANK1 ] int 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;		None               void
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3519 ;;      Params:         0       0       2       0       0
  3520 ;;      Locals:         0       0       0       0       0
  3521 ;;      Temps:          0       0       2       0       0
  3522 ;;      Totals:         0       0       4       0       0
  3523 ;;Total ram usage:        4 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    5
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_main
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           
  3534                           ;psect for function _PWM_DutyCycle1
  3535  12F6                     _PWM_DutyCycle1:	
  3536                           
  3537                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3538                           
  3539                           ;incstack = 0
  3540                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3541  12F6  1683               	bsf	3,5	;RP0=1, select bank1
  3542  12F7  1303               	bcf	3,6	;RP1=0, select bank1
  3543  12F8  084A               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  3544  12F9  00CC               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  3545  12FA  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  3546  12FB  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  3547  12FC  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3548  12FD  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3549  12FE  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  3550  12FF  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3551  1300  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3552  1301  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  3553  1302  084B               	movf	??_PWM_DutyCycle1^(0+128),w
  3554  1303  1283               	bcf	3,5	;RP0=0, select bank0
  3555  1304  1303               	bcf	3,6	;RP1=0, select bank0
  3556  1305  0095               	movwf	21	;volatile
  3557                           
  3558                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3559  1306  1683               	bsf	3,5	;RP0=1, select bank1
  3560  1307  1303               	bcf	3,6	;RP1=0, select bank1
  3561  1308  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  3562  1309  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  3563  130A  3003               	movlw	3
  3564  130B                     u3625:	
  3565  130B  1003               	clrc
  3566  130C  0DCB               	rlf	??_PWM_DutyCycle1^(0+128),f
  3567  130D  3EFF               	addlw	-1
  3568  130E  1D03               	skipz
  3569  130F  2B0B               	goto	u3625
  3570  1310  1003               	clrc
  3571  1311  0D4B               	rlf	??_PWM_DutyCycle1^(0+128),w
  3572  1312  380C               	iorlw	12
  3573  1313  1283               	bcf	3,5	;RP0=0, select bank0
  3574  1314  1303               	bcf	3,6	;RP1=0, select bank0
  3575  1315  0097               	movwf	23	;volatile
  3576  1316  0008               	return
  3577  1317                     __end_of_PWM_DutyCycle1:	
  3578                           
  3579                           	psect	text13
  3580  13CD                     __ptext13:	
  3581 ;; *************** function _LCD_WriteString *****************
  3582 ;; Defined at:
  3583 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  3586 ;;		 -> STR_4(6), display_rpm(10), STR_2(17), 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;		None               void
  3591 ;; Registers used:
  3592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         0       0       2       0       0
  3599 ;;      Locals:         0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0
  3601 ;;      Totals:         0       0       2       0       0
  3602 ;;Total ram usage:        2 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    6
  3605 ;; This function calls:
  3606 ;;		_LCD_WriteData
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function _LCD_WriteString
  3614  13CD                     _LCD_WriteString:	
  3615  13CD                     l3019:	
  3616                           ;lcd.c: 63: while(*Str != '\0')
  3617                           
  3618                           ;incstack = 0
  3619                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3620                           
  3621  13CD  1683               	bsf	3,5	;RP0=1, select bank1
  3622  13CE  1303               	bcf	3,6	;RP1=0, select bank1
  3623  13CF  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3624  13D0  1283               	bcf	3,5	;RP0=0, select bank0
  3625  13D1  1303               	bcf	3,6	;RP1=0, select bank0
  3626  13D2  00FF               	movwf	127
  3627  13D3  1683               	bsf	3,5	;RP0=1, select bank1
  3628  13D4  1303               	bcf	3,6	;RP1=0, select bank1
  3629  13D5  084B               	movf	LCD_WriteString@Str^(0+128),w
  3630  13D6  0084               	movwf	4
  3631  13D7  1283               	bcf	3,5	;RP0=0, select bank0
  3632  13D8  1303               	bcf	3,6	;RP1=0, select bank0
  3633  13D9  160A  118A  2000  160A  118A  	fcall	stringtab
  3634  13DE  3800               	iorlw	0
  3635  13DF  1903               	btfsc	3,2
  3636  13E0  0008               	return
  3637                           
  3638                           ;lcd.c: 64: {
  3639                           ;lcd.c: 65: LCD_WriteData(*Str);
  3640  13E1  1683               	bsf	3,5	;RP0=1, select bank1
  3641  13E2  1303               	bcf	3,6	;RP1=0, select bank1
  3642  13E3  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3643  13E4  1283               	bcf	3,5	;RP0=0, select bank0
  3644  13E5  1303               	bcf	3,6	;RP1=0, select bank0
  3645  13E6  00FF               	movwf	127
  3646  13E7  1683               	bsf	3,5	;RP0=1, select bank1
  3647  13E8  1303               	bcf	3,6	;RP1=0, select bank1
  3648  13E9  084B               	movf	LCD_WriteString@Str^(0+128),w
  3649  13EA  0084               	movwf	4
  3650  13EB  1283               	bcf	3,5	;RP0=0, select bank0
  3651  13EC  1303               	bcf	3,6	;RP1=0, select bank0
  3652  13ED  160A  118A  2000  160A  118A  	fcall	stringtab
  3653  13F2  120A  158A  2003  160A  118A  	fcall	_LCD_WriteData
  3654                           
  3655                           ;lcd.c: 66: Str++;
  3656  13F7  3001               	movlw	1
  3657  13F8  1683               	bsf	3,5	;RP0=1, select bank1
  3658  13F9  1303               	bcf	3,6	;RP1=0, select bank1
  3659  13FA  07CB               	addwf	LCD_WriteString@Str^(0+128),f
  3660  13FB  1803               	skipnc
  3661  13FC  0ACC               	incf	(LCD_WriteString@Str+1)^(0+128),f
  3662  13FD  2BCD               	goto	l3019
  3663  13FE                     __end_of_LCD_WriteString:	
  3664                           
  3665                           	psect	text14
  3666  0803                     __ptext14:	
  3667 ;; *************** function _LCD_WriteData *****************
  3668 ;; Defined at:
  3669 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  Byte            1    wreg     unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  Byte            1    1[BANK1 ] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;		None               void
  3676 ;; Registers used:
  3677 ;;		wreg
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       0       0       0       0
  3684 ;;      Locals:         0       0       1       0       0
  3685 ;;      Temps:          0       0       1       0       0
  3686 ;;      Totals:         0       0       2       0       0
  3687 ;;Total ram usage:        2 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    5
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_LCD_WriteString
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _LCD_WriteData
  3699  0803                     _LCD_WriteData:	
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _LCD_WriteData: [wreg]
  3703                           ;LCD_WriteData@Byte stored from wreg
  3704  0803  1683               	bsf	3,5	;RP0=1, select bank1
  3705  0804  1303               	bcf	3,6	;RP1=0, select bank1
  3706  0805  00CA               	movwf	LCD_WriteData@Byte^(0+128)
  3707                           
  3708                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  3709  0806  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0807  1303               	bcf	3,6	;RP1=0, select bank0
  3711  0808  1409               	bsf	9,0	;volatile
  3712                           
  3713                           ;lcd.c: 51: PORTD = Byte;
  3714  0809  1683               	bsf	3,5	;RP0=1, select bank1
  3715  080A  1303               	bcf	3,6	;RP1=0, select bank1
  3716  080B  084A               	movf	LCD_WriteData@Byte^(0+128),w
  3717  080C  1283               	bcf	3,5	;RP0=0, select bank0
  3718  080D  1303               	bcf	3,6	;RP1=0, select bank0
  3719  080E  0088               	movwf	8	;volatile
  3720                           
  3721                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  3722  080F  1489               	bsf	9,1	;volatile
  3723                           
  3724                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3725  0810  303D               	movlw	61
  3726  0811  1683               	bsf	3,5	;RP0=1, select bank1
  3727  0812  1303               	bcf	3,6	;RP1=0, select bank1
  3728  0813  00C9               	movwf	??_LCD_WriteData^(0+128)
  3729  0814                     u4127:	
  3730  0814  0BC9               	decfsz	??_LCD_WriteData^(0+128),f
  3731  0815  2814               	goto	u4127
  3732                           
  3733                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  3734  0816  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0817  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0818  1089               	bcf	9,1	;volatile
  3737  0819  0008               	return
  3738  081A                     __end_of_LCD_WriteData:	
  3739                           
  3740                           	psect	text15
  3741  160C                     __ptext15:	
  3742 ;; *************** function _LCD_Init *****************
  3743 ;; Defined at:
  3744 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;		None               void
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0
  3760 ;;      Temps:          0       0       2       0       0
  3761 ;;      Totals:         0       0       2       0       0
  3762 ;;Total ram usage:        2 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    6
  3765 ;; This function calls:
  3766 ;;		_LCD_WriteCmd
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           
  3773                           ;psect for function _LCD_Init
  3774  160C                     _LCD_Init:	
  3775                           
  3776                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3780  160C  1683               	bsf	3,5	;RP0=1, select bank1
  3781  160D  1303               	bcf	3,6	;RP1=0, select bank1
  3782  160E  119F               	bcf	31,3	;volatile
  3783                           
  3784                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  3785  160F  151F               	bsf	31,2	;volatile
  3786                           
  3787                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  3788  1610  109F               	bcf	31,1	;volatile
  3789                           
  3790                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  3791  1611  101F               	bcf	31,0	;volatile
  3792                           
  3793                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  3794  1612  305A               	movlw	90
  3795  1613  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  3796  1614  30C3               	movlw	195
  3797  1615  00CB               	movwf	??_LCD_Init^(0+128)
  3798  1616                     u4137:	
  3799  1616  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3800  1617  2E16               	goto	u4137
  3801  1618  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  3802  1619  2E16               	goto	u4137
  3803                           
  3804                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  3805  161A  3030               	movlw	48
  3806  161B  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3807                           
  3808                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  3809  1620  3018               	movlw	24
  3810  1621  1683               	bsf	3,5	;RP0=1, select bank1
  3811  1622  1303               	bcf	3,6	;RP1=0, select bank1
  3812  1623  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  3813  1624  30EF               	movlw	239
  3814  1625  00CB               	movwf	??_LCD_Init^(0+128)
  3815  1626                     u4147:	
  3816  1626  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3817  1627  2E26               	goto	u4147
  3818  1628  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  3819  1629  2E26               	goto	u4147
  3820                           
  3821                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  3822  162A  3030               	movlw	48
  3823  162B  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3824                           
  3825                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  3826  1630  3099               	movlw	153
  3827  1631  1683               	bsf	3,5	;RP0=1, select bank1
  3828  1632  1303               	bcf	3,6	;RP1=0, select bank1
  3829  1633  00CB               	movwf	??_LCD_Init^(0+128)
  3830  1634                     u4157:	
  3831  1634  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3832  1635  2E34               	goto	u4157
  3833                           
  3834                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  3835  1636  3030               	movlw	48
  3836  1637  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3837                           
  3838                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3839  163C  303D               	movlw	61
  3840  163D  1683               	bsf	3,5	;RP0=1, select bank1
  3841  163E  1303               	bcf	3,6	;RP1=0, select bank1
  3842  163F  00CB               	movwf	??_LCD_Init^(0+128)
  3843  1640                     u4167:	
  3844  1640  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3845  1641  2E40               	goto	u4167
  3846                           
  3847                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  3848  1642  3038               	movlw	56
  3849  1643  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3850                           
  3851                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3852  1648  303D               	movlw	61
  3853  1649  1683               	bsf	3,5	;RP0=1, select bank1
  3854  164A  1303               	bcf	3,6	;RP1=0, select bank1
  3855  164B  00CB               	movwf	??_LCD_Init^(0+128)
  3856  164C                     u4177:	
  3857  164C  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3858  164D  2E4C               	goto	u4177
  3859                           
  3860                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  3861  164E  3001               	movlw	1
  3862  164F  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3863                           
  3864                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  3865  1654  300C               	movlw	12
  3866  1655  1683               	bsf	3,5	;RP0=1, select bank1
  3867  1656  1303               	bcf	3,6	;RP1=0, select bank1
  3868  1657  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  3869  1658  30F7               	movlw	247
  3870  1659  00CB               	movwf	??_LCD_Init^(0+128)
  3871  165A                     u4187:	
  3872  165A  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3873  165B  2E5A               	goto	u4187
  3874  165C  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  3875  165D  2E5A               	goto	u4187
  3876                           
  3877                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  3878  165E  300C               	movlw	12
  3879  165F  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3880                           
  3881                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3882  1664  303D               	movlw	61
  3883  1665  1683               	bsf	3,5	;RP0=1, select bank1
  3884  1666  1303               	bcf	3,6	;RP1=0, select bank1
  3885  1667  00CB               	movwf	??_LCD_Init^(0+128)
  3886  1668                     u4197:	
  3887  1668  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3888  1669  2E68               	goto	u4197
  3889                           
  3890                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  3891  166A  3006               	movlw	6
  3892  166B  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3893                           
  3894                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3895  1670  303D               	movlw	61
  3896  1671  1683               	bsf	3,5	;RP0=1, select bank1
  3897  1672  1303               	bcf	3,6	;RP1=0, select bank1
  3898  1673  00CB               	movwf	??_LCD_Init^(0+128)
  3899  1674                     u4207:	
  3900  1674  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3901  1675  2E74               	goto	u4207
  3902  1676  0008               	return
  3903  1677                     __end_of_LCD_Init:	
  3904                           
  3905                           	psect	text16
  3906  12D6                     __ptext16:	
  3907 ;; *************** function _LCD_Cursor *****************
  3908 ;; Defined at:
  3909 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  Row             1    wreg     unsigned char 
  3912 ;;  Col             1    0[BANK1 ] unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  Row             1    2[BANK1 ] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;		None               void
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         0       0       1       0       0
  3925 ;;      Locals:         0       0       1       0       0
  3926 ;;      Temps:          0       0       1       0       0
  3927 ;;      Totals:         0       0       3       0       0
  3928 ;;Total ram usage:        3 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    5
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _LCD_Cursor
  3940  12D6                     _LCD_Cursor:	
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  3944                           ;LCD_Cursor@Row stored from wreg
  3945  12D6  1683               	bsf	3,5	;RP0=1, select bank1
  3946  12D7  1303               	bcf	3,6	;RP1=0, select bank1
  3947  12D8  00CB               	movwf	LCD_Cursor@Row^(0+128)
  3948                           
  3949                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  3950  12D9  1283               	bcf	3,5	;RP0=0, select bank0
  3951  12DA  1303               	bcf	3,6	;RP1=0, select bank0
  3952  12DB  1009               	bcf	9,0	;volatile
  3953                           
  3954                           ;lcd.c: 14: if (Row == 0)
  3955  12DC  1683               	bsf	3,5	;RP0=1, select bank1
  3956  12DD  1303               	bcf	3,6	;RP1=0, select bank1
  3957  12DE  08CB               	movf	LCD_Cursor@Row^(0+128),f
  3958  12DF  1D03               	skipz
  3959  12E0  2AE4               	goto	l3005
  3960                           
  3961                           ;lcd.c: 15: {
  3962                           ;lcd.c: 16: PORTD = 0x80 + Col;
  3963  12E1  0849               	movf	LCD_Cursor@Col^(0+128),w
  3964  12E2  3E80               	addlw	128
  3965  12E3  2AE8               	goto	L2
  3966  12E4                     l3005:	
  3967                           ;lcd.c: 17: }
  3968                           
  3969                           
  3970                           ;lcd.c: 18: else
  3971                           ;lcd.c: 19: {
  3972                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  3973  12E4  1683               	bsf	3,5	;RP0=1, select bank1
  3974  12E5  1303               	bcf	3,6	;RP1=0, select bank1
  3975  12E6  0849               	movf	LCD_Cursor@Col^(0+128),w
  3976  12E7  3EC0               	addlw	192
  3977  12E8                     L2:	
  3978  12E8  1283               	bcf	3,5	;RP0=0, select bank0
  3979  12E9  1303               	bcf	3,6	;RP1=0, select bank0
  3980  12EA  0088               	movwf	8	;volatile
  3981                           
  3982                           ;lcd.c: 21: }
  3983                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  3984  12EB  1489               	bsf	9,1	;volatile
  3985                           
  3986                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3987  12EC  303D               	movlw	61
  3988  12ED  1683               	bsf	3,5	;RP0=1, select bank1
  3989  12EE  1303               	bcf	3,6	;RP1=0, select bank1
  3990  12EF  00CA               	movwf	??_LCD_Cursor^(0+128)
  3991  12F0                     u4217:	
  3992  12F0  0BCA               	decfsz	??_LCD_Cursor^(0+128),f
  3993  12F1  2AF0               	goto	u4217
  3994                           
  3995                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  3996  12F2  1283               	bcf	3,5	;RP0=0, select bank0
  3997  12F3  1303               	bcf	3,6	;RP1=0, select bank0
  3998  12F4  1089               	bcf	9,1	;volatile
  3999  12F5  0008               	return
  4000  12F6                     __end_of_LCD_Cursor:	
  4001                           
  4002                           	psect	text17
  4003  13A4                     __ptext17:	
  4004 ;; *************** function _LCD_Clear *****************
  4005 ;; Defined at:
  4006 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;		None               void
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0, pclath, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4020 ;;      Params:         0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0
  4022 ;;      Temps:          0       0       2       0       0
  4023 ;;      Totals:         0       0       2       0       0
  4024 ;;Total ram usage:        2 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    6
  4027 ;; This function calls:
  4028 ;;		_LCD_WriteCmd
  4029 ;; This function is called by:
  4030 ;;		_main
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           
  4035                           ;psect for function _LCD_Clear
  4036  13A4                     _LCD_Clear:	
  4037                           
  4038                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4039                           
  4040                           ;incstack = 0
  4041                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4042  13A4  3001               	movlw	1
  4043  13A5  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  4044                           
  4045                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4046  13AA  300C               	movlw	12
  4047  13AB  1683               	bsf	3,5	;RP0=1, select bank1
  4048  13AC  1303               	bcf	3,6	;RP1=0, select bank1
  4049  13AD  00CC               	movwf	(??_LCD_Clear^(0+128)+1)
  4050  13AE  30F7               	movlw	247
  4051  13AF  00CB               	movwf	??_LCD_Clear^(0+128)
  4052  13B0                     u4227:	
  4053  13B0  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4054  13B1  2BB0               	goto	u4227
  4055  13B2  0BCC               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4056  13B3  2BB0               	goto	u4227
  4057                           
  4058                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4059  13B4  300C               	movlw	12
  4060  13B5  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  4061                           
  4062                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4063  13BA  303D               	movlw	61
  4064  13BB  1683               	bsf	3,5	;RP0=1, select bank1
  4065  13BC  1303               	bcf	3,6	;RP1=0, select bank1
  4066  13BD  00CB               	movwf	??_LCD_Clear^(0+128)
  4067  13BE                     u4237:	
  4068  13BE  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4069  13BF  2BBE               	goto	u4237
  4070                           
  4071                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4072  13C0  3006               	movlw	6
  4073  13C1  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  4074                           
  4075                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4076  13C6  303D               	movlw	61
  4077  13C7  1683               	bsf	3,5	;RP0=1, select bank1
  4078  13C8  1303               	bcf	3,6	;RP1=0, select bank1
  4079  13C9  00CB               	movwf	??_LCD_Clear^(0+128)
  4080  13CA                     u4247:	
  4081  13CA  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4082  13CB  2BCA               	goto	u4247
  4083  13CC  0008               	return
  4084  13CD                     __end_of_LCD_Clear:	
  4085                           
  4086                           	psect	text18
  4087  126A                     __ptext18:	
  4088 ;; *************** function _LCD_WriteCmd *****************
  4089 ;; Defined at:
  4090 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  Byte            1    wreg     unsigned char 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  Byte            1    1[BANK1 ] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;		None               void
  4097 ;; Registers used:
  4098 ;;		wreg
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       0       0       0       0
  4105 ;;      Locals:         0       0       1       0       0
  4106 ;;      Temps:          0       0       1       0       0
  4107 ;;      Totals:         0       0       2       0       0
  4108 ;;Total ram usage:        2 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    5
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_LCD_Clear
  4115 ;;		_LCD_Init
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function _LCD_WriteCmd
  4121  126A                     _LCD_WriteCmd:	
  4122                           
  4123                           ;incstack = 0
  4124                           ; Regs used in _LCD_WriteCmd: [wreg]
  4125                           ;LCD_WriteCmd@Byte stored from wreg
  4126  126A  1683               	bsf	3,5	;RP0=1, select bank1
  4127  126B  1303               	bcf	3,6	;RP1=0, select bank1
  4128  126C  00CA               	movwf	LCD_WriteCmd@Byte^(0+128)
  4129                           
  4130                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4131  126D  1283               	bcf	3,5	;RP0=0, select bank0
  4132  126E  1303               	bcf	3,6	;RP1=0, select bank0
  4133  126F  1009               	bcf	9,0	;volatile
  4134                           
  4135                           ;lcd.c: 36: PORTD = Byte;
  4136  1270  1683               	bsf	3,5	;RP0=1, select bank1
  4137  1271  1303               	bcf	3,6	;RP1=0, select bank1
  4138  1272  084A               	movf	LCD_WriteCmd@Byte^(0+128),w
  4139  1273  1283               	bcf	3,5	;RP0=0, select bank0
  4140  1274  1303               	bcf	3,6	;RP1=0, select bank0
  4141  1275  0088               	movwf	8	;volatile
  4142                           
  4143                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4144  1276  1489               	bsf	9,1	;volatile
  4145                           
  4146                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4147  1277  303D               	movlw	61
  4148  1278  1683               	bsf	3,5	;RP0=1, select bank1
  4149  1279  1303               	bcf	3,6	;RP1=0, select bank1
  4150  127A  00C9               	movwf	??_LCD_WriteCmd^(0+128)
  4151  127B                     u4257:	
  4152  127B  0BC9               	decfsz	??_LCD_WriteCmd^(0+128),f
  4153  127C  2A7B               	goto	u4257
  4154                           
  4155                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4156  127D  1283               	bcf	3,5	;RP0=0, select bank0
  4157  127E  1303               	bcf	3,6	;RP1=0, select bank0
  4158  127F  1089               	bcf	9,1	;volatile
  4159  1280  0008               	return
  4160  1281                     __end_of_LCD_WriteCmd:	
  4161                           
  4162                           	psect	text19
  4163  1244                     __ptext19:	
  4164 ;; *************** function _ADC_Init *****************
  4165 ;; Defined at:
  4166 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;		None
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;		None               void
  4173 ;; Registers used:
  4174 ;;		None
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4180 ;;      Params:         0       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0
  4183 ;;      Totals:         0       0       0       0       0
  4184 ;;Total ram usage:        0 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    5
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _ADC_Init
  4196  1244                     _ADC_Init:	
  4197                           
  4198                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4199                           
  4200                           ;incstack = 0
  4201                           ; Regs used in _ADC_Init: []
  4202  1244  1683               	bsf	3,5	;RP0=1, select bank1
  4203  1245  1303               	bcf	3,6	;RP1=0, select bank1
  4204  1246  179F               	bsf	31,7	;volatile
  4205                           
  4206                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4207  1247  159F               	bsf	31,3	;volatile
  4208                           
  4209                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4210  1248  151F               	bsf	31,2	;volatile
  4211                           
  4212                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4213  1249  149F               	bsf	31,1	;volatile
  4214                           
  4215                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4216  124A  101F               	bcf	31,0	;volatile
  4217                           
  4218                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4219  124B  1283               	bcf	3,5	;RP0=0, select bank0
  4220  124C  1303               	bcf	3,6	;RP1=0, select bank0
  4221  124D  179F               	bsf	31,7	;volatile
  4222                           
  4223                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4224  124E  131F               	bcf	31,6	;volatile
  4225                           
  4226                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4227  124F  1683               	bsf	3,5	;RP0=1, select bank1
  4228  1250  1303               	bcf	3,6	;RP1=0, select bank1
  4229  1251  130C               	bcf	12,6	;volatile
  4230                           
  4231                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4232  1252  1283               	bcf	3,5	;RP0=0, select bank0
  4233  1253  1303               	bcf	3,6	;RP1=0, select bank0
  4234  1254  130C               	bcf	12,6	;volatile
  4235  1255  0008               	return
  4236  1256                     __end_of_ADC_Init:	
  4237                           
  4238                           	psect	text20
  4239  0BC1                     __ptext20:	
  4240 ;; *************** function _ISR *****************
  4241 ;; Defined at:
  4242 ;;		line 348 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;		None               void
  4249 ;; Registers used:
  4250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0
  4258 ;;      Temps:          0       4       0       0       0
  4259 ;;      Totals:         0       4       0       0       0
  4260 ;;Total ram usage:        4 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    4
  4263 ;; This function calls:
  4264 ;;		_Fuzzy
  4265 ;;		_USART_ReceiveChar
  4266 ;;		_USART_WriteString
  4267 ;;		___lwtoft
  4268 ;;		_send
  4269 ;;		i1_PWM_DutyCycle2
  4270 ;;		i1_TIMER0_Set
  4271 ;;		i1___lwdiv
  4272 ;;		i1___wmul
  4273 ;; This function is called by:
  4274 ;;		Interrupt level 1
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function _ISR
  4280  0BC1                     _ISR:	
  4281                           
  4282                           ;main.c: 351: if (PIR1bits.RCIF)
  4283  0BC1  1E8C               	btfss	12,5	;volatile
  4284  0BC2  2C85               	goto	i1l3247
  4285                           
  4286                           ;main.c: 352: {
  4287                           ;main.c: 353: if (USART_ReceiveChar() == '0')
  4288  0BC3  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4289  0BC8  3A30               	xorlw	48
  4290  0BC9  1D03               	skipz
  4291  0BCA  2BDD               	goto	i1l3201
  4292                           
  4293                           ;main.c: 354: {
  4294                           ;main.c: 355: USART_WriteString("\n\rdesligado\n\r");
  4295  0BCB  3044               	movlw	(STR_1-__stringbase)& (0+255)
  4296  0BCC  160A  118A  229C  120A  158A  	fcall	_USART_WriteString
  4297                           
  4298                           ;main.c: 357: PWM_DutyCycle2(0);
  4299  0BD1  3000               	movlw	0
  4300  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0BD4  00BE               	movwf	i1PWM_DutyCycle2@valor
  4303  0BD5  3000               	movlw	0
  4304  0BD6  00BF               	movwf	i1PWM_DutyCycle2@valor+1
  4305  0BD7  160A  118A  2281  120A  158A  	fcall	i1_PWM_DutyCycle2
  4306                           
  4307                           ;main.c: 358: return;
  4308  0BDC  2CE6               	goto	i1l180
  4309  0BDD                     i1l3201:	
  4310                           
  4311                           ;main.c: 359: }
  4312                           ;main.c: 361: if (USART_ReceiveChar() == '1')
  4313  0BDD  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4314  0BE2  3A31               	xorlw	49
  4315  0BE3  1D03               	skipz
  4316  0BE4  2BEB               	goto	i1l3205
  4317                           
  4318                           ;main.c: 362: {
  4319                           ;main.c: 363: setpointUI = 720;
  4320  0BE5  30D0               	movlw	208
  4321  0BE6  1683               	bsf	3,5	;RP0=1, select bank1
  4322  0BE7  1303               	bcf	3,6	;RP1=0, select bank1
  4323  0BE8  00C5               	movwf	_setpointUI^(0+128)
  4324  0BE9  3002               	movlw	2
  4325  0BEA  00C6               	movwf	(_setpointUI^(0+128)+1)
  4326  0BEB                     i1l3205:	
  4327                           
  4328                           ;main.c: 365: }
  4329                           ;main.c: 367: if (USART_ReceiveChar() == '2')
  4330  0BEB  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4331  0BF0  3A32               	xorlw	50
  4332  0BF1  1D03               	skipz
  4333  0BF2  2BF9               	goto	i1l3209
  4334                           
  4335                           ;main.c: 368: {
  4336                           ;main.c: 369: setpointUI = 1450;
  4337  0BF3  30AA               	movlw	170
  4338  0BF4  1683               	bsf	3,5	;RP0=1, select bank1
  4339  0BF5  1303               	bcf	3,6	;RP1=0, select bank1
  4340  0BF6  00C5               	movwf	_setpointUI^(0+128)
  4341  0BF7  3005               	movlw	5
  4342  0BF8  00C6               	movwf	(_setpointUI^(0+128)+1)
  4343  0BF9                     i1l3209:	
  4344                           
  4345                           ;main.c: 371: }
  4346                           ;main.c: 373: if (USART_ReceiveChar() == '3')
  4347  0BF9  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4348  0BFE  3A33               	xorlw	51
  4349  0BFF  1D03               	skipz
  4350  0C00  2C07               	goto	i1l3213
  4351                           
  4352                           ;main.c: 374: {
  4353                           ;main.c: 375: setpointUI = 2828;
  4354  0C01  300C               	movlw	12
  4355  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  4356  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  4357  0C04  00C5               	movwf	_setpointUI^(0+128)
  4358  0C05  300B               	movlw	11
  4359  0C06  00C6               	movwf	(_setpointUI^(0+128)+1)
  4360  0C07                     i1l3213:	
  4361                           
  4362                           ;main.c: 377: }
  4363                           ;main.c: 379: if (USART_ReceiveChar() == '4')
  4364  0C07  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4365  0C0C  3A34               	xorlw	52
  4366  0C0D  1D03               	skipz
  4367  0C0E  2C15               	goto	i1l3217
  4368                           
  4369                           ;main.c: 380: {
  4370                           ;main.c: 381: setpointUI = 3256;
  4371  0C0F  30B8               	movlw	184
  4372  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  4373  0C11  1303               	bcf	3,6	;RP1=0, select bank1
  4374  0C12  00C5               	movwf	_setpointUI^(0+128)
  4375  0C13  300C               	movlw	12
  4376  0C14  00C6               	movwf	(_setpointUI^(0+128)+1)
  4377  0C15                     i1l3217:	
  4378                           
  4379                           ;main.c: 383: }
  4380                           ;main.c: 385: if (USART_ReceiveChar() == '5')
  4381  0C15  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4382  0C1A  3A35               	xorlw	53
  4383  0C1B  1D03               	skipz
  4384  0C1C  2C23               	goto	i1l3221
  4385                           
  4386                           ;main.c: 386: {
  4387                           ;main.c: 387: setpointUI = 4510;
  4388  0C1D  309E               	movlw	158
  4389  0C1E  1683               	bsf	3,5	;RP0=1, select bank1
  4390  0C1F  1303               	bcf	3,6	;RP1=0, select bank1
  4391  0C20  00C5               	movwf	_setpointUI^(0+128)
  4392  0C21  3011               	movlw	17
  4393  0C22  00C6               	movwf	(_setpointUI^(0+128)+1)
  4394  0C23                     i1l3221:	
  4395                           
  4396                           ;main.c: 389: }
  4397                           ;main.c: 391: if (USART_ReceiveChar() == '6')
  4398  0C23  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4399  0C28  3A36               	xorlw	54
  4400  0C29  1D03               	skipz
  4401  0C2A  2C31               	goto	i1l3225
  4402                           
  4403                           ;main.c: 392: {
  4404                           ;main.c: 393: setpointUI = 5760;
  4405  0C2B  3080               	movlw	128
  4406  0C2C  1683               	bsf	3,5	;RP0=1, select bank1
  4407  0C2D  1303               	bcf	3,6	;RP1=0, select bank1
  4408  0C2E  00C5               	movwf	_setpointUI^(0+128)
  4409  0C2F  3016               	movlw	22
  4410  0C30  00C6               	movwf	(_setpointUI^(0+128)+1)
  4411  0C31                     i1l3225:	
  4412                           
  4413                           ;main.c: 395: }
  4414                           ;main.c: 397: if (USART_ReceiveChar() == '7')
  4415  0C31  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4416  0C36  3A37               	xorlw	55
  4417  0C37  1D03               	skipz
  4418  0C38  2C3F               	goto	i1l3229
  4419                           
  4420                           ;main.c: 398: {
  4421                           ;main.c: 399: setpointUI = 6890;
  4422  0C39  30EA               	movlw	234
  4423  0C3A  1683               	bsf	3,5	;RP0=1, select bank1
  4424  0C3B  1303               	bcf	3,6	;RP1=0, select bank1
  4425  0C3C  00C5               	movwf	_setpointUI^(0+128)
  4426  0C3D  301A               	movlw	26
  4427  0C3E  00C6               	movwf	(_setpointUI^(0+128)+1)
  4428  0C3F                     i1l3229:	
  4429                           
  4430                           ;main.c: 401: }
  4431                           ;main.c: 403: if (USART_ReceiveChar() == '8')
  4432  0C3F  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4433  0C44  3A38               	xorlw	56
  4434  0C45  1D03               	skipz
  4435  0C46  2C4D               	goto	i1l3233
  4436                           
  4437                           ;main.c: 404: {
  4438                           ;main.c: 405: setpointUI = 8100;
  4439  0C47  30A4               	movlw	164
  4440  0C48  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0C49  1303               	bcf	3,6	;RP1=0, select bank1
  4442  0C4A  00C5               	movwf	_setpointUI^(0+128)
  4443  0C4B  301F               	movlw	31
  4444  0C4C  00C6               	movwf	(_setpointUI^(0+128)+1)
  4445  0C4D                     i1l3233:	
  4446                           
  4447                           ;main.c: 407: }
  4448                           ;main.c: 409: if (USART_ReceiveChar() == '9')
  4449  0C4D  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4450  0C52  3A39               	xorlw	57
  4451  0C53  1D03               	skipz
  4452  0C54  2C5B               	goto	i1l3237
  4453                           
  4454                           ;main.c: 410: {
  4455                           ;main.c: 411: setpointUI = 9000;
  4456  0C55  3028               	movlw	40
  4457  0C56  1683               	bsf	3,5	;RP0=1, select bank1
  4458  0C57  1303               	bcf	3,6	;RP1=0, select bank1
  4459  0C58  00C5               	movwf	_setpointUI^(0+128)
  4460  0C59  3023               	movlw	35
  4461  0C5A  00C6               	movwf	(_setpointUI^(0+128)+1)
  4462  0C5B                     i1l3237:	
  4463                           
  4464                           ;main.c: 413: }
  4465                           ;main.c: 417: Fuzzy();
  4466  0C5B  120A  118A  206B  120A  158A  	fcall	_Fuzzy
  4467                           
  4468                           ;main.c: 418: tf = (setpointUI - 100);
  4469  0C60  1683               	bsf	3,5	;RP0=1, select bank1
  4470  0C61  1303               	bcf	3,6	;RP1=0, select bank1
  4471  0C62  0845               	movf	_setpointUI^(0+128),w
  4472  0C63  3E9C               	addlw	156
  4473  0C64  00F8               	movwf	___lwtoft@c
  4474  0C65  0846               	movf	(_setpointUI+1)^(0+128),w
  4475  0C66  1803               	skipnc
  4476  0C67  3E01               	addlw	1
  4477  0C68  3EFF               	addlw	255
  4478  0C69  00F9               	movwf	___lwtoft@c+1
  4479  0C6A  160A  118A  2256  120A  158A  	fcall	___lwtoft
  4480  0C6F  0878               	movf	?___lwtoft,w
  4481  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  4482  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  4483  0C72  00ED               	movwf	_tf
  4484  0C73  0879               	movf	?___lwtoft+1,w
  4485  0C74  00EE               	movwf	_tf+1
  4486  0C75  087A               	movf	?___lwtoft+2,w
  4487  0C76  00EF               	movwf	_tf+2
  4488                           
  4489                           ;main.c: 421: if(setpointUI != 0)
  4490  0C77  1683               	bsf	3,5	;RP0=1, select bank1
  4491  0C78  1303               	bcf	3,6	;RP1=0, select bank1
  4492  0C79  0846               	movf	(_setpointUI+1)^(0+128),w
  4493  0C7A  0445               	iorwf	_setpointUI^(0+128),w
  4494  0C7B  1903               	skipnz
  4495  0C7C  2C82               	goto	i1l3245
  4496                           
  4497                           ;main.c: 422: {
  4498                           ;main.c: 423: send();
  4499  0C7D  160A  118A  24FB  120A  158A  	fcall	_send
  4500  0C82                     i1l3245:	
  4501                           
  4502                           ;main.c: 424: }
  4503                           ;main.c: 426: PIR1bits.RCIF = 0;
  4504  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  4505  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  4506  0C84  128C               	bcf	12,5	;volatile
  4507  0C85                     i1l3247:	
  4508                           
  4509                           ;main.c: 427: }
  4510                           ;main.c: 430: if (PIR1bits.ADIF)
  4511  0C85  1B0C               	btfsc	12,6	;volatile
  4512                           
  4513                           ;main.c: 431: {
  4514                           ;main.c: 435: PIR1bits.ADIF = 0;
  4515  0C86  130C               	bcf	12,6	;volatile
  4516                           
  4517                           ;main.c: 436: }
  4518                           ;main.c: 440: if (INTCONbits.T0IF)
  4519  0C87  1D0B               	btfss	11,2	;volatile
  4520  0C88  2CE2               	goto	i1l3273
  4521                           
  4522                           ;main.c: 441: {
  4523                           ;main.c: 443: TIMER0_Set(238);
  4524  0C89  30EE               	movlw	238
  4525  0C8A  160A  118A  2201  120A  158A  	fcall	i1_TIMER0_Set
  4526                           
  4527                           ;main.c: 446: if (contagens_tm0 < 499)
  4528  0C8F  3001               	movlw	1
  4529  0C90  1683               	bsf	3,5	;RP0=1, select bank1
  4530  0C91  1303               	bcf	3,6	;RP1=0, select bank1
  4531  0C92  023E               	subwf	(_contagens_tm0+1)^(0+128),w
  4532  0C93  30F3               	movlw	243
  4533  0C94  1903               	skipnz
  4534  0C95  023D               	subwf	_contagens_tm0^(0+128),w
  4535  0C96  1803               	skipnc
  4536  0C97  2CA2               	goto	i1l3259
  4537                           
  4538                           ;main.c: 447: {
  4539                           ;main.c: 449: contagens_tm0++;
  4540  0C98  3001               	movlw	1
  4541  0C99  07BD               	addwf	_contagens_tm0^(0+128),f
  4542  0C9A  1803               	skipnc
  4543  0C9B  0ABE               	incf	(_contagens_tm0+1)^(0+128),f
  4544  0C9C  3000               	movlw	0
  4545  0C9D  07BE               	addwf	(_contagens_tm0+1)^(0+128),f
  4546                           
  4547                           ;main.c: 452: PORTBbits.RB6 = 1;
  4548  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  4549  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  4550  0CA0  1706               	bsf	6,6	;volatile
  4551                           
  4552                           ;main.c: 453: }
  4553  0CA1  2CE1               	goto	i1l3271
  4554  0CA2                     i1l3259:	
  4555                           
  4556                           ;main.c: 454: else
  4557                           ;main.c: 455: {
  4558                           ;main.c: 457: contagens_tm0 = 0;
  4559  0CA2  1683               	bsf	3,5	;RP0=1, select bank1
  4560  0CA3  1303               	bcf	3,6	;RP1=0, select bank1
  4561  0CA4  01BD               	clrf	_contagens_tm0^(0+128)
  4562  0CA5  01BE               	clrf	(_contagens_tm0+1)^(0+128)
  4563                           
  4564                           ;main.c: 460: pulsos = (TMR1H << 8) + TMR1L;
  4565  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0CA8  080F               	movf	15,w	;volatile
  4568  0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  4569  0CAA  1303               	bcf	3,6	;RP1=0, select bank1
  4570  0CAB  01C2               	clrf	(_pulsos+1)^(0+128)
  4571  0CAC  07C2               	addwf	(_pulsos+1)^(0+128),f
  4572  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  4573  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  4574  0CAF  080E               	movf	14,w	;volatile
  4575  0CB0  1683               	bsf	3,5	;RP0=1, select bank1
  4576  0CB1  1303               	bcf	3,6	;RP1=0, select bank1
  4577  0CB2  01C1               	clrf	_pulsos^(0+128)
  4578  0CB3  07C1               	addwf	_pulsos^(0+128),f
  4579                           
  4580                           ;main.c: 461: rpm = ((pulsos / pas_cooler) * 120);
  4581  0CB4  086F               	movf	(_pas_cooler+1)^(0+128),w
  4582  0CB5  01F1               	clrf	i1___lwdiv@divisor+1
  4583  0CB6  07F1               	addwf	i1___lwdiv@divisor+1,f
  4584  0CB7  086E               	movf	_pas_cooler^(0+128),w
  4585  0CB8  01F0               	clrf	i1___lwdiv@divisor
  4586  0CB9  07F0               	addwf	i1___lwdiv@divisor,f
  4587  0CBA  0842               	movf	(_pulsos+1)^(0+128),w
  4588  0CBB  01F3               	clrf	i1___lwdiv@dividend+1
  4589  0CBC  07F3               	addwf	i1___lwdiv@dividend+1,f
  4590  0CBD  0841               	movf	_pulsos^(0+128),w
  4591  0CBE  01F2               	clrf	i1___lwdiv@dividend
  4592  0CBF  07F2               	addwf	i1___lwdiv@dividend,f
  4593  0CC0  160A  118A  2434  120A  158A  	fcall	i1___lwdiv
  4594  0CC5  0871               	movf	?i1___lwdiv+1,w
  4595  0CC6  01F9               	clrf	i1___wmul@multiplier+1
  4596  0CC7  07F9               	addwf	i1___wmul@multiplier+1,f
  4597  0CC8  0870               	movf	?i1___lwdiv,w
  4598  0CC9  01F8               	clrf	i1___wmul@multiplier
  4599  0CCA  07F8               	addwf	i1___wmul@multiplier,f
  4600  0CCB  3078               	movlw	120
  4601  0CCC  00FA               	movwf	i1___wmul@multiplicand
  4602  0CCD  3000               	movlw	0
  4603  0CCE  00FB               	movwf	i1___wmul@multiplicand+1
  4604  0CCF  160A  118A  2338  120A  158A  	fcall	i1___wmul
  4605  0CD4  0879               	movf	?i1___wmul+1,w
  4606  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  4607  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  4608  0CD7  01C4               	clrf	(_rpm+1)^(0+128)
  4609  0CD8  07C4               	addwf	(_rpm+1)^(0+128),f
  4610  0CD9  0878               	movf	?i1___wmul,w
  4611  0CDA  01C3               	clrf	_rpm^(0+128)
  4612  0CDB  07C3               	addwf	_rpm^(0+128),f
  4613                           
  4614                           ;main.c: 464: TMR1L = 0x00;
  4615  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  4616  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  4617  0CDE  018E               	clrf	14	;volatile
  4618                           
  4619                           ;main.c: 465: TMR1H = 0x00;
  4620  0CDF  018F               	clrf	15	;volatile
  4621                           
  4622                           ;main.c: 468: PORTBbits.RB6 = 0;
  4623  0CE0  1306               	bcf	6,6	;volatile
  4624  0CE1                     i1l3271:	
  4625                           
  4626                           ;main.c: 469: }
  4627                           ;main.c: 472: INTCONbits.T0IF = 0;
  4628  0CE1  110B               	bcf	11,2	;volatile
  4629  0CE2                     i1l3273:	
  4630                           
  4631                           ;main.c: 473: }
  4632                           ;main.c: 476: if (PIR1bits.TMR1IF)
  4633  0CE2  180C               	btfsc	12,0	;volatile
  4634                           
  4635                           ;main.c: 477: {
  4636                           ;main.c: 481: PIR1bits.TMR1IF = 0;
  4637  0CE3  100C               	bcf	12,0	;volatile
  4638                           
  4639                           ;main.c: 482: }
  4640                           ;main.c: 485: if (PIR1bits.SSPIF)
  4641  0CE4  198C               	btfsc	12,3	;volatile
  4642                           
  4643                           ;main.c: 486: {
  4644                           ;main.c: 490: PIR1bits.SSPIF = 0;
  4645  0CE5  118C               	bcf	12,3	;volatile
  4646  0CE6                     i1l180:	
  4647  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  4648  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  4649  0CE8  086C               	movf	??_ISR+3,w
  4650  0CE9  00FF               	movwf	127
  4651  0CEA  086B               	movf	??_ISR+2,w
  4652  0CEB  008A               	movwf	10
  4653  0CEC  086A               	movf	??_ISR+1,w
  4654  0CED  0084               	movwf	4
  4655  0CEE  0E69               	swapf	??_ISR^0,w
  4656  0CEF  0083               	movwf	3
  4657  0CF0  0EFE               	swapf	126,f
  4658  0CF1  0E7E               	swapf	126,w
  4659  0CF2  0009               	retfie
  4660  0CF3                     __end_of_ISR:	
  4661                           
  4662                           	psect	intentry
  4663  0004                     __pintentry:	
  4664                           ;incstack = 0
  4665                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4666                           
  4667  0004                     interrupt_function:	
  4668  007E                     saved_w	set	btemp
  4669  0004  00FE               	movwf	btemp
  4670  0005  0E03               	swapf	3,w
  4671  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4672  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4673  0008  00E9               	movwf	??_ISR
  4674  0009  0804               	movf	4,w
  4675  000A  00EA               	movwf	??_ISR+1
  4676  000B  080A               	movf	10,w
  4677  000C  00EB               	movwf	??_ISR+2
  4678  000D  087F               	movf	btemp+1,w
  4679  000E  00EC               	movwf	??_ISR+3
  4680  000F  120A  158A  2BC1   	ljmp	_ISR
  4681                           
  4682                           	psect	text21
  4683  1338                     __ptext21:	
  4684 ;; *************** function i1___wmul *****************
  4685 ;; Defined at:
  4686 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  multiplier      2    8[COMMON] unsigned int 
  4689 ;;  multiplicand    2   10[COMMON] unsigned int 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  __wmul          2   12[COMMON] unsigned int 
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  2    8[COMMON] unsigned int 
  4694 ;; Registers used:
  4695 ;;		wreg, status,2, status,0
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4701 ;;      Params:         4       0       0       0       0
  4702 ;;      Locals:         2       0       0       0       0
  4703 ;;      Temps:          0       0       0       0       0
  4704 ;;      Totals:         6       0       0       0       0
  4705 ;;Total ram usage:        6 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_ISR
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function i1___wmul
  4716  1338                     i1___wmul:	
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  4720  1338  01FC               	clrf	i1___wmul@product
  4721  1339  01FD               	clrf	i1___wmul@product+1
  4722  133A                     i1l3149:	
  4723  133A  1C78               	btfss	i1___wmul@multiplier,0
  4724  133B  2B42               	goto	i1l595
  4725  133C  087A               	movf	i1___wmul@multiplicand,w
  4726  133D  07FC               	addwf	i1___wmul@product,f
  4727  133E  1803               	skipnc
  4728  133F  0AFD               	incf	i1___wmul@product+1,f
  4729  1340  087B               	movf	i1___wmul@multiplicand+1,w
  4730  1341  07FD               	addwf	i1___wmul@product+1,f
  4731  1342                     i1l595:	
  4732  1342  3001               	movlw	1
  4733  1343                     u383_25:	
  4734  1343  1003               	clrc
  4735  1344  0DFA               	rlf	i1___wmul@multiplicand,f
  4736  1345  0DFB               	rlf	i1___wmul@multiplicand+1,f
  4737  1346  3EFF               	addlw	-1
  4738  1347  1D03               	skipz
  4739  1348  2B43               	goto	u383_25
  4740  1349  3001               	movlw	1
  4741  134A                     u384_25:	
  4742  134A  1003               	clrc
  4743  134B  0CF9               	rrf	i1___wmul@multiplier+1,f
  4744  134C  0CF8               	rrf	i1___wmul@multiplier,f
  4745  134D  3EFF               	addlw	-1
  4746  134E  1D03               	skipz
  4747  134F  2B4A               	goto	u384_25
  4748  1350  0879               	movf	i1___wmul@multiplier+1,w
  4749  1351  0478               	iorwf	i1___wmul@multiplier,w
  4750  1352  1D03               	skipz
  4751  1353  2B3A               	goto	i1l3149
  4752  1354  087D               	movf	i1___wmul@product+1,w
  4753  1355  01F9               	clrf	?i1___wmul+1
  4754  1356  07F9               	addwf	?i1___wmul+1,f
  4755  1357  087C               	movf	i1___wmul@product,w
  4756  1358  01F8               	clrf	?i1___wmul
  4757  1359  07F8               	addwf	?i1___wmul,f
  4758  135A  0008               	return
  4759  135B                     __end_ofi1___wmul:	
  4760                           
  4761                           	psect	text22
  4762  1434                     __ptext22:	
  4763 ;; *************** function i1___lwdiv *****************
  4764 ;; Defined at:
  4765 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  divisor         2    0[COMMON] unsigned int 
  4768 ;;  dividend        2    2[COMMON] unsigned int 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  __lwdiv         2    5[COMMON] unsigned int 
  4771 ;;  __lwdiv         1    7[COMMON] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  2    0[COMMON] unsigned int 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2, status,0
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4781 ;;      Params:         4       0       0       0       0
  4782 ;;      Locals:         3       0       0       0       0
  4783 ;;      Temps:          1       0       0       0       0
  4784 ;;      Totals:         8       0       0       0       0
  4785 ;;Total ram usage:        8 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_ISR
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           
  4795                           ;psect for function i1___lwdiv
  4796  1434                     i1___lwdiv:	
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  4800  1434  01F5               	clrf	i1___lwdiv@quotient
  4801  1435  01F6               	clrf	i1___lwdiv@quotient+1
  4802  1436  0871               	movf	i1___lwdiv@divisor+1,w
  4803  1437  0470               	iorwf	i1___lwdiv@divisor,w
  4804  1438  1903               	skipnz
  4805  1439  2C6B               	goto	i1l3181
  4806  143A  01F7               	clrf	i1___lwdiv@counter
  4807  143B  0AF7               	incf	i1___lwdiv@counter,f
  4808  143C                     i1l3169:	
  4809  143C  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  4810  143D  2C4A               	goto	i1l3171
  4811  143E  3001               	movlw	1
  4812  143F                     u387_25:	
  4813  143F  1003               	clrc
  4814  1440  0DF0               	rlf	i1___lwdiv@divisor,f
  4815  1441  0DF1               	rlf	i1___lwdiv@divisor+1,f
  4816  1442  3EFF               	addlw	-1
  4817  1443  1D03               	skipz
  4818  1444  2C3F               	goto	u387_25
  4819  1445  3001               	movlw	1
  4820  1446  00F4               	movwf	??i1___lwdiv
  4821  1447  0874               	movf	??i1___lwdiv,w
  4822  1448  07F7               	addwf	i1___lwdiv@counter,f
  4823  1449  2C3C               	goto	i1l3169
  4824  144A                     i1l3171:	
  4825  144A  3001               	movlw	1
  4826  144B                     u389_25:	
  4827  144B  1003               	clrc
  4828  144C  0DF5               	rlf	i1___lwdiv@quotient,f
  4829  144D  0DF6               	rlf	i1___lwdiv@quotient+1,f
  4830  144E  3EFF               	addlw	-1
  4831  144F  1D03               	skipz
  4832  1450  2C4B               	goto	u389_25
  4833  1451  0871               	movf	i1___lwdiv@divisor+1,w
  4834  1452  0273               	subwf	i1___lwdiv@dividend+1,w
  4835  1453  1D03               	skipz
  4836  1454  2C57               	goto	u390_25
  4837  1455  0870               	movf	i1___lwdiv@divisor,w
  4838  1456  0272               	subwf	i1___lwdiv@dividend,w
  4839  1457                     u390_25:	
  4840  1457  1C03               	skipc
  4841  1458  2C60               	goto	i1l3177
  4842  1459  0870               	movf	i1___lwdiv@divisor,w
  4843  145A  02F2               	subwf	i1___lwdiv@dividend,f
  4844  145B  0871               	movf	i1___lwdiv@divisor+1,w
  4845  145C  1C03               	skipc
  4846  145D  03F3               	decf	i1___lwdiv@dividend+1,f
  4847  145E  02F3               	subwf	i1___lwdiv@dividend+1,f
  4848  145F  1475               	bsf	i1___lwdiv@quotient,0
  4849  1460                     i1l3177:	
  4850  1460  3001               	movlw	1
  4851  1461                     u391_25:	
  4852  1461  1003               	clrc
  4853  1462  0CF1               	rrf	i1___lwdiv@divisor+1,f
  4854  1463  0CF0               	rrf	i1___lwdiv@divisor,f
  4855  1464  3EFF               	addlw	-1
  4856  1465  1D03               	skipz
  4857  1466  2C61               	goto	u391_25
  4858  1467  3001               	movlw	1
  4859  1468  02F7               	subwf	i1___lwdiv@counter,f
  4860  1469  1D03               	btfss	3,2
  4861  146A  2C4A               	goto	i1l3171
  4862  146B                     i1l3181:	
  4863  146B  0876               	movf	i1___lwdiv@quotient+1,w
  4864  146C  01F1               	clrf	?i1___lwdiv+1
  4865  146D  07F1               	addwf	?i1___lwdiv+1,f
  4866  146E  0875               	movf	i1___lwdiv@quotient,w
  4867  146F  01F0               	clrf	?i1___lwdiv
  4868  1470  07F0               	addwf	?i1___lwdiv,f
  4869  1471  0008               	return
  4870  1472                     __end_ofi1___lwdiv:	
  4871                           
  4872                           	psect	text23
  4873  1201                     __ptext23:	
  4874 ;; *************** function i1_TIMER0_Set *****************
  4875 ;; Defined at:
  4876 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  contagens       1    wreg     unsigned char 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  contagens       1    0[COMMON] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;		None               void
  4883 ;; Registers used:
  4884 ;;		wreg
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4890 ;;      Params:         0       0       0       0       0
  4891 ;;      Locals:         1       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0
  4893 ;;      Totals:         1       0       0       0       0
  4894 ;;Total ram usage:        1 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_ISR
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           
  4904                           ;psect for function i1_TIMER0_Set
  4905  1201                     i1_TIMER0_Set:	
  4906                           
  4907                           ;incstack = 0
  4908                           ; Regs used in i1_TIMER0_Set: [wreg]
  4909                           ;i1TIMER0_Set@contagens stored from wreg
  4910  1201  00F0               	movwf	i1TIMER0_Set@contagens
  4911                           
  4912                           ;timers.c: 22: TMR0 = contagens;
  4913  1202  0870               	movf	i1TIMER0_Set@contagens,w
  4914  1203  1283               	bcf	3,5	;RP0=0, select bank0
  4915  1204  1303               	bcf	3,6	;RP1=0, select bank0
  4916  1205  0081               	movwf	1	;volatile
  4917  1206  0008               	return
  4918  1207                     __end_ofi1_TIMER0_Set:	
  4919                           
  4920                           	psect	text24
  4921  14FB                     __ptext24:	
  4922 ;; *************** function _send *****************
  4923 ;; Defined at:
  4924 ;;		line 102 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;		None
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  index           1    3[COMMON] unsigned char 
  4929 ;;  checksum        1    2[COMMON] unsigned char 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;		None               void
  4932 ;; Registers used:
  4933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4939 ;;      Params:         0       0       0       0       0
  4940 ;;      Locals:         2       0       0       0       0
  4941 ;;      Temps:          1       0       0       0       0
  4942 ;;      Totals:         3       0       0       0       0
  4943 ;;Total ram usage:        3 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    1
  4946 ;; This function calls:
  4947 ;;		_USART_WriteChar
  4948 ;; This function is called by:
  4949 ;;		_ISR
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           
  4954                           ;psect for function _send
  4955  14FB                     _send:	
  4956                           
  4957                           ;main.c: 106: buffer[0] = '#';
  4958                           
  4959                           ;incstack = 0
  4960                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4961  14FB  3023               	movlw	35
  4962  14FC  00F1               	movwf	??_send
  4963  14FD  0871               	movf	??_send,w
  4964  14FE  1683               	bsf	3,5	;RP0=1, select bank3
  4965  14FF  1703               	bsf	3,6	;RP1=1, select bank3
  4966  1500  0090               	movwf	_buffer^(0+384)
  4967                           
  4968                           ;main.c: 107: buffer[1] = '$';
  4969  1501  3024               	movlw	36
  4970  1502  00F1               	movwf	??_send
  4971  1503  0871               	movf	??_send,w
  4972  1504  0091               	movwf	(_buffer^(0+384)+1)
  4973                           
  4974                           ;main.c: 108: buffer[2] = ':';
  4975  1505  303A               	movlw	58
  4976  1506  00F1               	movwf	??_send
  4977  1507  0871               	movf	??_send,w
  4978  1508  0092               	movwf	(_buffer^(0+384)+2)
  4979                           
  4980                           ;main.c: 111: buffer[3] = (rpm >> 8) & 0xFF;
  4981  1509  1683               	bsf	3,5	;RP0=1, select bank1
  4982  150A  1303               	bcf	3,6	;RP1=0, select bank1
  4983  150B  0844               	movf	(_rpm+1)^(0+128),w
  4984  150C  00F1               	movwf	??_send
  4985  150D  0871               	movf	??_send,w
  4986  150E  1683               	bsf	3,5	;RP0=1, select bank3
  4987  150F  1703               	bsf	3,6	;RP1=1, select bank3
  4988  1510  0093               	movwf	(_buffer^(0+384)+3)
  4989                           
  4990                           ;main.c: 112: buffer[4] = rpm & 0xFF;
  4991  1511  1683               	bsf	3,5	;RP0=1, select bank1
  4992  1512  1303               	bcf	3,6	;RP1=0, select bank1
  4993  1513  0843               	movf	_rpm^(0+128),w
  4994  1514  00F1               	movwf	??_send
  4995  1515  0871               	movf	??_send,w
  4996  1516  1683               	bsf	3,5	;RP0=1, select bank3
  4997  1517  1703               	bsf	3,6	;RP1=1, select bank3
  4998  1518  0094               	movwf	(_buffer^(0+384)+4)
  4999                           
  5000                           ;main.c: 113: buffer[5] = 0;
  5001  1519  0195               	clrf	(_buffer^(0+384)+5)
  5002                           
  5003                           ;main.c: 115: unsigned char checksum = 0x00;
  5004  151A  01F2               	clrf	send@checksum
  5005                           
  5006                           ;main.c: 116: for (unsigned char index = 0; index < 6; index++)
  5007  151B  01F3               	clrf	send@index
  5008  151C  3006               	movlw	6
  5009  151D  0273               	subwf	send@index,w
  5010  151E  1803               	btfsc	3,0
  5011  151F  2D3A               	goto	i1l2735
  5012  1520                     i1l2727:	
  5013                           
  5014                           ;main.c: 117: {
  5015                           ;main.c: 118: USART_WriteChar(buffer[index]);
  5016  1520  0873               	movf	send@index,w
  5017  1521  3E90               	addlw	_buffer& (0+255)
  5018  1522  0084               	movwf	4
  5019  1523  1783               	bsf	3,7	;select IRP bank3
  5020  1524  0800               	movf	0,w
  5021  1525  160A  118A  2207  160A  118A  	fcall	_USART_WriteChar
  5022                           
  5023                           ;main.c: 119: checksum ^= buffer[index];
  5024  152A  0873               	movf	send@index,w
  5025  152B  3E90               	addlw	_buffer& (0+255)
  5026  152C  0084               	movwf	4
  5027  152D  1783               	bsf	3,7	;select IRP bank3
  5028  152E  0800               	movf	0,w
  5029  152F  00F1               	movwf	??_send
  5030  1530  0871               	movf	??_send,w
  5031  1531  06F2               	xorwf	send@checksum,f
  5032  1532  3001               	movlw	1
  5033  1533  00F1               	movwf	??_send
  5034  1534  0871               	movf	??_send,w
  5035  1535  07F3               	addwf	send@index,f
  5036  1536  3006               	movlw	6
  5037  1537  0273               	subwf	send@index,w
  5038  1538  1C03               	skipc
  5039  1539  2D20               	goto	i1l2727
  5040  153A                     i1l2735:	
  5041                           
  5042                           ;main.c: 120: }
  5043                           ;main.c: 121: buffer[6] = checksum;
  5044  153A  0872               	movf	send@checksum,w
  5045  153B  00F1               	movwf	??_send
  5046  153C  0871               	movf	??_send,w
  5047  153D  1683               	bsf	3,5	;RP0=1, select bank3
  5048  153E  1703               	bsf	3,6	;RP1=1, select bank3
  5049  153F  0096               	movwf	(_buffer^(0+384)+6)
  5050                           
  5051                           ;main.c: 122: USART_WriteChar(buffer[6]);
  5052  1540  0816               	movf	(_buffer^(0+384)+6),w
  5053  1541  160A  118A  2207   	fcall	_USART_WriteChar
  5054  1544  0008               	return
  5055  1545                     __end_of_send:	
  5056                           
  5057                           	psect	text25
  5058  07E6                     __ptext25:	
  5059 ;; *************** function _USART_ReceiveChar *****************
  5060 ;; Defined at:
  5061 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;		None
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  byte            1    4[COMMON] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      unsigned char 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5075 ;;      Params:         0       0       0       0       0
  5076 ;;      Locals:         1       0       0       0       0
  5077 ;;      Temps:          1       0       0       0       0
  5078 ;;      Totals:         2       0       0       0       0
  5079 ;;Total ram usage:        2 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    2
  5082 ;; This function calls:
  5083 ;;		_USART_WriteString
  5084 ;; This function is called by:
  5085 ;;		_ISR
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           
  5090                           ;psect for function _USART_ReceiveChar
  5091  07E6                     _USART_ReceiveChar:	
  5092                           
  5093                           ;usart.c: 65: unsigned char byte;
  5094                           ;usart.c: 67: if (!OERR)
  5095                           
  5096                           ;incstack = 0
  5097                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5098  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  5099  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  5100  07E8  1898               	btfsc	24,1	;volatile
  5101  07E9  2FEF               	goto	i1l2887
  5102                           
  5103                           ;usart.c: 68: {
  5104                           ;usart.c: 69: byte = RCREG;
  5105  07EA  081A               	movf	26,w	;volatile
  5106  07EB  00F3               	movwf	??_USART_ReceiveChar
  5107  07EC  0873               	movf	??_USART_ReceiveChar,w
  5108  07ED  00F4               	movwf	USART_ReceiveChar@byte
  5109  07EE  2FFB               	goto	i1l2895
  5110  07EF                     i1l2887:	
  5111                           ;usart.c: 71: }
  5112                           
  5113                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5114                           
  5115                           
  5116                           ;usart.c: 72: else
  5117                           ;usart.c: 73: {
  5118                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5119  07EF  300B               	movlw	(STR_5-__stringbase)& (0+255)
  5120  07F0  160A  118A  229C   	fcall	_USART_WriteString
  5121                           
  5122                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5123  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  5124  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  5125  07F5  1218               	bcf	24,4	;volatile
  5126                           
  5127                           ;usart.c: 77: byte = RCREG;
  5128  07F6  081A               	movf	26,w	;volatile
  5129  07F7  00F3               	movwf	??_USART_ReceiveChar
  5130  07F8  0873               	movf	??_USART_ReceiveChar,w
  5131  07F9  00F4               	movwf	USART_ReceiveChar@byte
  5132                           
  5133                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5134  07FA  1618               	bsf	24,4	;volatile
  5135  07FB                     i1l2895:	
  5136                           
  5137                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5138  07FB  128C               	bcf	12,5	;volatile
  5139                           
  5140                           ;usart.c: 80: }
  5141                           ;usart.c: 82: return(byte);
  5142  07FC  0874               	movf	USART_ReceiveChar@byte,w
  5143  07FD  0008               	return
  5144  07FE                     __end_of_USART_ReceiveChar:	
  5145                           
  5146                           	psect	text26
  5147  129C                     __ptext26:	
  5148 ;; *************** function _USART_WriteString *****************
  5149 ;; Defined at:
  5150 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  str             1    wreg     PTR const unsigned char 
  5153 ;;		 -> STR_5(40), STR_1(14), 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  str             1    2[COMMON] PTR const unsigned char 
  5156 ;;		 -> STR_5(40), STR_1(14), 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;		None               void
  5159 ;; Registers used:
  5160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5166 ;;      Params:         0       0       0       0       0
  5167 ;;      Locals:         1       0       0       0       0
  5168 ;;      Temps:          1       0       0       0       0
  5169 ;;      Totals:         2       0       0       0       0
  5170 ;;Total ram usage:        2 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    1
  5173 ;; This function calls:
  5174 ;;		_USART_WriteChar
  5175 ;; This function is called by:
  5176 ;;		_ISR
  5177 ;;		_USART_ReceiveChar
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           
  5182                           ;psect for function _USART_WriteString
  5183  129C                     _USART_WriteString:	
  5184                           
  5185                           ;incstack = 0
  5186                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5187                           ;USART_WriteString@str stored from wreg
  5188  129C  00F2               	movwf	USART_WriteString@str
  5189  129D                     i1l2481:	
  5190                           ;usart.c: 54: while(*str != '\0')
  5191                           
  5192  129D  0872               	movf	USART_WriteString@str,w
  5193  129E  0084               	movwf	4
  5194  129F  160A  118A  200A  160A  118A  	fcall	stringdir
  5195  12A4  3800               	iorlw	0
  5196  12A5  1903               	btfsc	3,2
  5197  12A6  0008               	return
  5198                           
  5199                           ;usart.c: 55: {
  5200                           ;usart.c: 56: USART_WriteChar(*str);
  5201  12A7  0872               	movf	USART_WriteString@str,w
  5202  12A8  0084               	movwf	4
  5203  12A9  160A  118A  200A  160A  118A  	fcall	stringdir
  5204  12AE  160A  118A  2207  160A  118A  	fcall	_USART_WriteChar
  5205                           
  5206                           ;usart.c: 57: str++;
  5207  12B3  3001               	movlw	1
  5208  12B4  00F1               	movwf	??_USART_WriteString
  5209  12B5  0871               	movf	??_USART_WriteString,w
  5210  12B6  07F2               	addwf	USART_WriteString@str,f
  5211  12B7  2A9D               	goto	i1l2481
  5212  12B8                     __end_of_USART_WriteString:	
  5213                           
  5214                           	psect	text27
  5215  1207                     __ptext27:	
  5216 ;; *************** function _USART_WriteChar *****************
  5217 ;; Defined at:
  5218 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  byte            1    wreg     unsigned char 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  byte            1    0[COMMON] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;		None               void
  5225 ;; Registers used:
  5226 ;;		wreg
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5232 ;;      Params:         0       0       0       0       0
  5233 ;;      Locals:         1       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0
  5235 ;;      Totals:         1       0       0       0       0
  5236 ;;Total ram usage:        1 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_send
  5242 ;;		_USART_WriteString
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           
  5247                           ;psect for function _USART_WriteChar
  5248  1207                     _USART_WriteChar:	
  5249                           
  5250                           ;incstack = 0
  5251                           ; Regs used in _USART_WriteChar: [wreg]
  5252                           ;USART_WriteChar@byte stored from wreg
  5253  1207  00F0               	movwf	USART_WriteChar@byte
  5254  1208                     i1l224:	
  5255                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5256                           
  5257  1208  1283               	bcf	3,5	;RP0=0, select bank0
  5258  1209  1303               	bcf	3,6	;RP1=0, select bank0
  5259  120A  1E0C               	btfss	12,4	;volatile
  5260  120B  2A08               	goto	i1l224
  5261                           
  5262                           ;usart.c: 47: TXREG = byte;
  5263  120C  0870               	movf	USART_WriteChar@byte,w
  5264  120D  0099               	movwf	25	;volatile
  5265  120E  0008               	return
  5266  120F                     __end_of_USART_WriteChar:	
  5267                           
  5268                           	psect	text28
  5269  006B                     __ptext28:	
  5270 ;; *************** function _Fuzzy *****************
  5271 ;; Defined at:
  5272 ;;		line 147 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  a               2   59[BANK0 ] int 
  5277 ;;  a               2   57[BANK0 ] int 
  5278 ;;  a               2   55[BANK0 ] int 
  5279 ;;  deltaRpm        3   70[BANK0 ] float 
  5280 ;;  aumenta         3   67[BANK0 ] float 
  5281 ;;  reduz           3   64[BANK0 ] float 
  5282 ;;  mantem          3   61[BANK0 ] float 
  5283 ;;  tip             3   52[BANK0 ] float 
  5284 ;;  freio           2   50[BANK0 ] unsigned int 
  5285 ;; Return value:  Size  Location     Type
  5286 ;;		None               void
  5287 ;; Registers used:
  5288 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5294 ;;      Params:         0       0       0       0       0
  5295 ;;      Locals:         0      23       0       0       0
  5296 ;;      Temps:          0       0       0       0       0
  5297 ;;      Totals:         0      23       0       0       0
  5298 ;;Total ram usage:       23 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; Hardware stack levels required when called:    3
  5301 ;; This function calls:
  5302 ;;		___ftadd
  5303 ;;		___ftdiv
  5304 ;;		___ftge
  5305 ;;		___ftmul
  5306 ;;		___ftneg
  5307 ;;		___fttol
  5308 ;;		___lwtoft
  5309 ;;		_max_val
  5310 ;;		_trapmf
  5311 ;;		_trimf
  5312 ;;		i1_PWM_DutyCycle2
  5313 ;; This function is called by:
  5314 ;;		_ISR
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           
  5319                           ;psect for function _Fuzzy
  5320  006B                     _Fuzzy:	
  5321                           
  5322                           ;main.c: 158: setpoint = (float)setpointUI;
  5323                           
  5324                           ;incstack = 0
  5325                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5326  006B  1683               	bsf	3,5	;RP0=1, select bank1
  5327  006C  1303               	bcf	3,6	;RP1=0, select bank1
  5328  006D  0846               	movf	(_setpointUI+1)^(0+128),w
  5329  006E  01F9               	clrf	___lwtoft@c+1
  5330  006F  07F9               	addwf	___lwtoft@c+1,f
  5331  0070  0845               	movf	_setpointUI^(0+128),w
  5332  0071  01F8               	clrf	___lwtoft@c
  5333  0072  07F8               	addwf	___lwtoft@c,f
  5334  0073  160A  118A  2256  120A  118A  	fcall	___lwtoft
  5335  0078  0878               	movf	?___lwtoft,w
  5336  0079  1683               	bsf	3,5	;RP0=1, select bank1
  5337  007A  1303               	bcf	3,6	;RP1=0, select bank1
  5338  007B  00EB               	movwf	_setpoint^(0+128)
  5339  007C  0879               	movf	?___lwtoft+1,w
  5340  007D  00EC               	movwf	(_setpoint+1)^(0+128)
  5341  007E  087A               	movf	?___lwtoft+2,w
  5342  007F  00ED               	movwf	(_setpoint+2)^(0+128)
  5343                           
  5344                           ;main.c: 159: float deltaRpm = 0;
  5345  0080  3000               	movlw	0
  5346  0081  1283               	bcf	3,5	;RP0=0, select bank0
  5347  0082  1303               	bcf	3,6	;RP1=0, select bank0
  5348  0083  00E6               	movwf	Fuzzy@deltaRpm
  5349  0084  3000               	movlw	0
  5350  0085  00E7               	movwf	Fuzzy@deltaRpm+1
  5351  0086  3000               	movlw	0
  5352  0087  00E8               	movwf	Fuzzy@deltaRpm+2
  5353                           
  5354                           ;main.c: 162: unsigned int freio = 0;
  5355  0088  01D2               	clrf	Fuzzy@freio
  5356  0089  01D3               	clrf	Fuzzy@freio+1
  5357                           
  5358                           ;main.c: 168: float mantem = 0;
  5359  008A  3000               	movlw	0
  5360  008B  00DD               	movwf	Fuzzy@mantem
  5361  008C  3000               	movlw	0
  5362  008D  00DE               	movwf	Fuzzy@mantem+1
  5363  008E  3000               	movlw	0
  5364  008F  00DF               	movwf	Fuzzy@mantem+2
  5365                           
  5366                           ;main.c: 169: float reduz = 0;
  5367  0090  3000               	movlw	0
  5368  0091  00E0               	movwf	Fuzzy@reduz
  5369  0092  3000               	movlw	0
  5370  0093  00E1               	movwf	Fuzzy@reduz+1
  5371  0094  3000               	movlw	0
  5372  0095  00E2               	movwf	Fuzzy@reduz+2
  5373                           
  5374                           ;main.c: 170: float aumenta = 0;
  5375  0096  3000               	movlw	0
  5376  0097  00E3               	movwf	Fuzzy@aumenta
  5377  0098  3000               	movlw	0
  5378  0099  00E4               	movwf	Fuzzy@aumenta+1
  5379  009A  3000               	movlw	0
  5380  009B  00E5               	movwf	Fuzzy@aumenta+2
  5381                           
  5382                           ;main.c: 171: float tip;
  5383                           ;main.c: 172: fitemp = 0;
  5384  009C  3000               	movlw	0
  5385  009D  1683               	bsf	3,5	;RP0=1, select bank1
  5386  009E  1303               	bcf	3,6	;RP1=0, select bank1
  5387  009F  00A3               	movwf	_fitemp^(0+128)
  5388  00A0  3000               	movlw	0
  5389  00A1  00A4               	movwf	(_fitemp+1)^(0+128)
  5390  00A2  3000               	movlw	0
  5391  00A3  00A5               	movwf	(_fitemp+2)^(0+128)
  5392                           
  5393                           ;main.c: 175: deltaRpm = (setpoint - tf);
  5394  00A4  086B               	movf	_setpoint^(0+128),w
  5395  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  5396  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  5397  00A7  00A3               	movwf	___ftadd@f1
  5398  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  5399  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  5400  00AA  086C               	movf	(_setpoint+1)^(0+128),w
  5401  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  5402  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  5403  00AD  00A4               	movwf	___ftadd@f1+1
  5404  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  5405  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  5406  00B0  086D               	movf	(_setpoint+2)^(0+128),w
  5407  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  5408  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  5409  00B3  00A5               	movwf	___ftadd@f1+2
  5410  00B4  086D               	movf	_tf,w
  5411  00B5  00A0               	movwf	___ftneg@f1
  5412  00B6  086E               	movf	_tf+1,w
  5413  00B7  00A1               	movwf	___ftneg@f1+1
  5414  00B8  086F               	movf	_tf+2,w
  5415  00B9  00A2               	movwf	___ftneg@f1+2
  5416  00BA  160A  118A  221F  120A  118A  	fcall	___ftneg
  5417  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  5418  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  5419  00C1  0820               	movf	?___ftneg,w
  5420  00C2  00A6               	movwf	___ftadd@f2
  5421  00C3  0821               	movf	?___ftneg+1,w
  5422  00C4  00A7               	movwf	___ftadd@f2+1
  5423  00C5  0822               	movf	?___ftneg+2,w
  5424  00C6  00A8               	movwf	___ftadd@f2+2
  5425  00C7  120A  158A  2194  120A  118A  	fcall	___ftadd
  5426  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  5427  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  5428  00CE  0823               	movf	?___ftadd,w
  5429  00CF  00E6               	movwf	Fuzzy@deltaRpm
  5430  00D0  0824               	movf	?___ftadd+1,w
  5431  00D1  00E7               	movwf	Fuzzy@deltaRpm+1
  5432  00D2  0825               	movf	?___ftadd+2,w
  5433  00D3  00E8               	movwf	Fuzzy@deltaRpm+2
  5434                           
  5435                           ;main.c: 176: deltaRpm = (deltaRpm/100);
  5436  00D4  3000               	movlw	0
  5437  00D5  00B0               	movwf	___ftdiv@f2
  5438  00D6  30C8               	movlw	200
  5439  00D7  00B1               	movwf	___ftdiv@f2+1
  5440  00D8  3042               	movlw	66
  5441  00D9  00B2               	movwf	___ftdiv@f2+2
  5442  00DA  0866               	movf	Fuzzy@deltaRpm,w
  5443  00DB  00B3               	movwf	___ftdiv@f1
  5444  00DC  0867               	movf	Fuzzy@deltaRpm+1,w
  5445  00DD  00B4               	movwf	___ftdiv@f1+1
  5446  00DE  0868               	movf	Fuzzy@deltaRpm+2,w
  5447  00DF  00B5               	movwf	___ftdiv@f1+2
  5448  00E0  160A  118A  2677  120A  118A  	fcall	___ftdiv
  5449  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  5450  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  5451  00E7  0830               	movf	?___ftdiv,w
  5452  00E8  00E6               	movwf	Fuzzy@deltaRpm
  5453  00E9  0831               	movf	?___ftdiv+1,w
  5454  00EA  00E7               	movwf	Fuzzy@deltaRpm+1
  5455  00EB  0832               	movf	?___ftdiv+2,w
  5456  00EC  00E8               	movwf	Fuzzy@deltaRpm+2
  5457                           
  5458                           ;main.c: 178: deltaV = deltaRpm;
  5459  00ED  0866               	movf	Fuzzy@deltaRpm,w
  5460  00EE  00B0               	movwf	___fttol@f1
  5461  00EF  0867               	movf	Fuzzy@deltaRpm+1,w
  5462  00F0  00B1               	movwf	___fttol@f1+1
  5463  00F1  0868               	movf	Fuzzy@deltaRpm+2,w
  5464  00F2  00B2               	movwf	___fttol@f1+2
  5465  00F3  120A  158A  201A  120A  118A  	fcall	___fttol
  5466  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  5467  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  5468  00FA  0831               	movf	?___fttol+1,w
  5469  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  5470  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  5471  00FD  01C0               	clrf	(_deltaV+1)^(0+128)
  5472  00FE  07C0               	addwf	(_deltaV+1)^(0+128),f
  5473  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  5474  0100  1303               	bcf	3,6	;RP1=0, select bank0
  5475  0101  0830               	movf	?___fttol,w
  5476  0102  1683               	bsf	3,5	;RP0=1, select bank1
  5477  0103  1303               	bcf	3,6	;RP1=0, select bank1
  5478  0104  01BF               	clrf	_deltaV^(0+128)
  5479  0105  07BF               	addwf	_deltaV^(0+128),f
  5480                           
  5481                           ;main.c: 180: if (deltaRpm <0)
  5482  0106  1283               	bcf	3,5	;RP0=0, select bank0
  5483  0107  1303               	bcf	3,6	;RP1=0, select bank0
  5484  0108  0866               	movf	Fuzzy@deltaRpm,w
  5485  0109  00B0               	movwf	___ftge@ff1
  5486  010A  0867               	movf	Fuzzy@deltaRpm+1,w
  5487  010B  00B1               	movwf	___ftge@ff1+1
  5488  010C  0868               	movf	Fuzzy@deltaRpm+2,w
  5489  010D  00B2               	movwf	___ftge@ff1+2
  5490  010E  3000               	movlw	0
  5491  010F  00B3               	movwf	___ftge@ff2
  5492  0110  3000               	movlw	0
  5493  0111  00B4               	movwf	___ftge@ff2+1
  5494  0112  3000               	movlw	0
  5495  0113  00B5               	movwf	___ftge@ff2+2
  5496  0114  160A  118A  2545  120A  118A  	fcall	___ftge
  5497  0119  1803               	btfsc	3,0
  5498  011A  293F               	goto	i1l2769
  5499                           
  5500                           ;main.c: 181: {
  5501                           ;main.c: 182: if(PORTBbits.RB1 == 0)
  5502  011B  1283               	bcf	3,5	;RP0=0, select bank0
  5503  011C  1303               	bcf	3,6	;RP1=0, select bank0
  5504  011D  1886               	btfsc	6,1	;volatile
  5505  011E  2921               	goto	i1l149
  5506                           
  5507                           ;main.c: 183: {
  5508                           ;main.c: 184: PORTBbits.RB1 = 1;
  5509  011F  1486               	bsf	6,1	;volatile
  5510                           
  5511                           ;main.c: 185: }else{
  5512  0120  2922               	goto	i1l2765
  5513  0121                     i1l149:	
  5514                           
  5515                           ;main.c: 186: PORTBbits.RB1 = 0;
  5516  0121  1086               	bcf	6,1	;volatile
  5517  0122                     i1l2765:	
  5518                           
  5519                           ;main.c: 187: }
  5520                           ;main.c: 189: deltaRpm = deltaRpm*-1;
  5521  0122  3000               	movlw	0
  5522  0123  00F8               	movwf	___ftmul@f1
  5523  0124  3080               	movlw	128
  5524  0125  00F9               	movwf	___ftmul@f1+1
  5525  0126  30BF               	movlw	191
  5526  0127  00FA               	movwf	___ftmul@f1+2
  5527  0128  0866               	movf	Fuzzy@deltaRpm,w
  5528  0129  00FB               	movwf	___ftmul@f2
  5529  012A  0867               	movf	Fuzzy@deltaRpm+1,w
  5530  012B  00FC               	movwf	___ftmul@f2+1
  5531  012C  0868               	movf	Fuzzy@deltaRpm+2,w
  5532  012D  00FD               	movwf	___ftmul@f2+2
  5533  012E  160A  118A  272F  120A  118A  	fcall	___ftmul
  5534  0133  0878               	movf	?___ftmul,w
  5535  0134  1283               	bcf	3,5	;RP0=0, select bank0
  5536  0135  1303               	bcf	3,6	;RP1=0, select bank0
  5537  0136  00E6               	movwf	Fuzzy@deltaRpm
  5538  0137  0879               	movf	?___ftmul+1,w
  5539  0138  00E7               	movwf	Fuzzy@deltaRpm+1
  5540  0139  087A               	movf	?___ftmul+2,w
  5541  013A  00E8               	movwf	Fuzzy@deltaRpm+2
  5542                           
  5543                           ;main.c: 190: freio = 1;
  5544  013B  3001               	movlw	1
  5545  013C  00D2               	movwf	Fuzzy@freio
  5546  013D  3000               	movlw	0
  5547  013E  00D3               	movwf	Fuzzy@freio+1
  5548  013F                     i1l2769:	
  5549                           
  5550                           ;main.c: 191: }
  5551                           ;main.c: 193: if (deltaRpm >90) deltaRpm = 90;
  5552  013F  3000               	movlw	0
  5553  0140  1283               	bcf	3,5	;RP0=0, select bank0
  5554  0141  1303               	bcf	3,6	;RP1=0, select bank0
  5555  0142  00B0               	movwf	___ftge@ff1
  5556  0143  30B4               	movlw	180
  5557  0144  00B1               	movwf	___ftge@ff1+1
  5558  0145  3042               	movlw	66
  5559  0146  00B2               	movwf	___ftge@ff1+2
  5560  0147  0866               	movf	Fuzzy@deltaRpm,w
  5561  0148  00B3               	movwf	___ftge@ff2
  5562  0149  0867               	movf	Fuzzy@deltaRpm+1,w
  5563  014A  00B4               	movwf	___ftge@ff2+1
  5564  014B  0868               	movf	Fuzzy@deltaRpm+2,w
  5565  014C  00B5               	movwf	___ftge@ff2+2
  5566  014D  160A  118A  2545  120A  118A  	fcall	___ftge
  5567  0152  1803               	btfsc	3,0
  5568  0153  295C               	goto	i1l2773
  5569  0154  3000               	movlw	0
  5570  0155  1283               	bcf	3,5	;RP0=0, select bank0
  5571  0156  1303               	bcf	3,6	;RP1=0, select bank0
  5572  0157  00E6               	movwf	Fuzzy@deltaRpm
  5573  0158  30B4               	movlw	180
  5574  0159  00E7               	movwf	Fuzzy@deltaRpm+1
  5575  015A  3042               	movlw	66
  5576  015B  00E8               	movwf	Fuzzy@deltaRpm+2
  5577  015C                     i1l2773:	
  5578                           
  5579                           ;main.c: 196: if (deltaRpm < 25)
  5580  015C  1283               	bcf	3,5	;RP0=0, select bank0
  5581  015D  1303               	bcf	3,6	;RP1=0, select bank0
  5582  015E  0866               	movf	Fuzzy@deltaRpm,w
  5583  015F  00B0               	movwf	___ftge@ff1
  5584  0160  0867               	movf	Fuzzy@deltaRpm+1,w
  5585  0161  00B1               	movwf	___ftge@ff1+1
  5586  0162  0868               	movf	Fuzzy@deltaRpm+2,w
  5587  0163  00B2               	movwf	___ftge@ff1+2
  5588  0164  3000               	movlw	0
  5589  0165  00B3               	movwf	___ftge@ff2
  5590  0166  30C8               	movlw	200
  5591  0167  00B4               	movwf	___ftge@ff2+1
  5592  0168  3041               	movlw	65
  5593  0169  00B5               	movwf	___ftge@ff2+2
  5594  016A  160A  118A  2545  120A  118A  	fcall	___ftge
  5595  016F  1803               	btfsc	3,0
  5596  0170  2AD1               	goto	i1l2797
  5597                           
  5598                           ;main.c: 197: {
  5599                           ;main.c: 201: fitemp = trapmf(deltaRpm, 0,0,13,32);
  5600  0171  1283               	bcf	3,5	;RP0=0, select bank0
  5601  0172  1303               	bcf	3,6	;RP1=0, select bank0
  5602  0173  0866               	movf	Fuzzy@deltaRpm,w
  5603  0174  00C0               	movwf	trapmf@x
  5604  0175  0867               	movf	Fuzzy@deltaRpm+1,w
  5605  0176  00C1               	movwf	trapmf@x+1
  5606  0177  0868               	movf	Fuzzy@deltaRpm+2,w
  5607  0178  00C2               	movwf	trapmf@x+2
  5608  0179  3000               	movlw	0
  5609  017A  00C3               	movwf	trapmf@a
  5610  017B  3000               	movlw	0
  5611  017C  00C4               	movwf	trapmf@a+1
  5612  017D  3000               	movlw	0
  5613  017E  00C5               	movwf	trapmf@a+2
  5614  017F  3000               	movlw	0
  5615  0180  00C6               	movwf	trapmf@b
  5616  0181  3000               	movlw	0
  5617  0182  00C7               	movwf	trapmf@b+1
  5618  0183  3000               	movlw	0
  5619  0184  00C8               	movwf	trapmf@b+2
  5620  0185  3000               	movlw	0
  5621  0186  00C9               	movwf	trapmf@c
  5622  0187  3050               	movlw	80
  5623  0188  00CA               	movwf	trapmf@c+1
  5624  0189  3041               	movlw	65
  5625  018A  00CB               	movwf	trapmf@c+2
  5626  018B  3000               	movlw	0
  5627  018C  00CC               	movwf	trapmf@d
  5628  018D  3000               	movlw	0
  5629  018E  00CD               	movwf	trapmf@d+1
  5630  018F  3042               	movlw	66
  5631  0190  00CE               	movwf	trapmf@d+2
  5632  0191  120A  158A  24F3  120A  118A  	fcall	_trapmf
  5633  0196  1283               	bcf	3,5	;RP0=0, select bank0
  5634  0197  1303               	bcf	3,6	;RP1=0, select bank0
  5635  0198  0840               	movf	?_trapmf,w
  5636  0199  1683               	bsf	3,5	;RP0=1, select bank1
  5637  019A  1303               	bcf	3,6	;RP1=0, select bank1
  5638  019B  00A3               	movwf	_fitemp^(0+128)
  5639  019C  1283               	bcf	3,5	;RP0=0, select bank0
  5640  019D  1303               	bcf	3,6	;RP1=0, select bank0
  5641  019E  0841               	movf	?_trapmf+1,w
  5642  019F  1683               	bsf	3,5	;RP0=1, select bank1
  5643  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  5644  01A1  00A4               	movwf	(_fitemp+1)^(0+128)
  5645  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  5646  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  5647  01A4  0842               	movf	?_trapmf+2,w
  5648  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  5649  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  5650  01A7  00A5               	movwf	(_fitemp+2)^(0+128)
  5651                           
  5652                           ;main.c: 204: fop_rule1 = max_val(fitemp,0.1);
  5653  01A8  0823               	movf	_fitemp^(0+128),w
  5654  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  5655  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  5656  01AB  00BC               	movwf	max_val@a
  5657  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  5658  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  5659  01AE  0824               	movf	(_fitemp+1)^(0+128),w
  5660  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  5661  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  5662  01B1  00BD               	movwf	max_val@a+1
  5663  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  5664  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  5665  01B4  0825               	movf	(_fitemp+2)^(0+128),w
  5666  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  5667  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  5668  01B7  00BE               	movwf	max_val@a+2
  5669  01B8  30CD               	movlw	205
  5670  01B9  00BF               	movwf	max_val@b
  5671  01BA  30CC               	movlw	204
  5672  01BB  00C0               	movwf	max_val@b+1
  5673  01BC  303D               	movlw	61
  5674  01BD  00C1               	movwf	max_val@b+2
  5675  01BE  160A  118A  22B8  120A  118A  	fcall	_max_val
  5676  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  5677  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  5678  01C5  083C               	movf	?_max_val,w
  5679  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  5680  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  5681  01C8  00A6               	movwf	_fop_rule1^(0+128)
  5682  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  5683  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  5684  01CB  083D               	movf	?_max_val+1,w
  5685  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  5686  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  5687  01CE  00A7               	movwf	(_fop_rule1+1)^(0+128)
  5688  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  5689  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  5690  01D1  083E               	movf	?_max_val+2,w
  5691  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  5692  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  5693  01D4  00A8               	movwf	(_fop_rule1+2)^(0+128)
  5694                           
  5695                           ;main.c: 207: x=0;
  5696  01D5  3000               	movlw	0
  5697  01D6  00B5               	movwf	_x^(0+128)
  5698  01D7  3000               	movlw	0
  5699  01D8  00B6               	movwf	(_x+1)^(0+128)
  5700  01D9  3000               	movlw	0
  5701  01DA  00B7               	movwf	(_x+2)^(0+128)
  5702                           
  5703                           ;main.c: 208: y=0;
  5704  01DB  3000               	movlw	0
  5705  01DC  00B8               	movwf	_y^(0+128)
  5706  01DD  3000               	movlw	0
  5707  01DE  00B9               	movwf	(_y+1)^(0+128)
  5708  01DF  3000               	movlw	0
  5709  01E0  00BA               	movwf	(_y+2)^(0+128)
  5710                           
  5711                           ;main.c: 209: for (int a=0; a<=90; a++)
  5712  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  5713  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  5714  01E3  01D7               	clrf	Fuzzy@a
  5715  01E4  01D8               	clrf	Fuzzy@a+1
  5716  01E5  0858               	movf	Fuzzy@a+1,w
  5717  01E6  3A80               	xorlw	128
  5718  01E7  00FF               	movwf	127
  5719  01E8  3080               	movlw	128
  5720  01E9  027F               	subwf	127,w
  5721  01EA  1D03               	skipz
  5722  01EB  29EE               	goto	u338_25
  5723  01EC  305B               	movlw	91
  5724  01ED  0257               	subwf	Fuzzy@a,w
  5725  01EE                     u338_25:	
  5726  01EE  1803               	btfsc	3,0
  5727  01EF  2AD1               	goto	i1l2797
  5728  01F0                     i1l2787:	
  5729                           
  5730                           ;main.c: 210: {
  5731                           ;main.c: 211: y = trapmf(x,0,0,13,32);
  5732  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  5733  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  5734  01F2  0835               	movf	_x^(0+128),w
  5735  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  5736  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  5737  01F5  00C0               	movwf	trapmf@x
  5738  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  5739  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  5740  01F8  0836               	movf	(_x+1)^(0+128),w
  5741  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  5742  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  5743  01FB  00C1               	movwf	trapmf@x+1
  5744  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  5745  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  5746  01FE  0837               	movf	(_x+2)^(0+128),w
  5747  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  5748  0200  1303               	bcf	3,6	;RP1=0, select bank0
  5749  0201  00C2               	movwf	trapmf@x+2
  5750  0202  3000               	movlw	0
  5751  0203  00C3               	movwf	trapmf@a
  5752  0204  3000               	movlw	0
  5753  0205  00C4               	movwf	trapmf@a+1
  5754  0206  3000               	movlw	0
  5755  0207  00C5               	movwf	trapmf@a+2
  5756  0208  3000               	movlw	0
  5757  0209  00C6               	movwf	trapmf@b
  5758  020A  3000               	movlw	0
  5759  020B  00C7               	movwf	trapmf@b+1
  5760  020C  3000               	movlw	0
  5761  020D  00C8               	movwf	trapmf@b+2
  5762  020E  3000               	movlw	0
  5763  020F  00C9               	movwf	trapmf@c
  5764  0210  3050               	movlw	80
  5765  0211  00CA               	movwf	trapmf@c+1
  5766  0212  3041               	movlw	65
  5767  0213  00CB               	movwf	trapmf@c+2
  5768  0214  3000               	movlw	0
  5769  0215  00CC               	movwf	trapmf@d
  5770  0216  3000               	movlw	0
  5771  0217  00CD               	movwf	trapmf@d+1
  5772  0218  3042               	movlw	66
  5773  0219  00CE               	movwf	trapmf@d+2
  5774  021A  120A  158A  24F3  120A  118A  	fcall	_trapmf
  5775  021F  1283               	bcf	3,5	;RP0=0, select bank0
  5776  0220  1303               	bcf	3,6	;RP1=0, select bank0
  5777  0221  0840               	movf	?_trapmf,w
  5778  0222  1683               	bsf	3,5	;RP0=1, select bank1
  5779  0223  1303               	bcf	3,6	;RP1=0, select bank1
  5780  0224  00B8               	movwf	_y^(0+128)
  5781  0225  1283               	bcf	3,5	;RP0=0, select bank0
  5782  0226  1303               	bcf	3,6	;RP1=0, select bank0
  5783  0227  0841               	movf	?_trapmf+1,w
  5784  0228  1683               	bsf	3,5	;RP0=1, select bank1
  5785  0229  1303               	bcf	3,6	;RP1=0, select bank1
  5786  022A  00B9               	movwf	(_y+1)^(0+128)
  5787  022B  1283               	bcf	3,5	;RP0=0, select bank0
  5788  022C  1303               	bcf	3,6	;RP1=0, select bank0
  5789  022D  0842               	movf	?_trapmf+2,w
  5790  022E  1683               	bsf	3,5	;RP0=1, select bank1
  5791  022F  1303               	bcf	3,6	;RP1=0, select bank1
  5792  0230  00BA               	movwf	(_y+2)^(0+128)
  5793                           
  5794                           ;main.c: 213: if (y > fop_rule1)
  5795  0231  0826               	movf	_fop_rule1^(0+128),w
  5796  0232  1283               	bcf	3,5	;RP0=0, select bank0
  5797  0233  1303               	bcf	3,6	;RP1=0, select bank0
  5798  0234  00B0               	movwf	___ftge@ff1
  5799  0235  1683               	bsf	3,5	;RP0=1, select bank1
  5800  0236  1303               	bcf	3,6	;RP1=0, select bank1
  5801  0237  0827               	movf	(_fop_rule1+1)^(0+128),w
  5802  0238  1283               	bcf	3,5	;RP0=0, select bank0
  5803  0239  1303               	bcf	3,6	;RP1=0, select bank0
  5804  023A  00B1               	movwf	___ftge@ff1+1
  5805  023B  1683               	bsf	3,5	;RP0=1, select bank1
  5806  023C  1303               	bcf	3,6	;RP1=0, select bank1
  5807  023D  0828               	movf	(_fop_rule1+2)^(0+128),w
  5808  023E  1283               	bcf	3,5	;RP0=0, select bank0
  5809  023F  1303               	bcf	3,6	;RP1=0, select bank0
  5810  0240  00B2               	movwf	___ftge@ff1+2
  5811  0241  1683               	bsf	3,5	;RP0=1, select bank1
  5812  0242  1303               	bcf	3,6	;RP1=0, select bank1
  5813  0243  0838               	movf	_y^(0+128),w
  5814  0244  1283               	bcf	3,5	;RP0=0, select bank0
  5815  0245  1303               	bcf	3,6	;RP1=0, select bank0
  5816  0246  00B3               	movwf	___ftge@ff2
  5817  0247  1683               	bsf	3,5	;RP0=1, select bank1
  5818  0248  1303               	bcf	3,6	;RP1=0, select bank1
  5819  0249  0839               	movf	(_y+1)^(0+128),w
  5820  024A  1283               	bcf	3,5	;RP0=0, select bank0
  5821  024B  1303               	bcf	3,6	;RP1=0, select bank0
  5822  024C  00B4               	movwf	___ftge@ff2+1
  5823  024D  1683               	bsf	3,5	;RP0=1, select bank1
  5824  024E  1303               	bcf	3,6	;RP1=0, select bank1
  5825  024F  083A               	movf	(_y+2)^(0+128),w
  5826  0250  1283               	bcf	3,5	;RP0=0, select bank0
  5827  0251  1303               	bcf	3,6	;RP1=0, select bank0
  5828  0252  00B5               	movwf	___ftge@ff2+2
  5829  0253  160A  118A  2545  120A  118A  	fcall	___ftge
  5830  0258  1803               	btfsc	3,0
  5831  0259  2A6A               	goto	i1l2791
  5832                           
  5833                           ;main.c: 214: {
  5834                           ;main.c: 215: reduz += fop_rule1;
  5835  025A  1683               	bsf	3,5	;RP0=1, select bank1
  5836  025B  1303               	bcf	3,6	;RP1=0, select bank1
  5837  025C  0826               	movf	_fop_rule1^(0+128),w
  5838  025D  1283               	bcf	3,5	;RP0=0, select bank0
  5839  025E  1303               	bcf	3,6	;RP1=0, select bank0
  5840  025F  00A3               	movwf	___ftadd@f1
  5841  0260  1683               	bsf	3,5	;RP0=1, select bank1
  5842  0261  1303               	bcf	3,6	;RP1=0, select bank1
  5843  0262  0827               	movf	(_fop_rule1+1)^(0+128),w
  5844  0263  1283               	bcf	3,5	;RP0=0, select bank0
  5845  0264  1303               	bcf	3,6	;RP1=0, select bank0
  5846  0265  00A4               	movwf	___ftadd@f1+1
  5847  0266  1683               	bsf	3,5	;RP0=1, select bank1
  5848  0267  1303               	bcf	3,6	;RP1=0, select bank1
  5849  0268  0828               	movf	(_fop_rule1+2)^(0+128),w
  5850  0269  2A79               	goto	L3
  5851  026A                     i1l2791:	
  5852                           ;main.c: 216: }
  5853                           
  5854                           
  5855                           ;main.c: 217: else
  5856                           ;main.c: 218: {
  5857                           ;main.c: 219: reduz += y;
  5858  026A  1683               	bsf	3,5	;RP0=1, select bank1
  5859  026B  1303               	bcf	3,6	;RP1=0, select bank1
  5860  026C  0838               	movf	_y^(0+128),w
  5861  026D  1283               	bcf	3,5	;RP0=0, select bank0
  5862  026E  1303               	bcf	3,6	;RP1=0, select bank0
  5863  026F  00A3               	movwf	___ftadd@f1
  5864  0270  1683               	bsf	3,5	;RP0=1, select bank1
  5865  0271  1303               	bcf	3,6	;RP1=0, select bank1
  5866  0272  0839               	movf	(_y+1)^(0+128),w
  5867  0273  1283               	bcf	3,5	;RP0=0, select bank0
  5868  0274  1303               	bcf	3,6	;RP1=0, select bank0
  5869  0275  00A4               	movwf	___ftadd@f1+1
  5870  0276  1683               	bsf	3,5	;RP0=1, select bank1
  5871  0277  1303               	bcf	3,6	;RP1=0, select bank1
  5872  0278  083A               	movf	(_y+2)^(0+128),w
  5873  0279                     L3:	
  5874  0279  1283               	bcf	3,5	;RP0=0, select bank0
  5875  027A  1303               	bcf	3,6	;RP1=0, select bank0
  5876  027B  00A5               	movwf	___ftadd@f1+2
  5877  027C  0860               	movf	Fuzzy@reduz,w
  5878  027D  00A6               	movwf	___ftadd@f2
  5879  027E  0861               	movf	Fuzzy@reduz+1,w
  5880  027F  00A7               	movwf	___ftadd@f2+1
  5881  0280  0862               	movf	Fuzzy@reduz+2,w
  5882  0281  00A8               	movwf	___ftadd@f2+2
  5883  0282  120A  158A  2194  120A  118A  	fcall	___ftadd
  5884  0287  1283               	bcf	3,5	;RP0=0, select bank0
  5885  0288  1303               	bcf	3,6	;RP1=0, select bank0
  5886  0289  0823               	movf	?___ftadd,w
  5887  028A  00E0               	movwf	Fuzzy@reduz
  5888  028B  0824               	movf	?___ftadd+1,w
  5889  028C  00E1               	movwf	Fuzzy@reduz+1
  5890  028D  0825               	movf	?___ftadd+2,w
  5891  028E  00E2               	movwf	Fuzzy@reduz+2
  5892                           
  5893                           ;main.c: 220: }
  5894                           ;main.c: 222: x=x+1;
  5895  028F  3000               	movlw	0
  5896  0290  00A3               	movwf	___ftadd@f1
  5897  0291  3080               	movlw	128
  5898  0292  00A4               	movwf	___ftadd@f1+1
  5899  0293  303F               	movlw	63
  5900  0294  00A5               	movwf	___ftadd@f1+2
  5901  0295  1683               	bsf	3,5	;RP0=1, select bank1
  5902  0296  1303               	bcf	3,6	;RP1=0, select bank1
  5903  0297  0835               	movf	_x^(0+128),w
  5904  0298  1283               	bcf	3,5	;RP0=0, select bank0
  5905  0299  1303               	bcf	3,6	;RP1=0, select bank0
  5906  029A  00A6               	movwf	___ftadd@f2
  5907  029B  1683               	bsf	3,5	;RP0=1, select bank1
  5908  029C  1303               	bcf	3,6	;RP1=0, select bank1
  5909  029D  0836               	movf	(_x+1)^(0+128),w
  5910  029E  1283               	bcf	3,5	;RP0=0, select bank0
  5911  029F  1303               	bcf	3,6	;RP1=0, select bank0
  5912  02A0  00A7               	movwf	___ftadd@f2+1
  5913  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  5914  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  5915  02A3  0837               	movf	(_x+2)^(0+128),w
  5916  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  5917  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  5918  02A6  00A8               	movwf	___ftadd@f2+2
  5919  02A7  120A  158A  2194  120A  118A  	fcall	___ftadd
  5920  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  5921  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  5922  02AE  0823               	movf	?___ftadd,w
  5923  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  5924  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  5925  02B1  00B5               	movwf	_x^(0+128)
  5926  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  5927  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  5928  02B4  0824               	movf	?___ftadd+1,w
  5929  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  5930  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  5931  02B7  00B6               	movwf	(_x+1)^(0+128)
  5932  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  5933  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  5934  02BA  0825               	movf	?___ftadd+2,w
  5935  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  5936  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  5937  02BD  00B7               	movwf	(_x+2)^(0+128)
  5938  02BE  3001               	movlw	1
  5939  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  5940  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  5941  02C1  07D7               	addwf	Fuzzy@a,f
  5942  02C2  1803               	skipnc
  5943  02C3  0AD8               	incf	Fuzzy@a+1,f
  5944  02C4  3000               	movlw	0
  5945  02C5  07D8               	addwf	Fuzzy@a+1,f
  5946  02C6  0858               	movf	Fuzzy@a+1,w
  5947  02C7  3A80               	xorlw	128
  5948  02C8  00FF               	movwf	127
  5949  02C9  3080               	movlw	128
  5950  02CA  027F               	subwf	127,w
  5951  02CB  1D03               	skipz
  5952  02CC  2ACF               	goto	u340_25
  5953  02CD  305B               	movlw	91
  5954  02CE  0257               	subwf	Fuzzy@a,w
  5955  02CF                     u340_25:	
  5956  02CF  1C03               	skipc
  5957  02D0  29F0               	goto	i1l2787
  5958  02D1                     i1l2797:	
  5959                           
  5960                           ;main.c: 223: }
  5961                           ;main.c: 225: }
  5962                           ;main.c: 231: if ((deltaRpm > 20) && (deltaRpm < 70))
  5963  02D1  3000               	movlw	0
  5964  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  5965  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  5966  02D4  00B0               	movwf	___ftge@ff1
  5967  02D5  30A0               	movlw	160
  5968  02D6  00B1               	movwf	___ftge@ff1+1
  5969  02D7  3041               	movlw	65
  5970  02D8  00B2               	movwf	___ftge@ff1+2
  5971  02D9  0866               	movf	Fuzzy@deltaRpm,w
  5972  02DA  00B3               	movwf	___ftge@ff2
  5973  02DB  0867               	movf	Fuzzy@deltaRpm+1,w
  5974  02DC  00B4               	movwf	___ftge@ff2+1
  5975  02DD  0868               	movf	Fuzzy@deltaRpm+2,w
  5976  02DE  00B5               	movwf	___ftge@ff2+2
  5977  02DF  160A  118A  2545  120A  118A  	fcall	___ftge
  5978  02E4  1803               	btfsc	3,0
  5979  02E5  2C4F               	goto	i1l2823
  5980  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  5981  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  5982  02E8  0866               	movf	Fuzzy@deltaRpm,w
  5983  02E9  00B0               	movwf	___ftge@ff1
  5984  02EA  0867               	movf	Fuzzy@deltaRpm+1,w
  5985  02EB  00B1               	movwf	___ftge@ff1+1
  5986  02EC  0868               	movf	Fuzzy@deltaRpm+2,w
  5987  02ED  00B2               	movwf	___ftge@ff1+2
  5988  02EE  3000               	movlw	0
  5989  02EF  00B3               	movwf	___ftge@ff2
  5990  02F0  308C               	movlw	140
  5991  02F1  00B4               	movwf	___ftge@ff2+1
  5992  02F2  3042               	movlw	66
  5993  02F3  00B5               	movwf	___ftge@ff2+2
  5994  02F4  160A  118A  2545  120A  118A  	fcall	___ftge
  5995  02F9  1803               	btfsc	3,0
  5996  02FA  2C4F               	goto	i1l2823
  5997                           
  5998                           ;main.c: 232: {
  5999                           ;main.c: 235: fitemp = trimf(deltaRpm, 9, 45, 81);
  6000  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  6001  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  6002  02FD  0866               	movf	Fuzzy@deltaRpm,w
  6003  02FE  00C0               	movwf	trimf@x
  6004  02FF  0867               	movf	Fuzzy@deltaRpm+1,w
  6005  0300  00C1               	movwf	trimf@x+1
  6006  0301  0868               	movf	Fuzzy@deltaRpm+2,w
  6007  0302  00C2               	movwf	trimf@x+2
  6008  0303  3000               	movlw	0
  6009  0304  00C3               	movwf	trimf@a
  6010  0305  3010               	movlw	16
  6011  0306  00C4               	movwf	trimf@a+1
  6012  0307  3041               	movlw	65
  6013  0308  00C5               	movwf	trimf@a+2
  6014  0309  3000               	movlw	0
  6015  030A  00C6               	movwf	trimf@b
  6016  030B  3034               	movlw	52
  6017  030C  00C7               	movwf	trimf@b+1
  6018  030D  3042               	movlw	66
  6019  030E  00C8               	movwf	trimf@b+2
  6020  030F  3000               	movlw	0
  6021  0310  00C9               	movwf	trimf@c
  6022  0311  30A2               	movlw	162
  6023  0312  00CA               	movwf	trimf@c+1
  6024  0313  3042               	movlw	66
  6025  0314  00CB               	movwf	trimf@c+2
  6026  0315  120A  158A  229D  120A  118A  	fcall	_trimf
  6027  031A  1283               	bcf	3,5	;RP0=0, select bank0
  6028  031B  1303               	bcf	3,6	;RP1=0, select bank0
  6029  031C  0840               	movf	?_trimf,w
  6030  031D  1683               	bsf	3,5	;RP0=1, select bank1
  6031  031E  1303               	bcf	3,6	;RP1=0, select bank1
  6032  031F  00A3               	movwf	_fitemp^(0+128)
  6033  0320  1283               	bcf	3,5	;RP0=0, select bank0
  6034  0321  1303               	bcf	3,6	;RP1=0, select bank0
  6035  0322  0841               	movf	?_trimf+1,w
  6036  0323  1683               	bsf	3,5	;RP0=1, select bank1
  6037  0324  1303               	bcf	3,6	;RP1=0, select bank1
  6038  0325  00A4               	movwf	(_fitemp+1)^(0+128)
  6039  0326  1283               	bcf	3,5	;RP0=0, select bank0
  6040  0327  1303               	bcf	3,6	;RP1=0, select bank0
  6041  0328  0842               	movf	?_trimf+2,w
  6042  0329  1683               	bsf	3,5	;RP0=1, select bank1
  6043  032A  1303               	bcf	3,6	;RP1=0, select bank1
  6044  032B  00A5               	movwf	(_fitemp+2)^(0+128)
  6045                           
  6046                           ;main.c: 238: fop_rule2 = max_val(fitemp,0.1);
  6047  032C  0823               	movf	_fitemp^(0+128),w
  6048  032D  1283               	bcf	3,5	;RP0=0, select bank0
  6049  032E  1303               	bcf	3,6	;RP1=0, select bank0
  6050  032F  00BC               	movwf	max_val@a
  6051  0330  1683               	bsf	3,5	;RP0=1, select bank1
  6052  0331  1303               	bcf	3,6	;RP1=0, select bank1
  6053  0332  0824               	movf	(_fitemp+1)^(0+128),w
  6054  0333  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0334  1303               	bcf	3,6	;RP1=0, select bank0
  6056  0335  00BD               	movwf	max_val@a+1
  6057  0336  1683               	bsf	3,5	;RP0=1, select bank1
  6058  0337  1303               	bcf	3,6	;RP1=0, select bank1
  6059  0338  0825               	movf	(_fitemp+2)^(0+128),w
  6060  0339  1283               	bcf	3,5	;RP0=0, select bank0
  6061  033A  1303               	bcf	3,6	;RP1=0, select bank0
  6062  033B  00BE               	movwf	max_val@a+2
  6063  033C  30CD               	movlw	205
  6064  033D  00BF               	movwf	max_val@b
  6065  033E  30CC               	movlw	204
  6066  033F  00C0               	movwf	max_val@b+1
  6067  0340  303D               	movlw	61
  6068  0341  00C1               	movwf	max_val@b+2
  6069  0342  160A  118A  22B8  120A  118A  	fcall	_max_val
  6070  0347  1283               	bcf	3,5	;RP0=0, select bank0
  6071  0348  1303               	bcf	3,6	;RP1=0, select bank0
  6072  0349  083C               	movf	?_max_val,w
  6073  034A  1683               	bsf	3,5	;RP0=1, select bank1
  6074  034B  1303               	bcf	3,6	;RP1=0, select bank1
  6075  034C  00A9               	movwf	_fop_rule2^(0+128)
  6076  034D  1283               	bcf	3,5	;RP0=0, select bank0
  6077  034E  1303               	bcf	3,6	;RP1=0, select bank0
  6078  034F  083D               	movf	?_max_val+1,w
  6079  0350  1683               	bsf	3,5	;RP0=1, select bank1
  6080  0351  1303               	bcf	3,6	;RP1=0, select bank1
  6081  0352  00AA               	movwf	(_fop_rule2+1)^(0+128)
  6082  0353  1283               	bcf	3,5	;RP0=0, select bank0
  6083  0354  1303               	bcf	3,6	;RP1=0, select bank0
  6084  0355  083E               	movf	?_max_val+2,w
  6085  0356  1683               	bsf	3,5	;RP0=1, select bank1
  6086  0357  1303               	bcf	3,6	;RP1=0, select bank1
  6087  0358  00AB               	movwf	(_fop_rule2+2)^(0+128)
  6088                           
  6089                           ;main.c: 241: x=0;
  6090  0359  3000               	movlw	0
  6091  035A  00B5               	movwf	_x^(0+128)
  6092  035B  3000               	movlw	0
  6093  035C  00B6               	movwf	(_x+1)^(0+128)
  6094  035D  3000               	movlw	0
  6095  035E  00B7               	movwf	(_x+2)^(0+128)
  6096                           
  6097                           ;main.c: 242: y=0;
  6098  035F  3000               	movlw	0
  6099  0360  00B8               	movwf	_y^(0+128)
  6100  0361  3000               	movlw	0
  6101  0362  00B9               	movwf	(_y+1)^(0+128)
  6102  0363  3000               	movlw	0
  6103  0364  00BA               	movwf	(_y+2)^(0+128)
  6104                           
  6105                           ;main.c: 243: for (int a=0; a<=90; a++)
  6106  0365  1283               	bcf	3,5	;RP0=0, select bank0
  6107  0366  1303               	bcf	3,6	;RP1=0, select bank0
  6108  0367  01D9               	clrf	Fuzzy@a_246
  6109  0368  01DA               	clrf	Fuzzy@a_246+1
  6110  0369  085A               	movf	Fuzzy@a_246+1,w
  6111  036A  3A80               	xorlw	128
  6112  036B  00FF               	movwf	127
  6113  036C  3080               	movlw	128
  6114  036D  027F               	subwf	127,w
  6115  036E  1D03               	skipz
  6116  036F  2B72               	goto	u343_25
  6117  0370  305B               	movlw	91
  6118  0371  0259               	subwf	Fuzzy@a_246,w
  6119  0372                     u343_25:	
  6120  0372  1803               	btfsc	3,0
  6121  0373  2C4F               	goto	i1l2823
  6122  0374                     i1l2813:	
  6123                           
  6124                           ;main.c: 244: {
  6125                           ;main.c: 245: y = trimf(x, 9, 45, 81);
  6126  0374  1683               	bsf	3,5	;RP0=1, select bank1
  6127  0375  1303               	bcf	3,6	;RP1=0, select bank1
  6128  0376  0835               	movf	_x^(0+128),w
  6129  0377  1283               	bcf	3,5	;RP0=0, select bank0
  6130  0378  1303               	bcf	3,6	;RP1=0, select bank0
  6131  0379  00C0               	movwf	trimf@x
  6132  037A  1683               	bsf	3,5	;RP0=1, select bank1
  6133  037B  1303               	bcf	3,6	;RP1=0, select bank1
  6134  037C  0836               	movf	(_x+1)^(0+128),w
  6135  037D  1283               	bcf	3,5	;RP0=0, select bank0
  6136  037E  1303               	bcf	3,6	;RP1=0, select bank0
  6137  037F  00C1               	movwf	trimf@x+1
  6138  0380  1683               	bsf	3,5	;RP0=1, select bank1
  6139  0381  1303               	bcf	3,6	;RP1=0, select bank1
  6140  0382  0837               	movf	(_x+2)^(0+128),w
  6141  0383  1283               	bcf	3,5	;RP0=0, select bank0
  6142  0384  1303               	bcf	3,6	;RP1=0, select bank0
  6143  0385  00C2               	movwf	trimf@x+2
  6144  0386  3000               	movlw	0
  6145  0387  00C3               	movwf	trimf@a
  6146  0388  3010               	movlw	16
  6147  0389  00C4               	movwf	trimf@a+1
  6148  038A  3041               	movlw	65
  6149  038B  00C5               	movwf	trimf@a+2
  6150  038C  3000               	movlw	0
  6151  038D  00C6               	movwf	trimf@b
  6152  038E  3034               	movlw	52
  6153  038F  00C7               	movwf	trimf@b+1
  6154  0390  3042               	movlw	66
  6155  0391  00C8               	movwf	trimf@b+2
  6156  0392  3000               	movlw	0
  6157  0393  00C9               	movwf	trimf@c
  6158  0394  30A2               	movlw	162
  6159  0395  00CA               	movwf	trimf@c+1
  6160  0396  3042               	movlw	66
  6161  0397  00CB               	movwf	trimf@c+2
  6162  0398  120A  158A  229D  120A  118A  	fcall	_trimf
  6163  039D  1283               	bcf	3,5	;RP0=0, select bank0
  6164  039E  1303               	bcf	3,6	;RP1=0, select bank0
  6165  039F  0840               	movf	?_trimf,w
  6166  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  6167  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  6168  03A2  00B8               	movwf	_y^(0+128)
  6169  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  6170  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  6171  03A5  0841               	movf	?_trimf+1,w
  6172  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  6173  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  6174  03A8  00B9               	movwf	(_y+1)^(0+128)
  6175  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  6176  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  6177  03AB  0842               	movf	?_trimf+2,w
  6178  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  6179  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  6180  03AE  00BA               	movwf	(_y+2)^(0+128)
  6181                           
  6182                           ;main.c: 247: if (y >= fop_rule2)
  6183  03AF  0838               	movf	_y^(0+128),w
  6184  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  6185  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  6186  03B2  00B0               	movwf	___ftge@ff1
  6187  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  6188  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  6189  03B5  0839               	movf	(_y+1)^(0+128),w
  6190  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  6191  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  6192  03B8  00B1               	movwf	___ftge@ff1+1
  6193  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  6194  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  6195  03BB  083A               	movf	(_y+2)^(0+128),w
  6196  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  6197  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  6198  03BE  00B2               	movwf	___ftge@ff1+2
  6199  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  6200  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  6201  03C1  0829               	movf	_fop_rule2^(0+128),w
  6202  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  6203  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  6204  03C4  00B3               	movwf	___ftge@ff2
  6205  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  6206  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  6207  03C7  082A               	movf	(_fop_rule2+1)^(0+128),w
  6208  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  6209  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  6210  03CA  00B4               	movwf	___ftge@ff2+1
  6211  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  6212  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  6213  03CD  082B               	movf	(_fop_rule2+2)^(0+128),w
  6214  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  6215  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  6216  03D0  00B5               	movwf	___ftge@ff2+2
  6217  03D1  160A  118A  2545  120A  118A  	fcall	___ftge
  6218  03D6  1C03               	btfss	3,0
  6219  03D7  2BE8               	goto	i1l2817
  6220                           
  6221                           ;main.c: 248: {
  6222                           ;main.c: 249: mantem += fop_rule2;
  6223  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  6224  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  6225  03DA  0829               	movf	_fop_rule2^(0+128),w
  6226  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  6227  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  6228  03DD  00A3               	movwf	___ftadd@f1
  6229  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  6230  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  6231  03E0  082A               	movf	(_fop_rule2+1)^(0+128),w
  6232  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  6233  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  6234  03E3  00A4               	movwf	___ftadd@f1+1
  6235  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  6236  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  6237  03E6  082B               	movf	(_fop_rule2+2)^(0+128),w
  6238  03E7  2BF7               	goto	L4
  6239  03E8                     i1l2817:	
  6240                           ;main.c: 250: }
  6241                           
  6242                           
  6243                           ;main.c: 251: else
  6244                           ;main.c: 252: {
  6245                           ;main.c: 253: mantem += y;
  6246  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  6247  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  6248  03EA  0838               	movf	_y^(0+128),w
  6249  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  6250  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  6251  03ED  00A3               	movwf	___ftadd@f1
  6252  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  6253  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  6254  03F0  0839               	movf	(_y+1)^(0+128),w
  6255  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  6256  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  6257  03F3  00A4               	movwf	___ftadd@f1+1
  6258  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  6259  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  6260  03F6  083A               	movf	(_y+2)^(0+128),w
  6261  03F7                     L4:	
  6262  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  6263  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  6264  03F9  00A5               	movwf	___ftadd@f1+2
  6265  03FA  085D               	movf	Fuzzy@mantem,w
  6266  03FB  00A6               	movwf	___ftadd@f2
  6267  03FC  085E               	movf	Fuzzy@mantem+1,w
  6268  03FD  00A7               	movwf	___ftadd@f2+1
  6269  03FE  085F               	movf	Fuzzy@mantem+2,w
  6270  03FF  00A8               	movwf	___ftadd@f2+2
  6271  0400  120A  158A  2194  120A  118A  	fcall	___ftadd
  6272  0405  1283               	bcf	3,5	;RP0=0, select bank0
  6273  0406  1303               	bcf	3,6	;RP1=0, select bank0
  6274  0407  0823               	movf	?___ftadd,w
  6275  0408  00DD               	movwf	Fuzzy@mantem
  6276  0409  0824               	movf	?___ftadd+1,w
  6277  040A  00DE               	movwf	Fuzzy@mantem+1
  6278  040B  0825               	movf	?___ftadd+2,w
  6279  040C  00DF               	movwf	Fuzzy@mantem+2
  6280                           
  6281                           ;main.c: 254: }
  6282                           ;main.c: 256: x=x+1;
  6283  040D  3000               	movlw	0
  6284  040E  00A3               	movwf	___ftadd@f1
  6285  040F  3080               	movlw	128
  6286  0410  00A4               	movwf	___ftadd@f1+1
  6287  0411  303F               	movlw	63
  6288  0412  00A5               	movwf	___ftadd@f1+2
  6289  0413  1683               	bsf	3,5	;RP0=1, select bank1
  6290  0414  1303               	bcf	3,6	;RP1=0, select bank1
  6291  0415  0835               	movf	_x^(0+128),w
  6292  0416  1283               	bcf	3,5	;RP0=0, select bank0
  6293  0417  1303               	bcf	3,6	;RP1=0, select bank0
  6294  0418  00A6               	movwf	___ftadd@f2
  6295  0419  1683               	bsf	3,5	;RP0=1, select bank1
  6296  041A  1303               	bcf	3,6	;RP1=0, select bank1
  6297  041B  0836               	movf	(_x+1)^(0+128),w
  6298  041C  1283               	bcf	3,5	;RP0=0, select bank0
  6299  041D  1303               	bcf	3,6	;RP1=0, select bank0
  6300  041E  00A7               	movwf	___ftadd@f2+1
  6301  041F  1683               	bsf	3,5	;RP0=1, select bank1
  6302  0420  1303               	bcf	3,6	;RP1=0, select bank1
  6303  0421  0837               	movf	(_x+2)^(0+128),w
  6304  0422  1283               	bcf	3,5	;RP0=0, select bank0
  6305  0423  1303               	bcf	3,6	;RP1=0, select bank0
  6306  0424  00A8               	movwf	___ftadd@f2+2
  6307  0425  120A  158A  2194  120A  118A  	fcall	___ftadd
  6308  042A  1283               	bcf	3,5	;RP0=0, select bank0
  6309  042B  1303               	bcf	3,6	;RP1=0, select bank0
  6310  042C  0823               	movf	?___ftadd,w
  6311  042D  1683               	bsf	3,5	;RP0=1, select bank1
  6312  042E  1303               	bcf	3,6	;RP1=0, select bank1
  6313  042F  00B5               	movwf	_x^(0+128)
  6314  0430  1283               	bcf	3,5	;RP0=0, select bank0
  6315  0431  1303               	bcf	3,6	;RP1=0, select bank0
  6316  0432  0824               	movf	?___ftadd+1,w
  6317  0433  1683               	bsf	3,5	;RP0=1, select bank1
  6318  0434  1303               	bcf	3,6	;RP1=0, select bank1
  6319  0435  00B6               	movwf	(_x+1)^(0+128)
  6320  0436  1283               	bcf	3,5	;RP0=0, select bank0
  6321  0437  1303               	bcf	3,6	;RP1=0, select bank0
  6322  0438  0825               	movf	?___ftadd+2,w
  6323  0439  1683               	bsf	3,5	;RP0=1, select bank1
  6324  043A  1303               	bcf	3,6	;RP1=0, select bank1
  6325  043B  00B7               	movwf	(_x+2)^(0+128)
  6326  043C  3001               	movlw	1
  6327  043D  1283               	bcf	3,5	;RP0=0, select bank0
  6328  043E  1303               	bcf	3,6	;RP1=0, select bank0
  6329  043F  07D9               	addwf	Fuzzy@a_246,f
  6330  0440  1803               	skipnc
  6331  0441  0ADA               	incf	Fuzzy@a_246+1,f
  6332  0442  3000               	movlw	0
  6333  0443  07DA               	addwf	Fuzzy@a_246+1,f
  6334  0444  085A               	movf	Fuzzy@a_246+1,w
  6335  0445  3A80               	xorlw	128
  6336  0446  00FF               	movwf	127
  6337  0447  3080               	movlw	128
  6338  0448  027F               	subwf	127,w
  6339  0449  1D03               	skipz
  6340  044A  2C4D               	goto	u345_25
  6341  044B  305B               	movlw	91
  6342  044C  0259               	subwf	Fuzzy@a_246,w
  6343  044D                     u345_25:	
  6344  044D  1C03               	skipc
  6345  044E  2B74               	goto	i1l2813
  6346  044F                     i1l2823:	
  6347                           
  6348                           ;main.c: 257: }
  6349                           ;main.c: 259: }
  6350                           ;main.c: 265: if (deltaRpm > 70 )
  6351  044F  3000               	movlw	0
  6352  0450  1283               	bcf	3,5	;RP0=0, select bank0
  6353  0451  1303               	bcf	3,6	;RP1=0, select bank0
  6354  0452  00B0               	movwf	___ftge@ff1
  6355  0453  308C               	movlw	140
  6356  0454  00B1               	movwf	___ftge@ff1+1
  6357  0455  3042               	movlw	66
  6358  0456  00B2               	movwf	___ftge@ff1+2
  6359  0457  0866               	movf	Fuzzy@deltaRpm,w
  6360  0458  00B3               	movwf	___ftge@ff2
  6361  0459  0867               	movf	Fuzzy@deltaRpm+1,w
  6362  045A  00B4               	movwf	___ftge@ff2+1
  6363  045B  0868               	movf	Fuzzy@deltaRpm+2,w
  6364  045C  00B5               	movwf	___ftge@ff2+2
  6365  045D  160A  118A  2545  120A  118A  	fcall	___ftge
  6366  0462  1803               	btfsc	3,0
  6367  0463  2DC4               	goto	i1l2847
  6368                           
  6369                           ;main.c: 266: {
  6370                           ;main.c: 269: fitemp = trapmf(deltaRpm, 62, 79, 90, 90);
  6371  0464  1283               	bcf	3,5	;RP0=0, select bank0
  6372  0465  1303               	bcf	3,6	;RP1=0, select bank0
  6373  0466  0866               	movf	Fuzzy@deltaRpm,w
  6374  0467  00C0               	movwf	trapmf@x
  6375  0468  0867               	movf	Fuzzy@deltaRpm+1,w
  6376  0469  00C1               	movwf	trapmf@x+1
  6377  046A  0868               	movf	Fuzzy@deltaRpm+2,w
  6378  046B  00C2               	movwf	trapmf@x+2
  6379  046C  3000               	movlw	0
  6380  046D  00C3               	movwf	trapmf@a
  6381  046E  3078               	movlw	120
  6382  046F  00C4               	movwf	trapmf@a+1
  6383  0470  3042               	movlw	66
  6384  0471  00C5               	movwf	trapmf@a+2
  6385  0472  3000               	movlw	0
  6386  0473  00C6               	movwf	trapmf@b
  6387  0474  309E               	movlw	158
  6388  0475  00C7               	movwf	trapmf@b+1
  6389  0476  3042               	movlw	66
  6390  0477  00C8               	movwf	trapmf@b+2
  6391  0478  3000               	movlw	0
  6392  0479  00C9               	movwf	trapmf@c
  6393  047A  30B4               	movlw	180
  6394  047B  00CA               	movwf	trapmf@c+1
  6395  047C  3042               	movlw	66
  6396  047D  00CB               	movwf	trapmf@c+2
  6397  047E  3000               	movlw	0
  6398  047F  00CC               	movwf	trapmf@d
  6399  0480  30B4               	movlw	180
  6400  0481  00CD               	movwf	trapmf@d+1
  6401  0482  3042               	movlw	66
  6402  0483  00CE               	movwf	trapmf@d+2
  6403  0484  120A  158A  24F3  120A  118A  	fcall	_trapmf
  6404  0489  1283               	bcf	3,5	;RP0=0, select bank0
  6405  048A  1303               	bcf	3,6	;RP1=0, select bank0
  6406  048B  0840               	movf	?_trapmf,w
  6407  048C  1683               	bsf	3,5	;RP0=1, select bank1
  6408  048D  1303               	bcf	3,6	;RP1=0, select bank1
  6409  048E  00A3               	movwf	_fitemp^(0+128)
  6410  048F  1283               	bcf	3,5	;RP0=0, select bank0
  6411  0490  1303               	bcf	3,6	;RP1=0, select bank0
  6412  0491  0841               	movf	?_trapmf+1,w
  6413  0492  1683               	bsf	3,5	;RP0=1, select bank1
  6414  0493  1303               	bcf	3,6	;RP1=0, select bank1
  6415  0494  00A4               	movwf	(_fitemp+1)^(0+128)
  6416  0495  1283               	bcf	3,5	;RP0=0, select bank0
  6417  0496  1303               	bcf	3,6	;RP1=0, select bank0
  6418  0497  0842               	movf	?_trapmf+2,w
  6419  0498  1683               	bsf	3,5	;RP0=1, select bank1
  6420  0499  1303               	bcf	3,6	;RP1=0, select bank1
  6421  049A  00A5               	movwf	(_fitemp+2)^(0+128)
  6422                           
  6423                           ;main.c: 273: fop_rule3 = max_val(fitemp,0.1);
  6424  049B  0823               	movf	_fitemp^(0+128),w
  6425  049C  1283               	bcf	3,5	;RP0=0, select bank0
  6426  049D  1303               	bcf	3,6	;RP1=0, select bank0
  6427  049E  00BC               	movwf	max_val@a
  6428  049F  1683               	bsf	3,5	;RP0=1, select bank1
  6429  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  6430  04A1  0824               	movf	(_fitemp+1)^(0+128),w
  6431  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  6432  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  6433  04A4  00BD               	movwf	max_val@a+1
  6434  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  6435  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  6436  04A7  0825               	movf	(_fitemp+2)^(0+128),w
  6437  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  6438  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  6439  04AA  00BE               	movwf	max_val@a+2
  6440  04AB  30CD               	movlw	205
  6441  04AC  00BF               	movwf	max_val@b
  6442  04AD  30CC               	movlw	204
  6443  04AE  00C0               	movwf	max_val@b+1
  6444  04AF  303D               	movlw	61
  6445  04B0  00C1               	movwf	max_val@b+2
  6446  04B1  160A  118A  22B8  120A  118A  	fcall	_max_val
  6447  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  6448  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  6449  04B8  083C               	movf	?_max_val,w
  6450  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  6451  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  6452  04BB  00AC               	movwf	_fop_rule3^(0+128)
  6453  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  6454  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  6455  04BE  083D               	movf	?_max_val+1,w
  6456  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  6457  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  6458  04C1  00AD               	movwf	(_fop_rule3+1)^(0+128)
  6459  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  6460  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  6461  04C4  083E               	movf	?_max_val+2,w
  6462  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  6463  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  6464  04C7  00AE               	movwf	(_fop_rule3+2)^(0+128)
  6465                           
  6466                           ;main.c: 276: x=0;
  6467  04C8  3000               	movlw	0
  6468  04C9  00B5               	movwf	_x^(0+128)
  6469  04CA  3000               	movlw	0
  6470  04CB  00B6               	movwf	(_x+1)^(0+128)
  6471  04CC  3000               	movlw	0
  6472  04CD  00B7               	movwf	(_x+2)^(0+128)
  6473                           
  6474                           ;main.c: 277: y=0;
  6475  04CE  3000               	movlw	0
  6476  04CF  00B8               	movwf	_y^(0+128)
  6477  04D0  3000               	movlw	0
  6478  04D1  00B9               	movwf	(_y+1)^(0+128)
  6479  04D2  3000               	movlw	0
  6480  04D3  00BA               	movwf	(_y+2)^(0+128)
  6481                           
  6482                           ;main.c: 278: for (int a=0; a<=90; a++)
  6483  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  6484  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  6485  04D6  01DB               	clrf	Fuzzy@a_247
  6486  04D7  01DC               	clrf	Fuzzy@a_247+1
  6487  04D8  085C               	movf	Fuzzy@a_247+1,w
  6488  04D9  3A80               	xorlw	128
  6489  04DA  00FF               	movwf	127
  6490  04DB  3080               	movlw	128
  6491  04DC  027F               	subwf	127,w
  6492  04DD  1D03               	skipz
  6493  04DE  2CE1               	goto	u347_25
  6494  04DF  305B               	movlw	91
  6495  04E0  025B               	subwf	Fuzzy@a_247,w
  6496  04E1                     u347_25:	
  6497  04E1  1803               	btfsc	3,0
  6498  04E2  2DC4               	goto	i1l2847
  6499  04E3                     i1l2837:	
  6500                           
  6501                           ;main.c: 279: {
  6502                           ;main.c: 280: y = trapmf(x, 62, 79, 90, 90);
  6503  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  6504  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  6505  04E5  0835               	movf	_x^(0+128),w
  6506  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  6507  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  6508  04E8  00C0               	movwf	trapmf@x
  6509  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  6510  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  6511  04EB  0836               	movf	(_x+1)^(0+128),w
  6512  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  6513  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  6514  04EE  00C1               	movwf	trapmf@x+1
  6515  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  6516  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  6517  04F1  0837               	movf	(_x+2)^(0+128),w
  6518  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  6519  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  6520  04F4  00C2               	movwf	trapmf@x+2
  6521  04F5  3000               	movlw	0
  6522  04F6  00C3               	movwf	trapmf@a
  6523  04F7  3078               	movlw	120
  6524  04F8  00C4               	movwf	trapmf@a+1
  6525  04F9  3042               	movlw	66
  6526  04FA  00C5               	movwf	trapmf@a+2
  6527  04FB  3000               	movlw	0
  6528  04FC  00C6               	movwf	trapmf@b
  6529  04FD  309E               	movlw	158
  6530  04FE  00C7               	movwf	trapmf@b+1
  6531  04FF  3042               	movlw	66
  6532  0500  00C8               	movwf	trapmf@b+2
  6533  0501  3000               	movlw	0
  6534  0502  00C9               	movwf	trapmf@c
  6535  0503  30B4               	movlw	180
  6536  0504  00CA               	movwf	trapmf@c+1
  6537  0505  3042               	movlw	66
  6538  0506  00CB               	movwf	trapmf@c+2
  6539  0507  3000               	movlw	0
  6540  0508  00CC               	movwf	trapmf@d
  6541  0509  30B4               	movlw	180
  6542  050A  00CD               	movwf	trapmf@d+1
  6543  050B  3042               	movlw	66
  6544  050C  00CE               	movwf	trapmf@d+2
  6545  050D  120A  158A  24F3  120A  118A  	fcall	_trapmf
  6546  0512  1283               	bcf	3,5	;RP0=0, select bank0
  6547  0513  1303               	bcf	3,6	;RP1=0, select bank0
  6548  0514  0840               	movf	?_trapmf,w
  6549  0515  1683               	bsf	3,5	;RP0=1, select bank1
  6550  0516  1303               	bcf	3,6	;RP1=0, select bank1
  6551  0517  00B8               	movwf	_y^(0+128)
  6552  0518  1283               	bcf	3,5	;RP0=0, select bank0
  6553  0519  1303               	bcf	3,6	;RP1=0, select bank0
  6554  051A  0841               	movf	?_trapmf+1,w
  6555  051B  1683               	bsf	3,5	;RP0=1, select bank1
  6556  051C  1303               	bcf	3,6	;RP1=0, select bank1
  6557  051D  00B9               	movwf	(_y+1)^(0+128)
  6558  051E  1283               	bcf	3,5	;RP0=0, select bank0
  6559  051F  1303               	bcf	3,6	;RP1=0, select bank0
  6560  0520  0842               	movf	?_trapmf+2,w
  6561  0521  1683               	bsf	3,5	;RP0=1, select bank1
  6562  0522  1303               	bcf	3,6	;RP1=0, select bank1
  6563  0523  00BA               	movwf	(_y+2)^(0+128)
  6564                           
  6565                           ;main.c: 282: if (y >= fop_rule3)
  6566  0524  0838               	movf	_y^(0+128),w
  6567  0525  1283               	bcf	3,5	;RP0=0, select bank0
  6568  0526  1303               	bcf	3,6	;RP1=0, select bank0
  6569  0527  00B0               	movwf	___ftge@ff1
  6570  0528  1683               	bsf	3,5	;RP0=1, select bank1
  6571  0529  1303               	bcf	3,6	;RP1=0, select bank1
  6572  052A  0839               	movf	(_y+1)^(0+128),w
  6573  052B  1283               	bcf	3,5	;RP0=0, select bank0
  6574  052C  1303               	bcf	3,6	;RP1=0, select bank0
  6575  052D  00B1               	movwf	___ftge@ff1+1
  6576  052E  1683               	bsf	3,5	;RP0=1, select bank1
  6577  052F  1303               	bcf	3,6	;RP1=0, select bank1
  6578  0530  083A               	movf	(_y+2)^(0+128),w
  6579  0531  1283               	bcf	3,5	;RP0=0, select bank0
  6580  0532  1303               	bcf	3,6	;RP1=0, select bank0
  6581  0533  00B2               	movwf	___ftge@ff1+2
  6582  0534  1683               	bsf	3,5	;RP0=1, select bank1
  6583  0535  1303               	bcf	3,6	;RP1=0, select bank1
  6584  0536  082C               	movf	_fop_rule3^(0+128),w
  6585  0537  1283               	bcf	3,5	;RP0=0, select bank0
  6586  0538  1303               	bcf	3,6	;RP1=0, select bank0
  6587  0539  00B3               	movwf	___ftge@ff2
  6588  053A  1683               	bsf	3,5	;RP0=1, select bank1
  6589  053B  1303               	bcf	3,6	;RP1=0, select bank1
  6590  053C  082D               	movf	(_fop_rule3+1)^(0+128),w
  6591  053D  1283               	bcf	3,5	;RP0=0, select bank0
  6592  053E  1303               	bcf	3,6	;RP1=0, select bank0
  6593  053F  00B4               	movwf	___ftge@ff2+1
  6594  0540  1683               	bsf	3,5	;RP0=1, select bank1
  6595  0541  1303               	bcf	3,6	;RP1=0, select bank1
  6596  0542  082E               	movf	(_fop_rule3+2)^(0+128),w
  6597  0543  1283               	bcf	3,5	;RP0=0, select bank0
  6598  0544  1303               	bcf	3,6	;RP1=0, select bank0
  6599  0545  00B5               	movwf	___ftge@ff2+2
  6600  0546  160A  118A  2545  120A  118A  	fcall	___ftge
  6601  054B  1C03               	btfss	3,0
  6602  054C  2D5D               	goto	i1l2841
  6603                           
  6604                           ;main.c: 283: {
  6605                           ;main.c: 284: aumenta += fop_rule3;
  6606  054D  1683               	bsf	3,5	;RP0=1, select bank1
  6607  054E  1303               	bcf	3,6	;RP1=0, select bank1
  6608  054F  082C               	movf	_fop_rule3^(0+128),w
  6609  0550  1283               	bcf	3,5	;RP0=0, select bank0
  6610  0551  1303               	bcf	3,6	;RP1=0, select bank0
  6611  0552  00A3               	movwf	___ftadd@f1
  6612  0553  1683               	bsf	3,5	;RP0=1, select bank1
  6613  0554  1303               	bcf	3,6	;RP1=0, select bank1
  6614  0555  082D               	movf	(_fop_rule3+1)^(0+128),w
  6615  0556  1283               	bcf	3,5	;RP0=0, select bank0
  6616  0557  1303               	bcf	3,6	;RP1=0, select bank0
  6617  0558  00A4               	movwf	___ftadd@f1+1
  6618  0559  1683               	bsf	3,5	;RP0=1, select bank1
  6619  055A  1303               	bcf	3,6	;RP1=0, select bank1
  6620  055B  082E               	movf	(_fop_rule3+2)^(0+128),w
  6621  055C  2D6C               	goto	L5
  6622  055D                     i1l2841:	
  6623                           ;main.c: 285: }
  6624                           
  6625                           
  6626                           ;main.c: 286: else
  6627                           ;main.c: 287: {
  6628                           ;main.c: 288: aumenta += y;
  6629  055D  1683               	bsf	3,5	;RP0=1, select bank1
  6630  055E  1303               	bcf	3,6	;RP1=0, select bank1
  6631  055F  0838               	movf	_y^(0+128),w
  6632  0560  1283               	bcf	3,5	;RP0=0, select bank0
  6633  0561  1303               	bcf	3,6	;RP1=0, select bank0
  6634  0562  00A3               	movwf	___ftadd@f1
  6635  0563  1683               	bsf	3,5	;RP0=1, select bank1
  6636  0564  1303               	bcf	3,6	;RP1=0, select bank1
  6637  0565  0839               	movf	(_y+1)^(0+128),w
  6638  0566  1283               	bcf	3,5	;RP0=0, select bank0
  6639  0567  1303               	bcf	3,6	;RP1=0, select bank0
  6640  0568  00A4               	movwf	___ftadd@f1+1
  6641  0569  1683               	bsf	3,5	;RP0=1, select bank1
  6642  056A  1303               	bcf	3,6	;RP1=0, select bank1
  6643  056B  083A               	movf	(_y+2)^(0+128),w
  6644  056C                     L5:	
  6645  056C  1283               	bcf	3,5	;RP0=0, select bank0
  6646  056D  1303               	bcf	3,6	;RP1=0, select bank0
  6647  056E  00A5               	movwf	___ftadd@f1+2
  6648  056F  0863               	movf	Fuzzy@aumenta,w
  6649  0570  00A6               	movwf	___ftadd@f2
  6650  0571  0864               	movf	Fuzzy@aumenta+1,w
  6651  0572  00A7               	movwf	___ftadd@f2+1
  6652  0573  0865               	movf	Fuzzy@aumenta+2,w
  6653  0574  00A8               	movwf	___ftadd@f2+2
  6654  0575  120A  158A  2194  120A  118A  	fcall	___ftadd
  6655  057A  1283               	bcf	3,5	;RP0=0, select bank0
  6656  057B  1303               	bcf	3,6	;RP1=0, select bank0
  6657  057C  0823               	movf	?___ftadd,w
  6658  057D  00E3               	movwf	Fuzzy@aumenta
  6659  057E  0824               	movf	?___ftadd+1,w
  6660  057F  00E4               	movwf	Fuzzy@aumenta+1
  6661  0580  0825               	movf	?___ftadd+2,w
  6662  0581  00E5               	movwf	Fuzzy@aumenta+2
  6663                           
  6664                           ;main.c: 289: }
  6665                           ;main.c: 291: x=x+1;
  6666  0582  3000               	movlw	0
  6667  0583  00A3               	movwf	___ftadd@f1
  6668  0584  3080               	movlw	128
  6669  0585  00A4               	movwf	___ftadd@f1+1
  6670  0586  303F               	movlw	63
  6671  0587  00A5               	movwf	___ftadd@f1+2
  6672  0588  1683               	bsf	3,5	;RP0=1, select bank1
  6673  0589  1303               	bcf	3,6	;RP1=0, select bank1
  6674  058A  0835               	movf	_x^(0+128),w
  6675  058B  1283               	bcf	3,5	;RP0=0, select bank0
  6676  058C  1303               	bcf	3,6	;RP1=0, select bank0
  6677  058D  00A6               	movwf	___ftadd@f2
  6678  058E  1683               	bsf	3,5	;RP0=1, select bank1
  6679  058F  1303               	bcf	3,6	;RP1=0, select bank1
  6680  0590  0836               	movf	(_x+1)^(0+128),w
  6681  0591  1283               	bcf	3,5	;RP0=0, select bank0
  6682  0592  1303               	bcf	3,6	;RP1=0, select bank0
  6683  0593  00A7               	movwf	___ftadd@f2+1
  6684  0594  1683               	bsf	3,5	;RP0=1, select bank1
  6685  0595  1303               	bcf	3,6	;RP1=0, select bank1
  6686  0596  0837               	movf	(_x+2)^(0+128),w
  6687  0597  1283               	bcf	3,5	;RP0=0, select bank0
  6688  0598  1303               	bcf	3,6	;RP1=0, select bank0
  6689  0599  00A8               	movwf	___ftadd@f2+2
  6690  059A  120A  158A  2194  120A  118A  	fcall	___ftadd
  6691  059F  1283               	bcf	3,5	;RP0=0, select bank0
  6692  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  6693  05A1  0823               	movf	?___ftadd,w
  6694  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  6695  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  6696  05A4  00B5               	movwf	_x^(0+128)
  6697  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6698  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  6699  05A7  0824               	movf	?___ftadd+1,w
  6700  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  6701  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  6702  05AA  00B6               	movwf	(_x+1)^(0+128)
  6703  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  6704  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  6705  05AD  0825               	movf	?___ftadd+2,w
  6706  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  6707  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  6708  05B0  00B7               	movwf	(_x+2)^(0+128)
  6709  05B1  3001               	movlw	1
  6710  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  6711  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  6712  05B4  07DB               	addwf	Fuzzy@a_247,f
  6713  05B5  1803               	skipnc
  6714  05B6  0ADC               	incf	Fuzzy@a_247+1,f
  6715  05B7  3000               	movlw	0
  6716  05B8  07DC               	addwf	Fuzzy@a_247+1,f
  6717  05B9  085C               	movf	Fuzzy@a_247+1,w
  6718  05BA  3A80               	xorlw	128
  6719  05BB  00FF               	movwf	127
  6720  05BC  3080               	movlw	128
  6721  05BD  027F               	subwf	127,w
  6722  05BE  1D03               	skipz
  6723  05BF  2DC2               	goto	u349_25
  6724  05C0  305B               	movlw	91
  6725  05C1  025B               	subwf	Fuzzy@a_247,w
  6726  05C2                     u349_25:	
  6727  05C2  1C03               	skipc
  6728  05C3  2CE3               	goto	i1l2837
  6729  05C4                     i1l2847:	
  6730                           
  6731                           ;main.c: 292: }
  6732                           ;main.c: 294: }
  6733                           ;main.c: 297: if (deltaRpm < 25)
  6734  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  6735  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  6736  05C6  0866               	movf	Fuzzy@deltaRpm,w
  6737  05C7  00B0               	movwf	___ftge@ff1
  6738  05C8  0867               	movf	Fuzzy@deltaRpm+1,w
  6739  05C9  00B1               	movwf	___ftge@ff1+1
  6740  05CA  0868               	movf	Fuzzy@deltaRpm+2,w
  6741  05CB  00B2               	movwf	___ftge@ff1+2
  6742  05CC  3000               	movlw	0
  6743  05CD  00B3               	movwf	___ftge@ff2
  6744  05CE  30C8               	movlw	200
  6745  05CF  00B4               	movwf	___ftge@ff2+1
  6746  05D0  3041               	movlw	65
  6747  05D1  00B5               	movwf	___ftge@ff2+2
  6748  05D2  160A  118A  2545  120A  118A  	fcall	___ftge
  6749  05D7  1803               	btfsc	3,0
  6750  05D8  2DE1               	goto	i1l2851
  6751                           
  6752                           ;main.c: 298: {
  6753                           ;main.c: 299: tip = reduz;
  6754  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  6755  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  6756  05DB  0860               	movf	Fuzzy@reduz,w
  6757  05DC  00D4               	movwf	Fuzzy@tip
  6758  05DD  0861               	movf	Fuzzy@reduz+1,w
  6759  05DE  00D5               	movwf	Fuzzy@tip+1
  6760  05DF  0862               	movf	Fuzzy@reduz+2,w
  6761  05E0  2E1A               	goto	L7
  6762  05E1                     i1l2851:	
  6763                           ;main.c: 300: }else
  6764                           
  6765                           
  6766                           ;main.c: 301: if (deltaRpm >= 25 && deltaRpm < 75)
  6767  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  6768  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  6769  05E3  0866               	movf	Fuzzy@deltaRpm,w
  6770  05E4  00B0               	movwf	___ftge@ff1
  6771  05E5  0867               	movf	Fuzzy@deltaRpm+1,w
  6772  05E6  00B1               	movwf	___ftge@ff1+1
  6773  05E7  0868               	movf	Fuzzy@deltaRpm+2,w
  6774  05E8  00B2               	movwf	___ftge@ff1+2
  6775  05E9  3000               	movlw	0
  6776  05EA  00B3               	movwf	___ftge@ff2
  6777  05EB  30C8               	movlw	200
  6778  05EC  00B4               	movwf	___ftge@ff2+1
  6779  05ED  3041               	movlw	65
  6780  05EE  00B5               	movwf	___ftge@ff2+2
  6781  05EF  160A  118A  2545  120A  118A  	fcall	___ftge
  6782  05F4  1C03               	btfss	3,0
  6783  05F5  2E13               	goto	i1l2857
  6784  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  6785  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  6786  05F8  0866               	movf	Fuzzy@deltaRpm,w
  6787  05F9  00B0               	movwf	___ftge@ff1
  6788  05FA  0867               	movf	Fuzzy@deltaRpm+1,w
  6789  05FB  00B1               	movwf	___ftge@ff1+1
  6790  05FC  0868               	movf	Fuzzy@deltaRpm+2,w
  6791  05FD  00B2               	movwf	___ftge@ff1+2
  6792  05FE  3000               	movlw	0
  6793  05FF  00B3               	movwf	___ftge@ff2
  6794  0600  3096               	movlw	150
  6795  0601  00B4               	movwf	___ftge@ff2+1
  6796  0602  3042               	movlw	66
  6797  0603  00B5               	movwf	___ftge@ff2+2
  6798  0604  160A  118A  2545  120A  118A  	fcall	___ftge
  6799  0609  1803               	btfsc	3,0
  6800  060A  2E13               	goto	i1l2857
  6801                           
  6802                           ;main.c: 302: {
  6803                           ;main.c: 303: tip = mantem;
  6804  060B  1283               	bcf	3,5	;RP0=0, select bank0
  6805  060C  1303               	bcf	3,6	;RP1=0, select bank0
  6806  060D  085D               	movf	Fuzzy@mantem,w
  6807  060E  00D4               	movwf	Fuzzy@tip
  6808  060F  085E               	movf	Fuzzy@mantem+1,w
  6809  0610  00D5               	movwf	Fuzzy@tip+1
  6810  0611  085F               	movf	Fuzzy@mantem+2,w
  6811  0612  2E1A               	goto	L7
  6812  0613                     i1l2857:	
  6813                           ;main.c: 304: }else
  6814                           
  6815                           
  6816                           ;main.c: 305: {
  6817                           ;main.c: 306: tip = aumenta;
  6818  0613  1283               	bcf	3,5	;RP0=0, select bank0
  6819  0614  1303               	bcf	3,6	;RP1=0, select bank0
  6820  0615  0863               	movf	Fuzzy@aumenta,w
  6821  0616  00D4               	movwf	Fuzzy@tip
  6822  0617  0864               	movf	Fuzzy@aumenta+1,w
  6823  0618  00D5               	movwf	Fuzzy@tip+1
  6824  0619  0865               	movf	Fuzzy@aumenta+2,w
  6825  061A                     L7:	
  6826  061A  00D6               	movwf	Fuzzy@tip+2
  6827                           
  6828                           ;main.c: 307: }
  6829                           ;main.c: 310: total_area = 90;
  6830  061B  3000               	movlw	0
  6831  061C  1683               	bsf	3,5	;RP0=1, select bank1
  6832  061D  1303               	bcf	3,6	;RP1=0, select bank1
  6833  061E  00B2               	movwf	_total_area^(0+128)
  6834  061F  30B4               	movlw	180
  6835  0620  00B3               	movwf	(_total_area+1)^(0+128)
  6836  0621  3042               	movlw	66
  6837  0622  00B4               	movwf	(_total_area+2)^(0+128)
  6838                           
  6839                           ;main.c: 311: sum = 0;
  6840  0623  3000               	movlw	0
  6841  0624  00AF               	movwf	_sum^(0+128)
  6842  0625  3000               	movlw	0
  6843  0626  00B0               	movwf	(_sum+1)^(0+128)
  6844  0627  3000               	movlw	0
  6845  0628  00B1               	movwf	(_sum+2)^(0+128)
  6846                           
  6847                           ;main.c: 312: sum = sum + tip;
  6848  0629  1283               	bcf	3,5	;RP0=0, select bank0
  6849  062A  1303               	bcf	3,6	;RP1=0, select bank0
  6850  062B  0854               	movf	Fuzzy@tip,w
  6851  062C  00A3               	movwf	___ftadd@f1
  6852  062D  0855               	movf	Fuzzy@tip+1,w
  6853  062E  00A4               	movwf	___ftadd@f1+1
  6854  062F  0856               	movf	Fuzzy@tip+2,w
  6855  0630  00A5               	movwf	___ftadd@f1+2
  6856  0631  1683               	bsf	3,5	;RP0=1, select bank1
  6857  0632  1303               	bcf	3,6	;RP1=0, select bank1
  6858  0633  082F               	movf	_sum^(0+128),w
  6859  0634  1283               	bcf	3,5	;RP0=0, select bank0
  6860  0635  1303               	bcf	3,6	;RP1=0, select bank0
  6861  0636  00A6               	movwf	___ftadd@f2
  6862  0637  1683               	bsf	3,5	;RP0=1, select bank1
  6863  0638  1303               	bcf	3,6	;RP1=0, select bank1
  6864  0639  0830               	movf	(_sum+1)^(0+128),w
  6865  063A  1283               	bcf	3,5	;RP0=0, select bank0
  6866  063B  1303               	bcf	3,6	;RP1=0, select bank0
  6867  063C  00A7               	movwf	___ftadd@f2+1
  6868  063D  1683               	bsf	3,5	;RP0=1, select bank1
  6869  063E  1303               	bcf	3,6	;RP1=0, select bank1
  6870  063F  0831               	movf	(_sum+2)^(0+128),w
  6871  0640  1283               	bcf	3,5	;RP0=0, select bank0
  6872  0641  1303               	bcf	3,6	;RP1=0, select bank0
  6873  0642  00A8               	movwf	___ftadd@f2+2
  6874  0643  120A  158A  2194  120A  118A  	fcall	___ftadd
  6875  0648  1283               	bcf	3,5	;RP0=0, select bank0
  6876  0649  1303               	bcf	3,6	;RP1=0, select bank0
  6877  064A  0823               	movf	?___ftadd,w
  6878  064B  1683               	bsf	3,5	;RP0=1, select bank1
  6879  064C  1303               	bcf	3,6	;RP1=0, select bank1
  6880  064D  00AF               	movwf	_sum^(0+128)
  6881  064E  1283               	bcf	3,5	;RP0=0, select bank0
  6882  064F  1303               	bcf	3,6	;RP1=0, select bank0
  6883  0650  0824               	movf	?___ftadd+1,w
  6884  0651  1683               	bsf	3,5	;RP0=1, select bank1
  6885  0652  1303               	bcf	3,6	;RP1=0, select bank1
  6886  0653  00B0               	movwf	(_sum+1)^(0+128)
  6887  0654  1283               	bcf	3,5	;RP0=0, select bank0
  6888  0655  1303               	bcf	3,6	;RP1=0, select bank0
  6889  0656  0825               	movf	?___ftadd+2,w
  6890  0657  1683               	bsf	3,5	;RP0=1, select bank1
  6891  0658  1303               	bcf	3,6	;RP1=0, select bank1
  6892  0659  00B1               	movwf	(_sum+2)^(0+128)
  6893                           
  6894                           ;main.c: 315: ativa_fan = sum/total_area;
  6895  065A  0832               	movf	_total_area^(0+128),w
  6896  065B  1283               	bcf	3,5	;RP0=0, select bank0
  6897  065C  1303               	bcf	3,6	;RP1=0, select bank0
  6898  065D  00B0               	movwf	___ftdiv@f2
  6899  065E  1683               	bsf	3,5	;RP0=1, select bank1
  6900  065F  1303               	bcf	3,6	;RP1=0, select bank1
  6901  0660  0833               	movf	(_total_area+1)^(0+128),w
  6902  0661  1283               	bcf	3,5	;RP0=0, select bank0
  6903  0662  1303               	bcf	3,6	;RP1=0, select bank0
  6904  0663  00B1               	movwf	___ftdiv@f2+1
  6905  0664  1683               	bsf	3,5	;RP0=1, select bank1
  6906  0665  1303               	bcf	3,6	;RP1=0, select bank1
  6907  0666  0834               	movf	(_total_area+2)^(0+128),w
  6908  0667  1283               	bcf	3,5	;RP0=0, select bank0
  6909  0668  1303               	bcf	3,6	;RP1=0, select bank0
  6910  0669  00B2               	movwf	___ftdiv@f2+2
  6911  066A  1683               	bsf	3,5	;RP0=1, select bank1
  6912  066B  1303               	bcf	3,6	;RP1=0, select bank1
  6913  066C  082F               	movf	_sum^(0+128),w
  6914  066D  1283               	bcf	3,5	;RP0=0, select bank0
  6915  066E  1303               	bcf	3,6	;RP1=0, select bank0
  6916  066F  00B3               	movwf	___ftdiv@f1
  6917  0670  1683               	bsf	3,5	;RP0=1, select bank1
  6918  0671  1303               	bcf	3,6	;RP1=0, select bank1
  6919  0672  0830               	movf	(_sum+1)^(0+128),w
  6920  0673  1283               	bcf	3,5	;RP0=0, select bank0
  6921  0674  1303               	bcf	3,6	;RP1=0, select bank0
  6922  0675  00B4               	movwf	___ftdiv@f1+1
  6923  0676  1683               	bsf	3,5	;RP0=1, select bank1
  6924  0677  1303               	bcf	3,6	;RP1=0, select bank1
  6925  0678  0831               	movf	(_sum+2)^(0+128),w
  6926  0679  1283               	bcf	3,5	;RP0=0, select bank0
  6927  067A  1303               	bcf	3,6	;RP1=0, select bank0
  6928  067B  00B5               	movwf	___ftdiv@f1+2
  6929  067C  160A  118A  2677  120A  118A  	fcall	___ftdiv
  6930  0681  1283               	bcf	3,5	;RP0=0, select bank0
  6931  0682  1303               	bcf	3,6	;RP1=0, select bank0
  6932  0683  0830               	movf	?___ftdiv,w
  6933  0684  1683               	bsf	3,5	;RP0=1, select bank1
  6934  0685  1303               	bcf	3,6	;RP1=0, select bank1
  6935  0686  00A0               	movwf	_ativa_fan^(0+128)
  6936  0687  1283               	bcf	3,5	;RP0=0, select bank0
  6937  0688  1303               	bcf	3,6	;RP1=0, select bank0
  6938  0689  0831               	movf	?___ftdiv+1,w
  6939  068A  1683               	bsf	3,5	;RP0=1, select bank1
  6940  068B  1303               	bcf	3,6	;RP1=0, select bank1
  6941  068C  00A1               	movwf	(_ativa_fan+1)^(0+128)
  6942  068D  1283               	bcf	3,5	;RP0=0, select bank0
  6943  068E  1303               	bcf	3,6	;RP1=0, select bank0
  6944  068F  0832               	movf	?___ftdiv+2,w
  6945  0690  1683               	bsf	3,5	;RP0=1, select bank1
  6946  0691  1303               	bcf	3,6	;RP1=0, select bank1
  6947  0692  00A2               	movwf	(_ativa_fan+2)^(0+128)
  6948                           
  6949                           ;main.c: 318: ativa_fan = ativa_fan*100;
  6950  0693  3000               	movlw	0
  6951  0694  00F8               	movwf	___ftmul@f1
  6952  0695  30C8               	movlw	200
  6953  0696  00F9               	movwf	___ftmul@f1+1
  6954  0697  3042               	movlw	66
  6955  0698  00FA               	movwf	___ftmul@f1+2
  6956  0699  0820               	movf	_ativa_fan^(0+128),w
  6957  069A  00FB               	movwf	___ftmul@f2
  6958  069B  0821               	movf	(_ativa_fan+1)^(0+128),w
  6959  069C  00FC               	movwf	___ftmul@f2+1
  6960  069D  0822               	movf	(_ativa_fan+2)^(0+128),w
  6961  069E  00FD               	movwf	___ftmul@f2+2
  6962  069F  160A  118A  272F  120A  118A  	fcall	___ftmul
  6963  06A4  0878               	movf	?___ftmul,w
  6964  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  6965  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  6966  06A7  00A0               	movwf	_ativa_fan^(0+128)
  6967  06A8  0879               	movf	?___ftmul+1,w
  6968  06A9  00A1               	movwf	(_ativa_fan+1)^(0+128)
  6969  06AA  087A               	movf	?___ftmul+2,w
  6970  06AB  00A2               	movwf	(_ativa_fan+2)^(0+128)
  6971                           
  6972                           ;main.c: 322: if (freio = 1)
  6973  06AC  3001               	movlw	1
  6974  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  6975  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  6976  06AF  00D2               	movwf	Fuzzy@freio
  6977  06B0  3000               	movlw	0
  6978  06B1  00D3               	movwf	Fuzzy@freio+1
  6979                           
  6980                           ;main.c: 323: {
  6981                           ;main.c: 324: if ((tf + deltaV) >0 && (tf + deltaV) < 1020)
  6982  06B2  3000               	movlw	0
  6983  06B3  00B0               	movwf	___ftge@ff1
  6984  06B4  3000               	movlw	0
  6985  06B5  00B1               	movwf	___ftge@ff1+1
  6986  06B6  3000               	movlw	0
  6987  06B7  00B2               	movwf	___ftge@ff1+2
  6988  06B8  086D               	movf	_tf,w
  6989  06B9  00A3               	movwf	___ftadd@f1
  6990  06BA  086E               	movf	_tf+1,w
  6991  06BB  00A4               	movwf	___ftadd@f1+1
  6992  06BC  086F               	movf	_tf+2,w
  6993  06BD  00A5               	movwf	___ftadd@f1+2
  6994  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  6995  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  6996  06C0  0840               	movf	(_deltaV+1)^(0+128),w
  6997  06C1  01F9               	clrf	___lwtoft@c+1
  6998  06C2  07F9               	addwf	___lwtoft@c+1,f
  6999  06C3  083F               	movf	_deltaV^(0+128),w
  7000  06C4  01F8               	clrf	___lwtoft@c
  7001  06C5  07F8               	addwf	___lwtoft@c,f
  7002  06C6  160A  118A  2256  120A  118A  	fcall	___lwtoft
  7003  06CB  0878               	movf	?___lwtoft,w
  7004  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  7005  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  7006  06CE  00A6               	movwf	___ftadd@f2
  7007  06CF  0879               	movf	?___lwtoft+1,w
  7008  06D0  00A7               	movwf	___ftadd@f2+1
  7009  06D1  087A               	movf	?___lwtoft+2,w
  7010  06D2  00A8               	movwf	___ftadd@f2+2
  7011  06D3  120A  158A  2194  120A  118A  	fcall	___ftadd
  7012  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  7013  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  7014  06DA  0823               	movf	?___ftadd,w
  7015  06DB  00B3               	movwf	___ftge@ff2
  7016  06DC  0824               	movf	?___ftadd+1,w
  7017  06DD  00B4               	movwf	___ftge@ff2+1
  7018  06DE  0825               	movf	?___ftadd+2,w
  7019  06DF  00B5               	movwf	___ftge@ff2+2
  7020  06E0  160A  118A  2545  120A  118A  	fcall	___ftge
  7021  06E5  1803               	btfsc	3,0
  7022  06E6  0008               	return
  7023  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  7024  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  7025  06E9  086D               	movf	_tf,w
  7026  06EA  00A3               	movwf	___ftadd@f1
  7027  06EB  086E               	movf	_tf+1,w
  7028  06EC  00A4               	movwf	___ftadd@f1+1
  7029  06ED  086F               	movf	_tf+2,w
  7030  06EE  00A5               	movwf	___ftadd@f1+2
  7031  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  7032  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  7033  06F1  0840               	movf	(_deltaV+1)^(0+128),w
  7034  06F2  01F9               	clrf	___lwtoft@c+1
  7035  06F3  07F9               	addwf	___lwtoft@c+1,f
  7036  06F4  083F               	movf	_deltaV^(0+128),w
  7037  06F5  01F8               	clrf	___lwtoft@c
  7038  06F6  07F8               	addwf	___lwtoft@c,f
  7039  06F7  160A  118A  2256  120A  118A  	fcall	___lwtoft
  7040  06FC  0878               	movf	?___lwtoft,w
  7041  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  7042  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  7043  06FF  00A6               	movwf	___ftadd@f2
  7044  0700  0879               	movf	?___lwtoft+1,w
  7045  0701  00A7               	movwf	___ftadd@f2+1
  7046  0702  087A               	movf	?___lwtoft+2,w
  7047  0703  00A8               	movwf	___ftadd@f2+2
  7048  0704  120A  158A  2194  120A  118A  	fcall	___ftadd
  7049  0709  1283               	bcf	3,5	;RP0=0, select bank0
  7050  070A  1303               	bcf	3,6	;RP1=0, select bank0
  7051  070B  0823               	movf	?___ftadd,w
  7052  070C  00B0               	movwf	___ftge@ff1
  7053  070D  0824               	movf	?___ftadd+1,w
  7054  070E  00B1               	movwf	___ftge@ff1+1
  7055  070F  0825               	movf	?___ftadd+2,w
  7056  0710  00B2               	movwf	___ftge@ff1+2
  7057  0711  3000               	movlw	0
  7058  0712  00B3               	movwf	___ftge@ff2
  7059  0713  307F               	movlw	127
  7060  0714  00B4               	movwf	___ftge@ff2+1
  7061  0715  3044               	movlw	68
  7062  0716  00B5               	movwf	___ftge@ff2+2
  7063  0717  160A  118A  2545  120A  118A  	fcall	___ftge
  7064  071C  1803               	btfsc	3,0
  7065  071D  0008               	return
  7066                           
  7067                           ;main.c: 325: {
  7068                           ;main.c: 326: PWM_DutyCycle2(tf + deltaV);
  7069  071E  1683               	bsf	3,5	;RP0=1, select bank1
  7070  071F  1303               	bcf	3,6	;RP1=0, select bank1
  7071  0720  0840               	movf	(_deltaV+1)^(0+128),w
  7072  0721  01F9               	clrf	___lwtoft@c+1
  7073  0722  07F9               	addwf	___lwtoft@c+1,f
  7074  0723  083F               	movf	_deltaV^(0+128),w
  7075  0724  01F8               	clrf	___lwtoft@c
  7076  0725  07F8               	addwf	___lwtoft@c,f
  7077  0726  160A  118A  2256  120A  118A  	fcall	___lwtoft
  7078  072B  0878               	movf	?___lwtoft,w
  7079  072C  1283               	bcf	3,5	;RP0=0, select bank0
  7080  072D  1303               	bcf	3,6	;RP1=0, select bank0
  7081  072E  00A6               	movwf	___ftadd@f2
  7082  072F  0879               	movf	?___lwtoft+1,w
  7083  0730  00A7               	movwf	___ftadd@f2+1
  7084  0731  087A               	movf	?___lwtoft+2,w
  7085  0732  00A8               	movwf	___ftadd@f2+2
  7086  0733  086D               	movf	_tf,w
  7087  0734  00A3               	movwf	___ftadd@f1
  7088  0735  086E               	movf	_tf+1,w
  7089  0736  00A4               	movwf	___ftadd@f1+1
  7090  0737  086F               	movf	_tf+2,w
  7091  0738  00A5               	movwf	___ftadd@f1+2
  7092  0739  120A  158A  2194  120A  118A  	fcall	___ftadd
  7093  073E  1283               	bcf	3,5	;RP0=0, select bank0
  7094  073F  1303               	bcf	3,6	;RP1=0, select bank0
  7095  0740  0823               	movf	?___ftadd,w
  7096  0741  00B0               	movwf	___fttol@f1
  7097  0742  0824               	movf	?___ftadd+1,w
  7098  0743  00B1               	movwf	___fttol@f1+1
  7099  0744  0825               	movf	?___ftadd+2,w
  7100  0745  00B2               	movwf	___fttol@f1+2
  7101  0746  120A  158A  201A  120A  118A  	fcall	___fttol
  7102  074B  1283               	bcf	3,5	;RP0=0, select bank0
  7103  074C  1303               	bcf	3,6	;RP1=0, select bank0
  7104  074D  0831               	movf	?___fttol+1,w
  7105  074E  01BF               	clrf	i1PWM_DutyCycle2@valor+1
  7106  074F  07BF               	addwf	i1PWM_DutyCycle2@valor+1,f
  7107  0750  0830               	movf	?___fttol,w
  7108  0751  01BE               	clrf	i1PWM_DutyCycle2@valor
  7109  0752  07BE               	addwf	i1PWM_DutyCycle2@valor,f
  7110  0753  160A  118A  2281   	fcall	i1_PWM_DutyCycle2
  7111                           
  7112                           ;main.c: 327: }
  7113                           ;main.c: 328: }else
  7114  0756  0008               	return
  7115  0757                     __end_of_Fuzzy:	
  7116                           ;main.c: 331: {
  7117                           ;main.c: 332: PWM_DutyCycle2(tf - deltaV);
  7118                           
  7119                           ;main.c: 329: {
  7120                           ;main.c: 330: if ((tf - deltaV) >0 && (tf - deltaV) < 1020)
  7121                           
  7122                           
  7123                           	psect	text29
  7124  1281                     __ptext29:	
  7125 ;; *************** function i1_PWM_DutyCycle2 *****************
  7126 ;; Defined at:
  7127 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  valor           2   30[BANK0 ] int 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;		None               void
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7141 ;;      Params:         0       2       0       0       0
  7142 ;;      Locals:         0       0       0       0       0
  7143 ;;      Temps:          2       0       0       0       0
  7144 ;;      Totals:         2       2       0       0       0
  7145 ;;Total ram usage:        4 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_Fuzzy
  7151 ;;		_ISR
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           
  7156                           ;psect for function i1_PWM_DutyCycle2
  7157  1281                     i1_PWM_DutyCycle2:	
  7158                           
  7159                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7160                           
  7161                           ;incstack = 0
  7162                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7163  1281  1283               	bcf	3,5	;RP0=0, select bank0
  7164  1282  1303               	bcf	3,6	;RP1=0, select bank0
  7165  1283  083F               	movf	i1PWM_DutyCycle2@valor+1,w
  7166  1284  00FD               	movwf	??i1_PWM_DutyCycle2+1
  7167  1285  083E               	movf	i1PWM_DutyCycle2@valor,w
  7168  1286  00FC               	movwf	??i1_PWM_DutyCycle2
  7169  1287  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  7170  1288  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  7171  1289  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  7172  128A  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  7173  128B  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  7174  128C  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  7175  128D  087C               	movf	??i1_PWM_DutyCycle2,w
  7176  128E  009B               	movwf	27	;volatile
  7177                           
  7178                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7179  128F  083E               	movf	i1PWM_DutyCycle2@valor,w
  7180  1290  00FC               	movwf	??i1_PWM_DutyCycle2
  7181  1291  3003               	movlw	3
  7182  1292                     u331_25:	
  7183  1292  1003               	clrc
  7184  1293  0DFC               	rlf	??i1_PWM_DutyCycle2,f
  7185  1294  3EFF               	addlw	-1
  7186  1295  1D03               	skipz
  7187  1296  2A92               	goto	u331_25
  7188  1297  1003               	clrc
  7189  1298  0D7C               	rlf	??i1_PWM_DutyCycle2,w
  7190  1299  380C               	iorlw	12
  7191  129A  009D               	movwf	29	;volatile
  7192  129B  0008               	return
  7193  129C                     __end_ofi1_PWM_DutyCycle2:	
  7194                           
  7195                           	psect	text30
  7196  0A9D                     __ptext30:	
  7197 ;; *************** function _trimf *****************
  7198 ;; Defined at:
  7199 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  x               3   32[BANK0 ] float 
  7202 ;;  a               3   35[BANK0 ] float 
  7203 ;;  b               3   38[BANK0 ] float 
  7204 ;;  c               3   41[BANK0 ] float 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  ua              3   44[BANK0 ] float 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  3   32[BANK0 ] float 
  7209 ;; Registers used:
  7210 ;;		wreg, status,2, status,0, pclath, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7216 ;;      Params:         0      12       0       0       0
  7217 ;;      Locals:         0       3       0       0       0
  7218 ;;      Temps:          0       0       0       0       0
  7219 ;;      Totals:         0      15       0       0       0
  7220 ;;Total ram usage:       15 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    2
  7223 ;; This function calls:
  7224 ;;		___ftadd
  7225 ;;		___ftdiv
  7226 ;;		___ftge
  7227 ;;		___ftneg
  7228 ;; This function is called by:
  7229 ;;		_Fuzzy
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           
  7234                           ;psect for function _trimf
  7235  0A9D                     _trimf:	
  7236                           
  7237                           ;main.c: 65: float ua = 0;
  7238                           
  7239                           ;incstack = 0
  7240                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7241  0A9D  3000               	movlw	0
  7242  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  7243  0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  7244  0AA0  00CC               	movwf	trimf@ua
  7245  0AA1  3000               	movlw	0
  7246  0AA2  00CD               	movwf	trimf@ua+1
  7247  0AA3  3000               	movlw	0
  7248  0AA4  00CE               	movwf	trimf@ua+2
  7249                           
  7250                           ;main.c: 67: if (x <= a)
  7251  0AA5  0843               	movf	trimf@a,w
  7252  0AA6  00B0               	movwf	___ftge@ff1
  7253  0AA7  0844               	movf	trimf@a+1,w
  7254  0AA8  00B1               	movwf	___ftge@ff1+1
  7255  0AA9  0845               	movf	trimf@a+2,w
  7256  0AAA  00B2               	movwf	___ftge@ff1+2
  7257  0AAB  0840               	movf	trimf@x,w
  7258  0AAC  00B3               	movwf	___ftge@ff2
  7259  0AAD  0841               	movf	trimf@x+1,w
  7260  0AAE  00B4               	movwf	___ftge@ff2+1
  7261  0AAF  0842               	movf	trimf@x+2,w
  7262  0AB0  00B5               	movwf	___ftge@ff2+2
  7263  0AB1  160A  118A  2545  120A  158A  	fcall	___ftge
  7264  0AB6  1803               	btfsc	3,0
  7265  0AB7  2BB0               	goto	L12
  7266                           
  7267                           ;main.c: 69: else if ((a < x) && (x <= b))
  7268                           
  7269                           ;main.c: 68: ua = 0;
  7270  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  7271  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  7272  0ABA  0843               	movf	trimf@a,w
  7273  0ABB  00B0               	movwf	___ftge@ff1
  7274  0ABC  0844               	movf	trimf@a+1,w
  7275  0ABD  00B1               	movwf	___ftge@ff1+1
  7276  0ABE  0845               	movf	trimf@a+2,w
  7277  0ABF  00B2               	movwf	___ftge@ff1+2
  7278  0AC0  0840               	movf	trimf@x,w
  7279  0AC1  00B3               	movwf	___ftge@ff2
  7280  0AC2  0841               	movf	trimf@x+1,w
  7281  0AC3  00B4               	movwf	___ftge@ff2+1
  7282  0AC4  0842               	movf	trimf@x+2,w
  7283  0AC5  00B5               	movwf	___ftge@ff2+2
  7284  0AC6  160A  118A  2545  120A  158A  	fcall	___ftge
  7285  0ACB  1803               	btfsc	3,0
  7286  0ACC  2B16               	goto	i1l2423
  7287  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  7288  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  7289  0ACF  0846               	movf	trimf@b,w
  7290  0AD0  00B0               	movwf	___ftge@ff1
  7291  0AD1  0847               	movf	trimf@b+1,w
  7292  0AD2  00B1               	movwf	___ftge@ff1+1
  7293  0AD3  0848               	movf	trimf@b+2,w
  7294  0AD4  00B2               	movwf	___ftge@ff1+2
  7295  0AD5  0840               	movf	trimf@x,w
  7296  0AD6  00B3               	movwf	___ftge@ff2
  7297  0AD7  0841               	movf	trimf@x+1,w
  7298  0AD8  00B4               	movwf	___ftge@ff2+1
  7299  0AD9  0842               	movf	trimf@x+2,w
  7300  0ADA  00B5               	movwf	___ftge@ff2+2
  7301  0ADB  160A  118A  2545  120A  158A  	fcall	___ftge
  7302  0AE0  1C03               	btfss	3,0
  7303  0AE1  2B16               	goto	i1l2423
  7304                           
  7305                           ;main.c: 70: ua = ((x - a) / (b - a));
  7306  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  7307  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  7308  0AE4  0846               	movf	trimf@b,w
  7309  0AE5  00A3               	movwf	___ftadd@f1
  7310  0AE6  0847               	movf	trimf@b+1,w
  7311  0AE7  00A4               	movwf	___ftadd@f1+1
  7312  0AE8  0848               	movf	trimf@b+2,w
  7313  0AE9  00A5               	movwf	___ftadd@f1+2
  7314  0AEA  0843               	movf	trimf@a,w
  7315  0AEB  00A0               	movwf	___ftneg@f1
  7316  0AEC  0844               	movf	trimf@a+1,w
  7317  0AED  00A1               	movwf	___ftneg@f1+1
  7318  0AEE  0845               	movf	trimf@a+2,w
  7319  0AEF  00A2               	movwf	___ftneg@f1+2
  7320  0AF0  160A  118A  221F  120A  158A  	fcall	___ftneg
  7321  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  7322  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  7323  0AF7  0820               	movf	?___ftneg,w
  7324  0AF8  00A6               	movwf	___ftadd@f2
  7325  0AF9  0821               	movf	?___ftneg+1,w
  7326  0AFA  00A7               	movwf	___ftadd@f2+1
  7327  0AFB  0822               	movf	?___ftneg+2,w
  7328  0AFC  00A8               	movwf	___ftadd@f2+2
  7329  0AFD  120A  158A  2194  120A  158A  	fcall	___ftadd
  7330  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  7331  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  7332  0B04  0823               	movf	?___ftadd,w
  7333  0B05  00B0               	movwf	___ftdiv@f2
  7334  0B06  0824               	movf	?___ftadd+1,w
  7335  0B07  00B1               	movwf	___ftdiv@f2+1
  7336  0B08  0825               	movf	?___ftadd+2,w
  7337  0B09  00B2               	movwf	___ftdiv@f2+2
  7338  0B0A  0840               	movf	trimf@x,w
  7339  0B0B  00A3               	movwf	___ftadd@f1
  7340  0B0C  0841               	movf	trimf@x+1,w
  7341  0B0D  00A4               	movwf	___ftadd@f1+1
  7342  0B0E  0842               	movf	trimf@x+2,w
  7343  0B0F  00A5               	movwf	___ftadd@f1+2
  7344  0B10  0843               	movf	trimf@a,w
  7345  0B11  00A0               	movwf	___ftneg@f1
  7346  0B12  0844               	movf	trimf@a+1,w
  7347  0B13  00A1               	movwf	___ftneg@f1+1
  7348  0B14  0845               	movf	trimf@a+2,w
  7349  0B15  2B73               	goto	L13
  7350  0B16                     i1l2423:	
  7351                           
  7352                           ;main.c: 71: else if ((b < x) && (x <= c))
  7353  0B16  1283               	bcf	3,5	;RP0=0, select bank0
  7354  0B17  1303               	bcf	3,6	;RP1=0, select bank0
  7355  0B18  0846               	movf	trimf@b,w
  7356  0B19  00B0               	movwf	___ftge@ff1
  7357  0B1A  0847               	movf	trimf@b+1,w
  7358  0B1B  00B1               	movwf	___ftge@ff1+1
  7359  0B1C  0848               	movf	trimf@b+2,w
  7360  0B1D  00B2               	movwf	___ftge@ff1+2
  7361  0B1E  0840               	movf	trimf@x,w
  7362  0B1F  00B3               	movwf	___ftge@ff2
  7363  0B20  0841               	movf	trimf@x+1,w
  7364  0B21  00B4               	movwf	___ftge@ff2+1
  7365  0B22  0842               	movf	trimf@x+2,w
  7366  0B23  00B5               	movwf	___ftge@ff2+2
  7367  0B24  160A  118A  2545  120A  158A  	fcall	___ftge
  7368  0B29  1803               	btfsc	3,0
  7369  0B2A  2B9B               	goto	i1l2429
  7370  0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  7371  0B2C  1303               	bcf	3,6	;RP1=0, select bank0
  7372  0B2D  0849               	movf	trimf@c,w
  7373  0B2E  00B0               	movwf	___ftge@ff1
  7374  0B2F  084A               	movf	trimf@c+1,w
  7375  0B30  00B1               	movwf	___ftge@ff1+1
  7376  0B31  084B               	movf	trimf@c+2,w
  7377  0B32  00B2               	movwf	___ftge@ff1+2
  7378  0B33  0840               	movf	trimf@x,w
  7379  0B34  00B3               	movwf	___ftge@ff2
  7380  0B35  0841               	movf	trimf@x+1,w
  7381  0B36  00B4               	movwf	___ftge@ff2+1
  7382  0B37  0842               	movf	trimf@x+2,w
  7383  0B38  00B5               	movwf	___ftge@ff2+2
  7384  0B39  160A  118A  2545  120A  158A  	fcall	___ftge
  7385  0B3E  1C03               	btfss	3,0
  7386  0B3F  2B9B               	goto	i1l2429
  7387                           
  7388                           ;main.c: 72: ua = ((x - c) / (b - c));
  7389  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  7390  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  7391  0B42  0846               	movf	trimf@b,w
  7392  0B43  00A3               	movwf	___ftadd@f1
  7393  0B44  0847               	movf	trimf@b+1,w
  7394  0B45  00A4               	movwf	___ftadd@f1+1
  7395  0B46  0848               	movf	trimf@b+2,w
  7396  0B47  00A5               	movwf	___ftadd@f1+2
  7397  0B48  0849               	movf	trimf@c,w
  7398  0B49  00A0               	movwf	___ftneg@f1
  7399  0B4A  084A               	movf	trimf@c+1,w
  7400  0B4B  00A1               	movwf	___ftneg@f1+1
  7401  0B4C  084B               	movf	trimf@c+2,w
  7402  0B4D  00A2               	movwf	___ftneg@f1+2
  7403  0B4E  160A  118A  221F  120A  158A  	fcall	___ftneg
  7404  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  7405  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  7406  0B55  0820               	movf	?___ftneg,w
  7407  0B56  00A6               	movwf	___ftadd@f2
  7408  0B57  0821               	movf	?___ftneg+1,w
  7409  0B58  00A7               	movwf	___ftadd@f2+1
  7410  0B59  0822               	movf	?___ftneg+2,w
  7411  0B5A  00A8               	movwf	___ftadd@f2+2
  7412  0B5B  120A  158A  2194  120A  158A  	fcall	___ftadd
  7413  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  7414  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  7415  0B62  0823               	movf	?___ftadd,w
  7416  0B63  00B0               	movwf	___ftdiv@f2
  7417  0B64  0824               	movf	?___ftadd+1,w
  7418  0B65  00B1               	movwf	___ftdiv@f2+1
  7419  0B66  0825               	movf	?___ftadd+2,w
  7420  0B67  00B2               	movwf	___ftdiv@f2+2
  7421  0B68  0840               	movf	trimf@x,w
  7422  0B69  00A3               	movwf	___ftadd@f1
  7423  0B6A  0841               	movf	trimf@x+1,w
  7424  0B6B  00A4               	movwf	___ftadd@f1+1
  7425  0B6C  0842               	movf	trimf@x+2,w
  7426  0B6D  00A5               	movwf	___ftadd@f1+2
  7427  0B6E  0849               	movf	trimf@c,w
  7428  0B6F  00A0               	movwf	___ftneg@f1
  7429  0B70  084A               	movf	trimf@c+1,w
  7430  0B71  00A1               	movwf	___ftneg@f1+1
  7431  0B72  084B               	movf	trimf@c+2,w
  7432  0B73                     L13:	
  7433  0B73  00A2               	movwf	___ftneg@f1+2
  7434  0B74  160A  118A  221F  120A  158A  	fcall	___ftneg
  7435  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  7436  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  7437  0B7B  0820               	movf	?___ftneg,w
  7438  0B7C  00A6               	movwf	___ftadd@f2
  7439  0B7D  0821               	movf	?___ftneg+1,w
  7440  0B7E  00A7               	movwf	___ftadd@f2+1
  7441  0B7F  0822               	movf	?___ftneg+2,w
  7442  0B80  00A8               	movwf	___ftadd@f2+2
  7443  0B81  120A  158A  2194  120A  158A  	fcall	___ftadd
  7444  0B86  1283               	bcf	3,5	;RP0=0, select bank0
  7445  0B87  1303               	bcf	3,6	;RP1=0, select bank0
  7446  0B88  0823               	movf	?___ftadd,w
  7447  0B89  00B3               	movwf	___ftdiv@f1
  7448  0B8A  0824               	movf	?___ftadd+1,w
  7449  0B8B  00B4               	movwf	___ftdiv@f1+1
  7450  0B8C  0825               	movf	?___ftadd+2,w
  7451  0B8D  00B5               	movwf	___ftdiv@f1+2
  7452  0B8E  160A  118A  2677  120A  158A  	fcall	___ftdiv
  7453  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  7454  0B94  1303               	bcf	3,6	;RP1=0, select bank0
  7455  0B95  0830               	movf	?___ftdiv,w
  7456  0B96  00CC               	movwf	trimf@ua
  7457  0B97  0831               	movf	?___ftdiv+1,w
  7458  0B98  00CD               	movwf	trimf@ua+1
  7459  0B99  0832               	movf	?___ftdiv+2,w
  7460  0B9A  2BB7               	goto	L10
  7461  0B9B                     i1l2429:	
  7462                           
  7463                           ;main.c: 73: else if (x > c)
  7464  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  7465  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  7466  0B9D  0849               	movf	trimf@c,w
  7467  0B9E  00B0               	movwf	___ftge@ff1
  7468  0B9F  084A               	movf	trimf@c+1,w
  7469  0BA0  00B1               	movwf	___ftge@ff1+1
  7470  0BA1  084B               	movf	trimf@c+2,w
  7471  0BA2  00B2               	movwf	___ftge@ff1+2
  7472  0BA3  0840               	movf	trimf@x,w
  7473  0BA4  00B3               	movwf	___ftge@ff2
  7474  0BA5  0841               	movf	trimf@x+1,w
  7475  0BA6  00B4               	movwf	___ftge@ff2+1
  7476  0BA7  0842               	movf	trimf@x+2,w
  7477  0BA8  00B5               	movwf	___ftge@ff2+2
  7478  0BA9  160A  118A  2545  120A  158A  	fcall	___ftge
  7479  0BAE  1803               	btfsc	3,0
  7480  0BAF  2BB8               	goto	i1l112
  7481  0BB0                     L12:	
  7482                           
  7483                           ;main.c: 74: ua = 0;
  7484  0BB0  3000               	movlw	0
  7485  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  7486  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  7487  0BB3  00CC               	movwf	trimf@ua
  7488  0BB4  3000               	movlw	0
  7489  0BB5  00CD               	movwf	trimf@ua+1
  7490  0BB6  3000               	movlw	0
  7491  0BB7                     L10:	
  7492  0BB7  00CE               	movwf	trimf@ua+2
  7493  0BB8                     i1l112:	
  7494                           
  7495                           ;main.c: 76: return(ua);
  7496  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  7497  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  7498  0BBA  084C               	movf	trimf@ua,w
  7499  0BBB  00C0               	movwf	?_trimf
  7500  0BBC  084D               	movf	trimf@ua+1,w
  7501  0BBD  00C1               	movwf	?_trimf+1
  7502  0BBE  084E               	movf	trimf@ua+2,w
  7503  0BBF  00C2               	movwf	?_trimf+2
  7504  0BC0  0008               	return
  7505  0BC1                     __end_of_trimf:	
  7506                           
  7507                           	psect	text31
  7508  0CF3                     __ptext31:	
  7509 ;; *************** function _trapmf *****************
  7510 ;; Defined at:
  7511 ;;		line 82 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  x               3   32[BANK0 ] float 
  7514 ;;  a               3   35[BANK0 ] float 
  7515 ;;  b               3   38[BANK0 ] float 
  7516 ;;  c               3   41[BANK0 ] float 
  7517 ;;  d               3   44[BANK0 ] float 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  ua              3   47[BANK0 ] float 
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  3   32[BANK0 ] float 
  7522 ;; Registers used:
  7523 ;;		wreg, status,2, status,0, pclath, cstack
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7529 ;;      Params:         0      15       0       0       0
  7530 ;;      Locals:         0       3       0       0       0
  7531 ;;      Temps:          0       0       0       0       0
  7532 ;;      Totals:         0      18       0       0       0
  7533 ;;Total ram usage:       18 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; Hardware stack levels required when called:    2
  7536 ;; This function calls:
  7537 ;;		___ftadd
  7538 ;;		___ftdiv
  7539 ;;		___ftge
  7540 ;;		___ftneg
  7541 ;; This function is called by:
  7542 ;;		_Fuzzy
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           
  7547                           ;psect for function _trapmf
  7548  0CF3                     _trapmf:	
  7549                           
  7550                           ;main.c: 84: float ua = 0;
  7551                           
  7552                           ;incstack = 0
  7553                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7554  0CF3  3000               	movlw	0
  7555  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  7556  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  7557  0CF6  00CF               	movwf	trapmf@ua
  7558  0CF7  3000               	movlw	0
  7559  0CF8  00D0               	movwf	trapmf@ua+1
  7560  0CF9  3000               	movlw	0
  7561  0CFA  00D1               	movwf	trapmf@ua+2
  7562                           
  7563                           ;main.c: 86: if (x <= a)
  7564  0CFB  0843               	movf	trapmf@a,w
  7565  0CFC  00B0               	movwf	___ftge@ff1
  7566  0CFD  0844               	movf	trapmf@a+1,w
  7567  0CFE  00B1               	movwf	___ftge@ff1+1
  7568  0CFF  0845               	movf	trapmf@a+2,w
  7569  0D00  00B2               	movwf	___ftge@ff1+2
  7570  0D01  0840               	movf	trapmf@x,w
  7571  0D02  00B3               	movwf	___ftge@ff2
  7572  0D03  0841               	movf	trapmf@x+1,w
  7573  0D04  00B4               	movwf	___ftge@ff2+1
  7574  0D05  0842               	movf	trapmf@x+2,w
  7575  0D06  00B5               	movwf	___ftge@ff2+2
  7576  0D07  160A  118A  2545  120A  158A  	fcall	___ftge
  7577  0D0C  1803               	btfsc	3,0
  7578  0D0D  2E38               	goto	L18
  7579                           
  7580                           ;main.c: 88: else if ((a < x) && (x <= b))
  7581                           
  7582                           ;main.c: 87: ua = 0;
  7583  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  7584  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  7585  0D10  0843               	movf	trapmf@a,w
  7586  0D11  00B0               	movwf	___ftge@ff1
  7587  0D12  0844               	movf	trapmf@a+1,w
  7588  0D13  00B1               	movwf	___ftge@ff1+1
  7589  0D14  0845               	movf	trapmf@a+2,w
  7590  0D15  00B2               	movwf	___ftge@ff1+2
  7591  0D16  0840               	movf	trapmf@x,w
  7592  0D17  00B3               	movwf	___ftge@ff2
  7593  0D18  0841               	movf	trapmf@x+1,w
  7594  0D19  00B4               	movwf	___ftge@ff2+1
  7595  0D1A  0842               	movf	trapmf@x+2,w
  7596  0D1B  00B5               	movwf	___ftge@ff2+2
  7597  0D1C  160A  118A  2545  120A  158A  	fcall	___ftge
  7598  0D21  1803               	btfsc	3,0
  7599  0D22  2D6C               	goto	i1l2447
  7600  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  7601  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  7602  0D25  0846               	movf	trapmf@b,w
  7603  0D26  00B0               	movwf	___ftge@ff1
  7604  0D27  0847               	movf	trapmf@b+1,w
  7605  0D28  00B1               	movwf	___ftge@ff1+1
  7606  0D29  0848               	movf	trapmf@b+2,w
  7607  0D2A  00B2               	movwf	___ftge@ff1+2
  7608  0D2B  0840               	movf	trapmf@x,w
  7609  0D2C  00B3               	movwf	___ftge@ff2
  7610  0D2D  0841               	movf	trapmf@x+1,w
  7611  0D2E  00B4               	movwf	___ftge@ff2+1
  7612  0D2F  0842               	movf	trapmf@x+2,w
  7613  0D30  00B5               	movwf	___ftge@ff2+2
  7614  0D31  160A  118A  2545  120A  158A  	fcall	___ftge
  7615  0D36  1C03               	btfss	3,0
  7616  0D37  2D6C               	goto	i1l2447
  7617                           
  7618                           ;main.c: 89: ua = ((x - a) / (b - a));
  7619  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  7620  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  7621  0D3A  0846               	movf	trapmf@b,w
  7622  0D3B  00A3               	movwf	___ftadd@f1
  7623  0D3C  0847               	movf	trapmf@b+1,w
  7624  0D3D  00A4               	movwf	___ftadd@f1+1
  7625  0D3E  0848               	movf	trapmf@b+2,w
  7626  0D3F  00A5               	movwf	___ftadd@f1+2
  7627  0D40  0843               	movf	trapmf@a,w
  7628  0D41  00A0               	movwf	___ftneg@f1
  7629  0D42  0844               	movf	trapmf@a+1,w
  7630  0D43  00A1               	movwf	___ftneg@f1+1
  7631  0D44  0845               	movf	trapmf@a+2,w
  7632  0D45  00A2               	movwf	___ftneg@f1+2
  7633  0D46  160A  118A  221F  120A  158A  	fcall	___ftneg
  7634  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  7635  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  7636  0D4D  0820               	movf	?___ftneg,w
  7637  0D4E  00A6               	movwf	___ftadd@f2
  7638  0D4F  0821               	movf	?___ftneg+1,w
  7639  0D50  00A7               	movwf	___ftadd@f2+1
  7640  0D51  0822               	movf	?___ftneg+2,w
  7641  0D52  00A8               	movwf	___ftadd@f2+2
  7642  0D53  120A  158A  2194  120A  158A  	fcall	___ftadd
  7643  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  7644  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  7645  0D5A  0823               	movf	?___ftadd,w
  7646  0D5B  00B0               	movwf	___ftdiv@f2
  7647  0D5C  0824               	movf	?___ftadd+1,w
  7648  0D5D  00B1               	movwf	___ftdiv@f2+1
  7649  0D5E  0825               	movf	?___ftadd+2,w
  7650  0D5F  00B2               	movwf	___ftdiv@f2+2
  7651  0D60  0840               	movf	trapmf@x,w
  7652  0D61  00A3               	movwf	___ftadd@f1
  7653  0D62  0841               	movf	trapmf@x+1,w
  7654  0D63  00A4               	movwf	___ftadd@f1+1
  7655  0D64  0842               	movf	trapmf@x+2,w
  7656  0D65  00A5               	movwf	___ftadd@f1+2
  7657  0D66  0843               	movf	trapmf@a,w
  7658  0D67  00A0               	movwf	___ftneg@f1
  7659  0D68  0844               	movf	trapmf@a+1,w
  7660  0D69  00A1               	movwf	___ftneg@f1+1
  7661  0D6A  0845               	movf	trapmf@a+2,w
  7662  0D6B  2DFB               	goto	L20
  7663  0D6C                     i1l2447:	
  7664                           
  7665                           ;main.c: 90: else if ((b <= x) && (x <= c))
  7666  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  7667  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  7668  0D6E  0840               	movf	trapmf@x,w
  7669  0D6F  00B0               	movwf	___ftge@ff1
  7670  0D70  0841               	movf	trapmf@x+1,w
  7671  0D71  00B1               	movwf	___ftge@ff1+1
  7672  0D72  0842               	movf	trapmf@x+2,w
  7673  0D73  00B2               	movwf	___ftge@ff1+2
  7674  0D74  0846               	movf	trapmf@b,w
  7675  0D75  00B3               	movwf	___ftge@ff2
  7676  0D76  0847               	movf	trapmf@b+1,w
  7677  0D77  00B4               	movwf	___ftge@ff2+1
  7678  0D78  0848               	movf	trapmf@b+2,w
  7679  0D79  00B5               	movwf	___ftge@ff2+2
  7680  0D7A  160A  118A  2545  120A  158A  	fcall	___ftge
  7681  0D7F  1C03               	btfss	3,0
  7682  0D80  2D9E               	goto	i1l2453
  7683  0D81  1283               	bcf	3,5	;RP0=0, select bank0
  7684  0D82  1303               	bcf	3,6	;RP1=0, select bank0
  7685  0D83  0849               	movf	trapmf@c,w
  7686  0D84  00B0               	movwf	___ftge@ff1
  7687  0D85  084A               	movf	trapmf@c+1,w
  7688  0D86  00B1               	movwf	___ftge@ff1+1
  7689  0D87  084B               	movf	trapmf@c+2,w
  7690  0D88  00B2               	movwf	___ftge@ff1+2
  7691  0D89  0840               	movf	trapmf@x,w
  7692  0D8A  00B3               	movwf	___ftge@ff2
  7693  0D8B  0841               	movf	trapmf@x+1,w
  7694  0D8C  00B4               	movwf	___ftge@ff2+1
  7695  0D8D  0842               	movf	trapmf@x+2,w
  7696  0D8E  00B5               	movwf	___ftge@ff2+2
  7697  0D8F  160A  118A  2545  120A  158A  	fcall	___ftge
  7698  0D94  1C03               	btfss	3,0
  7699  0D95  2D9E               	goto	i1l2453
  7700                           
  7701                           ;main.c: 91: ua = 1;
  7702  0D96  3000               	movlw	0
  7703  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  7704  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  7705  0D99  00CF               	movwf	trapmf@ua
  7706  0D9A  3080               	movlw	128
  7707  0D9B  00D0               	movwf	trapmf@ua+1
  7708  0D9C  303F               	movlw	63
  7709  0D9D  2E3F               	goto	L17
  7710  0D9E                     i1l2453:	
  7711                           
  7712                           ;main.c: 92: else if ((c < x) && (x <= d))
  7713  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  7714  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  7715  0DA0  0849               	movf	trapmf@c,w
  7716  0DA1  00B0               	movwf	___ftge@ff1
  7717  0DA2  084A               	movf	trapmf@c+1,w
  7718  0DA3  00B1               	movwf	___ftge@ff1+1
  7719  0DA4  084B               	movf	trapmf@c+2,w
  7720  0DA5  00B2               	movwf	___ftge@ff1+2
  7721  0DA6  0840               	movf	trapmf@x,w
  7722  0DA7  00B3               	movwf	___ftge@ff2
  7723  0DA8  0841               	movf	trapmf@x+1,w
  7724  0DA9  00B4               	movwf	___ftge@ff2+1
  7725  0DAA  0842               	movf	trapmf@x+2,w
  7726  0DAB  00B5               	movwf	___ftge@ff2+2
  7727  0DAC  160A  118A  2545  120A  158A  	fcall	___ftge
  7728  0DB1  1803               	btfsc	3,0
  7729  0DB2  2E23               	goto	i1l2459
  7730  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  7731  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  7732  0DB5  084C               	movf	trapmf@d,w
  7733  0DB6  00B0               	movwf	___ftge@ff1
  7734  0DB7  084D               	movf	trapmf@d+1,w
  7735  0DB8  00B1               	movwf	___ftge@ff1+1
  7736  0DB9  084E               	movf	trapmf@d+2,w
  7737  0DBA  00B2               	movwf	___ftge@ff1+2
  7738  0DBB  0840               	movf	trapmf@x,w
  7739  0DBC  00B3               	movwf	___ftge@ff2
  7740  0DBD  0841               	movf	trapmf@x+1,w
  7741  0DBE  00B4               	movwf	___ftge@ff2+1
  7742  0DBF  0842               	movf	trapmf@x+2,w
  7743  0DC0  00B5               	movwf	___ftge@ff2+2
  7744  0DC1  160A  118A  2545  120A  158A  	fcall	___ftge
  7745  0DC6  1C03               	btfss	3,0
  7746  0DC7  2E23               	goto	i1l2459
  7747                           
  7748                           ;main.c: 93: ua = ((d - x) / (d - c));
  7749  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  7750  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  7751  0DCA  084C               	movf	trapmf@d,w
  7752  0DCB  00A3               	movwf	___ftadd@f1
  7753  0DCC  084D               	movf	trapmf@d+1,w
  7754  0DCD  00A4               	movwf	___ftadd@f1+1
  7755  0DCE  084E               	movf	trapmf@d+2,w
  7756  0DCF  00A5               	movwf	___ftadd@f1+2
  7757  0DD0  0849               	movf	trapmf@c,w
  7758  0DD1  00A0               	movwf	___ftneg@f1
  7759  0DD2  084A               	movf	trapmf@c+1,w
  7760  0DD3  00A1               	movwf	___ftneg@f1+1
  7761  0DD4  084B               	movf	trapmf@c+2,w
  7762  0DD5  00A2               	movwf	___ftneg@f1+2
  7763  0DD6  160A  118A  221F  120A  158A  	fcall	___ftneg
  7764  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  7765  0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  7766  0DDD  0820               	movf	?___ftneg,w
  7767  0DDE  00A6               	movwf	___ftadd@f2
  7768  0DDF  0821               	movf	?___ftneg+1,w
  7769  0DE0  00A7               	movwf	___ftadd@f2+1
  7770  0DE1  0822               	movf	?___ftneg+2,w
  7771  0DE2  00A8               	movwf	___ftadd@f2+2
  7772  0DE3  120A  158A  2194  120A  158A  	fcall	___ftadd
  7773  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  7774  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  7775  0DEA  0823               	movf	?___ftadd,w
  7776  0DEB  00B0               	movwf	___ftdiv@f2
  7777  0DEC  0824               	movf	?___ftadd+1,w
  7778  0DED  00B1               	movwf	___ftdiv@f2+1
  7779  0DEE  0825               	movf	?___ftadd+2,w
  7780  0DEF  00B2               	movwf	___ftdiv@f2+2
  7781  0DF0  084C               	movf	trapmf@d,w
  7782  0DF1  00A3               	movwf	___ftadd@f1
  7783  0DF2  084D               	movf	trapmf@d+1,w
  7784  0DF3  00A4               	movwf	___ftadd@f1+1
  7785  0DF4  084E               	movf	trapmf@d+2,w
  7786  0DF5  00A5               	movwf	___ftadd@f1+2
  7787  0DF6  0840               	movf	trapmf@x,w
  7788  0DF7  00A0               	movwf	___ftneg@f1
  7789  0DF8  0841               	movf	trapmf@x+1,w
  7790  0DF9  00A1               	movwf	___ftneg@f1+1
  7791  0DFA  0842               	movf	trapmf@x+2,w
  7792  0DFB                     L20:	
  7793  0DFB  00A2               	movwf	___ftneg@f1+2
  7794  0DFC  160A  118A  221F  120A  158A  	fcall	___ftneg
  7795  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  7796  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  7797  0E03  0820               	movf	?___ftneg,w
  7798  0E04  00A6               	movwf	___ftadd@f2
  7799  0E05  0821               	movf	?___ftneg+1,w
  7800  0E06  00A7               	movwf	___ftadd@f2+1
  7801  0E07  0822               	movf	?___ftneg+2,w
  7802  0E08  00A8               	movwf	___ftadd@f2+2
  7803  0E09  120A  158A  2194  120A  158A  	fcall	___ftadd
  7804  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  7805  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  7806  0E10  0823               	movf	?___ftadd,w
  7807  0E11  00B3               	movwf	___ftdiv@f1
  7808  0E12  0824               	movf	?___ftadd+1,w
  7809  0E13  00B4               	movwf	___ftdiv@f1+1
  7810  0E14  0825               	movf	?___ftadd+2,w
  7811  0E15  00B5               	movwf	___ftdiv@f1+2
  7812  0E16  160A  118A  2677  120A  158A  	fcall	___ftdiv
  7813  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  7814  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  7815  0E1D  0830               	movf	?___ftdiv,w
  7816  0E1E  00CF               	movwf	trapmf@ua
  7817  0E1F  0831               	movf	?___ftdiv+1,w
  7818  0E20  00D0               	movwf	trapmf@ua+1
  7819  0E21  0832               	movf	?___ftdiv+2,w
  7820  0E22  2E3F               	goto	L17
  7821  0E23                     i1l2459:	
  7822                           
  7823                           ;main.c: 94: else if (x > d)
  7824  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  7825  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  7826  0E25  084C               	movf	trapmf@d,w
  7827  0E26  00B0               	movwf	___ftge@ff1
  7828  0E27  084D               	movf	trapmf@d+1,w
  7829  0E28  00B1               	movwf	___ftge@ff1+1
  7830  0E29  084E               	movf	trapmf@d+2,w
  7831  0E2A  00B2               	movwf	___ftge@ff1+2
  7832  0E2B  0840               	movf	trapmf@x,w
  7833  0E2C  00B3               	movwf	___ftge@ff2
  7834  0E2D  0841               	movf	trapmf@x+1,w
  7835  0E2E  00B4               	movwf	___ftge@ff2+1
  7836  0E2F  0842               	movf	trapmf@x+2,w
  7837  0E30  00B5               	movwf	___ftge@ff2+2
  7838  0E31  160A  118A  2545  120A  158A  	fcall	___ftge
  7839  0E36  1803               	btfsc	3,0
  7840  0E37  2E40               	goto	i1l122
  7841  0E38                     L18:	
  7842                           
  7843                           ;main.c: 95: ua = 0;
  7844  0E38  3000               	movlw	0
  7845  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  7846  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  7847  0E3B  00CF               	movwf	trapmf@ua
  7848  0E3C  3000               	movlw	0
  7849  0E3D  00D0               	movwf	trapmf@ua+1
  7850  0E3E  3000               	movlw	0
  7851  0E3F                     L17:	
  7852  0E3F  00D1               	movwf	trapmf@ua+2
  7853  0E40                     i1l122:	
  7854                           
  7855                           ;main.c: 97: return(ua);
  7856  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  7857  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  7858  0E42  084F               	movf	trapmf@ua,w
  7859  0E43  00C0               	movwf	?_trapmf
  7860  0E44  0850               	movf	trapmf@ua+1,w
  7861  0E45  00C1               	movwf	?_trapmf+1
  7862  0E46  0851               	movf	trapmf@ua+2,w
  7863  0E47  00C2               	movwf	?_trapmf+2
  7864  0E48  0008               	return
  7865  0E49                     __end_of_trapmf:	
  7866                           
  7867                           	psect	text32
  7868  121F                     __ptext32:	
  7869 ;; *************** function ___ftneg *****************
  7870 ;; Defined at:
  7871 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;  f1              3    0[BANK0 ] float 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;		None
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  3    0[BANK0 ] float 
  7878 ;; Registers used:
  7879 ;;		wreg
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7885 ;;      Params:         0       3       0       0       0
  7886 ;;      Locals:         0       0       0       0       0
  7887 ;;      Temps:          0       0       0       0       0
  7888 ;;      Totals:         0       3       0       0       0
  7889 ;;Total ram usage:        3 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; This function calls:
  7892 ;;		Nothing
  7893 ;; This function is called by:
  7894 ;;		_trimf
  7895 ;;		_trapmf
  7896 ;;		_Fuzzy
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           
  7901                           ;psect for function ___ftneg
  7902  121F                     ___ftneg:	
  7903                           
  7904                           ;incstack = 0
  7905                           ; Regs used in ___ftneg: [wreg]
  7906  121F  1283               	bcf	3,5	;RP0=0, select bank0
  7907  1220  1303               	bcf	3,6	;RP1=0, select bank0
  7908  1221  0822               	movf	___ftneg@f1+2,w
  7909  1222  0421               	iorwf	___ftneg@f1+1,w
  7910  1223  0420               	iorwf	___ftneg@f1,w
  7911  1224  1903               	skipnz
  7912  1225  0008               	return
  7913  1226  3080               	movlw	128
  7914  1227  06A2               	xorwf	___ftneg@f1+2,f
  7915  1228  0008               	return
  7916  1229                     __end_of___ftneg:	
  7917                           
  7918                           	psect	text33
  7919  1677                     __ptext33:	
  7920 ;; *************** function ___ftdiv *****************
  7921 ;; Defined at:
  7922 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  f2              3   16[BANK0 ] float 
  7925 ;;  f1              3   19[BANK0 ] float 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  f3              3   27[BANK0 ] float 
  7928 ;;  sign            1   31[BANK0 ] unsigned char 
  7929 ;;  exp             1   30[BANK0 ] unsigned char 
  7930 ;;  cntr            1   26[BANK0 ] unsigned char 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  3   16[BANK0 ] float 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0, pclath, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7940 ;;      Params:         0       6       0       0       0
  7941 ;;      Locals:         0       6       0       0       0
  7942 ;;      Temps:          0       4       0       0       0
  7943 ;;      Totals:         0      16       0       0       0
  7944 ;;Total ram usage:       16 bytes
  7945 ;; Hardware stack levels used:    1
  7946 ;; Hardware stack levels required when called:    1
  7947 ;; This function calls:
  7948 ;;		___ftpack
  7949 ;; This function is called by:
  7950 ;;		_trimf
  7951 ;;		_trapmf
  7952 ;;		_Fuzzy
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           
  7957                           ;psect for function ___ftdiv
  7958  1677                     ___ftdiv:	
  7959                           
  7960                           ;incstack = 0
  7961                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7962  1677  1283               	bcf	3,5	;RP0=0, select bank0
  7963  1678  1303               	bcf	3,6	;RP1=0, select bank0
  7964  1679  0833               	movf	___ftdiv@f1,w
  7965  167A  00B6               	movwf	??___ftdiv
  7966  167B  0834               	movf	___ftdiv@f1+1,w
  7967  167C  00B7               	movwf	??___ftdiv+1
  7968  167D  0835               	movf	___ftdiv@f1+2,w
  7969  167E  00B8               	movwf	??___ftdiv+2
  7970  167F  1003               	clrc
  7971  1680  0D37               	rlf	??___ftdiv+1,w
  7972  1681  0D38               	rlf	??___ftdiv+2,w
  7973  1682  00B9               	movwf	??___ftdiv+3
  7974  1683  0839               	movf	??___ftdiv+3,w
  7975  1684  00BE               	movwf	___ftdiv@exp
  7976  1685  08BE               	movf	___ftdiv@exp,f
  7977  1686  1D03               	skipz
  7978  1687  2E8F               	goto	i1l2347
  7979  1688  3000               	movlw	0
  7980  1689  00B0               	movwf	?___ftdiv
  7981  168A  3000               	movlw	0
  7982  168B  00B1               	movwf	?___ftdiv+1
  7983  168C  3000               	movlw	0
  7984  168D  00B2               	movwf	?___ftdiv+2
  7985  168E  0008               	return
  7986  168F                     i1l2347:	
  7987  168F  0830               	movf	___ftdiv@f2,w
  7988  1690  00B6               	movwf	??___ftdiv
  7989  1691  0831               	movf	___ftdiv@f2+1,w
  7990  1692  00B7               	movwf	??___ftdiv+1
  7991  1693  0832               	movf	___ftdiv@f2+2,w
  7992  1694  00B8               	movwf	??___ftdiv+2
  7993  1695  1003               	clrc
  7994  1696  0D37               	rlf	??___ftdiv+1,w
  7995  1697  0D38               	rlf	??___ftdiv+2,w
  7996  1698  00B9               	movwf	??___ftdiv+3
  7997  1699  0839               	movf	??___ftdiv+3,w
  7998  169A  00BF               	movwf	___ftdiv@sign
  7999  169B  08BF               	movf	___ftdiv@sign,f
  8000  169C  1D03               	skipz
  8001  169D  2EA5               	goto	i1l2353
  8002  169E  3000               	movlw	0
  8003  169F  00B0               	movwf	?___ftdiv
  8004  16A0  3000               	movlw	0
  8005  16A1  00B1               	movwf	?___ftdiv+1
  8006  16A2  3000               	movlw	0
  8007  16A3  00B2               	movwf	?___ftdiv+2
  8008  16A4  0008               	return
  8009  16A5                     i1l2353:	
  8010  16A5  3000               	movlw	0
  8011  16A6  00BB               	movwf	___ftdiv@f3
  8012  16A7  3000               	movlw	0
  8013  16A8  00BC               	movwf	___ftdiv@f3+1
  8014  16A9  3000               	movlw	0
  8015  16AA  00BD               	movwf	___ftdiv@f3+2
  8016  16AB  3089               	movlw	137
  8017  16AC  073F               	addwf	___ftdiv@sign,w
  8018  16AD  00B6               	movwf	??___ftdiv
  8019  16AE  0836               	movf	??___ftdiv,w
  8020  16AF  02BE               	subwf	___ftdiv@exp,f
  8021  16B0  0833               	movf	___ftdiv@f1,w
  8022  16B1  00B6               	movwf	??___ftdiv
  8023  16B2  0834               	movf	___ftdiv@f1+1,w
  8024  16B3  00B7               	movwf	??___ftdiv+1
  8025  16B4  0835               	movf	___ftdiv@f1+2,w
  8026  16B5  00B8               	movwf	??___ftdiv+2
  8027  16B6  3010               	movlw	16
  8028  16B7                     u250_25:	
  8029  16B7  1003               	clrc
  8030  16B8  0CB8               	rrf	??___ftdiv+2,f
  8031  16B9  0CB7               	rrf	??___ftdiv+1,f
  8032  16BA  0CB6               	rrf	??___ftdiv,f
  8033  16BB  3EFF               	addlw	-1
  8034  16BC  1D03               	skipz
  8035  16BD  2EB7               	goto	u250_25
  8036  16BE  0836               	movf	??___ftdiv,w
  8037  16BF  00B9               	movwf	??___ftdiv+3
  8038  16C0  0839               	movf	??___ftdiv+3,w
  8039  16C1  00BF               	movwf	___ftdiv@sign
  8040  16C2  0830               	movf	___ftdiv@f2,w
  8041  16C3  00B6               	movwf	??___ftdiv
  8042  16C4  0831               	movf	___ftdiv@f2+1,w
  8043  16C5  00B7               	movwf	??___ftdiv+1
  8044  16C6  0832               	movf	___ftdiv@f2+2,w
  8045  16C7  00B8               	movwf	??___ftdiv+2
  8046  16C8  3010               	movlw	16
  8047  16C9                     u251_25:	
  8048  16C9  1003               	clrc
  8049  16CA  0CB8               	rrf	??___ftdiv+2,f
  8050  16CB  0CB7               	rrf	??___ftdiv+1,f
  8051  16CC  0CB6               	rrf	??___ftdiv,f
  8052  16CD  3EFF               	addlw	-1
  8053  16CE  1D03               	skipz
  8054  16CF  2EC9               	goto	u251_25
  8055  16D0  0836               	movf	??___ftdiv,w
  8056  16D1  00B9               	movwf	??___ftdiv+3
  8057  16D2  0839               	movf	??___ftdiv+3,w
  8058  16D3  06BF               	xorwf	___ftdiv@sign,f
  8059  16D4  3080               	movlw	128
  8060  16D5  00B6               	movwf	??___ftdiv
  8061  16D6  0836               	movf	??___ftdiv,w
  8062  16D7  05BF               	andwf	___ftdiv@sign,f
  8063  16D8  17B4               	bsf	___ftdiv@f1+1,7
  8064  16D9  30FF               	movlw	255
  8065  16DA  05B3               	andwf	___ftdiv@f1,f
  8066  16DB  30FF               	movlw	255
  8067  16DC  05B4               	andwf	___ftdiv@f1+1,f
  8068  16DD  3000               	movlw	0
  8069  16DE  05B5               	andwf	___ftdiv@f1+2,f
  8070  16DF  17B1               	bsf	___ftdiv@f2+1,7
  8071  16E0  30FF               	movlw	255
  8072  16E1  05B0               	andwf	___ftdiv@f2,f
  8073  16E2  30FF               	movlw	255
  8074  16E3  05B1               	andwf	___ftdiv@f2+1,f
  8075  16E4  3000               	movlw	0
  8076  16E5  05B2               	andwf	___ftdiv@f2+2,f
  8077  16E6  3018               	movlw	24
  8078  16E7  00B6               	movwf	??___ftdiv
  8079  16E8  0836               	movf	??___ftdiv,w
  8080  16E9  00BA               	movwf	___ftdiv@cntr
  8081  16EA                     i1l2367:	
  8082  16EA  3001               	movlw	1
  8083  16EB                     u252_25:	
  8084  16EB  1003               	clrc
  8085  16EC  0DBB               	rlf	___ftdiv@f3,f
  8086  16ED  0DBC               	rlf	___ftdiv@f3+1,f
  8087  16EE  0DBD               	rlf	___ftdiv@f3+2,f
  8088  16EF  3EFF               	addlw	-1
  8089  16F0  1D03               	skipz
  8090  16F1  2EEB               	goto	u252_25
  8091  16F2  0832               	movf	___ftdiv@f2+2,w
  8092  16F3  0235               	subwf	___ftdiv@f1+2,w
  8093  16F4  1D03               	skipz
  8094  16F5  2EFC               	goto	u253_25
  8095  16F6  0831               	movf	___ftdiv@f2+1,w
  8096  16F7  0234               	subwf	___ftdiv@f1+1,w
  8097  16F8  1D03               	skipz
  8098  16F9  2EFC               	goto	u253_25
  8099  16FA  0830               	movf	___ftdiv@f2,w
  8100  16FB  0233               	subwf	___ftdiv@f1,w
  8101  16FC                     u253_25:	
  8102  16FC  1C03               	skipc
  8103  16FD  2F09               	goto	i1l2375
  8104  16FE  0830               	movf	___ftdiv@f2,w
  8105  16FF  02B3               	subwf	___ftdiv@f1,f
  8106  1700  0831               	movf	___ftdiv@f2+1,w
  8107  1701  1C03               	skipc
  8108  1702  0F31               	incfsz	___ftdiv@f2+1,w
  8109  1703  02B4               	subwf	___ftdiv@f1+1,f
  8110  1704  0832               	movf	___ftdiv@f2+2,w
  8111  1705  1C03               	skipc
  8112  1706  0A32               	incf	___ftdiv@f2+2,w
  8113  1707  02B5               	subwf	___ftdiv@f1+2,f
  8114  1708  143B               	bsf	___ftdiv@f3,0
  8115  1709                     i1l2375:	
  8116  1709  3001               	movlw	1
  8117  170A                     u254_25:	
  8118  170A  1003               	clrc
  8119  170B  0DB3               	rlf	___ftdiv@f1,f
  8120  170C  0DB4               	rlf	___ftdiv@f1+1,f
  8121  170D  0DB5               	rlf	___ftdiv@f1+2,f
  8122  170E  3EFF               	addlw	-1
  8123  170F  1D03               	skipz
  8124  1710  2F0A               	goto	u254_25
  8125  1711  3001               	movlw	1
  8126  1712  02BA               	subwf	___ftdiv@cntr,f
  8127  1713  1D03               	btfss	3,2
  8128  1714  2EEA               	goto	i1l2367
  8129  1715  083B               	movf	___ftdiv@f3,w
  8130  1716  00F0               	movwf	___ftpack@arg
  8131  1717  083C               	movf	___ftdiv@f3+1,w
  8132  1718  00F1               	movwf	___ftpack@arg+1
  8133  1719  083D               	movf	___ftdiv@f3+2,w
  8134  171A  00F2               	movwf	___ftpack@arg+2
  8135  171B  083E               	movf	___ftdiv@exp,w
  8136  171C  00B6               	movwf	??___ftdiv
  8137  171D  0836               	movf	??___ftdiv,w
  8138  171E  00F3               	movwf	___ftpack@exp
  8139  171F  083F               	movf	___ftdiv@sign,w
  8140  1720  00B7               	movwf	??___ftdiv+1
  8141  1721  0837               	movf	??___ftdiv+1,w
  8142  1722  00F4               	movwf	___ftpack@sign
  8143  1723  160A  118A  25A4   	fcall	___ftpack
  8144  1726  0870               	movf	?___ftpack,w
  8145  1727  1283               	bcf	3,5	;RP0=0, select bank0
  8146  1728  1303               	bcf	3,6	;RP1=0, select bank0
  8147  1729  00B0               	movwf	?___ftdiv
  8148  172A  0871               	movf	?___ftpack+1,w
  8149  172B  00B1               	movwf	?___ftdiv+1
  8150  172C  0872               	movf	?___ftpack+2,w
  8151  172D  00B2               	movwf	?___ftdiv+2
  8152  172E  0008               	return
  8153  172F                     __end_of___ftdiv:	
  8154                           
  8155                           	psect	text34
  8156  0994                     __ptext34:	
  8157 ;; *************** function ___ftadd *****************
  8158 ;; Defined at:
  8159 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;  f1              3    3[BANK0 ] float 
  8162 ;;  f2              3    6[BANK0 ] float 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;  exp1            1   15[BANK0 ] unsigned char 
  8165 ;;  exp2            1   14[BANK0 ] unsigned char 
  8166 ;;  sign            1   13[BANK0 ] unsigned char 
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  3    3[BANK0 ] float 
  8169 ;; Registers used:
  8170 ;;		wreg, status,2, status,0, pclath, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8176 ;;      Params:         0       6       0       0       0
  8177 ;;      Locals:         0       3       0       0       0
  8178 ;;      Temps:          0       4       0       0       0
  8179 ;;      Totals:         0      13       0       0       0
  8180 ;;Total ram usage:       13 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; Hardware stack levels required when called:    1
  8183 ;; This function calls:
  8184 ;;		___ftpack
  8185 ;; This function is called by:
  8186 ;;		_trimf
  8187 ;;		_trapmf
  8188 ;;		_Fuzzy
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           
  8193                           ;psect for function ___ftadd
  8194  0994                     ___ftadd:	
  8195                           
  8196                           ;incstack = 0
  8197                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8198  0994  1283               	bcf	3,5	;RP0=0, select bank0
  8199  0995  1303               	bcf	3,6	;RP1=0, select bank0
  8200  0996  0823               	movf	___ftadd@f1,w
  8201  0997  00A9               	movwf	??___ftadd
  8202  0998  0824               	movf	___ftadd@f1+1,w
  8203  0999  00AA               	movwf	??___ftadd+1
  8204  099A  0825               	movf	___ftadd@f1+2,w
  8205  099B  00AB               	movwf	??___ftadd+2
  8206  099C  1003               	clrc
  8207  099D  0D2A               	rlf	??___ftadd+1,w
  8208  099E  0D2B               	rlf	??___ftadd+2,w
  8209  099F  00AC               	movwf	??___ftadd+3
  8210  09A0  082C               	movf	??___ftadd+3,w
  8211  09A1  00AF               	movwf	___ftadd@exp1
  8212  09A2  0826               	movf	___ftadd@f2,w
  8213  09A3  00A9               	movwf	??___ftadd
  8214  09A4  0827               	movf	___ftadd@f2+1,w
  8215  09A5  00AA               	movwf	??___ftadd+1
  8216  09A6  0828               	movf	___ftadd@f2+2,w
  8217  09A7  00AB               	movwf	??___ftadd+2
  8218  09A8  1003               	clrc
  8219  09A9  0D2A               	rlf	??___ftadd+1,w
  8220  09AA  0D2B               	rlf	??___ftadd+2,w
  8221  09AB  00AC               	movwf	??___ftadd+3
  8222  09AC  082C               	movf	??___ftadd+3,w
  8223  09AD  00AE               	movwf	___ftadd@exp2
  8224  09AE  082F               	movf	___ftadd@exp1,w
  8225  09AF  1903               	btfsc	3,2
  8226  09B0  29BD               	goto	i1l2277
  8227  09B1  082E               	movf	___ftadd@exp2,w
  8228  09B2  022F               	subwf	___ftadd@exp1,w
  8229  09B3  1803               	skipnc
  8230  09B4  29C4               	goto	i1l2281
  8231  09B5  032F               	decf	___ftadd@exp1,w
  8232  09B6  3AFF               	xorlw	255
  8233  09B7  072E               	addwf	___ftadd@exp2,w
  8234  09B8  00A9               	movwf	??___ftadd
  8235  09B9  3019               	movlw	25
  8236  09BA  0229               	subwf	??___ftadd,w
  8237  09BB  1C03               	skipc
  8238  09BC  29C4               	goto	i1l2281
  8239  09BD                     i1l2277:	
  8240  09BD  0826               	movf	___ftadd@f2,w
  8241  09BE  00A3               	movwf	?___ftadd
  8242  09BF  0827               	movf	___ftadd@f2+1,w
  8243  09C0  00A4               	movwf	?___ftadd+1
  8244  09C1  0828               	movf	___ftadd@f2+2,w
  8245  09C2  00A5               	movwf	?___ftadd+2
  8246  09C3  0008               	return
  8247  09C4                     i1l2281:	
  8248  09C4  082E               	movf	___ftadd@exp2,w
  8249  09C5  1903               	btfsc	3,2
  8250  09C6  0008               	return
  8251  09C7  082F               	movf	___ftadd@exp1,w
  8252  09C8  022E               	subwf	___ftadd@exp2,w
  8253  09C9  1803               	skipnc
  8254  09CA  29D3               	goto	i1l2287
  8255  09CB  032E               	decf	___ftadd@exp2,w
  8256  09CC  3AFF               	xorlw	255
  8257  09CD  072F               	addwf	___ftadd@exp1,w
  8258  09CE  00A9               	movwf	??___ftadd
  8259  09CF  3019               	movlw	25
  8260  09D0  0229               	subwf	??___ftadd,w
  8261  09D1  1803               	btfsc	3,0
  8262  09D2  0008               	return
  8263  09D3                     i1l2287:	
  8264  09D3  3006               	movlw	6
  8265  09D4  00A9               	movwf	??___ftadd
  8266  09D5  0829               	movf	??___ftadd,w
  8267  09D6  00AD               	movwf	___ftadd@sign
  8268  09D7  1BA5               	btfsc	___ftadd@f1+2,7
  8269  09D8  17AD               	bsf	___ftadd@sign,7
  8270  09D9  1BA8               	btfsc	___ftadd@f2+2,7
  8271  09DA  172D               	bsf	___ftadd@sign,6
  8272  09DB  17A4               	bsf	___ftadd@f1+1,7
  8273  09DC  30FF               	movlw	255
  8274  09DD  05A3               	andwf	___ftadd@f1,f
  8275  09DE  30FF               	movlw	255
  8276  09DF  05A4               	andwf	___ftadd@f1+1,f
  8277  09E0  3000               	movlw	0
  8278  09E1  05A5               	andwf	___ftadd@f1+2,f
  8279  09E2  17A7               	bsf	___ftadd@f2+1,7
  8280  09E3  30FF               	movlw	255
  8281  09E4  05A6               	andwf	___ftadd@f2,f
  8282  09E5  30FF               	movlw	255
  8283  09E6  05A7               	andwf	___ftadd@f2+1,f
  8284  09E7  3000               	movlw	0
  8285  09E8  05A8               	andwf	___ftadd@f2+2,f
  8286  09E9  082E               	movf	___ftadd@exp2,w
  8287  09EA  022F               	subwf	___ftadd@exp1,w
  8288  09EB  1803               	skipnc
  8289  09EC  2A13               	goto	i1l2309
  8290  09ED                     i1l2299:	
  8291  09ED  3001               	movlw	1
  8292  09EE                     u233_25:	
  8293  09EE  1003               	clrc
  8294  09EF  0DA6               	rlf	___ftadd@f2,f
  8295  09F0  0DA7               	rlf	___ftadd@f2+1,f
  8296  09F1  0DA8               	rlf	___ftadd@f2+2,f
  8297  09F2  3EFF               	addlw	-1
  8298  09F3  1D03               	skipz
  8299  09F4  29EE               	goto	u233_25
  8300  09F5  3001               	movlw	1
  8301  09F6  02AE               	subwf	___ftadd@exp2,f
  8302  09F7  082E               	movf	___ftadd@exp2,w
  8303  09F8  062F               	xorwf	___ftadd@exp1,w
  8304  09F9  1903               	skipnz
  8305  09FA  2A0E               	goto	i1l2307
  8306  09FB  3001               	movlw	1
  8307  09FC  02AD               	subwf	___ftadd@sign,f
  8308  09FD  082D               	movf	___ftadd@sign,w
  8309  09FE  3907               	andlw	7
  8310  09FF  1903               	btfsc	3,2
  8311  0A00  2A0E               	goto	i1l2307
  8312  0A01  29ED               	goto	i1l2299
  8313  0A02                     i1l2305:	
  8314  0A02  3001               	movlw	1
  8315  0A03                     u236_25:	
  8316  0A03  1003               	clrc
  8317  0A04  0CA5               	rrf	___ftadd@f1+2,f
  8318  0A05  0CA4               	rrf	___ftadd@f1+1,f
  8319  0A06  0CA3               	rrf	___ftadd@f1,f
  8320  0A07  3EFF               	addlw	-1
  8321  0A08  1D03               	skipz
  8322  0A09  2A03               	goto	u236_25
  8323  0A0A  3001               	movlw	1
  8324  0A0B  00A9               	movwf	??___ftadd
  8325  0A0C  0829               	movf	??___ftadd,w
  8326  0A0D  07AF               	addwf	___ftadd@exp1,f
  8327  0A0E                     i1l2307:	
  8328  0A0E  082F               	movf	___ftadd@exp1,w
  8329  0A0F  062E               	xorwf	___ftadd@exp2,w
  8330  0A10  1903               	btfsc	3,2
  8331  0A11  2A3C               	goto	i1l785
  8332  0A12  2A02               	goto	i1l2305
  8333  0A13                     i1l2309:	
  8334  0A13  082F               	movf	___ftadd@exp1,w
  8335  0A14  022E               	subwf	___ftadd@exp2,w
  8336  0A15  1803               	skipnc
  8337  0A16  2A3C               	goto	i1l785
  8338  0A17                     i1l2311:	
  8339  0A17  3001               	movlw	1
  8340  0A18                     u239_25:	
  8341  0A18  1003               	clrc
  8342  0A19  0DA3               	rlf	___ftadd@f1,f
  8343  0A1A  0DA4               	rlf	___ftadd@f1+1,f
  8344  0A1B  0DA5               	rlf	___ftadd@f1+2,f
  8345  0A1C  3EFF               	addlw	-1
  8346  0A1D  1D03               	skipz
  8347  0A1E  2A18               	goto	u239_25
  8348  0A1F  3001               	movlw	1
  8349  0A20  02AF               	subwf	___ftadd@exp1,f
  8350  0A21  082E               	movf	___ftadd@exp2,w
  8351  0A22  062F               	xorwf	___ftadd@exp1,w
  8352  0A23  1903               	skipnz
  8353  0A24  2A38               	goto	i1l2319
  8354  0A25  3001               	movlw	1
  8355  0A26  02AD               	subwf	___ftadd@sign,f
  8356  0A27  082D               	movf	___ftadd@sign,w
  8357  0A28  3907               	andlw	7
  8358  0A29  1903               	btfsc	3,2
  8359  0A2A  2A38               	goto	i1l2319
  8360  0A2B  2A17               	goto	i1l2311
  8361  0A2C                     i1l2317:	
  8362  0A2C  3001               	movlw	1
  8363  0A2D                     u242_25:	
  8364  0A2D  1003               	clrc
  8365  0A2E  0CA8               	rrf	___ftadd@f2+2,f
  8366  0A2F  0CA7               	rrf	___ftadd@f2+1,f
  8367  0A30  0CA6               	rrf	___ftadd@f2,f
  8368  0A31  3EFF               	addlw	-1
  8369  0A32  1D03               	skipz
  8370  0A33  2A2D               	goto	u242_25
  8371  0A34  3001               	movlw	1
  8372  0A35  00A9               	movwf	??___ftadd
  8373  0A36  0829               	movf	??___ftadd,w
  8374  0A37  07AE               	addwf	___ftadd@exp2,f
  8375  0A38                     i1l2319:	
  8376  0A38  082F               	movf	___ftadd@exp1,w
  8377  0A39  062E               	xorwf	___ftadd@exp2,w
  8378  0A3A  1D03               	skipz
  8379  0A3B  2A2C               	goto	i1l2317
  8380  0A3C                     i1l785:	
  8381  0A3C  1FAD               	btfss	___ftadd@sign,7
  8382  0A3D  2A4E               	goto	i1l2323
  8383  0A3E  30FF               	movlw	255
  8384  0A3F  06A3               	xorwf	___ftadd@f1,f
  8385  0A40  30FF               	movlw	255
  8386  0A41  06A4               	xorwf	___ftadd@f1+1,f
  8387  0A42  30FF               	movlw	255
  8388  0A43  06A5               	xorwf	___ftadd@f1+2,f
  8389  0A44  3001               	movlw	1
  8390  0A45  07A3               	addwf	___ftadd@f1,f
  8391  0A46  3000               	movlw	0
  8392  0A47  1803               	skipnc
  8393  0A48  3001               	movlw	1
  8394  0A49  07A4               	addwf	___ftadd@f1+1,f
  8395  0A4A  3000               	movlw	0
  8396  0A4B  1803               	skipnc
  8397  0A4C  3001               	movlw	1
  8398  0A4D  07A5               	addwf	___ftadd@f1+2,f
  8399  0A4E                     i1l2323:	
  8400  0A4E  1F2D               	btfss	___ftadd@sign,6
  8401  0A4F  2A60               	goto	i1l2327
  8402  0A50  30FF               	movlw	255
  8403  0A51  06A6               	xorwf	___ftadd@f2,f
  8404  0A52  30FF               	movlw	255
  8405  0A53  06A7               	xorwf	___ftadd@f2+1,f
  8406  0A54  30FF               	movlw	255
  8407  0A55  06A8               	xorwf	___ftadd@f2+2,f
  8408  0A56  3001               	movlw	1
  8409  0A57  07A6               	addwf	___ftadd@f2,f
  8410  0A58  3000               	movlw	0
  8411  0A59  1803               	skipnc
  8412  0A5A  3001               	movlw	1
  8413  0A5B  07A7               	addwf	___ftadd@f2+1,f
  8414  0A5C  3000               	movlw	0
  8415  0A5D  1803               	skipnc
  8416  0A5E  3001               	movlw	1
  8417  0A5F  07A8               	addwf	___ftadd@f2+2,f
  8418  0A60                     i1l2327:	
  8419  0A60  01AD               	clrf	___ftadd@sign
  8420  0A61  0823               	movf	___ftadd@f1,w
  8421  0A62  07A6               	addwf	___ftadd@f2,f
  8422  0A63  0824               	movf	___ftadd@f1+1,w
  8423  0A64  1103               	clrz
  8424  0A65  1803               	skipnc
  8425  0A66  0A24               	incf	___ftadd@f1+1,w
  8426  0A67  1D03               	btfss	3,2
  8427  0A68  07A7               	addwf	___ftadd@f2+1,f
  8428  0A69  0825               	movf	___ftadd@f1+2,w
  8429  0A6A  1103               	clrz
  8430  0A6B  1803               	skipnc
  8431  0A6C  0A25               	incf	___ftadd@f1+2,w
  8432  0A6D  1D03               	btfss	3,2
  8433  0A6E  07A8               	addwf	___ftadd@f2+2,f
  8434  0A6F  1FA8               	btfss	___ftadd@f2+2,7
  8435  0A70  2A83               	goto	i1l2337
  8436  0A71  30FF               	movlw	255
  8437  0A72  06A6               	xorwf	___ftadd@f2,f
  8438  0A73  30FF               	movlw	255
  8439  0A74  06A7               	xorwf	___ftadd@f2+1,f
  8440  0A75  30FF               	movlw	255
  8441  0A76  06A8               	xorwf	___ftadd@f2+2,f
  8442  0A77  3001               	movlw	1
  8443  0A78  07A6               	addwf	___ftadd@f2,f
  8444  0A79  3000               	movlw	0
  8445  0A7A  1803               	skipnc
  8446  0A7B  3001               	movlw	1
  8447  0A7C  07A7               	addwf	___ftadd@f2+1,f
  8448  0A7D  3000               	movlw	0
  8449  0A7E  1803               	skipnc
  8450  0A7F  3001               	movlw	1
  8451  0A80  07A8               	addwf	___ftadd@f2+2,f
  8452  0A81  01AD               	clrf	___ftadd@sign
  8453  0A82  0AAD               	incf	___ftadd@sign,f
  8454  0A83                     i1l2337:	
  8455  0A83  0826               	movf	___ftadd@f2,w
  8456  0A84  00F0               	movwf	___ftpack@arg
  8457  0A85  0827               	movf	___ftadd@f2+1,w
  8458  0A86  00F1               	movwf	___ftpack@arg+1
  8459  0A87  0828               	movf	___ftadd@f2+2,w
  8460  0A88  00F2               	movwf	___ftpack@arg+2
  8461  0A89  082F               	movf	___ftadd@exp1,w
  8462  0A8A  00A9               	movwf	??___ftadd
  8463  0A8B  0829               	movf	??___ftadd,w
  8464  0A8C  00F3               	movwf	___ftpack@exp
  8465  0A8D  082D               	movf	___ftadd@sign,w
  8466  0A8E  00AA               	movwf	??___ftadd+1
  8467  0A8F  082A               	movf	??___ftadd+1,w
  8468  0A90  00F4               	movwf	___ftpack@sign
  8469  0A91  160A  118A  25A4   	fcall	___ftpack
  8470  0A94  0870               	movf	?___ftpack,w
  8471  0A95  1283               	bcf	3,5	;RP0=0, select bank0
  8472  0A96  1303               	bcf	3,6	;RP1=0, select bank0
  8473  0A97  00A3               	movwf	?___ftadd
  8474  0A98  0871               	movf	?___ftpack+1,w
  8475  0A99  00A4               	movwf	?___ftadd+1
  8476  0A9A  0872               	movf	?___ftpack+2,w
  8477  0A9B  00A5               	movwf	?___ftadd+2
  8478  0A9C  0008               	return
  8479  0A9D                     __end_of___ftadd:	
  8480                           
  8481                           	psect	text35
  8482  12B8                     __ptext35:	
  8483 ;; *************** function _max_val *****************
  8484 ;; Defined at:
  8485 ;;		line 135 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  a               3   28[BANK0 ] float 
  8488 ;;  b               3   31[BANK0 ] float 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;		None
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  3   28[BANK0 ] float 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2, status,0, pclath, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8500 ;;      Params:         0       6       0       0       0
  8501 ;;      Locals:         0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0
  8503 ;;      Totals:         0       6       0       0       0
  8504 ;;Total ram usage:        6 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    1
  8507 ;; This function calls:
  8508 ;;		___ftge
  8509 ;; This function is called by:
  8510 ;;		_Fuzzy
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           
  8515                           ;psect for function _max_val
  8516  12B8                     _max_val:	
  8517                           
  8518                           ;main.c: 137: if (a > b)
  8519                           
  8520                           ;incstack = 0
  8521                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8522  12B8  1283               	bcf	3,5	;RP0=0, select bank0
  8523  12B9  1303               	bcf	3,6	;RP1=0, select bank0
  8524  12BA  083F               	movf	max_val@b,w
  8525  12BB  00B0               	movwf	___ftge@ff1
  8526  12BC  0840               	movf	max_val@b+1,w
  8527  12BD  00B1               	movwf	___ftge@ff1+1
  8528  12BE  0841               	movf	max_val@b+2,w
  8529  12BF  00B2               	movwf	___ftge@ff1+2
  8530  12C0  083C               	movf	max_val@a,w
  8531  12C1  00B3               	movwf	___ftge@ff2
  8532  12C2  083D               	movf	max_val@a+1,w
  8533  12C3  00B4               	movwf	___ftge@ff2+1
  8534  12C4  083E               	movf	max_val@a+2,w
  8535  12C5  00B5               	movwf	___ftge@ff2+2
  8536  12C6  160A  118A  2545  160A  118A  	fcall	___ftge
  8537  12CB  1C03               	btfss	3,0
  8538  12CC  0008               	return
  8539                           
  8540                           ;main.c: 139: else
  8541                           ;main.c: 140: return b;
  8542                           
  8543                           ;main.c: 138: return a;
  8544  12CD  1283               	bcf	3,5	;RP0=0, select bank0
  8545  12CE  1303               	bcf	3,6	;RP1=0, select bank0
  8546  12CF  083F               	movf	max_val@b,w
  8547  12D0  00BC               	movwf	?_max_val
  8548  12D1  0840               	movf	max_val@b+1,w
  8549  12D2  00BD               	movwf	?_max_val+1
  8550  12D3  0841               	movf	max_val@b+2,w
  8551  12D4  00BE               	movwf	?_max_val+2
  8552  12D5  0008               	return
  8553  12D6                     __end_of_max_val:	
  8554                           
  8555                           	psect	text36
  8556  1545                     __ptext36:	
  8557 ;; *************** function ___ftge *****************
  8558 ;; Defined at:
  8559 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  ff1             3   16[BANK0 ] float 
  8562 ;;  ff2             3   19[BANK0 ] float 
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;		None
  8565 ;; Return value:  Size  Location     Type
  8566 ;;		None               void
  8567 ;; Registers used:
  8568 ;;		wreg, status,2, status,0
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8574 ;;      Params:         0       6       0       0       0
  8575 ;;      Locals:         0       0       0       0       0
  8576 ;;      Temps:          0       6       0       0       0
  8577 ;;      Totals:         0      12       0       0       0
  8578 ;;Total ram usage:       12 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; This function calls:
  8581 ;;		Nothing
  8582 ;; This function is called by:
  8583 ;;		_trimf
  8584 ;;		_trapmf
  8585 ;;		_max_val
  8586 ;;		_Fuzzy
  8587 ;;		_min_val
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           
  8592                           ;psect for function ___ftge
  8593  1545                     ___ftge:	
  8594                           
  8595                           ;incstack = 0
  8596                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8597  1545  1283               	bcf	3,5	;RP0=0, select bank0
  8598  1546  1303               	bcf	3,6	;RP1=0, select bank0
  8599  1547  1FB2               	btfss	___ftge@ff1+2,7
  8600  1548  2D6E               	goto	i1l2387
  8601  1549  3000               	movlw	0
  8602  154A  00B6               	movwf	??___ftge
  8603  154B  3000               	movlw	0
  8604  154C  00B7               	movwf	??___ftge+1
  8605  154D  3080               	movlw	128
  8606  154E  00B8               	movwf	??___ftge+2
  8607  154F  0930               	comf	___ftge@ff1,w
  8608  1550  00B9               	movwf	??___ftge+3
  8609  1551  0931               	comf	___ftge@ff1+1,w
  8610  1552  00BA               	movwf	??___ftge+4
  8611  1553  0932               	comf	___ftge@ff1+2,w
  8612  1554  00BB               	movwf	??___ftge+5
  8613  1555  0AB9               	incf	??___ftge+3,f
  8614  1556  1903               	skipnz
  8615  1557  0ABA               	incf	??___ftge+4,f
  8616  1558  1903               	skipnz
  8617  1559  0ABB               	incf	??___ftge+5,f
  8618  155A  0839               	movf	??___ftge+3,w
  8619  155B  07B6               	addwf	??___ftge,f
  8620  155C  083A               	movf	??___ftge+4,w
  8621  155D  1803               	skipnc
  8622  155E  0F3A               	incfsz	??___ftge+4,w
  8623  155F  2D61               	goto	u257_21
  8624  1560  2D62               	goto	u257_22
  8625  1561                     u257_21:	
  8626  1561  07B7               	addwf	??___ftge+1,f
  8627  1562                     u257_22:	
  8628  1562  083B               	movf	??___ftge+5,w
  8629  1563  1803               	skipnc
  8630  1564  0F3B               	incfsz	??___ftge+5,w
  8631  1565  2D67               	goto	u257_23
  8632  1566  2D68               	goto	u257_24
  8633  1567                     u257_23:	
  8634  1567  07B8               	addwf	??___ftge+2,f
  8635  1568                     u257_24:	
  8636  1568  0836               	movf	??___ftge,w
  8637  1569  00B0               	movwf	___ftge@ff1
  8638  156A  0837               	movf	??___ftge+1,w
  8639  156B  00B1               	movwf	___ftge@ff1+1
  8640  156C  0838               	movf	??___ftge+2,w
  8641  156D  00B2               	movwf	___ftge@ff1+2
  8642  156E                     i1l2387:	
  8643  156E  1FB5               	btfss	___ftge@ff2+2,7
  8644  156F  2D95               	goto	i1l2391
  8645  1570  3000               	movlw	0
  8646  1571  00B6               	movwf	??___ftge
  8647  1572  3000               	movlw	0
  8648  1573  00B7               	movwf	??___ftge+1
  8649  1574  3080               	movlw	128
  8650  1575  00B8               	movwf	??___ftge+2
  8651  1576  0933               	comf	___ftge@ff2,w
  8652  1577  00B9               	movwf	??___ftge+3
  8653  1578  0934               	comf	___ftge@ff2+1,w
  8654  1579  00BA               	movwf	??___ftge+4
  8655  157A  0935               	comf	___ftge@ff2+2,w
  8656  157B  00BB               	movwf	??___ftge+5
  8657  157C  0AB9               	incf	??___ftge+3,f
  8658  157D  1903               	skipnz
  8659  157E  0ABA               	incf	??___ftge+4,f
  8660  157F  1903               	skipnz
  8661  1580  0ABB               	incf	??___ftge+5,f
  8662  1581  0839               	movf	??___ftge+3,w
  8663  1582  07B6               	addwf	??___ftge,f
  8664  1583  083A               	movf	??___ftge+4,w
  8665  1584  1803               	skipnc
  8666  1585  0F3A               	incfsz	??___ftge+4,w
  8667  1586  2D88               	goto	u259_21
  8668  1587  2D89               	goto	u259_22
  8669  1588                     u259_21:	
  8670  1588  07B7               	addwf	??___ftge+1,f
  8671  1589                     u259_22:	
  8672  1589  083B               	movf	??___ftge+5,w
  8673  158A  1803               	skipnc
  8674  158B  0F3B               	incfsz	??___ftge+5,w
  8675  158C  2D8E               	goto	u259_23
  8676  158D  2D8F               	goto	u259_24
  8677  158E                     u259_23:	
  8678  158E  07B8               	addwf	??___ftge+2,f
  8679  158F                     u259_24:	
  8680  158F  0836               	movf	??___ftge,w
  8681  1590  00B3               	movwf	___ftge@ff2
  8682  1591  0837               	movf	??___ftge+1,w
  8683  1592  00B4               	movwf	___ftge@ff2+1
  8684  1593  0838               	movf	??___ftge+2,w
  8685  1594  00B5               	movwf	___ftge@ff2+2
  8686  1595                     i1l2391:	
  8687  1595  3080               	movlw	128
  8688  1596  06B2               	xorwf	___ftge@ff1+2,f
  8689  1597  3080               	movlw	128
  8690  1598  06B5               	xorwf	___ftge@ff2+2,f
  8691  1599  0835               	movf	___ftge@ff2+2,w
  8692  159A  0232               	subwf	___ftge@ff1+2,w
  8693  159B  1D03               	skipz
  8694  159C  0008               	return
  8695  159D  0834               	movf	___ftge@ff2+1,w
  8696  159E  0231               	subwf	___ftge@ff1+1,w
  8697  159F  1D03               	skipz
  8698  15A0  0008               	return
  8699  15A1  0833               	movf	___ftge@ff2,w
  8700  15A2  0230               	subwf	___ftge@ff1,w
  8701  15A3  0008               	return
  8702  15A4                     __end_of___ftge:	
  8703                           
  8704                           	psect	text37
  8705  1256                     __ptext37:	
  8706 ;; *************** function ___lwtoft *****************
  8707 ;; Defined at:
  8708 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  c               2    8[COMMON] unsigned int 
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;		None
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  3    8[COMMON] float 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2, status,0, pclath, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8722 ;;      Params:         3       0       0       0       0
  8723 ;;      Locals:         0       0       0       0       0
  8724 ;;      Temps:          1       0       0       0       0
  8725 ;;      Totals:         4       0       0       0       0
  8726 ;;Total ram usage:        4 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:    1
  8729 ;; This function calls:
  8730 ;;		___ftpack
  8731 ;; This function is called by:
  8732 ;;		_Fuzzy
  8733 ;;		_ISR
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           
  8738                           ;psect for function ___lwtoft
  8739  1256                     ___lwtoft:	
  8740                           
  8741                           ;incstack = 0
  8742                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8743  1256  0878               	movf	___lwtoft@c,w
  8744  1257  00F0               	movwf	___ftpack@arg
  8745  1258  0879               	movf	___lwtoft@c+1,w
  8746  1259  00F1               	movwf	___ftpack@arg+1
  8747  125A  01F2               	clrf	___ftpack@arg+2
  8748  125B  308E               	movlw	142
  8749  125C  00FB               	movwf	??___lwtoft
  8750  125D  087B               	movf	??___lwtoft,w
  8751  125E  00F3               	movwf	___ftpack@exp
  8752  125F  01F4               	clrf	___ftpack@sign
  8753  1260  160A  118A  25A4   	fcall	___ftpack
  8754  1263  0870               	movf	?___ftpack,w
  8755  1264  00F8               	movwf	?___lwtoft
  8756  1265  0871               	movf	?___ftpack+1,w
  8757  1266  00F9               	movwf	?___lwtoft+1
  8758  1267  0872               	movf	?___ftpack+2,w
  8759  1268  00FA               	movwf	?___lwtoft+2
  8760  1269  0008               	return
  8761  126A                     __end_of___lwtoft:	
  8762                           
  8763                           	psect	text38
  8764  081A                     __ptext38:	
  8765 ;; *************** function ___fttol *****************
  8766 ;; Defined at:
  8767 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;  f1              3   16[BANK0 ] float 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;  lval            4   25[BANK0 ] unsigned long 
  8772 ;;  exp1            1   29[BANK0 ] unsigned char 
  8773 ;;  sign1           1   24[BANK0 ] unsigned char 
  8774 ;; Return value:  Size  Location     Type
  8775 ;;                  4   16[BANK0 ] long 
  8776 ;; Registers used:
  8777 ;;		wreg, status,2, status,0
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8783 ;;      Params:         0       4       0       0       0
  8784 ;;      Locals:         0       6       0       0       0
  8785 ;;      Temps:          0       4       0       0       0
  8786 ;;      Totals:         0      14       0       0       0
  8787 ;;Total ram usage:       14 bytes
  8788 ;; Hardware stack levels used:    1
  8789 ;; This function calls:
  8790 ;;		Nothing
  8791 ;; This function is called by:
  8792 ;;		_Fuzzy
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           
  8797                           ;psect for function ___fttol
  8798  081A                     ___fttol:	
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8802  081A  1283               	bcf	3,5	;RP0=0, select bank0
  8803  081B  1303               	bcf	3,6	;RP1=0, select bank0
  8804  081C  0830               	movf	___fttol@f1,w
  8805  081D  00B4               	movwf	??___fttol
  8806  081E  0831               	movf	___fttol@f1+1,w
  8807  081F  00B5               	movwf	??___fttol+1
  8808  0820  0832               	movf	___fttol@f1+2,w
  8809  0821  00B6               	movwf	??___fttol+2
  8810  0822  1003               	clrc
  8811  0823  0D35               	rlf	??___fttol+1,w
  8812  0824  0D36               	rlf	??___fttol+2,w
  8813  0825  00B7               	movwf	??___fttol+3
  8814  0826  0837               	movf	??___fttol+3,w
  8815  0827  00BD               	movwf	___fttol@exp1
  8816  0828  08BD               	movf	___fttol@exp1,f
  8817  0829  1D03               	skipz
  8818  082A  2834               	goto	i1l2619
  8819  082B  3000               	movlw	0
  8820  082C  00B3               	movwf	?___fttol+3
  8821  082D  3000               	movlw	0
  8822  082E  00B2               	movwf	?___fttol+2
  8823  082F  3000               	movlw	0
  8824  0830  00B1               	movwf	?___fttol+1
  8825  0831  3000               	movlw	0
  8826  0832  00B0               	movwf	?___fttol
  8827  0833  0008               	return
  8828  0834                     i1l2619:	
  8829  0834  0830               	movf	___fttol@f1,w
  8830  0835  00B4               	movwf	??___fttol
  8831  0836  0831               	movf	___fttol@f1+1,w
  8832  0837  00B5               	movwf	??___fttol+1
  8833  0838  0832               	movf	___fttol@f1+2,w
  8834  0839  00B6               	movwf	??___fttol+2
  8835  083A  3017               	movlw	23
  8836  083B                     u309_25:	
  8837  083B  1003               	clrc
  8838  083C  0CB6               	rrf	??___fttol+2,f
  8839  083D  0CB5               	rrf	??___fttol+1,f
  8840  083E  0CB4               	rrf	??___fttol,f
  8841  083F  3EFF               	addlw	-1
  8842  0840  1D03               	skipz
  8843  0841  283B               	goto	u309_25
  8844  0842  0834               	movf	??___fttol,w
  8845  0843  00B7               	movwf	??___fttol+3
  8846  0844  0837               	movf	??___fttol+3,w
  8847  0845  00B8               	movwf	___fttol@sign1
  8848  0846  17B1               	bsf	___fttol@f1+1,7
  8849  0847  30FF               	movlw	255
  8850  0848  05B0               	andwf	___fttol@f1,f
  8851  0849  30FF               	movlw	255
  8852  084A  05B1               	andwf	___fttol@f1+1,f
  8853  084B  3000               	movlw	0
  8854  084C  05B2               	andwf	___fttol@f1+2,f
  8855  084D  0830               	movf	___fttol@f1,w
  8856  084E  00B9               	movwf	___fttol@lval
  8857  084F  0831               	movf	___fttol@f1+1,w
  8858  0850  00BA               	movwf	___fttol@lval+1
  8859  0851  0832               	movf	___fttol@f1+2,w
  8860  0852  00BB               	movwf	___fttol@lval+2
  8861  0853  01BC               	clrf	___fttol@lval+3
  8862  0854  308E               	movlw	142
  8863  0855  02BD               	subwf	___fttol@exp1,f
  8864  0856  1FBD               	btfss	___fttol@exp1,7
  8865  0857  2876               	goto	i1l2639
  8866  0858  083D               	movf	___fttol@exp1,w
  8867  0859  3A80               	xorlw	128
  8868  085A  3E8F               	addlw	143
  8869  085B  1803               	skipnc
  8870  085C  2866               	goto	i1l2637
  8871  085D  3000               	movlw	0
  8872  085E  00B3               	movwf	?___fttol+3
  8873  085F  3000               	movlw	0
  8874  0860  00B2               	movwf	?___fttol+2
  8875  0861  3000               	movlw	0
  8876  0862  00B1               	movwf	?___fttol+1
  8877  0863  3000               	movlw	0
  8878  0864  00B0               	movwf	?___fttol
  8879  0865  0008               	return
  8880  0866                     i1l2637:	
  8881  0866  3001               	movlw	1
  8882  0867                     u312_25:	
  8883  0867  1003               	clrc
  8884  0868  0CBC               	rrf	___fttol@lval+3,f
  8885  0869  0CBB               	rrf	___fttol@lval+2,f
  8886  086A  0CBA               	rrf	___fttol@lval+1,f
  8887  086B  0CB9               	rrf	___fttol@lval,f
  8888  086C  3EFF               	addlw	-1
  8889  086D  1D03               	skipz
  8890  086E  2867               	goto	u312_25
  8891  086F  3001               	movlw	1
  8892  0870  00B4               	movwf	??___fttol
  8893  0871  0834               	movf	??___fttol,w
  8894  0872  07BD               	addwf	___fttol@exp1,f
  8895  0873  1903               	btfsc	3,2
  8896  0874  2891               	goto	i1l2649
  8897  0875  2866               	goto	i1l2637
  8898  0876                     i1l2639:	
  8899  0876  3018               	movlw	24
  8900  0877  023D               	subwf	___fttol@exp1,w
  8901  0878  1C03               	skipc
  8902  0879  288E               	goto	i1l2647
  8903  087A  3000               	movlw	0
  8904  087B  00B3               	movwf	?___fttol+3
  8905  087C  3000               	movlw	0
  8906  087D  00B2               	movwf	?___fttol+2
  8907  087E  3000               	movlw	0
  8908  087F  00B1               	movwf	?___fttol+1
  8909  0880  3000               	movlw	0
  8910  0881  00B0               	movwf	?___fttol
  8911  0882  0008               	return
  8912  0883                     i1l2645:	
  8913  0883  3001               	movlw	1
  8914  0884  00B4               	movwf	??___fttol
  8915  0885                     u315_25:	
  8916  0885  1003               	clrc
  8917  0886  0DB9               	rlf	___fttol@lval,f
  8918  0887  0DBA               	rlf	___fttol@lval+1,f
  8919  0888  0DBB               	rlf	___fttol@lval+2,f
  8920  0889  0DBC               	rlf	___fttol@lval+3,f
  8921  088A  0BB4               	decfsz	??___fttol,f
  8922  088B  2885               	goto	u315_25
  8923  088C  3001               	movlw	1
  8924  088D  02BD               	subwf	___fttol@exp1,f
  8925  088E                     i1l2647:	
  8926  088E  08BD               	movf	___fttol@exp1,f
  8927  088F  1D03               	skipz
  8928  0890  2883               	goto	i1l2645
  8929  0891                     i1l2649:	
  8930  0891  0838               	movf	___fttol@sign1,w
  8931  0892  1903               	btfsc	3,2
  8932  0893  289F               	goto	i1l2653
  8933  0894  09B9               	comf	___fttol@lval,f
  8934  0895  09BA               	comf	___fttol@lval+1,f
  8935  0896  09BB               	comf	___fttol@lval+2,f
  8936  0897  09BC               	comf	___fttol@lval+3,f
  8937  0898  0AB9               	incf	___fttol@lval,f
  8938  0899  1903               	skipnz
  8939  089A  0ABA               	incf	___fttol@lval+1,f
  8940  089B  1903               	skipnz
  8941  089C  0ABB               	incf	___fttol@lval+2,f
  8942  089D  1903               	skipnz
  8943  089E  0ABC               	incf	___fttol@lval+3,f
  8944  089F                     i1l2653:	
  8945  089F  083C               	movf	___fttol@lval+3,w
  8946  08A0  00B3               	movwf	?___fttol+3
  8947  08A1  083B               	movf	___fttol@lval+2,w
  8948  08A2  00B2               	movwf	?___fttol+2
  8949  08A3  083A               	movf	___fttol@lval+1,w
  8950  08A4  00B1               	movwf	?___fttol+1
  8951  08A5  0839               	movf	___fttol@lval,w
  8952  08A6  00B0               	movwf	?___fttol
  8953  08A7  0008               	return
  8954  08A8                     __end_of___fttol:	
  8955                           
  8956                           	psect	text39
  8957  172F                     __ptext39:	
  8958 ;; *************** function ___ftmul *****************
  8959 ;; Defined at:
  8960 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;  f1              3    8[COMMON] float 
  8963 ;;  f2              3   11[COMMON] float 
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  8966 ;;  sign            1    9[BANK0 ] unsigned char 
  8967 ;;  cntr            1    8[BANK0 ] unsigned char 
  8968 ;;  exp             1    4[BANK0 ] unsigned char 
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  3    8[COMMON] float 
  8971 ;; Registers used:
  8972 ;;		wreg, status,2, status,0, pclath, cstack
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8978 ;;      Params:         6       0       0       0       0
  8979 ;;      Locals:         0       6       0       0       0
  8980 ;;      Temps:          0       4       0       0       0
  8981 ;;      Totals:         6      10       0       0       0
  8982 ;;Total ram usage:       16 bytes
  8983 ;; Hardware stack levels used:    1
  8984 ;; Hardware stack levels required when called:    1
  8985 ;; This function calls:
  8986 ;;		___ftpack
  8987 ;; This function is called by:
  8988 ;;		_Fuzzy
  8989 ;; This function uses a non-reentrant model
  8990 ;;
  8991                           
  8992                           
  8993                           ;psect for function ___ftmul
  8994  172F                     ___ftmul:	
  8995                           
  8996                           ;incstack = 0
  8997                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8998  172F  0878               	movf	___ftmul@f1,w
  8999  1730  1283               	bcf	3,5	;RP0=0, select bank0
  9000  1731  1303               	bcf	3,6	;RP1=0, select bank0
  9001  1732  00A0               	movwf	??___ftmul
  9002  1733  0879               	movf	___ftmul@f1+1,w
  9003  1734  00A1               	movwf	??___ftmul+1
  9004  1735  087A               	movf	___ftmul@f1+2,w
  9005  1736  00A2               	movwf	??___ftmul+2
  9006  1737  1003               	clrc
  9007  1738  0D21               	rlf	??___ftmul+1,w
  9008  1739  0D22               	rlf	??___ftmul+2,w
  9009  173A  00A3               	movwf	??___ftmul+3
  9010  173B  0823               	movf	??___ftmul+3,w
  9011  173C  00A4               	movwf	___ftmul@exp
  9012  173D  08A4               	movf	___ftmul@exp,f
  9013  173E  1D03               	skipz
  9014  173F  2F47               	goto	i1l2569
  9015  1740  3000               	movlw	0
  9016  1741  00F8               	movwf	?___ftmul
  9017  1742  3000               	movlw	0
  9018  1743  00F9               	movwf	?___ftmul+1
  9019  1744  3000               	movlw	0
  9020  1745  00FA               	movwf	?___ftmul+2
  9021  1746  0008               	return
  9022  1747                     i1l2569:	
  9023  1747  087B               	movf	___ftmul@f2,w
  9024  1748  00A0               	movwf	??___ftmul
  9025  1749  087C               	movf	___ftmul@f2+1,w
  9026  174A  00A1               	movwf	??___ftmul+1
  9027  174B  087D               	movf	___ftmul@f2+2,w
  9028  174C  00A2               	movwf	??___ftmul+2
  9029  174D  1003               	clrc
  9030  174E  0D21               	rlf	??___ftmul+1,w
  9031  174F  0D22               	rlf	??___ftmul+2,w
  9032  1750  00A3               	movwf	??___ftmul+3
  9033  1751  0823               	movf	??___ftmul+3,w
  9034  1752  00A9               	movwf	___ftmul@sign
  9035  1753  08A9               	movf	___ftmul@sign,f
  9036  1754  1D03               	skipz
  9037  1755  2F5D               	goto	i1l2575
  9038  1756  3000               	movlw	0
  9039  1757  00F8               	movwf	?___ftmul
  9040  1758  3000               	movlw	0
  9041  1759  00F9               	movwf	?___ftmul+1
  9042  175A  3000               	movlw	0
  9043  175B  00FA               	movwf	?___ftmul+2
  9044  175C  0008               	return
  9045  175D                     i1l2575:	
  9046  175D  0829               	movf	___ftmul@sign,w
  9047  175E  3E7B               	addlw	123
  9048  175F  00A0               	movwf	??___ftmul
  9049  1760  0820               	movf	??___ftmul,w
  9050  1761  07A4               	addwf	___ftmul@exp,f
  9051  1762  0878               	movf	___ftmul@f1,w
  9052  1763  00A0               	movwf	??___ftmul
  9053  1764  0879               	movf	___ftmul@f1+1,w
  9054  1765  00A1               	movwf	??___ftmul+1
  9055  1766  087A               	movf	___ftmul@f1+2,w
  9056  1767  00A2               	movwf	??___ftmul+2
  9057  1768  3010               	movlw	16
  9058  1769                     u296_25:	
  9059  1769  1003               	clrc
  9060  176A  0CA2               	rrf	??___ftmul+2,f
  9061  176B  0CA1               	rrf	??___ftmul+1,f
  9062  176C  0CA0               	rrf	??___ftmul,f
  9063  176D  3EFF               	addlw	-1
  9064  176E  1D03               	skipz
  9065  176F  2F69               	goto	u296_25
  9066  1770  0820               	movf	??___ftmul,w
  9067  1771  00A3               	movwf	??___ftmul+3
  9068  1772  0823               	movf	??___ftmul+3,w
  9069  1773  00A9               	movwf	___ftmul@sign
  9070  1774  087B               	movf	___ftmul@f2,w
  9071  1775  00A0               	movwf	??___ftmul
  9072  1776  087C               	movf	___ftmul@f2+1,w
  9073  1777  00A1               	movwf	??___ftmul+1
  9074  1778  087D               	movf	___ftmul@f2+2,w
  9075  1779  00A2               	movwf	??___ftmul+2
  9076  177A  3010               	movlw	16
  9077  177B                     u297_25:	
  9078  177B  1003               	clrc
  9079  177C  0CA2               	rrf	??___ftmul+2,f
  9080  177D  0CA1               	rrf	??___ftmul+1,f
  9081  177E  0CA0               	rrf	??___ftmul,f
  9082  177F  3EFF               	addlw	-1
  9083  1780  1D03               	skipz
  9084  1781  2F7B               	goto	u297_25
  9085  1782  0820               	movf	??___ftmul,w
  9086  1783  00A3               	movwf	??___ftmul+3
  9087  1784  0823               	movf	??___ftmul+3,w
  9088  1785  06A9               	xorwf	___ftmul@sign,f
  9089  1786  3080               	movlw	128
  9090  1787  00A0               	movwf	??___ftmul
  9091  1788  0820               	movf	??___ftmul,w
  9092  1789  05A9               	andwf	___ftmul@sign,f
  9093  178A  17F9               	bsf	___ftmul@f1+1,7
  9094  178B  17FC               	bsf	___ftmul@f2+1,7
  9095  178C  30FF               	movlw	255
  9096  178D  05FB               	andwf	___ftmul@f2,f
  9097  178E  30FF               	movlw	255
  9098  178F  05FC               	andwf	___ftmul@f2+1,f
  9099  1790  3000               	movlw	0
  9100  1791  05FD               	andwf	___ftmul@f2+2,f
  9101  1792  3000               	movlw	0
  9102  1793  00A5               	movwf	___ftmul@f3_as_product
  9103  1794  3000               	movlw	0
  9104  1795  00A6               	movwf	___ftmul@f3_as_product+1
  9105  1796  3000               	movlw	0
  9106  1797  00A7               	movwf	___ftmul@f3_as_product+2
  9107  1798  3007               	movlw	7
  9108  1799  00A0               	movwf	??___ftmul
  9109  179A  0820               	movf	??___ftmul,w
  9110  179B  00A8               	movwf	___ftmul@cntr
  9111  179C                     i1l2587:	
  9112  179C  1C78               	btfss	___ftmul@f1,0
  9113  179D  2FAC               	goto	i1l2591
  9114  179E  087B               	movf	___ftmul@f2,w
  9115  179F  07A5               	addwf	___ftmul@f3_as_product,f
  9116  17A0  087C               	movf	___ftmul@f2+1,w
  9117  17A1  1103               	clrz
  9118  17A2  1803               	skipnc
  9119  17A3  0A7C               	incf	___ftmul@f2+1,w
  9120  17A4  1D03               	btfss	3,2
  9121  17A5  07A6               	addwf	___ftmul@f3_as_product+1,f
  9122  17A6  087D               	movf	___ftmul@f2+2,w
  9123  17A7  1103               	clrz
  9124  17A8  1803               	skipnc
  9125  17A9  0A7D               	incf	___ftmul@f2+2,w
  9126  17AA  1D03               	btfss	3,2
  9127  17AB  07A7               	addwf	___ftmul@f3_as_product+2,f
  9128  17AC                     i1l2591:	
  9129  17AC  3001               	movlw	1
  9130  17AD                     u300_25:	
  9131  17AD  1003               	clrc
  9132  17AE  0CFA               	rrf	___ftmul@f1+2,f
  9133  17AF  0CF9               	rrf	___ftmul@f1+1,f
  9134  17B0  0CF8               	rrf	___ftmul@f1,f
  9135  17B1  3EFF               	addlw	-1
  9136  17B2  1D03               	skipz
  9137  17B3  2FAD               	goto	u300_25
  9138  17B4  3001               	movlw	1
  9139  17B5                     u301_25:	
  9140  17B5  1003               	clrc
  9141  17B6  0DFB               	rlf	___ftmul@f2,f
  9142  17B7  0DFC               	rlf	___ftmul@f2+1,f
  9143  17B8  0DFD               	rlf	___ftmul@f2+2,f
  9144  17B9  3EFF               	addlw	-1
  9145  17BA  1D03               	skipz
  9146  17BB  2FB5               	goto	u301_25
  9147  17BC  3001               	movlw	1
  9148  17BD  02A8               	subwf	___ftmul@cntr,f
  9149  17BE  1D03               	btfss	3,2
  9150  17BF  2F9C               	goto	i1l2587
  9151  17C0  3009               	movlw	9
  9152  17C1  00A0               	movwf	??___ftmul
  9153  17C2  0820               	movf	??___ftmul,w
  9154  17C3  00A8               	movwf	___ftmul@cntr
  9155  17C4                     i1l2599:	
  9156  17C4  1C78               	btfss	___ftmul@f1,0
  9157  17C5  2FD4               	goto	i1l2603
  9158  17C6  087B               	movf	___ftmul@f2,w
  9159  17C7  07A5               	addwf	___ftmul@f3_as_product,f
  9160  17C8  087C               	movf	___ftmul@f2+1,w
  9161  17C9  1103               	clrz
  9162  17CA  1803               	skipnc
  9163  17CB  0A7C               	incf	___ftmul@f2+1,w
  9164  17CC  1D03               	btfss	3,2
  9165  17CD  07A6               	addwf	___ftmul@f3_as_product+1,f
  9166  17CE  087D               	movf	___ftmul@f2+2,w
  9167  17CF  1103               	clrz
  9168  17D0  1803               	skipnc
  9169  17D1  0A7D               	incf	___ftmul@f2+2,w
  9170  17D2  1D03               	btfss	3,2
  9171  17D3  07A7               	addwf	___ftmul@f3_as_product+2,f
  9172  17D4                     i1l2603:	
  9173  17D4  3001               	movlw	1
  9174  17D5                     u305_25:	
  9175  17D5  1003               	clrc
  9176  17D6  0CFA               	rrf	___ftmul@f1+2,f
  9177  17D7  0CF9               	rrf	___ftmul@f1+1,f
  9178  17D8  0CF8               	rrf	___ftmul@f1,f
  9179  17D9  3EFF               	addlw	-1
  9180  17DA  1D03               	skipz
  9181  17DB  2FD5               	goto	u305_25
  9182  17DC  3001               	movlw	1
  9183  17DD                     u306_25:	
  9184  17DD  1003               	clrc
  9185  17DE  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9186  17DF  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9187  17E0  0CA5               	rrf	___ftmul@f3_as_product,f
  9188  17E1  3EFF               	addlw	-1
  9189  17E2  1D03               	skipz
  9190  17E3  2FDD               	goto	u306_25
  9191  17E4  3001               	movlw	1
  9192  17E5  02A8               	subwf	___ftmul@cntr,f
  9193  17E6  1D03               	btfss	3,2
  9194  17E7  2FC4               	goto	i1l2599
  9195  17E8  0825               	movf	___ftmul@f3_as_product,w
  9196  17E9  00F0               	movwf	___ftpack@arg
  9197  17EA  0826               	movf	___ftmul@f3_as_product+1,w
  9198  17EB  00F1               	movwf	___ftpack@arg+1
  9199  17EC  0827               	movf	___ftmul@f3_as_product+2,w
  9200  17ED  00F2               	movwf	___ftpack@arg+2
  9201  17EE  0824               	movf	___ftmul@exp,w
  9202  17EF  00A0               	movwf	??___ftmul
  9203  17F0  0820               	movf	??___ftmul,w
  9204  17F1  00F3               	movwf	___ftpack@exp
  9205  17F2  0829               	movf	___ftmul@sign,w
  9206  17F3  00A1               	movwf	??___ftmul+1
  9207  17F4  0821               	movf	??___ftmul+1,w
  9208  17F5  00F4               	movwf	___ftpack@sign
  9209  17F6  160A  118A  25A4   	fcall	___ftpack
  9210  17F9  0870               	movf	?___ftpack,w
  9211  17FA  00F8               	movwf	?___ftmul
  9212  17FB  0871               	movf	?___ftpack+1,w
  9213  17FC  00F9               	movwf	?___ftmul+1
  9214  17FD  0872               	movf	?___ftpack+2,w
  9215  17FE  00FA               	movwf	?___ftmul+2
  9216  17FF  0008               	return
  9217  1800                     __end_of___ftmul:	
  9218                           
  9219                           	psect	text40
  9220  15A4                     __ptext40:	
  9221 ;; *************** function ___ftpack *****************
  9222 ;; Defined at:
  9223 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  arg             3    0[COMMON] unsigned um
  9226 ;;  exp             1    3[COMMON] unsigned char 
  9227 ;;  sign            1    4[COMMON] unsigned char 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;		None
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  3    0[COMMON] float 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9239 ;;      Params:         5       0       0       0       0
  9240 ;;      Locals:         0       0       0       0       0
  9241 ;;      Temps:          3       0       0       0       0
  9242 ;;      Totals:         8       0       0       0       0
  9243 ;;Total ram usage:        8 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		___ftadd
  9249 ;;		___ftdiv
  9250 ;;		___ftmul
  9251 ;;		___lwtoft
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           
  9256                           ;psect for function ___ftpack
  9257  15A4                     ___ftpack:	
  9258                           
  9259                           ;incstack = 0
  9260                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9261  15A4  0873               	movf	___ftpack@exp,w
  9262  15A5  1903               	btfsc	3,2
  9263  15A6  2DAC               	goto	i1l2239
  9264  15A7  0872               	movf	___ftpack@arg+2,w
  9265  15A8  0471               	iorwf	___ftpack@arg+1,w
  9266  15A9  0470               	iorwf	___ftpack@arg,w
  9267  15AA  1D03               	skipz
  9268  15AB  2DBF               	goto	i1l2245
  9269  15AC                     i1l2239:	
  9270  15AC  3000               	movlw	0
  9271  15AD  00F0               	movwf	?___ftpack
  9272  15AE  3000               	movlw	0
  9273  15AF  00F1               	movwf	?___ftpack+1
  9274  15B0  3000               	movlw	0
  9275  15B1  00F2               	movwf	?___ftpack+2
  9276  15B2  0008               	return
  9277  15B3                     i1l2243:	
  9278  15B3  3001               	movlw	1
  9279  15B4  00F5               	movwf	??___ftpack
  9280  15B5  0875               	movf	??___ftpack,w
  9281  15B6  07F3               	addwf	___ftpack@exp,f
  9282  15B7  3001               	movlw	1
  9283  15B8                     u214_25:	
  9284  15B8  1003               	clrc
  9285  15B9  0CF2               	rrf	___ftpack@arg+2,f
  9286  15BA  0CF1               	rrf	___ftpack@arg+1,f
  9287  15BB  0CF0               	rrf	___ftpack@arg,f
  9288  15BC  3EFF               	addlw	-1
  9289  15BD  1D03               	skipz
  9290  15BE  2DB8               	goto	u214_25
  9291  15BF                     i1l2245:	
  9292  15BF  30FE               	movlw	254
  9293  15C0  0572               	andwf	___ftpack@arg+2,w
  9294  15C1  1903               	btfsc	3,2
  9295  15C2  2DDA               	goto	i1l756
  9296  15C3  2DB3               	goto	i1l2243
  9297  15C4                     i1l2247:	
  9298  15C4  3001               	movlw	1
  9299  15C5  00F5               	movwf	??___ftpack
  9300  15C6  0875               	movf	??___ftpack,w
  9301  15C7  07F3               	addwf	___ftpack@exp,f
  9302  15C8  3001               	movlw	1
  9303  15C9  07F0               	addwf	___ftpack@arg,f
  9304  15CA  3000               	movlw	0
  9305  15CB  1803               	skipnc
  9306  15CC  3001               	movlw	1
  9307  15CD  07F1               	addwf	___ftpack@arg+1,f
  9308  15CE  3000               	movlw	0
  9309  15CF  1803               	skipnc
  9310  15D0  3001               	movlw	1
  9311  15D1  07F2               	addwf	___ftpack@arg+2,f
  9312  15D2  3001               	movlw	1
  9313  15D3                     u216_25:	
  9314  15D3  1003               	clrc
  9315  15D4  0CF2               	rrf	___ftpack@arg+2,f
  9316  15D5  0CF1               	rrf	___ftpack@arg+1,f
  9317  15D6  0CF0               	rrf	___ftpack@arg,f
  9318  15D7  3EFF               	addlw	-1
  9319  15D8  1D03               	skipz
  9320  15D9  2DD3               	goto	u216_25
  9321  15DA                     i1l756:	
  9322  15DA  30FF               	movlw	255
  9323  15DB  0572               	andwf	___ftpack@arg+2,w
  9324  15DC  1903               	btfsc	3,2
  9325  15DD  2DE9               	goto	i1l2255
  9326  15DE  2DC4               	goto	i1l2247
  9327  15DF                     i1l2253:	
  9328  15DF  3001               	movlw	1
  9329  15E0  02F3               	subwf	___ftpack@exp,f
  9330  15E1  3001               	movlw	1
  9331  15E2                     u218_25:	
  9332  15E2  1003               	clrc
  9333  15E3  0DF0               	rlf	___ftpack@arg,f
  9334  15E4  0DF1               	rlf	___ftpack@arg+1,f
  9335  15E5  0DF2               	rlf	___ftpack@arg+2,f
  9336  15E6  3EFF               	addlw	-1
  9337  15E7  1D03               	skipz
  9338  15E8  2DE2               	goto	u218_25
  9339  15E9                     i1l2255:	
  9340  15E9  1FF1               	btfss	___ftpack@arg+1,7
  9341  15EA  2DDF               	goto	i1l2253
  9342  15EB  1873               	btfsc	___ftpack@exp,0
  9343  15EC  2DF3               	goto	i1l762
  9344  15ED  30FF               	movlw	255
  9345  15EE  05F0               	andwf	___ftpack@arg,f
  9346  15EF  307F               	movlw	127
  9347  15F0  05F1               	andwf	___ftpack@arg+1,f
  9348  15F1  30FF               	movlw	255
  9349  15F2  05F2               	andwf	___ftpack@arg+2,f
  9350  15F3                     i1l762:	
  9351  15F3  1003               	clrc
  9352  15F4  0CF3               	rrf	___ftpack@exp,f
  9353  15F5  0873               	movf	___ftpack@exp,w
  9354  15F6  00F5               	movwf	??___ftpack
  9355  15F7  01F6               	clrf	??___ftpack+1
  9356  15F8  01F7               	clrf	??___ftpack+2
  9357  15F9  3010               	movlw	16
  9358  15FA                     u221_25:	
  9359  15FA  1003               	clrc
  9360  15FB  0DF5               	rlf	??___ftpack,f
  9361  15FC  0DF6               	rlf	??___ftpack+1,f
  9362  15FD  0DF7               	rlf	??___ftpack+2,f
  9363  15FE  3EFF               	addlw	-1
  9364  15FF  1D03               	skipz
  9365  1600  2DFA               	goto	u221_25
  9366  1601  0875               	movf	??___ftpack,w
  9367  1602  04F0               	iorwf	___ftpack@arg,f
  9368  1603  0876               	movf	??___ftpack+1,w
  9369  1604  04F1               	iorwf	___ftpack@arg+1,f
  9370  1605  0877               	movf	??___ftpack+2,w
  9371  1606  04F2               	iorwf	___ftpack@arg+2,f
  9372  1607  0874               	movf	___ftpack@sign,w
  9373  1608  1903               	btfsc	3,2
  9374  1609  0008               	return
  9375  160A  17F2               	bsf	___ftpack@arg+2,7
  9376  160B  0008               	return
  9377  160C                     __end_of___ftpack:	
  9378  007E                     btemp	set	126	;btemp
  9379  007E                     wtemp	set	126
  9380  007E                     wtemp0	set	126
  9381  0080                     wtemp1	set	128
  9382  0082                     wtemp2	set	130
  9383  0084                     wtemp3	set	132
  9384  0086                     wtemp4	set	134
  9385  0088                     wtemp5	set	136
  9386  007F                     wtemp6	set	127
  9387  007E                     ttemp	set	126
  9388  007E                     ttemp0	set	126
  9389  0081                     ttemp1	set	129
  9390  0084                     ttemp2	set	132
  9391  0087                     ttemp3	set	135
  9392  007F                     ttemp4	set	127
  9393  007E                     ltemp	set	126
  9394  007E                     ltemp0	set	126
  9395  0082                     ltemp1	set	130
  9396  0086                     ltemp2	set	134
  9397  0080                     ltemp3	set	128


Data Sizes:
    Strings     82
    Constant    10
    Data        10
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80     34      80
    BANK3            96      0      19
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1243$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[6]), display_rpm(BANK3[10]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_5(CODE[40]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_PWM_DutyCycle2
    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _send->_USART_WriteChar
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->i1_PWM_DutyCycle2
    i1_PWM_DutyCycle2->___lwtoft
    ___ftneg->___lwtoft
    ___ftadd->___lwtoft
    ___ftge->___lwtoft
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    i1_PWM_DutyCycle2->___fttol
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _max_val->___ftge
    ___ftge->___ftadd
    ___fttol->___ftadd

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3518
                                             31 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2027
                                             14 BANK1     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     296
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     366
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     259
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     322
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   60496
                                             73 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                           ___lwtoft
                               _send
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send                                                 3     3      0     136
                                              1 COMMON     3     3      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               23    23      0   56998
                                             50 BANK0     23    23      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                             12 COMMON     2     2      0
                                             30 BANK0      2     0      2
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   15310
                                             32 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   16167
                                             32 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     813
                                              0 BANK0      3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    6190
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4704
                                             28 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    4232
                                             16 BANK0     12     6      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2582
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     444
                                             16 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _trapmf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     _trimf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     i1_PWM_DutyCycle2
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwtoft
     ___ftpack
   _send
     _USART_WriteChar
   i1_PWM_DutyCycle2
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   i1_TIMER0_Set
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      13       9       19.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C1      12        0.0%
ABS                  0      0      C1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Jun 21 23:00:15 2022

         ?i1_PWM_DutyCycle2 003E                           _x 00B5                           _y 00B8  
                         pc 0002                 ?_LCD_Cursor 00C9     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        _tf 006D                          fsr 0004         ___wmul@multiplicand 00CB  
        ??i1_PWM_DutyCycle2 007C            i1___wmul@product 007C                ___ftadd@exp1 002F  
              ___ftadd@exp2 002E               _contagens_tm0 00BD                ___ftadd@sign 002D  
                       l199 0937                         l650 0769                         l476 0E76  
                       l494 0F3B                         l595 138B                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0BC1                         _rpm 00C3  
                       fsr0 0004                         _pwm 01A1                         _sum 00AF  
__size_of_USART_WriteString 001C                         indf 0000                __CFG_FOSC$HS 0000  
         ??_LCD_WriteString 00CD                __CFG_LVP$OFF 0000                        ?_ISR 0070  
              ___ftdiv@cntr 003A                ___ftdiv@sign 003F                        l3005 12E4  
        LCD_WriteString@Str 00CB                        l3113 0F9E                        l3105 0F85  
                      l3041 0E86                        l3033 0E72                        l3019 13CD  
                      l3107 0F89                        l3131 0FF9                        l3045 0E98  
                      l3127 0FB1                        l3119 0FAD                        l3071 0F0C  
                      l3055 0ED6                        l3039 0E7B                        l2513 1383  
                      l3057 0EED                        l3129 0E50                        l2507 1242  
                      l3067 0F06                        l2541 078A                        l2533 077A  
                      l2701 142D                        l2551 07C2                        l2543 079A  
                      l3087 0F5A                        l3079 0F2D                        l3097 0F6F  
                      l3089 0F5E                        l2555 07CF                        l2559 07DD  
                      l2675 14A0                        l2667 147C                        l2691 1406  
                      l2669 148A                        l2693 1414                        l2679 14AB  
                      l2697 1422                        STR_1 1053                        STR_2 1042  
                      STR_3 1067                        STR_4 1061                        STR_5 101A  
                      u3215 148B                        u3225 1497                        u3235 14A1  
                      u4107 0930                        u4117 098D                        u4207 1674  
                      u4127 0814                        u4217 12F0                        u4137 1616  
                      u3265 1409                        u4227 13B0                        u4147 1626  
                      u3195 147F                        u4237 13BE                        u4157 1634  
                      u3285 141A                        u4247 13CA                        u4167 1640  
                      u3295 1423                        u2815 138C                        u4257 127B  
                      u4177 164C                        u3625 130B                        u2905 07B1  
                      u2825 1393                        u4187 165A                        u2915 07C3  
                      u4197 1668                        u3725 0F4A                        u3575 132C  
                      u2875 078E                        u3595 14BD                        u3685 0F23  
                      u2895 079C                        _OERR 00C1                        _TMR0 0001  
                      _TMR1 000E                        _main 08A8                ___ftpack@arg 0070  
        __size_of_LCD_Clear 0029                ___ftpack@exp 0073                        _send 14FB  
                      btemp 007E            __end_of_ADC_Init 1256                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 0803                ___ftmul@cntr 0028  
              ___ftmul@sign 0029     __end_of_USART_WriteChar 120F                       ??_ISR 0069  
              ___fttol@exp1 003D                ___fttol@lval 0039                 ?_TIMER0_Set 0070  
          __end_of_LCD_Init 1677             __end_of___aldiv 07E6                       ?_main 0070  
                     _EEADR 010D             __end_of___ftadd 0A9D                       ?_send 0070  
             __CFG_WDTE$OFF 0000             __end_of___ftdiv 172F             __end_of___ftneg 1229  
           __end_of___ftmul 1800                       _T1CON 0010             __end_of___fttol 08A8  
           __end_of___lwdiv 14B2                       i1l112 0BB8                       i1l122 0E40  
                     i1l224 1208                       i1l180 0CE6                       i1l149 0121  
           __end_of___lwmod 1434                       i1l762 15F3                       i1l595 1342  
                     i1l756 15DA                       i1l785 0A3C                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _TXREG 0019               __CFG_PWRTE$ON 0000  
                     _Fuzzy 006B             __end_of_dpowers 101A             __end_of_max_val 12D6  
           __end_of_isdigit 1244               ___ftpack@sign 0074                       _trimf 0A9D  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 137F            __end_ofi1___wmul 135B                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
                     ttemp0 007E                       ttemp1 0081                       ttemp2 0084  
                     ttemp3 0087                       ttemp4 007F                       status 0003  
       i1___wmul@multiplier 0078                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F             __end_of_sprintf 1000  
        __size_ofi1___lwdiv 003E              ??_LCD_WriteCmd 00C9              ?_LCD_WriteData 0070  
               ?_USART_Init 00D8       i1TIMER0_Set@contagens 0070             __initialization 0015  
              __end_of_main 0994                __end_of_send 1545                      ??_main 00E8  
             ___fttol@sign1 0038                      ??_send 0071                ?_TIMER0_Init 0070  
         __end_of_LCD_Clear 13CD                  Fuzzy@a_246 0059                  Fuzzy@a_247 005B  
                    ?_Fuzzy 0070                  Fuzzy@freio 0052                  Fuzzy@reduz 0060  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _CCPR1L 0015                      _CCPR2L 001B                      _EECON2 018D  
          __end_of___ftpack 160C                      ?_trimf 0040                      i1l2311 0A17  
                    i1l2305 0A02                      i1l3201 0BDD                      i1l2243 15B3  
                    i1l2323 0A4E                      i1l2307 0A0E                      i1l2253 15DF  
                    i1l2245 15BF                      i1l2317 0A2C                      i1l2309 0A13  
                    i1l3221 0C23                      i1l3213 0C07                      i1l3205 0BEB  
                    i1l2255 15E9                      i1l2247 15C4                      i1l2239 15AC  
                    i1l2327 0A60                      i1l2319 0A38                      i1l2423 0B16  
                    i1l2337 0A83                      i1l2281 09C4                      i1l2353 16A5  
                    i1l3233 0C4D                      i1l3225 0C31                      i1l3217 0C15  
                    i1l3209 0BF9                      i1l2603 17D4                      i1l2347 168F  
                    i1l3171 144A                      i1l2277 09BD                      i1l2453 0D9E  
                    i1l2429 0B9B                      i1l3181 146B                      i1l3149 133A  
                    i1l3245 0C82                      i1l3237 0C5B                      i1l3229 0C3F  
                    i1l2391 1595                      i1l2287 09D3                      i1l2375 1709  
                    i1l2367 16EA                      i1l2447 0D6C                      i1l3271 0CE1  
                    i1l3247 0C85                      i1l2481 129D                      i1l3177 1460  
                    i1l3169 143C                      i1l3273 0CE2                      i1l2619 0834  
                    i1l2387 156E                      i1l2299 09ED                      i1l2459 0E23  
                    i1l3259 0CA2                      i1l2653 089F                      i1l2645 0883  
                    i1l2637 0866                      i1l2813 0374                      i1l2591 17AC  
                    i1l2575 175D                      i1l2647 088E                      i1l2639 0876  
                    i1l2823 044F                      i1l2735 153A                      i1l2727 1520  
                    i1l2569 1747                      i1l2649 0891                      i1l2841 055D  
                    i1l2817 03E8                      i1l2587 179C                      i1l2851 05E1  
                    i1l2837 04E3                      i1l2773 015C                      i1l2765 0122  
                    i1l2599 17C4                      i1l2847 05C4                      i1l2791 026A  
                    i1l2857 0613                      i1l2769 013F                      i1l2787 01F0  
                    u300_25 17AD                      i1l2797 02D1                      i1l2895 07FB  
                    i1l2887 07EF                      u221_25 15FA                      u301_25 17B5  
                    u214_25 15B8                      u216_25 15D3                      u312_25 0867  
                    u305_25 17D5                      u233_25 09EE                      u218_25 15E2  
                    u306_25 17DD                      u242_25 0A2D                      u250_25 16B7  
                    u315_25 0885                      u251_25 16C9                      u331_25 1292  
                    u236_25 0A03                      u252_25 16EB                      u340_25 02CF  
                    u309_25 083B                      u253_25 16FC                      u254_25 170A  
                    u239_25 0A18                      u343_25 0372                      u257_21 1561  
                    u257_22 1562                      u257_23 1567                      u257_24 1568  
                    u345_25 044D            __end_of___lwtoft 126A                      u338_25 01EE  
                    u259_21 1588                      u259_22 1589                      u259_23 158E  
                    u259_24 158F                      u347_25 04E1                      u349_25 05C2  
       __size_of_TIMER0_Set 0008                      u390_25 1457                      u391_25 1461  
                    u383_25 1343                      u296_25 1769                      u384_25 134A  
                    u297_25 177B                      u387_25 143F                      u389_25 144B  
                    _SSPADD 0093                      _SSPBUF 0013                      Fuzzy@a 0057  
          LCD_WriteCmd@Byte 00CA                      ___ftge 1545                   ??___aldiv 00D1  
                    ___wmul 137F                   ??___ftadd 0029              _PWM_DutyCycle1 12F6  
            _PWM_DutyCycle2 1317            ?_USART_WriteChar 0070                   ??___ftdiv 0036  
                 ??___ftneg 007C                      _deltaV 00BF                   ??___ftmul 0020  
                 ??___fttol 0034                   ??___lwdiv 00CD                   ??___lwmod 00D5  
                    _buffer 0190                      _fitemp 00A3       USART_ReceiveChar@byte 0074  
                    _trapmf 0CF3                      _pulsos 00C1                      _status 00C7  
     ___ftmul@f3_as_product 0025                   ??_max_val 007C           __end_ofi1___lwdiv 1472  
                 ??_isdigit 00C9                   ?_ADC_Init 0070                      saved_w 007E  
       __size_of_USART_Init 0049                      trimf@a 0043                      trimf@b 0046  
                    trimf@c 0049                      trimf@x 0040                   ??_sprintf 00DA  
             ?i1_TIMER0_Set 0070     __end_of__initialization 0067                   ?_LCD_Init 0070  
                ___ftadd@f1 0023                  ___ftadd@f2 0026             ??_LCD_WriteData 00C9  
                ___ftge@ff1 0030                  ___ftge@ff2 0033                  ___ftdiv@f1 0033  
                ___ftdiv@f2 0030                  ___ftdiv@f3 003B                  ___ftneg@f1 0020  
    __end_of_PWM_DutyCycle1 1317      __end_of_PWM_DutyCycle2 1338                  ___ftmul@f1 0078  
                ___ftmul@f2 007B                  ___fttol@f1 0030              __pcstackCOMMON 0070  
             __end_of_Fuzzy 0757                __pidataBANK0 0800                __pidataBANK1 11FC  
              __pidataBANK3 07FE               LCD_Cursor@Col 00C9               LCD_Cursor@Row 00CB  
              ??_LCD_Cursor 00CA             _LCD_WriteString 13CD               __end_of_trimf 0BC1  
                ___lwtoft@c 0078                   ?_PWM_Init 0070                   ?i1___wmul 0078  
            _OPTION_REGbits 0081                  ??_ADC_Init 00C9        __end_of_LCD_WriteCmd 1281  
                   ??_Fuzzy 007E   __size_ofi1_PWM_DutyCycle2 001B              ??i1_TIMER0_Set 0070  
              sprintf@width 00E4                     ??_trimf 007C                  __pbssBANK1 00A0  
                __pbssBANK3 0190          __end_of_LCD_Cursor 12F6                  ??_LCD_Init 00CB  
             Fuzzy@deltaRpm 0066             ?_PWM_DutyCycle1 00C9             ?_PWM_DutyCycle2 00C9  
                __pmaintext 08A8                 Fuzzy@mantem 005D                     ?___ftge 0030  
                   ?___wmul 00C9                  __pintentry 0004                ??_TIMER0_Set 00C9  
                   _CCP1CON 0017                     _CCP2CON 001D                   ?___ftpack 0070  
                   ?_trapmf 0040                  ??_PWM_Init 00C9                  ??i1___wmul 007C  
                 ?___lwtoft 0078        __size_of_TIMER0_Init 000B                     _SSPCON2 0091  
                __stringtab 1000          __end_of_TIMER0_Set 1217     __end_of_LCD_WriteString 13FE  
                 _ADCResult 00BB                ??_USART_Init 00DC           LCD_WriteData@Byte 00CA  
                   ___aldiv 0757             __size_of___ftge 005F                     ___ftadd 0994  
                   ___ftdiv 1677                     ___ftneg 121F             __size_of___wmul 0025  
                   ___ftmul 172F                     ___fttol 081A                     ___lwdiv 1472  
                   ___lwmod 13FE                  ??___ftpack 0075                     __ptext1 0E49  
                   __ptext2 1234                     __ptext3 137F                     __ptext4 13FE  
                   __ptext5 1472                     __ptext6 14B2                     __ptext7 0757  
                   __ptext8 120F                     __ptext9 1229                  _pas_cooler 00EE  
                ??___lwtoft 007B             __size_of_trapmf 0156                __size_of_ISR 0132  
                 _T1CONbits 0010                     _dpowers 1010           i1___lwdiv@divisor 0070  
                 _T2CONbits 0012                     _max_val 12B8                     _isdigit 1234  
         i1___lwdiv@counter 0077            ___aldiv@dividend 00CD                   _LCD_Clear 13A4  
        __end_of_USART_Init 14FB                     _sprintf 0E49                     clrloop0 1218  
      end_of_initialization 0067                   _RCSTAbits 0018            ___aldiv@quotient 00D4  
                   trapmf@a 0043                     trapmf@b 0046                     trapmf@c 0049  
                   trapmf@d 004C                     trapmf@x 0040                     trimf@ua 004C  
      __end_ofi1_TIMER0_Set 1207       i1___wmul@multiplicand 007A       __size_of_LCD_WriteCmd 0017  
                 _PORTBbits 0006                   _PORTEbits 0009                  _setpointUI 00C5  
                ?_LCD_Clear 0070            i1_PWM_DutyCycle2 1281           __size_of_ADC_Init 0012  
                 i1___lwdiv 1434         PWM_DutyCycle1@valor 00C9                  _total_area 00B2  
       PWM_DutyCycle2@valor 00C9                 _CCP1CONbits 0017                 ___ftdiv@exp 003E  
               _CCP2CONbits 001D                   _TXSTAbits 0098            ?_LCD_WriteString 00CB  
         __size_of_LCD_Init 006B                _LCD_WriteCmd 126A                 ___ftmul@exp 0024  
            __end_of___ftge 15A4              __end_of___wmul 13A4              __end_of_trapmf 0E49  
  __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024         start_initialization 0015  
         __size_ofi1___wmul 0023                 __end_of_ISR 0CF3                  ?i1___lwdiv 0070  
          ??_PWM_DutyCycle1 00CB            ??_PWM_DutyCycle2 00CB       __end_of_LCD_WriteData 081A  
         _USART_ReceiveChar 07E6                    ??___ftge 0036          ?_USART_ReceiveChar 0070  
                  ??___wmul 00CD                 __pdataBANK0 006D                 __pdataBANK1 00EB  
               __pdataBANK3 01A1                send@checksum 0072                    ??_trapmf 007C  
       ??_USART_ReceiveChar 0073           __size_of___ftpack 0068                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00C9  
               ??_LCD_Clear 00CB         __end_of__stringdata 106C                _isdigit$1439 00C9  
               sprintf@_val 00DF                 sprintf@flag 00E3                 sprintf@prec 00DE  
 __end_of_USART_ReceiveChar 07FE       __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 00CB  
       TIMER0_Set@contagens 00C9                Fuzzy@aumenta 0063                    ?___aldiv 00C9  
                  ?___ftadd 0023                    ?___ftdiv 0030                    ?___ftneg 0020  
                  ?___ftmul 0078                    ?___fttol 0030                    ?___lwdiv 00C9  
                  ?___lwmod 00D1                   __pstrings 1000                   _ativa_fan 00A0  
             ??_TIMER0_Init 00C9          USART_Init@BaudRate 00D8                    ?_max_val 003C  
                  ?_isdigit 0070                    _ADC_Init 1244                   _fop_rule1 00A6  
                 _fop_rule2 00A9                   _fop_rule3 00AC              __size_of_Fuzzy 06EC  
          ___lwdiv@quotient 00CE                 ??i1___lwdiv 0074                    ?_sprintf 00D7  
            __size_of_trimf 0124           ??_USART_WriteChar 0070                i1_TIMER0_Set 1201  
           ___aldiv@divisor 00C9           interrupt_function 0004             ___aldiv@counter 00D2  
                  _LCD_Init 160C              ___wmul@product 00CD                   clear_ram0 1217  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 129C                 _display_rpm 0197  
                _ADCON0bits 001F                 __stringbase 100F                  _ADCON1bits 009F  
               __stringdata 101A                    _PWM_Init 135B           ___wmul@multiplier 00C9  
                  i1___wmul 1338         __end_of_TIMER0_Init 1234  __size_of_USART_ReceiveChar 0018  
                _EECON1bits 018C                    Fuzzy@tip 0054            __size_of___aldiv 008F  
          __size_of___ftadd 0109            __size_of___ftdiv 00B8            __size_of___ftneg 000A  
          __size_of___ftmul 00D1            __size_of___fttol 008E            __size_of___lwdiv 0040  
          __size_of___lwmod 0036                    ___ftpack 15A4          __end_of__stringtab 1010  
                  ___lwtoft 1256                   send@index 0073            __size_of_max_val 001E  
          __size_of_isdigit 0010             ___lwdiv@divisor 00C9             ___lwdiv@counter 00D0  
         _USART_WriteString 129C                    __ptext10 135B                    __ptext11 1317  
                  __ptext20 0BC1                    __ptext12 12F6                    __ptext21 1338  
                  __ptext13 13CD                    __ptext30 0A9D                    __ptext22 1434  
                  __ptext14 0803                    __ptext31 0CF3                    __ptext23 1201  
                  __ptext15 160C                    __ptext40 15A4                    __ptext32 121F  
                  __ptext24 14FB                    __ptext16 12D6                    __ptext33 1677  
                  __ptext25 07E6                    __ptext17 13A4                    __ptext34 0994  
                  __ptext26 129C                    __ptext18 126A                    __ptext35 12B8  
                  __ptext27 1207                    __ptext19 1244                    __ptext36 1545  
                  __ptext28 006B                    __ptext37 1256                    __ptext29 1281  
                  __ptext38 081A                    __ptext39 172F          ?_USART_WriteString 0070  
          __size_of_sprintf 01B7          i1___lwdiv@dividend 0072               __size_of_main 00EC  
             __size_of_send 004A         USART_WriteChar@byte 0070         ??_USART_WriteString 0071  
                  _setpoint 00EB                  _LCD_Cursor 12D6    __size_of_LCD_WriteString 0031  
        i1___lwdiv@quotient 0075                 _TIMER0_Init 1229                  _INTCONbits 000B  
 __end_of_USART_WriteString 12B8                    max_val@a 003C                    max_val@b 003F  
                  isdigit@c 00CA                    intlevel1 0000                   sprintf@ap 00DD  
                 sprintf@sp 00E6            ___lwmod@dividend 00D3                   stringcode 100A  
      USART_WriteString@str 0072                  _TIMER0_Set 120F                    trapmf@ua 004F  
           _USART_WriteChar 1207                    sprintf@c 00E7                    sprintf@f 00D7  
           ___lwmod@divisor 00D1             ___lwmod@counter 00D6                    stringdir 100A  
                  stringtab 1000                ___aldiv@sign 00D3      __size_of_LCD_WriteData 0017  
               _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 003E                  _SSPCONbits 0014  
                _USART_Init 14B2  
