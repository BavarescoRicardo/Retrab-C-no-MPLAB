

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu May 26 20:41:27 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK1
   603  1137                     __pidataBANK1:	
   604                           
   605                           ;initializer for _pas_cooler
   606  1137  3407               	retlw	7
   607  1138  3400               	retlw	0
   608                           
   609                           	psect	idataBANK3
   610  113F                     __pidataBANK3:	
   611                           
   612                           ;initializer for _setpoint
   613  113F  3400               	retlw	0
   614  1140  34A0               	retlw	160
   615  1141  3441               	retlw	65
   616                           
   617                           ;initializer for _tf
   618  1142  3400               	retlw	0
   619  1143  34A0               	retlw	160
   620  1144  3441               	retlw	65
   621                           
   622                           	psect	stringtext
   623  1000                     __pstringtext:	
   624  1000                     stringtab:	
   625  1000                     __stringtab:	
   626                           
   627                           ;	String table - string pointers are 2 bytes each
   628  1000  1BFF               	btfsc	btemp+1,7
   629  1001  280A               	ljmp	stringcode
   630  1002  1383               	bcf	3,7
   631  1003  187F               	btfsc	btemp+1,0
   632  1004  1783               	bsf	3,7
   633  1005  0800               	movf	0,w
   634  1006  0A84               	incf	4,f
   635  1007  1903               	skipnz
   636  1008  0AFF               	incf	btemp+1,f
   637  1009  0008               	return
   638  100A                     stringcode:	
   639  100A  087F               	movf	btemp+1,w
   640  100B  397F               	andlw	127
   641  100C  008A               	movwf	10
   642  100D  0804               	movf	4,w
   643  100E  0A84               	incf	4,f
   644  100F  1903               	skipnz
   645  1010  0AFF               	incf	btemp+1,f
   646  1011  0082               	movwf	2
   647  1012                     __stringbase:	
   648  1012                     __end_of__stringtab:	
   649  1012                     _dpowers:	
   650  1012  3401               	retlw	1
   651  1013  3400               	retlw	0
   652  1014  340A               	retlw	10
   653  1015  3400               	retlw	0
   654  1016  3464               	retlw	100
   655  1017  3400               	retlw	0
   656  1018  34E8               	retlw	232
   657  1019  3403               	retlw	3
   658  101A  3410               	retlw	16
   659  101B  3427               	retlw	39
   660  101C                     __end_of_dpowers:	
   661  000E                     _TMR1	set	14
   662  001F                     _ADCON0bits	set	31
   663  001E                     _ADRESH	set	30
   664  0017                     _CCP1CON	set	23
   665  0017                     _CCP1CONbits	set	23
   666  001D                     _CCP2CON	set	29
   667  001D                     _CCP2CONbits	set	29
   668  0015                     _CCPR1L	set	21
   669  001B                     _CCPR2L	set	27
   670  000B                     _INTCONbits	set	11
   671  000C                     _PIR1bits	set	12
   672  000D                     _PIR2bits	set	13
   673  0005                     _PORTA	set	5
   674  0006                     _PORTB	set	6
   675  0006                     _PORTBbits	set	6
   676  0007                     _PORTC	set	7
   677  0008                     _PORTD	set	8
   678  0009                     _PORTE	set	9
   679  0009                     _PORTEbits	set	9
   680  001A                     _RCREG	set	26
   681  0018                     _RCSTAbits	set	24
   682  0013                     _SSPBUF	set	19
   683  0014                     _SSPCONbits	set	20
   684  0010                     _T1CON	set	16
   685  0010                     _T1CONbits	set	16
   686  0012                     _T2CONbits	set	18
   687  0001                     _TMR0	set	1
   688  000F                     _TMR1H	set	15
   689  000E                     _TMR1L	set	14
   690  0019                     _TXREG	set	25
   691  00C1                     _OERR	set	193
   692  009F                     _ADCON1bits	set	159
   693  009E                     _ADRESL	set	158
   694  0081                     _OPTION_REGbits	set	129
   695  008C                     _PIE1bits	set	140
   696  008D                     _PIE2bits	set	141
   697  0092                     _PR2	set	146
   698  0099                     _SPBRG	set	153
   699  0093                     _SSPADD	set	147
   700  0091                     _SSPCON2	set	145
   701  0091                     _SSPCON2bits	set	145
   702  0094                     _SSPSTATbits	set	148
   703  0085                     _TRISA	set	133
   704  0086                     _TRISB	set	134
   705  0087                     _TRISC	set	135
   706  0088                     _TRISD	set	136
   707  0089                     _TRISE	set	137
   708  0098                     _TXSTAbits	set	152
   709  010D                     _EEADR	set	269
   710  010C                     _EEDATA	set	268
   711  018C                     _EECON1bits	set	396
   712  018D                     _EECON2	set	397
   713  101C                     __stringdata:	
   714  101C                     STR_19:	
   715  101C  340A               	retlw	10
   716  101D  340D               	retlw	13
   717  101E  3420               	retlw	32	;' '
   718  101F  342D               	retlw	45	;'-'
   719  1020  342D               	retlw	45	;'-'
   720  1021  342D               	retlw	45	;'-'
   721  1022  342D               	retlw	45	;'-'
   722  1023  342D               	retlw	45	;'-'
   723  1024  342D               	retlw	45	;'-'
   724  1025  342D               	retlw	45	;'-'
   725  1026  3420               	retlw	32	;' '
   726  1027  3445               	retlw	69	;'E'
   727  1028  3453               	retlw	83	;'S'
   728  1029  3454               	retlw	84	;'T'
   729  102A  344F               	retlw	79	;'O'
   730  102B  3455               	retlw	85	;'U'
   731  102C  3452               	retlw	82	;'R'
   732  102D  344F               	retlw	79	;'O'
   733  102E  3420               	retlw	32	;' '
   734  102F  3444               	retlw	68	;'D'
   735  1030  3445               	retlw	69	;'E'
   736  1031  3420               	retlw	32	;' '
   737  1032  3450               	retlw	80	;'P'
   738  1033  3449               	retlw	73	;'I'
   739  1034  344C               	retlw	76	;'L'
   740  1035  3448               	retlw	72	;'H'
   741  1036  3441               	retlw	65	;'A'
   742  1037  3420               	retlw	32	;' '
   743  1038  342D               	retlw	45	;'-'
   744  1039  342D               	retlw	45	;'-'
   745  103A  342D               	retlw	45	;'-'
   746  103B  342D               	retlw	45	;'-'
   747  103C  342D               	retlw	45	;'-'
   748  103D  342D               	retlw	45	;'-'
   749  103E  342D               	retlw	45	;'-'
   750  103F  3420               	retlw	32	;' '
   751  1040  340A               	retlw	10
   752  1041  340D               	retlw	13
   753  1042  3420               	retlw	32	;' '
   754  1043  3400               	retlw	0
   755  1044                     STR_11:	
   756  1044  3449               	retlw	73	;'I'
   757  1045  346E               	retlw	110	;'n'
   758  1046  3469               	retlw	105	;'i'
   759  1047  3463               	retlw	99	;'c'
   760  1048  3469               	retlw	105	;'i'
   761  1049  3461               	retlw	97	;'a'
   762  104A  346C               	retlw	108	;'l'
   763  104B  3469               	retlw	105	;'i'
   764  104C  347A               	retlw	122	;'z'
   765  104D  3461               	retlw	97	;'a'
   766  104E  346E               	retlw	110	;'n'
   767  104F  3464               	retlw	100	;'d'
   768  1050  346F               	retlw	111	;'o'
   769  1051  3420               	retlw	32	;' '
   770  1052  346F               	retlw	111	;'o'
   771  1053  3420               	retlw	32	;' '
   772  1054  3450               	retlw	80	;'P'
   773  1055  3449               	retlw	73	;'I'
   774  1056  3443               	retlw	67	;'C'
   775  1057  3431               	retlw	49	;'1'
   776  1058  3436               	retlw	54	;'6'
   777  1059  3446               	retlw	70	;'F'
   778  105A  3438               	retlw	56	;'8'
   779  105B  3437               	retlw	55	;'7'
   780  105C  3437               	retlw	55	;'7'
   781  105D  3441               	retlw	65	;'A'
   782  105E  340A               	retlw	10
   783  105F  340D               	retlw	13
   784  1060  3400               	retlw	0
   785  1061                     STR_12:	
   786  1061  3455               	retlw	85	;'U'
   787  1062  3453               	retlw	83	;'S'
   788  1063  3441               	retlw	65	;'A'
   789  1064  3452               	retlw	82	;'R'
   790  1065  3454               	retlw	84	;'T'
   791  1066  343A               	retlw	58	;':'
   792  1067  3420               	retlw	32	;' '
   793  1068  3431               	retlw	49	;'1'
   794  1069  3431               	retlw	49	;'1'
   795  106A  3435               	retlw	53	;'5'
   796  106B  342E               	retlw	46	;'.'
   797  106C  3432               	retlw	50	;'2'
   798  106D  3430               	retlw	48	;'0'
   799  106E  3430               	retlw	48	;'0'
   800  106F  3462               	retlw	98	;'b'
   801  1070  3470               	retlw	112	;'p'
   802  1071  3473               	retlw	115	;'s'
   803  1072  340A               	retlw	10
   804  1073  340D               	retlw	13
   805  1074  3400               	retlw	0
   806  1075                     STR_13:	
   807  1075  3449               	retlw	73	;'I'
   808  1076  346E               	retlw	110	;'n'
   809  1077  3469               	retlw	105	;'i'
   810  1078  3463               	retlw	99	;'c'
   811  1079  3469               	retlw	105	;'i'
   812  107A  3461               	retlw	97	;'a'
   813  107B  346C               	retlw	108	;'l'
   814  107C  3469               	retlw	105	;'i'
   815  107D  347A               	retlw	122	;'z'
   816  107E  3461               	retlw	97	;'a'
   817  107F  346E               	retlw	110	;'n'
   818  1080  3464               	retlw	100	;'d'
   819  1081  346F               	retlw	111	;'o'
   820  1082  342E               	retlw	46	;'.'
   821  1083  342E               	retlw	46	;'.'
   822  1084  342E               	retlw	46	;'.'
   823  1085  3400               	retlw	0
   824  1086                     STR_9:	
   825  1086  340A               	retlw	10
   826  1087  340D               	retlw	13
   827  1088  3470               	retlw	112	;'p'
   828  1089  3477               	retlw	119	;'w'
   829  108A  346D               	retlw	109	;'m'
   830  108B  3420               	retlw	32	;' '
   831  108C  343D               	retlw	61	;'='
   832  108D  3420               	retlw	32	;' '
   833  108E  3431               	retlw	49	;'1'
   834  108F  3430               	retlw	48	;'0'
   835  1090  3430               	retlw	48	;'0'
   836  1091  3430               	retlw	48	;'0'
   837  1092  340A               	retlw	10
   838  1093  340D               	retlw	13
   839  1094  3400               	retlw	0
   840  1095                     STR_10:	
   841  1095  340A               	retlw	10
   842  1096  340D               	retlw	13
   843  1097  3470               	retlw	112	;'p'
   844  1098  3477               	retlw	119	;'w'
   845  1099  346D               	retlw	109	;'m'
   846  109A  3420               	retlw	32	;' '
   847  109B  343D               	retlw	61	;'='
   848  109C  3420               	retlw	32	;' '
   849  109D  3431               	retlw	49	;'1'
   850  109E  3430               	retlw	48	;'0'
   851  109F  3432               	retlw	50	;'2'
   852  10A0  3433               	retlw	51	;'3'
   853  10A1  340A               	retlw	10
   854  10A2  340D               	retlw	13
   855  10A3  3400               	retlw	0
   856  10A4                     STR_6:	
   857  10A4  340A               	retlw	10
   858  10A5  340D               	retlw	13
   859  10A6  3470               	retlw	112	;'p'
   860  10A7  3477               	retlw	119	;'w'
   861  10A8  346D               	retlw	109	;'m'
   862  10A9  3420               	retlw	32	;' '
   863  10AA  343D               	retlw	61	;'='
   864  10AB  3420               	retlw	32	;' '
   865  10AC  3435               	retlw	53	;'5'
   866  10AD  3431               	retlw	49	;'1'
   867  10AE  3432               	retlw	50	;'2'
   868  10AF  340A               	retlw	10
   869  10B0  340D               	retlw	13
   870  10B1  3400               	retlw	0
   871  10B2                     STR_5:	
   872  10B2  340A               	retlw	10
   873  10B3  340D               	retlw	13
   874  10B4  3470               	retlw	112	;'p'
   875  10B5  3477               	retlw	119	;'w'
   876  10B6  346D               	retlw	109	;'m'
   877  10B7  3420               	retlw	32	;' '
   878  10B8  343D               	retlw	61	;'='
   879  10B9  3420               	retlw	32	;' '
   880  10BA  3432               	retlw	50	;'2'
   881  10BB  3435               	retlw	53	;'5'
   882  10BC  3436               	retlw	54	;'6'
   883  10BD  340A               	retlw	10
   884  10BE  340D               	retlw	13
   885  10BF  3400               	retlw	0
   886  10C0                     STR_8:	
   887  10C0  340A               	retlw	10
   888  10C1  340D               	retlw	13
   889  10C2  3470               	retlw	112	;'p'
   890  10C3  3477               	retlw	119	;'w'
   891  10C4  346D               	retlw	109	;'m'
   892  10C5  3420               	retlw	32	;' '
   893  10C6  343D               	retlw	61	;'='
   894  10C7  3420               	retlw	32	;' '
   895  10C8  3438               	retlw	56	;'8'
   896  10C9  3439               	retlw	57	;'9'
   897  10CA  3436               	retlw	54	;'6'
   898  10CB  340A               	retlw	10
   899  10CC  340D               	retlw	13
   900  10CD  3400               	retlw	0
   901  10CE                     STR_4:	
   902  10CE  340A               	retlw	10
   903  10CF  340D               	retlw	13
   904  10D0  3470               	retlw	112	;'p'
   905  10D1  3477               	retlw	119	;'w'
   906  10D2  346D               	retlw	109	;'m'
   907  10D3  3420               	retlw	32	;' '
   908  10D4  343D               	retlw	61	;'='
   909  10D5  3420               	retlw	32	;' '
   910  10D6  3431               	retlw	49	;'1'
   911  10D7  3432               	retlw	50	;'2'
   912  10D8  3438               	retlw	56	;'8'
   913  10D9  340A               	retlw	10
   914  10DA  340D               	retlw	13
   915  10DB  3400               	retlw	0
   916  10DC                     STR_7:	
   917  10DC  340A               	retlw	10
   918  10DD  340D               	retlw	13
   919  10DE  3470               	retlw	112	;'p'
   920  10DF  3477               	retlw	119	;'w'
   921  10E0  346D               	retlw	109	;'m'
   922  10E1  3420               	retlw	32	;' '
   923  10E2  343D               	retlw	61	;'='
   924  10E3  3420               	retlw	32	;' '
   925  10E4  3437               	retlw	55	;'7'
   926  10E5  3436               	retlw	54	;'6'
   927  10E6  3438               	retlw	56	;'8'
   928  10E7  340A               	retlw	10
   929  10E8  340D               	retlw	13
   930  10E9  3400               	retlw	0
   931  10EA                     STR_1:	
   932  10EA  340A               	retlw	10
   933  10EB  340D               	retlw	13
   934  10EC  3464               	retlw	100	;'d'
   935  10ED  3465               	retlw	101	;'e'
   936  10EE  3473               	retlw	115	;'s'
   937  10EF  346C               	retlw	108	;'l'
   938  10F0  3469               	retlw	105	;'i'
   939  10F1  3467               	retlw	103	;'g'
   940  10F2  3461               	retlw	97	;'a'
   941  10F3  3464               	retlw	100	;'d'
   942  10F4  346F               	retlw	111	;'o'
   943  10F5  340A               	retlw	10
   944  10F6  340D               	retlw	13
   945  10F7  3400               	retlw	0
   946  10F8                     STR_2:	
   947  10F8  340A               	retlw	10
   948  10F9  340D               	retlw	13
   949  10FA  3470               	retlw	112	;'p'
   950  10FB  3477               	retlw	119	;'w'
   951  10FC  346D               	retlw	109	;'m'
   952  10FD  3420               	retlw	32	;' '
   953  10FE  343D               	retlw	61	;'='
   954  10FF  3420               	retlw	32	;' '
   955  1100  3433               	retlw	51	;'3'
   956  1101  3432               	retlw	50	;'2'
   957  1102  340A               	retlw	10
   958  1103  340D               	retlw	13
   959  1104  3400               	retlw	0
   960  1105                     STR_3:	
   961  1105  340A               	retlw	10
   962  1106  340D               	retlw	13
   963  1107  3470               	retlw	112	;'p'
   964  1108  3477               	retlw	119	;'w'
   965  1109  346D               	retlw	109	;'m'
   966  110A  3420               	retlw	32	;' '
   967  110B  343D               	retlw	61	;'='
   968  110C  3420               	retlw	32	;' '
   969  110D  3436               	retlw	54	;'6'
   970  110E  3434               	retlw	52	;'4'
   971  110F  340A               	retlw	10
   972  1110  340D               	retlw	13
   973  1111  3400               	retlw	0
   974  1112                     STR_18:	
   975  1112  3450               	retlw	80	;'P'
   976  1113  3457               	retlw	87	;'W'
   977  1114  344D               	retlw	77	;'M'
   978  1115  343A               	retlw	58	;':'
   979  1116  3420               	retlw	32	;' '
   980  1117  3400               	retlw	0
   981  1118                     STR_17:	
   982  1118  3444               	retlw	68	;'D'
   983  1119  346C               	retlw	108	;'l'
   984  111A  3456               	retlw	86	;'V'
   985  111B  343A               	retlw	58	;':'
   986  111C  3420               	retlw	32	;' '
   987  111D  3400               	retlw	0
   988  111E                     STR_14:	
   989  111E  3425               	retlw	37	;'%'
   990  111F  3430               	retlw	48	;'0'
   991  1120  3434               	retlw	52	;'4'
   992  1121  3464               	retlw	100	;'d'
   993  1122  3400               	retlw	0
   994  1123                     __end_of__stringdata:	
   995                           
   996                           ; #config settings
   997  0000                     
   998                           	psect	cinit
   999  0019                     start_initialization:	
  1000  0019                     __initialization:	
  1001                           
  1002                           ; Clear objects allocated to BANK1
  1003  0019  1383               	bcf	3,7	;select IRP bank0
  1004  001A  30A0               	movlw	low __pbssBANK1
  1005  001B  0084               	movwf	4
  1006  001C  30C6               	movlw	low (__pbssBANK1+38)
  1007  001D  160A  118A  215D  120A  118A  	fcall	clear_ram0
  1008                           
  1009                           ; Clear objects allocated to BANK3
  1010  0022  1783               	bsf	3,7	;select IRP bank2
  1011  0023  3090               	movlw	low __pbssBANK3
  1012  0024  0084               	movwf	4
  1013  0025  30C2               	movlw	low (__pbssBANK3+50)
  1014  0026  160A  118A  215D  120A  118A  	fcall	clear_ram0
  1015                           
  1016                           ; Initialize objects allocated to BANK3
  1017  002B  1683               	bsf	3,5	;RP0=1, select bank3
  1018  002C  1703               	bsf	3,6	;RP1=1, select bank3
  1019  002D  160A  118A  213F  120A  118A  	fcall	__pidataBANK3	;fetch initializer
  1020  0032  00C2               	movwf	__pdataBANK3& (0+127)
  1021  0033  160A  118A  2140  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
  1022  0038  00C3               	movwf	(__pdataBANK3+1)& (0+127)
  1023  0039  160A  118A  2141  120A  118A  	fcall	__pidataBANK3+2	;fetch initializer
  1024  003E  00C4               	movwf	(__pdataBANK3+2)& (0+127)
  1025  003F  160A  118A  2142  120A  118A  	fcall	__pidataBANK3+3	;fetch initializer
  1026  0044  00C5               	movwf	(__pdataBANK3+3)& (0+127)
  1027  0045  160A  118A  2143  120A  118A  	fcall	__pidataBANK3+4	;fetch initializer
  1028  004A  00C6               	movwf	(__pdataBANK3+4)& (0+127)
  1029  004B  160A  118A  2144  120A  118A  	fcall	__pidataBANK3+5	;fetch initializer
  1030  0050  00C7               	movwf	(__pdataBANK3+5)& (0+127)
  1031                           
  1032                           ; Initialize objects allocated to BANK1
  1033  0051  1683               	bsf	3,5	;RP0=1, select bank1
  1034  0052  1303               	bcf	3,6	;RP1=0, select bank1
  1035  0053  160A  118A  2137  120A  118A  	fcall	__pidataBANK1	;fetch initializer
  1036  0058  00EA               	movwf	__pdataBANK1& (0+127)
  1037  0059  160A  118A  2138   	fcall	__pidataBANK1+1	;fetch initializer
  1038  005C  00EB               	movwf	(__pdataBANK1+1)& (0+127)
  1039  005D                     end_of_initialization:	
  1040                           ;End of C runtime variable initialization code
  1041                           
  1042  005D                     __end_of__initialization:	
  1043  005D  0183               	clrf	3
  1044  005E  120A  158A  29AD   	ljmp	_main	;jump to C main() function
  1045                           
  1046                           	psect	bssBANK1
  1047  00A0                     __pbssBANK1:	
  1048  00A0                     _ativa_fan:	
  1049  00A0                     	ds	3
  1050  00A3                     _fitemp:	
  1051  00A3                     	ds	3
  1052  00A6                     _fop_rule1:	
  1053  00A6                     	ds	3
  1054  00A9                     _fop_rule2:	
  1055  00A9                     	ds	3
  1056  00AC                     _fop_rule3:	
  1057  00AC                     	ds	3
  1058  00AF                     _sum:	
  1059  00AF                     	ds	3
  1060  00B2                     _temp:	
  1061  00B2                     	ds	3
  1062  00B5                     _total_area:	
  1063  00B5                     	ds	3
  1064  00B8                     _x:	
  1065  00B8                     	ds	3
  1066  00BB                     _y:	
  1067  00BB                     	ds	3
  1068  00BE                     _contagens_tm0:	
  1069  00BE                     	ds	2
  1070  00C0                     _deltaV:	
  1071  00C0                     	ds	2
  1072  00C2                     _pulsos:	
  1073  00C2                     	ds	2
  1074  00C4                     _pwm:	
  1075  00C4                     	ds	2
  1076                           
  1077                           	psect	dataBANK1
  1078  00EA                     __pdataBANK1:	
  1079  00EA                     _pas_cooler:	
  1080  00EA                     	ds	2
  1081                           
  1082                           	psect	bssBANK3
  1083  0190                     __pbssBANK3:	
  1084  0190                     _derro:	
  1085  0190                     	ds	3
  1086  0193                     _fisetpoint:	
  1087  0193                     	ds	3
  1088  0196                     _foTip:	
  1089  0196                     	ds	3
  1090  0199                     _posicao_do_grafico:	
  1091  0199                     	ds	3
  1092  019C                     _posicao_do_grafico_food:	
  1093  019C                     	ds	3
  1094  019F                     _posicao_do_grafico_service:	
  1095  019F                     	ds	3
  1096  01A2                     _ADCResult:	
  1097  01A2                     	ds	2
  1098  01A4                     _contador_rb6:	
  1099  01A4                     	ds	2
  1100  01A6                     _rpm:	
  1101  01A6                     	ds	2
  1102  01A8                     _status:	
  1103  01A8                     	ds	2
  1104  01AA                     _temp_lida:	
  1105  01AA                     	ds	2
  1106  01AC                     _tempo_rb6:	
  1107  01AC                     	ds	2
  1108  01AE                     _display_pwm:	
  1109  01AE                     	ds	10
  1110  01B8                     _display_rpm:	
  1111  01B8                     	ds	10
  1112                           
  1113                           	psect	dataBANK3
  1114  01C2                     __pdataBANK3:	
  1115  01C2                     _setpoint:	
  1116  01C2                     	ds	3
  1117  01C5                     _tf:	
  1118  01C5                     	ds	3
  1119                           
  1120                           	psect	clrtext
  1121  115D                     clear_ram0:	
  1122                           ;	Called with FSR containing the base address, and
  1123                           ;	W with the last address+1
  1124                           
  1125  115D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1126  115E                     clrloop0:	
  1127  115E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1128  115F  0A84               	incf	4,f	;increment pointer
  1129  1160  0604               	xorwf	4,w	;XOR with final address
  1130  1161  1903               	btfsc	3,2	;have we reached the end yet?
  1131  1162  3400               	retlw	0	;all done for this memory range, return
  1132  1163  0604               	xorwf	4,w	;XOR again to restore value
  1133  1164  295E               	goto	clrloop0	;do the next byte
  1134                           
  1135                           	psect	cstackBANK3
  1136  01C8                     __pcstackBANK3:	
  1137  01C8                     ??_main:	
  1138                           
  1139                           ; 0 bytes @ 0x0
  1140  01C8                     	ds	3
  1141                           
  1142                           	psect	cstackBANK1
  1143  00C6                     __pcstackBANK1:	
  1144  00C6                     ??_ISR:	
  1145                           
  1146                           ; 0 bytes @ 0x0
  1147  00C6                     	ds	4
  1148  00CA                     ?_PWM_DutyCycle2:	
  1149  00CA                     ??_TIMER0_Set:	
  1150                           ; 0 bytes @ 0x4
  1151                           
  1152  00CA                     ??_TIMER0_Init:	
  1153                           ; 0 bytes @ 0x4
  1154                           
  1155  00CA                     ??_ADC_Init:	
  1156                           ; 0 bytes @ 0x4
  1157                           
  1158  00CA                     ??_PWM_Init:	
  1159                           ; 0 bytes @ 0x4
  1160                           
  1161  00CA                     ?_LCD_Cursor:	
  1162                           ; 0 bytes @ 0x4
  1163                           
  1164  00CA                     ?_PWM_DutyCycle1:	
  1165                           ; 0 bytes @ 0x4
  1166                           
  1167  00CA                     ??_isdigit:	
  1168                           ; 0 bytes @ 0x4
  1169                           
  1170  00CA                     ??_USART_WriteChar:	
  1171                           ; 0 bytes @ 0x4
  1172                           
  1173  00CA                     ??_LCD_WriteCmd:	
  1174                           ; 0 bytes @ 0x4
  1175                           
  1176  00CA                     ??_LCD_WriteData:	
  1177                           ; 0 bytes @ 0x4
  1178                           
  1179  00CA                     ?___wmul:	
  1180                           ; 0 bytes @ 0x4
  1181                           
  1182  00CA                     ?___lwdiv:	
  1183                           ; 2 bytes @ 0x4
  1184                           
  1185  00CA                     ?___aldiv:	
  1186                           ; 2 bytes @ 0x4
  1187                           
  1188  00CA                     USART_WriteChar@byte:	
  1189                           ; 4 bytes @ 0x4
  1190                           
  1191  00CA                     TIMER0_Set@contagens:	
  1192                           ; 1 bytes @ 0x4
  1193                           
  1194  00CA                     LCD_Cursor@Col:	
  1195                           ; 1 bytes @ 0x4
  1196                           
  1197  00CA                     _isdigit$1454:	
  1198                           ; 1 bytes @ 0x4
  1199                           
  1200  00CA                     PWM_DutyCycle1@valor:	
  1201                           ; 1 bytes @ 0x4
  1202                           
  1203  00CA                     PWM_DutyCycle2@valor:	
  1204                           ; 2 bytes @ 0x4
  1205                           
  1206  00CA                     ___wmul@multiplier:	
  1207                           ; 2 bytes @ 0x4
  1208                           
  1209  00CA                     ___lwdiv@divisor:	
  1210                           ; 2 bytes @ 0x4
  1211                           
  1212  00CA                     ___aldiv@divisor:	
  1213                           ; 2 bytes @ 0x4
  1214                           
  1215                           
  1216                           ; 4 bytes @ 0x4
  1217  00CA                     	ds	1
  1218  00CB                     ?_USART_WriteString:	
  1219  00CB                     ??_LCD_Cursor:	
  1220                           ; 0 bytes @ 0x5
  1221                           
  1222  00CB                     LCD_WriteCmd@Byte:	
  1223                           ; 0 bytes @ 0x5
  1224                           
  1225  00CB                     LCD_WriteData@Byte:	
  1226                           ; 1 bytes @ 0x5
  1227                           
  1228  00CB                     isdigit@c:	
  1229                           ; 1 bytes @ 0x5
  1230                           
  1231  00CB                     USART_WriteString@str:	
  1232                           ; 1 bytes @ 0x5
  1233                           
  1234                           
  1235                           ; 2 bytes @ 0x5
  1236  00CB                     	ds	1
  1237  00CC                     ??_PWM_DutyCycle2:	
  1238  00CC                     ??_LCD_Init:	
  1239                           ; 0 bytes @ 0x6
  1240                           
  1241  00CC                     ?_LCD_WriteString:	
  1242                           ; 0 bytes @ 0x6
  1243                           
  1244  00CC                     ??_PWM_DutyCycle1:	
  1245                           ; 0 bytes @ 0x6
  1246                           
  1247  00CC                     ??_LCD_Clear:	
  1248                           ; 0 bytes @ 0x6
  1249                           
  1250  00CC                     LCD_Cursor@Row:	
  1251                           ; 0 bytes @ 0x6
  1252                           
  1253  00CC                     LCD_WriteString@Str:	
  1254                           ; 1 bytes @ 0x6
  1255                           
  1256  00CC                     ___wmul@multiplicand:	
  1257                           ; 2 bytes @ 0x6
  1258                           
  1259  00CC                     ___lwdiv@dividend:	
  1260                           ; 2 bytes @ 0x6
  1261                           
  1262                           
  1263                           ; 2 bytes @ 0x6
  1264  00CC                     	ds	1
  1265  00CD                     ??_USART_WriteString:	
  1266                           
  1267                           ; 0 bytes @ 0x7
  1268  00CD                     	ds	1
  1269  00CE                     ??_LCD_WriteString:	
  1270  00CE                     ??___wmul:	
  1271                           ; 0 bytes @ 0x8
  1272                           
  1273  00CE                     ??___lwdiv:	
  1274                           ; 0 bytes @ 0x8
  1275                           
  1276  00CE                     ___wmul@product:	
  1277                           ; 0 bytes @ 0x8
  1278                           
  1279  00CE                     ___aldiv@dividend:	
  1280                           ; 2 bytes @ 0x8
  1281                           
  1282                           
  1283                           ; 4 bytes @ 0x8
  1284  00CE                     	ds	1
  1285  00CF                     ___lwdiv@quotient:	
  1286                           
  1287                           ; 2 bytes @ 0x9
  1288  00CF                     	ds	2
  1289  00D1                     ___lwdiv@counter:	
  1290                           
  1291                           ; 1 bytes @ 0xB
  1292  00D1                     	ds	1
  1293  00D2                     ??___aldiv:	
  1294  00D2                     ?___lwmod:	
  1295                           ; 0 bytes @ 0xC
  1296                           
  1297  00D2                     ___lwmod@divisor:	
  1298                           ; 2 bytes @ 0xC
  1299                           
  1300                           
  1301                           ; 2 bytes @ 0xC
  1302  00D2                     	ds	1
  1303  00D3                     ___aldiv@counter:	
  1304                           
  1305                           ; 1 bytes @ 0xD
  1306  00D3                     	ds	1
  1307  00D4                     ___aldiv@sign:	
  1308  00D4                     ___lwmod@dividend:	
  1309                           ; 1 bytes @ 0xE
  1310                           
  1311                           
  1312                           ; 2 bytes @ 0xE
  1313  00D4                     	ds	1
  1314  00D5                     ___aldiv@quotient:	
  1315                           
  1316                           ; 4 bytes @ 0xF
  1317  00D5                     	ds	1
  1318  00D6                     ??___lwmod:	
  1319                           
  1320                           ; 0 bytes @ 0x10
  1321  00D6                     	ds	1
  1322  00D7                     ___lwmod@counter:	
  1323                           
  1324                           ; 1 bytes @ 0x11
  1325  00D7                     	ds	1
  1326  00D8                     ?_sprintf:	
  1327  00D8                     sprintf@f:	
  1328                           ; 2 bytes @ 0x12
  1329                           
  1330                           
  1331                           ; 2 bytes @ 0x12
  1332  00D8                     	ds	1
  1333  00D9                     ?_USART_Init:	
  1334  00D9                     USART_Init@BaudRate:	
  1335                           ; 0 bytes @ 0x13
  1336                           
  1337                           
  1338                           ; 4 bytes @ 0x13
  1339  00D9                     	ds	3
  1340  00DC                     ??_sprintf:	
  1341                           
  1342                           ; 0 bytes @ 0x16
  1343  00DC                     	ds	1
  1344  00DD                     ??_USART_Init:	
  1345                           
  1346                           ; 0 bytes @ 0x17
  1347  00DD                     	ds	2
  1348  00DF                     sprintf@ap:	
  1349                           
  1350                           ; 1 bytes @ 0x19
  1351  00DF                     	ds	1
  1352  00E0                     sprintf@prec:	
  1353                           
  1354                           ; 1 bytes @ 0x1A
  1355  00E0                     	ds	1
  1356  00E1                     sprintf@_val:	
  1357                           
  1358                           ; 4 bytes @ 0x1B
  1359  00E1                     	ds	4
  1360  00E5                     sprintf@flag:	
  1361                           
  1362                           ; 1 bytes @ 0x1F
  1363  00E5                     	ds	1
  1364  00E6                     sprintf@width:	
  1365                           
  1366                           ; 2 bytes @ 0x20
  1367  00E6                     	ds	2
  1368  00E8                     sprintf@sp:	
  1369                           
  1370                           ; 1 bytes @ 0x22
  1371  00E8                     	ds	1
  1372  00E9                     sprintf@c:	
  1373                           
  1374                           ; 1 bytes @ 0x23
  1375  00E9                     	ds	1
  1376                           
  1377                           	psect	cstackCOMMON
  1378  0070                     __pcstackCOMMON:	
  1379  0070                     ?_TIMER0_Set:	
  1380  0070                     ?_TIMER0_Init:	
  1381                           ; 0 bytes @ 0x0
  1382                           
  1383  0070                     ?_ADC_Init:	
  1384                           ; 0 bytes @ 0x0
  1385                           
  1386  0070                     ?_PWM_Init:	
  1387                           ; 0 bytes @ 0x0
  1388                           
  1389  0070                     ?_LCD_Init:	
  1390                           ; 0 bytes @ 0x0
  1391                           
  1392  0070                     ?_LCD_Clear:	
  1393                           ; 0 bytes @ 0x0
  1394                           
  1395  0070                     ?_isdigit:	
  1396                           ; 0 bytes @ 0x0
  1397                           
  1398  0070                     ?_Fuzzy:	
  1399                           ; 1 bit 
  1400                           
  1401  0070                     ?_ISR:	
  1402                           ; 0 bytes @ 0x0
  1403                           
  1404  0070                     ?_main:	
  1405                           ; 0 bytes @ 0x0
  1406                           
  1407  0070                     ?_USART_WriteChar:	
  1408                           ; 0 bytes @ 0x0
  1409                           
  1410  0070                     ?_LCD_WriteCmd:	
  1411                           ; 0 bytes @ 0x0
  1412                           
  1413  0070                     ?_LCD_WriteData:	
  1414                           ; 0 bytes @ 0x0
  1415                           
  1416  0070                     ?___ftge:	
  1417                           ; 0 bytes @ 0x0
  1418                           
  1419  0070                     ?i1_USART_WriteChar:	
  1420                           ; 1 bit 
  1421                           
  1422  0070                     ??i1_USART_WriteChar:	
  1423                           ; 0 bytes @ 0x0
  1424                           
  1425  0070                     ?i1_TIMER0_Set:	
  1426                           ; 0 bytes @ 0x0
  1427                           
  1428  0070                     ??i1_TIMER0_Set:	
  1429                           ; 0 bytes @ 0x0
  1430                           
  1431  0070                     ?i1_PWM_DutyCycle2:	
  1432                           ; 0 bytes @ 0x0
  1433                           
  1434  0070                     ?_USART_ReceiveChar:	
  1435                           ; 0 bytes @ 0x0
  1436                           
  1437  0070                     ?i1___lwdiv:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0070                     ?___ftpack:	
  1441                           ; 2 bytes @ 0x0
  1442                           
  1443  0070                     ?___ftneg:	
  1444                           ; 3 bytes @ 0x0
  1445                           
  1446  0070                     ?___fttol:	
  1447                           ; 3 bytes @ 0x0
  1448                           
  1449  0070                     i1USART_WriteChar@byte:	
  1450                           ; 4 bytes @ 0x0
  1451                           
  1452  0070                     i1TIMER0_Set@contagens:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455  0070                     i1PWM_DutyCycle2@valor:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458  0070                     i1___lwdiv@divisor:	
  1459                           ; 2 bytes @ 0x0
  1460                           
  1461  0070                     ___ftpack@arg:	
  1462                           ; 2 bytes @ 0x0
  1463                           
  1464  0070                     ___ftge@ff1:	
  1465                           ; 3 bytes @ 0x0
  1466                           
  1467  0070                     ___ftneg@f1:	
  1468                           ; 3 bytes @ 0x0
  1469                           
  1470  0070                     ___fttol@f1:	
  1471                           ; 3 bytes @ 0x0
  1472                           
  1473                           
  1474                           ; 3 bytes @ 0x0
  1475  0070                     	ds	1
  1476  0071                     ?i1_USART_WriteString:	
  1477  0071                     i1USART_WriteString@str:	
  1478                           ; 0 bytes @ 0x1
  1479                           
  1480                           
  1481                           ; 2 bytes @ 0x1
  1482  0071                     	ds	1
  1483  0072                     ??i1_PWM_DutyCycle2:	
  1484  0072                     i1___lwdiv@dividend:	
  1485                           ; 0 bytes @ 0x2
  1486                           
  1487                           
  1488                           ; 2 bytes @ 0x2
  1489  0072                     	ds	1
  1490  0073                     ??_USART_ReceiveChar:	
  1491  0073                     ??___ftneg:	
  1492                           ; 0 bytes @ 0x3
  1493                           
  1494  0073                     ??i1_USART_WriteString:	
  1495                           ; 0 bytes @ 0x3
  1496                           
  1497  0073                     ___ftpack@exp:	
  1498                           ; 0 bytes @ 0x3
  1499                           
  1500  0073                     ___ftge@ff2:	
  1501                           ; 1 bytes @ 0x3
  1502                           
  1503                           
  1504                           ; 3 bytes @ 0x3
  1505  0073                     	ds	1
  1506  0074                     ??___fttol:	
  1507  0074                     ??i1___lwdiv:	
  1508                           ; 0 bytes @ 0x4
  1509                           
  1510  0074                     USART_ReceiveChar@byte:	
  1511                           ; 0 bytes @ 0x4
  1512                           
  1513  0074                     ___ftpack@sign:	
  1514                           ; 1 bytes @ 0x4
  1515                           
  1516                           
  1517                           ; 1 bytes @ 0x4
  1518  0074                     	ds	1
  1519  0075                     ??___ftpack:	
  1520  0075                     i1___lwdiv@quotient:	
  1521                           ; 0 bytes @ 0x5
  1522                           
  1523                           
  1524                           ; 2 bytes @ 0x5
  1525  0075                     	ds	1
  1526  0076                     ??___ftge:	
  1527                           
  1528                           ; 0 bytes @ 0x6
  1529  0076                     	ds	1
  1530  0077                     i1___lwdiv@counter:	
  1531                           
  1532                           ; 1 bytes @ 0x7
  1533  0077                     	ds	1
  1534  0078                     ?i1___wmul:	
  1535  0078                     ?___ftmul:	
  1536                           ; 2 bytes @ 0x8
  1537                           
  1538  0078                     ?___lwtoft:	
  1539                           ; 3 bytes @ 0x8
  1540                           
  1541  0078                     ___fttol@sign1:	
  1542                           ; 3 bytes @ 0x8
  1543                           
  1544  0078                     ___lwtoft@c:	
  1545                           ; 1 bytes @ 0x8
  1546                           
  1547  0078                     i1___wmul@multiplier:	
  1548                           ; 2 bytes @ 0x8
  1549                           
  1550  0078                     ___ftmul@f1:	
  1551                           ; 2 bytes @ 0x8
  1552                           
  1553                           
  1554                           ; 3 bytes @ 0x8
  1555  0078                     	ds	1
  1556  0079                     ___fttol@lval:	
  1557                           
  1558                           ; 4 bytes @ 0x9
  1559  0079                     	ds	1
  1560  007A                     i1___wmul@multiplicand:	
  1561                           
  1562                           ; 2 bytes @ 0xA
  1563  007A                     	ds	1
  1564  007B                     ??___lwtoft:	
  1565  007B                     ___ftmul@f2:	
  1566                           ; 0 bytes @ 0xB
  1567                           
  1568                           
  1569                           ; 3 bytes @ 0xB
  1570  007B                     	ds	1
  1571  007C                     ??_max_val:	
  1572  007C                     ??i1___wmul:	
  1573                           ; 0 bytes @ 0xC
  1574                           
  1575  007C                     i1___wmul@product:	
  1576                           ; 0 bytes @ 0xC
  1577                           
  1578                           
  1579                           ; 2 bytes @ 0xC
  1580  007C                     	ds	1
  1581  007D                     ___fttol@exp1:	
  1582                           
  1583                           ; 1 bytes @ 0xD
  1584  007D                     	ds	1
  1585  007E                     ??_trimf:	
  1586  007E                     ??_trapmf:	
  1587                           ; 0 bytes @ 0xE
  1588                           
  1589  007E                     ??_Fuzzy:	
  1590                           ; 0 bytes @ 0xE
  1591                           
  1592                           
  1593                           	psect	cstackBANK0
  1594  0020                     __pcstackBANK0:	
  1595                           ; 0 bytes @ 0xE
  1596                           
  1597  0020                     ??___ftmul:	
  1598  0020                     ?_max_val:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0020                     max_val@a:	
  1602                           ; 3 bytes @ 0x0
  1603                           
  1604                           
  1605                           ; 3 bytes @ 0x0
  1606  0020                     	ds	3
  1607  0023                     max_val@b:	
  1608                           
  1609                           ; 3 bytes @ 0x3
  1610  0023                     	ds	1
  1611  0024                     ___ftmul@exp:	
  1612                           
  1613                           ; 1 bytes @ 0x4
  1614  0024                     	ds	1
  1615  0025                     ___ftmul@f3_as_product:	
  1616                           
  1617                           ; 3 bytes @ 0x5
  1618  0025                     	ds	3
  1619  0028                     ___ftmul@cntr:	
  1620                           
  1621                           ; 1 bytes @ 0x8
  1622  0028                     	ds	1
  1623  0029                     ___ftmul@sign:	
  1624                           
  1625                           ; 1 bytes @ 0x9
  1626  0029                     	ds	1
  1627  002A                     ?___ftadd:	
  1628  002A                     ___ftadd@f1:	
  1629                           ; 3 bytes @ 0xA
  1630                           
  1631                           
  1632                           ; 3 bytes @ 0xA
  1633  002A                     	ds	3
  1634  002D                     ___ftadd@f2:	
  1635                           
  1636                           ; 3 bytes @ 0xD
  1637  002D                     	ds	3
  1638  0030                     ??___ftadd:	
  1639                           
  1640                           ; 0 bytes @ 0x10
  1641  0030                     	ds	4
  1642  0034                     ___ftadd@sign:	
  1643                           
  1644                           ; 1 bytes @ 0x14
  1645  0034                     	ds	1
  1646  0035                     ___ftadd@exp2:	
  1647                           
  1648                           ; 1 bytes @ 0x15
  1649  0035                     	ds	1
  1650  0036                     ___ftadd@exp1:	
  1651                           
  1652                           ; 1 bytes @ 0x16
  1653  0036                     	ds	1
  1654  0037                     ?___ftdiv:	
  1655  0037                     ___ftdiv@f2:	
  1656                           ; 3 bytes @ 0x17
  1657                           
  1658                           
  1659                           ; 3 bytes @ 0x17
  1660  0037                     	ds	3
  1661  003A                     ___ftdiv@f1:	
  1662                           
  1663                           ; 3 bytes @ 0x1A
  1664  003A                     	ds	3
  1665  003D                     ??___ftdiv:	
  1666                           
  1667                           ; 0 bytes @ 0x1D
  1668  003D                     	ds	4
  1669  0041                     ___ftdiv@cntr:	
  1670                           
  1671                           ; 1 bytes @ 0x21
  1672  0041                     	ds	1
  1673  0042                     ___ftdiv@f3:	
  1674                           
  1675                           ; 3 bytes @ 0x22
  1676  0042                     	ds	3
  1677  0045                     ___ftdiv@exp:	
  1678                           
  1679                           ; 1 bytes @ 0x25
  1680  0045                     	ds	1
  1681  0046                     ___ftdiv@sign:	
  1682                           
  1683                           ; 1 bytes @ 0x26
  1684  0046                     	ds	1
  1685  0047                     ?_trimf:	
  1686  0047                     ?_trapmf:	
  1687                           ; 3 bytes @ 0x27
  1688                           
  1689  0047                     trimf@x:	
  1690                           ; 3 bytes @ 0x27
  1691                           
  1692  0047                     trapmf@x:	
  1693                           ; 3 bytes @ 0x27
  1694                           
  1695                           
  1696                           ; 3 bytes @ 0x27
  1697  0047                     	ds	3
  1698  004A                     trimf@a:	
  1699  004A                     trapmf@a:	
  1700                           ; 3 bytes @ 0x2A
  1701                           
  1702                           
  1703                           ; 3 bytes @ 0x2A
  1704  004A                     	ds	3
  1705  004D                     trimf@b:	
  1706  004D                     trapmf@b:	
  1707                           ; 3 bytes @ 0x2D
  1708                           
  1709                           
  1710                           ; 3 bytes @ 0x2D
  1711  004D                     	ds	3
  1712  0050                     trimf@c:	
  1713  0050                     trapmf@c:	
  1714                           ; 3 bytes @ 0x30
  1715                           
  1716                           
  1717                           ; 3 bytes @ 0x30
  1718  0050                     	ds	3
  1719  0053                     trimf@ua:	
  1720  0053                     trapmf@d:	
  1721                           ; 3 bytes @ 0x33
  1722                           
  1723                           
  1724                           ; 3 bytes @ 0x33
  1725  0053                     	ds	3
  1726  0056                     trapmf@ua:	
  1727                           
  1728                           ; 3 bytes @ 0x36
  1729  0056                     	ds	3
  1730  0059                     Fuzzy@a:	
  1731                           
  1732                           ; 2 bytes @ 0x39
  1733  0059                     	ds	2
  1734  005B                     Fuzzy@a_237:	
  1735                           
  1736                           ; 2 bytes @ 0x3B
  1737  005B                     	ds	2
  1738  005D                     Fuzzy@a_238:	
  1739                           
  1740                           ; 2 bytes @ 0x3D
  1741  005D                     	ds	2
  1742  005F                     Fuzzy@a_239:	
  1743                           
  1744                           ; 2 bytes @ 0x3F
  1745  005F                     	ds	2
  1746  0061                     Fuzzy@a_240:	
  1747                           
  1748                           ; 2 bytes @ 0x41
  1749  0061                     	ds	2
  1750  0063                     Fuzzy@tip:	
  1751                           
  1752                           ; 3 bytes @ 0x43
  1753  0063                     	ds	3
  1754  0066                     Fuzzy@mantem:	
  1755                           
  1756                           ; 3 bytes @ 0x46
  1757  0066                     	ds	3
  1758  0069                     Fuzzy@reduz:	
  1759                           
  1760                           ; 3 bytes @ 0x49
  1761  0069                     	ds	3
  1762  006C                     Fuzzy@aumenta:	
  1763                           
  1764                           ; 3 bytes @ 0x4C
  1765  006C                     	ds	3
  1766                           
  1767                           	psect	maintext
  1768  09AD                     __pmaintext:	
  1769 ;;
  1770 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1771 ;;
  1772 ;; *************** function _main *****************
  1773 ;; Defined at:
  1774 ;;		line 477 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;		None               void
  1781 ;; Registers used:
  1782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 17F/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0
  1790 ;;      Temps:          0       0       0       3       0
  1791 ;;      Totals:         0       0       0       3       0
  1792 ;;Total ram usage:        3 bytes
  1793 ;; Hardware stack levels required when called:    7
  1794 ;; This function calls:
  1795 ;;		_ADC_Init
  1796 ;;		_LCD_Clear
  1797 ;;		_LCD_Cursor
  1798 ;;		_LCD_Init
  1799 ;;		_LCD_WriteString
  1800 ;;		_PWM_DutyCycle1
  1801 ;;		_PWM_DutyCycle2
  1802 ;;		_PWM_Init
  1803 ;;		_TIMER0_Init
  1804 ;;		_TIMER0_Set
  1805 ;;		_USART_Init
  1806 ;;		_USART_WriteString
  1807 ;;		_sprintf
  1808 ;; This function is called by:
  1809 ;;		Startup code after reset
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _main
  1815  09AD                     _main:	
  1816                           
  1817                           ;main.c: 479: TRISA = 0b00000001;
  1818                           
  1819                           ;incstack = 0
  1820                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1821  09AD  3001               	movlw	1
  1822  09AE  1683               	bsf	3,5	;RP0=1, select bank1
  1823  09AF  1303               	bcf	3,6	;RP1=0, select bank1
  1824  09B0  0085               	movwf	5	;volatile
  1825                           
  1826                           ;main.c: 480: PORTA = 0b00000001;
  1827  09B1  3001               	movlw	1
  1828  09B2  1283               	bcf	3,5	;RP0=0, select bank0
  1829  09B3  1303               	bcf	3,6	;RP1=0, select bank0
  1830  09B4  0085               	movwf	5	;volatile
  1831                           
  1832                           ;main.c: 481: TRISB = 0b00000000;
  1833  09B5  1683               	bsf	3,5	;RP0=1, select bank1
  1834  09B6  1303               	bcf	3,6	;RP1=0, select bank1
  1835  09B7  0186               	clrf	6	;volatile
  1836                           
  1837                           ;main.c: 482: PORTB = 0b00000000;
  1838  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  1839  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  1840  09BA  0186               	clrf	6	;volatile
  1841                           
  1842                           ;main.c: 483: TRISC = 0b10000001;
  1843  09BB  3081               	movlw	129
  1844  09BC  1683               	bsf	3,5	;RP0=1, select bank1
  1845  09BD  1303               	bcf	3,6	;RP1=0, select bank1
  1846  09BE  0087               	movwf	7	;volatile
  1847                           
  1848                           ;main.c: 484: PORTC = 0b11000000;
  1849  09BF  30C0               	movlw	192
  1850  09C0  1283               	bcf	3,5	;RP0=0, select bank0
  1851  09C1  1303               	bcf	3,6	;RP1=0, select bank0
  1852  09C2  0087               	movwf	7	;volatile
  1853                           
  1854                           ;main.c: 485: TRISD = 0b00000000;
  1855  09C3  1683               	bsf	3,5	;RP0=1, select bank1
  1856  09C4  1303               	bcf	3,6	;RP1=0, select bank1
  1857  09C5  0188               	clrf	8	;volatile
  1858                           
  1859                           ;main.c: 486: PORTD = 0b00000000;
  1860  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  1861  09C7  1303               	bcf	3,6	;RP1=0, select bank0
  1862  09C8  0188               	clrf	8	;volatile
  1863                           
  1864                           ;main.c: 487: TRISE = 0b00000000;
  1865  09C9  1683               	bsf	3,5	;RP0=1, select bank1
  1866  09CA  1303               	bcf	3,6	;RP1=0, select bank1
  1867  09CB  0189               	clrf	9	;volatile
  1868                           
  1869                           ;main.c: 488: PORTE = 0b00000000;
  1870  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  1871  09CD  1303               	bcf	3,6	;RP1=0, select bank0
  1872  09CE  0189               	clrf	9	;volatile
  1873                           
  1874                           ;main.c: 491: T1CON = 0x03;
  1875  09CF  3003               	movlw	3
  1876  09D0  0090               	movwf	16	;volatile
  1877                           
  1878                           ;main.c: 492: TMR1L = 0x00;
  1879  09D1  018E               	clrf	14	;volatile
  1880                           
  1881                           ;main.c: 493: TMR1H = 0x00;
  1882  09D2  018F               	clrf	15	;volatile
  1883                           
  1884                           ;main.c: 496: USART_Init(115200);
  1885  09D3  3000               	movlw	0
  1886  09D4  1683               	bsf	3,5	;RP0=1, select bank1
  1887  09D5  1303               	bcf	3,6	;RP1=0, select bank1
  1888  09D6  00DC               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1889  09D7  3001               	movlw	1
  1890  09D8  00DB               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1891  09D9  30C2               	movlw	194
  1892  09DA  00DA               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1893  09DB  3000               	movlw	0
  1894  09DC  00D9               	movwf	USART_Init@BaudRate^(0+128)
  1895  09DD  160A  118A  2416  120A  158A  	fcall	_USART_Init
  1896                           
  1897                           ;main.c: 497: TIMER0_Init();
  1898  09E2  160A  118A  2165  120A  158A  	fcall	_TIMER0_Init
  1899                           
  1900                           ;main.c: 498: ADC_Init();
  1901  09E7  160A  118A  218D  120A  158A  	fcall	_ADC_Init
  1902                           
  1903                           ;main.c: 499: PWM_Init();
  1904  09EC  160A  118A  22BF  120A  158A  	fcall	_PWM_Init
  1905                           
  1906                           ;main.c: 500: LCD_Init();
  1907  09F1  120A  158A  201E  120A  158A  	fcall	_LCD_Init
  1908                           
  1909                           ;main.c: 503: INTCONbits.PEIE = 1;
  1910  09F6  170B               	bsf	11,6	;volatile
  1911                           
  1912                           ;main.c: 504: INTCONbits.GIE = 1;
  1913  09F7  178B               	bsf	11,7	;volatile
  1914                           
  1915                           ;main.c: 507: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1916  09F8  3044               	movlw	low (STR_11| (0+32768))
  1917  09F9  1683               	bsf	3,5	;RP0=1, select bank1
  1918  09FA  1303               	bcf	3,6	;RP1=0, select bank1
  1919  09FB  00CB               	movwf	USART_WriteString@str^(0+128)
  1920  09FC  3090               	movlw	high (STR_11| (0+32768))
  1921  09FD  00CC               	movwf	(USART_WriteString@str^(0+128)+1)
  1922  09FE  120A  118A  27CF  120A  158A  	fcall	_USART_WriteString
  1923                           
  1924                           ;main.c: 508: USART_WriteString("USART: 115.200bps\n\r");
  1925  0A03  3061               	movlw	low (STR_12| (0+32768))
  1926  0A04  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0A05  1303               	bcf	3,6	;RP1=0, select bank1
  1928  0A06  00CB               	movwf	USART_WriteString@str^(0+128)
  1929  0A07  3090               	movlw	high (STR_12| (0+32768))
  1930  0A08  00CC               	movwf	(USART_WriteString@str^(0+128)+1)
  1931  0A09  120A  118A  27CF  120A  158A  	fcall	_USART_WriteString
  1932                           
  1933                           ;main.c: 511: LCD_Init();
  1934  0A0E  120A  158A  201E  120A  158A  	fcall	_LCD_Init
  1935                           
  1936                           ;main.c: 512: LCD_Cursor(0,0);
  1937  0A13  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0A14  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0A15  01CA               	clrf	LCD_Cursor@Col^(0+128)
  1940  0A16  3000               	movlw	0
  1941  0A17  160A  118A  2217  120A  158A  	fcall	_LCD_Cursor
  1942                           
  1943                           ;main.c: 513: LCD_WriteString("Inicializando...");
  1944  0A1C  3075               	movlw	low (STR_13| (0+32768))
  1945  0A1D  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0A1E  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0A1F  00CC               	movwf	LCD_WriteString@Str^(0+128)
  1948  0A20  3090               	movlw	high (STR_13| (0+32768))
  1949  0A21  00CD               	movwf	(LCD_WriteString@Str^(0+128)+1)
  1950  0A22  160A  118A  2331  120A  158A  	fcall	_LCD_WriteString
  1951                           
  1952                           ;main.c: 516: PWM_DutyCycle1(0);
  1953  0A27  3000               	movlw	0
  1954  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  1955  0A29  1303               	bcf	3,6	;RP1=0, select bank1
  1956  0A2A  00CA               	movwf	PWM_DutyCycle1@valor^(0+128)
  1957  0A2B  3000               	movlw	0
  1958  0A2C  00CB               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1959  0A2D  160A  118A  2237  120A  158A  	fcall	_PWM_DutyCycle1
  1960                           
  1961                           ;main.c: 517: PWM_DutyCycle2(0);
  1962  0A32  3000               	movlw	0
  1963  0A33  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0A34  1303               	bcf	3,6	;RP1=0, select bank1
  1965  0A35  00CA               	movwf	PWM_DutyCycle2@valor^(0+128)
  1966  0A36  3000               	movlw	0
  1967  0A37  00CB               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1968  0A38  160A  118A  2258  120A  158A  	fcall	_PWM_DutyCycle2
  1969                           
  1970                           ;main.c: 520: TIMER0_Set(238);
  1971  0A3D  30EE               	movlw	238
  1972  0A3E  160A  118A  2155  120A  158A  	fcall	_TIMER0_Set
  1973                           
  1974                           ;main.c: 523: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1975  0A43  3018               	movlw	24
  1976  0A44  1683               	bsf	3,5	;RP0=1, select bank3
  1977  0A45  1703               	bsf	3,6	;RP1=1, select bank3
  1978  0A46  00CA               	movwf	(??_main^(0+384)+2)
  1979  0A47  3061               	movlw	97
  1980  0A48  00C9               	movwf	(??_main^(0+384)+1)
  1981  0A49  306E               	movlw	110
  1982  0A4A  00C8               	movwf	??_main^(0+384)
  1983  0A4B                     u4147:	
  1984  0A4B  0BC8               	decfsz	??_main^(0+384),f
  1985  0A4C  2A4B               	goto	u4147
  1986  0A4D  0BC9               	decfsz	(??_main^(0+384)+1),f
  1987  0A4E  2A4B               	goto	u4147
  1988  0A4F  0BCA               	decfsz	(??_main^(0+384)+2),f
  1989  0A50  2A4B               	goto	u4147
  1990  0A51  0000               	nop
  1991  0A52                     l212:	
  1992                           ;main.c: 526: while(1)
  1993                           
  1994                           
  1995                           ;main.c: 527: {
  1996                           ;main.c: 529: sprintf(display_rpm,"%04d", deltaV);
  1997  0A52  301E               	movlw	low (STR_14| (0+32768))
  1998  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  1999  0A54  1303               	bcf	3,6	;RP1=0, select bank1
  2000  0A55  00D8               	movwf	sprintf@f^(0+128)
  2001  0A56  3091               	movlw	high (STR_14| (0+32768))
  2002  0A57  00D9               	movwf	(sprintf@f^(0+128)+1)
  2003  0A58  0841               	movf	(_deltaV+1)^(0+128),w
  2004  0A59  01DB               	clrf	((?_sprintf+1)^(0+128)+2)
  2005  0A5A  07DB               	addwf	((?_sprintf+1)^(0+128)+2),f
  2006  0A5B  0840               	movf	_deltaV^(0+128),w
  2007  0A5C  01DA               	clrf	(?_sprintf^(0+128)+2)
  2008  0A5D  07DA               	addwf	(?_sprintf^(0+128)+2),f
  2009  0A5E  30B8               	movlw	_display_rpm& (0+255)
  2010  0A5F  120A  158A  25ED  120A  158A  	fcall	_sprintf
  2011                           
  2012                           ;main.c: 530: sprintf(display_pwm,"%04d", pwm);
  2013  0A64  301E               	movlw	low (STR_14| (0+32768))
  2014  0A65  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0A66  1303               	bcf	3,6	;RP1=0, select bank1
  2016  0A67  00D8               	movwf	sprintf@f^(0+128)
  2017  0A68  3091               	movlw	high (STR_14| (0+32768))
  2018  0A69  00D9               	movwf	(sprintf@f^(0+128)+1)
  2019  0A6A  0845               	movf	(_pwm+1)^(0+128),w
  2020  0A6B  01DB               	clrf	((?_sprintf+1)^(0+128)+2)
  2021  0A6C  07DB               	addwf	((?_sprintf+1)^(0+128)+2),f
  2022  0A6D  0844               	movf	_pwm^(0+128),w
  2023  0A6E  01DA               	clrf	(?_sprintf^(0+128)+2)
  2024  0A6F  07DA               	addwf	(?_sprintf^(0+128)+2),f
  2025  0A70  30AE               	movlw	_display_pwm& (0+255)
  2026  0A71  120A  158A  25ED  120A  158A  	fcall	_sprintf
  2027                           
  2028                           ;main.c: 534: USART_WriteString(display_rpm);
  2029  0A76  30B8               	movlw	_display_rpm& (0+255)
  2030  0A77  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0A78  1303               	bcf	3,6	;RP1=0, select bank1
  2032  0A79  00CB               	movwf	USART_WriteString@str^(0+128)
  2033  0A7A  3001               	movlw	1
  2034  0A7B  00CC               	movwf	(USART_WriteString@str+1)^(0+128)
  2035  0A7C  120A  118A  27CF  120A  158A  	fcall	_USART_WriteString
  2036                           
  2037                           ;main.c: 535: USART_WriteString("\n\r");
  2038  0A81  3092               	movlw	low ((STR_9+12)| (0+32768))
  2039  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  2040  0A83  1303               	bcf	3,6	;RP1=0, select bank1
  2041  0A84  00CB               	movwf	USART_WriteString@str^(0+128)
  2042  0A85  3090               	movlw	high ((STR_9+12)| (0+32768))
  2043  0A86  00CC               	movwf	(USART_WriteString@str^(0+128)+1)
  2044  0A87  120A  118A  27CF  120A  158A  	fcall	_USART_WriteString
  2045                           
  2046                           ;main.c: 538: LCD_Clear();
  2047  0A8C  160A  118A  2308  120A  158A  	fcall	_LCD_Clear
  2048                           
  2049                           ;main.c: 539: LCD_Cursor(0,0);
  2050  0A91  1683               	bsf	3,5	;RP0=1, select bank1
  2051  0A92  1303               	bcf	3,6	;RP1=0, select bank1
  2052  0A93  01CA               	clrf	LCD_Cursor@Col^(0+128)
  2053  0A94  3000               	movlw	0
  2054  0A95  160A  118A  2217  120A  158A  	fcall	_LCD_Cursor
  2055                           
  2056                           ;main.c: 540: LCD_WriteString("DlV: ");
  2057  0A9A  3018               	movlw	low (STR_17| (0+32768))
  2058  0A9B  1683               	bsf	3,5	;RP0=1, select bank1
  2059  0A9C  1303               	bcf	3,6	;RP1=0, select bank1
  2060  0A9D  00CC               	movwf	LCD_WriteString@Str^(0+128)
  2061  0A9E  3091               	movlw	high (STR_17| (0+32768))
  2062  0A9F  00CD               	movwf	(LCD_WriteString@Str^(0+128)+1)
  2063  0AA0  160A  118A  2331  120A  158A  	fcall	_LCD_WriteString
  2064                           
  2065                           ;main.c: 541: LCD_Cursor(0,6);
  2066  0AA5  3006               	movlw	6
  2067  0AA6  1683               	bsf	3,5	;RP0=1, select bank3
  2068  0AA7  1703               	bsf	3,6	;RP1=1, select bank3
  2069  0AA8  00C8               	movwf	??_main^(0+384)
  2070  0AA9  0848               	movf	??_main^(0+384),w
  2071  0AAA  1683               	bsf	3,5	;RP0=1, select bank1
  2072  0AAB  1303               	bcf	3,6	;RP1=0, select bank1
  2073  0AAC  00CA               	movwf	LCD_Cursor@Col^(0+128)
  2074  0AAD  3000               	movlw	0
  2075  0AAE  160A  118A  2217  120A  158A  	fcall	_LCD_Cursor
  2076                           
  2077                           ;main.c: 542: LCD_WriteString(display_rpm);
  2078  0AB3  30B8               	movlw	_display_rpm& (0+255)
  2079  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0AB6  00CC               	movwf	LCD_WriteString@Str^(0+128)
  2082  0AB7  3001               	movlw	1
  2083  0AB8  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2084  0AB9  160A  118A  2331  120A  158A  	fcall	_LCD_WriteString
  2085                           
  2086                           ;main.c: 543: LCD_Cursor(1,0);
  2087  0ABE  1683               	bsf	3,5	;RP0=1, select bank1
  2088  0ABF  1303               	bcf	3,6	;RP1=0, select bank1
  2089  0AC0  01CA               	clrf	LCD_Cursor@Col^(0+128)
  2090  0AC1  3001               	movlw	1
  2091  0AC2  160A  118A  2217  120A  158A  	fcall	_LCD_Cursor
  2092                           
  2093                           ;main.c: 544: LCD_WriteString("PWM: ");
  2094  0AC7  3012               	movlw	low (STR_18| (0+32768))
  2095  0AC8  1683               	bsf	3,5	;RP0=1, select bank1
  2096  0AC9  1303               	bcf	3,6	;RP1=0, select bank1
  2097  0ACA  00CC               	movwf	LCD_WriteString@Str^(0+128)
  2098  0ACB  3091               	movlw	high (STR_18| (0+32768))
  2099  0ACC  00CD               	movwf	(LCD_WriteString@Str^(0+128)+1)
  2100  0ACD  160A  118A  2331  120A  158A  	fcall	_LCD_WriteString
  2101                           
  2102                           ;main.c: 545: LCD_Cursor(1,6);
  2103  0AD2  3006               	movlw	6
  2104  0AD3  1683               	bsf	3,5	;RP0=1, select bank3
  2105  0AD4  1703               	bsf	3,6	;RP1=1, select bank3
  2106  0AD5  00C8               	movwf	??_main^(0+384)
  2107  0AD6  0848               	movf	??_main^(0+384),w
  2108  0AD7  1683               	bsf	3,5	;RP0=1, select bank1
  2109  0AD8  1303               	bcf	3,6	;RP1=0, select bank1
  2110  0AD9  00CA               	movwf	LCD_Cursor@Col^(0+128)
  2111  0ADA  3001               	movlw	1
  2112  0ADB  160A  118A  2217  120A  158A  	fcall	_LCD_Cursor
  2113                           
  2114                           ;main.c: 546: LCD_WriteString(display_pwm);
  2115  0AE0  30AE               	movlw	_display_pwm& (0+255)
  2116  0AE1  1683               	bsf	3,5	;RP0=1, select bank1
  2117  0AE2  1303               	bcf	3,6	;RP1=0, select bank1
  2118  0AE3  00CC               	movwf	LCD_WriteString@Str^(0+128)
  2119  0AE4  3001               	movlw	1
  2120  0AE5  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2121  0AE6  160A  118A  2331  120A  158A  	fcall	_LCD_WriteString
  2122                           
  2123                           ;main.c: 548: _delay((unsigned long)((200)*(18432000/4000.0)));
  2124  0AEB  3005               	movlw	5
  2125  0AEC  1683               	bsf	3,5	;RP0=1, select bank3
  2126  0AED  1703               	bsf	3,6	;RP1=1, select bank3
  2127  0AEE  00CA               	movwf	(??_main^(0+384)+2)
  2128  0AEF  30AD               	movlw	173
  2129  0AF0  00C9               	movwf	(??_main^(0+384)+1)
  2130  0AF1  30E0               	movlw	224
  2131  0AF2  00C8               	movwf	??_main^(0+384)
  2132  0AF3                     u4157:	
  2133  0AF3  0BC8               	decfsz	??_main^(0+384),f
  2134  0AF4  2AF3               	goto	u4157
  2135  0AF5  0BC9               	decfsz	(??_main^(0+384)+1),f
  2136  0AF6  2AF3               	goto	u4157
  2137  0AF7  0BCA               	decfsz	(??_main^(0+384)+2),f
  2138  0AF8  2AF3               	goto	u4157
  2139  0AF9  2A52               	goto	l212
  2140  0AFA                     __end_of_main:	
  2141                           
  2142                           	psect	text1
  2143  0DED                     __ptext1:	
  2144 ;; *************** function _sprintf *****************
  2145 ;; Defined at:
  2146 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  sp              1    wreg     PTR unsigned char 
  2149 ;;		 -> display_pwm(10), display_rpm(10), 
  2150 ;;  f               2   18[BANK1 ] PTR const unsigned char 
  2151 ;;		 -> STR_15(5), STR_14(5), 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  sp              1   34[BANK1 ] PTR unsigned char 
  2154 ;;		 -> display_pwm(10), display_rpm(10), 
  2155 ;;  _val            4   27[BANK1 ] struct .
  2156 ;;  width           2   32[BANK1 ] int 
  2157 ;;  c               1   35[BANK1 ] char 
  2158 ;;  flag            1   31[BANK1 ] unsigned char 
  2159 ;;  prec            1   26[BANK1 ] char 
  2160 ;;  ap              1   25[BANK1 ] PTR void [1]
  2161 ;;		 -> ?_sprintf(2), 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  2   18[BANK1 ] int 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       0       4       0       0
  2172 ;;      Locals:         0       0      11       0       0
  2173 ;;      Temps:          0       0       3       0       0
  2174 ;;      Totals:         0       0      18       0       0
  2175 ;;Total ram usage:       18 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    6
  2178 ;; This function calls:
  2179 ;;		___lwdiv
  2180 ;;		___lwmod
  2181 ;;		___wmul
  2182 ;;		_isdigit
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           
  2189                           ;psect for function _sprintf
  2190  0DED                     _sprintf:	
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2194                           ;sprintf@sp stored from wreg
  2195  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  2196  0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  2197  0DEF  00E8               	movwf	sprintf@sp^(0+128)
  2198                           
  2199                           ;doprnt.c: 494: va_list ap;
  2200                           ;doprnt.c: 499: signed char c;
  2201                           ;doprnt.c: 501: int width;
  2202                           ;doprnt.c: 506: signed char prec;
  2203                           ;doprnt.c: 508: unsigned char flag;
  2204                           ;doprnt.c: 527: union {
  2205                           ;doprnt.c: 528: unsigned int _val;
  2206                           ;doprnt.c: 529: struct {
  2207                           ;doprnt.c: 530: const char * _cp;
  2208                           ;doprnt.c: 531: unsigned _len;
  2209                           ;doprnt.c: 532: } _str;
  2210                           ;doprnt.c: 533: } _val;
  2211                           ;doprnt.c: 542: *ap = __va_start();
  2212  0DF0  30DA               	movlw	(?_sprintf+2)& (0+255)
  2213  0DF1  00DC               	movwf	??_sprintf^(0+128)
  2214  0DF2  085C               	movf	??_sprintf^(0+128),w
  2215  0DF3  00DF               	movwf	sprintf@ap^(0+128)
  2216  0DF4                     l3136:	
  2217                           ;doprnt.c: 545: while(c = *f++) {
  2218                           
  2219  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  2220  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  2221  0DF6  0859               	movf	(sprintf@f+1)^(0+128),w
  2222  0DF7  00DD               	movwf	(??_sprintf^(0+128)+1)
  2223  0DF8  0858               	movf	sprintf@f^(0+128),w
  2224  0DF9  00DC               	movwf	??_sprintf^(0+128)
  2225  0DFA  0AD8               	incf	sprintf@f^(0+128),f
  2226  0DFB  1903               	skipnz
  2227  0DFC  0AD9               	incf	(sprintf@f+1)^(0+128),f
  2228  0DFD  085D               	movf	(??_sprintf+1)^(0+128),w
  2229  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0E00  00FF               	movwf	127
  2232  0E01  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0E02  1303               	bcf	3,6	;RP1=0, select bank1
  2234  0E03  085C               	movf	??_sprintf^(0+128),w
  2235  0E04  0084               	movwf	4
  2236  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  2237  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  2238  0E07  160A  118A  2000  120A  158A  	fcall	stringtab
  2239  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  2240  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  2241  0E0E  00DE               	movwf	(??_sprintf+2)^(0+128)
  2242  0E0F  085E               	movf	(??_sprintf+2)^(0+128),w
  2243  0E10  00E9               	movwf	sprintf@c^(0+128)
  2244  0E11  08E9               	movf	sprintf@c^(0+128),f
  2245  0E12  1903               	btfsc	3,2
  2246  0E13  2FF9               	goto	l3138
  2247                           
  2248                           ;doprnt.c: 547: if(c != '%')
  2249  0E14  0869               	movf	sprintf@c^(0+128),w
  2250  0E15  3A25               	xorlw	37
  2251  0E16  1903               	skipnz
  2252  0E17  2E24               	goto	l3042
  2253                           
  2254                           ;doprnt.c: 549: {
  2255                           ;doprnt.c: 550: ((*sp++ = (c)));
  2256  0E18  0869               	movf	sprintf@c^(0+128),w
  2257  0E19  00DC               	movwf	??_sprintf^(0+128)
  2258  0E1A  0868               	movf	sprintf@sp^(0+128),w
  2259  0E1B  0084               	movwf	4
  2260  0E1C  085C               	movf	??_sprintf^(0+128),w
  2261  0E1D  1783               	bsf	3,7	;select IRP bank2
  2262  0E1E  0080               	movwf	0
  2263  0E1F  3001               	movlw	1
  2264  0E20  00DC               	movwf	??_sprintf^(0+128)
  2265  0E21  085C               	movf	??_sprintf^(0+128),w
  2266  0E22  07E8               	addwf	sprintf@sp^(0+128),f
  2267                           
  2268                           ;doprnt.c: 551: continue;
  2269  0E23  2DF4               	goto	l3136
  2270  0E24                     l3042:	
  2271                           
  2272                           ;doprnt.c: 552: }
  2273                           ;doprnt.c: 555: width = 0;
  2274  0E24  01E6               	clrf	sprintf@width^(0+128)
  2275  0E25  01E7               	clrf	(sprintf@width+1)^(0+128)
  2276                           
  2277                           ;doprnt.c: 557: flag = 0;
  2278  0E26  01E5               	clrf	sprintf@flag^(0+128)
  2279                           
  2280                           ;doprnt.c: 560: switch(*f) {
  2281                           
  2282                           ;doprnt.c: 559: for(;;) {
  2283  0E27  2E2F               	goto	l3046
  2284  0E28                     l489:	
  2285                           ;doprnt.c: 588: case '0':
  2286                           
  2287                           
  2288                           ;doprnt.c: 589: flag |= 0x04;
  2289  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  2290  0E29  1303               	bcf	3,6	;RP1=0, select bank1
  2291  0E2A  1565               	bsf	sprintf@flag^(0+128),2
  2292                           
  2293                           ;doprnt.c: 590: f++;
  2294  0E2B  3001               	movlw	1
  2295  0E2C  07D8               	addwf	sprintf@f^(0+128),f
  2296  0E2D  1803               	skipnc
  2297  0E2E  0AD9               	incf	(sprintf@f+1)^(0+128),f
  2298  0E2F                     l3046:	
  2299                           ;doprnt.c: 593: }
  2300                           
  2301                           ;doprnt.c: 591: continue;
  2302                           
  2303  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  2304  0E30  1303               	bcf	3,6	;RP1=0, select bank1
  2305  0E31  0859               	movf	(sprintf@f+1)^(0+128),w
  2306  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0E34  00FF               	movwf	127
  2309  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  2310  0E36  1303               	bcf	3,6	;RP1=0, select bank1
  2311  0E37  0858               	movf	sprintf@f^(0+128),w
  2312  0E38  0084               	movwf	4
  2313  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0E3B  160A  118A  2000  120A  158A  	fcall	stringtab
  2316                           
  2317                           ; Switch size 1, requested type "space"
  2318                           ; Number of cases is 1, Range of values is 48 to 48
  2319                           ; switch strategies available:
  2320                           ; Name         Instructions Cycles
  2321                           ; simple_byte            4     3 (average)
  2322                           ; direct_byte           14    11 (fixed)
  2323                           ; jumptable            263     9 (fixed)
  2324                           ;	Chosen strategy is simple_byte
  2325  0E40  3A30               	xorlw	48	; case 48
  2326  0E41  1903               	skipnz
  2327  0E42  2E28               	goto	l489
  2328  0E43  2E44               	goto	l3048
  2329  0E44                     l3048:	
  2330                           ;doprnt.c: 595: }
  2331                           
  2332                           ;doprnt.c: 594: break;
  2333                           
  2334                           
  2335                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2336  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  2337  0E45  1303               	bcf	3,6	;RP1=0, select bank1
  2338  0E46  0859               	movf	(sprintf@f+1)^(0+128),w
  2339  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  2341  0E49  00FF               	movwf	127
  2342  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  2343  0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  2344  0E4C  0858               	movf	sprintf@f^(0+128),w
  2345  0E4D  0084               	movwf	4
  2346  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0E50  160A  118A  2000  120A  158A  	fcall	stringtab
  2349  0E55  160A  118A  217D  120A  158A  	fcall	_isdigit
  2350  0E5A  1C03               	btfss	3,0
  2351  0E5B  2EB0               	goto	l3062
  2352                           
  2353                           ;doprnt.c: 607: width = 0;
  2354  0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  2356  0E5E  01E6               	clrf	sprintf@width^(0+128)
  2357  0E5F  01E7               	clrf	(sprintf@width+1)^(0+128)
  2358  0E60                     l3052:	
  2359                           ;doprnt.c: 608: do {
  2360                           
  2361                           
  2362                           ;doprnt.c: 609: width *= 10;
  2363  0E60  300A               	movlw	10
  2364  0E61  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0E62  1303               	bcf	3,6	;RP1=0, select bank1
  2366  0E63  00CA               	movwf	___wmul@multiplier^(0+128)
  2367  0E64  3000               	movlw	0
  2368  0E65  00CB               	movwf	(___wmul@multiplier^(0+128)+1)
  2369  0E66  0867               	movf	(sprintf@width+1)^(0+128),w
  2370  0E67  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
  2371  0E68  07CD               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2372  0E69  0866               	movf	sprintf@width^(0+128),w
  2373  0E6A  01CC               	clrf	___wmul@multiplicand^(0+128)
  2374  0E6B  07CC               	addwf	___wmul@multiplicand^(0+128),f
  2375  0E6C  160A  118A  22E3  120A  158A  	fcall	___wmul
  2376  0E71  1683               	bsf	3,5	;RP0=1, select bank1
  2377  0E72  1303               	bcf	3,6	;RP1=0, select bank1
  2378  0E73  084B               	movf	(?___wmul+1)^(0+128),w
  2379  0E74  01E7               	clrf	(sprintf@width+1)^(0+128)
  2380  0E75  07E7               	addwf	(sprintf@width+1)^(0+128),f
  2381  0E76  084A               	movf	?___wmul^(0+128),w
  2382  0E77  01E6               	clrf	sprintf@width^(0+128)
  2383  0E78  07E6               	addwf	sprintf@width^(0+128),f
  2384                           
  2385                           ;doprnt.c: 610: width += *f++ - '0';
  2386  0E79  0859               	movf	(sprintf@f+1)^(0+128),w
  2387  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0E7C  00FF               	movwf	127
  2390  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0E7E  1303               	bcf	3,6	;RP1=0, select bank1
  2392  0E7F  0858               	movf	sprintf@f^(0+128),w
  2393  0E80  0084               	movwf	4
  2394  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0E83  160A  118A  2000  120A  158A  	fcall	stringtab
  2397  0E88  3ED0               	addlw	208
  2398  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  2399  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  2400  0E8B  00DC               	movwf	??_sprintf^(0+128)
  2401  0E8C  30FF               	movlw	255
  2402  0E8D  1803               	skipnc
  2403  0E8E  3000               	movlw	0
  2404  0E8F  00DD               	movwf	(??_sprintf^(0+128)+1)
  2405  0E90  085C               	movf	??_sprintf^(0+128),w
  2406  0E91  07E6               	addwf	sprintf@width^(0+128),f
  2407  0E92  1803               	skipnc
  2408  0E93  0AE7               	incf	(sprintf@width+1)^(0+128),f
  2409  0E94  085D               	movf	(??_sprintf+1)^(0+128),w
  2410  0E95  07E7               	addwf	(sprintf@width+1)^(0+128),f
  2411  0E96  3001               	movlw	1
  2412  0E97  07D8               	addwf	sprintf@f^(0+128),f
  2413  0E98  1803               	skipnc
  2414  0E99  0AD9               	incf	(sprintf@f+1)^(0+128),f
  2415                           
  2416                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2417  0E9A  0859               	movf	(sprintf@f+1)^(0+128),w
  2418  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  2419  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  2420  0E9D  00FF               	movwf	127
  2421  0E9E  1683               	bsf	3,5	;RP0=1, select bank1
  2422  0E9F  1303               	bcf	3,6	;RP1=0, select bank1
  2423  0EA0  0858               	movf	sprintf@f^(0+128),w
  2424  0EA1  0084               	movwf	4
  2425  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0EA4  160A  118A  2000  120A  158A  	fcall	stringtab
  2428  0EA9  160A  118A  217D  120A  158A  	fcall	_isdigit
  2429  0EAE  1803               	btfsc	3,0
  2430  0EAF  2E60               	goto	l3052
  2431  0EB0                     l3062:	
  2432                           ;doprnt.c: 831: }
  2433                           
  2434                           ;doprnt.c: 822: continue;
  2435                           
  2436                           ;doprnt.c: 811: default:
  2437                           
  2438                           ;doprnt.c: 707: case 'i':
  2439                           ;doprnt.c: 708: break;
  2440                           
  2441                           ;doprnt.c: 706: case 'd':
  2442                           
  2443                           ;doprnt.c: 647: goto alldone;
  2444                           
  2445                           ;doprnt.c: 646: case 0:
  2446                           
  2447                           ;doprnt.c: 617: }
  2448                           ;doprnt.c: 644: switch(c = *f++) {
  2449                           
  2450  0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0EB2  0859               	movf	(sprintf@f+1)^(0+128),w
  2453  0EB3  00DD               	movwf	(??_sprintf^(0+128)+1)
  2454  0EB4  0858               	movf	sprintf@f^(0+128),w
  2455  0EB5  00DC               	movwf	??_sprintf^(0+128)
  2456  0EB6  0AD8               	incf	sprintf@f^(0+128),f
  2457  0EB7  1903               	skipnz
  2458  0EB8  0AD9               	incf	(sprintf@f+1)^(0+128),f
  2459  0EB9  085D               	movf	(??_sprintf+1)^(0+128),w
  2460  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0EBC  00FF               	movwf	127
  2463  0EBD  1683               	bsf	3,5	;RP0=1, select bank1
  2464  0EBE  1303               	bcf	3,6	;RP1=0, select bank1
  2465  0EBF  085C               	movf	??_sprintf^(0+128),w
  2466  0EC0  0084               	movwf	4
  2467  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0EC3  160A  118A  2000  120A  158A  	fcall	stringtab
  2470  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  2471  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  2472  0ECA  00E9               	movwf	sprintf@c^(0+128)
  2473                           
  2474                           ; Switch size 1, requested type "space"
  2475                           ; Number of cases is 3, Range of values is 0 to 105
  2476                           ; switch strategies available:
  2477                           ; Name         Instructions Cycles
  2478                           ; simple_byte           10     6 (average)
  2479                           ; jumptable            260     6 (fixed)
  2480                           ;	Chosen strategy is simple_byte
  2481  0ECB  3A00               	xorlw	0	; case 0
  2482  0ECC  1903               	skipnz
  2483  0ECD  2FF9               	goto	l3138
  2484  0ECE  3A64               	xorlw	100	; case 100
  2485  0ECF  1903               	skipnz
  2486  0ED0  2ED5               	goto	l3064
  2487  0ED1  3A0D               	xorlw	13	; case 105
  2488  0ED2  1903               	skipnz
  2489  0ED3  2ED5               	goto	l3064
  2490  0ED4  2DF4               	goto	l3136
  2491  0ED5                     l3064:	
  2492                           
  2493                           ;doprnt.c: 1262: {
  2494                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2495  0ED5  1683               	bsf	3,5	;RP0=1, select bank1
  2496  0ED6  1303               	bcf	3,6	;RP1=0, select bank1
  2497  0ED7  085F               	movf	sprintf@ap^(0+128),w
  2498  0ED8  0084               	movwf	4
  2499  0ED9  1383               	bcf	3,7	;select IRP bank0
  2500  0EDA  0800               	movf	0,w
  2501  0EDB  00E1               	movwf	sprintf@_val^(0+128)
  2502  0EDC  0A84               	incf	4,f
  2503  0EDD  0800               	movf	0,w
  2504  0EDE  00E2               	movwf	(sprintf@_val+1)^(0+128)
  2505  0EDF  3002               	movlw	2
  2506  0EE0  00DC               	movwf	??_sprintf^(0+128)
  2507  0EE1  085C               	movf	??_sprintf^(0+128),w
  2508  0EE2  07DF               	addwf	sprintf@ap^(0+128),f
  2509                           
  2510                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2511  0EE3  1FE2               	btfss	(sprintf@_val+1)^(0+128),7
  2512  0EE4  2EEE               	goto	l3074
  2513                           
  2514                           ;doprnt.c: 1271: flag |= 0x03;
  2515  0EE5  3003               	movlw	3
  2516  0EE6  00DC               	movwf	??_sprintf^(0+128)
  2517  0EE7  085C               	movf	??_sprintf^(0+128),w
  2518  0EE8  04E5               	iorwf	sprintf@flag^(0+128),f
  2519                           
  2520                           ;doprnt.c: 1272: _val._val = -_val._val;
  2521  0EE9  09E1               	comf	sprintf@_val^(0+128),f
  2522  0EEA  09E2               	comf	(sprintf@_val+1)^(0+128),f
  2523  0EEB  0AE1               	incf	sprintf@_val^(0+128),f
  2524  0EEC  1903               	skipnz
  2525  0EED  0AE2               	incf	(sprintf@_val+1)^(0+128),f
  2526  0EEE                     l3074:	
  2527                           
  2528                           ;doprnt.c: 1273: }
  2529                           ;doprnt.c: 1275: }
  2530                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2531  0EEE  01E9               	clrf	sprintf@c^(0+128)
  2532  0EEF  0AE9               	incf	sprintf@c^(0+128),f
  2533  0EF0  0869               	movf	sprintf@c^(0+128),w
  2534  0EF1  3A05               	xorlw	5
  2535  0EF2  1903               	btfsc	3,2
  2536  0EF3  2F21               	goto	l3086
  2537  0EF4                     l3078:	
  2538                           
  2539                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2540  0EF4  0869               	movf	sprintf@c^(0+128),w
  2541  0EF5  00DC               	movwf	??_sprintf^(0+128)
  2542  0EF6  075C               	addwf	??_sprintf^(0+128),w
  2543  0EF7  3E12               	addlw	low (_dpowers| (0+32768))
  2544  0EF8  0084               	movwf	4
  2545  0EF9  3090               	movlw	high (_dpowers| (0+32768))
  2546  0EFA  1803               	skipnc
  2547  0EFB  3E01               	addlw	1
  2548  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0EFE  00FF               	movwf	127
  2551  0EFF  160A  118A  2000  120A  158A  	fcall	stringtab
  2552  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  2553  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  2554  0F06  00DD               	movwf	(??_sprintf+1)^(0+128)
  2555  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0F09  160A  118A  2000  120A  158A  	fcall	stringtab
  2558  0F0E  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0F0F  1303               	bcf	3,6	;RP1=0, select bank1
  2560  0F10  00DE               	movwf	((??_sprintf+1)^(0+128)+1)
  2561  0F11  085E               	movf	(??_sprintf+2)^(0+128),w
  2562  0F12  0262               	subwf	(sprintf@_val+1)^(0+128),w
  2563  0F13  1D03               	skipz
  2564  0F14  2F17               	goto	u3715
  2565  0F15  085D               	movf	(??_sprintf+1)^(0+128),w
  2566  0F16  0261               	subwf	sprintf@_val^(0+128),w
  2567  0F17                     u3715:	
  2568  0F17  1C03               	btfss	3,0
  2569  0F18  2F21               	goto	l3086
  2570                           
  2571                           ;doprnt.c: 1316: break;
  2572  0F19  3001               	movlw	1
  2573  0F1A  00DC               	movwf	??_sprintf^(0+128)
  2574  0F1B  085C               	movf	??_sprintf^(0+128),w
  2575  0F1C  07E9               	addwf	sprintf@c^(0+128),f
  2576  0F1D  0869               	movf	sprintf@c^(0+128),w
  2577  0F1E  3A05               	xorlw	5
  2578  0F1F  1D03               	skipz
  2579  0F20  2EF4               	goto	l3078
  2580  0F21                     l3086:	
  2581                           
  2582                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2583  0F21  0867               	movf	(sprintf@width+1)^(0+128),w
  2584  0F22  0466               	iorwf	sprintf@width^(0+128),w
  2585  0F23  1903               	skipnz
  2586  0F24  2F2F               	goto	l507
  2587  0F25  0865               	movf	sprintf@flag^(0+128),w
  2588  0F26  3903               	andlw	3
  2589  0F27  1903               	btfsc	3,2
  2590  0F28  2F2F               	goto	l507
  2591                           
  2592                           ;doprnt.c: 1355: width--;
  2593  0F29  30FF               	movlw	255
  2594  0F2A  07E6               	addwf	sprintf@width^(0+128),f
  2595  0F2B  1803               	skipnc
  2596  0F2C  0AE7               	incf	(sprintf@width+1)^(0+128),f
  2597  0F2D  30FF               	movlw	255
  2598  0F2E  07E7               	addwf	(sprintf@width+1)^(0+128),f
  2599  0F2F                     l507:	
  2600                           
  2601                           ;doprnt.c: 1390: if(width > c)
  2602  0F2F  0869               	movf	sprintf@c^(0+128),w
  2603  0F30  00DC               	movwf	??_sprintf^(0+128)
  2604  0F31  01DD               	clrf	(??_sprintf^(0+128)+1)
  2605  0F32  1BDC               	btfsc	??_sprintf^(0+128),7
  2606  0F33  03DD               	decf	(??_sprintf^(0+128)+1),f
  2607  0F34  085D               	movf	(??_sprintf+1)^(0+128),w
  2608  0F35  3A80               	xorlw	128
  2609  0F36  00DE               	movwf	(??_sprintf+2)^(0+128)
  2610  0F37  0867               	movf	(sprintf@width+1)^(0+128),w
  2611  0F38  3A80               	xorlw	128
  2612  0F39  025E               	subwf	(??_sprintf+2)^(0+128),w
  2613  0F3A  1D03               	skipz
  2614  0F3B  2F3E               	goto	u3755
  2615  0F3C  0866               	movf	sprintf@width^(0+128),w
  2616  0F3D  025C               	subwf	??_sprintf^(0+128),w
  2617  0F3E                     u3755:	
  2618  0F3E  1803               	skipnc
  2619  0F3F  2F4E               	goto	l3094
  2620                           
  2621                           ;doprnt.c: 1391: width -= c;
  2622  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0F42  0869               	movf	sprintf@c^(0+128),w
  2625  0F43  00DC               	movwf	??_sprintf^(0+128)
  2626  0F44  01DD               	clrf	(??_sprintf^(0+128)+1)
  2627  0F45  1BDC               	btfsc	??_sprintf^(0+128),7
  2628  0F46  03DD               	decf	(??_sprintf^(0+128)+1),f
  2629  0F47  085C               	movf	??_sprintf^(0+128),w
  2630  0F48  02E6               	subwf	sprintf@width^(0+128),f
  2631  0F49  085D               	movf	(??_sprintf+1)^(0+128),w
  2632  0F4A  1C03               	skipc
  2633  0F4B  03E7               	decf	(sprintf@width+1)^(0+128),f
  2634  0F4C  02E7               	subwf	(sprintf@width+1)^(0+128),f
  2635  0F4D  2F52               	goto	l3096
  2636  0F4E                     l3094:	
  2637                           
  2638                           ;doprnt.c: 1392: else
  2639                           ;doprnt.c: 1393: width = 0;
  2640  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2641  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2642  0F50  01E6               	clrf	sprintf@width^(0+128)
  2643  0F51  01E7               	clrf	(sprintf@width+1)^(0+128)
  2644  0F52                     l3096:	
  2645                           
  2646                           ;doprnt.c: 1396: if(flag & 0x04) {
  2647  0F52  1D65               	btfss	sprintf@flag^(0+128),2
  2648  0F53  2F79               	goto	l3112
  2649                           
  2650                           ;doprnt.c: 1401: if(flag & 0x03)
  2651  0F54  0865               	movf	sprintf@flag^(0+128),w
  2652  0F55  3903               	andlw	3
  2653  0F56  1903               	btfsc	3,2
  2654  0F57  2F63               	goto	l3104
  2655                           
  2656                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2657  0F58  302D               	movlw	45
  2658  0F59  00DC               	movwf	??_sprintf^(0+128)
  2659  0F5A  0868               	movf	sprintf@sp^(0+128),w
  2660  0F5B  0084               	movwf	4
  2661  0F5C  085C               	movf	??_sprintf^(0+128),w
  2662  0F5D  1783               	bsf	3,7	;select IRP bank2
  2663  0F5E  0080               	movwf	0
  2664  0F5F  3001               	movlw	1
  2665  0F60  00DC               	movwf	??_sprintf^(0+128)
  2666  0F61  085C               	movf	??_sprintf^(0+128),w
  2667  0F62  07E8               	addwf	sprintf@sp^(0+128),f
  2668  0F63                     l3104:	
  2669                           
  2670                           ;doprnt.c: 1424: if(width)
  2671  0F63  0867               	movf	(sprintf@width+1)^(0+128),w
  2672  0F64  0466               	iorwf	sprintf@width^(0+128),w
  2673  0F65  1903               	skipnz
  2674  0F66  2FA1               	goto	l3126
  2675                           
  2676                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2677                           
  2678                           ;doprnt.c: 1425: do
  2679  0F67  3030               	movlw	48
  2680  0F68  00DC               	movwf	??_sprintf^(0+128)
  2681  0F69  0868               	movf	sprintf@sp^(0+128),w
  2682  0F6A  0084               	movwf	4
  2683  0F6B  085C               	movf	??_sprintf^(0+128),w
  2684  0F6C  1783               	bsf	3,7	;select IRP bank2
  2685  0F6D  0080               	movwf	0
  2686  0F6E  3001               	movlw	1
  2687  0F6F  00DC               	movwf	??_sprintf^(0+128)
  2688  0F70  085C               	movf	??_sprintf^(0+128),w
  2689  0F71  07E8               	addwf	sprintf@sp^(0+128),f
  2690                           
  2691                           ;doprnt.c: 1427: while(--width);
  2692  0F72  30FF               	movlw	255
  2693  0F73  07E6               	addwf	sprintf@width^(0+128),f
  2694  0F74  1803               	skipnc
  2695  0F75  0AE7               	incf	(sprintf@width+1)^(0+128),f
  2696  0F76  30FF               	movlw	255
  2697  0F77  07E7               	addwf	(sprintf@width+1)^(0+128),f
  2698  0F78  2F63               	goto	l3104
  2699  0F79                     l3112:	
  2700                           ;doprnt.c: 1429: } else
  2701                           
  2702                           
  2703                           ;doprnt.c: 1431: {
  2704                           ;doprnt.c: 1433: if(width
  2705                           ;doprnt.c: 1437: )
  2706  0F79  0867               	movf	(sprintf@width+1)^(0+128),w
  2707  0F7A  0466               	iorwf	sprintf@width^(0+128),w
  2708  0F7B  1903               	skipnz
  2709  0F7C  2F92               	goto	l3120
  2710  0F7D                     l3114:	
  2711                           ;doprnt.c: 1438: do
  2712                           
  2713                           
  2714                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2715  0F7D  3020               	movlw	32
  2716  0F7E  00DC               	movwf	??_sprintf^(0+128)
  2717  0F7F  0868               	movf	sprintf@sp^(0+128),w
  2718  0F80  0084               	movwf	4
  2719  0F81  085C               	movf	??_sprintf^(0+128),w
  2720  0F82  1783               	bsf	3,7	;select IRP bank2
  2721  0F83  0080               	movwf	0
  2722  0F84  3001               	movlw	1
  2723  0F85  00DC               	movwf	??_sprintf^(0+128)
  2724  0F86  085C               	movf	??_sprintf^(0+128),w
  2725  0F87  07E8               	addwf	sprintf@sp^(0+128),f
  2726                           
  2727                           ;doprnt.c: 1440: while(--width);
  2728  0F88  30FF               	movlw	255
  2729  0F89  07E6               	addwf	sprintf@width^(0+128),f
  2730  0F8A  1803               	skipnc
  2731  0F8B  0AE7               	incf	(sprintf@width+1)^(0+128),f
  2732  0F8C  30FF               	movlw	255
  2733  0F8D  07E7               	addwf	(sprintf@width+1)^(0+128),f
  2734  0F8E  0867               	movf	(sprintf@width+1)^(0+128),w
  2735  0F8F  0466               	iorwf	sprintf@width^(0+128),w
  2736  0F90  1D03               	skipz
  2737  0F91  2F7D               	goto	l3114
  2738  0F92                     l3120:	
  2739                           
  2740                           ;doprnt.c: 1447: if(flag & 0x03)
  2741  0F92  0865               	movf	sprintf@flag^(0+128),w
  2742  0F93  3903               	andlw	3
  2743  0F94  1903               	btfsc	3,2
  2744  0F95  2FA1               	goto	l3126
  2745                           
  2746                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2747  0F96  302D               	movlw	45
  2748  0F97  00DC               	movwf	??_sprintf^(0+128)
  2749  0F98  0868               	movf	sprintf@sp^(0+128),w
  2750  0F99  0084               	movwf	4
  2751  0F9A  085C               	movf	??_sprintf^(0+128),w
  2752  0F9B  1783               	bsf	3,7	;select IRP bank2
  2753  0F9C  0080               	movwf	0
  2754  0F9D  3001               	movlw	1
  2755  0F9E  00DC               	movwf	??_sprintf^(0+128)
  2756  0F9F  085C               	movf	??_sprintf^(0+128),w
  2757  0FA0  07E8               	addwf	sprintf@sp^(0+128),f
  2758  0FA1                     l3126:	
  2759                           
  2760                           ;doprnt.c: 1478: }
  2761                           ;doprnt.c: 1481: prec = c;
  2762  0FA1  0869               	movf	sprintf@c^(0+128),w
  2763  0FA2  00DC               	movwf	??_sprintf^(0+128)
  2764  0FA3  085C               	movf	??_sprintf^(0+128),w
  2765  0FA4  00E0               	movwf	sprintf@prec^(0+128)
  2766  0FA5                     l3134:	
  2767                           ;doprnt.c: 1483: while(prec--) {
  2768                           
  2769  0FA5  30FF               	movlw	-1
  2770  0FA6  00DC               	movwf	??_sprintf^(0+128)
  2771  0FA7  085C               	movf	??_sprintf^(0+128),w
  2772  0FA8  07E0               	addwf	sprintf@prec^(0+128),f
  2773  0FA9  0860               	movf	sprintf@prec^(0+128),w
  2774  0FAA  3AFF               	xorlw	-1
  2775  0FAB  1903               	btfsc	3,2
  2776  0FAC  2DF4               	goto	l3136
  2777                           
  2778                           ;doprnt.c: 1487: {
  2779                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2780  0FAD  300A               	movlw	10
  2781  0FAE  00D2               	movwf	___lwmod@divisor^(0+128)
  2782  0FAF  3000               	movlw	0
  2783  0FB0  00D3               	movwf	(___lwmod@divisor^(0+128)+1)
  2784  0FB1  0860               	movf	sprintf@prec^(0+128),w
  2785  0FB2  00DC               	movwf	??_sprintf^(0+128)
  2786  0FB3  075C               	addwf	??_sprintf^(0+128),w
  2787  0FB4  3E12               	addlw	low (_dpowers| (0+32768))
  2788  0FB5  0084               	movwf	4
  2789  0FB6  3090               	movlw	high (_dpowers| (0+32768))
  2790  0FB7  1803               	skipnc
  2791  0FB8  3E01               	addlw	1
  2792  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0FBB  00FF               	movwf	127
  2795  0FBC  160A  118A  2000  120A  158A  	fcall	stringtab
  2796  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2798  0FC3  00CA               	movwf	___lwdiv@divisor^(0+128)
  2799  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0FC6  160A  118A  2000  120A  158A  	fcall	stringtab
  2802  0FCB  1683               	bsf	3,5	;RP0=1, select bank1
  2803  0FCC  1303               	bcf	3,6	;RP1=0, select bank1
  2804  0FCD  00CB               	movwf	(___lwdiv@divisor+1)^(0+128)
  2805  0FCE  0862               	movf	(sprintf@_val+1)^(0+128),w
  2806  0FCF  01CD               	clrf	(___lwdiv@dividend+1)^(0+128)
  2807  0FD0  07CD               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2808  0FD1  0861               	movf	sprintf@_val^(0+128),w
  2809  0FD2  01CC               	clrf	___lwdiv@dividend^(0+128)
  2810  0FD3  07CC               	addwf	___lwdiv@dividend^(0+128),f
  2811  0FD4  160A  118A  23D6  120A  158A  	fcall	___lwdiv
  2812  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2813  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  2814  0FDB  084B               	movf	(?___lwdiv+1)^(0+128),w
  2815  0FDC  01D5               	clrf	(___lwmod@dividend+1)^(0+128)
  2816  0FDD  07D5               	addwf	(___lwmod@dividend+1)^(0+128),f
  2817  0FDE  084A               	movf	?___lwdiv^(0+128),w
  2818  0FDF  01D4               	clrf	___lwmod@dividend^(0+128)
  2819  0FE0  07D4               	addwf	___lwmod@dividend^(0+128),f
  2820  0FE1  160A  118A  2362  120A  158A  	fcall	___lwmod
  2821  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2822  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2823  0FE8  0852               	movf	?___lwmod^(0+128),w
  2824  0FE9  3E30               	addlw	48
  2825  0FEA  00DD               	movwf	(??_sprintf+1)^(0+128)
  2826  0FEB  085D               	movf	(??_sprintf+1)^(0+128),w
  2827  0FEC  00E9               	movwf	sprintf@c^(0+128)
  2828                           
  2829                           ;doprnt.c: 1532: }
  2830                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2831  0FED  0869               	movf	sprintf@c^(0+128),w
  2832  0FEE  00DC               	movwf	??_sprintf^(0+128)
  2833  0FEF  0868               	movf	sprintf@sp^(0+128),w
  2834  0FF0  0084               	movwf	4
  2835  0FF1  085C               	movf	??_sprintf^(0+128),w
  2836  0FF2  1783               	bsf	3,7	;select IRP bank2
  2837  0FF3  0080               	movwf	0
  2838  0FF4  3001               	movlw	1
  2839  0FF5  00DC               	movwf	??_sprintf^(0+128)
  2840  0FF6  085C               	movf	??_sprintf^(0+128),w
  2841  0FF7  07E8               	addwf	sprintf@sp^(0+128),f
  2842  0FF8  2FA5               	goto	l3134
  2843  0FF9                     l3138:	
  2844                           ;doprnt.c: 1534: }
  2845                           ;doprnt.c: 1542: }
  2846                           ;doprnt.c: 1544: alldone:
  2847                           
  2848                           
  2849                           ;doprnt.c: 1547: *sp = 0;
  2850  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  2851  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  2852  0FFB  0868               	movf	sprintf@sp^(0+128),w
  2853  0FFC  0084               	movwf	4
  2854  0FFD  1783               	bsf	3,7	;select IRP bank2
  2855  0FFE  0180               	clrf	0
  2856  0FFF  0008               	return
  2857  1000                     __end_of_sprintf:	
  2858                           ;doprnt.c: 1549: return 0;
  2859                           ;	Return value of _sprintf is never used
  2860                           
  2861                           
  2862                           	psect	text2
  2863  117D                     __ptext2:	
  2864 ;; *************** function _isdigit *****************
  2865 ;; Defined at:
  2866 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  c               1    wreg     unsigned char 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  c               1    5[BANK1 ] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;		None               void
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2880 ;;      Params:         0       0       0       0       0
  2881 ;;      Locals:         0       0       2       0       0
  2882 ;;      Temps:          0       0       0       0       0
  2883 ;;      Totals:         0       0       2       0       0
  2884 ;;Total ram usage:        2 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    5
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_sprintf
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           
  2895                           ;psect for function _isdigit
  2896  117D                     _isdigit:	
  2897                           
  2898                           ;incstack = 0
  2899                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2900                           ;isdigit@c stored from wreg
  2901  117D  1683               	bsf	3,5	;RP0=1, select bank1
  2902  117E  1303               	bcf	3,6	;RP1=0, select bank1
  2903  117F  00CB               	movwf	isdigit@c^(0+128)
  2904  1180  01CA               	clrf	_isdigit$1454^(0+128)
  2905  1181  303A               	movlw	58
  2906  1182  024B               	subwf	isdigit@c^(0+128),w
  2907  1183  1803               	skipnc
  2908  1184  298B               	goto	l2530
  2909  1185  3030               	movlw	48
  2910  1186  024B               	subwf	isdigit@c^(0+128),w
  2911  1187  1C03               	skipc
  2912  1188  298B               	goto	l2530
  2913  1189  01CA               	clrf	_isdigit$1454^(0+128)
  2914  118A  0ACA               	incf	_isdigit$1454^(0+128),f
  2915  118B                     l2530:	
  2916  118B  0C4A               	rrf	_isdigit$1454^(0+128),w
  2917  118C  0008               	return
  2918  118D                     __end_of_isdigit:	
  2919                           
  2920                           	psect	text3
  2921  12E3                     __ptext3:	
  2922 ;; *************** function ___wmul *****************
  2923 ;; Defined at:
  2924 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  multiplier      2    4[BANK1 ] unsigned int 
  2927 ;;  multiplicand    2    6[BANK1 ] unsigned int 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  product         2    8[BANK1 ] unsigned int 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2    4[BANK1 ] unsigned int 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2939 ;;      Params:         0       0       4       0       0
  2940 ;;      Locals:         0       0       2       0       0
  2941 ;;      Temps:          0       0       0       0       0
  2942 ;;      Totals:         0       0       6       0       0
  2943 ;;Total ram usage:        6 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    5
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_sprintf
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function ___wmul
  2955  12E3                     ___wmul:	
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2959  12E3  1683               	bsf	3,5	;RP0=1, select bank1
  2960  12E4  1303               	bcf	3,6	;RP1=0, select bank1
  2961  12E5  01CE               	clrf	___wmul@product^(0+128)
  2962  12E6  01CF               	clrf	(___wmul@product+1)^(0+128)
  2963  12E7                     l2536:	
  2964  12E7  1C4A               	btfss	___wmul@multiplier^(0+128),0
  2965  12E8  2AEF               	goto	l608
  2966  12E9  084C               	movf	___wmul@multiplicand^(0+128),w
  2967  12EA  07CE               	addwf	___wmul@product^(0+128),f
  2968  12EB  1803               	skipnc
  2969  12EC  0ACF               	incf	(___wmul@product+1)^(0+128),f
  2970  12ED  084D               	movf	(___wmul@multiplicand+1)^(0+128),w
  2971  12EE  07CF               	addwf	(___wmul@product+1)^(0+128),f
  2972  12EF                     l608:	
  2973  12EF  3001               	movlw	1
  2974  12F0                     u2835:	
  2975  12F0  1003               	clrc
  2976  12F1  0DCC               	rlf	___wmul@multiplicand^(0+128),f
  2977  12F2  0DCD               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2978  12F3  3EFF               	addlw	-1
  2979  12F4  1D03               	skipz
  2980  12F5  2AF0               	goto	u2835
  2981  12F6  3001               	movlw	1
  2982  12F7                     u2845:	
  2983  12F7  1003               	clrc
  2984  12F8  0CCB               	rrf	(___wmul@multiplier+1)^(0+128),f
  2985  12F9  0CCA               	rrf	___wmul@multiplier^(0+128),f
  2986  12FA  3EFF               	addlw	-1
  2987  12FB  1D03               	skipz
  2988  12FC  2AF7               	goto	u2845
  2989  12FD  084B               	movf	(___wmul@multiplier+1)^(0+128),w
  2990  12FE  044A               	iorwf	___wmul@multiplier^(0+128),w
  2991  12FF  1D03               	skipz
  2992  1300  2AE7               	goto	l2536
  2993  1301  084F               	movf	(___wmul@product+1)^(0+128),w
  2994  1302  01CB               	clrf	(?___wmul+1)^(0+128)
  2995  1303  07CB               	addwf	(?___wmul+1)^(0+128),f
  2996  1304  084E               	movf	___wmul@product^(0+128),w
  2997  1305  01CA               	clrf	?___wmul^(0+128)
  2998  1306  07CA               	addwf	?___wmul^(0+128),f
  2999  1307  0008               	return
  3000  1308                     __end_of___wmul:	
  3001                           
  3002                           	psect	text4
  3003  1362                     __ptext4:	
  3004 ;; *************** function ___lwmod *****************
  3005 ;; Defined at:
  3006 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  divisor         2   12[BANK1 ] unsigned int 
  3009 ;;  dividend        2   14[BANK1 ] unsigned int 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  counter         1   17[BANK1 ] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  2   12[BANK1 ] unsigned int 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       4       0       0
  3022 ;;      Locals:         0       0       1       0       0
  3023 ;;      Temps:          0       0       1       0       0
  3024 ;;      Totals:         0       0       6       0       0
  3025 ;;Total ram usage:        6 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    5
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_sprintf
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function ___lwmod
  3037  1362                     ___lwmod:	
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3041  1362  1683               	bsf	3,5	;RP0=1, select bank1
  3042  1363  1303               	bcf	3,6	;RP1=0, select bank1
  3043  1364  0853               	movf	(___lwmod@divisor+1)^(0+128),w
  3044  1365  0452               	iorwf	___lwmod@divisor^(0+128),w
  3045  1366  1903               	skipnz
  3046  1367  2B91               	goto	l2724
  3047  1368  01D7               	clrf	___lwmod@counter^(0+128)
  3048  1369  0AD7               	incf	___lwmod@counter^(0+128),f
  3049  136A                     l2714:	
  3050  136A  1BD3               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3051  136B  2B78               	goto	l2716
  3052  136C  3001               	movlw	1
  3053  136D                     u3285:	
  3054  136D  1003               	clrc
  3055  136E  0DD2               	rlf	___lwmod@divisor^(0+128),f
  3056  136F  0DD3               	rlf	(___lwmod@divisor+1)^(0+128),f
  3057  1370  3EFF               	addlw	-1
  3058  1371  1D03               	skipz
  3059  1372  2B6D               	goto	u3285
  3060  1373  3001               	movlw	1
  3061  1374  00D6               	movwf	??___lwmod^(0+128)
  3062  1375  0856               	movf	??___lwmod^(0+128),w
  3063  1376  07D7               	addwf	___lwmod@counter^(0+128),f
  3064  1377  2B6A               	goto	l2714
  3065  1378                     l2716:	
  3066  1378  0853               	movf	(___lwmod@divisor+1)^(0+128),w
  3067  1379  0255               	subwf	(___lwmod@dividend+1)^(0+128),w
  3068  137A  1D03               	skipz
  3069  137B  2B7E               	goto	u3305
  3070  137C  0852               	movf	___lwmod@divisor^(0+128),w
  3071  137D  0254               	subwf	___lwmod@dividend^(0+128),w
  3072  137E                     u3305:	
  3073  137E  1C03               	skipc
  3074  137F  2B86               	goto	l2720
  3075  1380  0852               	movf	___lwmod@divisor^(0+128),w
  3076  1381  02D4               	subwf	___lwmod@dividend^(0+128),f
  3077  1382  0853               	movf	(___lwmod@divisor+1)^(0+128),w
  3078  1383  1C03               	skipc
  3079  1384  03D5               	decf	(___lwmod@dividend+1)^(0+128),f
  3080  1385  02D5               	subwf	(___lwmod@dividend+1)^(0+128),f
  3081  1386                     l2720:	
  3082  1386  3001               	movlw	1
  3083  1387                     u3315:	
  3084  1387  1003               	clrc
  3085  1388  0CD3               	rrf	(___lwmod@divisor+1)^(0+128),f
  3086  1389  0CD2               	rrf	___lwmod@divisor^(0+128),f
  3087  138A  3EFF               	addlw	-1
  3088  138B  1D03               	skipz
  3089  138C  2B87               	goto	u3315
  3090  138D  3001               	movlw	1
  3091  138E  02D7               	subwf	___lwmod@counter^(0+128),f
  3092  138F  1D03               	btfss	3,2
  3093  1390  2B78               	goto	l2716
  3094  1391                     l2724:	
  3095  1391  0855               	movf	(___lwmod@dividend+1)^(0+128),w
  3096  1392  01D3               	clrf	(?___lwmod+1)^(0+128)
  3097  1393  07D3               	addwf	(?___lwmod+1)^(0+128),f
  3098  1394  0854               	movf	___lwmod@dividend^(0+128),w
  3099  1395  01D2               	clrf	?___lwmod^(0+128)
  3100  1396  07D2               	addwf	?___lwmod^(0+128),f
  3101  1397  0008               	return
  3102  1398                     __end_of___lwmod:	
  3103                           
  3104                           	psect	text5
  3105  13D6                     __ptext5:	
  3106 ;; *************** function ___lwdiv *****************
  3107 ;; Defined at:
  3108 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  divisor         2    4[BANK1 ] unsigned int 
  3111 ;;  dividend        2    6[BANK1 ] unsigned int 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  quotient        2    9[BANK1 ] unsigned int 
  3114 ;;  counter         1   11[BANK1 ] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  2    4[BANK1 ] unsigned int 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3124 ;;      Params:         0       0       4       0       0
  3125 ;;      Locals:         0       0       3       0       0
  3126 ;;      Temps:          0       0       1       0       0
  3127 ;;      Totals:         0       0       8       0       0
  3128 ;;Total ram usage:        8 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    5
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_sprintf
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           
  3139                           ;psect for function ___lwdiv
  3140  13D6                     ___lwdiv:	
  3141                           
  3142                           ;incstack = 0
  3143                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3144  13D6  1683               	bsf	3,5	;RP0=1, select bank1
  3145  13D7  1303               	bcf	3,6	;RP1=0, select bank1
  3146  13D8  01CF               	clrf	___lwdiv@quotient^(0+128)
  3147  13D9  01D0               	clrf	(___lwdiv@quotient+1)^(0+128)
  3148  13DA  084B               	movf	(___lwdiv@divisor+1)^(0+128),w
  3149  13DB  044A               	iorwf	___lwdiv@divisor^(0+128),w
  3150  13DC  1903               	skipnz
  3151  13DD  2C0F               	goto	l2702
  3152  13DE  01D1               	clrf	___lwdiv@counter^(0+128)
  3153  13DF  0AD1               	incf	___lwdiv@counter^(0+128),f
  3154  13E0                     l2690:	
  3155  13E0  1BCB               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  3156  13E1  2BEE               	goto	l2692
  3157  13E2  3001               	movlw	1
  3158  13E3                     u3215:	
  3159  13E3  1003               	clrc
  3160  13E4  0DCA               	rlf	___lwdiv@divisor^(0+128),f
  3161  13E5  0DCB               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3162  13E6  3EFF               	addlw	-1
  3163  13E7  1D03               	skipz
  3164  13E8  2BE3               	goto	u3215
  3165  13E9  3001               	movlw	1
  3166  13EA  00CE               	movwf	??___lwdiv^(0+128)
  3167  13EB  084E               	movf	??___lwdiv^(0+128),w
  3168  13EC  07D1               	addwf	___lwdiv@counter^(0+128),f
  3169  13ED  2BE0               	goto	l2690
  3170  13EE                     l2692:	
  3171  13EE  3001               	movlw	1
  3172  13EF                     u3235:	
  3173  13EF  1003               	clrc
  3174  13F0  0DCF               	rlf	___lwdiv@quotient^(0+128),f
  3175  13F1  0DD0               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3176  13F2  3EFF               	addlw	-1
  3177  13F3  1D03               	skipz
  3178  13F4  2BEF               	goto	u3235
  3179  13F5  084B               	movf	(___lwdiv@divisor+1)^(0+128),w
  3180  13F6  024D               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3181  13F7  1D03               	skipz
  3182  13F8  2BFB               	goto	u3245
  3183  13F9  084A               	movf	___lwdiv@divisor^(0+128),w
  3184  13FA  024C               	subwf	___lwdiv@dividend^(0+128),w
  3185  13FB                     u3245:	
  3186  13FB  1C03               	skipc
  3187  13FC  2C04               	goto	l2698
  3188  13FD  084A               	movf	___lwdiv@divisor^(0+128),w
  3189  13FE  02CC               	subwf	___lwdiv@dividend^(0+128),f
  3190  13FF  084B               	movf	(___lwdiv@divisor+1)^(0+128),w
  3191  1400  1C03               	skipc
  3192  1401  03CD               	decf	(___lwdiv@dividend+1)^(0+128),f
  3193  1402  02CD               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3194  1403  144F               	bsf	___lwdiv@quotient^(0+128),0
  3195  1404                     l2698:	
  3196  1404  3001               	movlw	1
  3197  1405                     u3255:	
  3198  1405  1003               	clrc
  3199  1406  0CCB               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3200  1407  0CCA               	rrf	___lwdiv@divisor^(0+128),f
  3201  1408  3EFF               	addlw	-1
  3202  1409  1D03               	skipz
  3203  140A  2C05               	goto	u3255
  3204  140B  3001               	movlw	1
  3205  140C  02D1               	subwf	___lwdiv@counter^(0+128),f
  3206  140D  1D03               	btfss	3,2
  3207  140E  2BEE               	goto	l2692
  3208  140F                     l2702:	
  3209  140F  0850               	movf	(___lwdiv@quotient+1)^(0+128),w
  3210  1410  01CB               	clrf	(?___lwdiv+1)^(0+128)
  3211  1411  07CB               	addwf	(?___lwdiv+1)^(0+128),f
  3212  1412  084F               	movf	___lwdiv@quotient^(0+128),w
  3213  1413  01CA               	clrf	?___lwdiv^(0+128)
  3214  1414  07CA               	addwf	?___lwdiv^(0+128),f
  3215  1415  0008               	return
  3216  1416                     __end_of___lwdiv:	
  3217                           
  3218                           	psect	text6
  3219  07CF                     __ptext6:	
  3220 ;; *************** function _USART_WriteString *****************
  3221 ;; Defined at:
  3222 ;;		line 52 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  str             2    5[BANK1 ] PTR const unsigned char 
  3225 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3226 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  3227 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  3228 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;		None               void
  3233 ;; Registers used:
  3234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3240 ;;      Params:         0       0       2       0       0
  3241 ;;      Locals:         0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0
  3243 ;;      Totals:         0       0       2       0       0
  3244 ;;Total ram usage:        2 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    6
  3247 ;; This function calls:
  3248 ;;		_USART_WriteChar
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _USART_WriteString
  3256  07CF                     _USART_WriteString:	
  3257  07CF                     l2908:	
  3258                           ;usart.c: 54: while(*str != '\0')
  3259                           
  3260                           ;incstack = 0
  3261                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3262                           
  3263  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  3264  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  3265  07D1  084C               	movf	(USART_WriteString@str+1)^(0+128),w
  3266  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  3267  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  3268  07D4  00FF               	movwf	127
  3269  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  3270  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  3271  07D7  084B               	movf	USART_WriteString@str^(0+128),w
  3272  07D8  0084               	movwf	4
  3273  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  3274  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  3275  07DB  160A  118A  2000  120A  118A  	fcall	stringtab
  3276  07E0  3800               	iorlw	0
  3277  07E1  1903               	btfsc	3,2
  3278  07E2  0008               	return
  3279                           
  3280                           ;usart.c: 55: {
  3281                           ;usart.c: 56: USART_WriteChar(*str);
  3282  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  3283  07E4  1303               	bcf	3,6	;RP1=0, select bank1
  3284  07E5  084C               	movf	(USART_WriteString@str+1)^(0+128),w
  3285  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  3286  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  3287  07E8  00FF               	movwf	127
  3288  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  3289  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  3290  07EB  084B               	movf	USART_WriteString@str^(0+128),w
  3291  07EC  0084               	movwf	4
  3292  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  3293  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  3294  07EF  160A  118A  2000  120A  118A  	fcall	stringtab
  3295  07F4  160A  118A  2170  120A  118A  	fcall	_USART_WriteChar
  3296                           
  3297                           ;usart.c: 57: str++;
  3298  07F9  3001               	movlw	1
  3299  07FA  1683               	bsf	3,5	;RP0=1, select bank1
  3300  07FB  1303               	bcf	3,6	;RP1=0, select bank1
  3301  07FC  07CB               	addwf	USART_WriteString@str^(0+128),f
  3302  07FD  1803               	skipnc
  3303  07FE  0ACC               	incf	(USART_WriteString@str+1)^(0+128),f
  3304  07FF  2FCF               	goto	l2908
  3305  0800                     __end_of_USART_WriteString:	
  3306                           
  3307                           	psect	text7
  3308  1170                     __ptext7:	
  3309 ;; *************** function _USART_WriteChar *****************
  3310 ;; Defined at:
  3311 ;;		line 44 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  byte            1    wreg     unsigned char 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  byte            1    4[BANK1 ] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;		None               void
  3318 ;; Registers used:
  3319 ;;		wreg
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         0       0       0       0       0
  3326 ;;      Locals:         0       0       1       0       0
  3327 ;;      Temps:          0       0       0       0       0
  3328 ;;      Totals:         0       0       1       0       0
  3329 ;;Total ram usage:        1 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    5
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_USART_WriteString
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function _USART_WriteChar
  3341  1170                     _USART_WriteChar:	
  3342                           
  3343                           ;incstack = 0
  3344                           ; Regs used in _USART_WriteChar: [wreg]
  3345                           ;USART_WriteChar@byte stored from wreg
  3346  1170  1683               	bsf	3,5	;RP0=1, select bank1
  3347  1171  1303               	bcf	3,6	;RP1=0, select bank1
  3348  1172  00CA               	movwf	USART_WriteChar@byte^(0+128)
  3349  1173                     l237:	
  3350                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3351                           
  3352  1173  1283               	bcf	3,5	;RP0=0, select bank0
  3353  1174  1E0C               	btfss	12,4	;volatile
  3354  1175  2973               	goto	l237
  3355                           
  3356                           ;usart.c: 47: TXREG = byte;
  3357  1176  1683               	bsf	3,5	;RP0=1, select bank1
  3358  1177  1303               	bcf	3,6	;RP1=0, select bank1
  3359  1178  084A               	movf	USART_WriteChar@byte^(0+128),w
  3360  1179  1283               	bcf	3,5	;RP0=0, select bank0
  3361  117A  1303               	bcf	3,6	;RP1=0, select bank0
  3362  117B  0099               	movwf	25	;volatile
  3363  117C  0008               	return
  3364  117D                     __end_of_USART_WriteChar:	
  3365                           
  3366                           	psect	text8
  3367  1416                     __ptext8:	
  3368 ;; *************** function _USART_Init *****************
  3369 ;; Defined at:
  3370 ;;		line 6 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  BaudRate        4   19[BANK1 ] long 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;		None               void
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, pclath, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         0       0       4       0       0
  3385 ;;      Locals:         0       0       0       0       0
  3386 ;;      Temps:          0       0       4       0       0
  3387 ;;      Totals:         0       0       8       0       0
  3388 ;;Total ram usage:        8 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    6
  3391 ;; This function calls:
  3392 ;;		___aldiv
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           
  3399                           ;psect for function _USART_Init
  3400  1416                     _USART_Init:	
  3401                           
  3402                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3403                           
  3404                           ;incstack = 0
  3405                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3406  1416  1683               	bsf	3,5	;RP0=1, select bank1
  3407  1417  1303               	bcf	3,6	;RP1=0, select bank1
  3408  1418  0859               	movf	USART_Init@BaudRate^(0+128),w
  3409  1419  00DD               	movwf	??_USART_Init^(0+128)
  3410  141A  085A               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3411  141B  00DE               	movwf	(??_USART_Init^(0+128)+1)
  3412  141C  085B               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3413  141D  00DF               	movwf	(??_USART_Init^(0+128)+2)
  3414  141E  085C               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3415  141F  00E0               	movwf	(??_USART_Init^(0+128)+3)
  3416  1420  3004               	movlw	4
  3417  1421                     u3625:	
  3418  1421  1003               	clrc
  3419  1422  0DDD               	rlf	??_USART_Init^(0+128),f
  3420  1423  0DDE               	rlf	(??_USART_Init^(0+128)+1),f
  3421  1424  0DDF               	rlf	(??_USART_Init^(0+128)+2),f
  3422  1425  0DE0               	rlf	(??_USART_Init^(0+128)+3),f
  3423  1426  3EFF               	addlw	-1
  3424  1427  1D03               	skipz
  3425  1428  2C21               	goto	u3625
  3426  1429  0860               	movf	(??_USART_Init+3)^(0+128),w
  3427  142A  00CD               	movwf	(___aldiv@divisor+3)^(0+128)
  3428  142B  085F               	movf	(??_USART_Init+2)^(0+128),w
  3429  142C  00CC               	movwf	(___aldiv@divisor+2)^(0+128)
  3430  142D  085E               	movf	(??_USART_Init+1)^(0+128),w
  3431  142E  00CB               	movwf	(___aldiv@divisor+1)^(0+128)
  3432  142F  085D               	movf	??_USART_Init^(0+128),w
  3433  1430  00CA               	movwf	___aldiv@divisor^(0+128)
  3434  1431  3001               	movlw	1
  3435  1432  00D1               	movwf	(___aldiv@dividend+3)^(0+128)
  3436  1433  3019               	movlw	25
  3437  1434  00D0               	movwf	(___aldiv@dividend+2)^(0+128)
  3438  1435  3040               	movlw	64
  3439  1436  00CF               	movwf	(___aldiv@dividend+1)^(0+128)
  3440  1437  3000               	movlw	0
  3441  1438  00CE               	movwf	___aldiv@dividend^(0+128)
  3442  1439  160A  118A  25B0   	fcall	___aldiv
  3443  143C  1683               	bsf	3,5	;RP0=1, select bank1
  3444  143D  1303               	bcf	3,6	;RP1=0, select bank1
  3445  143E  084A               	movf	?___aldiv^(0+128),w
  3446  143F  3EFF               	addlw	255
  3447  1440  0099               	movwf	25	;volatile
  3448                           
  3449                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3450  1441  1398               	bcf	24,7	;volatile
  3451                           
  3452                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3453  1442  1318               	bcf	24,6	;volatile
  3454                           
  3455                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3456  1443  1698               	bsf	24,5	;volatile
  3457                           
  3458                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3459  1444  1218               	bcf	24,4	;volatile
  3460                           
  3461                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3462  1445  1518               	bsf	24,2	;volatile
  3463                           
  3464                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3465  1446  1498               	bsf	24,1	;volatile
  3466                           
  3467                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3468  1447  1018               	bcf	24,0	;volatile
  3469                           
  3470                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3471  1448  1283               	bcf	3,5	;RP0=0, select bank0
  3472  1449  1303               	bcf	3,6	;RP1=0, select bank0
  3473  144A  1798               	bsf	24,7	;volatile
  3474                           
  3475                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3476  144B  1318               	bcf	24,6	;volatile
  3477                           
  3478                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3479  144C  1298               	bcf	24,5	;volatile
  3480                           
  3481                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3482  144D  1618               	bsf	24,4	;volatile
  3483                           
  3484                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3485  144E  1198               	bcf	24,3	;volatile
  3486                           
  3487                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3488  144F  1118               	bcf	24,2	;volatile
  3489                           
  3490                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3491  1450  1098               	bcf	24,1	;volatile
  3492                           
  3493                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3494  1451  1018               	bcf	24,0	;volatile
  3495                           
  3496                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3497  1452  1683               	bsf	3,5	;RP0=1, select bank1
  3498  1453  1303               	bcf	3,6	;RP1=0, select bank1
  3499  1454  120C               	bcf	12,4	;volatile
  3500                           
  3501                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3502  1455  1283               	bcf	3,5	;RP0=0, select bank0
  3503  1456  1303               	bcf	3,6	;RP1=0, select bank0
  3504  1457  120C               	bcf	12,4	;volatile
  3505                           
  3506                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3507  1458  1683               	bsf	3,5	;RP0=1, select bank1
  3508  1459  1303               	bcf	3,6	;RP1=0, select bank1
  3509  145A  168C               	bsf	12,5	;volatile
  3510                           
  3511                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3512  145B  1283               	bcf	3,5	;RP0=0, select bank0
  3513  145C  1303               	bcf	3,6	;RP1=0, select bank0
  3514  145D  128C               	bcf	12,5	;volatile
  3515  145E  0008               	return
  3516  145F                     __end_of_USART_Init:	
  3517                           
  3518                           	psect	text9
  3519  15B0                     __ptext9:	
  3520 ;; *************** function ___aldiv *****************
  3521 ;; Defined at:
  3522 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  divisor         4    4[BANK1 ] long 
  3525 ;;  dividend        4    8[BANK1 ] long 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  quotient        4   15[BANK1 ] long 
  3528 ;;  sign            1   14[BANK1 ] unsigned char 
  3529 ;;  counter         1   13[BANK1 ] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  4    4[BANK1 ] long 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       0       8       0       0
  3540 ;;      Locals:         0       0       6       0       0
  3541 ;;      Temps:          0       0       1       0       0
  3542 ;;      Totals:         0       0      15       0       0
  3543 ;;Total ram usage:       15 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    5
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_USART_Init
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function ___aldiv
  3555  15B0                     ___aldiv:	
  3556                           
  3557                           ;incstack = 0
  3558                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3559  15B0  1683               	bsf	3,5	;RP0=1, select bank1
  3560  15B1  1303               	bcf	3,6	;RP1=0, select bank1
  3561  15B2  01D4               	clrf	___aldiv@sign^(0+128)
  3562  15B3  1FCD               	btfss	(___aldiv@divisor+3)^(0+128),7
  3563  15B4  2DC2               	goto	l663
  3564  15B5  09CA               	comf	___aldiv@divisor^(0+128),f
  3565  15B6  09CB               	comf	(___aldiv@divisor+1)^(0+128),f
  3566  15B7  09CC               	comf	(___aldiv@divisor+2)^(0+128),f
  3567  15B8  09CD               	comf	(___aldiv@divisor+3)^(0+128),f
  3568  15B9  0ACA               	incf	___aldiv@divisor^(0+128),f
  3569  15BA  1903               	skipnz
  3570  15BB  0ACB               	incf	(___aldiv@divisor+1)^(0+128),f
  3571  15BC  1903               	skipnz
  3572  15BD  0ACC               	incf	(___aldiv@divisor+2)^(0+128),f
  3573  15BE  1903               	skipnz
  3574  15BF  0ACD               	incf	(___aldiv@divisor+3)^(0+128),f
  3575  15C0  01D4               	clrf	___aldiv@sign^(0+128)
  3576  15C1  0AD4               	incf	___aldiv@sign^(0+128),f
  3577  15C2                     l663:	
  3578  15C2  1FD1               	btfss	(___aldiv@dividend+3)^(0+128),7
  3579  15C3  2DD3               	goto	l2556
  3580  15C4  09CE               	comf	___aldiv@dividend^(0+128),f
  3581  15C5  09CF               	comf	(___aldiv@dividend+1)^(0+128),f
  3582  15C6  09D0               	comf	(___aldiv@dividend+2)^(0+128),f
  3583  15C7  09D1               	comf	(___aldiv@dividend+3)^(0+128),f
  3584  15C8  0ACE               	incf	___aldiv@dividend^(0+128),f
  3585  15C9  1903               	skipnz
  3586  15CA  0ACF               	incf	(___aldiv@dividend+1)^(0+128),f
  3587  15CB  1903               	skipnz
  3588  15CC  0AD0               	incf	(___aldiv@dividend+2)^(0+128),f
  3589  15CD  1903               	skipnz
  3590  15CE  0AD1               	incf	(___aldiv@dividend+3)^(0+128),f
  3591  15CF  3001               	movlw	1
  3592  15D0  00D2               	movwf	??___aldiv^(0+128)
  3593  15D1  0852               	movf	??___aldiv^(0+128),w
  3594  15D2  06D4               	xorwf	___aldiv@sign^(0+128),f
  3595  15D3                     l2556:	
  3596  15D3  3000               	movlw	0
  3597  15D4  00D8               	movwf	(___aldiv@quotient+3)^(0+128)
  3598  15D5  3000               	movlw	0
  3599  15D6  00D7               	movwf	(___aldiv@quotient+2)^(0+128)
  3600  15D7  3000               	movlw	0
  3601  15D8  00D6               	movwf	(___aldiv@quotient+1)^(0+128)
  3602  15D9  3000               	movlw	0
  3603  15DA  00D5               	movwf	___aldiv@quotient^(0+128)
  3604  15DB  084D               	movf	(___aldiv@divisor+3)^(0+128),w
  3605  15DC  044C               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3606  15DD  044B               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3607  15DE  044A               	iorwf	___aldiv@divisor^(0+128),w
  3608  15DF  1903               	skipnz
  3609  15E0  2E28               	goto	l2578
  3610  15E1  01D3               	clrf	___aldiv@counter^(0+128)
  3611  15E2  0AD3               	incf	___aldiv@counter^(0+128),f
  3612  15E3                     l2564:	
  3613  15E3  1BCD               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3614  15E4  2DF3               	goto	l2566
  3615  15E5  3001               	movlw	1
  3616  15E6  00D2               	movwf	??___aldiv^(0+128)
  3617  15E7                     u2895:	
  3618  15E7  1003               	clrc
  3619  15E8  0DCA               	rlf	___aldiv@divisor^(0+128),f
  3620  15E9  0DCB               	rlf	(___aldiv@divisor+1)^(0+128),f
  3621  15EA  0DCC               	rlf	(___aldiv@divisor+2)^(0+128),f
  3622  15EB  0DCD               	rlf	(___aldiv@divisor+3)^(0+128),f
  3623  15EC  0BD2               	decfsz	??___aldiv^(0+128),f
  3624  15ED  2DE7               	goto	u2895
  3625  15EE  3001               	movlw	1
  3626  15EF  00D2               	movwf	??___aldiv^(0+128)
  3627  15F0  0852               	movf	??___aldiv^(0+128),w
  3628  15F1  07D3               	addwf	___aldiv@counter^(0+128),f
  3629  15F2  2DE3               	goto	l2564
  3630  15F3                     l2566:	
  3631  15F3  3001               	movlw	1
  3632  15F4  00D2               	movwf	??___aldiv^(0+128)
  3633  15F5                     u2915:	
  3634  15F5  1003               	clrc
  3635  15F6  0DD5               	rlf	___aldiv@quotient^(0+128),f
  3636  15F7  0DD6               	rlf	(___aldiv@quotient+1)^(0+128),f
  3637  15F8  0DD7               	rlf	(___aldiv@quotient+2)^(0+128),f
  3638  15F9  0DD8               	rlf	(___aldiv@quotient+3)^(0+128),f
  3639  15FA  0BD2               	decfsz	??___aldiv^(0+128),f
  3640  15FB  2DF5               	goto	u2915
  3641  15FC  084D               	movf	(___aldiv@divisor+3)^(0+128),w
  3642  15FD  0251               	subwf	(___aldiv@dividend+3)^(0+128),w
  3643  15FE  1D03               	skipz
  3644  15FF  2E0A               	goto	u2925
  3645  1600  084C               	movf	(___aldiv@divisor+2)^(0+128),w
  3646  1601  0250               	subwf	(___aldiv@dividend+2)^(0+128),w
  3647  1602  1D03               	skipz
  3648  1603  2E0A               	goto	u2925
  3649  1604  084B               	movf	(___aldiv@divisor+1)^(0+128),w
  3650  1605  024F               	subwf	(___aldiv@dividend+1)^(0+128),w
  3651  1606  1D03               	skipz
  3652  1607  2E0A               	goto	u2925
  3653  1608  084A               	movf	___aldiv@divisor^(0+128),w
  3654  1609  024E               	subwf	___aldiv@dividend^(0+128),w
  3655  160A                     u2925:	
  3656  160A  1C03               	skipc
  3657  160B  2E1B               	goto	l2574
  3658  160C  084A               	movf	___aldiv@divisor^(0+128),w
  3659  160D  02CE               	subwf	___aldiv@dividend^(0+128),f
  3660  160E  084B               	movf	(___aldiv@divisor+1)^(0+128),w
  3661  160F  1C03               	skipc
  3662  1610  0F4B               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3663  1611  02CF               	subwf	(___aldiv@dividend+1)^(0+128),f
  3664  1612  084C               	movf	(___aldiv@divisor+2)^(0+128),w
  3665  1613  1C03               	skipc
  3666  1614  0F4C               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3667  1615  02D0               	subwf	(___aldiv@dividend+2)^(0+128),f
  3668  1616  084D               	movf	(___aldiv@divisor+3)^(0+128),w
  3669  1617  1C03               	skipc
  3670  1618  0F4D               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3671  1619  02D1               	subwf	(___aldiv@dividend+3)^(0+128),f
  3672  161A  1455               	bsf	___aldiv@quotient^(0+128),0
  3673  161B                     l2574:	
  3674  161B  3001               	movlw	1
  3675  161C                     u2935:	
  3676  161C  1003               	clrc
  3677  161D  0CCD               	rrf	(___aldiv@divisor+3)^(0+128),f
  3678  161E  0CCC               	rrf	(___aldiv@divisor+2)^(0+128),f
  3679  161F  0CCB               	rrf	(___aldiv@divisor+1)^(0+128),f
  3680  1620  0CCA               	rrf	___aldiv@divisor^(0+128),f
  3681  1621  3EFF               	addlw	-1
  3682  1622  1D03               	skipz
  3683  1623  2E1C               	goto	u2935
  3684  1624  3001               	movlw	1
  3685  1625  02D3               	subwf	___aldiv@counter^(0+128),f
  3686  1626  1D03               	btfss	3,2
  3687  1627  2DF3               	goto	l2566
  3688  1628                     l2578:	
  3689  1628  0854               	movf	___aldiv@sign^(0+128),w
  3690  1629  1903               	btfsc	3,2
  3691  162A  2E36               	goto	l2582
  3692  162B  09D5               	comf	___aldiv@quotient^(0+128),f
  3693  162C  09D6               	comf	(___aldiv@quotient+1)^(0+128),f
  3694  162D  09D7               	comf	(___aldiv@quotient+2)^(0+128),f
  3695  162E  09D8               	comf	(___aldiv@quotient+3)^(0+128),f
  3696  162F  0AD5               	incf	___aldiv@quotient^(0+128),f
  3697  1630  1903               	skipnz
  3698  1631  0AD6               	incf	(___aldiv@quotient+1)^(0+128),f
  3699  1632  1903               	skipnz
  3700  1633  0AD7               	incf	(___aldiv@quotient+2)^(0+128),f
  3701  1634  1903               	skipnz
  3702  1635  0AD8               	incf	(___aldiv@quotient+3)^(0+128),f
  3703  1636                     l2582:	
  3704  1636  0858               	movf	(___aldiv@quotient+3)^(0+128),w
  3705  1637  00CD               	movwf	(?___aldiv+3)^(0+128)
  3706  1638  0857               	movf	(___aldiv@quotient+2)^(0+128),w
  3707  1639  00CC               	movwf	(?___aldiv+2)^(0+128)
  3708  163A  0856               	movf	(___aldiv@quotient+1)^(0+128),w
  3709  163B  00CB               	movwf	(?___aldiv+1)^(0+128)
  3710  163C  0855               	movf	___aldiv@quotient^(0+128),w
  3711  163D  00CA               	movwf	?___aldiv^(0+128)
  3712  163E  0008               	return
  3713  163F                     __end_of___aldiv:	
  3714                           
  3715                           	psect	text10
  3716  1155                     __ptext10:	
  3717 ;; *************** function _TIMER0_Set *****************
  3718 ;; Defined at:
  3719 ;;		line 20 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\timers.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  contagens       1    wreg     unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  contagens       1    4[BANK1 ] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;		None               void
  3726 ;; Registers used:
  3727 ;;		wreg
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3733 ;;      Params:         0       0       0       0       0
  3734 ;;      Locals:         0       0       1       0       0
  3735 ;;      Temps:          0       0       0       0       0
  3736 ;;      Totals:         0       0       1       0       0
  3737 ;;Total ram usage:        1 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    5
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_main
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           
  3748                           ;psect for function _TIMER0_Set
  3749  1155                     _TIMER0_Set:	
  3750                           
  3751                           ;incstack = 0
  3752                           ; Regs used in _TIMER0_Set: [wreg]
  3753                           ;TIMER0_Set@contagens stored from wreg
  3754  1155  1683               	bsf	3,5	;RP0=1, select bank1
  3755  1156  1303               	bcf	3,6	;RP1=0, select bank1
  3756  1157  00CA               	movwf	TIMER0_Set@contagens^(0+128)
  3757                           
  3758                           ;timers.c: 22: TMR0 = contagens;
  3759  1158  084A               	movf	TIMER0_Set@contagens^(0+128),w
  3760  1159  1283               	bcf	3,5	;RP0=0, select bank0
  3761  115A  1303               	bcf	3,6	;RP1=0, select bank0
  3762  115B  0081               	movwf	1	;volatile
  3763  115C  0008               	return
  3764  115D                     __end_of_TIMER0_Set:	
  3765                           
  3766                           	psect	text11
  3767  1165                     __ptext11:	
  3768 ;; *************** function _TIMER0_Init *****************
  3769 ;; Defined at:
  3770 ;;		line 6 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\timers.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;		None               void
  3777 ;; Registers used:
  3778 ;;		None
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3784 ;;      Params:         0       0       0       0       0
  3785 ;;      Locals:         0       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0
  3787 ;;      Totals:         0       0       0       0       0
  3788 ;;Total ram usage:        0 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    5
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_main
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _TIMER0_Init
  3800  1165                     _TIMER0_Init:	
  3801                           
  3802                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3803                           
  3804                           ;incstack = 0
  3805                           ; Regs used in _TIMER0_Init: []
  3806  1165  1683               	bsf	3,5	;RP0=1, select bank1
  3807  1166  1303               	bcf	3,6	;RP1=0, select bank1
  3808  1167  1281               	bcf	1,5	;volatile
  3809                           
  3810                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3811  1168  1201               	bcf	1,4	;volatile
  3812                           
  3813                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3814  1169  1181               	bcf	1,3	;volatile
  3815                           
  3816                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3817  116A  1501               	bsf	1,2	;volatile
  3818                           
  3819                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3820  116B  1481               	bsf	1,1	;volatile
  3821                           
  3822                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3823  116C  1401               	bsf	1,0	;volatile
  3824                           
  3825                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3826  116D  110B               	bcf	11,2	;volatile
  3827                           
  3828                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3829  116E  168B               	bsf	11,5	;volatile
  3830  116F  0008               	return
  3831  1170                     __end_of_TIMER0_Init:	
  3832                           
  3833                           	psect	text12
  3834  12BF                     __ptext12:	
  3835 ;; *************** function _PWM_Init *****************
  3836 ;; Defined at:
  3837 ;;		line 5 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\pwm.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;		None               void
  3844 ;; Registers used:
  3845 ;;		wreg
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0
  3854 ;;      Totals:         0       0       0       0       0
  3855 ;;Total ram usage:        0 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    5
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_main
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           
  3866                           ;psect for function _PWM_Init
  3867  12BF                     _PWM_Init:	
  3868                           
  3869                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in _PWM_Init: [wreg]
  3873  12BF  1283               	bcf	3,5	;RP0=0, select bank0
  3874  12C0  1303               	bcf	3,6	;RP1=0, select bank0
  3875  12C1  1492               	bsf	18,1	;volatile
  3876                           
  3877                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3878  12C2  1012               	bcf	18,0	;volatile
  3879                           
  3880                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3881  12C3  1312               	bcf	18,6	;volatile
  3882                           
  3883                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3884  12C4  1292               	bcf	18,5	;volatile
  3885                           
  3886                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3887  12C5  1212               	bcf	18,4	;volatile
  3888                           
  3889                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3890  12C6  1192               	bcf	18,3	;volatile
  3891                           
  3892                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3893  12C7  1512               	bsf	18,2	;volatile
  3894                           
  3895                           ;pwm.c: 27: PR2 = 255;
  3896  12C8  30FF               	movlw	255
  3897  12C9  1683               	bsf	3,5	;RP0=1, select bank1
  3898  12CA  1303               	bcf	3,6	;RP1=0, select bank1
  3899  12CB  0092               	movwf	18	;volatile
  3900                           
  3901                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3902  12CC  1283               	bcf	3,5	;RP0=0, select bank0
  3903  12CD  1303               	bcf	3,6	;RP1=0, select bank0
  3904  12CE  1597               	bsf	23,3	;volatile
  3905                           
  3906                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3907  12CF  1517               	bsf	23,2	;volatile
  3908                           
  3909                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3910  12D0  1497               	bsf	23,1	;volatile
  3911                           
  3912                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3913  12D1  1417               	bsf	23,0	;volatile
  3914                           
  3915                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3916  12D2  1683               	bsf	3,5	;RP0=1, select bank1
  3917  12D3  1303               	bcf	3,6	;RP1=0, select bank1
  3918  12D4  150C               	bsf	12,2	;volatile
  3919                           
  3920                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3921  12D5  1283               	bcf	3,5	;RP0=0, select bank0
  3922  12D6  1303               	bcf	3,6	;RP1=0, select bank0
  3923  12D7  110C               	bcf	12,2	;volatile
  3924                           
  3925                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3926  12D8  159D               	bsf	29,3	;volatile
  3927                           
  3928                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3929  12D9  151D               	bsf	29,2	;volatile
  3930                           
  3931                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3932  12DA  149D               	bsf	29,1	;volatile
  3933                           
  3934                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3935  12DB  141D               	bsf	29,0	;volatile
  3936                           
  3937                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3938  12DC  1683               	bsf	3,5	;RP0=1, select bank1
  3939  12DD  1303               	bcf	3,6	;RP1=0, select bank1
  3940  12DE  140D               	bsf	13,0	;volatile
  3941                           
  3942                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3943  12DF  1283               	bcf	3,5	;RP0=0, select bank0
  3944  12E0  1303               	bcf	3,6	;RP1=0, select bank0
  3945  12E1  100D               	bcf	13,0	;volatile
  3946  12E2  0008               	return
  3947  12E3                     __end_of_PWM_Init:	
  3948                           
  3949                           	psect	text13
  3950  1258                     __ptext13:	
  3951 ;; *************** function _PWM_DutyCycle2 *****************
  3952 ;; Defined at:
  3953 ;;		line 96 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\pwm.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  valor           2    4[BANK1 ] int 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;		None
  3958 ;; Return value:  Size  Location     Type
  3959 ;;		None               void
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3967 ;;      Params:         0       0       2       0       0
  3968 ;;      Locals:         0       0       0       0       0
  3969 ;;      Temps:          0       0       2       0       0
  3970 ;;      Totals:         0       0       4       0       0
  3971 ;;Total ram usage:        4 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:    5
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_main
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           
  3982                           ;psect for function _PWM_DutyCycle2
  3983  1258                     _PWM_DutyCycle2:	
  3984                           
  3985                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3986                           
  3987                           ;incstack = 0
  3988                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3989  1258  1683               	bsf	3,5	;RP0=1, select bank1
  3990  1259  1303               	bcf	3,6	;RP1=0, select bank1
  3991  125A  084B               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3992  125B  00CD               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3993  125C  084A               	movf	PWM_DutyCycle2@valor^(0+128),w
  3994  125D  00CC               	movwf	??_PWM_DutyCycle2^(0+128)
  3995  125E  0D4D               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3996  125F  0CCD               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3997  1260  0CCC               	rrf	??_PWM_DutyCycle2^(0+128),f
  3998  1261  0D4D               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3999  1262  0CCD               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  4000  1263  0CCC               	rrf	??_PWM_DutyCycle2^(0+128),f
  4001  1264  084C               	movf	??_PWM_DutyCycle2^(0+128),w
  4002  1265  1283               	bcf	3,5	;RP0=0, select bank0
  4003  1266  1303               	bcf	3,6	;RP1=0, select bank0
  4004  1267  009B               	movwf	27	;volatile
  4005                           
  4006                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4007  1268  1683               	bsf	3,5	;RP0=1, select bank1
  4008  1269  1303               	bcf	3,6	;RP1=0, select bank1
  4009  126A  084A               	movf	PWM_DutyCycle2@valor^(0+128),w
  4010  126B  00CC               	movwf	??_PWM_DutyCycle2^(0+128)
  4011  126C  3003               	movlw	3
  4012  126D                     u3595:	
  4013  126D  1003               	clrc
  4014  126E  0DCC               	rlf	??_PWM_DutyCycle2^(0+128),f
  4015  126F  3EFF               	addlw	-1
  4016  1270  1D03               	skipz
  4017  1271  2A6D               	goto	u3595
  4018  1272  1003               	clrc
  4019  1273  0D4C               	rlf	??_PWM_DutyCycle2^(0+128),w
  4020  1274  380C               	iorlw	12
  4021  1275  1283               	bcf	3,5	;RP0=0, select bank0
  4022  1276  1303               	bcf	3,6	;RP1=0, select bank0
  4023  1277  009D               	movwf	29	;volatile
  4024  1278  0008               	return
  4025  1279                     __end_of_PWM_DutyCycle2:	
  4026                           
  4027                           	psect	text14
  4028  1237                     __ptext14:	
  4029 ;; *************** function _PWM_DutyCycle1 *****************
  4030 ;; Defined at:
  4031 ;;		line 64 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\pwm.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  valor           2    4[BANK1 ] int 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;		None               void
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4045 ;;      Params:         0       0       2       0       0
  4046 ;;      Locals:         0       0       0       0       0
  4047 ;;      Temps:          0       0       2       0       0
  4048 ;;      Totals:         0       0       4       0       0
  4049 ;;Total ram usage:        4 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    5
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_main
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           
  4060                           ;psect for function _PWM_DutyCycle1
  4061  1237                     _PWM_DutyCycle1:	
  4062                           
  4063                           ;pwm.c: 91: CCPR1L = valor >> 2;
  4064                           
  4065                           ;incstack = 0
  4066                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  4067  1237  1683               	bsf	3,5	;RP0=1, select bank1
  4068  1238  1303               	bcf	3,6	;RP1=0, select bank1
  4069  1239  084B               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  4070  123A  00CD               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  4071  123B  084A               	movf	PWM_DutyCycle1@valor^(0+128),w
  4072  123C  00CC               	movwf	??_PWM_DutyCycle1^(0+128)
  4073  123D  0D4D               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4074  123E  0CCD               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4075  123F  0CCC               	rrf	??_PWM_DutyCycle1^(0+128),f
  4076  1240  0D4D               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4077  1241  0CCD               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4078  1242  0CCC               	rrf	??_PWM_DutyCycle1^(0+128),f
  4079  1243  084C               	movf	??_PWM_DutyCycle1^(0+128),w
  4080  1244  1283               	bcf	3,5	;RP0=0, select bank0
  4081  1245  1303               	bcf	3,6	;RP1=0, select bank0
  4082  1246  0095               	movwf	21	;volatile
  4083                           
  4084                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  4085  1247  1683               	bsf	3,5	;RP0=1, select bank1
  4086  1248  1303               	bcf	3,6	;RP1=0, select bank1
  4087  1249  084A               	movf	PWM_DutyCycle1@valor^(0+128),w
  4088  124A  00CC               	movwf	??_PWM_DutyCycle1^(0+128)
  4089  124B  3003               	movlw	3
  4090  124C                     u3655:	
  4091  124C  1003               	clrc
  4092  124D  0DCC               	rlf	??_PWM_DutyCycle1^(0+128),f
  4093  124E  3EFF               	addlw	-1
  4094  124F  1D03               	skipz
  4095  1250  2A4C               	goto	u3655
  4096  1251  1003               	clrc
  4097  1252  0D4C               	rlf	??_PWM_DutyCycle1^(0+128),w
  4098  1253  380C               	iorlw	12
  4099  1254  1283               	bcf	3,5	;RP0=0, select bank0
  4100  1255  1303               	bcf	3,6	;RP1=0, select bank0
  4101  1256  0097               	movwf	23	;volatile
  4102  1257  0008               	return
  4103  1258                     __end_of_PWM_DutyCycle1:	
  4104                           
  4105                           	psect	text15
  4106  1331                     __ptext15:	
  4107 ;; *************** function _LCD_WriteString *****************
  4108 ;; Defined at:
  4109 ;;		line 61 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  Str             2    6[BANK1 ] PTR const unsigned char 
  4112 ;;		 -> STR_18(6), STR_17(6), display_pwm(10), display_rpm(10), 
  4113 ;;		 -> STR_13(17), 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;		None
  4116 ;; Return value:  Size  Location     Type
  4117 ;;		None               void
  4118 ;; Registers used:
  4119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4125 ;;      Params:         0       0       2       0       0
  4126 ;;      Locals:         0       0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0
  4128 ;;      Totals:         0       0       2       0       0
  4129 ;;Total ram usage:        2 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    6
  4132 ;; This function calls:
  4133 ;;		_LCD_WriteData
  4134 ;; This function is called by:
  4135 ;;		_main
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           
  4140                           ;psect for function _LCD_WriteString
  4141  1331                     _LCD_WriteString:	
  4142  1331                     l3028:	
  4143                           ;lcd.c: 63: while(*Str != '\0')
  4144                           
  4145                           ;incstack = 0
  4146                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4147                           
  4148  1331  1683               	bsf	3,5	;RP0=1, select bank1
  4149  1332  1303               	bcf	3,6	;RP1=0, select bank1
  4150  1333  084D               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4151  1334  1283               	bcf	3,5	;RP0=0, select bank0
  4152  1335  1303               	bcf	3,6	;RP1=0, select bank0
  4153  1336  00FF               	movwf	127
  4154  1337  1683               	bsf	3,5	;RP0=1, select bank1
  4155  1338  1303               	bcf	3,6	;RP1=0, select bank1
  4156  1339  084C               	movf	LCD_WriteString@Str^(0+128),w
  4157  133A  0084               	movwf	4
  4158  133B  1283               	bcf	3,5	;RP0=0, select bank0
  4159  133C  1303               	bcf	3,6	;RP1=0, select bank0
  4160  133D  160A  118A  2000  160A  118A  	fcall	stringtab
  4161  1342  3800               	iorlw	0
  4162  1343  1903               	btfsc	3,2
  4163  1344  0008               	return
  4164                           
  4165                           ;lcd.c: 64: {
  4166                           ;lcd.c: 65: LCD_WriteData(*Str);
  4167  1345  1683               	bsf	3,5	;RP0=1, select bank1
  4168  1346  1303               	bcf	3,6	;RP1=0, select bank1
  4169  1347  084D               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4170  1348  1283               	bcf	3,5	;RP0=0, select bank0
  4171  1349  1303               	bcf	3,6	;RP1=0, select bank0
  4172  134A  00FF               	movwf	127
  4173  134B  1683               	bsf	3,5	;RP0=1, select bank1
  4174  134C  1303               	bcf	3,6	;RP1=0, select bank1
  4175  134D  084C               	movf	LCD_WriteString@Str^(0+128),w
  4176  134E  0084               	movwf	4
  4177  134F  1283               	bcf	3,5	;RP0=0, select bank0
  4178  1350  1303               	bcf	3,6	;RP1=0, select bank0
  4179  1351  160A  118A  2000  160A  118A  	fcall	stringtab
  4180  1356  160A  118A  21CA  160A  118A  	fcall	_LCD_WriteData
  4181                           
  4182                           ;lcd.c: 66: Str++;
  4183  135B  3001               	movlw	1
  4184  135C  1683               	bsf	3,5	;RP0=1, select bank1
  4185  135D  1303               	bcf	3,6	;RP1=0, select bank1
  4186  135E  07CC               	addwf	LCD_WriteString@Str^(0+128),f
  4187  135F  1803               	skipnc
  4188  1360  0ACD               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4189  1361  2B31               	goto	l3028
  4190  1362                     __end_of_LCD_WriteString:	
  4191                           
  4192                           	psect	text16
  4193  11CA                     __ptext16:	
  4194 ;; *************** function _LCD_WriteData *****************
  4195 ;; Defined at:
  4196 ;;		line 47 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  Byte            1    wreg     unsigned char 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  Byte            1    5[BANK1 ] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;		None               void
  4203 ;; Registers used:
  4204 ;;		wreg
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4210 ;;      Params:         0       0       0       0       0
  4211 ;;      Locals:         0       0       1       0       0
  4212 ;;      Temps:          0       0       1       0       0
  4213 ;;      Totals:         0       0       2       0       0
  4214 ;;Total ram usage:        2 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    5
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_LCD_WriteString
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           
  4225                           ;psect for function _LCD_WriteData
  4226  11CA                     _LCD_WriteData:	
  4227                           
  4228                           ;incstack = 0
  4229                           ; Regs used in _LCD_WriteData: [wreg]
  4230                           ;LCD_WriteData@Byte stored from wreg
  4231  11CA  1683               	bsf	3,5	;RP0=1, select bank1
  4232  11CB  1303               	bcf	3,6	;RP1=0, select bank1
  4233  11CC  00CB               	movwf	LCD_WriteData@Byte^(0+128)
  4234                           
  4235                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4236  11CD  1283               	bcf	3,5	;RP0=0, select bank0
  4237  11CE  1303               	bcf	3,6	;RP1=0, select bank0
  4238  11CF  1409               	bsf	9,0	;volatile
  4239                           
  4240                           ;lcd.c: 51: PORTD = Byte;
  4241  11D0  1683               	bsf	3,5	;RP0=1, select bank1
  4242  11D1  1303               	bcf	3,6	;RP1=0, select bank1
  4243  11D2  084B               	movf	LCD_WriteData@Byte^(0+128),w
  4244  11D3  1283               	bcf	3,5	;RP0=0, select bank0
  4245  11D4  1303               	bcf	3,6	;RP1=0, select bank0
  4246  11D5  0088               	movwf	8	;volatile
  4247                           
  4248                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4249  11D6  1489               	bsf	9,1	;volatile
  4250                           
  4251                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4252  11D7  303D               	movlw	61
  4253  11D8  1683               	bsf	3,5	;RP0=1, select bank1
  4254  11D9  1303               	bcf	3,6	;RP1=0, select bank1
  4255  11DA  00CA               	movwf	??_LCD_WriteData^(0+128)
  4256  11DB                     u4167:	
  4257  11DB  0BCA               	decfsz	??_LCD_WriteData^(0+128),f
  4258  11DC  29DB               	goto	u4167
  4259                           
  4260                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4261  11DD  1283               	bcf	3,5	;RP0=0, select bank0
  4262  11DE  1303               	bcf	3,6	;RP1=0, select bank0
  4263  11DF  1089               	bcf	9,1	;volatile
  4264  11E0  0008               	return
  4265  11E1                     __end_of_LCD_WriteData:	
  4266                           
  4267                           	psect	text17
  4268  081E                     __ptext17:	
  4269 ;; *************** function _LCD_Init *****************
  4270 ;; Defined at:
  4271 ;;		line 87 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;		None
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;		None               void
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0, pclath, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4285 ;;      Params:         0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0
  4287 ;;      Temps:          0       0       2       0       0
  4288 ;;      Totals:         0       0       2       0       0
  4289 ;;Total ram usage:        2 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    6
  4292 ;; This function calls:
  4293 ;;		_LCD_WriteCmd
  4294 ;; This function is called by:
  4295 ;;		_main
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _LCD_Init
  4301  081E                     _LCD_Init:	
  4302                           
  4303                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4304                           
  4305                           ;incstack = 0
  4306                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4307  081E  1683               	bsf	3,5	;RP0=1, select bank1
  4308  081F  1303               	bcf	3,6	;RP1=0, select bank1
  4309  0820  119F               	bcf	31,3	;volatile
  4310                           
  4311                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4312  0821  151F               	bsf	31,2	;volatile
  4313                           
  4314                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4315  0822  109F               	bcf	31,1	;volatile
  4316                           
  4317                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4318  0823  101F               	bcf	31,0	;volatile
  4319                           
  4320                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4321  0824  305A               	movlw	90
  4322  0825  00CD               	movwf	(??_LCD_Init^(0+128)+1)
  4323  0826  30C3               	movlw	195
  4324  0827  00CC               	movwf	??_LCD_Init^(0+128)
  4325  0828                     u4177:	
  4326  0828  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4327  0829  2828               	goto	u4177
  4328  082A  0BCD               	decfsz	(??_LCD_Init^(0+128)+1),f
  4329  082B  2828               	goto	u4177
  4330                           
  4331                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4332  082C  3030               	movlw	48
  4333  082D  160A  118A  21B3  120A  158A  	fcall	_LCD_WriteCmd
  4334                           
  4335                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4336  0832  3018               	movlw	24
  4337  0833  1683               	bsf	3,5	;RP0=1, select bank1
  4338  0834  1303               	bcf	3,6	;RP1=0, select bank1
  4339  0835  00CD               	movwf	(??_LCD_Init^(0+128)+1)
  4340  0836  30EF               	movlw	239
  4341  0837  00CC               	movwf	??_LCD_Init^(0+128)
  4342  0838                     u4187:	
  4343  0838  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4344  0839  2838               	goto	u4187
  4345  083A  0BCD               	decfsz	(??_LCD_Init^(0+128)+1),f
  4346  083B  2838               	goto	u4187
  4347                           
  4348                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4349  083C  3030               	movlw	48
  4350  083D  160A  118A  21B3  120A  158A  	fcall	_LCD_WriteCmd
  4351                           
  4352                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4353  0842  3099               	movlw	153
  4354  0843  1683               	bsf	3,5	;RP0=1, select bank1
  4355  0844  1303               	bcf	3,6	;RP1=0, select bank1
  4356  0845  00CC               	movwf	??_LCD_Init^(0+128)
  4357  0846                     u4197:	
  4358  0846  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4359  0847  2846               	goto	u4197
  4360                           
  4361                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4362  0848  3030               	movlw	48
  4363  0849  160A  118A  21B3  120A  158A  	fcall	_LCD_WriteCmd
  4364                           
  4365                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4366  084E  303D               	movlw	61
  4367  084F  1683               	bsf	3,5	;RP0=1, select bank1
  4368  0850  1303               	bcf	3,6	;RP1=0, select bank1
  4369  0851  00CC               	movwf	??_LCD_Init^(0+128)
  4370  0852                     u4207:	
  4371  0852  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4372  0853  2852               	goto	u4207
  4373                           
  4374                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4375  0854  3038               	movlw	56
  4376  0855  160A  118A  21B3  120A  158A  	fcall	_LCD_WriteCmd
  4377                           
  4378                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4379  085A  303D               	movlw	61
  4380  085B  1683               	bsf	3,5	;RP0=1, select bank1
  4381  085C  1303               	bcf	3,6	;RP1=0, select bank1
  4382  085D  00CC               	movwf	??_LCD_Init^(0+128)
  4383  085E                     u4217:	
  4384  085E  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4385  085F  285E               	goto	u4217
  4386                           
  4387                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4388  0860  3001               	movlw	1
  4389  0861  160A  118A  21B3  120A  158A  	fcall	_LCD_WriteCmd
  4390                           
  4391                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4392  0866  300C               	movlw	12
  4393  0867  1683               	bsf	3,5	;RP0=1, select bank1
  4394  0868  1303               	bcf	3,6	;RP1=0, select bank1
  4395  0869  00CD               	movwf	(??_LCD_Init^(0+128)+1)
  4396  086A  30F7               	movlw	247
  4397  086B  00CC               	movwf	??_LCD_Init^(0+128)
  4398  086C                     u4227:	
  4399  086C  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4400  086D  286C               	goto	u4227
  4401  086E  0BCD               	decfsz	(??_LCD_Init^(0+128)+1),f
  4402  086F  286C               	goto	u4227
  4403                           
  4404                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4405  0870  300C               	movlw	12
  4406  0871  160A  118A  21B3  120A  158A  	fcall	_LCD_WriteCmd
  4407                           
  4408                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4409  0876  303D               	movlw	61
  4410  0877  1683               	bsf	3,5	;RP0=1, select bank1
  4411  0878  1303               	bcf	3,6	;RP1=0, select bank1
  4412  0879  00CC               	movwf	??_LCD_Init^(0+128)
  4413  087A                     u4237:	
  4414  087A  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4415  087B  287A               	goto	u4237
  4416                           
  4417                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4418  087C  3006               	movlw	6
  4419  087D  160A  118A  21B3  120A  158A  	fcall	_LCD_WriteCmd
  4420                           
  4421                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4422  0882  303D               	movlw	61
  4423  0883  1683               	bsf	3,5	;RP0=1, select bank1
  4424  0884  1303               	bcf	3,6	;RP1=0, select bank1
  4425  0885  00CC               	movwf	??_LCD_Init^(0+128)
  4426  0886                     u4247:	
  4427  0886  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4428  0887  2886               	goto	u4247
  4429  0888  0008               	return
  4430  0889                     __end_of_LCD_Init:	
  4431                           
  4432                           	psect	text18
  4433  1217                     __ptext18:	
  4434 ;; *************** function _LCD_Cursor *****************
  4435 ;; Defined at:
  4436 ;;		line 10 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  Row             1    wreg     unsigned char 
  4439 ;;  Col             1    4[BANK1 ] unsigned char 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  Row             1    6[BANK1 ] unsigned char 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;		None               void
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4451 ;;      Params:         0       0       1       0       0
  4452 ;;      Locals:         0       0       1       0       0
  4453 ;;      Temps:          0       0       1       0       0
  4454 ;;      Totals:         0       0       3       0       0
  4455 ;;Total ram usage:        3 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    5
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_main
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           
  4466                           ;psect for function _LCD_Cursor
  4467  1217                     _LCD_Cursor:	
  4468                           
  4469                           ;incstack = 0
  4470                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4471                           ;LCD_Cursor@Row stored from wreg
  4472  1217  1683               	bsf	3,5	;RP0=1, select bank1
  4473  1218  1303               	bcf	3,6	;RP1=0, select bank1
  4474  1219  00CC               	movwf	LCD_Cursor@Row^(0+128)
  4475                           
  4476                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4477  121A  1283               	bcf	3,5	;RP0=0, select bank0
  4478  121B  1303               	bcf	3,6	;RP1=0, select bank0
  4479  121C  1009               	bcf	9,0	;volatile
  4480                           
  4481                           ;lcd.c: 14: if (Row == 0)
  4482  121D  1683               	bsf	3,5	;RP0=1, select bank1
  4483  121E  1303               	bcf	3,6	;RP1=0, select bank1
  4484  121F  08CC               	movf	LCD_Cursor@Row^(0+128),f
  4485  1220  1D03               	skipz
  4486  1221  2A25               	goto	l3014
  4487                           
  4488                           ;lcd.c: 15: {
  4489                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4490  1222  084A               	movf	LCD_Cursor@Col^(0+128),w
  4491  1223  3E80               	addlw	128
  4492  1224  2A29               	goto	L2
  4493  1225                     l3014:	
  4494                           ;lcd.c: 17: }
  4495                           
  4496                           
  4497                           ;lcd.c: 18: else
  4498                           ;lcd.c: 19: {
  4499                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4500  1225  1683               	bsf	3,5	;RP0=1, select bank1
  4501  1226  1303               	bcf	3,6	;RP1=0, select bank1
  4502  1227  084A               	movf	LCD_Cursor@Col^(0+128),w
  4503  1228  3EC0               	addlw	192
  4504  1229                     L2:	
  4505  1229  1283               	bcf	3,5	;RP0=0, select bank0
  4506  122A  1303               	bcf	3,6	;RP1=0, select bank0
  4507  122B  0088               	movwf	8	;volatile
  4508                           
  4509                           ;lcd.c: 21: }
  4510                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4511  122C  1489               	bsf	9,1	;volatile
  4512                           
  4513                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4514  122D  303D               	movlw	61
  4515  122E  1683               	bsf	3,5	;RP0=1, select bank1
  4516  122F  1303               	bcf	3,6	;RP1=0, select bank1
  4517  1230  00CB               	movwf	??_LCD_Cursor^(0+128)
  4518  1231                     u4257:	
  4519  1231  0BCB               	decfsz	??_LCD_Cursor^(0+128),f
  4520  1232  2A31               	goto	u4257
  4521                           
  4522                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4523  1233  1283               	bcf	3,5	;RP0=0, select bank0
  4524  1234  1303               	bcf	3,6	;RP1=0, select bank0
  4525  1235  1089               	bcf	9,1	;volatile
  4526  1236  0008               	return
  4527  1237                     __end_of_LCD_Cursor:	
  4528                           
  4529                           	psect	text19
  4530  1308                     __ptext19:	
  4531 ;; *************** function _LCD_Clear *****************
  4532 ;; Defined at:
  4533 ;;		line 71 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;		None               void
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, pclath, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         0       0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0
  4549 ;;      Temps:          0       0       2       0       0
  4550 ;;      Totals:         0       0       2       0       0
  4551 ;;Total ram usage:        2 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    6
  4554 ;; This function calls:
  4555 ;;		_LCD_WriteCmd
  4556 ;; This function is called by:
  4557 ;;		_main
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _LCD_Clear
  4563  1308                     _LCD_Clear:	
  4564                           
  4565                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4569  1308  3001               	movlw	1
  4570  1309  160A  118A  21B3  160A  118A  	fcall	_LCD_WriteCmd
  4571                           
  4572                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4573  130E  300C               	movlw	12
  4574  130F  1683               	bsf	3,5	;RP0=1, select bank1
  4575  1310  1303               	bcf	3,6	;RP1=0, select bank1
  4576  1311  00CD               	movwf	(??_LCD_Clear^(0+128)+1)
  4577  1312  30F7               	movlw	247
  4578  1313  00CC               	movwf	??_LCD_Clear^(0+128)
  4579  1314                     u4267:	
  4580  1314  0BCC               	decfsz	??_LCD_Clear^(0+128),f
  4581  1315  2B14               	goto	u4267
  4582  1316  0BCD               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4583  1317  2B14               	goto	u4267
  4584                           
  4585                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4586  1318  300C               	movlw	12
  4587  1319  160A  118A  21B3  160A  118A  	fcall	_LCD_WriteCmd
  4588                           
  4589                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4590  131E  303D               	movlw	61
  4591  131F  1683               	bsf	3,5	;RP0=1, select bank1
  4592  1320  1303               	bcf	3,6	;RP1=0, select bank1
  4593  1321  00CC               	movwf	??_LCD_Clear^(0+128)
  4594  1322                     u4277:	
  4595  1322  0BCC               	decfsz	??_LCD_Clear^(0+128),f
  4596  1323  2B22               	goto	u4277
  4597                           
  4598                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4599  1324  3006               	movlw	6
  4600  1325  160A  118A  21B3  160A  118A  	fcall	_LCD_WriteCmd
  4601                           
  4602                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4603  132A  303D               	movlw	61
  4604  132B  1683               	bsf	3,5	;RP0=1, select bank1
  4605  132C  1303               	bcf	3,6	;RP1=0, select bank1
  4606  132D  00CC               	movwf	??_LCD_Clear^(0+128)
  4607  132E                     u4287:	
  4608  132E  0BCC               	decfsz	??_LCD_Clear^(0+128),f
  4609  132F  2B2E               	goto	u4287
  4610  1330  0008               	return
  4611  1331                     __end_of_LCD_Clear:	
  4612                           
  4613                           	psect	text20
  4614  11B3                     __ptext20:	
  4615 ;; *************** function _LCD_WriteCmd *****************
  4616 ;; Defined at:
  4617 ;;		line 32 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  Byte            1    wreg     unsigned char 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  Byte            1    5[BANK1 ] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;		None               void
  4624 ;; Registers used:
  4625 ;;		wreg
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4631 ;;      Params:         0       0       0       0       0
  4632 ;;      Locals:         0       0       1       0       0
  4633 ;;      Temps:          0       0       1       0       0
  4634 ;;      Totals:         0       0       2       0       0
  4635 ;;Total ram usage:        2 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    5
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_LCD_Clear
  4642 ;;		_LCD_Init
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function _LCD_WriteCmd
  4648  11B3                     _LCD_WriteCmd:	
  4649                           
  4650                           ;incstack = 0
  4651                           ; Regs used in _LCD_WriteCmd: [wreg]
  4652                           ;LCD_WriteCmd@Byte stored from wreg
  4653  11B3  1683               	bsf	3,5	;RP0=1, select bank1
  4654  11B4  1303               	bcf	3,6	;RP1=0, select bank1
  4655  11B5  00CB               	movwf	LCD_WriteCmd@Byte^(0+128)
  4656                           
  4657                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4658  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  4659  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  4660  11B8  1009               	bcf	9,0	;volatile
  4661                           
  4662                           ;lcd.c: 36: PORTD = Byte;
  4663  11B9  1683               	bsf	3,5	;RP0=1, select bank1
  4664  11BA  1303               	bcf	3,6	;RP1=0, select bank1
  4665  11BB  084B               	movf	LCD_WriteCmd@Byte^(0+128),w
  4666  11BC  1283               	bcf	3,5	;RP0=0, select bank0
  4667  11BD  1303               	bcf	3,6	;RP1=0, select bank0
  4668  11BE  0088               	movwf	8	;volatile
  4669                           
  4670                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4671  11BF  1489               	bsf	9,1	;volatile
  4672                           
  4673                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4674  11C0  303D               	movlw	61
  4675  11C1  1683               	bsf	3,5	;RP0=1, select bank1
  4676  11C2  1303               	bcf	3,6	;RP1=0, select bank1
  4677  11C3  00CA               	movwf	??_LCD_WriteCmd^(0+128)
  4678  11C4                     u4297:	
  4679  11C4  0BCA               	decfsz	??_LCD_WriteCmd^(0+128),f
  4680  11C5  29C4               	goto	u4297
  4681                           
  4682                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4683  11C6  1283               	bcf	3,5	;RP0=0, select bank0
  4684  11C7  1303               	bcf	3,6	;RP1=0, select bank0
  4685  11C8  1089               	bcf	9,1	;volatile
  4686  11C9  0008               	return
  4687  11CA                     __end_of_LCD_WriteCmd:	
  4688                           
  4689                           	psect	text21
  4690  118D                     __ptext21:	
  4691 ;; *************** function _ADC_Init *****************
  4692 ;; Defined at:
  4693 ;;		line 6 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\adc.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;		None               void
  4700 ;; Registers used:
  4701 ;;		None
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4707 ;;      Params:         0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0
  4710 ;;      Totals:         0       0       0       0       0
  4711 ;;Total ram usage:        0 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    5
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_main
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           
  4722                           ;psect for function _ADC_Init
  4723  118D                     _ADC_Init:	
  4724                           
  4725                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4726                           
  4727                           ;incstack = 0
  4728                           ; Regs used in _ADC_Init: []
  4729  118D  1683               	bsf	3,5	;RP0=1, select bank1
  4730  118E  1303               	bcf	3,6	;RP1=0, select bank1
  4731  118F  179F               	bsf	31,7	;volatile
  4732                           
  4733                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4734  1190  159F               	bsf	31,3	;volatile
  4735                           
  4736                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4737  1191  151F               	bsf	31,2	;volatile
  4738                           
  4739                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4740  1192  149F               	bsf	31,1	;volatile
  4741                           
  4742                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4743  1193  101F               	bcf	31,0	;volatile
  4744                           
  4745                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4746  1194  1283               	bcf	3,5	;RP0=0, select bank0
  4747  1195  1303               	bcf	3,6	;RP1=0, select bank0
  4748  1196  179F               	bsf	31,7	;volatile
  4749                           
  4750                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4751  1197  131F               	bcf	31,6	;volatile
  4752                           
  4753                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4754  1198  1683               	bsf	3,5	;RP0=1, select bank1
  4755  1199  1303               	bcf	3,6	;RP1=0, select bank1
  4756  119A  130C               	bcf	12,6	;volatile
  4757                           
  4758                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4759  119B  1283               	bcf	3,5	;RP0=0, select bank0
  4760  119C  1303               	bcf	3,6	;RP1=0, select bank0
  4761  119D  130C               	bcf	12,6	;volatile
  4762  119E  0008               	return
  4763  119F                     __end_of_ADC_Init:	
  4764                           
  4765                           	psect	text22
  4766  0C50                     __ptext22:	
  4767 ;; *************** function _ISR *****************
  4768 ;; Defined at:
  4769 ;;		line 314 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;		None               void
  4776 ;; Registers used:
  4777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4783 ;;      Params:         0       0       0       0       0
  4784 ;;      Locals:         0       0       0       0       0
  4785 ;;      Temps:          0       0       4       0       0
  4786 ;;      Totals:         0       0       4       0       0
  4787 ;;Total ram usage:        4 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    4
  4790 ;; This function calls:
  4791 ;;		_Fuzzy
  4792 ;;		_USART_ReceiveChar
  4793 ;;		___lwtoft
  4794 ;;		i1_PWM_DutyCycle2
  4795 ;;		i1_TIMER0_Set
  4796 ;;		i1_USART_WriteString
  4797 ;;		i1___lwdiv
  4798 ;;		i1___wmul
  4799 ;; This function is called by:
  4800 ;;		Interrupt level 1
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           
  4805                           ;psect for function _ISR
  4806  0C50                     _ISR:	
  4807                           
  4808                           ;main.c: 317: if (PIR1bits.RCIF)
  4809  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  4810  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  4811  0C52  1E8C               	btfss	12,5	;volatile
  4812  0C53  2D7B               	goto	i1l3280
  4813                           
  4814                           ;main.c: 318: {
  4815                           ;main.c: 319: if (USART_ReceiveChar() == '0')
  4816  0C54  160A  118A  21FC  120A  158A  	fcall	_USART_ReceiveChar
  4817  0C59  3A30               	xorlw	48
  4818  0C5A  1D03               	skipz
  4819  0C5B  2C75               	goto	i1l3210
  4820                           
  4821                           ;main.c: 320: {
  4822                           ;main.c: 321: USART_WriteString("\n\rdesligado\n\r");
  4823  0C5C  30EA               	movlw	low (STR_1| (0+32768))
  4824  0C5D  00F1               	movwf	i1USART_WriteString@str
  4825  0C5E  3090               	movlw	high (STR_1| (0+32768))
  4826  0C5F  00F2               	movwf	i1USART_WriteString@str+1
  4827  0C60  160A  118A  2279  120A  158A  	fcall	i1_USART_WriteString
  4828                           
  4829                           ;main.c: 322: pwm = 0;
  4830  0C65  1683               	bsf	3,5	;RP0=1, select bank1
  4831  0C66  1303               	bcf	3,6	;RP1=0, select bank1
  4832  0C67  01C4               	clrf	_pwm^(0+128)
  4833  0C68  01C5               	clrf	(_pwm+1)^(0+128)
  4834                           
  4835                           ;main.c: 323: PWM_DutyCycle2(pwm);
  4836  0C69  0845               	movf	(_pwm+1)^(0+128),w
  4837  0C6A  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4838  0C6B  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4839  0C6C  0844               	movf	_pwm^(0+128),w
  4840  0C6D  01F0               	clrf	i1PWM_DutyCycle2@valor
  4841  0C6E  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4842  0C6F  160A  118A  21E1  120A  158A  	fcall	i1_PWM_DutyCycle2
  4843                           
  4844                           ;main.c: 324: return;
  4845  0C74  2DDC               	goto	i1l190
  4846  0C75                     i1l3210:	
  4847                           
  4848                           ;main.c: 325: }
  4849                           ;main.c: 327: if (USART_ReceiveChar() == '1')
  4850  0C75  160A  118A  21FC  120A  158A  	fcall	_USART_ReceiveChar
  4851  0C7A  3A31               	xorlw	49
  4852  0C7B  1D03               	skipz
  4853  0C7C  2C8C               	goto	i1l3216
  4854                           
  4855                           ;main.c: 328: {
  4856                           ;main.c: 329: USART_WriteString("\n\rpwm = 32\n\r");
  4857  0C7D  30F8               	movlw	low (STR_2| (0+32768))
  4858  0C7E  00F1               	movwf	i1USART_WriteString@str
  4859  0C7F  3090               	movlw	high (STR_2| (0+32768))
  4860  0C80  00F2               	movwf	i1USART_WriteString@str+1
  4861  0C81  160A  118A  2279  120A  158A  	fcall	i1_USART_WriteString
  4862                           
  4863                           ;main.c: 330: pwm = 32;
  4864  0C86  3020               	movlw	32
  4865  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  4866  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  4867  0C89  00C4               	movwf	_pwm^(0+128)
  4868  0C8A  3000               	movlw	0
  4869  0C8B  00C5               	movwf	(_pwm^(0+128)+1)
  4870  0C8C                     i1l3216:	
  4871                           
  4872                           ;main.c: 332: }
  4873                           ;main.c: 334: if (USART_ReceiveChar() == '2')
  4874  0C8C  160A  118A  21FC  120A  158A  	fcall	_USART_ReceiveChar
  4875  0C91  3A32               	xorlw	50
  4876  0C92  1D03               	skipz
  4877  0C93  2CA3               	goto	i1l3222
  4878                           
  4879                           ;main.c: 335: {
  4880                           ;main.c: 336: USART_WriteString("\n\rpwm = 64\n\r");
  4881  0C94  3005               	movlw	low (STR_3| (0+32768))
  4882  0C95  00F1               	movwf	i1USART_WriteString@str
  4883  0C96  3091               	movlw	high (STR_3| (0+32768))
  4884  0C97  00F2               	movwf	i1USART_WriteString@str+1
  4885  0C98  160A  118A  2279  120A  158A  	fcall	i1_USART_WriteString
  4886                           
  4887                           ;main.c: 337: pwm = 64;
  4888  0C9D  3040               	movlw	64
  4889  0C9E  1683               	bsf	3,5	;RP0=1, select bank1
  4890  0C9F  1303               	bcf	3,6	;RP1=0, select bank1
  4891  0CA0  00C4               	movwf	_pwm^(0+128)
  4892  0CA1  3000               	movlw	0
  4893  0CA2  00C5               	movwf	(_pwm^(0+128)+1)
  4894  0CA3                     i1l3222:	
  4895                           
  4896                           ;main.c: 339: }
  4897                           ;main.c: 341: if (USART_ReceiveChar() == '3')
  4898  0CA3  160A  118A  21FC  120A  158A  	fcall	_USART_ReceiveChar
  4899  0CA8  3A33               	xorlw	51
  4900  0CA9  1D03               	skipz
  4901  0CAA  2CC1               	goto	i1l3232
  4902                           
  4903                           ;main.c: 342: {
  4904                           ;main.c: 343: USART_WriteString("\n\rpwm = 128\n\r");
  4905  0CAB  30CE               	movlw	low (STR_4| (0+32768))
  4906  0CAC  00F1               	movwf	i1USART_WriteString@str
  4907  0CAD  3090               	movlw	high (STR_4| (0+32768))
  4908  0CAE  00F2               	movwf	i1USART_WriteString@str+1
  4909  0CAF  160A  118A  2279  120A  158A  	fcall	i1_USART_WriteString
  4910                           
  4911                           ;main.c: 344: pwm = 128;
  4912  0CB4  3080               	movlw	128
  4913  0CB5  1683               	bsf	3,5	;RP0=1, select bank1
  4914  0CB6  1303               	bcf	3,6	;RP1=0, select bank1
  4915  0CB7  00C4               	movwf	_pwm^(0+128)
  4916  0CB8  3000               	movlw	0
  4917  0CB9  00C5               	movwf	(_pwm^(0+128)+1)
  4918                           
  4919                           ;main.c: 346: if(PORTBbits.RB0 == 0)
  4920  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  4921  0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  4922  0CBC  1806               	btfsc	6,0	;volatile
  4923  0CBD  2CC0               	goto	i1l194
  4924                           
  4925                           ;main.c: 347: {
  4926                           ;main.c: 348: PORTBbits.RB0 = 1;
  4927  0CBE  1406               	bsf	6,0	;volatile
  4928                           
  4929                           ;main.c: 349: }else{
  4930  0CBF  2CC1               	goto	i1l3232
  4931  0CC0                     i1l194:	
  4932                           
  4933                           ;main.c: 350: PORTBbits.RB0 = 0;
  4934  0CC0  1006               	bcf	6,0	;volatile
  4935  0CC1                     i1l3232:	
  4936                           
  4937                           ;main.c: 351: }
  4938                           ;main.c: 352: }
  4939                           ;main.c: 354: if (USART_ReceiveChar() == '4')
  4940  0CC1  160A  118A  21FC  120A  158A  	fcall	_USART_ReceiveChar
  4941  0CC6  3A34               	xorlw	52
  4942  0CC7  1D03               	skipz
  4943  0CC8  2CEB               	goto	i1l3244
  4944                           
  4945                           ;main.c: 355: {
  4946                           ;main.c: 356: USART_WriteString("\n\rpwm = 256\n\r");
  4947  0CC9  30B2               	movlw	low (STR_5| (0+32768))
  4948  0CCA  00F1               	movwf	i1USART_WriteString@str
  4949  0CCB  3090               	movlw	high (STR_5| (0+32768))
  4950  0CCC  00F2               	movwf	i1USART_WriteString@str+1
  4951  0CCD  160A  118A  2279  120A  158A  	fcall	i1_USART_WriteString
  4952                           
  4953                           ;main.c: 357: pwm = 256;
  4954  0CD2  3000               	movlw	0
  4955  0CD3  1683               	bsf	3,5	;RP0=1, select bank1
  4956  0CD4  1303               	bcf	3,6	;RP1=0, select bank1
  4957  0CD5  00C4               	movwf	_pwm^(0+128)
  4958  0CD6  3001               	movlw	1
  4959  0CD7  00C5               	movwf	(_pwm^(0+128)+1)
  4960                           
  4961                           ;main.c: 358: PWM_DutyCycle2(pwm);
  4962  0CD8  0845               	movf	(_pwm+1)^(0+128),w
  4963  0CD9  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4964  0CDA  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4965  0CDB  0844               	movf	_pwm^(0+128),w
  4966  0CDC  01F0               	clrf	i1PWM_DutyCycle2@valor
  4967  0CDD  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4968  0CDE  160A  118A  21E1  120A  158A  	fcall	i1_PWM_DutyCycle2
  4969                           
  4970                           ;main.c: 359: if(PORTBbits.RB1 == 0)
  4971  0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  4972  0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  4973  0CE5  1886               	btfsc	6,1	;volatile
  4974  0CE6  2CE9               	goto	i1l197
  4975                           
  4976                           ;main.c: 360: {
  4977                           ;main.c: 361: PORTBbits.RB1 = 1;
  4978  0CE7  1486               	bsf	6,1	;volatile
  4979                           
  4980                           ;main.c: 362: }else{
  4981  0CE8  2DDC               	goto	i1l190
  4982  0CE9                     i1l197:	
  4983                           
  4984                           ;main.c: 363: PORTBbits.RB1 = 0;
  4985  0CE9  1086               	bcf	6,1	;volatile
  4986                           
  4987                           ;main.c: 364: }
  4988                           ;main.c: 365: return;
  4989  0CEA  2DDC               	goto	i1l190
  4990  0CEB                     i1l3244:	
  4991                           
  4992                           ;main.c: 366: }
  4993                           ;main.c: 368: if (USART_ReceiveChar() == '5')
  4994  0CEB  160A  118A  21FC  120A  158A  	fcall	_USART_ReceiveChar
  4995  0CF0  3A35               	xorlw	53
  4996  0CF1  1D03               	skipz
  4997  0CF2  2D02               	goto	i1l3250
  4998                           
  4999                           ;main.c: 369: {
  5000                           ;main.c: 370: USART_WriteString("\n\rpwm = 512\n\r");
  5001  0CF3  30A4               	movlw	low (STR_6| (0+32768))
  5002  0CF4  00F1               	movwf	i1USART_WriteString@str
  5003  0CF5  3090               	movlw	high (STR_6| (0+32768))
  5004  0CF6  00F2               	movwf	i1USART_WriteString@str+1
  5005  0CF7  160A  118A  2279  120A  158A  	fcall	i1_USART_WriteString
  5006                           
  5007                           ;main.c: 371: pwm = 512;
  5008  0CFC  3000               	movlw	0
  5009  0CFD  1683               	bsf	3,5	;RP0=1, select bank1
  5010  0CFE  1303               	bcf	3,6	;RP1=0, select bank1
  5011  0CFF  00C4               	movwf	_pwm^(0+128)
  5012  0D00  3002               	movlw	2
  5013  0D01  00C5               	movwf	(_pwm^(0+128)+1)
  5014  0D02                     i1l3250:	
  5015                           
  5016                           ;main.c: 373: }
  5017                           ;main.c: 375: if (USART_ReceiveChar() == '6')
  5018  0D02  160A  118A  21FC  120A  158A  	fcall	_USART_ReceiveChar
  5019  0D07  3A36               	xorlw	54
  5020  0D08  1D03               	skipz
  5021  0D09  2D19               	goto	i1l3256
  5022                           
  5023                           ;main.c: 376: {
  5024                           ;main.c: 377: USART_WriteString("\n\rpwm = 768\n\r");
  5025  0D0A  30DC               	movlw	low (STR_7| (0+32768))
  5026  0D0B  00F1               	movwf	i1USART_WriteString@str
  5027  0D0C  3090               	movlw	high (STR_7| (0+32768))
  5028  0D0D  00F2               	movwf	i1USART_WriteString@str+1
  5029  0D0E  160A  118A  2279  120A  158A  	fcall	i1_USART_WriteString
  5030                           
  5031                           ;main.c: 378: pwm = 768;
  5032  0D13  3000               	movlw	0
  5033  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  5034  0D15  1303               	bcf	3,6	;RP1=0, select bank1
  5035  0D16  00C4               	movwf	_pwm^(0+128)
  5036  0D17  3003               	movlw	3
  5037  0D18  00C5               	movwf	(_pwm^(0+128)+1)
  5038  0D19                     i1l3256:	
  5039                           
  5040                           ;main.c: 380: }
  5041                           ;main.c: 382: if (USART_ReceiveChar() == '7')
  5042  0D19  160A  118A  21FC  120A  158A  	fcall	_USART_ReceiveChar
  5043  0D1E  3A37               	xorlw	55
  5044  0D1F  1D03               	skipz
  5045  0D20  2D30               	goto	i1l3262
  5046                           
  5047                           ;main.c: 383: {
  5048                           ;main.c: 384: USART_WriteString("\n\rpwm = 896\n\r");
  5049  0D21  30C0               	movlw	low (STR_8| (0+32768))
  5050  0D22  00F1               	movwf	i1USART_WriteString@str
  5051  0D23  3090               	movlw	high (STR_8| (0+32768))
  5052  0D24  00F2               	movwf	i1USART_WriteString@str+1
  5053  0D25  160A  118A  2279  120A  158A  	fcall	i1_USART_WriteString
  5054                           
  5055                           ;main.c: 385: pwm = 896;
  5056  0D2A  3080               	movlw	128
  5057  0D2B  1683               	bsf	3,5	;RP0=1, select bank1
  5058  0D2C  1303               	bcf	3,6	;RP1=0, select bank1
  5059  0D2D  00C4               	movwf	_pwm^(0+128)
  5060  0D2E  3003               	movlw	3
  5061  0D2F  00C5               	movwf	(_pwm^(0+128)+1)
  5062  0D30                     i1l3262:	
  5063                           
  5064                           ;main.c: 387: }
  5065                           ;main.c: 389: if (USART_ReceiveChar() == '8')
  5066  0D30  160A  118A  21FC  120A  158A  	fcall	_USART_ReceiveChar
  5067  0D35  3A38               	xorlw	56
  5068  0D36  1D03               	skipz
  5069  0D37  2D47               	goto	i1l3268
  5070                           
  5071                           ;main.c: 390: {
  5072                           ;main.c: 391: USART_WriteString("\n\rpwm = 1000\n\r");
  5073  0D38  3086               	movlw	low (STR_9| (0+32768))
  5074  0D39  00F1               	movwf	i1USART_WriteString@str
  5075  0D3A  3090               	movlw	high (STR_9| (0+32768))
  5076  0D3B  00F2               	movwf	i1USART_WriteString@str+1
  5077  0D3C  160A  118A  2279  120A  158A  	fcall	i1_USART_WriteString
  5078                           
  5079                           ;main.c: 392: pwm = 1000;
  5080  0D41  30E8               	movlw	232
  5081  0D42  1683               	bsf	3,5	;RP0=1, select bank1
  5082  0D43  1303               	bcf	3,6	;RP1=0, select bank1
  5083  0D44  00C4               	movwf	_pwm^(0+128)
  5084  0D45  3003               	movlw	3
  5085  0D46  00C5               	movwf	(_pwm^(0+128)+1)
  5086  0D47                     i1l3268:	
  5087                           
  5088                           ;main.c: 394: }
  5089                           ;main.c: 396: if (USART_ReceiveChar() == '9')
  5090  0D47  160A  118A  21FC  120A  158A  	fcall	_USART_ReceiveChar
  5091  0D4C  3A39               	xorlw	57
  5092  0D4D  1D03               	skipz
  5093  0D4E  2D5E               	goto	i1l3274
  5094                           
  5095                           ;main.c: 397: {
  5096                           ;main.c: 398: USART_WriteString("\n\rpwm = 1023\n\r");
  5097  0D4F  3095               	movlw	low (STR_10| (0+32768))
  5098  0D50  00F1               	movwf	i1USART_WriteString@str
  5099  0D51  3090               	movlw	high (STR_10| (0+32768))
  5100  0D52  00F2               	movwf	i1USART_WriteString@str+1
  5101  0D53  160A  118A  2279  120A  158A  	fcall	i1_USART_WriteString
  5102                           
  5103                           ;main.c: 399: pwm = 1023;
  5104  0D58  30FF               	movlw	255
  5105  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  5106  0D5A  1303               	bcf	3,6	;RP1=0, select bank1
  5107  0D5B  00C4               	movwf	_pwm^(0+128)
  5108  0D5C  3003               	movlw	3
  5109  0D5D  00C5               	movwf	(_pwm^(0+128)+1)
  5110  0D5E                     i1l3274:	
  5111                           
  5112                           ;main.c: 401: }
  5113                           ;main.c: 405: Fuzzy();
  5114  0D5E  120A  118A  2061  120A  158A  	fcall	_Fuzzy
  5115                           
  5116                           ;main.c: 406: tf = pwm;
  5117  0D63  1683               	bsf	3,5	;RP0=1, select bank1
  5118  0D64  1303               	bcf	3,6	;RP1=0, select bank1
  5119  0D65  0845               	movf	(_pwm+1)^(0+128),w
  5120  0D66  01F9               	clrf	___lwtoft@c+1
  5121  0D67  07F9               	addwf	___lwtoft@c+1,f
  5122  0D68  0844               	movf	_pwm^(0+128),w
  5123  0D69  01F8               	clrf	___lwtoft@c
  5124  0D6A  07F8               	addwf	___lwtoft@c,f
  5125  0D6B  160A  118A  219F  120A  158A  	fcall	___lwtoft
  5126  0D70  0878               	movf	?___lwtoft,w
  5127  0D71  1683               	bsf	3,5	;RP0=1, select bank3
  5128  0D72  1703               	bsf	3,6	;RP1=1, select bank3
  5129  0D73  00C5               	movwf	_tf^(0+384)
  5130  0D74  0879               	movf	?___lwtoft+1,w
  5131  0D75  00C6               	movwf	(_tf+1)^(0+384)
  5132  0D76  087A               	movf	?___lwtoft+2,w
  5133  0D77  00C7               	movwf	(_tf+2)^(0+384)
  5134                           
  5135                           ;main.c: 408: PIR1bits.RCIF = 0;
  5136  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5137  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5138  0D7A  128C               	bcf	12,5	;volatile
  5139  0D7B                     i1l3280:	
  5140                           
  5141                           ;main.c: 409: }
  5142                           ;main.c: 412: if (PIR1bits.ADIF)
  5143  0D7B  1B0C               	btfsc	12,6	;volatile
  5144                           
  5145                           ;main.c: 413: {
  5146                           ;main.c: 417: PIR1bits.ADIF = 0;
  5147  0D7C  130C               	bcf	12,6	;volatile
  5148                           
  5149                           ;main.c: 418: }
  5150                           ;main.c: 422: if (INTCONbits.T0IF)
  5151  0D7D  1D0B               	btfss	11,2	;volatile
  5152  0D7E  2DD8               	goto	i1l3306
  5153                           
  5154                           ;main.c: 423: {
  5155                           ;main.c: 425: TIMER0_Set(238);
  5156  0D7F  30EE               	movlw	238
  5157  0D80  160A  118A  2139  120A  158A  	fcall	i1_TIMER0_Set
  5158                           
  5159                           ;main.c: 428: if (contagens_tm0 < 499)
  5160  0D85  3001               	movlw	1
  5161  0D86  1683               	bsf	3,5	;RP0=1, select bank1
  5162  0D87  1303               	bcf	3,6	;RP1=0, select bank1
  5163  0D88  023F               	subwf	(_contagens_tm0+1)^(0+128),w
  5164  0D89  30F3               	movlw	243
  5165  0D8A  1903               	skipnz
  5166  0D8B  023E               	subwf	_contagens_tm0^(0+128),w
  5167  0D8C  1803               	skipnc
  5168  0D8D  2D98               	goto	i1l3292
  5169                           
  5170                           ;main.c: 429: {
  5171                           ;main.c: 431: contagens_tm0++;
  5172  0D8E  3001               	movlw	1
  5173  0D8F  07BE               	addwf	_contagens_tm0^(0+128),f
  5174  0D90  1803               	skipnc
  5175  0D91  0ABF               	incf	(_contagens_tm0+1)^(0+128),f
  5176  0D92  3000               	movlw	0
  5177  0D93  07BF               	addwf	(_contagens_tm0+1)^(0+128),f
  5178                           
  5179                           ;main.c: 434: PORTBbits.RB6 = 1;
  5180  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  5181  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  5182  0D96  1706               	bsf	6,6	;volatile
  5183                           
  5184                           ;main.c: 435: }
  5185  0D97  2DD7               	goto	i1l3304
  5186  0D98                     i1l3292:	
  5187                           
  5188                           ;main.c: 436: else
  5189                           ;main.c: 437: {
  5190                           ;main.c: 439: contagens_tm0 = 0;
  5191  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  5192  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  5193  0D9A  01BE               	clrf	_contagens_tm0^(0+128)
  5194  0D9B  01BF               	clrf	(_contagens_tm0+1)^(0+128)
  5195                           
  5196                           ;main.c: 442: pulsos = (TMR1H << 8) + TMR1L;
  5197  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  5198  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  5199  0D9E  080F               	movf	15,w	;volatile
  5200  0D9F  1683               	bsf	3,5	;RP0=1, select bank1
  5201  0DA0  1303               	bcf	3,6	;RP1=0, select bank1
  5202  0DA1  01C3               	clrf	(_pulsos+1)^(0+128)
  5203  0DA2  07C3               	addwf	(_pulsos+1)^(0+128),f
  5204  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  5205  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  5206  0DA5  080E               	movf	14,w	;volatile
  5207  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  5208  0DA7  1303               	bcf	3,6	;RP1=0, select bank1
  5209  0DA8  01C2               	clrf	_pulsos^(0+128)
  5210  0DA9  07C2               	addwf	_pulsos^(0+128),f
  5211                           
  5212                           ;main.c: 443: rpm = ((pulsos / pas_cooler) * 120);
  5213  0DAA  086B               	movf	(_pas_cooler+1)^(0+128),w
  5214  0DAB  01F1               	clrf	i1___lwdiv@divisor+1
  5215  0DAC  07F1               	addwf	i1___lwdiv@divisor+1,f
  5216  0DAD  086A               	movf	_pas_cooler^(0+128),w
  5217  0DAE  01F0               	clrf	i1___lwdiv@divisor
  5218  0DAF  07F0               	addwf	i1___lwdiv@divisor,f
  5219  0DB0  0843               	movf	(_pulsos+1)^(0+128),w
  5220  0DB1  01F3               	clrf	i1___lwdiv@dividend+1
  5221  0DB2  07F3               	addwf	i1___lwdiv@dividend+1,f
  5222  0DB3  0842               	movf	_pulsos^(0+128),w
  5223  0DB4  01F2               	clrf	i1___lwdiv@dividend
  5224  0DB5  07F2               	addwf	i1___lwdiv@dividend,f
  5225  0DB6  160A  118A  2398  120A  158A  	fcall	i1___lwdiv
  5226  0DBB  0871               	movf	?i1___lwdiv+1,w
  5227  0DBC  01F9               	clrf	i1___wmul@multiplier+1
  5228  0DBD  07F9               	addwf	i1___wmul@multiplier+1,f
  5229  0DBE  0870               	movf	?i1___lwdiv,w
  5230  0DBF  01F8               	clrf	i1___wmul@multiplier
  5231  0DC0  07F8               	addwf	i1___wmul@multiplier,f
  5232  0DC1  3078               	movlw	120
  5233  0DC2  00FA               	movwf	i1___wmul@multiplicand
  5234  0DC3  3000               	movlw	0
  5235  0DC4  00FB               	movwf	i1___wmul@multiplicand+1
  5236  0DC5  160A  118A  229C  120A  158A  	fcall	i1___wmul
  5237  0DCA  0879               	movf	?i1___wmul+1,w
  5238  0DCB  1683               	bsf	3,5	;RP0=1, select bank3
  5239  0DCC  1703               	bsf	3,6	;RP1=1, select bank3
  5240  0DCD  01A7               	clrf	(_rpm+1)^(0+384)
  5241  0DCE  07A7               	addwf	(_rpm+1)^(0+384),f
  5242  0DCF  0878               	movf	?i1___wmul,w
  5243  0DD0  01A6               	clrf	_rpm^(0+384)
  5244  0DD1  07A6               	addwf	_rpm^(0+384),f
  5245                           
  5246                           ;main.c: 446: TMR1L = 0x00;
  5247  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  5248  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  5249  0DD4  018E               	clrf	14	;volatile
  5250                           
  5251                           ;main.c: 447: TMR1H = 0x00;
  5252  0DD5  018F               	clrf	15	;volatile
  5253                           
  5254                           ;main.c: 450: PORTBbits.RB6 = 0;
  5255  0DD6  1306               	bcf	6,6	;volatile
  5256  0DD7                     i1l3304:	
  5257                           
  5258                           ;main.c: 451: }
  5259                           ;main.c: 454: INTCONbits.T0IF = 0;
  5260  0DD7  110B               	bcf	11,2	;volatile
  5261  0DD8                     i1l3306:	
  5262                           
  5263                           ;main.c: 455: }
  5264                           ;main.c: 458: if (PIR1bits.TMR1IF)
  5265  0DD8  180C               	btfsc	12,0	;volatile
  5266                           
  5267                           ;main.c: 459: {
  5268                           ;main.c: 463: PIR1bits.TMR1IF = 0;
  5269  0DD9  100C               	bcf	12,0	;volatile
  5270                           
  5271                           ;main.c: 464: }
  5272                           ;main.c: 467: if (PIR1bits.SSPIF)
  5273  0DDA  198C               	btfsc	12,3	;volatile
  5274                           
  5275                           ;main.c: 468: {
  5276                           ;main.c: 472: PIR1bits.SSPIF = 0;
  5277  0DDB  118C               	bcf	12,3	;volatile
  5278  0DDC                     i1l190:	
  5279  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  5280  0DDD  1303               	bcf	3,6	;RP1=0, select bank1
  5281  0DDE  0849               	movf	(??_ISR+3)^(0+128),w
  5282  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  5283  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  5284  0DE1  00FF               	movwf	127
  5285  0DE2  1683               	bsf	3,5	;RP0=1, select bank1
  5286  0DE3  1303               	bcf	3,6	;RP1=0, select bank1
  5287  0DE4  0848               	movf	(??_ISR+2)^(0+128),w
  5288  0DE5  008A               	movwf	10
  5289  0DE6  0847               	movf	(??_ISR+1)^(0+128),w
  5290  0DE7  0084               	movwf	4
  5291  0DE8  0E46               	swapf	??_ISR^(0+128),w
  5292  0DE9  0083               	movwf	3
  5293  0DEA  0EFE               	swapf	126,f
  5294  0DEB  0E7E               	swapf	126,w
  5295  0DEC  0009               	retfie
  5296  0DED                     __end_of_ISR:	
  5297                           
  5298                           	psect	intentry
  5299  0004                     __pintentry:	
  5300                           ;incstack = 0
  5301                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5302                           
  5303  0004                     interrupt_function:	
  5304  007E                     saved_w	set	btemp
  5305  0004  00FE               	movwf	btemp
  5306  0005  0E03               	swapf	3,w
  5307  0006  1683               	bsf	3,5	;RP0=1, select bank1
  5308  0007  1303               	bcf	3,6	;RP1=0, select bank1
  5309  0008  00C6               	movwf	??_ISR^(0+128)
  5310  0009  0804               	movf	4,w
  5311  000A  00C7               	movwf	(??_ISR+1)^(0+128)
  5312  000B  080A               	movf	10,w
  5313  000C  00C8               	movwf	(??_ISR+2)^(0+128)
  5314  000D  1283               	bcf	3,5	;RP0=0, select bank0
  5315  000E  1303               	bcf	3,6	;RP1=0, select bank0
  5316  000F  087F               	movf	btemp+1,w
  5317  0010  1683               	bsf	3,5	;RP0=1, select bank1
  5318  0011  1303               	bcf	3,6	;RP1=0, select bank1
  5319  0012  00C9               	movwf	(??_ISR+3)^(0+128)
  5320  0013  120A  158A  2C50   	ljmp	_ISR
  5321                           
  5322                           	psect	text23
  5323  129C                     __ptext23:	
  5324 ;; *************** function i1___wmul *****************
  5325 ;; Defined at:
  5326 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  multiplier      2    8[COMMON] unsigned int 
  5329 ;;  multiplicand    2   10[COMMON] unsigned int 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  __wmul          2   12[COMMON] unsigned int 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  2    8[COMMON] unsigned int 
  5334 ;; Registers used:
  5335 ;;		wreg, status,2, status,0
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5341 ;;      Params:         4       0       0       0       0
  5342 ;;      Locals:         2       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0
  5344 ;;      Totals:         6       0       0       0       0
  5345 ;;Total ram usage:        6 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_ISR
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           
  5355                           ;psect for function i1___wmul
  5356  129C                     i1___wmul:	
  5357                           
  5358                           ;incstack = 0
  5359                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5360  129C  01FC               	clrf	i1___wmul@product
  5361  129D  01FD               	clrf	i1___wmul@product+1
  5362  129E                     i1l3156:	
  5363  129E  1C78               	btfss	i1___wmul@multiplier,0
  5364  129F  2AA6               	goto	i1l608
  5365  12A0  087A               	movf	i1___wmul@multiplicand,w
  5366  12A1  07FC               	addwf	i1___wmul@product,f
  5367  12A2  1803               	skipnc
  5368  12A3  0AFD               	incf	i1___wmul@product+1,f
  5369  12A4  087B               	movf	i1___wmul@multiplicand+1,w
  5370  12A5  07FD               	addwf	i1___wmul@product+1,f
  5371  12A6                     i1l608:	
  5372  12A6  3001               	movlw	1
  5373  12A7                     u386_25:	
  5374  12A7  1003               	clrc
  5375  12A8  0DFA               	rlf	i1___wmul@multiplicand,f
  5376  12A9  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5377  12AA  3EFF               	addlw	-1
  5378  12AB  1D03               	skipz
  5379  12AC  2AA7               	goto	u386_25
  5380  12AD  3001               	movlw	1
  5381  12AE                     u387_25:	
  5382  12AE  1003               	clrc
  5383  12AF  0CF9               	rrf	i1___wmul@multiplier+1,f
  5384  12B0  0CF8               	rrf	i1___wmul@multiplier,f
  5385  12B1  3EFF               	addlw	-1
  5386  12B2  1D03               	skipz
  5387  12B3  2AAE               	goto	u387_25
  5388  12B4  0879               	movf	i1___wmul@multiplier+1,w
  5389  12B5  0478               	iorwf	i1___wmul@multiplier,w
  5390  12B6  1D03               	skipz
  5391  12B7  2A9E               	goto	i1l3156
  5392  12B8  087D               	movf	i1___wmul@product+1,w
  5393  12B9  01F9               	clrf	?i1___wmul+1
  5394  12BA  07F9               	addwf	?i1___wmul+1,f
  5395  12BB  087C               	movf	i1___wmul@product,w
  5396  12BC  01F8               	clrf	?i1___wmul
  5397  12BD  07F8               	addwf	?i1___wmul,f
  5398  12BE  0008               	return
  5399  12BF                     __end_ofi1___wmul:	
  5400                           
  5401                           	psect	text24
  5402  1398                     __ptext24:	
  5403 ;; *************** function i1___lwdiv *****************
  5404 ;; Defined at:
  5405 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  divisor         2    0[COMMON] unsigned int 
  5408 ;;  dividend        2    2[COMMON] unsigned int 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5411 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  2    0[COMMON] unsigned int 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5421 ;;      Params:         4       0       0       0       0
  5422 ;;      Locals:         3       0       0       0       0
  5423 ;;      Temps:          1       0       0       0       0
  5424 ;;      Totals:         8       0       0       0       0
  5425 ;;Total ram usage:        8 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_ISR
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           
  5435                           ;psect for function i1___lwdiv
  5436  1398                     i1___lwdiv:	
  5437                           
  5438                           ;incstack = 0
  5439                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5440  1398  01F5               	clrf	i1___lwdiv@quotient
  5441  1399  01F6               	clrf	i1___lwdiv@quotient+1
  5442  139A  0871               	movf	i1___lwdiv@divisor+1,w
  5443  139B  0470               	iorwf	i1___lwdiv@divisor,w
  5444  139C  1903               	skipnz
  5445  139D  2BCF               	goto	i1l3188
  5446  139E  01F7               	clrf	i1___lwdiv@counter
  5447  139F  0AF7               	incf	i1___lwdiv@counter,f
  5448  13A0                     i1l3176:	
  5449  13A0  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5450  13A1  2BAE               	goto	i1l3178
  5451  13A2  3001               	movlw	1
  5452  13A3                     u390_25:	
  5453  13A3  1003               	clrc
  5454  13A4  0DF0               	rlf	i1___lwdiv@divisor,f
  5455  13A5  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5456  13A6  3EFF               	addlw	-1
  5457  13A7  1D03               	skipz
  5458  13A8  2BA3               	goto	u390_25
  5459  13A9  3001               	movlw	1
  5460  13AA  00F4               	movwf	??i1___lwdiv
  5461  13AB  0874               	movf	??i1___lwdiv,w
  5462  13AC  07F7               	addwf	i1___lwdiv@counter,f
  5463  13AD  2BA0               	goto	i1l3176
  5464  13AE                     i1l3178:	
  5465  13AE  3001               	movlw	1
  5466  13AF                     u392_25:	
  5467  13AF  1003               	clrc
  5468  13B0  0DF5               	rlf	i1___lwdiv@quotient,f
  5469  13B1  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5470  13B2  3EFF               	addlw	-1
  5471  13B3  1D03               	skipz
  5472  13B4  2BAF               	goto	u392_25
  5473  13B5  0871               	movf	i1___lwdiv@divisor+1,w
  5474  13B6  0273               	subwf	i1___lwdiv@dividend+1,w
  5475  13B7  1D03               	skipz
  5476  13B8  2BBB               	goto	u393_25
  5477  13B9  0870               	movf	i1___lwdiv@divisor,w
  5478  13BA  0272               	subwf	i1___lwdiv@dividend,w
  5479  13BB                     u393_25:	
  5480  13BB  1C03               	skipc
  5481  13BC  2BC4               	goto	i1l3184
  5482  13BD  0870               	movf	i1___lwdiv@divisor,w
  5483  13BE  02F2               	subwf	i1___lwdiv@dividend,f
  5484  13BF  0871               	movf	i1___lwdiv@divisor+1,w
  5485  13C0  1C03               	skipc
  5486  13C1  03F3               	decf	i1___lwdiv@dividend+1,f
  5487  13C2  02F3               	subwf	i1___lwdiv@dividend+1,f
  5488  13C3  1475               	bsf	i1___lwdiv@quotient,0
  5489  13C4                     i1l3184:	
  5490  13C4  3001               	movlw	1
  5491  13C5                     u394_25:	
  5492  13C5  1003               	clrc
  5493  13C6  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5494  13C7  0CF0               	rrf	i1___lwdiv@divisor,f
  5495  13C8  3EFF               	addlw	-1
  5496  13C9  1D03               	skipz
  5497  13CA  2BC5               	goto	u394_25
  5498  13CB  3001               	movlw	1
  5499  13CC  02F7               	subwf	i1___lwdiv@counter,f
  5500  13CD  1D03               	btfss	3,2
  5501  13CE  2BAE               	goto	i1l3178
  5502  13CF                     i1l3188:	
  5503  13CF  0876               	movf	i1___lwdiv@quotient+1,w
  5504  13D0  01F1               	clrf	?i1___lwdiv+1
  5505  13D1  07F1               	addwf	?i1___lwdiv+1,f
  5506  13D2  0875               	movf	i1___lwdiv@quotient,w
  5507  13D3  01F0               	clrf	?i1___lwdiv
  5508  13D4  07F0               	addwf	?i1___lwdiv,f
  5509  13D5  0008               	return
  5510  13D6                     __end_ofi1___lwdiv:	
  5511                           
  5512                           	psect	text25
  5513  1139                     __ptext25:	
  5514 ;; *************** function i1_TIMER0_Set *****************
  5515 ;; Defined at:
  5516 ;;		line 20 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\timers.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;  contagens       1    wreg     unsigned char 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  contagens       1    0[COMMON] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;		None               void
  5523 ;; Registers used:
  5524 ;;		wreg
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5530 ;;      Params:         0       0       0       0       0
  5531 ;;      Locals:         1       0       0       0       0
  5532 ;;      Temps:          0       0       0       0       0
  5533 ;;      Totals:         1       0       0       0       0
  5534 ;;Total ram usage:        1 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_ISR
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           
  5544                           ;psect for function i1_TIMER0_Set
  5545  1139                     i1_TIMER0_Set:	
  5546                           
  5547                           ;incstack = 0
  5548                           ; Regs used in i1_TIMER0_Set: [wreg]
  5549                           ;i1TIMER0_Set@contagens stored from wreg
  5550  1139  00F0               	movwf	i1TIMER0_Set@contagens
  5551                           
  5552                           ;timers.c: 22: TMR0 = contagens;
  5553  113A  0870               	movf	i1TIMER0_Set@contagens,w
  5554  113B  1283               	bcf	3,5	;RP0=0, select bank0
  5555  113C  1303               	bcf	3,6	;RP1=0, select bank0
  5556  113D  0081               	movwf	1	;volatile
  5557  113E  0008               	return
  5558  113F                     __end_ofi1_TIMER0_Set:	
  5559                           
  5560                           	psect	text26
  5561  11FC                     __ptext26:	
  5562 ;; *************** function _USART_ReceiveChar *****************
  5563 ;; Defined at:
  5564 ;;		line 63 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;		None
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  byte            1    4[COMMON] unsigned char 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      unsigned char 
  5571 ;; Registers used:
  5572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5578 ;;      Params:         0       0       0       0       0
  5579 ;;      Locals:         1       0       0       0       0
  5580 ;;      Temps:          1       0       0       0       0
  5581 ;;      Totals:         2       0       0       0       0
  5582 ;;Total ram usage:        2 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    2
  5585 ;; This function calls:
  5586 ;;		i1_USART_WriteString
  5587 ;; This function is called by:
  5588 ;;		_ISR
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           
  5593                           ;psect for function _USART_ReceiveChar
  5594  11FC                     _USART_ReceiveChar:	
  5595                           
  5596                           ;usart.c: 65: unsigned char byte;
  5597                           ;usart.c: 67: if (!OERR)
  5598                           
  5599                           ;incstack = 0
  5600                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5601  11FC  1283               	bcf	3,5	;RP0=0, select bank0
  5602  11FD  1303               	bcf	3,6	;RP1=0, select bank0
  5603  11FE  1898               	btfsc	24,1	;volatile
  5604  11FF  2A05               	goto	i1l2888
  5605                           
  5606                           ;usart.c: 68: {
  5607                           ;usart.c: 69: byte = RCREG;
  5608  1200  081A               	movf	26,w	;volatile
  5609  1201  00F3               	movwf	??_USART_ReceiveChar
  5610  1202  0873               	movf	??_USART_ReceiveChar,w
  5611  1203  00F4               	movwf	USART_ReceiveChar@byte
  5612  1204  2A14               	goto	i1l2896
  5613  1205                     i1l2888:	
  5614                           ;usart.c: 71: }
  5615                           
  5616                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5617                           
  5618                           
  5619                           ;usart.c: 72: else
  5620                           ;usart.c: 73: {
  5621                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5622  1205  301C               	movlw	low (STR_19| (0+32768))
  5623  1206  00F1               	movwf	i1USART_WriteString@str
  5624  1207  3090               	movlw	high (STR_19| (0+32768))
  5625  1208  00F2               	movwf	i1USART_WriteString@str+1
  5626  1209  160A  118A  2279   	fcall	i1_USART_WriteString
  5627                           
  5628                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5629  120C  1283               	bcf	3,5	;RP0=0, select bank0
  5630  120D  1303               	bcf	3,6	;RP1=0, select bank0
  5631  120E  1218               	bcf	24,4	;volatile
  5632                           
  5633                           ;usart.c: 77: byte = RCREG;
  5634  120F  081A               	movf	26,w	;volatile
  5635  1210  00F3               	movwf	??_USART_ReceiveChar
  5636  1211  0873               	movf	??_USART_ReceiveChar,w
  5637  1212  00F4               	movwf	USART_ReceiveChar@byte
  5638                           
  5639                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5640  1213  1618               	bsf	24,4	;volatile
  5641  1214                     i1l2896:	
  5642                           
  5643                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5644  1214  128C               	bcf	12,5	;volatile
  5645                           
  5646                           ;usart.c: 80: }
  5647                           ;usart.c: 82: return(byte);
  5648  1215  0874               	movf	USART_ReceiveChar@byte,w
  5649  1216  0008               	return
  5650  1217                     __end_of_USART_ReceiveChar:	
  5651                           
  5652                           	psect	text27
  5653  1279                     __ptext27:	
  5654 ;; *************** function i1_USART_WriteString *****************
  5655 ;; Defined at:
  5656 ;;		line 52 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  str             2    1[COMMON] PTR const unsigned char 
  5659 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5660 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  5661 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  5662 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;		None               void
  5667 ;; Registers used:
  5668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5674 ;;      Params:         2       0       0       0       0
  5675 ;;      Locals:         0       0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0
  5677 ;;      Totals:         2       0       0       0       0
  5678 ;;Total ram usage:        2 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    1
  5681 ;; This function calls:
  5682 ;;		i1_USART_WriteChar
  5683 ;; This function is called by:
  5684 ;;		_ISR
  5685 ;;		_USART_ReceiveChar
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           
  5690                           ;psect for function i1_USART_WriteString
  5691  1279                     i1_USART_WriteString:	
  5692  1279                     i1l2738:	
  5693                           ;usart.c: 54: while(*str != '\0')
  5694                           
  5695                           ;incstack = 0
  5696                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5697                           
  5698  1279  0872               	movf	i1USART_WriteString@str+1,w
  5699  127A  1283               	bcf	3,5	;RP0=0, select bank0
  5700  127B  1303               	bcf	3,6	;RP1=0, select bank0
  5701  127C  00FF               	movwf	127
  5702  127D  0871               	movf	i1USART_WriteString@str,w
  5703  127E  0084               	movwf	4
  5704  127F  160A  118A  2000  160A  118A  	fcall	stringtab
  5705  1284  3800               	iorlw	0
  5706  1285  1903               	btfsc	3,2
  5707  1286  0008               	return
  5708                           
  5709                           ;usart.c: 55: {
  5710                           ;usart.c: 56: USART_WriteChar(*str);
  5711  1287  0872               	movf	i1USART_WriteString@str+1,w
  5712  1288  1283               	bcf	3,5	;RP0=0, select bank0
  5713  1289  1303               	bcf	3,6	;RP1=0, select bank0
  5714  128A  00FF               	movwf	127
  5715  128B  0871               	movf	i1USART_WriteString@str,w
  5716  128C  0084               	movwf	4
  5717  128D  160A  118A  2000  160A  118A  	fcall	stringtab
  5718  1292  160A  118A  214D  160A  118A  	fcall	i1_USART_WriteChar
  5719                           
  5720                           ;usart.c: 57: str++;
  5721  1297  3001               	movlw	1
  5722  1298  07F1               	addwf	i1USART_WriteString@str,f
  5723  1299  1803               	skipnc
  5724  129A  0AF2               	incf	i1USART_WriteString@str+1,f
  5725  129B  2A79               	goto	i1l2738
  5726  129C                     __end_ofi1_USART_WriteString:	
  5727                           
  5728                           	psect	text28
  5729  114D                     __ptext28:	
  5730 ;; *************** function i1_USART_WriteChar *****************
  5731 ;; Defined at:
  5732 ;;		line 44 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  byte            1    wreg     unsigned char 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  byte            1    0[COMMON] unsigned char 
  5737 ;; Return value:  Size  Location     Type
  5738 ;;		None               void
  5739 ;; Registers used:
  5740 ;;		wreg
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5746 ;;      Params:         0       0       0       0       0
  5747 ;;      Locals:         1       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0
  5749 ;;      Totals:         1       0       0       0       0
  5750 ;;Total ram usage:        1 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		i1_USART_WriteString
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           
  5760                           ;psect for function i1_USART_WriteChar
  5761  114D                     i1_USART_WriteChar:	
  5762                           
  5763                           ;incstack = 0
  5764                           ; Regs used in i1_USART_WriteChar: [wreg]
  5765                           ;i1USART_WriteChar@byte stored from wreg
  5766  114D  00F0               	movwf	i1USART_WriteChar@byte
  5767  114E                     i1l237:	
  5768                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5769                           
  5770  114E  1283               	bcf	3,5	;RP0=0, select bank0
  5771  114F  1303               	bcf	3,6	;RP1=0, select bank0
  5772  1150  1E0C               	btfss	12,4	;volatile
  5773  1151  294E               	goto	i1l237
  5774                           
  5775                           ;usart.c: 47: TXREG = byte;
  5776  1152  0870               	movf	i1USART_WriteChar@byte,w
  5777  1153  0099               	movwf	25	;volatile
  5778  1154  0008               	return
  5779  1155                     __end_ofi1_USART_WriteChar:	
  5780                           
  5781                           	psect	text29
  5782  0061                     __ptext29:	
  5783 ;; *************** function _Fuzzy *****************
  5784 ;; Defined at:
  5785 ;;		line 141 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;		None
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;  a               2   61[BANK0 ] int 
  5790 ;;  a               2   59[BANK0 ] int 
  5791 ;;  a               2   57[BANK0 ] int 
  5792 ;;  a               2   65[BANK0 ] int 
  5793 ;;  a               2   63[BANK0 ] int 
  5794 ;;  aumenta         3   76[BANK0 ] float 
  5795 ;;  reduz           3   73[BANK0 ] float 
  5796 ;;  mantem          3   70[BANK0 ] float 
  5797 ;;  tip             3   67[BANK0 ] float 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;		None               void
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5807 ;;      Params:         0       0       0       0       0
  5808 ;;      Locals:         0      22       0       0       0
  5809 ;;      Temps:          0       0       0       0       0
  5810 ;;      Totals:         0      22       0       0       0
  5811 ;;Total ram usage:       22 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    3
  5814 ;; This function calls:
  5815 ;;		___ftadd
  5816 ;;		___ftdiv
  5817 ;;		___ftge
  5818 ;;		___ftmul
  5819 ;;		___ftneg
  5820 ;;		___fttol
  5821 ;;		___lwtoft
  5822 ;;		_max_val
  5823 ;;		_trapmf
  5824 ;;		_trimf
  5825 ;;		i1_PWM_DutyCycle2
  5826 ;; This function is called by:
  5827 ;;		_ISR
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           
  5832                           ;psect for function _Fuzzy
  5833  0061                     _Fuzzy:	
  5834                           
  5835                           ;main.c: 152: setpoint = (float)pwm;
  5836                           
  5837                           ;incstack = 0
  5838                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5839  0061  1683               	bsf	3,5	;RP0=1, select bank1
  5840  0062  1303               	bcf	3,6	;RP1=0, select bank1
  5841  0063  0845               	movf	(_pwm+1)^(0+128),w
  5842  0064  01F9               	clrf	___lwtoft@c+1
  5843  0065  07F9               	addwf	___lwtoft@c+1,f
  5844  0066  0844               	movf	_pwm^(0+128),w
  5845  0067  01F8               	clrf	___lwtoft@c
  5846  0068  07F8               	addwf	___lwtoft@c,f
  5847  0069  160A  118A  219F  120A  118A  	fcall	___lwtoft
  5848  006E  0878               	movf	?___lwtoft,w
  5849  006F  1683               	bsf	3,5	;RP0=1, select bank3
  5850  0070  1703               	bsf	3,6	;RP1=1, select bank3
  5851  0071  00C2               	movwf	_setpoint^(0+384)
  5852  0072  0879               	movf	?___lwtoft+1,w
  5853  0073  00C3               	movwf	(_setpoint+1)^(0+384)
  5854  0074  087A               	movf	?___lwtoft+2,w
  5855  0075  00C4               	movwf	(_setpoint+2)^(0+384)
  5856                           
  5857                           ;main.c: 154: float mantem;
  5858                           ;main.c: 155: float reduz;
  5859                           ;main.c: 156: float aumenta;
  5860                           ;main.c: 157: float tip;
  5861                           ;main.c: 159: fitemp =0;
  5862  0076  3000               	movlw	0
  5863  0077  1683               	bsf	3,5	;RP0=1, select bank1
  5864  0078  1303               	bcf	3,6	;RP1=0, select bank1
  5865  0079  00A3               	movwf	_fitemp^(0+128)
  5866  007A  3000               	movlw	0
  5867  007B  00A4               	movwf	(_fitemp+1)^(0+128)
  5868  007C  3000               	movlw	0
  5869  007D  00A5               	movwf	(_fitemp+2)^(0+128)
  5870                           
  5871                           ;main.c: 162: temp = (setpoint - tf);
  5872  007E  1683               	bsf	3,5	;RP0=1, select bank3
  5873  007F  1703               	bsf	3,6	;RP1=1, select bank3
  5874  0080  0842               	movf	_setpoint^(0+384),w
  5875  0081  1283               	bcf	3,5	;RP0=0, select bank0
  5876  0082  1303               	bcf	3,6	;RP1=0, select bank0
  5877  0083  00AA               	movwf	___ftadd@f1
  5878  0084  1683               	bsf	3,5	;RP0=1, select bank3
  5879  0085  1703               	bsf	3,6	;RP1=1, select bank3
  5880  0086  0843               	movf	(_setpoint+1)^(0+384),w
  5881  0087  1283               	bcf	3,5	;RP0=0, select bank0
  5882  0088  1303               	bcf	3,6	;RP1=0, select bank0
  5883  0089  00AB               	movwf	___ftadd@f1+1
  5884  008A  1683               	bsf	3,5	;RP0=1, select bank3
  5885  008B  1703               	bsf	3,6	;RP1=1, select bank3
  5886  008C  0844               	movf	(_setpoint+2)^(0+384),w
  5887  008D  1283               	bcf	3,5	;RP0=0, select bank0
  5888  008E  1303               	bcf	3,6	;RP1=0, select bank0
  5889  008F  00AC               	movwf	___ftadd@f1+2
  5890  0090  1683               	bsf	3,5	;RP0=1, select bank3
  5891  0091  1703               	bsf	3,6	;RP1=1, select bank3
  5892  0092  0845               	movf	_tf^(0+384),w
  5893  0093  00F0               	movwf	___ftneg@f1
  5894  0094  0846               	movf	(_tf+1)^(0+384),w
  5895  0095  00F1               	movwf	___ftneg@f1+1
  5896  0096  0847               	movf	(_tf+2)^(0+384),w
  5897  0097  00F2               	movwf	___ftneg@f1+2
  5898  0098  160A  118A  2145  120A  118A  	fcall	___ftneg
  5899  009D  0870               	movf	?___ftneg,w
  5900  009E  1283               	bcf	3,5	;RP0=0, select bank0
  5901  009F  1303               	bcf	3,6	;RP1=0, select bank0
  5902  00A0  00AD               	movwf	___ftadd@f2
  5903  00A1  0871               	movf	?___ftneg+1,w
  5904  00A2  00AE               	movwf	___ftadd@f2+1
  5905  00A3  0872               	movf	?___ftneg+2,w
  5906  00A4  00AF               	movwf	___ftadd@f2+2
  5907  00A5  160A  118A  26F7  120A  118A  	fcall	___ftadd
  5908  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  5909  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  5910  00AC  082A               	movf	?___ftadd,w
  5911  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  5912  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  5913  00AF  00B2               	movwf	_temp^(0+128)
  5914  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  5915  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  5916  00B2  082B               	movf	?___ftadd+1,w
  5917  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  5918  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  5919  00B5  00B3               	movwf	(_temp+1)^(0+128)
  5920  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  5921  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  5922  00B8  082C               	movf	?___ftadd+2,w
  5923  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  5924  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  5925  00BB  00B4               	movwf	(_temp+2)^(0+128)
  5926                           
  5927                           ;main.c: 163: deltaV = temp;
  5928  00BC  0832               	movf	_temp^(0+128),w
  5929  00BD  00F0               	movwf	___fttol@f1
  5930  00BE  0833               	movf	(_temp+1)^(0+128),w
  5931  00BF  00F1               	movwf	___fttol@f1+1
  5932  00C0  0834               	movf	(_temp+2)^(0+128),w
  5933  00C1  00F2               	movwf	___fttol@f1+2
  5934  00C2  160A  118A  2524  120A  118A  	fcall	___fttol
  5935  00C7  0871               	movf	?___fttol+1,w
  5936  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  5937  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  5938  00CA  01C1               	clrf	(_deltaV+1)^(0+128)
  5939  00CB  07C1               	addwf	(_deltaV+1)^(0+128),f
  5940  00CC  0870               	movf	?___fttol,w
  5941  00CD  01C0               	clrf	_deltaV^(0+128)
  5942  00CE  07C0               	addwf	_deltaV^(0+128),f
  5943                           
  5944                           ;main.c: 165: if (temp >10) temp = 10;
  5945  00CF  3000               	movlw	0
  5946  00D0  00F0               	movwf	___ftge@ff1
  5947  00D1  3020               	movlw	32
  5948  00D2  00F1               	movwf	___ftge@ff1+1
  5949  00D3  3041               	movlw	65
  5950  00D4  00F2               	movwf	___ftge@ff1+2
  5951  00D5  0832               	movf	_temp^(0+128),w
  5952  00D6  00F3               	movwf	___ftge@ff2
  5953  00D7  0833               	movf	(_temp+1)^(0+128),w
  5954  00D8  00F4               	movwf	___ftge@ff2+1
  5955  00D9  0834               	movf	(_temp+2)^(0+128),w
  5956  00DA  00F5               	movwf	___ftge@ff2+2
  5957  00DB  160A  118A  245F  120A  118A  	fcall	___ftge
  5958  00E0  1803               	btfsc	3,0
  5959  00E1  28EA               	goto	i1l2756
  5960  00E2  3000               	movlw	0
  5961  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  5962  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  5963  00E5  00B2               	movwf	_temp^(0+128)
  5964  00E6  3020               	movlw	32
  5965  00E7  00B3               	movwf	(_temp+1)^(0+128)
  5966  00E8  3041               	movlw	65
  5967  00E9  00B4               	movwf	(_temp+2)^(0+128)
  5968  00EA                     i1l2756:	
  5969                           
  5970                           ;main.c: 166: if (temp <0) temp = 0;
  5971  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  5972  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  5973  00EC  0832               	movf	_temp^(0+128),w
  5974  00ED  00F0               	movwf	___ftge@ff1
  5975  00EE  0833               	movf	(_temp+1)^(0+128),w
  5976  00EF  00F1               	movwf	___ftge@ff1+1
  5977  00F0  0834               	movf	(_temp+2)^(0+128),w
  5978  00F1  00F2               	movwf	___ftge@ff1+2
  5979  00F2  3000               	movlw	0
  5980  00F3  00F3               	movwf	___ftge@ff2
  5981  00F4  3000               	movlw	0
  5982  00F5  00F4               	movwf	___ftge@ff2+1
  5983  00F6  3000               	movlw	0
  5984  00F7  00F5               	movwf	___ftge@ff2+2
  5985  00F8  160A  118A  245F  120A  118A  	fcall	___ftge
  5986  00FD  1803               	btfsc	3,0
  5987  00FE  2907               	goto	i1l2760
  5988  00FF  3000               	movlw	0
  5989  0100  1683               	bsf	3,5	;RP0=1, select bank1
  5990  0101  1303               	bcf	3,6	;RP1=0, select bank1
  5991  0102  00B2               	movwf	_temp^(0+128)
  5992  0103  3000               	movlw	0
  5993  0104  00B3               	movwf	(_temp+1)^(0+128)
  5994  0105  3000               	movlw	0
  5995  0106  00B4               	movwf	(_temp+2)^(0+128)
  5996  0107                     i1l2760:	
  5997                           
  5998                           ;main.c: 169: if (temp < 2.5)
  5999  0107  1683               	bsf	3,5	;RP0=1, select bank1
  6000  0108  1303               	bcf	3,6	;RP1=0, select bank1
  6001  0109  0832               	movf	_temp^(0+128),w
  6002  010A  00F0               	movwf	___ftge@ff1
  6003  010B  0833               	movf	(_temp+1)^(0+128),w
  6004  010C  00F1               	movwf	___ftge@ff1+1
  6005  010D  0834               	movf	(_temp+2)^(0+128),w
  6006  010E  00F2               	movwf	___ftge@ff1+2
  6007  010F  3000               	movlw	0
  6008  0110  00F3               	movwf	___ftge@ff2
  6009  0111  3020               	movlw	32
  6010  0112  00F4               	movwf	___ftge@ff2+1
  6011  0113  3040               	movlw	64
  6012  0114  00F5               	movwf	___ftge@ff2+2
  6013  0115  160A  118A  245F  120A  118A  	fcall	___ftge
  6014  011A  1803               	btfsc	3,0
  6015  011B  2A70               	goto	i1l2784
  6016                           
  6017                           ;main.c: 170: {
  6018                           ;main.c: 172: fitemp = trapmf(temp,-1,0,1.5,3);
  6019  011C  1683               	bsf	3,5	;RP0=1, select bank1
  6020  011D  1303               	bcf	3,6	;RP1=0, select bank1
  6021  011E  0832               	movf	_temp^(0+128),w
  6022  011F  1283               	bcf	3,5	;RP0=0, select bank0
  6023  0120  1303               	bcf	3,6	;RP1=0, select bank0
  6024  0121  00C7               	movwf	trapmf@x
  6025  0122  1683               	bsf	3,5	;RP0=1, select bank1
  6026  0123  1303               	bcf	3,6	;RP1=0, select bank1
  6027  0124  0833               	movf	(_temp+1)^(0+128),w
  6028  0125  1283               	bcf	3,5	;RP0=0, select bank0
  6029  0126  1303               	bcf	3,6	;RP1=0, select bank0
  6030  0127  00C8               	movwf	trapmf@x+1
  6031  0128  1683               	bsf	3,5	;RP0=1, select bank1
  6032  0129  1303               	bcf	3,6	;RP1=0, select bank1
  6033  012A  0834               	movf	(_temp+2)^(0+128),w
  6034  012B  1283               	bcf	3,5	;RP0=0, select bank0
  6035  012C  1303               	bcf	3,6	;RP1=0, select bank0
  6036  012D  00C9               	movwf	trapmf@x+2
  6037  012E  3000               	movlw	0
  6038  012F  00CA               	movwf	trapmf@a
  6039  0130  3080               	movlw	128
  6040  0131  00CB               	movwf	trapmf@a+1
  6041  0132  30BF               	movlw	191
  6042  0133  00CC               	movwf	trapmf@a+2
  6043  0134  3000               	movlw	0
  6044  0135  00CD               	movwf	trapmf@b
  6045  0136  3000               	movlw	0
  6046  0137  00CE               	movwf	trapmf@b+1
  6047  0138  3000               	movlw	0
  6048  0139  00CF               	movwf	trapmf@b+2
  6049  013A  3000               	movlw	0
  6050  013B  00D0               	movwf	trapmf@c
  6051  013C  30C0               	movlw	192
  6052  013D  00D1               	movwf	trapmf@c+1
  6053  013E  303F               	movlw	63
  6054  013F  00D2               	movwf	trapmf@c+2
  6055  0140  3000               	movlw	0
  6056  0141  00D3               	movwf	trapmf@d
  6057  0142  3040               	movlw	64
  6058  0143  00D4               	movwf	trapmf@d+1
  6059  0144  3040               	movlw	64
  6060  0145  00D5               	movwf	trapmf@d+2
  6061  0146  120A  158A  22FA  120A  118A  	fcall	_trapmf
  6062  014B  1283               	bcf	3,5	;RP0=0, select bank0
  6063  014C  1303               	bcf	3,6	;RP1=0, select bank0
  6064  014D  0847               	movf	?_trapmf,w
  6065  014E  1683               	bsf	3,5	;RP0=1, select bank1
  6066  014F  1303               	bcf	3,6	;RP1=0, select bank1
  6067  0150  00A3               	movwf	_fitemp^(0+128)
  6068  0151  1283               	bcf	3,5	;RP0=0, select bank0
  6069  0152  1303               	bcf	3,6	;RP1=0, select bank0
  6070  0153  0848               	movf	?_trapmf+1,w
  6071  0154  1683               	bsf	3,5	;RP0=1, select bank1
  6072  0155  1303               	bcf	3,6	;RP1=0, select bank1
  6073  0156  00A4               	movwf	(_fitemp+1)^(0+128)
  6074  0157  1283               	bcf	3,5	;RP0=0, select bank0
  6075  0158  1303               	bcf	3,6	;RP1=0, select bank0
  6076  0159  0849               	movf	?_trapmf+2,w
  6077  015A  1683               	bsf	3,5	;RP0=1, select bank1
  6078  015B  1303               	bcf	3,6	;RP1=0, select bank1
  6079  015C  00A5               	movwf	(_fitemp+2)^(0+128)
  6080                           
  6081                           ;main.c: 175: fop_rule1 = max_val(fitemp,0.1);
  6082  015D  0823               	movf	_fitemp^(0+128),w
  6083  015E  1283               	bcf	3,5	;RP0=0, select bank0
  6084  015F  1303               	bcf	3,6	;RP1=0, select bank0
  6085  0160  00A0               	movwf	max_val@a
  6086  0161  1683               	bsf	3,5	;RP0=1, select bank1
  6087  0162  1303               	bcf	3,6	;RP1=0, select bank1
  6088  0163  0824               	movf	(_fitemp+1)^(0+128),w
  6089  0164  1283               	bcf	3,5	;RP0=0, select bank0
  6090  0165  1303               	bcf	3,6	;RP1=0, select bank0
  6091  0166  00A1               	movwf	max_val@a+1
  6092  0167  1683               	bsf	3,5	;RP0=1, select bank1
  6093  0168  1303               	bcf	3,6	;RP1=0, select bank1
  6094  0169  0825               	movf	(_fitemp+2)^(0+128),w
  6095  016A  1283               	bcf	3,5	;RP0=0, select bank0
  6096  016B  1303               	bcf	3,6	;RP1=0, select bank0
  6097  016C  00A2               	movwf	max_val@a+2
  6098  016D  30CD               	movlw	205
  6099  016E  00A3               	movwf	max_val@b
  6100  016F  30CC               	movlw	204
  6101  0170  00A4               	movwf	max_val@b+1
  6102  0171  303D               	movlw	61
  6103  0172  00A5               	movwf	max_val@b+2
  6104  0173  120A  158A  2000  120A  118A  	fcall	_max_val
  6105  0178  1283               	bcf	3,5	;RP0=0, select bank0
  6106  0179  1303               	bcf	3,6	;RP1=0, select bank0
  6107  017A  0820               	movf	?_max_val,w
  6108  017B  1683               	bsf	3,5	;RP0=1, select bank1
  6109  017C  1303               	bcf	3,6	;RP1=0, select bank1
  6110  017D  00A6               	movwf	_fop_rule1^(0+128)
  6111  017E  1283               	bcf	3,5	;RP0=0, select bank0
  6112  017F  1303               	bcf	3,6	;RP1=0, select bank0
  6113  0180  0821               	movf	?_max_val+1,w
  6114  0181  1683               	bsf	3,5	;RP0=1, select bank1
  6115  0182  1303               	bcf	3,6	;RP1=0, select bank1
  6116  0183  00A7               	movwf	(_fop_rule1+1)^(0+128)
  6117  0184  1283               	bcf	3,5	;RP0=0, select bank0
  6118  0185  1303               	bcf	3,6	;RP1=0, select bank0
  6119  0186  0822               	movf	?_max_val+2,w
  6120  0187  1683               	bsf	3,5	;RP0=1, select bank1
  6121  0188  1303               	bcf	3,6	;RP1=0, select bank1
  6122  0189  00A8               	movwf	(_fop_rule1+2)^(0+128)
  6123                           
  6124                           ;main.c: 178: x=0;
  6125  018A  3000               	movlw	0
  6126  018B  00B8               	movwf	_x^(0+128)
  6127  018C  3000               	movlw	0
  6128  018D  00B9               	movwf	(_x+1)^(0+128)
  6129  018E  3000               	movlw	0
  6130  018F  00BA               	movwf	(_x+2)^(0+128)
  6131                           
  6132                           ;main.c: 179: y=0;
  6133  0190  3000               	movlw	0
  6134  0191  00BB               	movwf	_y^(0+128)
  6135  0192  3000               	movlw	0
  6136  0193  00BC               	movwf	(_y+1)^(0+128)
  6137  0194  3000               	movlw	0
  6138  0195  00BD               	movwf	(_y+2)^(0+128)
  6139                           
  6140                           ;main.c: 180: for (int a=0; a<=10; a++)
  6141  0196  1283               	bcf	3,5	;RP0=0, select bank0
  6142  0197  1303               	bcf	3,6	;RP1=0, select bank0
  6143  0198  01D9               	clrf	Fuzzy@a
  6144  0199  01DA               	clrf	Fuzzy@a+1
  6145  019A  085A               	movf	Fuzzy@a+1,w
  6146  019B  3A80               	xorlw	128
  6147  019C  00FF               	movwf	127
  6148  019D  3080               	movlw	128
  6149  019E  027F               	subwf	127,w
  6150  019F  1D03               	skipz
  6151  01A0  29A3               	goto	u338_25
  6152  01A1  300B               	movlw	11
  6153  01A2  0259               	subwf	Fuzzy@a,w
  6154  01A3                     u338_25:	
  6155  01A3  1803               	btfsc	3,0
  6156  01A4  2A70               	goto	i1l2784
  6157  01A5                     i1l2774:	
  6158                           
  6159                           ;main.c: 181: {
  6160                           ;main.c: 182: y = trapmf(x,-1,0,1.5,3);
  6161  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  6162  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  6163  01A7  0838               	movf	_x^(0+128),w
  6164  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  6165  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  6166  01AA  00C7               	movwf	trapmf@x
  6167  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  6168  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  6169  01AD  0839               	movf	(_x+1)^(0+128),w
  6170  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  6171  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  6172  01B0  00C8               	movwf	trapmf@x+1
  6173  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  6174  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  6175  01B3  083A               	movf	(_x+2)^(0+128),w
  6176  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  6177  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  6178  01B6  00C9               	movwf	trapmf@x+2
  6179  01B7  3000               	movlw	0
  6180  01B8  00CA               	movwf	trapmf@a
  6181  01B9  3080               	movlw	128
  6182  01BA  00CB               	movwf	trapmf@a+1
  6183  01BB  30BF               	movlw	191
  6184  01BC  00CC               	movwf	trapmf@a+2
  6185  01BD  3000               	movlw	0
  6186  01BE  00CD               	movwf	trapmf@b
  6187  01BF  3000               	movlw	0
  6188  01C0  00CE               	movwf	trapmf@b+1
  6189  01C1  3000               	movlw	0
  6190  01C2  00CF               	movwf	trapmf@b+2
  6191  01C3  3000               	movlw	0
  6192  01C4  00D0               	movwf	trapmf@c
  6193  01C5  30C0               	movlw	192
  6194  01C6  00D1               	movwf	trapmf@c+1
  6195  01C7  303F               	movlw	63
  6196  01C8  00D2               	movwf	trapmf@c+2
  6197  01C9  3000               	movlw	0
  6198  01CA  00D3               	movwf	trapmf@d
  6199  01CB  3040               	movlw	64
  6200  01CC  00D4               	movwf	trapmf@d+1
  6201  01CD  3040               	movlw	64
  6202  01CE  00D5               	movwf	trapmf@d+2
  6203  01CF  120A  158A  22FA  120A  118A  	fcall	_trapmf
  6204  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  6205  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  6206  01D6  0847               	movf	?_trapmf,w
  6207  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  6208  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  6209  01D9  00BB               	movwf	_y^(0+128)
  6210  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  6211  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  6212  01DC  0848               	movf	?_trapmf+1,w
  6213  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  6214  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  6215  01DF  00BC               	movwf	(_y+1)^(0+128)
  6216  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  6217  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  6218  01E2  0849               	movf	?_trapmf+2,w
  6219  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  6220  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  6221  01E5  00BD               	movwf	(_y+2)^(0+128)
  6222                           
  6223                           ;main.c: 184: if (y > fop_rule1)
  6224  01E6  0826               	movf	_fop_rule1^(0+128),w
  6225  01E7  00F0               	movwf	___ftge@ff1
  6226  01E8  0827               	movf	(_fop_rule1+1)^(0+128),w
  6227  01E9  00F1               	movwf	___ftge@ff1+1
  6228  01EA  0828               	movf	(_fop_rule1+2)^(0+128),w
  6229  01EB  00F2               	movwf	___ftge@ff1+2
  6230  01EC  083B               	movf	_y^(0+128),w
  6231  01ED  00F3               	movwf	___ftge@ff2
  6232  01EE  083C               	movf	(_y+1)^(0+128),w
  6233  01EF  00F4               	movwf	___ftge@ff2+1
  6234  01F0  083D               	movf	(_y+2)^(0+128),w
  6235  01F1  00F5               	movwf	___ftge@ff2+2
  6236  01F2  160A  118A  245F  120A  118A  	fcall	___ftge
  6237  01F7  1803               	btfsc	3,0
  6238  01F8  2A09               	goto	i1l2778
  6239                           
  6240                           ;main.c: 185: {
  6241                           ;main.c: 186: mantem += fop_rule1;
  6242  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  6243  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  6244  01FB  0826               	movf	_fop_rule1^(0+128),w
  6245  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  6246  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  6247  01FE  00AA               	movwf	___ftadd@f1
  6248  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  6249  0200  1303               	bcf	3,6	;RP1=0, select bank1
  6250  0201  0827               	movf	(_fop_rule1+1)^(0+128),w
  6251  0202  1283               	bcf	3,5	;RP0=0, select bank0
  6252  0203  1303               	bcf	3,6	;RP1=0, select bank0
  6253  0204  00AB               	movwf	___ftadd@f1+1
  6254  0205  1683               	bsf	3,5	;RP0=1, select bank1
  6255  0206  1303               	bcf	3,6	;RP1=0, select bank1
  6256  0207  0828               	movf	(_fop_rule1+2)^(0+128),w
  6257  0208  2A18               	goto	L3
  6258  0209                     i1l2778:	
  6259                           ;main.c: 187: }
  6260                           
  6261                           
  6262                           ;main.c: 188: else
  6263                           ;main.c: 189: {
  6264                           ;main.c: 190: mantem += y;
  6265  0209  1683               	bsf	3,5	;RP0=1, select bank1
  6266  020A  1303               	bcf	3,6	;RP1=0, select bank1
  6267  020B  083B               	movf	_y^(0+128),w
  6268  020C  1283               	bcf	3,5	;RP0=0, select bank0
  6269  020D  1303               	bcf	3,6	;RP1=0, select bank0
  6270  020E  00AA               	movwf	___ftadd@f1
  6271  020F  1683               	bsf	3,5	;RP0=1, select bank1
  6272  0210  1303               	bcf	3,6	;RP1=0, select bank1
  6273  0211  083C               	movf	(_y+1)^(0+128),w
  6274  0212  1283               	bcf	3,5	;RP0=0, select bank0
  6275  0213  1303               	bcf	3,6	;RP1=0, select bank0
  6276  0214  00AB               	movwf	___ftadd@f1+1
  6277  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6278  0216  1303               	bcf	3,6	;RP1=0, select bank1
  6279  0217  083D               	movf	(_y+2)^(0+128),w
  6280  0218                     L3:	
  6281  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6282  0219  1303               	bcf	3,6	;RP1=0, select bank0
  6283  021A  00AC               	movwf	___ftadd@f1+2
  6284  021B  0866               	movf	Fuzzy@mantem,w
  6285  021C  00AD               	movwf	___ftadd@f2
  6286  021D  0867               	movf	Fuzzy@mantem+1,w
  6287  021E  00AE               	movwf	___ftadd@f2+1
  6288  021F  0868               	movf	Fuzzy@mantem+2,w
  6289  0220  00AF               	movwf	___ftadd@f2+2
  6290  0221  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6291  0226  1283               	bcf	3,5	;RP0=0, select bank0
  6292  0227  1303               	bcf	3,6	;RP1=0, select bank0
  6293  0228  082A               	movf	?___ftadd,w
  6294  0229  00E6               	movwf	Fuzzy@mantem
  6295  022A  082B               	movf	?___ftadd+1,w
  6296  022B  00E7               	movwf	Fuzzy@mantem+1
  6297  022C  082C               	movf	?___ftadd+2,w
  6298  022D  00E8               	movwf	Fuzzy@mantem+2
  6299                           
  6300                           ;main.c: 191: }
  6301                           ;main.c: 193: x=x+1;
  6302  022E  3000               	movlw	0
  6303  022F  00AA               	movwf	___ftadd@f1
  6304  0230  3080               	movlw	128
  6305  0231  00AB               	movwf	___ftadd@f1+1
  6306  0232  303F               	movlw	63
  6307  0233  00AC               	movwf	___ftadd@f1+2
  6308  0234  1683               	bsf	3,5	;RP0=1, select bank1
  6309  0235  1303               	bcf	3,6	;RP1=0, select bank1
  6310  0236  0838               	movf	_x^(0+128),w
  6311  0237  1283               	bcf	3,5	;RP0=0, select bank0
  6312  0238  1303               	bcf	3,6	;RP1=0, select bank0
  6313  0239  00AD               	movwf	___ftadd@f2
  6314  023A  1683               	bsf	3,5	;RP0=1, select bank1
  6315  023B  1303               	bcf	3,6	;RP1=0, select bank1
  6316  023C  0839               	movf	(_x+1)^(0+128),w
  6317  023D  1283               	bcf	3,5	;RP0=0, select bank0
  6318  023E  1303               	bcf	3,6	;RP1=0, select bank0
  6319  023F  00AE               	movwf	___ftadd@f2+1
  6320  0240  1683               	bsf	3,5	;RP0=1, select bank1
  6321  0241  1303               	bcf	3,6	;RP1=0, select bank1
  6322  0242  083A               	movf	(_x+2)^(0+128),w
  6323  0243  1283               	bcf	3,5	;RP0=0, select bank0
  6324  0244  1303               	bcf	3,6	;RP1=0, select bank0
  6325  0245  00AF               	movwf	___ftadd@f2+2
  6326  0246  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6327  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6328  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6329  024D  082A               	movf	?___ftadd,w
  6330  024E  1683               	bsf	3,5	;RP0=1, select bank1
  6331  024F  1303               	bcf	3,6	;RP1=0, select bank1
  6332  0250  00B8               	movwf	_x^(0+128)
  6333  0251  1283               	bcf	3,5	;RP0=0, select bank0
  6334  0252  1303               	bcf	3,6	;RP1=0, select bank0
  6335  0253  082B               	movf	?___ftadd+1,w
  6336  0254  1683               	bsf	3,5	;RP0=1, select bank1
  6337  0255  1303               	bcf	3,6	;RP1=0, select bank1
  6338  0256  00B9               	movwf	(_x+1)^(0+128)
  6339  0257  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0258  1303               	bcf	3,6	;RP1=0, select bank0
  6341  0259  082C               	movf	?___ftadd+2,w
  6342  025A  1683               	bsf	3,5	;RP0=1, select bank1
  6343  025B  1303               	bcf	3,6	;RP1=0, select bank1
  6344  025C  00BA               	movwf	(_x+2)^(0+128)
  6345  025D  3001               	movlw	1
  6346  025E  1283               	bcf	3,5	;RP0=0, select bank0
  6347  025F  1303               	bcf	3,6	;RP1=0, select bank0
  6348  0260  07D9               	addwf	Fuzzy@a,f
  6349  0261  1803               	skipnc
  6350  0262  0ADA               	incf	Fuzzy@a+1,f
  6351  0263  3000               	movlw	0
  6352  0264  07DA               	addwf	Fuzzy@a+1,f
  6353  0265  085A               	movf	Fuzzy@a+1,w
  6354  0266  3A80               	xorlw	128
  6355  0267  00FF               	movwf	127
  6356  0268  3080               	movlw	128
  6357  0269  027F               	subwf	127,w
  6358  026A  1D03               	skipz
  6359  026B  2A6E               	goto	u340_25
  6360  026C  300B               	movlw	11
  6361  026D  0259               	subwf	Fuzzy@a,w
  6362  026E                     u340_25:	
  6363  026E  1C03               	skipc
  6364  026F  29A5               	goto	i1l2774
  6365  0270                     i1l2784:	
  6366                           
  6367                           ;main.c: 194: }
  6368                           ;main.c: 196: }
  6369                           ;main.c: 201: if ((temp > 2) && (temp < 7))
  6370  0270  3000               	movlw	0
  6371  0271  00F0               	movwf	___ftge@ff1
  6372  0272  3000               	movlw	0
  6373  0273  00F1               	movwf	___ftge@ff1+1
  6374  0274  3040               	movlw	64
  6375  0275  00F2               	movwf	___ftge@ff1+2
  6376  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6377  0277  1303               	bcf	3,6	;RP1=0, select bank1
  6378  0278  0832               	movf	_temp^(0+128),w
  6379  0279  00F3               	movwf	___ftge@ff2
  6380  027A  0833               	movf	(_temp+1)^(0+128),w
  6381  027B  00F4               	movwf	___ftge@ff2+1
  6382  027C  0834               	movf	(_temp+2)^(0+128),w
  6383  027D  00F5               	movwf	___ftge@ff2+2
  6384  027E  160A  118A  245F  120A  118A  	fcall	___ftge
  6385  0283  1803               	btfsc	3,0
  6386  0284  2BE2               	goto	i1l2810
  6387  0285  1683               	bsf	3,5	;RP0=1, select bank1
  6388  0286  1303               	bcf	3,6	;RP1=0, select bank1
  6389  0287  0832               	movf	_temp^(0+128),w
  6390  0288  00F0               	movwf	___ftge@ff1
  6391  0289  0833               	movf	(_temp+1)^(0+128),w
  6392  028A  00F1               	movwf	___ftge@ff1+1
  6393  028B  0834               	movf	(_temp+2)^(0+128),w
  6394  028C  00F2               	movwf	___ftge@ff1+2
  6395  028D  3000               	movlw	0
  6396  028E  00F3               	movwf	___ftge@ff2
  6397  028F  30E0               	movlw	224
  6398  0290  00F4               	movwf	___ftge@ff2+1
  6399  0291  3040               	movlw	64
  6400  0292  00F5               	movwf	___ftge@ff2+2
  6401  0293  160A  118A  245F  120A  118A  	fcall	___ftge
  6402  0298  1803               	btfsc	3,0
  6403  0299  2BE2               	goto	i1l2810
  6404                           
  6405                           ;main.c: 202: {
  6406                           ;main.c: 204: fitemp = trimf(temp,2,5,8);
  6407  029A  1683               	bsf	3,5	;RP0=1, select bank1
  6408  029B  1303               	bcf	3,6	;RP1=0, select bank1
  6409  029C  0832               	movf	_temp^(0+128),w
  6410  029D  1283               	bcf	3,5	;RP0=0, select bank0
  6411  029E  1303               	bcf	3,6	;RP1=0, select bank0
  6412  029F  00C7               	movwf	trimf@x
  6413  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  6414  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  6415  02A2  0833               	movf	(_temp+1)^(0+128),w
  6416  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6417  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  6418  02A5  00C8               	movwf	trimf@x+1
  6419  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  6420  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  6421  02A8  0834               	movf	(_temp+2)^(0+128),w
  6422  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  6423  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  6424  02AB  00C9               	movwf	trimf@x+2
  6425  02AC  3000               	movlw	0
  6426  02AD  00CA               	movwf	trimf@a
  6427  02AE  3000               	movlw	0
  6428  02AF  00CB               	movwf	trimf@a+1
  6429  02B0  3040               	movlw	64
  6430  02B1  00CC               	movwf	trimf@a+2
  6431  02B2  3000               	movlw	0
  6432  02B3  00CD               	movwf	trimf@b
  6433  02B4  30A0               	movlw	160
  6434  02B5  00CE               	movwf	trimf@b+1
  6435  02B6  3040               	movlw	64
  6436  02B7  00CF               	movwf	trimf@b+2
  6437  02B8  3000               	movlw	0
  6438  02B9  00D0               	movwf	trimf@c
  6439  02BA  3000               	movlw	0
  6440  02BB  00D1               	movwf	trimf@c+1
  6441  02BC  3041               	movlw	65
  6442  02BD  00D2               	movwf	trimf@c+2
  6443  02BE  120A  158A  2089  120A  118A  	fcall	_trimf
  6444  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  6445  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  6446  02C5  0847               	movf	?_trimf,w
  6447  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  6448  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  6449  02C8  00A3               	movwf	_fitemp^(0+128)
  6450  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  6451  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  6452  02CB  0848               	movf	?_trimf+1,w
  6453  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  6454  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  6455  02CE  00A4               	movwf	(_fitemp+1)^(0+128)
  6456  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  6457  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  6458  02D1  0849               	movf	?_trimf+2,w
  6459  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  6460  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  6461  02D4  00A5               	movwf	(_fitemp+2)^(0+128)
  6462                           
  6463                           ;main.c: 207: fop_rule2 = max_val(fitemp,0.1);
  6464  02D5  0823               	movf	_fitemp^(0+128),w
  6465  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  6466  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  6467  02D8  00A0               	movwf	max_val@a
  6468  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  6469  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  6470  02DB  0824               	movf	(_fitemp+1)^(0+128),w
  6471  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  6472  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  6473  02DE  00A1               	movwf	max_val@a+1
  6474  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  6475  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  6476  02E1  0825               	movf	(_fitemp+2)^(0+128),w
  6477  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  6478  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  6479  02E4  00A2               	movwf	max_val@a+2
  6480  02E5  30CD               	movlw	205
  6481  02E6  00A3               	movwf	max_val@b
  6482  02E7  30CC               	movlw	204
  6483  02E8  00A4               	movwf	max_val@b+1
  6484  02E9  303D               	movlw	61
  6485  02EA  00A5               	movwf	max_val@b+2
  6486  02EB  120A  158A  2000  120A  118A  	fcall	_max_val
  6487  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  6488  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  6489  02F2  0820               	movf	?_max_val,w
  6490  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  6491  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  6492  02F5  00A9               	movwf	_fop_rule2^(0+128)
  6493  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  6494  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  6495  02F8  0821               	movf	?_max_val+1,w
  6496  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  6497  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  6498  02FB  00AA               	movwf	(_fop_rule2+1)^(0+128)
  6499  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  6500  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  6501  02FE  0822               	movf	?_max_val+2,w
  6502  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  6503  0300  1303               	bcf	3,6	;RP1=0, select bank1
  6504  0301  00AB               	movwf	(_fop_rule2+2)^(0+128)
  6505                           
  6506                           ;main.c: 210: x=0;
  6507  0302  3000               	movlw	0
  6508  0303  00B8               	movwf	_x^(0+128)
  6509  0304  3000               	movlw	0
  6510  0305  00B9               	movwf	(_x+1)^(0+128)
  6511  0306  3000               	movlw	0
  6512  0307  00BA               	movwf	(_x+2)^(0+128)
  6513                           
  6514                           ;main.c: 211: y=0;
  6515  0308  3000               	movlw	0
  6516  0309  00BB               	movwf	_y^(0+128)
  6517  030A  3000               	movlw	0
  6518  030B  00BC               	movwf	(_y+1)^(0+128)
  6519  030C  3000               	movlw	0
  6520  030D  00BD               	movwf	(_y+2)^(0+128)
  6521                           
  6522                           ;main.c: 212: for (int a=0; a<=10; a++)
  6523  030E  1283               	bcf	3,5	;RP0=0, select bank0
  6524  030F  1303               	bcf	3,6	;RP1=0, select bank0
  6525  0310  01DB               	clrf	Fuzzy@a_237
  6526  0311  01DC               	clrf	Fuzzy@a_237+1
  6527  0312  085C               	movf	Fuzzy@a_237+1,w
  6528  0313  3A80               	xorlw	128
  6529  0314  00FF               	movwf	127
  6530  0315  3080               	movlw	128
  6531  0316  027F               	subwf	127,w
  6532  0317  1D03               	skipz
  6533  0318  2B1B               	goto	u343_25
  6534  0319  300B               	movlw	11
  6535  031A  025B               	subwf	Fuzzy@a_237,w
  6536  031B                     u343_25:	
  6537  031B  1803               	btfsc	3,0
  6538  031C  2BE2               	goto	i1l2810
  6539  031D                     i1l2800:	
  6540                           
  6541                           ;main.c: 213: {
  6542                           ;main.c: 214: y = trimf(x,2,5,8);
  6543  031D  1683               	bsf	3,5	;RP0=1, select bank1
  6544  031E  1303               	bcf	3,6	;RP1=0, select bank1
  6545  031F  0838               	movf	_x^(0+128),w
  6546  0320  1283               	bcf	3,5	;RP0=0, select bank0
  6547  0321  1303               	bcf	3,6	;RP1=0, select bank0
  6548  0322  00C7               	movwf	trimf@x
  6549  0323  1683               	bsf	3,5	;RP0=1, select bank1
  6550  0324  1303               	bcf	3,6	;RP1=0, select bank1
  6551  0325  0839               	movf	(_x+1)^(0+128),w
  6552  0326  1283               	bcf	3,5	;RP0=0, select bank0
  6553  0327  1303               	bcf	3,6	;RP1=0, select bank0
  6554  0328  00C8               	movwf	trimf@x+1
  6555  0329  1683               	bsf	3,5	;RP0=1, select bank1
  6556  032A  1303               	bcf	3,6	;RP1=0, select bank1
  6557  032B  083A               	movf	(_x+2)^(0+128),w
  6558  032C  1283               	bcf	3,5	;RP0=0, select bank0
  6559  032D  1303               	bcf	3,6	;RP1=0, select bank0
  6560  032E  00C9               	movwf	trimf@x+2
  6561  032F  3000               	movlw	0
  6562  0330  00CA               	movwf	trimf@a
  6563  0331  3000               	movlw	0
  6564  0332  00CB               	movwf	trimf@a+1
  6565  0333  3040               	movlw	64
  6566  0334  00CC               	movwf	trimf@a+2
  6567  0335  3000               	movlw	0
  6568  0336  00CD               	movwf	trimf@b
  6569  0337  30A0               	movlw	160
  6570  0338  00CE               	movwf	trimf@b+1
  6571  0339  3040               	movlw	64
  6572  033A  00CF               	movwf	trimf@b+2
  6573  033B  3000               	movlw	0
  6574  033C  00D0               	movwf	trimf@c
  6575  033D  3000               	movlw	0
  6576  033E  00D1               	movwf	trimf@c+1
  6577  033F  3041               	movlw	65
  6578  0340  00D2               	movwf	trimf@c+2
  6579  0341  120A  158A  2089  120A  118A  	fcall	_trimf
  6580  0346  1283               	bcf	3,5	;RP0=0, select bank0
  6581  0347  1303               	bcf	3,6	;RP1=0, select bank0
  6582  0348  0847               	movf	?_trimf,w
  6583  0349  1683               	bsf	3,5	;RP0=1, select bank1
  6584  034A  1303               	bcf	3,6	;RP1=0, select bank1
  6585  034B  00BB               	movwf	_y^(0+128)
  6586  034C  1283               	bcf	3,5	;RP0=0, select bank0
  6587  034D  1303               	bcf	3,6	;RP1=0, select bank0
  6588  034E  0848               	movf	?_trimf+1,w
  6589  034F  1683               	bsf	3,5	;RP0=1, select bank1
  6590  0350  1303               	bcf	3,6	;RP1=0, select bank1
  6591  0351  00BC               	movwf	(_y+1)^(0+128)
  6592  0352  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0353  1303               	bcf	3,6	;RP1=0, select bank0
  6594  0354  0849               	movf	?_trimf+2,w
  6595  0355  1683               	bsf	3,5	;RP0=1, select bank1
  6596  0356  1303               	bcf	3,6	;RP1=0, select bank1
  6597  0357  00BD               	movwf	(_y+2)^(0+128)
  6598                           
  6599                           ;main.c: 216: if (y >= fop_rule2)
  6600  0358  083B               	movf	_y^(0+128),w
  6601  0359  00F0               	movwf	___ftge@ff1
  6602  035A  083C               	movf	(_y+1)^(0+128),w
  6603  035B  00F1               	movwf	___ftge@ff1+1
  6604  035C  083D               	movf	(_y+2)^(0+128),w
  6605  035D  00F2               	movwf	___ftge@ff1+2
  6606  035E  0829               	movf	_fop_rule2^(0+128),w
  6607  035F  00F3               	movwf	___ftge@ff2
  6608  0360  082A               	movf	(_fop_rule2+1)^(0+128),w
  6609  0361  00F4               	movwf	___ftge@ff2+1
  6610  0362  082B               	movf	(_fop_rule2+2)^(0+128),w
  6611  0363  00F5               	movwf	___ftge@ff2+2
  6612  0364  160A  118A  245F  120A  118A  	fcall	___ftge
  6613  0369  1C03               	btfss	3,0
  6614  036A  2B7B               	goto	i1l2804
  6615                           
  6616                           ;main.c: 217: {
  6617                           ;main.c: 218: reduz += fop_rule2;
  6618  036B  1683               	bsf	3,5	;RP0=1, select bank1
  6619  036C  1303               	bcf	3,6	;RP1=0, select bank1
  6620  036D  0829               	movf	_fop_rule2^(0+128),w
  6621  036E  1283               	bcf	3,5	;RP0=0, select bank0
  6622  036F  1303               	bcf	3,6	;RP1=0, select bank0
  6623  0370  00AA               	movwf	___ftadd@f1
  6624  0371  1683               	bsf	3,5	;RP0=1, select bank1
  6625  0372  1303               	bcf	3,6	;RP1=0, select bank1
  6626  0373  082A               	movf	(_fop_rule2+1)^(0+128),w
  6627  0374  1283               	bcf	3,5	;RP0=0, select bank0
  6628  0375  1303               	bcf	3,6	;RP1=0, select bank0
  6629  0376  00AB               	movwf	___ftadd@f1+1
  6630  0377  1683               	bsf	3,5	;RP0=1, select bank1
  6631  0378  1303               	bcf	3,6	;RP1=0, select bank1
  6632  0379  082B               	movf	(_fop_rule2+2)^(0+128),w
  6633  037A  2B8A               	goto	L4
  6634  037B                     i1l2804:	
  6635                           ;main.c: 219: }
  6636                           
  6637                           
  6638                           ;main.c: 220: else
  6639                           ;main.c: 221: {
  6640                           ;main.c: 222: reduz += y;
  6641  037B  1683               	bsf	3,5	;RP0=1, select bank1
  6642  037C  1303               	bcf	3,6	;RP1=0, select bank1
  6643  037D  083B               	movf	_y^(0+128),w
  6644  037E  1283               	bcf	3,5	;RP0=0, select bank0
  6645  037F  1303               	bcf	3,6	;RP1=0, select bank0
  6646  0380  00AA               	movwf	___ftadd@f1
  6647  0381  1683               	bsf	3,5	;RP0=1, select bank1
  6648  0382  1303               	bcf	3,6	;RP1=0, select bank1
  6649  0383  083C               	movf	(_y+1)^(0+128),w
  6650  0384  1283               	bcf	3,5	;RP0=0, select bank0
  6651  0385  1303               	bcf	3,6	;RP1=0, select bank0
  6652  0386  00AB               	movwf	___ftadd@f1+1
  6653  0387  1683               	bsf	3,5	;RP0=1, select bank1
  6654  0388  1303               	bcf	3,6	;RP1=0, select bank1
  6655  0389  083D               	movf	(_y+2)^(0+128),w
  6656  038A                     L4:	
  6657  038A  1283               	bcf	3,5	;RP0=0, select bank0
  6658  038B  1303               	bcf	3,6	;RP1=0, select bank0
  6659  038C  00AC               	movwf	___ftadd@f1+2
  6660  038D  0869               	movf	Fuzzy@reduz,w
  6661  038E  00AD               	movwf	___ftadd@f2
  6662  038F  086A               	movf	Fuzzy@reduz+1,w
  6663  0390  00AE               	movwf	___ftadd@f2+1
  6664  0391  086B               	movf	Fuzzy@reduz+2,w
  6665  0392  00AF               	movwf	___ftadd@f2+2
  6666  0393  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6667  0398  1283               	bcf	3,5	;RP0=0, select bank0
  6668  0399  1303               	bcf	3,6	;RP1=0, select bank0
  6669  039A  082A               	movf	?___ftadd,w
  6670  039B  00E9               	movwf	Fuzzy@reduz
  6671  039C  082B               	movf	?___ftadd+1,w
  6672  039D  00EA               	movwf	Fuzzy@reduz+1
  6673  039E  082C               	movf	?___ftadd+2,w
  6674  039F  00EB               	movwf	Fuzzy@reduz+2
  6675                           
  6676                           ;main.c: 223: }
  6677                           ;main.c: 225: x=x+1;
  6678  03A0  3000               	movlw	0
  6679  03A1  00AA               	movwf	___ftadd@f1
  6680  03A2  3080               	movlw	128
  6681  03A3  00AB               	movwf	___ftadd@f1+1
  6682  03A4  303F               	movlw	63
  6683  03A5  00AC               	movwf	___ftadd@f1+2
  6684  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  6685  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  6686  03A8  0838               	movf	_x^(0+128),w
  6687  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  6688  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  6689  03AB  00AD               	movwf	___ftadd@f2
  6690  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  6691  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  6692  03AE  0839               	movf	(_x+1)^(0+128),w
  6693  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  6694  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  6695  03B1  00AE               	movwf	___ftadd@f2+1
  6696  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  6697  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  6698  03B4  083A               	movf	(_x+2)^(0+128),w
  6699  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  6700  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  6701  03B7  00AF               	movwf	___ftadd@f2+2
  6702  03B8  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6703  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  6704  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  6705  03BF  082A               	movf	?___ftadd,w
  6706  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  6707  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  6708  03C2  00B8               	movwf	_x^(0+128)
  6709  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  6710  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  6711  03C5  082B               	movf	?___ftadd+1,w
  6712  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  6713  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  6714  03C8  00B9               	movwf	(_x+1)^(0+128)
  6715  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  6716  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  6717  03CB  082C               	movf	?___ftadd+2,w
  6718  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  6719  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  6720  03CE  00BA               	movwf	(_x+2)^(0+128)
  6721  03CF  3001               	movlw	1
  6722  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  6723  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  6724  03D2  07DB               	addwf	Fuzzy@a_237,f
  6725  03D3  1803               	skipnc
  6726  03D4  0ADC               	incf	Fuzzy@a_237+1,f
  6727  03D5  3000               	movlw	0
  6728  03D6  07DC               	addwf	Fuzzy@a_237+1,f
  6729  03D7  085C               	movf	Fuzzy@a_237+1,w
  6730  03D8  3A80               	xorlw	128
  6731  03D9  00FF               	movwf	127
  6732  03DA  3080               	movlw	128
  6733  03DB  027F               	subwf	127,w
  6734  03DC  1D03               	skipz
  6735  03DD  2BE0               	goto	u345_25
  6736  03DE  300B               	movlw	11
  6737  03DF  025B               	subwf	Fuzzy@a_237,w
  6738  03E0                     u345_25:	
  6739  03E0  1C03               	skipc
  6740  03E1  2B1D               	goto	i1l2800
  6741  03E2                     i1l2810:	
  6742                           
  6743                           ;main.c: 226: }
  6744                           ;main.c: 228: }
  6745                           ;main.c: 233: if (temp > 7 )
  6746  03E2  3000               	movlw	0
  6747  03E3  00F0               	movwf	___ftge@ff1
  6748  03E4  30E0               	movlw	224
  6749  03E5  00F1               	movwf	___ftge@ff1+1
  6750  03E6  3040               	movlw	64
  6751  03E7  00F2               	movwf	___ftge@ff1+2
  6752  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  6753  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  6754  03EA  0832               	movf	_temp^(0+128),w
  6755  03EB  00F3               	movwf	___ftge@ff2
  6756  03EC  0833               	movf	(_temp+1)^(0+128),w
  6757  03ED  00F4               	movwf	___ftge@ff2+1
  6758  03EE  0834               	movf	(_temp+2)^(0+128),w
  6759  03EF  00F5               	movwf	___ftge@ff2+2
  6760  03F0  160A  118A  245F  120A  118A  	fcall	___ftge
  6761  03F5  1803               	btfsc	3,0
  6762  03F6  2D4B               	goto	i1l2834
  6763                           
  6764                           ;main.c: 234: {
  6765                           ;main.c: 236: fitemp = trapmf(temp,6,8.5,10,11);
  6766  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  6767  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  6768  03F9  0832               	movf	_temp^(0+128),w
  6769  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  6770  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  6771  03FC  00C7               	movwf	trapmf@x
  6772  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  6773  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  6774  03FF  0833               	movf	(_temp+1)^(0+128),w
  6775  0400  1283               	bcf	3,5	;RP0=0, select bank0
  6776  0401  1303               	bcf	3,6	;RP1=0, select bank0
  6777  0402  00C8               	movwf	trapmf@x+1
  6778  0403  1683               	bsf	3,5	;RP0=1, select bank1
  6779  0404  1303               	bcf	3,6	;RP1=0, select bank1
  6780  0405  0834               	movf	(_temp+2)^(0+128),w
  6781  0406  1283               	bcf	3,5	;RP0=0, select bank0
  6782  0407  1303               	bcf	3,6	;RP1=0, select bank0
  6783  0408  00C9               	movwf	trapmf@x+2
  6784  0409  3000               	movlw	0
  6785  040A  00CA               	movwf	trapmf@a
  6786  040B  30C0               	movlw	192
  6787  040C  00CB               	movwf	trapmf@a+1
  6788  040D  3040               	movlw	64
  6789  040E  00CC               	movwf	trapmf@a+2
  6790  040F  3000               	movlw	0
  6791  0410  00CD               	movwf	trapmf@b
  6792  0411  3008               	movlw	8
  6793  0412  00CE               	movwf	trapmf@b+1
  6794  0413  3041               	movlw	65
  6795  0414  00CF               	movwf	trapmf@b+2
  6796  0415  3000               	movlw	0
  6797  0416  00D0               	movwf	trapmf@c
  6798  0417  3020               	movlw	32
  6799  0418  00D1               	movwf	trapmf@c+1
  6800  0419  3041               	movlw	65
  6801  041A  00D2               	movwf	trapmf@c+2
  6802  041B  3000               	movlw	0
  6803  041C  00D3               	movwf	trapmf@d
  6804  041D  3030               	movlw	48
  6805  041E  00D4               	movwf	trapmf@d+1
  6806  041F  3041               	movlw	65
  6807  0420  00D5               	movwf	trapmf@d+2
  6808  0421  120A  158A  22FA  120A  118A  	fcall	_trapmf
  6809  0426  1283               	bcf	3,5	;RP0=0, select bank0
  6810  0427  1303               	bcf	3,6	;RP1=0, select bank0
  6811  0428  0847               	movf	?_trapmf,w
  6812  0429  1683               	bsf	3,5	;RP0=1, select bank1
  6813  042A  1303               	bcf	3,6	;RP1=0, select bank1
  6814  042B  00A3               	movwf	_fitemp^(0+128)
  6815  042C  1283               	bcf	3,5	;RP0=0, select bank0
  6816  042D  1303               	bcf	3,6	;RP1=0, select bank0
  6817  042E  0848               	movf	?_trapmf+1,w
  6818  042F  1683               	bsf	3,5	;RP0=1, select bank1
  6819  0430  1303               	bcf	3,6	;RP1=0, select bank1
  6820  0431  00A4               	movwf	(_fitemp+1)^(0+128)
  6821  0432  1283               	bcf	3,5	;RP0=0, select bank0
  6822  0433  1303               	bcf	3,6	;RP1=0, select bank0
  6823  0434  0849               	movf	?_trapmf+2,w
  6824  0435  1683               	bsf	3,5	;RP0=1, select bank1
  6825  0436  1303               	bcf	3,6	;RP1=0, select bank1
  6826  0437  00A5               	movwf	(_fitemp+2)^(0+128)
  6827                           
  6828                           ;main.c: 240: fop_rule3 = max_val(fitemp,0.1);
  6829  0438  0823               	movf	_fitemp^(0+128),w
  6830  0439  1283               	bcf	3,5	;RP0=0, select bank0
  6831  043A  1303               	bcf	3,6	;RP1=0, select bank0
  6832  043B  00A0               	movwf	max_val@a
  6833  043C  1683               	bsf	3,5	;RP0=1, select bank1
  6834  043D  1303               	bcf	3,6	;RP1=0, select bank1
  6835  043E  0824               	movf	(_fitemp+1)^(0+128),w
  6836  043F  1283               	bcf	3,5	;RP0=0, select bank0
  6837  0440  1303               	bcf	3,6	;RP1=0, select bank0
  6838  0441  00A1               	movwf	max_val@a+1
  6839  0442  1683               	bsf	3,5	;RP0=1, select bank1
  6840  0443  1303               	bcf	3,6	;RP1=0, select bank1
  6841  0444  0825               	movf	(_fitemp+2)^(0+128),w
  6842  0445  1283               	bcf	3,5	;RP0=0, select bank0
  6843  0446  1303               	bcf	3,6	;RP1=0, select bank0
  6844  0447  00A2               	movwf	max_val@a+2
  6845  0448  30CD               	movlw	205
  6846  0449  00A3               	movwf	max_val@b
  6847  044A  30CC               	movlw	204
  6848  044B  00A4               	movwf	max_val@b+1
  6849  044C  303D               	movlw	61
  6850  044D  00A5               	movwf	max_val@b+2
  6851  044E  120A  158A  2000  120A  118A  	fcall	_max_val
  6852  0453  1283               	bcf	3,5	;RP0=0, select bank0
  6853  0454  1303               	bcf	3,6	;RP1=0, select bank0
  6854  0455  0820               	movf	?_max_val,w
  6855  0456  1683               	bsf	3,5	;RP0=1, select bank1
  6856  0457  1303               	bcf	3,6	;RP1=0, select bank1
  6857  0458  00AC               	movwf	_fop_rule3^(0+128)
  6858  0459  1283               	bcf	3,5	;RP0=0, select bank0
  6859  045A  1303               	bcf	3,6	;RP1=0, select bank0
  6860  045B  0821               	movf	?_max_val+1,w
  6861  045C  1683               	bsf	3,5	;RP0=1, select bank1
  6862  045D  1303               	bcf	3,6	;RP1=0, select bank1
  6863  045E  00AD               	movwf	(_fop_rule3+1)^(0+128)
  6864  045F  1283               	bcf	3,5	;RP0=0, select bank0
  6865  0460  1303               	bcf	3,6	;RP1=0, select bank0
  6866  0461  0822               	movf	?_max_val+2,w
  6867  0462  1683               	bsf	3,5	;RP0=1, select bank1
  6868  0463  1303               	bcf	3,6	;RP1=0, select bank1
  6869  0464  00AE               	movwf	(_fop_rule3+2)^(0+128)
  6870                           
  6871                           ;main.c: 243: x=0;
  6872  0465  3000               	movlw	0
  6873  0466  00B8               	movwf	_x^(0+128)
  6874  0467  3000               	movlw	0
  6875  0468  00B9               	movwf	(_x+1)^(0+128)
  6876  0469  3000               	movlw	0
  6877  046A  00BA               	movwf	(_x+2)^(0+128)
  6878                           
  6879                           ;main.c: 244: y=0;
  6880  046B  3000               	movlw	0
  6881  046C  00BB               	movwf	_y^(0+128)
  6882  046D  3000               	movlw	0
  6883  046E  00BC               	movwf	(_y+1)^(0+128)
  6884  046F  3000               	movlw	0
  6885  0470  00BD               	movwf	(_y+2)^(0+128)
  6886                           
  6887                           ;main.c: 245: for (int a=0; a<=10; a++)
  6888  0471  1283               	bcf	3,5	;RP0=0, select bank0
  6889  0472  1303               	bcf	3,6	;RP1=0, select bank0
  6890  0473  01DD               	clrf	Fuzzy@a_238
  6891  0474  01DE               	clrf	Fuzzy@a_238+1
  6892  0475  085E               	movf	Fuzzy@a_238+1,w
  6893  0476  3A80               	xorlw	128
  6894  0477  00FF               	movwf	127
  6895  0478  3080               	movlw	128
  6896  0479  027F               	subwf	127,w
  6897  047A  1D03               	skipz
  6898  047B  2C7E               	goto	u347_25
  6899  047C  300B               	movlw	11
  6900  047D  025D               	subwf	Fuzzy@a_238,w
  6901  047E                     u347_25:	
  6902  047E  1803               	btfsc	3,0
  6903  047F  2D4B               	goto	i1l2834
  6904  0480                     i1l2824:	
  6905                           
  6906                           ;main.c: 246: {
  6907                           ;main.c: 247: y = trapmf(x,7,8.5,10,11);
  6908  0480  1683               	bsf	3,5	;RP0=1, select bank1
  6909  0481  1303               	bcf	3,6	;RP1=0, select bank1
  6910  0482  0838               	movf	_x^(0+128),w
  6911  0483  1283               	bcf	3,5	;RP0=0, select bank0
  6912  0484  1303               	bcf	3,6	;RP1=0, select bank0
  6913  0485  00C7               	movwf	trapmf@x
  6914  0486  1683               	bsf	3,5	;RP0=1, select bank1
  6915  0487  1303               	bcf	3,6	;RP1=0, select bank1
  6916  0488  0839               	movf	(_x+1)^(0+128),w
  6917  0489  1283               	bcf	3,5	;RP0=0, select bank0
  6918  048A  1303               	bcf	3,6	;RP1=0, select bank0
  6919  048B  00C8               	movwf	trapmf@x+1
  6920  048C  1683               	bsf	3,5	;RP0=1, select bank1
  6921  048D  1303               	bcf	3,6	;RP1=0, select bank1
  6922  048E  083A               	movf	(_x+2)^(0+128),w
  6923  048F  1283               	bcf	3,5	;RP0=0, select bank0
  6924  0490  1303               	bcf	3,6	;RP1=0, select bank0
  6925  0491  00C9               	movwf	trapmf@x+2
  6926  0492  3000               	movlw	0
  6927  0493  00CA               	movwf	trapmf@a
  6928  0494  30E0               	movlw	224
  6929  0495  00CB               	movwf	trapmf@a+1
  6930  0496  3040               	movlw	64
  6931  0497  00CC               	movwf	trapmf@a+2
  6932  0498  3000               	movlw	0
  6933  0499  00CD               	movwf	trapmf@b
  6934  049A  3008               	movlw	8
  6935  049B  00CE               	movwf	trapmf@b+1
  6936  049C  3041               	movlw	65
  6937  049D  00CF               	movwf	trapmf@b+2
  6938  049E  3000               	movlw	0
  6939  049F  00D0               	movwf	trapmf@c
  6940  04A0  3020               	movlw	32
  6941  04A1  00D1               	movwf	trapmf@c+1
  6942  04A2  3041               	movlw	65
  6943  04A3  00D2               	movwf	trapmf@c+2
  6944  04A4  3000               	movlw	0
  6945  04A5  00D3               	movwf	trapmf@d
  6946  04A6  3030               	movlw	48
  6947  04A7  00D4               	movwf	trapmf@d+1
  6948  04A8  3041               	movlw	65
  6949  04A9  00D5               	movwf	trapmf@d+2
  6950  04AA  120A  158A  22FA  120A  118A  	fcall	_trapmf
  6951  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  6952  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  6953  04B1  0847               	movf	?_trapmf,w
  6954  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  6955  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  6956  04B4  00BB               	movwf	_y^(0+128)
  6957  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  6958  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  6959  04B7  0848               	movf	?_trapmf+1,w
  6960  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  6961  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  6962  04BA  00BC               	movwf	(_y+1)^(0+128)
  6963  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  6964  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  6965  04BD  0849               	movf	?_trapmf+2,w
  6966  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  6967  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  6968  04C0  00BD               	movwf	(_y+2)^(0+128)
  6969                           
  6970                           ;main.c: 249: if (y >= fop_rule3)
  6971  04C1  083B               	movf	_y^(0+128),w
  6972  04C2  00F0               	movwf	___ftge@ff1
  6973  04C3  083C               	movf	(_y+1)^(0+128),w
  6974  04C4  00F1               	movwf	___ftge@ff1+1
  6975  04C5  083D               	movf	(_y+2)^(0+128),w
  6976  04C6  00F2               	movwf	___ftge@ff1+2
  6977  04C7  082C               	movf	_fop_rule3^(0+128),w
  6978  04C8  00F3               	movwf	___ftge@ff2
  6979  04C9  082D               	movf	(_fop_rule3+1)^(0+128),w
  6980  04CA  00F4               	movwf	___ftge@ff2+1
  6981  04CB  082E               	movf	(_fop_rule3+2)^(0+128),w
  6982  04CC  00F5               	movwf	___ftge@ff2+2
  6983  04CD  160A  118A  245F  120A  118A  	fcall	___ftge
  6984  04D2  1C03               	btfss	3,0
  6985  04D3  2CE4               	goto	i1l2828
  6986                           
  6987                           ;main.c: 250: {
  6988                           ;main.c: 251: aumenta += fop_rule3;
  6989  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  6990  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  6991  04D6  082C               	movf	_fop_rule3^(0+128),w
  6992  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  6993  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  6994  04D9  00AA               	movwf	___ftadd@f1
  6995  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  6996  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  6997  04DC  082D               	movf	(_fop_rule3+1)^(0+128),w
  6998  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  6999  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  7000  04DF  00AB               	movwf	___ftadd@f1+1
  7001  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  7002  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  7003  04E2  082E               	movf	(_fop_rule3+2)^(0+128),w
  7004  04E3  2CF3               	goto	L5
  7005  04E4                     i1l2828:	
  7006                           ;main.c: 252: }
  7007                           
  7008                           
  7009                           ;main.c: 253: else
  7010                           ;main.c: 254: {
  7011                           ;main.c: 255: aumenta += y;
  7012  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  7013  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  7014  04E6  083B               	movf	_y^(0+128),w
  7015  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  7016  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  7017  04E9  00AA               	movwf	___ftadd@f1
  7018  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  7019  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  7020  04EC  083C               	movf	(_y+1)^(0+128),w
  7021  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  7022  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  7023  04EF  00AB               	movwf	___ftadd@f1+1
  7024  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  7025  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  7026  04F2  083D               	movf	(_y+2)^(0+128),w
  7027  04F3                     L5:	
  7028  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  7029  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  7030  04F5  00AC               	movwf	___ftadd@f1+2
  7031  04F6  086C               	movf	Fuzzy@aumenta,w
  7032  04F7  00AD               	movwf	___ftadd@f2
  7033  04F8  086D               	movf	Fuzzy@aumenta+1,w
  7034  04F9  00AE               	movwf	___ftadd@f2+1
  7035  04FA  086E               	movf	Fuzzy@aumenta+2,w
  7036  04FB  00AF               	movwf	___ftadd@f2+2
  7037  04FC  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7038  0501  1283               	bcf	3,5	;RP0=0, select bank0
  7039  0502  1303               	bcf	3,6	;RP1=0, select bank0
  7040  0503  082A               	movf	?___ftadd,w
  7041  0504  00EC               	movwf	Fuzzy@aumenta
  7042  0505  082B               	movf	?___ftadd+1,w
  7043  0506  00ED               	movwf	Fuzzy@aumenta+1
  7044  0507  082C               	movf	?___ftadd+2,w
  7045  0508  00EE               	movwf	Fuzzy@aumenta+2
  7046                           
  7047                           ;main.c: 256: }
  7048                           ;main.c: 258: x=x+1;
  7049  0509  3000               	movlw	0
  7050  050A  00AA               	movwf	___ftadd@f1
  7051  050B  3080               	movlw	128
  7052  050C  00AB               	movwf	___ftadd@f1+1
  7053  050D  303F               	movlw	63
  7054  050E  00AC               	movwf	___ftadd@f1+2
  7055  050F  1683               	bsf	3,5	;RP0=1, select bank1
  7056  0510  1303               	bcf	3,6	;RP1=0, select bank1
  7057  0511  0838               	movf	_x^(0+128),w
  7058  0512  1283               	bcf	3,5	;RP0=0, select bank0
  7059  0513  1303               	bcf	3,6	;RP1=0, select bank0
  7060  0514  00AD               	movwf	___ftadd@f2
  7061  0515  1683               	bsf	3,5	;RP0=1, select bank1
  7062  0516  1303               	bcf	3,6	;RP1=0, select bank1
  7063  0517  0839               	movf	(_x+1)^(0+128),w
  7064  0518  1283               	bcf	3,5	;RP0=0, select bank0
  7065  0519  1303               	bcf	3,6	;RP1=0, select bank0
  7066  051A  00AE               	movwf	___ftadd@f2+1
  7067  051B  1683               	bsf	3,5	;RP0=1, select bank1
  7068  051C  1303               	bcf	3,6	;RP1=0, select bank1
  7069  051D  083A               	movf	(_x+2)^(0+128),w
  7070  051E  1283               	bcf	3,5	;RP0=0, select bank0
  7071  051F  1303               	bcf	3,6	;RP1=0, select bank0
  7072  0520  00AF               	movwf	___ftadd@f2+2
  7073  0521  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7074  0526  1283               	bcf	3,5	;RP0=0, select bank0
  7075  0527  1303               	bcf	3,6	;RP1=0, select bank0
  7076  0528  082A               	movf	?___ftadd,w
  7077  0529  1683               	bsf	3,5	;RP0=1, select bank1
  7078  052A  1303               	bcf	3,6	;RP1=0, select bank1
  7079  052B  00B8               	movwf	_x^(0+128)
  7080  052C  1283               	bcf	3,5	;RP0=0, select bank0
  7081  052D  1303               	bcf	3,6	;RP1=0, select bank0
  7082  052E  082B               	movf	?___ftadd+1,w
  7083  052F  1683               	bsf	3,5	;RP0=1, select bank1
  7084  0530  1303               	bcf	3,6	;RP1=0, select bank1
  7085  0531  00B9               	movwf	(_x+1)^(0+128)
  7086  0532  1283               	bcf	3,5	;RP0=0, select bank0
  7087  0533  1303               	bcf	3,6	;RP1=0, select bank0
  7088  0534  082C               	movf	?___ftadd+2,w
  7089  0535  1683               	bsf	3,5	;RP0=1, select bank1
  7090  0536  1303               	bcf	3,6	;RP1=0, select bank1
  7091  0537  00BA               	movwf	(_x+2)^(0+128)
  7092  0538  3001               	movlw	1
  7093  0539  1283               	bcf	3,5	;RP0=0, select bank0
  7094  053A  1303               	bcf	3,6	;RP1=0, select bank0
  7095  053B  07DD               	addwf	Fuzzy@a_238,f
  7096  053C  1803               	skipnc
  7097  053D  0ADE               	incf	Fuzzy@a_238+1,f
  7098  053E  3000               	movlw	0
  7099  053F  07DE               	addwf	Fuzzy@a_238+1,f
  7100  0540  085E               	movf	Fuzzy@a_238+1,w
  7101  0541  3A80               	xorlw	128
  7102  0542  00FF               	movwf	127
  7103  0543  3080               	movlw	128
  7104  0544  027F               	subwf	127,w
  7105  0545  1D03               	skipz
  7106  0546  2D49               	goto	u349_25
  7107  0547  300B               	movlw	11
  7108  0548  025D               	subwf	Fuzzy@a_238,w
  7109  0549                     u349_25:	
  7110  0549  1C03               	skipc
  7111  054A  2C80               	goto	i1l2824
  7112  054B                     i1l2834:	
  7113                           
  7114                           ;main.c: 259: }
  7115                           ;main.c: 261: }
  7116                           ;main.c: 264: for (int a=0; a<1; a++)
  7117  054B  1283               	bcf	3,5	;RP0=0, select bank0
  7118  054C  1303               	bcf	3,6	;RP1=0, select bank0
  7119  054D  01DF               	clrf	Fuzzy@a_239
  7120  054E  01E0               	clrf	Fuzzy@a_239+1
  7121  054F  0860               	movf	Fuzzy@a_239+1,w
  7122  0550  3A80               	xorlw	128
  7123  0551  00FF               	movwf	127
  7124  0552  3080               	movlw	128
  7125  0553  027F               	subwf	127,w
  7126  0554  1D03               	skipz
  7127  0555  2D58               	goto	u350_25
  7128  0556  3001               	movlw	1
  7129  0557  025F               	subwf	Fuzzy@a_239,w
  7130  0558                     u350_25:	
  7131  0558  1803               	btfsc	3,0
  7132  0559  2DC2               	goto	i1l2854
  7133  055A                     i1l2840:	
  7134                           
  7135                           ;main.c: 265: {
  7136                           ;main.c: 266: if (temp < 2.5)
  7137  055A  1683               	bsf	3,5	;RP0=1, select bank1
  7138  055B  1303               	bcf	3,6	;RP1=0, select bank1
  7139  055C  0832               	movf	_temp^(0+128),w
  7140  055D  00F0               	movwf	___ftge@ff1
  7141  055E  0833               	movf	(_temp+1)^(0+128),w
  7142  055F  00F1               	movwf	___ftge@ff1+1
  7143  0560  0834               	movf	(_temp+2)^(0+128),w
  7144  0561  00F2               	movwf	___ftge@ff1+2
  7145  0562  3000               	movlw	0
  7146  0563  00F3               	movwf	___ftge@ff2
  7147  0564  3020               	movlw	32
  7148  0565  00F4               	movwf	___ftge@ff2+1
  7149  0566  3040               	movlw	64
  7150  0567  00F5               	movwf	___ftge@ff2+2
  7151  0568  160A  118A  245F  120A  118A  	fcall	___ftge
  7152  056D  1803               	btfsc	3,0
  7153  056E  2D77               	goto	i1l2844
  7154                           
  7155                           ;main.c: 267: {
  7156                           ;main.c: 268: tip = mantem;
  7157  056F  1283               	bcf	3,5	;RP0=0, select bank0
  7158  0570  1303               	bcf	3,6	;RP1=0, select bank0
  7159  0571  0866               	movf	Fuzzy@mantem,w
  7160  0572  00E3               	movwf	Fuzzy@tip
  7161  0573  0867               	movf	Fuzzy@mantem+1,w
  7162  0574  00E4               	movwf	Fuzzy@tip+1
  7163  0575  0868               	movf	Fuzzy@mantem+2,w
  7164  0576  2DB0               	goto	L7
  7165  0577                     i1l2844:	
  7166                           ;main.c: 269: }else
  7167                           
  7168                           
  7169                           ;main.c: 270: if (temp >= 2.5 && temp < 7.5)
  7170  0577  1683               	bsf	3,5	;RP0=1, select bank1
  7171  0578  1303               	bcf	3,6	;RP1=0, select bank1
  7172  0579  0832               	movf	_temp^(0+128),w
  7173  057A  00F0               	movwf	___ftge@ff1
  7174  057B  0833               	movf	(_temp+1)^(0+128),w
  7175  057C  00F1               	movwf	___ftge@ff1+1
  7176  057D  0834               	movf	(_temp+2)^(0+128),w
  7177  057E  00F2               	movwf	___ftge@ff1+2
  7178  057F  3000               	movlw	0
  7179  0580  00F3               	movwf	___ftge@ff2
  7180  0581  3020               	movlw	32
  7181  0582  00F4               	movwf	___ftge@ff2+1
  7182  0583  3040               	movlw	64
  7183  0584  00F5               	movwf	___ftge@ff2+2
  7184  0585  160A  118A  245F  120A  118A  	fcall	___ftge
  7185  058A  1C03               	btfss	3,0
  7186  058B  2DA9               	goto	i1l2850
  7187  058C  1683               	bsf	3,5	;RP0=1, select bank1
  7188  058D  1303               	bcf	3,6	;RP1=0, select bank1
  7189  058E  0832               	movf	_temp^(0+128),w
  7190  058F  00F0               	movwf	___ftge@ff1
  7191  0590  0833               	movf	(_temp+1)^(0+128),w
  7192  0591  00F1               	movwf	___ftge@ff1+1
  7193  0592  0834               	movf	(_temp+2)^(0+128),w
  7194  0593  00F2               	movwf	___ftge@ff1+2
  7195  0594  3000               	movlw	0
  7196  0595  00F3               	movwf	___ftge@ff2
  7197  0596  30F0               	movlw	240
  7198  0597  00F4               	movwf	___ftge@ff2+1
  7199  0598  3040               	movlw	64
  7200  0599  00F5               	movwf	___ftge@ff2+2
  7201  059A  160A  118A  245F  120A  118A  	fcall	___ftge
  7202  059F  1803               	btfsc	3,0
  7203  05A0  2DA9               	goto	i1l2850
  7204                           
  7205                           ;main.c: 271: {
  7206                           ;main.c: 272: tip = reduz;
  7207  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  7208  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  7209  05A3  0869               	movf	Fuzzy@reduz,w
  7210  05A4  00E3               	movwf	Fuzzy@tip
  7211  05A5  086A               	movf	Fuzzy@reduz+1,w
  7212  05A6  00E4               	movwf	Fuzzy@tip+1
  7213  05A7  086B               	movf	Fuzzy@reduz+2,w
  7214  05A8  2DB0               	goto	L7
  7215  05A9                     i1l2850:	
  7216                           ;main.c: 273: }else
  7217                           
  7218                           
  7219                           ;main.c: 274: {
  7220                           ;main.c: 275: tip = aumenta;
  7221  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  7222  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  7223  05AB  086C               	movf	Fuzzy@aumenta,w
  7224  05AC  00E3               	movwf	Fuzzy@tip
  7225  05AD  086D               	movf	Fuzzy@aumenta+1,w
  7226  05AE  00E4               	movwf	Fuzzy@tip+1
  7227  05AF  086E               	movf	Fuzzy@aumenta+2,w
  7228  05B0                     L7:	
  7229  05B0  00E5               	movwf	Fuzzy@tip+2
  7230  05B1  3001               	movlw	1
  7231  05B2  07DF               	addwf	Fuzzy@a_239,f
  7232  05B3  1803               	skipnc
  7233  05B4  0AE0               	incf	Fuzzy@a_239+1,f
  7234  05B5  3000               	movlw	0
  7235  05B6  07E0               	addwf	Fuzzy@a_239+1,f
  7236  05B7  0860               	movf	Fuzzy@a_239+1,w
  7237  05B8  3A80               	xorlw	128
  7238  05B9  00FF               	movwf	127
  7239  05BA  3080               	movlw	128
  7240  05BB  027F               	subwf	127,w
  7241  05BC  1D03               	skipz
  7242  05BD  2DC0               	goto	u354_25
  7243  05BE  3001               	movlw	1
  7244  05BF  025F               	subwf	Fuzzy@a_239,w
  7245  05C0                     u354_25:	
  7246  05C0  1C03               	skipc
  7247  05C1  2D5A               	goto	i1l2840
  7248  05C2                     i1l2854:	
  7249                           
  7250                           ;main.c: 276: }
  7251                           ;main.c: 277: }
  7252                           ;main.c: 280: x = 0;
  7253  05C2  3000               	movlw	0
  7254  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  7255  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  7256  05C5  00B8               	movwf	_x^(0+128)
  7257  05C6  3000               	movlw	0
  7258  05C7  00B9               	movwf	(_x+1)^(0+128)
  7259  05C8  3000               	movlw	0
  7260  05C9  00BA               	movwf	(_x+2)^(0+128)
  7261                           
  7262                           ;main.c: 281: total_area = 0;
  7263  05CA  3000               	movlw	0
  7264  05CB  00B5               	movwf	_total_area^(0+128)
  7265  05CC  3000               	movlw	0
  7266  05CD  00B6               	movwf	(_total_area+1)^(0+128)
  7267  05CE  3000               	movlw	0
  7268  05CF  00B7               	movwf	(_total_area+2)^(0+128)
  7269                           
  7270                           ;main.c: 282: sum = 0;
  7271  05D0  3000               	movlw	0
  7272  05D1  00AF               	movwf	_sum^(0+128)
  7273  05D2  3000               	movlw	0
  7274  05D3  00B0               	movwf	(_sum+1)^(0+128)
  7275  05D4  3000               	movlw	0
  7276  05D5  00B1               	movwf	(_sum+2)^(0+128)
  7277                           
  7278                           ;main.c: 283: for (int a=0; a<1; a++)
  7279  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  7280  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  7281  05D8  01E1               	clrf	Fuzzy@a_240
  7282  05D9  01E2               	clrf	Fuzzy@a_240+1
  7283  05DA  0862               	movf	Fuzzy@a_240+1,w
  7284  05DB  3A80               	xorlw	128
  7285  05DC  00FF               	movwf	127
  7286  05DD  3080               	movlw	128
  7287  05DE  027F               	subwf	127,w
  7288  05DF  1D03               	skipz
  7289  05E0  2DE3               	goto	u355_25
  7290  05E1  3001               	movlw	1
  7291  05E2  0261               	subwf	Fuzzy@a_240,w
  7292  05E3                     u355_25:	
  7293  05E3  1803               	btfsc	3,0
  7294  05E4  2E9C               	goto	i1l2868
  7295  05E5                     i1l2862:	
  7296                           
  7297                           ;main.c: 284: {
  7298                           ;main.c: 285: total_area = total_area + tip;
  7299  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  7300  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  7301  05E7  0863               	movf	Fuzzy@tip,w
  7302  05E8  00AA               	movwf	___ftadd@f1
  7303  05E9  0864               	movf	Fuzzy@tip+1,w
  7304  05EA  00AB               	movwf	___ftadd@f1+1
  7305  05EB  0865               	movf	Fuzzy@tip+2,w
  7306  05EC  00AC               	movwf	___ftadd@f1+2
  7307  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  7308  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  7309  05EF  0835               	movf	_total_area^(0+128),w
  7310  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  7311  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  7312  05F2  00AD               	movwf	___ftadd@f2
  7313  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  7314  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  7315  05F5  0836               	movf	(_total_area+1)^(0+128),w
  7316  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  7317  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  7318  05F8  00AE               	movwf	___ftadd@f2+1
  7319  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  7320  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  7321  05FB  0837               	movf	(_total_area+2)^(0+128),w
  7322  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  7323  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  7324  05FE  00AF               	movwf	___ftadd@f2+2
  7325  05FF  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7326  0604  1283               	bcf	3,5	;RP0=0, select bank0
  7327  0605  1303               	bcf	3,6	;RP1=0, select bank0
  7328  0606  082A               	movf	?___ftadd,w
  7329  0607  1683               	bsf	3,5	;RP0=1, select bank1
  7330  0608  1303               	bcf	3,6	;RP1=0, select bank1
  7331  0609  00B5               	movwf	_total_area^(0+128)
  7332  060A  1283               	bcf	3,5	;RP0=0, select bank0
  7333  060B  1303               	bcf	3,6	;RP1=0, select bank0
  7334  060C  082B               	movf	?___ftadd+1,w
  7335  060D  1683               	bsf	3,5	;RP0=1, select bank1
  7336  060E  1303               	bcf	3,6	;RP1=0, select bank1
  7337  060F  00B6               	movwf	(_total_area+1)^(0+128)
  7338  0610  1283               	bcf	3,5	;RP0=0, select bank0
  7339  0611  1303               	bcf	3,6	;RP1=0, select bank0
  7340  0612  082C               	movf	?___ftadd+2,w
  7341  0613  1683               	bsf	3,5	;RP0=1, select bank1
  7342  0614  1303               	bcf	3,6	;RP1=0, select bank1
  7343  0615  00B7               	movwf	(_total_area+2)^(0+128)
  7344                           
  7345                           ;main.c: 286: sum = sum + (x * tip);
  7346  0616  082F               	movf	_sum^(0+128),w
  7347  0617  1283               	bcf	3,5	;RP0=0, select bank0
  7348  0618  1303               	bcf	3,6	;RP1=0, select bank0
  7349  0619  00AA               	movwf	___ftadd@f1
  7350  061A  1683               	bsf	3,5	;RP0=1, select bank1
  7351  061B  1303               	bcf	3,6	;RP1=0, select bank1
  7352  061C  0830               	movf	(_sum+1)^(0+128),w
  7353  061D  1283               	bcf	3,5	;RP0=0, select bank0
  7354  061E  1303               	bcf	3,6	;RP1=0, select bank0
  7355  061F  00AB               	movwf	___ftadd@f1+1
  7356  0620  1683               	bsf	3,5	;RP0=1, select bank1
  7357  0621  1303               	bcf	3,6	;RP1=0, select bank1
  7358  0622  0831               	movf	(_sum+2)^(0+128),w
  7359  0623  1283               	bcf	3,5	;RP0=0, select bank0
  7360  0624  1303               	bcf	3,6	;RP1=0, select bank0
  7361  0625  00AC               	movwf	___ftadd@f1+2
  7362  0626  0863               	movf	Fuzzy@tip,w
  7363  0627  00F8               	movwf	___ftmul@f1
  7364  0628  0864               	movf	Fuzzy@tip+1,w
  7365  0629  00F9               	movwf	___ftmul@f1+1
  7366  062A  0865               	movf	Fuzzy@tip+2,w
  7367  062B  00FA               	movwf	___ftmul@f1+2
  7368  062C  1683               	bsf	3,5	;RP0=1, select bank1
  7369  062D  1303               	bcf	3,6	;RP1=0, select bank1
  7370  062E  0838               	movf	_x^(0+128),w
  7371  062F  00FB               	movwf	___ftmul@f2
  7372  0630  0839               	movf	(_x+1)^(0+128),w
  7373  0631  00FC               	movwf	___ftmul@f2+1
  7374  0632  083A               	movf	(_x+2)^(0+128),w
  7375  0633  00FD               	movwf	___ftmul@f2+2
  7376  0634  120A  118A  26FE  120A  118A  	fcall	___ftmul
  7377  0639  0878               	movf	?___ftmul,w
  7378  063A  1283               	bcf	3,5	;RP0=0, select bank0
  7379  063B  1303               	bcf	3,6	;RP1=0, select bank0
  7380  063C  00AD               	movwf	___ftadd@f2
  7381  063D  0879               	movf	?___ftmul+1,w
  7382  063E  00AE               	movwf	___ftadd@f2+1
  7383  063F  087A               	movf	?___ftmul+2,w
  7384  0640  00AF               	movwf	___ftadd@f2+2
  7385  0641  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7386  0646  1283               	bcf	3,5	;RP0=0, select bank0
  7387  0647  1303               	bcf	3,6	;RP1=0, select bank0
  7388  0648  082A               	movf	?___ftadd,w
  7389  0649  1683               	bsf	3,5	;RP0=1, select bank1
  7390  064A  1303               	bcf	3,6	;RP1=0, select bank1
  7391  064B  00AF               	movwf	_sum^(0+128)
  7392  064C  1283               	bcf	3,5	;RP0=0, select bank0
  7393  064D  1303               	bcf	3,6	;RP1=0, select bank0
  7394  064E  082B               	movf	?___ftadd+1,w
  7395  064F  1683               	bsf	3,5	;RP0=1, select bank1
  7396  0650  1303               	bcf	3,6	;RP1=0, select bank1
  7397  0651  00B0               	movwf	(_sum+1)^(0+128)
  7398  0652  1283               	bcf	3,5	;RP0=0, select bank0
  7399  0653  1303               	bcf	3,6	;RP1=0, select bank0
  7400  0654  082C               	movf	?___ftadd+2,w
  7401  0655  1683               	bsf	3,5	;RP0=1, select bank1
  7402  0656  1303               	bcf	3,6	;RP1=0, select bank1
  7403  0657  00B1               	movwf	(_sum+2)^(0+128)
  7404                           
  7405                           ;main.c: 288: x=x+1;
  7406  0658  3000               	movlw	0
  7407  0659  1283               	bcf	3,5	;RP0=0, select bank0
  7408  065A  1303               	bcf	3,6	;RP1=0, select bank0
  7409  065B  00AA               	movwf	___ftadd@f1
  7410  065C  3080               	movlw	128
  7411  065D  00AB               	movwf	___ftadd@f1+1
  7412  065E  303F               	movlw	63
  7413  065F  00AC               	movwf	___ftadd@f1+2
  7414  0660  1683               	bsf	3,5	;RP0=1, select bank1
  7415  0661  1303               	bcf	3,6	;RP1=0, select bank1
  7416  0662  0838               	movf	_x^(0+128),w
  7417  0663  1283               	bcf	3,5	;RP0=0, select bank0
  7418  0664  1303               	bcf	3,6	;RP1=0, select bank0
  7419  0665  00AD               	movwf	___ftadd@f2
  7420  0666  1683               	bsf	3,5	;RP0=1, select bank1
  7421  0667  1303               	bcf	3,6	;RP1=0, select bank1
  7422  0668  0839               	movf	(_x+1)^(0+128),w
  7423  0669  1283               	bcf	3,5	;RP0=0, select bank0
  7424  066A  1303               	bcf	3,6	;RP1=0, select bank0
  7425  066B  00AE               	movwf	___ftadd@f2+1
  7426  066C  1683               	bsf	3,5	;RP0=1, select bank1
  7427  066D  1303               	bcf	3,6	;RP1=0, select bank1
  7428  066E  083A               	movf	(_x+2)^(0+128),w
  7429  066F  1283               	bcf	3,5	;RP0=0, select bank0
  7430  0670  1303               	bcf	3,6	;RP1=0, select bank0
  7431  0671  00AF               	movwf	___ftadd@f2+2
  7432  0672  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7433  0677  1283               	bcf	3,5	;RP0=0, select bank0
  7434  0678  1303               	bcf	3,6	;RP1=0, select bank0
  7435  0679  082A               	movf	?___ftadd,w
  7436  067A  1683               	bsf	3,5	;RP0=1, select bank1
  7437  067B  1303               	bcf	3,6	;RP1=0, select bank1
  7438  067C  00B8               	movwf	_x^(0+128)
  7439  067D  1283               	bcf	3,5	;RP0=0, select bank0
  7440  067E  1303               	bcf	3,6	;RP1=0, select bank0
  7441  067F  082B               	movf	?___ftadd+1,w
  7442  0680  1683               	bsf	3,5	;RP0=1, select bank1
  7443  0681  1303               	bcf	3,6	;RP1=0, select bank1
  7444  0682  00B9               	movwf	(_x+1)^(0+128)
  7445  0683  1283               	bcf	3,5	;RP0=0, select bank0
  7446  0684  1303               	bcf	3,6	;RP1=0, select bank0
  7447  0685  082C               	movf	?___ftadd+2,w
  7448  0686  1683               	bsf	3,5	;RP0=1, select bank1
  7449  0687  1303               	bcf	3,6	;RP1=0, select bank1
  7450  0688  00BA               	movwf	(_x+2)^(0+128)
  7451  0689  3001               	movlw	1
  7452  068A  1283               	bcf	3,5	;RP0=0, select bank0
  7453  068B  1303               	bcf	3,6	;RP1=0, select bank0
  7454  068C  07E1               	addwf	Fuzzy@a_240,f
  7455  068D  1803               	skipnc
  7456  068E  0AE2               	incf	Fuzzy@a_240+1,f
  7457  068F  3000               	movlw	0
  7458  0690  07E2               	addwf	Fuzzy@a_240+1,f
  7459  0691  0862               	movf	Fuzzy@a_240+1,w
  7460  0692  3A80               	xorlw	128
  7461  0693  00FF               	movwf	127
  7462  0694  3080               	movlw	128
  7463  0695  027F               	subwf	127,w
  7464  0696  1D03               	skipz
  7465  0697  2E9A               	goto	u356_25
  7466  0698  3001               	movlw	1
  7467  0699  0261               	subwf	Fuzzy@a_240,w
  7468  069A                     u356_25:	
  7469  069A  1C03               	skipc
  7470  069B  2DE5               	goto	i1l2862
  7471  069C                     i1l2868:	
  7472                           
  7473                           ;main.c: 289: }
  7474                           ;main.c: 292: ativa_fan = sum/total_area;
  7475  069C  1683               	bsf	3,5	;RP0=1, select bank1
  7476  069D  1303               	bcf	3,6	;RP1=0, select bank1
  7477  069E  0835               	movf	_total_area^(0+128),w
  7478  069F  1283               	bcf	3,5	;RP0=0, select bank0
  7479  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  7480  06A1  00B7               	movwf	___ftdiv@f2
  7481  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  7482  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  7483  06A4  0836               	movf	(_total_area+1)^(0+128),w
  7484  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  7485  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  7486  06A7  00B8               	movwf	___ftdiv@f2+1
  7487  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  7488  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  7489  06AA  0837               	movf	(_total_area+2)^(0+128),w
  7490  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  7491  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  7492  06AD  00B9               	movwf	___ftdiv@f2+2
  7493  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  7494  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  7495  06B0  082F               	movf	_sum^(0+128),w
  7496  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  7497  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  7498  06B3  00BA               	movwf	___ftdiv@f1
  7499  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  7500  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  7501  06B6  0830               	movf	(_sum+1)^(0+128),w
  7502  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  7503  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  7504  06B9  00BB               	movwf	___ftdiv@f1+1
  7505  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  7506  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  7507  06BC  0831               	movf	(_sum+2)^(0+128),w
  7508  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  7509  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  7510  06BF  00BC               	movwf	___ftdiv@f1+2
  7511  06C0  160A  118A  263F  120A  118A  	fcall	___ftdiv
  7512  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  7513  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  7514  06C7  0837               	movf	?___ftdiv,w
  7515  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  7516  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  7517  06CA  00A0               	movwf	_ativa_fan^(0+128)
  7518  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  7519  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  7520  06CD  0838               	movf	?___ftdiv+1,w
  7521  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  7522  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  7523  06D0  00A1               	movwf	(_ativa_fan+1)^(0+128)
  7524  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  7525  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  7526  06D3  0839               	movf	?___ftdiv+2,w
  7527  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  7528  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  7529  06D6  00A2               	movwf	(_ativa_fan+2)^(0+128)
  7530                           
  7531                           ;main.c: 293: posicao_do_grafico = ativa_fan;
  7532  06D7  0820               	movf	_ativa_fan^(0+128),w
  7533  06D8  1683               	bsf	3,5	;RP0=1, select bank3
  7534  06D9  1703               	bsf	3,6	;RP1=1, select bank3
  7535  06DA  0099               	movwf	_posicao_do_grafico^(0+384)
  7536  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  7537  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  7538  06DD  0821               	movf	(_ativa_fan+1)^(0+128),w
  7539  06DE  1683               	bsf	3,5	;RP0=1, select bank3
  7540  06DF  1703               	bsf	3,6	;RP1=1, select bank3
  7541  06E0  009A               	movwf	(_posicao_do_grafico+1)^(0+384)
  7542  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  7543  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  7544  06E3  0822               	movf	(_ativa_fan+2)^(0+128),w
  7545  06E4  1683               	bsf	3,5	;RP0=1, select bank3
  7546  06E5  1703               	bsf	3,6	;RP1=1, select bank3
  7547  06E6  009B               	movwf	(_posicao_do_grafico+2)^(0+384)
  7548                           
  7549                           ;main.c: 297: if (deltaV >0 && deltaV < 1020)
  7550  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  7551  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  7552  06E9  0841               	movf	(_deltaV+1)^(0+128),w
  7553  06EA  0440               	iorwf	_deltaV^(0+128),w
  7554  06EB  1903               	skipnz
  7555  06EC  0008               	return
  7556  06ED  3003               	movlw	3
  7557  06EE  0241               	subwf	(_deltaV+1)^(0+128),w
  7558  06EF  30FC               	movlw	252
  7559  06F0  1903               	skipnz
  7560  06F1  0240               	subwf	_deltaV^(0+128),w
  7561  06F2  1803               	skipnc
  7562  06F3  0008               	return
  7563                           
  7564                           ;main.c: 298: {
  7565                           ;main.c: 299: PWM_DutyCycle2(deltaV);
  7566  06F4  0841               	movf	(_deltaV+1)^(0+128),w
  7567  06F5  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  7568  06F6  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  7569  06F7  0840               	movf	_deltaV^(0+128),w
  7570  06F8  01F0               	clrf	i1PWM_DutyCycle2@valor
  7571  06F9  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  7572  06FA  160A  118A  21E1   	fcall	i1_PWM_DutyCycle2
  7573  06FD  0008               	return
  7574  06FE                     __end_of_Fuzzy:	
  7575                           
  7576                           	psect	text30
  7577  11E1                     __ptext30:	
  7578 ;; *************** function i1_PWM_DutyCycle2 *****************
  7579 ;; Defined at:
  7580 ;;		line 96 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\pwm.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  valor           2    0[COMMON] int 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;		None
  7585 ;; Return value:  Size  Location     Type
  7586 ;;		None               void
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7594 ;;      Params:         2       0       0       0       0
  7595 ;;      Locals:         0       0       0       0       0
  7596 ;;      Temps:          2       0       0       0       0
  7597 ;;      Totals:         4       0       0       0       0
  7598 ;;Total ram usage:        4 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_Fuzzy
  7604 ;;		_ISR
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           
  7609                           ;psect for function i1_PWM_DutyCycle2
  7610  11E1                     i1_PWM_DutyCycle2:	
  7611                           
  7612                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7613                           
  7614                           ;incstack = 0
  7615                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7616  11E1  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  7617  11E2  00F3               	movwf	??i1_PWM_DutyCycle2+1
  7618  11E3  0870               	movf	i1PWM_DutyCycle2@valor,w
  7619  11E4  00F2               	movwf	??i1_PWM_DutyCycle2
  7620  11E5  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7621  11E6  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7622  11E7  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7623  11E8  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7624  11E9  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7625  11EA  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7626  11EB  0872               	movf	??i1_PWM_DutyCycle2,w
  7627  11EC  1283               	bcf	3,5	;RP0=0, select bank0
  7628  11ED  1303               	bcf	3,6	;RP1=0, select bank0
  7629  11EE  009B               	movwf	27	;volatile
  7630                           
  7631                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7632  11EF  0870               	movf	i1PWM_DutyCycle2@valor,w
  7633  11F0  00F2               	movwf	??i1_PWM_DutyCycle2
  7634  11F1  3003               	movlw	3
  7635  11F2                     u334_25:	
  7636  11F2  1003               	clrc
  7637  11F3  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  7638  11F4  3EFF               	addlw	-1
  7639  11F5  1D03               	skipz
  7640  11F6  29F2               	goto	u334_25
  7641  11F7  1003               	clrc
  7642  11F8  0D72               	rlf	??i1_PWM_DutyCycle2,w
  7643  11F9  380C               	iorlw	12
  7644  11FA  009D               	movwf	29	;volatile
  7645  11FB  0008               	return
  7646  11FC                     __end_ofi1_PWM_DutyCycle2:	
  7647                           
  7648                           	psect	text31
  7649  0889                     __ptext31:	
  7650 ;; *************** function _trimf *****************
  7651 ;; Defined at:
  7652 ;;		line 80 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  x               3   39[BANK0 ] float 
  7655 ;;  a               3   42[BANK0 ] float 
  7656 ;;  b               3   45[BANK0 ] float 
  7657 ;;  c               3   48[BANK0 ] float 
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;  ua              3   51[BANK0 ] float 
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  3   39[BANK0 ] float 
  7662 ;; Registers used:
  7663 ;;		wreg, status,2, status,0, pclath, cstack
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7669 ;;      Params:         0      12       0       0       0
  7670 ;;      Locals:         0       3       0       0       0
  7671 ;;      Temps:          0       0       0       0       0
  7672 ;;      Totals:         0      15       0       0       0
  7673 ;;Total ram usage:       15 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:    2
  7676 ;; This function calls:
  7677 ;;		___ftadd
  7678 ;;		___ftdiv
  7679 ;;		___ftge
  7680 ;;		___ftneg
  7681 ;; This function is called by:
  7682 ;;		_Fuzzy
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           
  7687                           ;psect for function _trimf
  7688  0889                     _trimf:	
  7689                           
  7690                           ;main.c: 82: float ua = 0;
  7691                           
  7692                           ;incstack = 0
  7693                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7694  0889  3000               	movlw	0
  7695  088A  1283               	bcf	3,5	;RP0=0, select bank0
  7696  088B  1303               	bcf	3,6	;RP1=0, select bank0
  7697  088C  00D3               	movwf	trimf@ua
  7698  088D  3000               	movlw	0
  7699  088E  00D4               	movwf	trimf@ua+1
  7700  088F  3000               	movlw	0
  7701  0890  00D5               	movwf	trimf@ua+2
  7702                           
  7703                           ;main.c: 84: if (x <= a)
  7704  0891  084A               	movf	trimf@a,w
  7705  0892  00F0               	movwf	___ftge@ff1
  7706  0893  084B               	movf	trimf@a+1,w
  7707  0894  00F1               	movwf	___ftge@ff1+1
  7708  0895  084C               	movf	trimf@a+2,w
  7709  0896  00F2               	movwf	___ftge@ff1+2
  7710  0897  0847               	movf	trimf@x,w
  7711  0898  00F3               	movwf	___ftge@ff2
  7712  0899  0848               	movf	trimf@x+1,w
  7713  089A  00F4               	movwf	___ftge@ff2+1
  7714  089B  0849               	movf	trimf@x+2,w
  7715  089C  00F5               	movwf	___ftge@ff2+2
  7716  089D  160A  118A  245F  120A  158A  	fcall	___ftge
  7717  08A2  1803               	btfsc	3,0
  7718  08A3  299C               	goto	L12
  7719                           
  7720                           ;main.c: 86: else if ((a < x) && (x <= b))
  7721                           
  7722                           ;main.c: 85: ua = 0;
  7723  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  7724  08A5  1303               	bcf	3,6	;RP1=0, select bank0
  7725  08A6  084A               	movf	trimf@a,w
  7726  08A7  00F0               	movwf	___ftge@ff1
  7727  08A8  084B               	movf	trimf@a+1,w
  7728  08A9  00F1               	movwf	___ftge@ff1+1
  7729  08AA  084C               	movf	trimf@a+2,w
  7730  08AB  00F2               	movwf	___ftge@ff1+2
  7731  08AC  0847               	movf	trimf@x,w
  7732  08AD  00F3               	movwf	___ftge@ff2
  7733  08AE  0848               	movf	trimf@x+1,w
  7734  08AF  00F4               	movwf	___ftge@ff2+1
  7735  08B0  0849               	movf	trimf@x+2,w
  7736  08B1  00F5               	movwf	___ftge@ff2+2
  7737  08B2  160A  118A  245F  120A  158A  	fcall	___ftge
  7738  08B7  1803               	btfsc	3,0
  7739  08B8  2902               	goto	i1l2450
  7740  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  7741  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  7742  08BB  084D               	movf	trimf@b,w
  7743  08BC  00F0               	movwf	___ftge@ff1
  7744  08BD  084E               	movf	trimf@b+1,w
  7745  08BE  00F1               	movwf	___ftge@ff1+1
  7746  08BF  084F               	movf	trimf@b+2,w
  7747  08C0  00F2               	movwf	___ftge@ff1+2
  7748  08C1  0847               	movf	trimf@x,w
  7749  08C2  00F3               	movwf	___ftge@ff2
  7750  08C3  0848               	movf	trimf@x+1,w
  7751  08C4  00F4               	movwf	___ftge@ff2+1
  7752  08C5  0849               	movf	trimf@x+2,w
  7753  08C6  00F5               	movwf	___ftge@ff2+2
  7754  08C7  160A  118A  245F  120A  158A  	fcall	___ftge
  7755  08CC  1C03               	btfss	3,0
  7756  08CD  2902               	goto	i1l2450
  7757                           
  7758                           ;main.c: 87: ua = ((x - a) / (b - a));
  7759  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  7760  08CF  1303               	bcf	3,6	;RP1=0, select bank0
  7761  08D0  084D               	movf	trimf@b,w
  7762  08D1  00AA               	movwf	___ftadd@f1
  7763  08D2  084E               	movf	trimf@b+1,w
  7764  08D3  00AB               	movwf	___ftadd@f1+1
  7765  08D4  084F               	movf	trimf@b+2,w
  7766  08D5  00AC               	movwf	___ftadd@f1+2
  7767  08D6  084A               	movf	trimf@a,w
  7768  08D7  00F0               	movwf	___ftneg@f1
  7769  08D8  084B               	movf	trimf@a+1,w
  7770  08D9  00F1               	movwf	___ftneg@f1+1
  7771  08DA  084C               	movf	trimf@a+2,w
  7772  08DB  00F2               	movwf	___ftneg@f1+2
  7773  08DC  160A  118A  2145  120A  158A  	fcall	___ftneg
  7774  08E1  0870               	movf	?___ftneg,w
  7775  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  7776  08E3  1303               	bcf	3,6	;RP1=0, select bank0
  7777  08E4  00AD               	movwf	___ftadd@f2
  7778  08E5  0871               	movf	?___ftneg+1,w
  7779  08E6  00AE               	movwf	___ftadd@f2+1
  7780  08E7  0872               	movf	?___ftneg+2,w
  7781  08E8  00AF               	movwf	___ftadd@f2+2
  7782  08E9  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7783  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  7784  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  7785  08F0  082A               	movf	?___ftadd,w
  7786  08F1  00B7               	movwf	___ftdiv@f2
  7787  08F2  082B               	movf	?___ftadd+1,w
  7788  08F3  00B8               	movwf	___ftdiv@f2+1
  7789  08F4  082C               	movf	?___ftadd+2,w
  7790  08F5  00B9               	movwf	___ftdiv@f2+2
  7791  08F6  0847               	movf	trimf@x,w
  7792  08F7  00AA               	movwf	___ftadd@f1
  7793  08F8  0848               	movf	trimf@x+1,w
  7794  08F9  00AB               	movwf	___ftadd@f1+1
  7795  08FA  0849               	movf	trimf@x+2,w
  7796  08FB  00AC               	movwf	___ftadd@f1+2
  7797  08FC  084A               	movf	trimf@a,w
  7798  08FD  00F0               	movwf	___ftneg@f1
  7799  08FE  084B               	movf	trimf@a+1,w
  7800  08FF  00F1               	movwf	___ftneg@f1+1
  7801  0900  084C               	movf	trimf@a+2,w
  7802  0901  295F               	goto	L13
  7803  0902                     i1l2450:	
  7804                           
  7805                           ;main.c: 88: else if ((b < x) && (x <= c))
  7806  0902  1283               	bcf	3,5	;RP0=0, select bank0
  7807  0903  1303               	bcf	3,6	;RP1=0, select bank0
  7808  0904  084D               	movf	trimf@b,w
  7809  0905  00F0               	movwf	___ftge@ff1
  7810  0906  084E               	movf	trimf@b+1,w
  7811  0907  00F1               	movwf	___ftge@ff1+1
  7812  0908  084F               	movf	trimf@b+2,w
  7813  0909  00F2               	movwf	___ftge@ff1+2
  7814  090A  0847               	movf	trimf@x,w
  7815  090B  00F3               	movwf	___ftge@ff2
  7816  090C  0848               	movf	trimf@x+1,w
  7817  090D  00F4               	movwf	___ftge@ff2+1
  7818  090E  0849               	movf	trimf@x+2,w
  7819  090F  00F5               	movwf	___ftge@ff2+2
  7820  0910  160A  118A  245F  120A  158A  	fcall	___ftge
  7821  0915  1803               	btfsc	3,0
  7822  0916  2987               	goto	i1l2456
  7823  0917  1283               	bcf	3,5	;RP0=0, select bank0
  7824  0918  1303               	bcf	3,6	;RP1=0, select bank0
  7825  0919  0850               	movf	trimf@c,w
  7826  091A  00F0               	movwf	___ftge@ff1
  7827  091B  0851               	movf	trimf@c+1,w
  7828  091C  00F1               	movwf	___ftge@ff1+1
  7829  091D  0852               	movf	trimf@c+2,w
  7830  091E  00F2               	movwf	___ftge@ff1+2
  7831  091F  0847               	movf	trimf@x,w
  7832  0920  00F3               	movwf	___ftge@ff2
  7833  0921  0848               	movf	trimf@x+1,w
  7834  0922  00F4               	movwf	___ftge@ff2+1
  7835  0923  0849               	movf	trimf@x+2,w
  7836  0924  00F5               	movwf	___ftge@ff2+2
  7837  0925  160A  118A  245F  120A  158A  	fcall	___ftge
  7838  092A  1C03               	btfss	3,0
  7839  092B  2987               	goto	i1l2456
  7840                           
  7841                           ;main.c: 89: ua = ((x - c) / (b - c));
  7842  092C  1283               	bcf	3,5	;RP0=0, select bank0
  7843  092D  1303               	bcf	3,6	;RP1=0, select bank0
  7844  092E  084D               	movf	trimf@b,w
  7845  092F  00AA               	movwf	___ftadd@f1
  7846  0930  084E               	movf	trimf@b+1,w
  7847  0931  00AB               	movwf	___ftadd@f1+1
  7848  0932  084F               	movf	trimf@b+2,w
  7849  0933  00AC               	movwf	___ftadd@f1+2
  7850  0934  0850               	movf	trimf@c,w
  7851  0935  00F0               	movwf	___ftneg@f1
  7852  0936  0851               	movf	trimf@c+1,w
  7853  0937  00F1               	movwf	___ftneg@f1+1
  7854  0938  0852               	movf	trimf@c+2,w
  7855  0939  00F2               	movwf	___ftneg@f1+2
  7856  093A  160A  118A  2145  120A  158A  	fcall	___ftneg
  7857  093F  0870               	movf	?___ftneg,w
  7858  0940  1283               	bcf	3,5	;RP0=0, select bank0
  7859  0941  1303               	bcf	3,6	;RP1=0, select bank0
  7860  0942  00AD               	movwf	___ftadd@f2
  7861  0943  0871               	movf	?___ftneg+1,w
  7862  0944  00AE               	movwf	___ftadd@f2+1
  7863  0945  0872               	movf	?___ftneg+2,w
  7864  0946  00AF               	movwf	___ftadd@f2+2
  7865  0947  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7866  094C  1283               	bcf	3,5	;RP0=0, select bank0
  7867  094D  1303               	bcf	3,6	;RP1=0, select bank0
  7868  094E  082A               	movf	?___ftadd,w
  7869  094F  00B7               	movwf	___ftdiv@f2
  7870  0950  082B               	movf	?___ftadd+1,w
  7871  0951  00B8               	movwf	___ftdiv@f2+1
  7872  0952  082C               	movf	?___ftadd+2,w
  7873  0953  00B9               	movwf	___ftdiv@f2+2
  7874  0954  0847               	movf	trimf@x,w
  7875  0955  00AA               	movwf	___ftadd@f1
  7876  0956  0848               	movf	trimf@x+1,w
  7877  0957  00AB               	movwf	___ftadd@f1+1
  7878  0958  0849               	movf	trimf@x+2,w
  7879  0959  00AC               	movwf	___ftadd@f1+2
  7880  095A  0850               	movf	trimf@c,w
  7881  095B  00F0               	movwf	___ftneg@f1
  7882  095C  0851               	movf	trimf@c+1,w
  7883  095D  00F1               	movwf	___ftneg@f1+1
  7884  095E  0852               	movf	trimf@c+2,w
  7885  095F                     L13:	
  7886  095F  00F2               	movwf	___ftneg@f1+2
  7887  0960  160A  118A  2145  120A  158A  	fcall	___ftneg
  7888  0965  0870               	movf	?___ftneg,w
  7889  0966  1283               	bcf	3,5	;RP0=0, select bank0
  7890  0967  1303               	bcf	3,6	;RP1=0, select bank0
  7891  0968  00AD               	movwf	___ftadd@f2
  7892  0969  0871               	movf	?___ftneg+1,w
  7893  096A  00AE               	movwf	___ftadd@f2+1
  7894  096B  0872               	movf	?___ftneg+2,w
  7895  096C  00AF               	movwf	___ftadd@f2+2
  7896  096D  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7897  0972  1283               	bcf	3,5	;RP0=0, select bank0
  7898  0973  1303               	bcf	3,6	;RP1=0, select bank0
  7899  0974  082A               	movf	?___ftadd,w
  7900  0975  00BA               	movwf	___ftdiv@f1
  7901  0976  082B               	movf	?___ftadd+1,w
  7902  0977  00BB               	movwf	___ftdiv@f1+1
  7903  0978  082C               	movf	?___ftadd+2,w
  7904  0979  00BC               	movwf	___ftdiv@f1+2
  7905  097A  160A  118A  263F  120A  158A  	fcall	___ftdiv
  7906  097F  1283               	bcf	3,5	;RP0=0, select bank0
  7907  0980  1303               	bcf	3,6	;RP1=0, select bank0
  7908  0981  0837               	movf	?___ftdiv,w
  7909  0982  00D3               	movwf	trimf@ua
  7910  0983  0838               	movf	?___ftdiv+1,w
  7911  0984  00D4               	movwf	trimf@ua+1
  7912  0985  0839               	movf	?___ftdiv+2,w
  7913  0986  29A3               	goto	L10
  7914  0987                     i1l2456:	
  7915                           
  7916                           ;main.c: 90: else if (x > c)
  7917  0987  1283               	bcf	3,5	;RP0=0, select bank0
  7918  0988  1303               	bcf	3,6	;RP1=0, select bank0
  7919  0989  0850               	movf	trimf@c,w
  7920  098A  00F0               	movwf	___ftge@ff1
  7921  098B  0851               	movf	trimf@c+1,w
  7922  098C  00F1               	movwf	___ftge@ff1+1
  7923  098D  0852               	movf	trimf@c+2,w
  7924  098E  00F2               	movwf	___ftge@ff1+2
  7925  098F  0847               	movf	trimf@x,w
  7926  0990  00F3               	movwf	___ftge@ff2
  7927  0991  0848               	movf	trimf@x+1,w
  7928  0992  00F4               	movwf	___ftge@ff2+1
  7929  0993  0849               	movf	trimf@x+2,w
  7930  0994  00F5               	movwf	___ftge@ff2+2
  7931  0995  160A  118A  245F  120A  158A  	fcall	___ftge
  7932  099A  1803               	btfsc	3,0
  7933  099B  29A4               	goto	i1l128
  7934  099C                     L12:	
  7935                           
  7936                           ;main.c: 91: ua = 0;
  7937  099C  3000               	movlw	0
  7938  099D  1283               	bcf	3,5	;RP0=0, select bank0
  7939  099E  1303               	bcf	3,6	;RP1=0, select bank0
  7940  099F  00D3               	movwf	trimf@ua
  7941  09A0  3000               	movlw	0
  7942  09A1  00D4               	movwf	trimf@ua+1
  7943  09A2  3000               	movlw	0
  7944  09A3                     L10:	
  7945  09A3  00D5               	movwf	trimf@ua+2
  7946  09A4                     i1l128:	
  7947                           
  7948                           ;main.c: 93: return(ua);
  7949  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  7950  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  7951  09A6  0853               	movf	trimf@ua,w
  7952  09A7  00C7               	movwf	?_trimf
  7953  09A8  0854               	movf	trimf@ua+1,w
  7954  09A9  00C8               	movwf	?_trimf+1
  7955  09AA  0855               	movf	trimf@ua+2,w
  7956  09AB  00C9               	movwf	?_trimf+2
  7957  09AC  0008               	return
  7958  09AD                     __end_of_trimf:	
  7959                           
  7960                           	psect	text32
  7961  0AFA                     __ptext32:	
  7962 ;; *************** function _trapmf *****************
  7963 ;; Defined at:
  7964 ;;		line 99 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  x               3   39[BANK0 ] float 
  7967 ;;  a               3   42[BANK0 ] float 
  7968 ;;  b               3   45[BANK0 ] float 
  7969 ;;  c               3   48[BANK0 ] float 
  7970 ;;  d               3   51[BANK0 ] float 
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;  ua              3   54[BANK0 ] float 
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  3   39[BANK0 ] float 
  7975 ;; Registers used:
  7976 ;;		wreg, status,2, status,0, pclath, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7982 ;;      Params:         0      15       0       0       0
  7983 ;;      Locals:         0       3       0       0       0
  7984 ;;      Temps:          0       0       0       0       0
  7985 ;;      Totals:         0      18       0       0       0
  7986 ;;Total ram usage:       18 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    2
  7989 ;; This function calls:
  7990 ;;		___ftadd
  7991 ;;		___ftdiv
  7992 ;;		___ftge
  7993 ;;		___ftneg
  7994 ;; This function is called by:
  7995 ;;		_Fuzzy
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           
  8000                           ;psect for function _trapmf
  8001  0AFA                     _trapmf:	
  8002                           
  8003                           ;main.c: 101: float ua = 0;
  8004                           
  8005                           ;incstack = 0
  8006                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  8007  0AFA  3000               	movlw	0
  8008  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  8009  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  8010  0AFD  00D6               	movwf	trapmf@ua
  8011  0AFE  3000               	movlw	0
  8012  0AFF  00D7               	movwf	trapmf@ua+1
  8013  0B00  3000               	movlw	0
  8014  0B01  00D8               	movwf	trapmf@ua+2
  8015                           
  8016                           ;main.c: 103: if (x <= a)
  8017  0B02  084A               	movf	trapmf@a,w
  8018  0B03  00F0               	movwf	___ftge@ff1
  8019  0B04  084B               	movf	trapmf@a+1,w
  8020  0B05  00F1               	movwf	___ftge@ff1+1
  8021  0B06  084C               	movf	trapmf@a+2,w
  8022  0B07  00F2               	movwf	___ftge@ff1+2
  8023  0B08  0847               	movf	trapmf@x,w
  8024  0B09  00F3               	movwf	___ftge@ff2
  8025  0B0A  0848               	movf	trapmf@x+1,w
  8026  0B0B  00F4               	movwf	___ftge@ff2+1
  8027  0B0C  0849               	movf	trapmf@x+2,w
  8028  0B0D  00F5               	movwf	___ftge@ff2+2
  8029  0B0E  160A  118A  245F  120A  158A  	fcall	___ftge
  8030  0B13  1803               	btfsc	3,0
  8031  0B14  2C3F               	goto	L18
  8032                           
  8033                           ;main.c: 105: else if ((a < x) && (x <= b))
  8034                           
  8035                           ;main.c: 104: ua = 0;
  8036  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  8037  0B16  1303               	bcf	3,6	;RP1=0, select bank0
  8038  0B17  084A               	movf	trapmf@a,w
  8039  0B18  00F0               	movwf	___ftge@ff1
  8040  0B19  084B               	movf	trapmf@a+1,w
  8041  0B1A  00F1               	movwf	___ftge@ff1+1
  8042  0B1B  084C               	movf	trapmf@a+2,w
  8043  0B1C  00F2               	movwf	___ftge@ff1+2
  8044  0B1D  0847               	movf	trapmf@x,w
  8045  0B1E  00F3               	movwf	___ftge@ff2
  8046  0B1F  0848               	movf	trapmf@x+1,w
  8047  0B20  00F4               	movwf	___ftge@ff2+1
  8048  0B21  0849               	movf	trapmf@x+2,w
  8049  0B22  00F5               	movwf	___ftge@ff2+2
  8050  0B23  160A  118A  245F  120A  158A  	fcall	___ftge
  8051  0B28  1803               	btfsc	3,0
  8052  0B29  2B73               	goto	i1l2474
  8053  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  8054  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  8055  0B2C  084D               	movf	trapmf@b,w
  8056  0B2D  00F0               	movwf	___ftge@ff1
  8057  0B2E  084E               	movf	trapmf@b+1,w
  8058  0B2F  00F1               	movwf	___ftge@ff1+1
  8059  0B30  084F               	movf	trapmf@b+2,w
  8060  0B31  00F2               	movwf	___ftge@ff1+2
  8061  0B32  0847               	movf	trapmf@x,w
  8062  0B33  00F3               	movwf	___ftge@ff2
  8063  0B34  0848               	movf	trapmf@x+1,w
  8064  0B35  00F4               	movwf	___ftge@ff2+1
  8065  0B36  0849               	movf	trapmf@x+2,w
  8066  0B37  00F5               	movwf	___ftge@ff2+2
  8067  0B38  160A  118A  245F  120A  158A  	fcall	___ftge
  8068  0B3D  1C03               	btfss	3,0
  8069  0B3E  2B73               	goto	i1l2474
  8070                           
  8071                           ;main.c: 106: ua = ((x - a) / (b - a));
  8072  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  8073  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  8074  0B41  084D               	movf	trapmf@b,w
  8075  0B42  00AA               	movwf	___ftadd@f1
  8076  0B43  084E               	movf	trapmf@b+1,w
  8077  0B44  00AB               	movwf	___ftadd@f1+1
  8078  0B45  084F               	movf	trapmf@b+2,w
  8079  0B46  00AC               	movwf	___ftadd@f1+2
  8080  0B47  084A               	movf	trapmf@a,w
  8081  0B48  00F0               	movwf	___ftneg@f1
  8082  0B49  084B               	movf	trapmf@a+1,w
  8083  0B4A  00F1               	movwf	___ftneg@f1+1
  8084  0B4B  084C               	movf	trapmf@a+2,w
  8085  0B4C  00F2               	movwf	___ftneg@f1+2
  8086  0B4D  160A  118A  2145  120A  158A  	fcall	___ftneg
  8087  0B52  0870               	movf	?___ftneg,w
  8088  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  8089  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  8090  0B55  00AD               	movwf	___ftadd@f2
  8091  0B56  0871               	movf	?___ftneg+1,w
  8092  0B57  00AE               	movwf	___ftadd@f2+1
  8093  0B58  0872               	movf	?___ftneg+2,w
  8094  0B59  00AF               	movwf	___ftadd@f2+2
  8095  0B5A  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8096  0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  8097  0B60  1303               	bcf	3,6	;RP1=0, select bank0
  8098  0B61  082A               	movf	?___ftadd,w
  8099  0B62  00B7               	movwf	___ftdiv@f2
  8100  0B63  082B               	movf	?___ftadd+1,w
  8101  0B64  00B8               	movwf	___ftdiv@f2+1
  8102  0B65  082C               	movf	?___ftadd+2,w
  8103  0B66  00B9               	movwf	___ftdiv@f2+2
  8104  0B67  0847               	movf	trapmf@x,w
  8105  0B68  00AA               	movwf	___ftadd@f1
  8106  0B69  0848               	movf	trapmf@x+1,w
  8107  0B6A  00AB               	movwf	___ftadd@f1+1
  8108  0B6B  0849               	movf	trapmf@x+2,w
  8109  0B6C  00AC               	movwf	___ftadd@f1+2
  8110  0B6D  084A               	movf	trapmf@a,w
  8111  0B6E  00F0               	movwf	___ftneg@f1
  8112  0B6F  084B               	movf	trapmf@a+1,w
  8113  0B70  00F1               	movwf	___ftneg@f1+1
  8114  0B71  084C               	movf	trapmf@a+2,w
  8115  0B72  2C02               	goto	L20
  8116  0B73                     i1l2474:	
  8117                           
  8118                           ;main.c: 107: else if ((b <= x) && (x <= c))
  8119  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  8120  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  8121  0B75  0847               	movf	trapmf@x,w
  8122  0B76  00F0               	movwf	___ftge@ff1
  8123  0B77  0848               	movf	trapmf@x+1,w
  8124  0B78  00F1               	movwf	___ftge@ff1+1
  8125  0B79  0849               	movf	trapmf@x+2,w
  8126  0B7A  00F2               	movwf	___ftge@ff1+2
  8127  0B7B  084D               	movf	trapmf@b,w
  8128  0B7C  00F3               	movwf	___ftge@ff2
  8129  0B7D  084E               	movf	trapmf@b+1,w
  8130  0B7E  00F4               	movwf	___ftge@ff2+1
  8131  0B7F  084F               	movf	trapmf@b+2,w
  8132  0B80  00F5               	movwf	___ftge@ff2+2
  8133  0B81  160A  118A  245F  120A  158A  	fcall	___ftge
  8134  0B86  1C03               	btfss	3,0
  8135  0B87  2BA5               	goto	i1l2480
  8136  0B88  1283               	bcf	3,5	;RP0=0, select bank0
  8137  0B89  1303               	bcf	3,6	;RP1=0, select bank0
  8138  0B8A  0850               	movf	trapmf@c,w
  8139  0B8B  00F0               	movwf	___ftge@ff1
  8140  0B8C  0851               	movf	trapmf@c+1,w
  8141  0B8D  00F1               	movwf	___ftge@ff1+1
  8142  0B8E  0852               	movf	trapmf@c+2,w
  8143  0B8F  00F2               	movwf	___ftge@ff1+2
  8144  0B90  0847               	movf	trapmf@x,w
  8145  0B91  00F3               	movwf	___ftge@ff2
  8146  0B92  0848               	movf	trapmf@x+1,w
  8147  0B93  00F4               	movwf	___ftge@ff2+1
  8148  0B94  0849               	movf	trapmf@x+2,w
  8149  0B95  00F5               	movwf	___ftge@ff2+2
  8150  0B96  160A  118A  245F  120A  158A  	fcall	___ftge
  8151  0B9B  1C03               	btfss	3,0
  8152  0B9C  2BA5               	goto	i1l2480
  8153                           
  8154                           ;main.c: 108: ua = 1;
  8155  0B9D  3000               	movlw	0
  8156  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  8157  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  8158  0BA0  00D6               	movwf	trapmf@ua
  8159  0BA1  3080               	movlw	128
  8160  0BA2  00D7               	movwf	trapmf@ua+1
  8161  0BA3  303F               	movlw	63
  8162  0BA4  2C46               	goto	L17
  8163  0BA5                     i1l2480:	
  8164                           
  8165                           ;main.c: 109: else if ((c < x) && (x <= d))
  8166  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  8167  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  8168  0BA7  0850               	movf	trapmf@c,w
  8169  0BA8  00F0               	movwf	___ftge@ff1
  8170  0BA9  0851               	movf	trapmf@c+1,w
  8171  0BAA  00F1               	movwf	___ftge@ff1+1
  8172  0BAB  0852               	movf	trapmf@c+2,w
  8173  0BAC  00F2               	movwf	___ftge@ff1+2
  8174  0BAD  0847               	movf	trapmf@x,w
  8175  0BAE  00F3               	movwf	___ftge@ff2
  8176  0BAF  0848               	movf	trapmf@x+1,w
  8177  0BB0  00F4               	movwf	___ftge@ff2+1
  8178  0BB1  0849               	movf	trapmf@x+2,w
  8179  0BB2  00F5               	movwf	___ftge@ff2+2
  8180  0BB3  160A  118A  245F  120A  158A  	fcall	___ftge
  8181  0BB8  1803               	btfsc	3,0
  8182  0BB9  2C2A               	goto	i1l2486
  8183  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  8184  0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  8185  0BBC  0853               	movf	trapmf@d,w
  8186  0BBD  00F0               	movwf	___ftge@ff1
  8187  0BBE  0854               	movf	trapmf@d+1,w
  8188  0BBF  00F1               	movwf	___ftge@ff1+1
  8189  0BC0  0855               	movf	trapmf@d+2,w
  8190  0BC1  00F2               	movwf	___ftge@ff1+2
  8191  0BC2  0847               	movf	trapmf@x,w
  8192  0BC3  00F3               	movwf	___ftge@ff2
  8193  0BC4  0848               	movf	trapmf@x+1,w
  8194  0BC5  00F4               	movwf	___ftge@ff2+1
  8195  0BC6  0849               	movf	trapmf@x+2,w
  8196  0BC7  00F5               	movwf	___ftge@ff2+2
  8197  0BC8  160A  118A  245F  120A  158A  	fcall	___ftge
  8198  0BCD  1C03               	btfss	3,0
  8199  0BCE  2C2A               	goto	i1l2486
  8200                           
  8201                           ;main.c: 110: ua = ((d - x) / (d - c));
  8202  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  8203  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  8204  0BD1  0853               	movf	trapmf@d,w
  8205  0BD2  00AA               	movwf	___ftadd@f1
  8206  0BD3  0854               	movf	trapmf@d+1,w
  8207  0BD4  00AB               	movwf	___ftadd@f1+1
  8208  0BD5  0855               	movf	trapmf@d+2,w
  8209  0BD6  00AC               	movwf	___ftadd@f1+2
  8210  0BD7  0850               	movf	trapmf@c,w
  8211  0BD8  00F0               	movwf	___ftneg@f1
  8212  0BD9  0851               	movf	trapmf@c+1,w
  8213  0BDA  00F1               	movwf	___ftneg@f1+1
  8214  0BDB  0852               	movf	trapmf@c+2,w
  8215  0BDC  00F2               	movwf	___ftneg@f1+2
  8216  0BDD  160A  118A  2145  120A  158A  	fcall	___ftneg
  8217  0BE2  0870               	movf	?___ftneg,w
  8218  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  8219  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  8220  0BE5  00AD               	movwf	___ftadd@f2
  8221  0BE6  0871               	movf	?___ftneg+1,w
  8222  0BE7  00AE               	movwf	___ftadd@f2+1
  8223  0BE8  0872               	movf	?___ftneg+2,w
  8224  0BE9  00AF               	movwf	___ftadd@f2+2
  8225  0BEA  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8226  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  8227  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  8228  0BF1  082A               	movf	?___ftadd,w
  8229  0BF2  00B7               	movwf	___ftdiv@f2
  8230  0BF3  082B               	movf	?___ftadd+1,w
  8231  0BF4  00B8               	movwf	___ftdiv@f2+1
  8232  0BF5  082C               	movf	?___ftadd+2,w
  8233  0BF6  00B9               	movwf	___ftdiv@f2+2
  8234  0BF7  0853               	movf	trapmf@d,w
  8235  0BF8  00AA               	movwf	___ftadd@f1
  8236  0BF9  0854               	movf	trapmf@d+1,w
  8237  0BFA  00AB               	movwf	___ftadd@f1+1
  8238  0BFB  0855               	movf	trapmf@d+2,w
  8239  0BFC  00AC               	movwf	___ftadd@f1+2
  8240  0BFD  0847               	movf	trapmf@x,w
  8241  0BFE  00F0               	movwf	___ftneg@f1
  8242  0BFF  0848               	movf	trapmf@x+1,w
  8243  0C00  00F1               	movwf	___ftneg@f1+1
  8244  0C01  0849               	movf	trapmf@x+2,w
  8245  0C02                     L20:	
  8246  0C02  00F2               	movwf	___ftneg@f1+2
  8247  0C03  160A  118A  2145  120A  158A  	fcall	___ftneg
  8248  0C08  0870               	movf	?___ftneg,w
  8249  0C09  1283               	bcf	3,5	;RP0=0, select bank0
  8250  0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  8251  0C0B  00AD               	movwf	___ftadd@f2
  8252  0C0C  0871               	movf	?___ftneg+1,w
  8253  0C0D  00AE               	movwf	___ftadd@f2+1
  8254  0C0E  0872               	movf	?___ftneg+2,w
  8255  0C0F  00AF               	movwf	___ftadd@f2+2
  8256  0C10  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8257  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  8258  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  8259  0C17  082A               	movf	?___ftadd,w
  8260  0C18  00BA               	movwf	___ftdiv@f1
  8261  0C19  082B               	movf	?___ftadd+1,w
  8262  0C1A  00BB               	movwf	___ftdiv@f1+1
  8263  0C1B  082C               	movf	?___ftadd+2,w
  8264  0C1C  00BC               	movwf	___ftdiv@f1+2
  8265  0C1D  160A  118A  263F  120A  158A  	fcall	___ftdiv
  8266  0C22  1283               	bcf	3,5	;RP0=0, select bank0
  8267  0C23  1303               	bcf	3,6	;RP1=0, select bank0
  8268  0C24  0837               	movf	?___ftdiv,w
  8269  0C25  00D6               	movwf	trapmf@ua
  8270  0C26  0838               	movf	?___ftdiv+1,w
  8271  0C27  00D7               	movwf	trapmf@ua+1
  8272  0C28  0839               	movf	?___ftdiv+2,w
  8273  0C29  2C46               	goto	L17
  8274  0C2A                     i1l2486:	
  8275                           
  8276                           ;main.c: 111: else if (x > d)
  8277  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  8278  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  8279  0C2C  0853               	movf	trapmf@d,w
  8280  0C2D  00F0               	movwf	___ftge@ff1
  8281  0C2E  0854               	movf	trapmf@d+1,w
  8282  0C2F  00F1               	movwf	___ftge@ff1+1
  8283  0C30  0855               	movf	trapmf@d+2,w
  8284  0C31  00F2               	movwf	___ftge@ff1+2
  8285  0C32  0847               	movf	trapmf@x,w
  8286  0C33  00F3               	movwf	___ftge@ff2
  8287  0C34  0848               	movf	trapmf@x+1,w
  8288  0C35  00F4               	movwf	___ftge@ff2+1
  8289  0C36  0849               	movf	trapmf@x+2,w
  8290  0C37  00F5               	movwf	___ftge@ff2+2
  8291  0C38  160A  118A  245F  120A  158A  	fcall	___ftge
  8292  0C3D  1803               	btfsc	3,0
  8293  0C3E  2C47               	goto	i1l138
  8294  0C3F                     L18:	
  8295                           
  8296                           ;main.c: 112: ua = 0;
  8297  0C3F  3000               	movlw	0
  8298  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  8299  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  8300  0C42  00D6               	movwf	trapmf@ua
  8301  0C43  3000               	movlw	0
  8302  0C44  00D7               	movwf	trapmf@ua+1
  8303  0C45  3000               	movlw	0
  8304  0C46                     L17:	
  8305  0C46  00D8               	movwf	trapmf@ua+2
  8306  0C47                     i1l138:	
  8307                           
  8308                           ;main.c: 114: return(ua);
  8309  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  8310  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  8311  0C49  0856               	movf	trapmf@ua,w
  8312  0C4A  00C7               	movwf	?_trapmf
  8313  0C4B  0857               	movf	trapmf@ua+1,w
  8314  0C4C  00C8               	movwf	?_trapmf+1
  8315  0C4D  0858               	movf	trapmf@ua+2,w
  8316  0C4E  00C9               	movwf	?_trapmf+2
  8317  0C4F  0008               	return
  8318  0C50                     __end_of_trapmf:	
  8319                           
  8320                           	psect	text33
  8321  1145                     __ptext33:	
  8322 ;; *************** function ___ftneg *****************
  8323 ;; Defined at:
  8324 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;  f1              3    0[COMMON] float 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;		None
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  3    0[COMMON] float 
  8331 ;; Registers used:
  8332 ;;		wreg
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8338 ;;      Params:         3       0       0       0       0
  8339 ;;      Locals:         0       0       0       0       0
  8340 ;;      Temps:          0       0       0       0       0
  8341 ;;      Totals:         3       0       0       0       0
  8342 ;;Total ram usage:        3 bytes
  8343 ;; Hardware stack levels used:    1
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_trimf
  8348 ;;		_trapmf
  8349 ;;		_Fuzzy
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           
  8354                           ;psect for function ___ftneg
  8355  1145                     ___ftneg:	
  8356                           
  8357                           ;incstack = 0
  8358                           ; Regs used in ___ftneg: [wreg]
  8359  1145  0872               	movf	___ftneg@f1+2,w
  8360  1146  0471               	iorwf	___ftneg@f1+1,w
  8361  1147  0470               	iorwf	___ftneg@f1,w
  8362  1148  1903               	skipnz
  8363  1149  0008               	return
  8364  114A  3080               	movlw	128
  8365  114B  06F2               	xorwf	___ftneg@f1+2,f
  8366  114C  0008               	return
  8367  114D                     __end_of___ftneg:	
  8368                           
  8369                           	psect	text34
  8370  163F                     __ptext34:	
  8371 ;; *************** function ___ftdiv *****************
  8372 ;; Defined at:
  8373 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;  f2              3   23[BANK0 ] float 
  8376 ;;  f1              3   26[BANK0 ] float 
  8377 ;; Auto vars:     Size  Location     Type
  8378 ;;  f3              3   34[BANK0 ] float 
  8379 ;;  sign            1   38[BANK0 ] unsigned char 
  8380 ;;  exp             1   37[BANK0 ] unsigned char 
  8381 ;;  cntr            1   33[BANK0 ] unsigned char 
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  3   23[BANK0 ] float 
  8384 ;; Registers used:
  8385 ;;		wreg, status,2, status,0, pclath, cstack
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8391 ;;      Params:         0       6       0       0       0
  8392 ;;      Locals:         0       6       0       0       0
  8393 ;;      Temps:          0       4       0       0       0
  8394 ;;      Totals:         0      16       0       0       0
  8395 ;;Total ram usage:       16 bytes
  8396 ;; Hardware stack levels used:    1
  8397 ;; Hardware stack levels required when called:    1
  8398 ;; This function calls:
  8399 ;;		___ftpack
  8400 ;; This function is called by:
  8401 ;;		_trimf
  8402 ;;		_trapmf
  8403 ;;		_Fuzzy
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           
  8408                           ;psect for function ___ftdiv
  8409  163F                     ___ftdiv:	
  8410                           
  8411                           ;incstack = 0
  8412                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8413  163F  1283               	bcf	3,5	;RP0=0, select bank0
  8414  1640  1303               	bcf	3,6	;RP1=0, select bank0
  8415  1641  083A               	movf	___ftdiv@f1,w
  8416  1642  00BD               	movwf	??___ftdiv
  8417  1643  083B               	movf	___ftdiv@f1+1,w
  8418  1644  00BE               	movwf	??___ftdiv+1
  8419  1645  083C               	movf	___ftdiv@f1+2,w
  8420  1646  00BF               	movwf	??___ftdiv+2
  8421  1647  1003               	clrc
  8422  1648  0D3E               	rlf	??___ftdiv+1,w
  8423  1649  0D3F               	rlf	??___ftdiv+2,w
  8424  164A  00C0               	movwf	??___ftdiv+3
  8425  164B  0840               	movf	??___ftdiv+3,w
  8426  164C  00C5               	movwf	___ftdiv@exp
  8427  164D  08C5               	movf	___ftdiv@exp,f
  8428  164E  1D03               	skipz
  8429  164F  2E57               	goto	i1l2370
  8430  1650  3000               	movlw	0
  8431  1651  00B7               	movwf	?___ftdiv
  8432  1652  3000               	movlw	0
  8433  1653  00B8               	movwf	?___ftdiv+1
  8434  1654  3000               	movlw	0
  8435  1655  00B9               	movwf	?___ftdiv+2
  8436  1656  0008               	return
  8437  1657                     i1l2370:	
  8438  1657  0837               	movf	___ftdiv@f2,w
  8439  1658  00BD               	movwf	??___ftdiv
  8440  1659  0838               	movf	___ftdiv@f2+1,w
  8441  165A  00BE               	movwf	??___ftdiv+1
  8442  165B  0839               	movf	___ftdiv@f2+2,w
  8443  165C  00BF               	movwf	??___ftdiv+2
  8444  165D  1003               	clrc
  8445  165E  0D3E               	rlf	??___ftdiv+1,w
  8446  165F  0D3F               	rlf	??___ftdiv+2,w
  8447  1660  00C0               	movwf	??___ftdiv+3
  8448  1661  0840               	movf	??___ftdiv+3,w
  8449  1662  00C6               	movwf	___ftdiv@sign
  8450  1663  08C6               	movf	___ftdiv@sign,f
  8451  1664  1D03               	skipz
  8452  1665  2E6D               	goto	i1l2376
  8453  1666  3000               	movlw	0
  8454  1667  00B7               	movwf	?___ftdiv
  8455  1668  3000               	movlw	0
  8456  1669  00B8               	movwf	?___ftdiv+1
  8457  166A  3000               	movlw	0
  8458  166B  00B9               	movwf	?___ftdiv+2
  8459  166C  0008               	return
  8460  166D                     i1l2376:	
  8461  166D  3000               	movlw	0
  8462  166E  00C2               	movwf	___ftdiv@f3
  8463  166F  3000               	movlw	0
  8464  1670  00C3               	movwf	___ftdiv@f3+1
  8465  1671  3000               	movlw	0
  8466  1672  00C4               	movwf	___ftdiv@f3+2
  8467  1673  3089               	movlw	137
  8468  1674  0746               	addwf	___ftdiv@sign,w
  8469  1675  00BD               	movwf	??___ftdiv
  8470  1676  083D               	movf	??___ftdiv,w
  8471  1677  02C5               	subwf	___ftdiv@exp,f
  8472  1678  083A               	movf	___ftdiv@f1,w
  8473  1679  00BD               	movwf	??___ftdiv
  8474  167A  083B               	movf	___ftdiv@f1+1,w
  8475  167B  00BE               	movwf	??___ftdiv+1
  8476  167C  083C               	movf	___ftdiv@f1+2,w
  8477  167D  00BF               	movwf	??___ftdiv+2
  8478  167E  3010               	movlw	16
  8479  167F                     u251_25:	
  8480  167F  1003               	clrc
  8481  1680  0CBF               	rrf	??___ftdiv+2,f
  8482  1681  0CBE               	rrf	??___ftdiv+1,f
  8483  1682  0CBD               	rrf	??___ftdiv,f
  8484  1683  3EFF               	addlw	-1
  8485  1684  1D03               	skipz
  8486  1685  2E7F               	goto	u251_25
  8487  1686  083D               	movf	??___ftdiv,w
  8488  1687  00C0               	movwf	??___ftdiv+3
  8489  1688  0840               	movf	??___ftdiv+3,w
  8490  1689  00C6               	movwf	___ftdiv@sign
  8491  168A  0837               	movf	___ftdiv@f2,w
  8492  168B  00BD               	movwf	??___ftdiv
  8493  168C  0838               	movf	___ftdiv@f2+1,w
  8494  168D  00BE               	movwf	??___ftdiv+1
  8495  168E  0839               	movf	___ftdiv@f2+2,w
  8496  168F  00BF               	movwf	??___ftdiv+2
  8497  1690  3010               	movlw	16
  8498  1691                     u252_25:	
  8499  1691  1003               	clrc
  8500  1692  0CBF               	rrf	??___ftdiv+2,f
  8501  1693  0CBE               	rrf	??___ftdiv+1,f
  8502  1694  0CBD               	rrf	??___ftdiv,f
  8503  1695  3EFF               	addlw	-1
  8504  1696  1D03               	skipz
  8505  1697  2E91               	goto	u252_25
  8506  1698  083D               	movf	??___ftdiv,w
  8507  1699  00C0               	movwf	??___ftdiv+3
  8508  169A  0840               	movf	??___ftdiv+3,w
  8509  169B  06C6               	xorwf	___ftdiv@sign,f
  8510  169C  3080               	movlw	128
  8511  169D  00BD               	movwf	??___ftdiv
  8512  169E  083D               	movf	??___ftdiv,w
  8513  169F  05C6               	andwf	___ftdiv@sign,f
  8514  16A0  17BB               	bsf	___ftdiv@f1+1,7
  8515  16A1  30FF               	movlw	255
  8516  16A2  05BA               	andwf	___ftdiv@f1,f
  8517  16A3  30FF               	movlw	255
  8518  16A4  05BB               	andwf	___ftdiv@f1+1,f
  8519  16A5  3000               	movlw	0
  8520  16A6  05BC               	andwf	___ftdiv@f1+2,f
  8521  16A7  17B8               	bsf	___ftdiv@f2+1,7
  8522  16A8  30FF               	movlw	255
  8523  16A9  05B7               	andwf	___ftdiv@f2,f
  8524  16AA  30FF               	movlw	255
  8525  16AB  05B8               	andwf	___ftdiv@f2+1,f
  8526  16AC  3000               	movlw	0
  8527  16AD  05B9               	andwf	___ftdiv@f2+2,f
  8528  16AE  3018               	movlw	24
  8529  16AF  00BD               	movwf	??___ftdiv
  8530  16B0  083D               	movf	??___ftdiv,w
  8531  16B1  00C1               	movwf	___ftdiv@cntr
  8532  16B2                     i1l2390:	
  8533  16B2  3001               	movlw	1
  8534  16B3                     u253_25:	
  8535  16B3  1003               	clrc
  8536  16B4  0DC2               	rlf	___ftdiv@f3,f
  8537  16B5  0DC3               	rlf	___ftdiv@f3+1,f
  8538  16B6  0DC4               	rlf	___ftdiv@f3+2,f
  8539  16B7  3EFF               	addlw	-1
  8540  16B8  1D03               	skipz
  8541  16B9  2EB3               	goto	u253_25
  8542  16BA  0839               	movf	___ftdiv@f2+2,w
  8543  16BB  023C               	subwf	___ftdiv@f1+2,w
  8544  16BC  1D03               	skipz
  8545  16BD  2EC4               	goto	u254_25
  8546  16BE  0838               	movf	___ftdiv@f2+1,w
  8547  16BF  023B               	subwf	___ftdiv@f1+1,w
  8548  16C0  1D03               	skipz
  8549  16C1  2EC4               	goto	u254_25
  8550  16C2  0837               	movf	___ftdiv@f2,w
  8551  16C3  023A               	subwf	___ftdiv@f1,w
  8552  16C4                     u254_25:	
  8553  16C4  1C03               	skipc
  8554  16C5  2ED1               	goto	i1l2398
  8555  16C6  0837               	movf	___ftdiv@f2,w
  8556  16C7  02BA               	subwf	___ftdiv@f1,f
  8557  16C8  0838               	movf	___ftdiv@f2+1,w
  8558  16C9  1C03               	skipc
  8559  16CA  0F38               	incfsz	___ftdiv@f2+1,w
  8560  16CB  02BB               	subwf	___ftdiv@f1+1,f
  8561  16CC  0839               	movf	___ftdiv@f2+2,w
  8562  16CD  1C03               	skipc
  8563  16CE  0A39               	incf	___ftdiv@f2+2,w
  8564  16CF  02BC               	subwf	___ftdiv@f1+2,f
  8565  16D0  1442               	bsf	___ftdiv@f3,0
  8566  16D1                     i1l2398:	
  8567  16D1  3001               	movlw	1
  8568  16D2                     u255_25:	
  8569  16D2  1003               	clrc
  8570  16D3  0DBA               	rlf	___ftdiv@f1,f
  8571  16D4  0DBB               	rlf	___ftdiv@f1+1,f
  8572  16D5  0DBC               	rlf	___ftdiv@f1+2,f
  8573  16D6  3EFF               	addlw	-1
  8574  16D7  1D03               	skipz
  8575  16D8  2ED2               	goto	u255_25
  8576  16D9  3001               	movlw	1
  8577  16DA  02C1               	subwf	___ftdiv@cntr,f
  8578  16DB  1D03               	btfss	3,2
  8579  16DC  2EB2               	goto	i1l2390
  8580  16DD  0842               	movf	___ftdiv@f3,w
  8581  16DE  00F0               	movwf	___ftpack@arg
  8582  16DF  0843               	movf	___ftdiv@f3+1,w
  8583  16E0  00F1               	movwf	___ftpack@arg+1
  8584  16E1  0844               	movf	___ftdiv@f3+2,w
  8585  16E2  00F2               	movwf	___ftpack@arg+2
  8586  16E3  0845               	movf	___ftdiv@exp,w
  8587  16E4  00BD               	movwf	??___ftdiv
  8588  16E5  083D               	movf	??___ftdiv,w
  8589  16E6  00F3               	movwf	___ftpack@exp
  8590  16E7  0846               	movf	___ftdiv@sign,w
  8591  16E8  00BE               	movwf	??___ftdiv+1
  8592  16E9  083E               	movf	??___ftdiv+1,w
  8593  16EA  00F4               	movwf	___ftpack@sign
  8594  16EB  160A  118A  24BC   	fcall	___ftpack
  8595  16EE  0870               	movf	?___ftpack,w
  8596  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  8597  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  8598  16F1  00B7               	movwf	?___ftdiv
  8599  16F2  0871               	movf	?___ftpack+1,w
  8600  16F3  00B8               	movwf	?___ftdiv+1
  8601  16F4  0872               	movf	?___ftpack+2,w
  8602  16F5  00B9               	movwf	?___ftdiv+2
  8603  16F6  0008               	return
  8604  16F7                     __end_of___ftdiv:	
  8605                           
  8606                           	psect	text35
  8607  16F7                     __ptext35:	
  8608 ;; *************** function ___ftadd *****************
  8609 ;; Defined at:
  8610 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;  f1              3   10[BANK0 ] float 
  8613 ;;  f2              3   13[BANK0 ] float 
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;  exp1            1   22[BANK0 ] unsigned char 
  8616 ;;  exp2            1   21[BANK0 ] unsigned char 
  8617 ;;  sign            1   20[BANK0 ] unsigned char 
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  3   10[BANK0 ] float 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0, pclath, cstack
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8627 ;;      Params:         0       6       0       0       0
  8628 ;;      Locals:         0       3       0       0       0
  8629 ;;      Temps:          0       4       0       0       0
  8630 ;;      Totals:         0      13       0       0       0
  8631 ;;Total ram usage:       13 bytes
  8632 ;; Hardware stack levels used:    1
  8633 ;; Hardware stack levels required when called:    1
  8634 ;; This function calls:
  8635 ;;		___ftpack
  8636 ;; This function is called by:
  8637 ;;		_trimf
  8638 ;;		_trapmf
  8639 ;;		_Fuzzy
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           
  8644                           ;psect for function ___ftadd
  8645  16F7                     ___ftadd:	
  8646                           
  8647                           ;incstack = 0
  8648                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8649  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  8650  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  8651  16F9  082A               	movf	___ftadd@f1,w
  8652  16FA  00B0               	movwf	??___ftadd
  8653  16FB  082B               	movf	___ftadd@f1+1,w
  8654  16FC  00B1               	movwf	??___ftadd+1
  8655  16FD  082C               	movf	___ftadd@f1+2,w
  8656  16FE  00B2               	movwf	??___ftadd+2
  8657  16FF  1003               	clrc
  8658  1700  0D31               	rlf	??___ftadd+1,w
  8659  1701  0D32               	rlf	??___ftadd+2,w
  8660  1702  00B3               	movwf	??___ftadd+3
  8661  1703  0833               	movf	??___ftadd+3,w
  8662  1704  00B6               	movwf	___ftadd@exp1
  8663  1705  082D               	movf	___ftadd@f2,w
  8664  1706  00B0               	movwf	??___ftadd
  8665  1707  082E               	movf	___ftadd@f2+1,w
  8666  1708  00B1               	movwf	??___ftadd+1
  8667  1709  082F               	movf	___ftadd@f2+2,w
  8668  170A  00B2               	movwf	??___ftadd+2
  8669  170B  1003               	clrc
  8670  170C  0D31               	rlf	??___ftadd+1,w
  8671  170D  0D32               	rlf	??___ftadd+2,w
  8672  170E  00B3               	movwf	??___ftadd+3
  8673  170F  0833               	movf	??___ftadd+3,w
  8674  1710  00B5               	movwf	___ftadd@exp2
  8675  1711  0836               	movf	___ftadd@exp1,w
  8676  1712  1903               	btfsc	3,2
  8677  1713  2F20               	goto	i1l2300
  8678  1714  0835               	movf	___ftadd@exp2,w
  8679  1715  0236               	subwf	___ftadd@exp1,w
  8680  1716  1803               	skipnc
  8681  1717  2F27               	goto	i1l2304
  8682  1718  0336               	decf	___ftadd@exp1,w
  8683  1719  3AFF               	xorlw	255
  8684  171A  0735               	addwf	___ftadd@exp2,w
  8685  171B  00B0               	movwf	??___ftadd
  8686  171C  3019               	movlw	25
  8687  171D  0230               	subwf	??___ftadd,w
  8688  171E  1C03               	skipc
  8689  171F  2F27               	goto	i1l2304
  8690  1720                     i1l2300:	
  8691  1720  082D               	movf	___ftadd@f2,w
  8692  1721  00AA               	movwf	?___ftadd
  8693  1722  082E               	movf	___ftadd@f2+1,w
  8694  1723  00AB               	movwf	?___ftadd+1
  8695  1724  082F               	movf	___ftadd@f2+2,w
  8696  1725  00AC               	movwf	?___ftadd+2
  8697  1726  0008               	return
  8698  1727                     i1l2304:	
  8699  1727  0835               	movf	___ftadd@exp2,w
  8700  1728  1903               	btfsc	3,2
  8701  1729  0008               	return
  8702  172A  0836               	movf	___ftadd@exp1,w
  8703  172B  0235               	subwf	___ftadd@exp2,w
  8704  172C  1803               	skipnc
  8705  172D  2F36               	goto	i1l2310
  8706  172E  0335               	decf	___ftadd@exp2,w
  8707  172F  3AFF               	xorlw	255
  8708  1730  0736               	addwf	___ftadd@exp1,w
  8709  1731  00B0               	movwf	??___ftadd
  8710  1732  3019               	movlw	25
  8711  1733  0230               	subwf	??___ftadd,w
  8712  1734  1803               	btfsc	3,0
  8713  1735  0008               	return
  8714  1736                     i1l2310:	
  8715  1736  3006               	movlw	6
  8716  1737  00B0               	movwf	??___ftadd
  8717  1738  0830               	movf	??___ftadd,w
  8718  1739  00B4               	movwf	___ftadd@sign
  8719  173A  1BAC               	btfsc	___ftadd@f1+2,7
  8720  173B  17B4               	bsf	___ftadd@sign,7
  8721  173C  1BAF               	btfsc	___ftadd@f2+2,7
  8722  173D  1734               	bsf	___ftadd@sign,6
  8723  173E  17AB               	bsf	___ftadd@f1+1,7
  8724  173F  30FF               	movlw	255
  8725  1740  05AA               	andwf	___ftadd@f1,f
  8726  1741  30FF               	movlw	255
  8727  1742  05AB               	andwf	___ftadd@f1+1,f
  8728  1743  3000               	movlw	0
  8729  1744  05AC               	andwf	___ftadd@f1+2,f
  8730  1745  17AE               	bsf	___ftadd@f2+1,7
  8731  1746  30FF               	movlw	255
  8732  1747  05AD               	andwf	___ftadd@f2,f
  8733  1748  30FF               	movlw	255
  8734  1749  05AE               	andwf	___ftadd@f2+1,f
  8735  174A  3000               	movlw	0
  8736  174B  05AF               	andwf	___ftadd@f2+2,f
  8737  174C  0835               	movf	___ftadd@exp2,w
  8738  174D  0236               	subwf	___ftadd@exp1,w
  8739  174E  1803               	skipnc
  8740  174F  2F76               	goto	i1l2332
  8741  1750                     i1l2322:	
  8742  1750  3001               	movlw	1
  8743  1751                     u234_25:	
  8744  1751  1003               	clrc
  8745  1752  0DAD               	rlf	___ftadd@f2,f
  8746  1753  0DAE               	rlf	___ftadd@f2+1,f
  8747  1754  0DAF               	rlf	___ftadd@f2+2,f
  8748  1755  3EFF               	addlw	-1
  8749  1756  1D03               	skipz
  8750  1757  2F51               	goto	u234_25
  8751  1758  3001               	movlw	1
  8752  1759  02B5               	subwf	___ftadd@exp2,f
  8753  175A  0835               	movf	___ftadd@exp2,w
  8754  175B  0636               	xorwf	___ftadd@exp1,w
  8755  175C  1903               	skipnz
  8756  175D  2F71               	goto	i1l2330
  8757  175E  3001               	movlw	1
  8758  175F  02B4               	subwf	___ftadd@sign,f
  8759  1760  0834               	movf	___ftadd@sign,w
  8760  1761  3907               	andlw	7
  8761  1762  1903               	btfsc	3,2
  8762  1763  2F71               	goto	i1l2330
  8763  1764  2F50               	goto	i1l2322
  8764  1765                     i1l2328:	
  8765  1765  3001               	movlw	1
  8766  1766                     u237_25:	
  8767  1766  1003               	clrc
  8768  1767  0CAC               	rrf	___ftadd@f1+2,f
  8769  1768  0CAB               	rrf	___ftadd@f1+1,f
  8770  1769  0CAA               	rrf	___ftadd@f1,f
  8771  176A  3EFF               	addlw	-1
  8772  176B  1D03               	skipz
  8773  176C  2F66               	goto	u237_25
  8774  176D  3001               	movlw	1
  8775  176E  00B0               	movwf	??___ftadd
  8776  176F  0830               	movf	??___ftadd,w
  8777  1770  07B6               	addwf	___ftadd@exp1,f
  8778  1771                     i1l2330:	
  8779  1771  0836               	movf	___ftadd@exp1,w
  8780  1772  0635               	xorwf	___ftadd@exp2,w
  8781  1773  1903               	btfsc	3,2
  8782  1774  2F9F               	goto	i1l798
  8783  1775  2F65               	goto	i1l2328
  8784  1776                     i1l2332:	
  8785  1776  0836               	movf	___ftadd@exp1,w
  8786  1777  0235               	subwf	___ftadd@exp2,w
  8787  1778  1803               	skipnc
  8788  1779  2F9F               	goto	i1l798
  8789  177A                     i1l2334:	
  8790  177A  3001               	movlw	1
  8791  177B                     u240_25:	
  8792  177B  1003               	clrc
  8793  177C  0DAA               	rlf	___ftadd@f1,f
  8794  177D  0DAB               	rlf	___ftadd@f1+1,f
  8795  177E  0DAC               	rlf	___ftadd@f1+2,f
  8796  177F  3EFF               	addlw	-1
  8797  1780  1D03               	skipz
  8798  1781  2F7B               	goto	u240_25
  8799  1782  3001               	movlw	1
  8800  1783  02B6               	subwf	___ftadd@exp1,f
  8801  1784  0835               	movf	___ftadd@exp2,w
  8802  1785  0636               	xorwf	___ftadd@exp1,w
  8803  1786  1903               	skipnz
  8804  1787  2F9B               	goto	i1l2342
  8805  1788  3001               	movlw	1
  8806  1789  02B4               	subwf	___ftadd@sign,f
  8807  178A  0834               	movf	___ftadd@sign,w
  8808  178B  3907               	andlw	7
  8809  178C  1903               	btfsc	3,2
  8810  178D  2F9B               	goto	i1l2342
  8811  178E  2F7A               	goto	i1l2334
  8812  178F                     i1l2340:	
  8813  178F  3001               	movlw	1
  8814  1790                     u243_25:	
  8815  1790  1003               	clrc
  8816  1791  0CAF               	rrf	___ftadd@f2+2,f
  8817  1792  0CAE               	rrf	___ftadd@f2+1,f
  8818  1793  0CAD               	rrf	___ftadd@f2,f
  8819  1794  3EFF               	addlw	-1
  8820  1795  1D03               	skipz
  8821  1796  2F90               	goto	u243_25
  8822  1797  3001               	movlw	1
  8823  1798  00B0               	movwf	??___ftadd
  8824  1799  0830               	movf	??___ftadd,w
  8825  179A  07B5               	addwf	___ftadd@exp2,f
  8826  179B                     i1l2342:	
  8827  179B  0836               	movf	___ftadd@exp1,w
  8828  179C  0635               	xorwf	___ftadd@exp2,w
  8829  179D  1D03               	skipz
  8830  179E  2F8F               	goto	i1l2340
  8831  179F                     i1l798:	
  8832  179F  1FB4               	btfss	___ftadd@sign,7
  8833  17A0  2FB1               	goto	i1l2346
  8834  17A1  30FF               	movlw	255
  8835  17A2  06AA               	xorwf	___ftadd@f1,f
  8836  17A3  30FF               	movlw	255
  8837  17A4  06AB               	xorwf	___ftadd@f1+1,f
  8838  17A5  30FF               	movlw	255
  8839  17A6  06AC               	xorwf	___ftadd@f1+2,f
  8840  17A7  3001               	movlw	1
  8841  17A8  07AA               	addwf	___ftadd@f1,f
  8842  17A9  3000               	movlw	0
  8843  17AA  1803               	skipnc
  8844  17AB  3001               	movlw	1
  8845  17AC  07AB               	addwf	___ftadd@f1+1,f
  8846  17AD  3000               	movlw	0
  8847  17AE  1803               	skipnc
  8848  17AF  3001               	movlw	1
  8849  17B0  07AC               	addwf	___ftadd@f1+2,f
  8850  17B1                     i1l2346:	
  8851  17B1  1F34               	btfss	___ftadd@sign,6
  8852  17B2  2FC3               	goto	i1l2350
  8853  17B3  30FF               	movlw	255
  8854  17B4  06AD               	xorwf	___ftadd@f2,f
  8855  17B5  30FF               	movlw	255
  8856  17B6  06AE               	xorwf	___ftadd@f2+1,f
  8857  17B7  30FF               	movlw	255
  8858  17B8  06AF               	xorwf	___ftadd@f2+2,f
  8859  17B9  3001               	movlw	1
  8860  17BA  07AD               	addwf	___ftadd@f2,f
  8861  17BB  3000               	movlw	0
  8862  17BC  1803               	skipnc
  8863  17BD  3001               	movlw	1
  8864  17BE  07AE               	addwf	___ftadd@f2+1,f
  8865  17BF  3000               	movlw	0
  8866  17C0  1803               	skipnc
  8867  17C1  3001               	movlw	1
  8868  17C2  07AF               	addwf	___ftadd@f2+2,f
  8869  17C3                     i1l2350:	
  8870  17C3  01B4               	clrf	___ftadd@sign
  8871  17C4  082A               	movf	___ftadd@f1,w
  8872  17C5  07AD               	addwf	___ftadd@f2,f
  8873  17C6  082B               	movf	___ftadd@f1+1,w
  8874  17C7  1103               	clrz
  8875  17C8  1803               	skipnc
  8876  17C9  0A2B               	incf	___ftadd@f1+1,w
  8877  17CA  1D03               	btfss	3,2
  8878  17CB  07AE               	addwf	___ftadd@f2+1,f
  8879  17CC  082C               	movf	___ftadd@f1+2,w
  8880  17CD  1103               	clrz
  8881  17CE  1803               	skipnc
  8882  17CF  0A2C               	incf	___ftadd@f1+2,w
  8883  17D0  1D03               	btfss	3,2
  8884  17D1  07AF               	addwf	___ftadd@f2+2,f
  8885  17D2  1FAF               	btfss	___ftadd@f2+2,7
  8886  17D3  2FE6               	goto	i1l2360
  8887  17D4  30FF               	movlw	255
  8888  17D5  06AD               	xorwf	___ftadd@f2,f
  8889  17D6  30FF               	movlw	255
  8890  17D7  06AE               	xorwf	___ftadd@f2+1,f
  8891  17D8  30FF               	movlw	255
  8892  17D9  06AF               	xorwf	___ftadd@f2+2,f
  8893  17DA  3001               	movlw	1
  8894  17DB  07AD               	addwf	___ftadd@f2,f
  8895  17DC  3000               	movlw	0
  8896  17DD  1803               	skipnc
  8897  17DE  3001               	movlw	1
  8898  17DF  07AE               	addwf	___ftadd@f2+1,f
  8899  17E0  3000               	movlw	0
  8900  17E1  1803               	skipnc
  8901  17E2  3001               	movlw	1
  8902  17E3  07AF               	addwf	___ftadd@f2+2,f
  8903  17E4  01B4               	clrf	___ftadd@sign
  8904  17E5  0AB4               	incf	___ftadd@sign,f
  8905  17E6                     i1l2360:	
  8906  17E6  082D               	movf	___ftadd@f2,w
  8907  17E7  00F0               	movwf	___ftpack@arg
  8908  17E8  082E               	movf	___ftadd@f2+1,w
  8909  17E9  00F1               	movwf	___ftpack@arg+1
  8910  17EA  082F               	movf	___ftadd@f2+2,w
  8911  17EB  00F2               	movwf	___ftpack@arg+2
  8912  17EC  0836               	movf	___ftadd@exp1,w
  8913  17ED  00B0               	movwf	??___ftadd
  8914  17EE  0830               	movf	??___ftadd,w
  8915  17EF  00F3               	movwf	___ftpack@exp
  8916  17F0  0834               	movf	___ftadd@sign,w
  8917  17F1  00B1               	movwf	??___ftadd+1
  8918  17F2  0831               	movf	??___ftadd+1,w
  8919  17F3  00F4               	movwf	___ftpack@sign
  8920  17F4  160A  118A  24BC   	fcall	___ftpack
  8921  17F7  0870               	movf	?___ftpack,w
  8922  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  8923  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  8924  17FA  00AA               	movwf	?___ftadd
  8925  17FB  0871               	movf	?___ftpack+1,w
  8926  17FC  00AB               	movwf	?___ftadd+1
  8927  17FD  0872               	movf	?___ftpack+2,w
  8928  17FE  00AC               	movwf	?___ftadd+2
  8929  17FF  0008               	return
  8930  1800                     __end_of___ftadd:	
  8931                           
  8932                           	psect	text36
  8933  0800                     __ptext36:	
  8934 ;; *************** function _max_val *****************
  8935 ;; Defined at:
  8936 ;;		line 129 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  a               3    0[BANK0 ] float 
  8939 ;;  b               3    3[BANK0 ] float 
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;		None
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  3    0[BANK0 ] float 
  8944 ;; Registers used:
  8945 ;;		wreg, status,2, status,0, pclath, cstack
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8951 ;;      Params:         0       6       0       0       0
  8952 ;;      Locals:         0       0       0       0       0
  8953 ;;      Temps:          0       0       0       0       0
  8954 ;;      Totals:         0       6       0       0       0
  8955 ;;Total ram usage:        6 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; Hardware stack levels required when called:    1
  8958 ;; This function calls:
  8959 ;;		___ftge
  8960 ;; This function is called by:
  8961 ;;		_Fuzzy
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           
  8966                           ;psect for function _max_val
  8967  0800                     _max_val:	
  8968                           
  8969                           ;main.c: 131: if (a > b)
  8970                           
  8971                           ;incstack = 0
  8972                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8973  0800  1283               	bcf	3,5	;RP0=0, select bank0
  8974  0801  1303               	bcf	3,6	;RP1=0, select bank0
  8975  0802  0823               	movf	max_val@b,w
  8976  0803  00F0               	movwf	___ftge@ff1
  8977  0804  0824               	movf	max_val@b+1,w
  8978  0805  00F1               	movwf	___ftge@ff1+1
  8979  0806  0825               	movf	max_val@b+2,w
  8980  0807  00F2               	movwf	___ftge@ff1+2
  8981  0808  0820               	movf	max_val@a,w
  8982  0809  00F3               	movwf	___ftge@ff2
  8983  080A  0821               	movf	max_val@a+1,w
  8984  080B  00F4               	movwf	___ftge@ff2+1
  8985  080C  0822               	movf	max_val@a+2,w
  8986  080D  00F5               	movwf	___ftge@ff2+2
  8987  080E  160A  118A  245F  120A  158A  	fcall	___ftge
  8988  0813  1C03               	btfss	3,0
  8989  0814  0008               	return
  8990                           
  8991                           ;main.c: 133: else
  8992                           ;main.c: 134: return b;
  8993                           
  8994                           ;main.c: 132: return a;
  8995  0815  1283               	bcf	3,5	;RP0=0, select bank0
  8996  0816  1303               	bcf	3,6	;RP1=0, select bank0
  8997  0817  0823               	movf	max_val@b,w
  8998  0818  00A0               	movwf	?_max_val
  8999  0819  0824               	movf	max_val@b+1,w
  9000  081A  00A1               	movwf	?_max_val+1
  9001  081B  0825               	movf	max_val@b+2,w
  9002  081C  00A2               	movwf	?_max_val+2
  9003  081D  0008               	return
  9004  081E                     __end_of_max_val:	
  9005                           
  9006                           	psect	text37
  9007  145F                     __ptext37:	
  9008 ;; *************** function ___ftge *****************
  9009 ;; Defined at:
  9010 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  ff1             3    0[COMMON] float 
  9013 ;;  ff2             3    3[COMMON] float 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;		None
  9016 ;; Return value:  Size  Location     Type
  9017 ;;		None               void
  9018 ;; Registers used:
  9019 ;;		wreg, status,2, status,0
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9025 ;;      Params:         6       0       0       0       0
  9026 ;;      Locals:         0       0       0       0       0
  9027 ;;      Temps:          6       0       0       0       0
  9028 ;;      Totals:        12       0       0       0       0
  9029 ;;Total ram usage:       12 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_trimf
  9035 ;;		_trapmf
  9036 ;;		_max_val
  9037 ;;		_Fuzzy
  9038 ;;		_min_val
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           
  9043                           ;psect for function ___ftge
  9044  145F                     ___ftge:	
  9045                           
  9046                           ;incstack = 0
  9047                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9048  145F  1FF2               	btfss	___ftge@ff1+2,7
  9049  1460  2C86               	goto	i1l2410
  9050  1461  3000               	movlw	0
  9051  1462  00F6               	movwf	??___ftge
  9052  1463  3000               	movlw	0
  9053  1464  00F7               	movwf	??___ftge+1
  9054  1465  3080               	movlw	128
  9055  1466  00F8               	movwf	??___ftge+2
  9056  1467  0970               	comf	___ftge@ff1,w
  9057  1468  00F9               	movwf	??___ftge+3
  9058  1469  0971               	comf	___ftge@ff1+1,w
  9059  146A  00FA               	movwf	??___ftge+4
  9060  146B  0972               	comf	___ftge@ff1+2,w
  9061  146C  00FB               	movwf	??___ftge+5
  9062  146D  0AF9               	incf	??___ftge+3,f
  9063  146E  1903               	skipnz
  9064  146F  0AFA               	incf	??___ftge+4,f
  9065  1470  1903               	skipnz
  9066  1471  0AFB               	incf	??___ftge+5,f
  9067  1472  0879               	movf	??___ftge+3,w
  9068  1473  07F6               	addwf	??___ftge,f
  9069  1474  087A               	movf	??___ftge+4,w
  9070  1475  1803               	skipnc
  9071  1476  0F7A               	incfsz	??___ftge+4,w
  9072  1477  2C79               	goto	u258_21
  9073  1478  2C7A               	goto	u258_22
  9074  1479                     u258_21:	
  9075  1479  07F7               	addwf	??___ftge+1,f
  9076  147A                     u258_22:	
  9077  147A  087B               	movf	??___ftge+5,w
  9078  147B  1803               	skipnc
  9079  147C  0F7B               	incfsz	??___ftge+5,w
  9080  147D  2C7F               	goto	u258_23
  9081  147E  2C80               	goto	u258_24
  9082  147F                     u258_23:	
  9083  147F  07F8               	addwf	??___ftge+2,f
  9084  1480                     u258_24:	
  9085  1480  0876               	movf	??___ftge,w
  9086  1481  00F0               	movwf	___ftge@ff1
  9087  1482  0877               	movf	??___ftge+1,w
  9088  1483  00F1               	movwf	___ftge@ff1+1
  9089  1484  0878               	movf	??___ftge+2,w
  9090  1485  00F2               	movwf	___ftge@ff1+2
  9091  1486                     i1l2410:	
  9092  1486  1FF5               	btfss	___ftge@ff2+2,7
  9093  1487  2CAD               	goto	i1l2414
  9094  1488  3000               	movlw	0
  9095  1489  00F6               	movwf	??___ftge
  9096  148A  3000               	movlw	0
  9097  148B  00F7               	movwf	??___ftge+1
  9098  148C  3080               	movlw	128
  9099  148D  00F8               	movwf	??___ftge+2
  9100  148E  0973               	comf	___ftge@ff2,w
  9101  148F  00F9               	movwf	??___ftge+3
  9102  1490  0974               	comf	___ftge@ff2+1,w
  9103  1491  00FA               	movwf	??___ftge+4
  9104  1492  0975               	comf	___ftge@ff2+2,w
  9105  1493  00FB               	movwf	??___ftge+5
  9106  1494  0AF9               	incf	??___ftge+3,f
  9107  1495  1903               	skipnz
  9108  1496  0AFA               	incf	??___ftge+4,f
  9109  1497  1903               	skipnz
  9110  1498  0AFB               	incf	??___ftge+5,f
  9111  1499  0879               	movf	??___ftge+3,w
  9112  149A  07F6               	addwf	??___ftge,f
  9113  149B  087A               	movf	??___ftge+4,w
  9114  149C  1803               	skipnc
  9115  149D  0F7A               	incfsz	??___ftge+4,w
  9116  149E  2CA0               	goto	u260_21
  9117  149F  2CA1               	goto	u260_22
  9118  14A0                     u260_21:	
  9119  14A0  07F7               	addwf	??___ftge+1,f
  9120  14A1                     u260_22:	
  9121  14A1  087B               	movf	??___ftge+5,w
  9122  14A2  1803               	skipnc
  9123  14A3  0F7B               	incfsz	??___ftge+5,w
  9124  14A4  2CA6               	goto	u260_23
  9125  14A5  2CA7               	goto	u260_24
  9126  14A6                     u260_23:	
  9127  14A6  07F8               	addwf	??___ftge+2,f
  9128  14A7                     u260_24:	
  9129  14A7  0876               	movf	??___ftge,w
  9130  14A8  00F3               	movwf	___ftge@ff2
  9131  14A9  0877               	movf	??___ftge+1,w
  9132  14AA  00F4               	movwf	___ftge@ff2+1
  9133  14AB  0878               	movf	??___ftge+2,w
  9134  14AC  00F5               	movwf	___ftge@ff2+2
  9135  14AD                     i1l2414:	
  9136  14AD  3080               	movlw	128
  9137  14AE  06F2               	xorwf	___ftge@ff1+2,f
  9138  14AF  3080               	movlw	128
  9139  14B0  06F5               	xorwf	___ftge@ff2+2,f
  9140  14B1  0875               	movf	___ftge@ff2+2,w
  9141  14B2  0272               	subwf	___ftge@ff1+2,w
  9142  14B3  1D03               	skipz
  9143  14B4  0008               	return
  9144  14B5  0874               	movf	___ftge@ff2+1,w
  9145  14B6  0271               	subwf	___ftge@ff1+1,w
  9146  14B7  1D03               	skipz
  9147  14B8  0008               	return
  9148  14B9  0873               	movf	___ftge@ff2,w
  9149  14BA  0270               	subwf	___ftge@ff1,w
  9150  14BB  0008               	return
  9151  14BC                     __end_of___ftge:	
  9152                           
  9153                           	psect	text38
  9154  119F                     __ptext38:	
  9155 ;; *************** function ___lwtoft *****************
  9156 ;; Defined at:
  9157 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;  c               2    8[COMMON] unsigned int 
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  3    8[COMMON] float 
  9164 ;; Registers used:
  9165 ;;		wreg, status,2, status,0, pclath, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9171 ;;      Params:         3       0       0       0       0
  9172 ;;      Locals:         0       0       0       0       0
  9173 ;;      Temps:          1       0       0       0       0
  9174 ;;      Totals:         4       0       0       0       0
  9175 ;;Total ram usage:        4 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; Hardware stack levels required when called:    1
  9178 ;; This function calls:
  9179 ;;		___ftpack
  9180 ;; This function is called by:
  9181 ;;		_Fuzzy
  9182 ;;		_ISR
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           
  9187                           ;psect for function ___lwtoft
  9188  119F                     ___lwtoft:	
  9189                           
  9190                           ;incstack = 0
  9191                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9192  119F  0878               	movf	___lwtoft@c,w
  9193  11A0  00F0               	movwf	___ftpack@arg
  9194  11A1  0879               	movf	___lwtoft@c+1,w
  9195  11A2  00F1               	movwf	___ftpack@arg+1
  9196  11A3  01F2               	clrf	___ftpack@arg+2
  9197  11A4  308E               	movlw	142
  9198  11A5  00FB               	movwf	??___lwtoft
  9199  11A6  087B               	movf	??___lwtoft,w
  9200  11A7  00F3               	movwf	___ftpack@exp
  9201  11A8  01F4               	clrf	___ftpack@sign
  9202  11A9  160A  118A  24BC   	fcall	___ftpack
  9203  11AC  0870               	movf	?___ftpack,w
  9204  11AD  00F8               	movwf	?___lwtoft
  9205  11AE  0871               	movf	?___ftpack+1,w
  9206  11AF  00F9               	movwf	?___lwtoft+1
  9207  11B0  0872               	movf	?___ftpack+2,w
  9208  11B1  00FA               	movwf	?___lwtoft+2
  9209  11B2  0008               	return
  9210  11B3                     __end_of___lwtoft:	
  9211                           
  9212                           	psect	text39
  9213  1524                     __ptext39:	
  9214 ;; *************** function ___fttol *****************
  9215 ;; Defined at:
  9216 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  f1              3    0[COMMON] float 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;  lval            4    9[COMMON] unsigned long 
  9221 ;;  exp1            1   13[COMMON] unsigned char 
  9222 ;;  sign1           1    8[COMMON] unsigned char 
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  4    0[COMMON] long 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2, status,0
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9232 ;;      Params:         4       0       0       0       0
  9233 ;;      Locals:         6       0       0       0       0
  9234 ;;      Temps:          4       0       0       0       0
  9235 ;;      Totals:        14       0       0       0       0
  9236 ;;Total ram usage:       14 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; This function calls:
  9239 ;;		Nothing
  9240 ;; This function is called by:
  9241 ;;		_Fuzzy
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           
  9246                           ;psect for function ___fttol
  9247  1524                     ___fttol:	
  9248                           
  9249                           ;incstack = 0
  9250                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9251  1524  0870               	movf	___fttol@f1,w
  9252  1525  00F4               	movwf	??___fttol
  9253  1526  0871               	movf	___fttol@f1+1,w
  9254  1527  00F5               	movwf	??___fttol+1
  9255  1528  0872               	movf	___fttol@f1+2,w
  9256  1529  00F6               	movwf	??___fttol+2
  9257  152A  1003               	clrc
  9258  152B  0D75               	rlf	??___fttol+1,w
  9259  152C  0D76               	rlf	??___fttol+2,w
  9260  152D  00F7               	movwf	??___fttol+3
  9261  152E  0877               	movf	??___fttol+3,w
  9262  152F  00FD               	movwf	___fttol@exp1
  9263  1530  08FD               	movf	___fttol@exp1,f
  9264  1531  1D03               	skipz
  9265  1532  2D3C               	goto	i1l2642
  9266  1533  3000               	movlw	0
  9267  1534  00F3               	movwf	?___fttol+3
  9268  1535  3000               	movlw	0
  9269  1536  00F2               	movwf	?___fttol+2
  9270  1537  3000               	movlw	0
  9271  1538  00F1               	movwf	?___fttol+1
  9272  1539  3000               	movlw	0
  9273  153A  00F0               	movwf	?___fttol
  9274  153B  0008               	return
  9275  153C                     i1l2642:	
  9276  153C  0870               	movf	___fttol@f1,w
  9277  153D  00F4               	movwf	??___fttol
  9278  153E  0871               	movf	___fttol@f1+1,w
  9279  153F  00F5               	movwf	??___fttol+1
  9280  1540  0872               	movf	___fttol@f1+2,w
  9281  1541  00F6               	movwf	??___fttol+2
  9282  1542  3017               	movlw	23
  9283  1543                     u311_25:	
  9284  1543  1003               	clrc
  9285  1544  0CF6               	rrf	??___fttol+2,f
  9286  1545  0CF5               	rrf	??___fttol+1,f
  9287  1546  0CF4               	rrf	??___fttol,f
  9288  1547  3EFF               	addlw	-1
  9289  1548  1D03               	skipz
  9290  1549  2D43               	goto	u311_25
  9291  154A  0874               	movf	??___fttol,w
  9292  154B  00F7               	movwf	??___fttol+3
  9293  154C  0877               	movf	??___fttol+3,w
  9294  154D  00F8               	movwf	___fttol@sign1
  9295  154E  17F1               	bsf	___fttol@f1+1,7
  9296  154F  30FF               	movlw	255
  9297  1550  05F0               	andwf	___fttol@f1,f
  9298  1551  30FF               	movlw	255
  9299  1552  05F1               	andwf	___fttol@f1+1,f
  9300  1553  3000               	movlw	0
  9301  1554  05F2               	andwf	___fttol@f1+2,f
  9302  1555  0870               	movf	___fttol@f1,w
  9303  1556  00F9               	movwf	___fttol@lval
  9304  1557  0871               	movf	___fttol@f1+1,w
  9305  1558  00FA               	movwf	___fttol@lval+1
  9306  1559  0872               	movf	___fttol@f1+2,w
  9307  155A  00FB               	movwf	___fttol@lval+2
  9308  155B  01FC               	clrf	___fttol@lval+3
  9309  155C  308E               	movlw	142
  9310  155D  02FD               	subwf	___fttol@exp1,f
  9311  155E  1FFD               	btfss	___fttol@exp1,7
  9312  155F  2D7E               	goto	i1l2662
  9313  1560  087D               	movf	___fttol@exp1,w
  9314  1561  3A80               	xorlw	128
  9315  1562  3E8F               	addlw	143
  9316  1563  1803               	skipnc
  9317  1564  2D6E               	goto	i1l2660
  9318  1565  3000               	movlw	0
  9319  1566  00F3               	movwf	?___fttol+3
  9320  1567  3000               	movlw	0
  9321  1568  00F2               	movwf	?___fttol+2
  9322  1569  3000               	movlw	0
  9323  156A  00F1               	movwf	?___fttol+1
  9324  156B  3000               	movlw	0
  9325  156C  00F0               	movwf	?___fttol
  9326  156D  0008               	return
  9327  156E                     i1l2660:	
  9328  156E  3001               	movlw	1
  9329  156F                     u314_25:	
  9330  156F  1003               	clrc
  9331  1570  0CFC               	rrf	___fttol@lval+3,f
  9332  1571  0CFB               	rrf	___fttol@lval+2,f
  9333  1572  0CFA               	rrf	___fttol@lval+1,f
  9334  1573  0CF9               	rrf	___fttol@lval,f
  9335  1574  3EFF               	addlw	-1
  9336  1575  1D03               	skipz
  9337  1576  2D6F               	goto	u314_25
  9338  1577  3001               	movlw	1
  9339  1578  00F4               	movwf	??___fttol
  9340  1579  0874               	movf	??___fttol,w
  9341  157A  07FD               	addwf	___fttol@exp1,f
  9342  157B  1903               	btfsc	3,2
  9343  157C  2D99               	goto	i1l2672
  9344  157D  2D6E               	goto	i1l2660
  9345  157E                     i1l2662:	
  9346  157E  3018               	movlw	24
  9347  157F  027D               	subwf	___fttol@exp1,w
  9348  1580  1C03               	skipc
  9349  1581  2D96               	goto	i1l2670
  9350  1582  3000               	movlw	0
  9351  1583  00F3               	movwf	?___fttol+3
  9352  1584  3000               	movlw	0
  9353  1585  00F2               	movwf	?___fttol+2
  9354  1586  3000               	movlw	0
  9355  1587  00F1               	movwf	?___fttol+1
  9356  1588  3000               	movlw	0
  9357  1589  00F0               	movwf	?___fttol
  9358  158A  0008               	return
  9359  158B                     i1l2668:	
  9360  158B  3001               	movlw	1
  9361  158C  00F4               	movwf	??___fttol
  9362  158D                     u317_25:	
  9363  158D  1003               	clrc
  9364  158E  0DF9               	rlf	___fttol@lval,f
  9365  158F  0DFA               	rlf	___fttol@lval+1,f
  9366  1590  0DFB               	rlf	___fttol@lval+2,f
  9367  1591  0DFC               	rlf	___fttol@lval+3,f
  9368  1592  0BF4               	decfsz	??___fttol,f
  9369  1593  2D8D               	goto	u317_25
  9370  1594  3001               	movlw	1
  9371  1595  02FD               	subwf	___fttol@exp1,f
  9372  1596                     i1l2670:	
  9373  1596  08FD               	movf	___fttol@exp1,f
  9374  1597  1D03               	skipz
  9375  1598  2D8B               	goto	i1l2668
  9376  1599                     i1l2672:	
  9377  1599  0878               	movf	___fttol@sign1,w
  9378  159A  1903               	btfsc	3,2
  9379  159B  2DA7               	goto	i1l2676
  9380  159C  09F9               	comf	___fttol@lval,f
  9381  159D  09FA               	comf	___fttol@lval+1,f
  9382  159E  09FB               	comf	___fttol@lval+2,f
  9383  159F  09FC               	comf	___fttol@lval+3,f
  9384  15A0  0AF9               	incf	___fttol@lval,f
  9385  15A1  1903               	skipnz
  9386  15A2  0AFA               	incf	___fttol@lval+1,f
  9387  15A3  1903               	skipnz
  9388  15A4  0AFB               	incf	___fttol@lval+2,f
  9389  15A5  1903               	skipnz
  9390  15A6  0AFC               	incf	___fttol@lval+3,f
  9391  15A7                     i1l2676:	
  9392  15A7  087C               	movf	___fttol@lval+3,w
  9393  15A8  00F3               	movwf	?___fttol+3
  9394  15A9  087B               	movf	___fttol@lval+2,w
  9395  15AA  00F2               	movwf	?___fttol+2
  9396  15AB  087A               	movf	___fttol@lval+1,w
  9397  15AC  00F1               	movwf	?___fttol+1
  9398  15AD  0879               	movf	___fttol@lval,w
  9399  15AE  00F0               	movwf	?___fttol
  9400  15AF  0008               	return
  9401  15B0                     __end_of___fttol:	
  9402                           
  9403                           	psect	text40
  9404  06FE                     __ptext40:	
  9405 ;; *************** function ___ftmul *****************
  9406 ;; Defined at:
  9407 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  f1              3    8[COMMON] float 
  9410 ;;  f2              3   11[COMMON] float 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  9413 ;;  sign            1    9[BANK0 ] unsigned char 
  9414 ;;  cntr            1    8[BANK0 ] unsigned char 
  9415 ;;  exp             1    4[BANK0 ] unsigned char 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  3    8[COMMON] float 
  9418 ;; Registers used:
  9419 ;;		wreg, status,2, status,0, pclath, cstack
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9425 ;;      Params:         6       0       0       0       0
  9426 ;;      Locals:         0       6       0       0       0
  9427 ;;      Temps:          0       4       0       0       0
  9428 ;;      Totals:         6      10       0       0       0
  9429 ;;Total ram usage:       16 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:    1
  9432 ;; This function calls:
  9433 ;;		___ftpack
  9434 ;; This function is called by:
  9435 ;;		_Fuzzy
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           
  9440                           ;psect for function ___ftmul
  9441  06FE                     ___ftmul:	
  9442                           
  9443                           ;incstack = 0
  9444                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9445  06FE  0878               	movf	___ftmul@f1,w
  9446  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  9447  0700  1303               	bcf	3,6	;RP1=0, select bank0
  9448  0701  00A0               	movwf	??___ftmul
  9449  0702  0879               	movf	___ftmul@f1+1,w
  9450  0703  00A1               	movwf	??___ftmul+1
  9451  0704  087A               	movf	___ftmul@f1+2,w
  9452  0705  00A2               	movwf	??___ftmul+2
  9453  0706  1003               	clrc
  9454  0707  0D21               	rlf	??___ftmul+1,w
  9455  0708  0D22               	rlf	??___ftmul+2,w
  9456  0709  00A3               	movwf	??___ftmul+3
  9457  070A  0823               	movf	??___ftmul+3,w
  9458  070B  00A4               	movwf	___ftmul@exp
  9459  070C  08A4               	movf	___ftmul@exp,f
  9460  070D  1D03               	skipz
  9461  070E  2F16               	goto	i1l2592
  9462  070F  3000               	movlw	0
  9463  0710  00F8               	movwf	?___ftmul
  9464  0711  3000               	movlw	0
  9465  0712  00F9               	movwf	?___ftmul+1
  9466  0713  3000               	movlw	0
  9467  0714  00FA               	movwf	?___ftmul+2
  9468  0715  0008               	return
  9469  0716                     i1l2592:	
  9470  0716  087B               	movf	___ftmul@f2,w
  9471  0717  00A0               	movwf	??___ftmul
  9472  0718  087C               	movf	___ftmul@f2+1,w
  9473  0719  00A1               	movwf	??___ftmul+1
  9474  071A  087D               	movf	___ftmul@f2+2,w
  9475  071B  00A2               	movwf	??___ftmul+2
  9476  071C  1003               	clrc
  9477  071D  0D21               	rlf	??___ftmul+1,w
  9478  071E  0D22               	rlf	??___ftmul+2,w
  9479  071F  00A3               	movwf	??___ftmul+3
  9480  0720  0823               	movf	??___ftmul+3,w
  9481  0721  00A9               	movwf	___ftmul@sign
  9482  0722  08A9               	movf	___ftmul@sign,f
  9483  0723  1D03               	skipz
  9484  0724  2F2C               	goto	i1l2598
  9485  0725  3000               	movlw	0
  9486  0726  00F8               	movwf	?___ftmul
  9487  0727  3000               	movlw	0
  9488  0728  00F9               	movwf	?___ftmul+1
  9489  0729  3000               	movlw	0
  9490  072A  00FA               	movwf	?___ftmul+2
  9491  072B  0008               	return
  9492  072C                     i1l2598:	
  9493  072C  0829               	movf	___ftmul@sign,w
  9494  072D  3E7B               	addlw	123
  9495  072E  00A0               	movwf	??___ftmul
  9496  072F  0820               	movf	??___ftmul,w
  9497  0730  07A4               	addwf	___ftmul@exp,f
  9498  0731  0878               	movf	___ftmul@f1,w
  9499  0732  00A0               	movwf	??___ftmul
  9500  0733  0879               	movf	___ftmul@f1+1,w
  9501  0734  00A1               	movwf	??___ftmul+1
  9502  0735  087A               	movf	___ftmul@f1+2,w
  9503  0736  00A2               	movwf	??___ftmul+2
  9504  0737  3010               	movlw	16
  9505  0738                     u298_25:	
  9506  0738  1003               	clrc
  9507  0739  0CA2               	rrf	??___ftmul+2,f
  9508  073A  0CA1               	rrf	??___ftmul+1,f
  9509  073B  0CA0               	rrf	??___ftmul,f
  9510  073C  3EFF               	addlw	-1
  9511  073D  1D03               	skipz
  9512  073E  2F38               	goto	u298_25
  9513  073F  0820               	movf	??___ftmul,w
  9514  0740  00A3               	movwf	??___ftmul+3
  9515  0741  0823               	movf	??___ftmul+3,w
  9516  0742  00A9               	movwf	___ftmul@sign
  9517  0743  087B               	movf	___ftmul@f2,w
  9518  0744  00A0               	movwf	??___ftmul
  9519  0745  087C               	movf	___ftmul@f2+1,w
  9520  0746  00A1               	movwf	??___ftmul+1
  9521  0747  087D               	movf	___ftmul@f2+2,w
  9522  0748  00A2               	movwf	??___ftmul+2
  9523  0749  3010               	movlw	16
  9524  074A                     u299_25:	
  9525  074A  1003               	clrc
  9526  074B  0CA2               	rrf	??___ftmul+2,f
  9527  074C  0CA1               	rrf	??___ftmul+1,f
  9528  074D  0CA0               	rrf	??___ftmul,f
  9529  074E  3EFF               	addlw	-1
  9530  074F  1D03               	skipz
  9531  0750  2F4A               	goto	u299_25
  9532  0751  0820               	movf	??___ftmul,w
  9533  0752  00A3               	movwf	??___ftmul+3
  9534  0753  0823               	movf	??___ftmul+3,w
  9535  0754  06A9               	xorwf	___ftmul@sign,f
  9536  0755  3080               	movlw	128
  9537  0756  00A0               	movwf	??___ftmul
  9538  0757  0820               	movf	??___ftmul,w
  9539  0758  05A9               	andwf	___ftmul@sign,f
  9540  0759  17F9               	bsf	___ftmul@f1+1,7
  9541  075A  17FC               	bsf	___ftmul@f2+1,7
  9542  075B  30FF               	movlw	255
  9543  075C  05FB               	andwf	___ftmul@f2,f
  9544  075D  30FF               	movlw	255
  9545  075E  05FC               	andwf	___ftmul@f2+1,f
  9546  075F  3000               	movlw	0
  9547  0760  05FD               	andwf	___ftmul@f2+2,f
  9548  0761  3000               	movlw	0
  9549  0762  00A5               	movwf	___ftmul@f3_as_product
  9550  0763  3000               	movlw	0
  9551  0764  00A6               	movwf	___ftmul@f3_as_product+1
  9552  0765  3000               	movlw	0
  9553  0766  00A7               	movwf	___ftmul@f3_as_product+2
  9554  0767  3007               	movlw	7
  9555  0768  00A0               	movwf	??___ftmul
  9556  0769  0820               	movf	??___ftmul,w
  9557  076A  00A8               	movwf	___ftmul@cntr
  9558  076B                     i1l2610:	
  9559  076B  1C78               	btfss	___ftmul@f1,0
  9560  076C  2F7B               	goto	i1l2614
  9561  076D  087B               	movf	___ftmul@f2,w
  9562  076E  07A5               	addwf	___ftmul@f3_as_product,f
  9563  076F  087C               	movf	___ftmul@f2+1,w
  9564  0770  1103               	clrz
  9565  0771  1803               	skipnc
  9566  0772  0A7C               	incf	___ftmul@f2+1,w
  9567  0773  1D03               	btfss	3,2
  9568  0774  07A6               	addwf	___ftmul@f3_as_product+1,f
  9569  0775  087D               	movf	___ftmul@f2+2,w
  9570  0776  1103               	clrz
  9571  0777  1803               	skipnc
  9572  0778  0A7D               	incf	___ftmul@f2+2,w
  9573  0779  1D03               	btfss	3,2
  9574  077A  07A7               	addwf	___ftmul@f3_as_product+2,f
  9575  077B                     i1l2614:	
  9576  077B  3001               	movlw	1
  9577  077C                     u302_25:	
  9578  077C  1003               	clrc
  9579  077D  0CFA               	rrf	___ftmul@f1+2,f
  9580  077E  0CF9               	rrf	___ftmul@f1+1,f
  9581  077F  0CF8               	rrf	___ftmul@f1,f
  9582  0780  3EFF               	addlw	-1
  9583  0781  1D03               	skipz
  9584  0782  2F7C               	goto	u302_25
  9585  0783  3001               	movlw	1
  9586  0784                     u303_25:	
  9587  0784  1003               	clrc
  9588  0785  0DFB               	rlf	___ftmul@f2,f
  9589  0786  0DFC               	rlf	___ftmul@f2+1,f
  9590  0787  0DFD               	rlf	___ftmul@f2+2,f
  9591  0788  3EFF               	addlw	-1
  9592  0789  1D03               	skipz
  9593  078A  2F84               	goto	u303_25
  9594  078B  3001               	movlw	1
  9595  078C  02A8               	subwf	___ftmul@cntr,f
  9596  078D  1D03               	btfss	3,2
  9597  078E  2F6B               	goto	i1l2610
  9598  078F  3009               	movlw	9
  9599  0790  00A0               	movwf	??___ftmul
  9600  0791  0820               	movf	??___ftmul,w
  9601  0792  00A8               	movwf	___ftmul@cntr
  9602  0793                     i1l2622:	
  9603  0793  1C78               	btfss	___ftmul@f1,0
  9604  0794  2FA3               	goto	i1l2626
  9605  0795  087B               	movf	___ftmul@f2,w
  9606  0796  07A5               	addwf	___ftmul@f3_as_product,f
  9607  0797  087C               	movf	___ftmul@f2+1,w
  9608  0798  1103               	clrz
  9609  0799  1803               	skipnc
  9610  079A  0A7C               	incf	___ftmul@f2+1,w
  9611  079B  1D03               	btfss	3,2
  9612  079C  07A6               	addwf	___ftmul@f3_as_product+1,f
  9613  079D  087D               	movf	___ftmul@f2+2,w
  9614  079E  1103               	clrz
  9615  079F  1803               	skipnc
  9616  07A0  0A7D               	incf	___ftmul@f2+2,w
  9617  07A1  1D03               	btfss	3,2
  9618  07A2  07A7               	addwf	___ftmul@f3_as_product+2,f
  9619  07A3                     i1l2626:	
  9620  07A3  3001               	movlw	1
  9621  07A4                     u307_25:	
  9622  07A4  1003               	clrc
  9623  07A5  0CFA               	rrf	___ftmul@f1+2,f
  9624  07A6  0CF9               	rrf	___ftmul@f1+1,f
  9625  07A7  0CF8               	rrf	___ftmul@f1,f
  9626  07A8  3EFF               	addlw	-1
  9627  07A9  1D03               	skipz
  9628  07AA  2FA4               	goto	u307_25
  9629  07AB  3001               	movlw	1
  9630  07AC                     u308_25:	
  9631  07AC  1003               	clrc
  9632  07AD  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9633  07AE  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9634  07AF  0CA5               	rrf	___ftmul@f3_as_product,f
  9635  07B0  3EFF               	addlw	-1
  9636  07B1  1D03               	skipz
  9637  07B2  2FAC               	goto	u308_25
  9638  07B3  3001               	movlw	1
  9639  07B4  02A8               	subwf	___ftmul@cntr,f
  9640  07B5  1D03               	btfss	3,2
  9641  07B6  2F93               	goto	i1l2622
  9642  07B7  0825               	movf	___ftmul@f3_as_product,w
  9643  07B8  00F0               	movwf	___ftpack@arg
  9644  07B9  0826               	movf	___ftmul@f3_as_product+1,w
  9645  07BA  00F1               	movwf	___ftpack@arg+1
  9646  07BB  0827               	movf	___ftmul@f3_as_product+2,w
  9647  07BC  00F2               	movwf	___ftpack@arg+2
  9648  07BD  0824               	movf	___ftmul@exp,w
  9649  07BE  00A0               	movwf	??___ftmul
  9650  07BF  0820               	movf	??___ftmul,w
  9651  07C0  00F3               	movwf	___ftpack@exp
  9652  07C1  0829               	movf	___ftmul@sign,w
  9653  07C2  00A1               	movwf	??___ftmul+1
  9654  07C3  0821               	movf	??___ftmul+1,w
  9655  07C4  00F4               	movwf	___ftpack@sign
  9656  07C5  160A  118A  24BC   	fcall	___ftpack
  9657  07C8  0870               	movf	?___ftpack,w
  9658  07C9  00F8               	movwf	?___ftmul
  9659  07CA  0871               	movf	?___ftpack+1,w
  9660  07CB  00F9               	movwf	?___ftmul+1
  9661  07CC  0872               	movf	?___ftpack+2,w
  9662  07CD  00FA               	movwf	?___ftmul+2
  9663  07CE  0008               	return
  9664  07CF                     __end_of___ftmul:	
  9665                           
  9666                           	psect	text41
  9667  14BC                     __ptext41:	
  9668 ;; *************** function ___ftpack *****************
  9669 ;; Defined at:
  9670 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;  arg             3    0[COMMON] unsigned um
  9673 ;;  exp             1    3[COMMON] unsigned char 
  9674 ;;  sign            1    4[COMMON] unsigned char 
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;		None
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  3    0[COMMON] float 
  9679 ;; Registers used:
  9680 ;;		wreg, status,2, status,0
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9686 ;;      Params:         5       0       0       0       0
  9687 ;;      Locals:         0       0       0       0       0
  9688 ;;      Temps:          3       0       0       0       0
  9689 ;;      Totals:         8       0       0       0       0
  9690 ;;Total ram usage:        8 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; This function calls:
  9693 ;;		Nothing
  9694 ;; This function is called by:
  9695 ;;		___ftadd
  9696 ;;		___ftdiv
  9697 ;;		___ftmul
  9698 ;;		___lwtoft
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           
  9703                           ;psect for function ___ftpack
  9704  14BC                     ___ftpack:	
  9705                           
  9706                           ;incstack = 0
  9707                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9708  14BC  0873               	movf	___ftpack@exp,w
  9709  14BD  1903               	btfsc	3,2
  9710  14BE  2CC4               	goto	i1l2266
  9711  14BF  0872               	movf	___ftpack@arg+2,w
  9712  14C0  0471               	iorwf	___ftpack@arg+1,w
  9713  14C1  0470               	iorwf	___ftpack@arg,w
  9714  14C2  1D03               	skipz
  9715  14C3  2CD7               	goto	i1l2272
  9716  14C4                     i1l2266:	
  9717  14C4  3000               	movlw	0
  9718  14C5  00F0               	movwf	?___ftpack
  9719  14C6  3000               	movlw	0
  9720  14C7  00F1               	movwf	?___ftpack+1
  9721  14C8  3000               	movlw	0
  9722  14C9  00F2               	movwf	?___ftpack+2
  9723  14CA  0008               	return
  9724  14CB                     i1l2270:	
  9725  14CB  3001               	movlw	1
  9726  14CC  00F5               	movwf	??___ftpack
  9727  14CD  0875               	movf	??___ftpack,w
  9728  14CE  07F3               	addwf	___ftpack@exp,f
  9729  14CF  3001               	movlw	1
  9730  14D0                     u216_25:	
  9731  14D0  1003               	clrc
  9732  14D1  0CF2               	rrf	___ftpack@arg+2,f
  9733  14D2  0CF1               	rrf	___ftpack@arg+1,f
  9734  14D3  0CF0               	rrf	___ftpack@arg,f
  9735  14D4  3EFF               	addlw	-1
  9736  14D5  1D03               	skipz
  9737  14D6  2CD0               	goto	u216_25
  9738  14D7                     i1l2272:	
  9739  14D7  30FE               	movlw	254
  9740  14D8  0572               	andwf	___ftpack@arg+2,w
  9741  14D9  1903               	btfsc	3,2
  9742  14DA  2CF2               	goto	i1l769
  9743  14DB  2CCB               	goto	i1l2270
  9744  14DC                     i1l2274:	
  9745  14DC  3001               	movlw	1
  9746  14DD  00F5               	movwf	??___ftpack
  9747  14DE  0875               	movf	??___ftpack,w
  9748  14DF  07F3               	addwf	___ftpack@exp,f
  9749  14E0  3001               	movlw	1
  9750  14E1  07F0               	addwf	___ftpack@arg,f
  9751  14E2  3000               	movlw	0
  9752  14E3  1803               	skipnc
  9753  14E4  3001               	movlw	1
  9754  14E5  07F1               	addwf	___ftpack@arg+1,f
  9755  14E6  3000               	movlw	0
  9756  14E7  1803               	skipnc
  9757  14E8  3001               	movlw	1
  9758  14E9  07F2               	addwf	___ftpack@arg+2,f
  9759  14EA  3001               	movlw	1
  9760  14EB                     u218_25:	
  9761  14EB  1003               	clrc
  9762  14EC  0CF2               	rrf	___ftpack@arg+2,f
  9763  14ED  0CF1               	rrf	___ftpack@arg+1,f
  9764  14EE  0CF0               	rrf	___ftpack@arg,f
  9765  14EF  3EFF               	addlw	-1
  9766  14F0  1D03               	skipz
  9767  14F1  2CEB               	goto	u218_25
  9768  14F2                     i1l769:	
  9769  14F2  30FF               	movlw	255
  9770  14F3  0572               	andwf	___ftpack@arg+2,w
  9771  14F4  1903               	btfsc	3,2
  9772  14F5  2D01               	goto	i1l2282
  9773  14F6  2CDC               	goto	i1l2274
  9774  14F7                     i1l2280:	
  9775  14F7  3001               	movlw	1
  9776  14F8  02F3               	subwf	___ftpack@exp,f
  9777  14F9  3001               	movlw	1
  9778  14FA                     u220_25:	
  9779  14FA  1003               	clrc
  9780  14FB  0DF0               	rlf	___ftpack@arg,f
  9781  14FC  0DF1               	rlf	___ftpack@arg+1,f
  9782  14FD  0DF2               	rlf	___ftpack@arg+2,f
  9783  14FE  3EFF               	addlw	-1
  9784  14FF  1D03               	skipz
  9785  1500  2CFA               	goto	u220_25
  9786  1501                     i1l2282:	
  9787  1501  1FF1               	btfss	___ftpack@arg+1,7
  9788  1502  2CF7               	goto	i1l2280
  9789  1503  1873               	btfsc	___ftpack@exp,0
  9790  1504  2D0B               	goto	i1l775
  9791  1505  30FF               	movlw	255
  9792  1506  05F0               	andwf	___ftpack@arg,f
  9793  1507  307F               	movlw	127
  9794  1508  05F1               	andwf	___ftpack@arg+1,f
  9795  1509  30FF               	movlw	255
  9796  150A  05F2               	andwf	___ftpack@arg+2,f
  9797  150B                     i1l775:	
  9798  150B  1003               	clrc
  9799  150C  0CF3               	rrf	___ftpack@exp,f
  9800  150D  0873               	movf	___ftpack@exp,w
  9801  150E  00F5               	movwf	??___ftpack
  9802  150F  01F6               	clrf	??___ftpack+1
  9803  1510  01F7               	clrf	??___ftpack+2
  9804  1511  3010               	movlw	16
  9805  1512                     u223_25:	
  9806  1512  1003               	clrc
  9807  1513  0DF5               	rlf	??___ftpack,f
  9808  1514  0DF6               	rlf	??___ftpack+1,f
  9809  1515  0DF7               	rlf	??___ftpack+2,f
  9810  1516  3EFF               	addlw	-1
  9811  1517  1D03               	skipz
  9812  1518  2D12               	goto	u223_25
  9813  1519  0875               	movf	??___ftpack,w
  9814  151A  04F0               	iorwf	___ftpack@arg,f
  9815  151B  0876               	movf	??___ftpack+1,w
  9816  151C  04F1               	iorwf	___ftpack@arg+1,f
  9817  151D  0877               	movf	??___ftpack+2,w
  9818  151E  04F2               	iorwf	___ftpack@arg+2,f
  9819  151F  0874               	movf	___ftpack@sign,w
  9820  1520  1903               	btfsc	3,2
  9821  1521  0008               	return
  9822  1522  17F2               	bsf	___ftpack@arg+2,7
  9823  1523  0008               	return
  9824  1524                     __end_of___ftpack:	
  9825  007E                     btemp	set	126	;btemp
  9826  007E                     wtemp	set	126
  9827  007E                     wtemp0	set	126
  9828  0080                     wtemp1	set	128
  9829  0082                     wtemp2	set	130
  9830  0084                     wtemp3	set	132
  9831  0086                     wtemp4	set	134
  9832  0088                     wtemp5	set	136
  9833  007F                     wtemp6	set	127
  9834  007E                     ttemp	set	126
  9835  007E                     ttemp0	set	126
  9836  0081                     ttemp1	set	129
  9837  0084                     ttemp2	set	132
  9838  0087                     ttemp3	set	135
  9839  007F                     ttemp4	set	127
  9840  007E                     ltemp	set	126
  9841  007E                     ltemp0	set	126
  9842  0082                     ltemp1	set	130
  9843  0086                     ltemp2	set	134
  9844  0080                     ltemp3	set	128


Data Sizes:
    Strings     263
    Constant    10
    Data        8
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     36      76
    BANK3            96      3      59
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1258$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[6]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->___fttol
    ___ftadd->___ftmul
    _max_val->___ftge
    ___lwtoft->___ftpack
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4553
                                              0 BANK3      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    2129
                                             18 BANK1     18    14      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     296
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                             12 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     366
                                              4 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              5 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             19 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              4 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              6 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              4 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   55017
                                              0 BANK1      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               22    22      0   51587
                                             57 BANK0     22    22      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   13966
                                             39 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14823
                                             39 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2968
                                             23 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5678
                                             10 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2502
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      3      3B       9       61.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     24      4C       7       95.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E4      12        0.0%
ABS                  0      0      E4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu May 26 20:41:27 2022

           ?i1_PWM_DutyCycle2 0070                             _x 00B8                             _y 00BB  
                           pc 0002                   ?_LCD_Cursor 00CA       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 01C5                            fsr 0004           ___wmul@multiplicand 00CC  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0036  
                ___ftadd@exp2 0035                 _contagens_tm0 00BE                  ___ftadd@sign 0034  
                         l212 0A52                           l237 1173                           l507 0F2F  
                         l608 12EF                           l663 15C2                           l489 0E28  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0C50  
                         _rpm 01A6                           fsr0 0004                           _pwm 00C4  
                         _sum 00AF    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00CE                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0041                  ___ftdiv@sign 0046  
          LCD_WriteString@Str 00CC                          l3014 1225                          l3120 0F92  
                        l3104 0F63                          l3112 0F79                          l3114 0F7D  
                        l3042 0E24                          l3028 1331                          l3052 0E60  
                        l3134 0FA5                          l3126 0FA1                          l3062 0EB0  
                        l3046 0E2F                          l3064 0ED5                          l3048 0E44  
                        l3136 0DF4                          l2530 118B                          l3074 0EEE  
                        l3138 0FF9                          l2702 140F                          l3094 0F4E  
                        l3086 0F21                          l3078 0EF4                          l2720 1386  
                        l2536 12E7                          l3096 0F52                          l2714 136A  
                        l2564 15E3                          l2556 15D3                          l2716 1378  
                        l2724 1391                          l2582 1636                          l2574 161B  
                        l2566 15F3                          l2578 1628                          l2690 13E0  
                        l2908 07CF                          l2692 13EE                          l2698 1404  
                        STR_1 10EA                          STR_2 10F8                          STR_3 1105  
                        STR_4 10CE                          STR_5 10B2                          STR_6 10A4  
                        STR_7 10DC                          STR_8 10C0                          STR_9 1086  
                        u3215 13E3                          u3305 137E                          u3235 13EF  
                        u3315 1387                          u3245 13FB                          u4207 0852  
                        u3255 1405                          u4217 085E                          u4227 086C  
                        u4147 0A4B                          u4237 087A                          u3285 136D  
                        u4157 0AF3                          u4247 0886                          u4167 11DB  
                        u4257 1231                          u4177 0828                          u3625 1421  
                        u4267 1314                          u4187 0838                          u2915 15F5  
                        u2835 12F0                          u3715 0F17                          u4277 1322  
                        u4197 0846                          u2925 160A                          u2845 12F7  
                        u4287 132E                          u3655 124C                          u2935 161C  
                        u4297 11C4                          u3595 126D                          u3755 0F3E  
                        u2895 15E7                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 09AD                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 00B2  
                        btemp 007E              __end_of_ADC_Init 119F                          ltemp 007E  
                        start 0016                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 11CA                  ___ftmul@cntr 0028  
                ___ftmul@sign 0029       __end_of_USART_WriteChar 117D                         ??_ISR 00C6  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 0889               __end_of___aldiv 163F                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 1800                         STR_10 1095  
                       STR_11 1044                         STR_12 1061                         STR_13 1075  
                       STR_14 111E                         STR_15 111E                         STR_16 1092  
                       STR_17 1118                 __CFG_WDTE$OFF 0000                         STR_18 1112  
                       STR_19 101C               __end_of___ftdiv 16F7               __end_of___ftneg 114D  
             __end_of___ftmul 07CF                         _T1CON 0010               __end_of___fttol 15B0  
             __end_of___lwdiv 1416                         i1l128 09A4                         i1l138 0C47  
                       i1l237 114E                         i1l190 0DDC               __end_of___lwmod 1398  
                       i1l194 0CC0                         i1l197 0CE9                         i1l608 12A6  
                       i1l775 150B                         i1l769 14F2                         i1l798 179F  
                       _RCREG 001A                         _TMR1H 000F                         _TMR1L 000E  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
               __CFG_PWRTE$ON 0000                         _Fuzzy 0061                         _foTip 0196  
                       _derro 0190               __end_of_dpowers 101C               __end_of_max_val 081E  
             __end_of_isdigit 118D                 ___ftpack@sign 0074                         _trimf 0889  
              __CFG_BOREN$OFF 0000           __size_of_LCD_Cursor 0020                         pclath 000A  
            __end_of_PWM_Init 12E3              __end_ofi1___wmul 12BF                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
         i1___wmul@multiplier 0078                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __end_of_sprintf 1000  
          __size_ofi1___lwdiv 003E                ??_LCD_WriteCmd 00CA                ?_LCD_WriteData 0070  
                 ?_USART_Init 00D9         i1TIMER0_Set@contagens 0070               __initialization 0019  
                __end_of_main 0AFA                        ??_main 01C8                 ___fttol@sign1 0078  
                ?_TIMER0_Init 0070             __end_of_LCD_Clear 1331                    Fuzzy@a_240 0061  
                  Fuzzy@a_237 005B                    Fuzzy@a_238 005D                    Fuzzy@a_239 005F  
                      ?_Fuzzy 0070                    Fuzzy@reduz 0069                        _ADRESH 001E  
                      _ADRESL 009E                        _EEDATA 010C                        _CCPR1L 0015  
                      _CCPR2L 001B                        _EECON2 018D              __end_of___ftpack 1524  
                      ?_trimf 0047                        i1l2300 1720                        i1l2310 1736  
                      i1l2304 1727                        i1l2410 1486                        i1l2330 1771  
                      i1l2322 1750                        i1l3210 0C75                        i1l2340 178F  
                      i1l2332 1776                        i1l2270 14CB                        i1l2414 14AD  
                      i1l2350 17C3                        i1l2342 179B                        i1l2334 177A  
                      i1l3222 0CA3                        i1l2280 14F7                        i1l2272 14D7  
                      i1l2360 17E6                        i1l2328 1765                        i1l3304 0DD7  
                      i1l3232 0CC1                        i1l3216 0C8C                        i1l2282 1501  
                      i1l2274 14DC                        i1l2266 14C4                        i1l2610 076B  
                      i1l2346 17B1                        i1l2370 1657                        i1l2450 0902  
                      i1l3306 0DD8                        i1l3250 0D02                        i1l3156 129E  
                      i1l3244 0CEB                        i1l2622 0793                        i1l2614 077B  
                      i1l2390 16B2                        i1l3262 0D30                        i1l2376 166D  
                      i1l2480 0BA5                        i1l2456 0987                        i1l2800 031D  
                      i1l3184 13C4                        i1l3176 13A0                        i1l3256 0D19  
                      i1l3280 0D7B                        i1l2626 07A3                        i1l2642 153C  
                      i1l2474 0B73                        i1l2810 03E2                        i1l3178 13AE  
                      i1l3274 0D5E                        i1l2660 156E                        i1l2804 037B  
                      i1l3188 13CF                        i1l3292 0D98                        i1l3268 0D47  
                      i1l2670 1596                        i1l2662 157E                        i1l2398 16D1  
                      i1l2486 0C2A                        i1l2592 0716                        i1l2672 1599  
                      i1l2840 055A                        i1l2824 0480                        i1l2760 0107  
                      i1l2850 05A9                        i1l2834 054B                        i1l2738 1279  
                      i1l2676 15A7                        i1l2668 158B                        i1l2844 0577  
                      i1l2828 04E4                        i1l2756 00EA                        i1l2598 072C  
                      i1l2862 05E5                        i1l2854 05C2                        i1l2774 01A5  
                      i1l2784 0270                        i1l2778 0209                        i1l2868 069C  
                      u220_25 14FA                        i1l2896 1214                        i1l2888 1205  
                      u302_25 077C                        u223_25 1512                        u303_25 0784  
                      u311_25 1543                        u216_25 14D0                        u240_25 177B  
                      u218_25 14EB                        u314_25 156F                        u234_25 1751  
                      u307_25 07A4                        u243_25 1790                        u251_25 167F  
                      u260_21 14A0                        u260_22 14A1                        u260_23 14A6  
                      u260_24 14A7                        u308_25 07AC                        u252_25 1691  
                      u340_25 026E                        u317_25 158D                        u237_25 1766  
                      u253_25 16B3                        u254_25 16C4                        u334_25 11F2  
                      u350_25 0558                        u255_25 16D2                        u343_25 031B  
                      u345_25 03E0                        u258_21 1479              __end_of___lwtoft 11B3  
                      u258_22 147A                        u258_23 147F                        u258_24 1480  
                      u354_25 05C0                        u338_25 01A3                        u355_25 05E3  
                      u347_25 047E                        u356_25 069A                        u349_25 0549  
         __size_of_TIMER0_Set 0008                        u390_25 13A3                        u392_25 13AF  
                      u393_25 13BB                        u298_25 0738                        u394_25 13C5  
                      u386_25 12A7                        u299_25 074A                        u387_25 12AE  
                      _SSPADD 0093                        _SSPBUF 0013                        Fuzzy@a 0059  
            LCD_WriteCmd@Byte 00CB           i1_USART_WriteString 1279                        ___ftge 145F  
                   ??___aldiv 00D2                        ___wmul 12E3                     ??___ftadd 0030  
              _PWM_DutyCycle1 1237                _PWM_DutyCycle2 1258              ?_USART_WriteChar 0070  
                   ??___ftdiv 003D                     ??___ftneg 0073                        _deltaV 00C0  
                   ??___ftmul 0020                     ??___fttol 0074                     ??___lwdiv 00CE  
                   ??___lwmod 00D6                        _fitemp 00A3         USART_ReceiveChar@byte 0074  
                      _trapmf 0AFA                        _pulsos 00C2                        _status 01A8  
       ___ftmul@f3_as_product 0025                     ??_max_val 007C             __end_ofi1___lwdiv 13D6  
                   ??_isdigit 00CA                     ?_ADC_Init 0070                        saved_w 007E  
        ?i1_USART_WriteString 0071           __size_of_USART_Init 0049                        trimf@a 004A  
                      trimf@b 004D                        trimf@c 0050                        trimf@x 0047  
                   ??_sprintf 00DC                 ?i1_TIMER0_Set 0070       __end_of__initialization 005D  
                   ?_LCD_Init 0070                    ___ftadd@f1 002A                    ___ftadd@f2 002D  
             ??_LCD_WriteData 00CA                    ___ftge@ff1 0070                    ___ftge@ff2 0073  
                  ___ftdiv@f1 003A                    ___ftdiv@f2 0037                    ___ftdiv@f3 0042  
                  ___ftneg@f1 0070        __end_of_PWM_DutyCycle1 1258        __end_of_PWM_DutyCycle2 1279  
                  ___ftmul@f1 0078                    ___ftmul@f2 007B                    ___fttol@f1 0070  
              __pcstackCOMMON 0070                 __end_of_Fuzzy 06FE                  __pidataBANK1 1137  
                __pidataBANK3 113F                 LCD_Cursor@Col 00CA                 LCD_Cursor@Row 00CC  
                ??_LCD_Cursor 00CB               _LCD_WriteString 1331                 __end_of_trimf 09AD  
                  ___lwtoft@c 0078                     ?_PWM_Init 0070                     ?i1___wmul 0078  
              _OPTION_REGbits 0081                    ??_ADC_Init 00CA          __end_of_LCD_WriteCmd 11CA  
       ??i1_USART_WriteString 0073                       ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B  
              ??i1_TIMER0_Set 0070                  sprintf@width 00E6                       ??_trimf 007E  
                  __pbssBANK1 00A0                    __pbssBANK3 0190            __end_of_LCD_Cursor 1237  
                  ??_LCD_Init 00CC         i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 00CA  
             ?_PWM_DutyCycle2 00CA                    __pmaintext 09AD                   Fuzzy@mantem 0066  
                     ?___ftge 0070                       ?___wmul 00CA                    __pintentry 0004  
                ??_TIMER0_Set 00CA                       _CCP1CON 0017                       _CCP2CON 001D  
                   ?___ftpack 0070                       ?_trapmf 0047                    ??_PWM_Init 00CA  
                  ??i1___wmul 007C                     ?___lwtoft 0078          __size_of_TIMER0_Init 000B  
     _posicao_do_grafico_food 019C                       _SSPCON2 0091                    __stringtab 1000  
                  _fisetpoint 0193            __end_of_TIMER0_Set 115D       __end_of_LCD_WriteString 1362  
                   _ADCResult 01A2                  ??_USART_Init 00DD             LCD_WriteData@Byte 00CB  
                     ___aldiv 15B0               __size_of___ftge 005D                       ___ftadd 16F7  
                     ___ftdiv 163F                       ___ftneg 1145               __size_of___wmul 0025  
                     ___ftmul 06FE                       ___fttol 1524                       ___lwdiv 13D6  
                     ___lwmod 1362                    ??___ftpack 0075            _posicao_do_grafico 0199  
                     __ptext1 0DED                       __ptext2 117D                       __ptext3 12E3  
                     __ptext4 1362                       __ptext5 13D6                       __ptext6 07CF  
                     __ptext7 1170                       __ptext8 1416                       __ptext9 15B0  
                  _pas_cooler 00EA                    ??___lwtoft 007B               __size_of_trapmf 0156  
                __size_of_ISR 019D                     _T1CONbits 0010                       _dpowers 1012  
           i1___lwdiv@divisor 0070                     _T2CONbits 0012                       _max_val 0800  
                     _isdigit 117D             i1___lwdiv@counter 0077              ___aldiv@dividend 00CE  
                   _LCD_Clear 1308            __end_of_USART_Init 145F                       _sprintf 0DED  
                     clrloop0 115E          end_of_initialization 005D                     _RCSTAbits 0018  
            ___aldiv@quotient 00D5                       trapmf@a 004A                       trapmf@b 004D  
                     trapmf@c 0050                       trapmf@d 0053                       trapmf@x 0047  
                     trimf@ua 0053                  __pstringtext 1000          __end_ofi1_TIMER0_Set 113F  
       i1___wmul@multiplicand 007A         __size_of_LCD_WriteCmd 0017                     _PORTBbits 0006  
                   _PORTEbits 0009                    ?_LCD_Clear 0070              i1_PWM_DutyCycle2 11E1  
           __size_of_ADC_Init 0012                     i1___lwdiv 1398                  _contador_rb6 01A4  
         PWM_DutyCycle1@valor 00CA                    _total_area 00B5           PWM_DutyCycle2@valor 00CA  
                 _CCP1CONbits 0017                   ___ftdiv@exp 0045                   _CCP2CONbits 001D  
                   _TXSTAbits 0098              ?_LCD_WriteString 00CC             __size_of_LCD_Init 006B  
                _LCD_WriteCmd 11B3                   ___ftmul@exp 0024                __end_of___ftge 14BC  
              __end_of___wmul 1308             i1_USART_WriteChar 114D            ?i1_USART_WriteChar 0070  
              __end_of_trapmf 0C50      __size_of_USART_WriteChar 000D             __size_of_PWM_Init 0024  
         start_initialization 0019             __size_ofi1___wmul 0023                   __end_of_ISR 0DED  
         ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070              ??_PWM_DutyCycle1 00CC  
            ??_PWM_DutyCycle2 00CC         __end_of_LCD_WriteData 11E1             _USART_ReceiveChar 11FC  
                    ??___ftge 0076            ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 1155  
                    ??___wmul 00CE                   __pdataBANK1 00EA                   __pdataBANK3 01C2  
 __end_ofi1_USART_WriteString 129C                      ??_trapmf 007E           ??_USART_ReceiveChar 0073  
           __size_of___ftpack 0068                     ___latbits 0002             __size_of___lwtoft 0014  
               __pcstackBANK0 0020                 __pcstackBANK1 00C6                 __pcstackBANK3 01C8  
                 ??_LCD_Clear 00CC           __end_of__stringdata 1123                  _isdigit$1454 00CA  
                 sprintf@_val 00E1                   sprintf@flag 00E5                   sprintf@prec 00E0  
   __end_of_USART_ReceiveChar 1217         __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 00CC  
         TIMER0_Set@contagens 00CA                  Fuzzy@aumenta 006C                      ?___aldiv 00CA  
                    ?___ftadd 002A                      ?___ftdiv 0037                      ?___ftneg 0070  
                    ?___ftmul 0078                      ?___fttol 0070                      ?___lwdiv 00CA  
                    ?___lwmod 00D2                     _ativa_fan 00A0                 ??_TIMER0_Init 00CA  
          USART_Init@BaudRate 00D9                      ?_max_val 0020                      ?_isdigit 0070  
                    _ADC_Init 118D                     _fop_rule1 00A6                     _fop_rule2 00A9  
                   _fop_rule3 00AC                __size_of_Fuzzy 069D    _posicao_do_grafico_service 019F  
            ___lwdiv@quotient 00CF                   ??i1___lwdiv 0074                      ?_sprintf 00D8  
              __size_of_trimf 0124             ??_USART_WriteChar 00CA                  i1_TIMER0_Set 1139  
             ___aldiv@divisor 00CA             interrupt_function 0004               ___aldiv@counter 00D3  
                    _LCD_Init 081E                ___wmul@product 00CE                     clear_ram0 115D  
                    _PIE1bits 008C                      _PIE2bits 008D                      _PIR1bits 000C  
                    _PIR2bits 000D                     _temp_lida 01AA      __end_ofi1_PWM_DutyCycle2 11FC  
                   _tempo_rb6 01AC    __size_ofi1_USART_WriteChar 0008                   _display_rpm 01B8  
                 _display_pwm 01AE                    _ADCON0bits 001F                   __stringbase 1012  
                  _ADCON1bits 009F                   __stringdata 101C                      _PWM_Init 12BF  
           ___wmul@multiplier 00CA                      i1___wmul 129C           __end_of_TIMER0_Init 1170  
  __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C                      Fuzzy@tip 0063  
            __size_of___aldiv 008F              __size_of___ftadd 0109              __size_of___ftdiv 00B8  
            __size_of___ftneg 0008              __size_of___ftmul 00D1              __size_of___fttol 008C  
            __size_of___lwdiv 0040              __size_of___lwmod 0036                      ___ftpack 14BC  
          __end_of__stringtab 1012                      ___lwtoft 119F              __size_of_max_val 001E  
            __size_of_isdigit 0010               ___lwdiv@divisor 00CA               ___lwdiv@counter 00D1  
           _USART_WriteString 07CF                      __ptext10 1155                      __ptext11 1165  
                    __ptext20 11B3                      __ptext12 12BF                      __ptext21 118D  
                    __ptext13 1258                      __ptext30 11E1                      __ptext22 0C50  
                    __ptext14 1237                      __ptext31 0889                      __ptext23 129C  
                    __ptext15 1331                      __ptext40 06FE                      __ptext32 0AFA  
                    __ptext24 1398                      __ptext16 11CA                      __ptext41 14BC  
                    __ptext33 1145                      __ptext25 1139                      __ptext17 081E  
                    __ptext34 163F                      __ptext26 11FC                      __ptext18 1217  
                    __ptext35 16F7                      __ptext27 1279                      __ptext19 1308  
                    __ptext36 0800                      __ptext28 114D                      __ptext37 145F  
                    __ptext29 0061                      __ptext38 119F                      __ptext39 1524  
          ?_USART_WriteString 00CB              __size_of_sprintf 0213            i1___lwdiv@dividend 0072  
               __size_of_main 014D           USART_WriteChar@byte 00CA           ??_USART_WriteString 00CD  
      i1USART_WriteString@str 0071                      _setpoint 01C2                    _LCD_Cursor 1217  
    __size_of_LCD_WriteString 0031            i1___lwdiv@quotient 0075                   _TIMER0_Init 1165  
                  _INTCONbits 000B     __end_of_USART_WriteString 0800                      max_val@a 0020  
                    max_val@b 0023                      isdigit@c 00CB                      intlevel1 0000  
                   sprintf@ap 00DF                     sprintf@sp 00E8              ___lwmod@dividend 00D4  
                   stringcode 100A          USART_WriteString@str 00CB                    _TIMER0_Set 1155  
                    trapmf@ua 0056               _USART_WriteChar 1170                      sprintf@c 00E9  
                    sprintf@f 00D8               ___lwmod@divisor 00D2               ___lwmod@counter 00D7  
                    stringtab 1000                  ___aldiv@sign 00D4        __size_of_LCD_WriteData 0017  
__size_ofi1_USART_WriteString 0023                   _SSPCON2bits 0091         i1PWM_DutyCycle2@valor 0070  
                  _SSPCONbits 0014                    _USART_Init 1416  
