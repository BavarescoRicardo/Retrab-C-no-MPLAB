

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jun 22 01:18:22 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK0
   603  11F9                     __pidataBANK0:	
   604                           
   605                           ;initializer for _tf
   606  11F9  3400               	retlw	0
   607  11FA  3448               	retlw	72
   608  11FB  3442               	retlw	66
   609                           
   610                           	psect	idataBANK1
   611  11FC                     __pidataBANK1:	
   612                           
   613                           ;initializer for _setpoint
   614  11FC  3400               	retlw	0
   615  11FD  34A0               	retlw	160
   616  11FE  3441               	retlw	65
   617                           
   618                           ;initializer for _pas_cooler
   619  11FF  3407               	retlw	7
   620  1200  3400               	retlw	0
   621                           
   622                           	psect	idataBANK3
   623  07FE                     __pidataBANK3:	
   624                           
   625                           ;initializer for _pwm
   626  07FE  3432               	retlw	50
   627  07FF  3400               	retlw	0
   628                           
   629                           	psect	strings
   630  1000                     __pstrings:	
   631  1000                     stringtab:	
   632  1000                     __stringtab:	
   633                           
   634                           ;	String table - string pointers are 1 byte each
   635  1000  1BFF               	btfsc	btemp+1,7
   636  1001  280A               	ljmp	stringcode
   637  1002  1383               	bcf	3,7
   638  1003  187F               	btfsc	btemp+1,0
   639  1004  1783               	bsf	3,7
   640  1005  0800               	movf	0,w
   641  1006  0A84               	incf	4,f
   642  1007  1903               	skipnz
   643  1008  0AFF               	incf	btemp+1,f
   644  1009  0008               	return
   645  100A                     stringcode:	
   646  100A                     stringdir:	
   647  100A  3010               	movlw	high stringdir
   648  100B  008A               	movwf	10
   649  100C  0804               	movf	4,w
   650  100D  0A84               	incf	4,f
   651  100E  0782               	addwf	2,f
   652  100F                     __stringbase:	
   653  100F  3400               	retlw	0
   654  1010                     __end_of__stringtab:	
   655  1010                     _dpowers:	
   656  1010  3401               	retlw	1
   657  1011  3400               	retlw	0
   658  1012  340A               	retlw	10
   659  1013  3400               	retlw	0
   660  1014  3464               	retlw	100
   661  1015  3400               	retlw	0
   662  1016  34E8               	retlw	232
   663  1017  3403               	retlw	3
   664  1018  3410               	retlw	16
   665  1019  3427               	retlw	39
   666  101A                     __end_of_dpowers:	
   667  000E                     _TMR1	set	14
   668  001F                     _ADCON0bits	set	31
   669  001E                     _ADRESH	set	30
   670  0017                     _CCP1CON	set	23
   671  0017                     _CCP1CONbits	set	23
   672  001D                     _CCP2CON	set	29
   673  001D                     _CCP2CONbits	set	29
   674  0015                     _CCPR1L	set	21
   675  001B                     _CCPR2L	set	27
   676  000B                     _INTCONbits	set	11
   677  000C                     _PIR1bits	set	12
   678  000D                     _PIR2bits	set	13
   679  0005                     _PORTA	set	5
   680  0006                     _PORTB	set	6
   681  0006                     _PORTBbits	set	6
   682  0007                     _PORTC	set	7
   683  0008                     _PORTD	set	8
   684  0009                     _PORTE	set	9
   685  0009                     _PORTEbits	set	9
   686  001A                     _RCREG	set	26
   687  0018                     _RCSTAbits	set	24
   688  0013                     _SSPBUF	set	19
   689  0014                     _SSPCONbits	set	20
   690  0010                     _T1CON	set	16
   691  0010                     _T1CONbits	set	16
   692  0012                     _T2CONbits	set	18
   693  0001                     _TMR0	set	1
   694  000F                     _TMR1H	set	15
   695  000E                     _TMR1L	set	14
   696  0019                     _TXREG	set	25
   697  00C1                     _OERR	set	193
   698  009F                     _ADCON1bits	set	159
   699  009E                     _ADRESL	set	158
   700  0081                     _OPTION_REGbits	set	129
   701  008C                     _PIE1bits	set	140
   702  008D                     _PIE2bits	set	141
   703  0092                     _PR2	set	146
   704  0099                     _SPBRG	set	153
   705  0093                     _SSPADD	set	147
   706  0091                     _SSPCON2	set	145
   707  0091                     _SSPCON2bits	set	145
   708  0094                     _SSPSTATbits	set	148
   709  0085                     _TRISA	set	133
   710  0086                     _TRISB	set	134
   711  0087                     _TRISC	set	135
   712  0088                     _TRISD	set	136
   713  0089                     _TRISE	set	137
   714  0098                     _TXSTAbits	set	152
   715  010D                     _EEADR	set	269
   716  010C                     _EEDATA	set	268
   717  018C                     _EECON1bits	set	396
   718  018D                     _EECON2	set	397
   719  101A                     __stringdata:	
   720  101A                     STR_5:	
   721  101A  340A               	retlw	10
   722  101B  340D               	retlw	13
   723  101C  3420               	retlw	32	;' '
   724  101D  342D               	retlw	45	;'-'
   725  101E  342D               	retlw	45	;'-'
   726  101F  342D               	retlw	45	;'-'
   727  1020  342D               	retlw	45	;'-'
   728  1021  342D               	retlw	45	;'-'
   729  1022  342D               	retlw	45	;'-'
   730  1023  342D               	retlw	45	;'-'
   731  1024  3420               	retlw	32	;' '
   732  1025  3445               	retlw	69	;'E'
   733  1026  3453               	retlw	83	;'S'
   734  1027  3454               	retlw	84	;'T'
   735  1028  344F               	retlw	79	;'O'
   736  1029  3455               	retlw	85	;'U'
   737  102A  3452               	retlw	82	;'R'
   738  102B  344F               	retlw	79	;'O'
   739  102C  3420               	retlw	32	;' '
   740  102D  3444               	retlw	68	;'D'
   741  102E  3445               	retlw	69	;'E'
   742  102F  3420               	retlw	32	;' '
   743  1030  3450               	retlw	80	;'P'
   744  1031  3449               	retlw	73	;'I'
   745  1032  344C               	retlw	76	;'L'
   746  1033  3448               	retlw	72	;'H'
   747  1034  3441               	retlw	65	;'A'
   748  1035  3420               	retlw	32	;' '
   749  1036  342D               	retlw	45	;'-'
   750  1037  342D               	retlw	45	;'-'
   751  1038  342D               	retlw	45	;'-'
   752  1039  342D               	retlw	45	;'-'
   753  103A  342D               	retlw	45	;'-'
   754  103B  342D               	retlw	45	;'-'
   755  103C  342D               	retlw	45	;'-'
   756  103D  3420               	retlw	32	;' '
   757  103E  340A               	retlw	10
   758  103F  340D               	retlw	13
   759  1040  3420               	retlw	32	;' '
   760  1041  3400               	retlw	0
   761  1042                     STR_2:	
   762  1042  3449               	retlw	73	;'I'
   763  1043  346E               	retlw	110	;'n'
   764  1044  3469               	retlw	105	;'i'
   765  1045  3463               	retlw	99	;'c'
   766  1046  3469               	retlw	105	;'i'
   767  1047  3461               	retlw	97	;'a'
   768  1048  346C               	retlw	108	;'l'
   769  1049  3469               	retlw	105	;'i'
   770  104A  347A               	retlw	122	;'z'
   771  104B  3461               	retlw	97	;'a'
   772  104C  346E               	retlw	110	;'n'
   773  104D  3464               	retlw	100	;'d'
   774  104E  346F               	retlw	111	;'o'
   775  104F  342E               	retlw	46	;'.'
   776  1050  342E               	retlw	46	;'.'
   777  1051  342E               	retlw	46	;'.'
   778  1052  3400               	retlw	0
   779  1053                     STR_1:	
   780  1053  340A               	retlw	10
   781  1054  340D               	retlw	13
   782  1055  3464               	retlw	100	;'d'
   783  1056  3465               	retlw	101	;'e'
   784  1057  3473               	retlw	115	;'s'
   785  1058  346C               	retlw	108	;'l'
   786  1059  3469               	retlw	105	;'i'
   787  105A  3467               	retlw	103	;'g'
   788  105B  3461               	retlw	97	;'a'
   789  105C  3464               	retlw	100	;'d'
   790  105D  346F               	retlw	111	;'o'
   791  105E  340A               	retlw	10
   792  105F  340D               	retlw	13
   793  1060  3400               	retlw	0
   794  1061                     STR_4:	
   795  1061  346B               	retlw	107	;'k'
   796  1062  346D               	retlw	109	;'m'
   797  1063  3448               	retlw	72	;'H'
   798  1064  343A               	retlw	58	;':'
   799  1065  3420               	retlw	32	;' '
   800  1066  3400               	retlw	0
   801  1067                     STR_3:	
   802  1067  3425               	retlw	37	;'%'
   803  1068  3430               	retlw	48	;'0'
   804  1069  3433               	retlw	51	;'3'
   805  106A  3464               	retlw	100	;'d'
   806  106B  3400               	retlw	0
   807  106C                     __end_of__stringdata:	
   808                           
   809                           ; #config settings
   810  0000                     
   811                           	psect	cinit
   812  0015                     start_initialization:	
   813  0015                     __initialization:	
   814                           
   815                           ; Clear objects allocated to BANK1
   816  0015  1383               	bcf	3,7	;select IRP bank0
   817  0016  30A0               	movlw	low __pbssBANK1
   818  0017  0084               	movwf	4
   819  0018  30C9               	movlw	low (__pbssBANK1+41)
   820  0019  160A  118A  2217  120A  118A  	fcall	clear_ram0
   821                           
   822                           ; Clear objects allocated to BANK3
   823  001E  1783               	bsf	3,7	;select IRP bank2
   824  001F  3090               	movlw	low __pbssBANK3
   825  0020  0084               	movwf	4
   826  0021  30A1               	movlw	low (__pbssBANK3+17)
   827  0022  160A  118A  2217  120A  118A  	fcall	clear_ram0
   828                           
   829                           ; Initialize objects allocated to BANK3
   830  0027  1683               	bsf	3,5	;RP0=1, select bank3
   831  0028  1703               	bsf	3,6	;RP1=1, select bank3
   832  0029  120A  118A  27FE  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   833  002E  00A1               	movwf	__pdataBANK3& (0+127)
   834  002F  120A  118A  27FF  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   835  0034  00A2               	movwf	(__pdataBANK3+1)& (0+127)
   836                           
   837                           ; Initialize objects allocated to BANK1
   838  0035  1683               	bsf	3,5	;RP0=1, select bank1
   839  0036  1303               	bcf	3,6	;RP1=0, select bank1
   840  0037  160A  118A  21FC  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   841  003C  00EB               	movwf	__pdataBANK1& (0+127)
   842  003D  160A  118A  21FD  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   843  0042  00EC               	movwf	(__pdataBANK1+1)& (0+127)
   844  0043  160A  118A  21FE  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   845  0048  00ED               	movwf	(__pdataBANK1+2)& (0+127)
   846  0049  160A  118A  21FF  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   847  004E  00EE               	movwf	(__pdataBANK1+3)& (0+127)
   848  004F  160A  118A  2200  120A  118A  	fcall	__pidataBANK1+4	;fetch initializer
   849  0054  00EF               	movwf	(__pdataBANK1+4)& (0+127)
   850                           
   851                           ; Initialize objects allocated to BANK0
   852  0055  1283               	bcf	3,5	;RP0=0, select bank0
   853  0056  1303               	bcf	3,6	;RP1=0, select bank0
   854  0057  160A  118A  21F9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   855  005C  00ED               	movwf	__pdataBANK0& (0+127)
   856  005D  160A  118A  21FA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   857  0062  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   858  0063  160A  118A  21FB   	fcall	__pidataBANK0+2	;fetch initializer
   859  0066  00EF               	movwf	(__pdataBANK0+2)& (0+127)
   860  0067                     end_of_initialization:	
   861                           ;End of C runtime variable initialization code
   862                           
   863  0067                     __end_of__initialization:	
   864  0067  0183               	clrf	3
   865  0068  120A  158A  28A6   	ljmp	_main	;jump to C main() function
   866                           
   867                           	psect	dataBANK0
   868  006D                     __pdataBANK0:	
   869  006D                     _tf:	
   870  006D                     	ds	3
   871                           
   872                           	psect	bssBANK1
   873  00A0                     __pbssBANK1:	
   874  00A0                     _ativa_fan:	
   875  00A0                     	ds	3
   876  00A3                     _fitemp:	
   877  00A3                     	ds	3
   878  00A6                     _fop_rule1:	
   879  00A6                     	ds	3
   880  00A9                     _fop_rule2:	
   881  00A9                     	ds	3
   882  00AC                     _fop_rule3:	
   883  00AC                     	ds	3
   884  00AF                     _sum:	
   885  00AF                     	ds	3
   886  00B2                     _total_area:	
   887  00B2                     	ds	3
   888  00B5                     _x:	
   889  00B5                     	ds	3
   890  00B8                     _y:	
   891  00B8                     	ds	3
   892  00BB                     _ADCResult:	
   893  00BB                     	ds	2
   894  00BD                     _contagens_tm0:	
   895  00BD                     	ds	2
   896  00BF                     _deltaV:	
   897  00BF                     	ds	2
   898  00C1                     _pulsos:	
   899  00C1                     	ds	2
   900  00C3                     _rpm:	
   901  00C3                     	ds	2
   902  00C5                     _setpointUI:	
   903  00C5                     	ds	2
   904  00C7                     _status:	
   905  00C7                     	ds	2
   906                           
   907                           	psect	dataBANK1
   908  00EB                     __pdataBANK1:	
   909  00EB                     _setpoint:	
   910  00EB                     	ds	3
   911  00EE                     _pas_cooler:	
   912  00EE                     	ds	2
   913                           
   914                           	psect	bssBANK3
   915  0190                     __pbssBANK3:	
   916  0190                     _buffer:	
   917  0190                     	ds	7
   918  0197                     _display_rpm:	
   919  0197                     	ds	10
   920                           
   921                           	psect	dataBANK3
   922  01A1                     __pdataBANK3:	
   923  01A1                     _pwm:	
   924  01A1                     	ds	2
   925                           
   926                           	psect	clrtext
   927  1217                     clear_ram0:	
   928                           ;	Called with FSR containing the base address, and
   929                           ;	W with the last address+1
   930                           
   931  1217  0064               	clrwdt	;clear the watchdog before getting into this loop
   932  1218                     clrloop0:	
   933  1218  0180               	clrf	0	;clear RAM location pointed to by FSR
   934  1219  0A84               	incf	4,f	;increment pointer
   935  121A  0604               	xorwf	4,w	;XOR with final address
   936  121B  1903               	btfsc	3,2	;have we reached the end yet?
   937  121C  3400               	retlw	0	;all done for this memory range, return
   938  121D  0604               	xorwf	4,w	;XOR again to restore value
   939  121E  2A18               	goto	clrloop0	;do the next byte
   940                           
   941                           	psect	cstackBANK1
   942  00C9                     __pcstackBANK1:	
   943  00C9                     ?_PWM_DutyCycle2:	
   944  00C9                     ??_TIMER0_Set:	
   945                           ; 0 bytes @ 0x0
   946                           
   947  00C9                     ??_TIMER0_Init:	
   948                           ; 0 bytes @ 0x0
   949                           
   950  00C9                     ??_ADC_Init:	
   951                           ; 0 bytes @ 0x0
   952                           
   953  00C9                     ??_PWM_Init:	
   954                           ; 0 bytes @ 0x0
   955                           
   956  00C9                     ?_LCD_Cursor:	
   957                           ; 0 bytes @ 0x0
   958                           
   959  00C9                     ?_PWM_DutyCycle1:	
   960                           ; 0 bytes @ 0x0
   961                           
   962  00C9                     ??_isdigit:	
   963                           ; 0 bytes @ 0x0
   964                           
   965  00C9                     ??_LCD_WriteCmd:	
   966                           ; 0 bytes @ 0x0
   967                           
   968  00C9                     ??_LCD_WriteData:	
   969                           ; 0 bytes @ 0x0
   970                           
   971  00C9                     ?___wmul:	
   972                           ; 0 bytes @ 0x0
   973                           
   974  00C9                     ?___lwdiv:	
   975                           ; 2 bytes @ 0x0
   976                           
   977  00C9                     ?___aldiv:	
   978                           ; 2 bytes @ 0x0
   979                           
   980  00C9                     TIMER0_Set@contagens:	
   981                           ; 4 bytes @ 0x0
   982                           
   983  00C9                     LCD_Cursor@Col:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  00C9                     _isdigit$1439:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  00C9                     PWM_DutyCycle1@valor:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  00C9                     PWM_DutyCycle2@valor:	
   993                           ; 2 bytes @ 0x0
   994                           
   995  00C9                     ___wmul@multiplier:	
   996                           ; 2 bytes @ 0x0
   997                           
   998  00C9                     ___lwdiv@divisor:	
   999                           ; 2 bytes @ 0x0
  1000                           
  1001  00C9                     ___aldiv@divisor:	
  1002                           ; 2 bytes @ 0x0
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x0
  1006  00C9                     	ds	1
  1007  00CA                     ??_LCD_Cursor:	
  1008  00CA                     LCD_WriteCmd@Byte:	
  1009                           ; 0 bytes @ 0x1
  1010                           
  1011  00CA                     LCD_WriteData@Byte:	
  1012                           ; 1 bytes @ 0x1
  1013                           
  1014  00CA                     isdigit@c:	
  1015                           ; 1 bytes @ 0x1
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x1
  1019  00CA                     	ds	1
  1020  00CB                     ??_PWM_DutyCycle2:	
  1021  00CB                     ??_LCD_Init:	
  1022                           ; 0 bytes @ 0x2
  1023                           
  1024  00CB                     ?_LCD_WriteString:	
  1025                           ; 0 bytes @ 0x2
  1026                           
  1027  00CB                     ??_PWM_DutyCycle1:	
  1028                           ; 0 bytes @ 0x2
  1029                           
  1030  00CB                     ??_LCD_Clear:	
  1031                           ; 0 bytes @ 0x2
  1032                           
  1033  00CB                     LCD_Cursor@Row:	
  1034                           ; 0 bytes @ 0x2
  1035                           
  1036  00CB                     LCD_WriteString@Str:	
  1037                           ; 1 bytes @ 0x2
  1038                           
  1039  00CB                     ___wmul@multiplicand:	
  1040                           ; 2 bytes @ 0x2
  1041                           
  1042  00CB                     ___lwdiv@dividend:	
  1043                           ; 2 bytes @ 0x2
  1044                           
  1045                           
  1046                           ; 2 bytes @ 0x2
  1047  00CB                     	ds	2
  1048  00CD                     ??_LCD_WriteString:	
  1049  00CD                     ??___wmul:	
  1050                           ; 0 bytes @ 0x4
  1051                           
  1052  00CD                     ??___lwdiv:	
  1053                           ; 0 bytes @ 0x4
  1054                           
  1055  00CD                     ___wmul@product:	
  1056                           ; 0 bytes @ 0x4
  1057                           
  1058  00CD                     ___aldiv@dividend:	
  1059                           ; 2 bytes @ 0x4
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x4
  1063  00CD                     	ds	1
  1064  00CE                     ___lwdiv@quotient:	
  1065                           
  1066                           ; 2 bytes @ 0x5
  1067  00CE                     	ds	2
  1068  00D0                     ___lwdiv@counter:	
  1069                           
  1070                           ; 1 bytes @ 0x7
  1071  00D0                     	ds	1
  1072  00D1                     ??___aldiv:	
  1073  00D1                     ?___lwmod:	
  1074                           ; 0 bytes @ 0x8
  1075                           
  1076  00D1                     ___lwmod@divisor:	
  1077                           ; 2 bytes @ 0x8
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x8
  1081  00D1                     	ds	1
  1082  00D2                     ___aldiv@counter:	
  1083                           
  1084                           ; 1 bytes @ 0x9
  1085  00D2                     	ds	1
  1086  00D3                     ___aldiv@sign:	
  1087  00D3                     ___lwmod@dividend:	
  1088                           ; 1 bytes @ 0xA
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0xA
  1092  00D3                     	ds	1
  1093  00D4                     ___aldiv@quotient:	
  1094                           
  1095                           ; 4 bytes @ 0xB
  1096  00D4                     	ds	1
  1097  00D5                     ??___lwmod:	
  1098                           
  1099                           ; 0 bytes @ 0xC
  1100  00D5                     	ds	1
  1101  00D6                     ___lwmod@counter:	
  1102                           
  1103                           ; 1 bytes @ 0xD
  1104  00D6                     	ds	1
  1105  00D7                     ?_sprintf:	
  1106  00D7                     sprintf@f:	
  1107                           ; 2 bytes @ 0xE
  1108                           
  1109                           
  1110                           ; 1 bytes @ 0xE
  1111  00D7                     	ds	1
  1112  00D8                     ?_USART_Init:	
  1113  00D8                     USART_Init@BaudRate:	
  1114                           ; 0 bytes @ 0xF
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0xF
  1118  00D8                     	ds	2
  1119  00DA                     ??_sprintf:	
  1120                           
  1121                           ; 0 bytes @ 0x11
  1122  00DA                     	ds	2
  1123  00DC                     ??_USART_Init:	
  1124                           
  1125                           ; 0 bytes @ 0x13
  1126  00DC                     	ds	1
  1127  00DD                     sprintf@ap:	
  1128                           
  1129                           ; 1 bytes @ 0x14
  1130  00DD                     	ds	1
  1131  00DE                     sprintf@prec:	
  1132                           
  1133                           ; 1 bytes @ 0x15
  1134  00DE                     	ds	1
  1135  00DF                     sprintf@_val:	
  1136                           
  1137                           ; 4 bytes @ 0x16
  1138  00DF                     	ds	4
  1139  00E3                     sprintf@flag:	
  1140                           
  1141                           ; 1 bytes @ 0x1A
  1142  00E3                     	ds	1
  1143  00E4                     sprintf@width:	
  1144                           
  1145                           ; 2 bytes @ 0x1B
  1146  00E4                     	ds	2
  1147  00E6                     sprintf@sp:	
  1148                           
  1149                           ; 1 bytes @ 0x1D
  1150  00E6                     	ds	1
  1151  00E7                     sprintf@c:	
  1152                           
  1153                           ; 1 bytes @ 0x1E
  1154  00E7                     	ds	1
  1155  00E8                     ??_main:	
  1156                           
  1157                           ; 0 bytes @ 0x1F
  1158  00E8                     	ds	3
  1159                           
  1160                           	psect	cstackCOMMON
  1161  0070                     __pcstackCOMMON:	
  1162  0070                     ?_USART_WriteChar:	
  1163  0070                     ??_USART_WriteChar:	
  1164                           ; 0 bytes @ 0x0
  1165                           
  1166  0070                     ?_USART_WriteString:	
  1167                           ; 0 bytes @ 0x0
  1168                           
  1169  0070                     ?_TIMER0_Set:	
  1170                           ; 0 bytes @ 0x0
  1171                           
  1172  0070                     ?_TIMER0_Init:	
  1173                           ; 0 bytes @ 0x0
  1174                           
  1175  0070                     ?_ADC_Init:	
  1176                           ; 0 bytes @ 0x0
  1177                           
  1178  0070                     ?_PWM_Init:	
  1179                           ; 0 bytes @ 0x0
  1180                           
  1181  0070                     ?_LCD_Init:	
  1182                           ; 0 bytes @ 0x0
  1183                           
  1184  0070                     ?_LCD_Clear:	
  1185                           ; 0 bytes @ 0x0
  1186                           
  1187  0070                     ?_isdigit:	
  1188                           ; 0 bytes @ 0x0
  1189                           
  1190  0070                     ?_send:	
  1191                           ; 1 bit 
  1192                           
  1193  0070                     ?_Fuzzy:	
  1194                           ; 0 bytes @ 0x0
  1195                           
  1196  0070                     ?_ISR:	
  1197                           ; 0 bytes @ 0x0
  1198                           
  1199  0070                     ?_main:	
  1200                           ; 0 bytes @ 0x0
  1201                           
  1202  0070                     ?_LCD_WriteCmd:	
  1203                           ; 0 bytes @ 0x0
  1204                           
  1205  0070                     ?_LCD_WriteData:	
  1206                           ; 0 bytes @ 0x0
  1207                           
  1208  0070                     ?i1_TIMER0_Set:	
  1209                           ; 0 bytes @ 0x0
  1210                           
  1211  0070                     ??i1_TIMER0_Set:	
  1212                           ; 0 bytes @ 0x0
  1213                           
  1214  0070                     ?_USART_ReceiveChar:	
  1215                           ; 0 bytes @ 0x0
  1216                           
  1217  0070                     ?i1___lwdiv:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ?___ftpack:	
  1221                           ; 2 bytes @ 0x0
  1222                           
  1223  0070                     USART_WriteChar@byte:	
  1224                           ; 3 bytes @ 0x0
  1225                           
  1226  0070                     i1TIMER0_Set@contagens:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     i1___lwdiv@divisor:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ___ftpack@arg:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235                           
  1236                           ; 3 bytes @ 0x0
  1237  0070                     	ds	1
  1238  0071                     ??_USART_WriteString:	
  1239  0071                     ??_send:	
  1240                           ; 0 bytes @ 0x1
  1241                           
  1242                           
  1243                           ; 0 bytes @ 0x1
  1244  0071                     	ds	1
  1245  0072                     send@checksum:	
  1246  0072                     USART_WriteString@str:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0072                     i1___lwdiv@dividend:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252                           
  1253                           ; 2 bytes @ 0x2
  1254  0072                     	ds	1
  1255  0073                     ??_USART_ReceiveChar:	
  1256  0073                     send@index:	
  1257                           ; 0 bytes @ 0x3
  1258                           
  1259  0073                     ___ftpack@exp:	
  1260                           ; 1 bytes @ 0x3
  1261                           
  1262                           
  1263                           ; 1 bytes @ 0x3
  1264  0073                     	ds	1
  1265  0074                     ??i1___lwdiv:	
  1266  0074                     USART_ReceiveChar@byte:	
  1267                           ; 0 bytes @ 0x4
  1268                           
  1269  0074                     ___ftpack@sign:	
  1270                           ; 1 bytes @ 0x4
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0x4
  1274  0074                     	ds	1
  1275  0075                     ??___ftpack:	
  1276  0075                     i1___lwdiv@quotient:	
  1277                           ; 0 bytes @ 0x5
  1278                           
  1279                           
  1280                           ; 2 bytes @ 0x5
  1281  0075                     	ds	2
  1282  0077                     i1___lwdiv@counter:	
  1283                           
  1284                           ; 1 bytes @ 0x7
  1285  0077                     	ds	1
  1286  0078                     ?i1___wmul:	
  1287  0078                     ?___ftmul:	
  1288                           ; 2 bytes @ 0x8
  1289                           
  1290  0078                     ?___lwtoft:	
  1291                           ; 3 bytes @ 0x8
  1292                           
  1293  0078                     ___lwtoft@c:	
  1294                           ; 3 bytes @ 0x8
  1295                           
  1296  0078                     i1___wmul@multiplier:	
  1297                           ; 2 bytes @ 0x8
  1298                           
  1299  0078                     ___ftmul@f1:	
  1300                           ; 2 bytes @ 0x8
  1301                           
  1302                           
  1303                           ; 3 bytes @ 0x8
  1304  0078                     	ds	2
  1305  007A                     i1___wmul@multiplicand:	
  1306                           
  1307                           ; 2 bytes @ 0xA
  1308  007A                     	ds	1
  1309  007B                     ??___lwtoft:	
  1310  007B                     ___ftmul@f2:	
  1311                           ; 0 bytes @ 0xB
  1312                           
  1313                           
  1314                           ; 3 bytes @ 0xB
  1315  007B                     	ds	1
  1316  007C                     ??_trimf:	
  1317  007C                     ??_trapmf:	
  1318                           ; 0 bytes @ 0xC
  1319                           
  1320  007C                     ??_max_val:	
  1321                           ; 0 bytes @ 0xC
  1322                           
  1323  007C                     ??___ftneg:	
  1324                           ; 0 bytes @ 0xC
  1325                           
  1326  007C                     ??i1_PWM_DutyCycle2:	
  1327                           ; 0 bytes @ 0xC
  1328                           
  1329  007C                     ??i1___wmul:	
  1330                           ; 0 bytes @ 0xC
  1331                           
  1332  007C                     i1___wmul@product:	
  1333                           ; 0 bytes @ 0xC
  1334                           
  1335                           
  1336                           ; 2 bytes @ 0xC
  1337  007C                     	ds	2
  1338  007E                     ??_Fuzzy:	
  1339                           
  1340                           	psect	cstackBANK0
  1341  0020                     __pcstackBANK0:	
  1342                           ; 0 bytes @ 0xE
  1343                           
  1344  0020                     ??___ftmul:	
  1345  0020                     ?___ftneg:	
  1346                           ; 0 bytes @ 0x0
  1347                           
  1348  0020                     ___ftneg@f1:	
  1349                           ; 3 bytes @ 0x0
  1350                           
  1351                           
  1352                           ; 3 bytes @ 0x0
  1353  0020                     	ds	3
  1354  0023                     ?___ftadd:	
  1355  0023                     ___ftadd@f1:	
  1356                           ; 3 bytes @ 0x3
  1357                           
  1358                           
  1359                           ; 3 bytes @ 0x3
  1360  0023                     	ds	1
  1361  0024                     ___ftmul@exp:	
  1362                           
  1363                           ; 1 bytes @ 0x4
  1364  0024                     	ds	1
  1365  0025                     ___ftmul@f3_as_product:	
  1366                           
  1367                           ; 3 bytes @ 0x5
  1368  0025                     	ds	1
  1369  0026                     ___ftadd@f2:	
  1370                           
  1371                           ; 3 bytes @ 0x6
  1372  0026                     	ds	2
  1373  0028                     ___ftmul@cntr:	
  1374                           
  1375                           ; 1 bytes @ 0x8
  1376  0028                     	ds	1
  1377  0029                     ??___ftadd:	
  1378  0029                     ___ftmul@sign:	
  1379                           ; 0 bytes @ 0x9
  1380                           
  1381                           
  1382                           ; 1 bytes @ 0x9
  1383  0029                     	ds	4
  1384  002D                     ___ftadd@sign:	
  1385                           
  1386                           ; 1 bytes @ 0xD
  1387  002D                     	ds	1
  1388  002E                     ___ftadd@exp2:	
  1389                           
  1390                           ; 1 bytes @ 0xE
  1391  002E                     	ds	1
  1392  002F                     ___ftadd@exp1:	
  1393                           
  1394                           ; 1 bytes @ 0xF
  1395  002F                     	ds	1
  1396  0030                     ?___ftge:	
  1397  0030                     ?___ftdiv:	
  1398                           ; 1 bit 
  1399                           
  1400  0030                     ?___fttol:	
  1401                           ; 3 bytes @ 0x10
  1402                           
  1403  0030                     ___ftdiv@f2:	
  1404                           ; 4 bytes @ 0x10
  1405                           
  1406  0030                     ___ftge@ff1:	
  1407                           ; 3 bytes @ 0x10
  1408                           
  1409  0030                     ___fttol@f1:	
  1410                           ; 3 bytes @ 0x10
  1411                           
  1412                           
  1413                           ; 3 bytes @ 0x10
  1414  0030                     	ds	3
  1415  0033                     ___ftdiv@f1:	
  1416  0033                     ___ftge@ff2:	
  1417                           ; 3 bytes @ 0x13
  1418                           
  1419                           
  1420                           ; 3 bytes @ 0x13
  1421  0033                     	ds	1
  1422  0034                     ??___fttol:	
  1423                           
  1424                           ; 0 bytes @ 0x14
  1425  0034                     	ds	2
  1426  0036                     ??___ftdiv:	
  1427  0036                     ??___ftge:	
  1428                           ; 0 bytes @ 0x16
  1429                           
  1430                           
  1431                           ; 0 bytes @ 0x16
  1432  0036                     	ds	2
  1433  0038                     ___fttol@sign1:	
  1434                           
  1435                           ; 1 bytes @ 0x18
  1436  0038                     	ds	1
  1437  0039                     ___fttol@lval:	
  1438                           
  1439                           ; 4 bytes @ 0x19
  1440  0039                     	ds	1
  1441  003A                     ___ftdiv@cntr:	
  1442                           
  1443                           ; 1 bytes @ 0x1A
  1444  003A                     	ds	1
  1445  003B                     ___ftdiv@f3:	
  1446                           
  1447                           ; 3 bytes @ 0x1B
  1448  003B                     	ds	1
  1449  003C                     ?_max_val:	
  1450  003C                     max_val@a:	
  1451                           ; 3 bytes @ 0x1C
  1452                           
  1453                           
  1454                           ; 3 bytes @ 0x1C
  1455  003C                     	ds	1
  1456  003D                     ___fttol@exp1:	
  1457                           
  1458                           ; 1 bytes @ 0x1D
  1459  003D                     	ds	1
  1460  003E                     ?i1_PWM_DutyCycle2:	
  1461  003E                     ___ftdiv@exp:	
  1462                           ; 0 bytes @ 0x1E
  1463                           
  1464  003E                     i1PWM_DutyCycle2@valor:	
  1465                           ; 1 bytes @ 0x1E
  1466                           
  1467                           
  1468                           ; 2 bytes @ 0x1E
  1469  003E                     	ds	1
  1470  003F                     ___ftdiv@sign:	
  1471  003F                     max_val@b:	
  1472                           ; 1 bytes @ 0x1F
  1473                           
  1474                           
  1475                           ; 3 bytes @ 0x1F
  1476  003F                     	ds	1
  1477  0040                     ?_trimf:	
  1478  0040                     ?_trapmf:	
  1479                           ; 3 bytes @ 0x20
  1480                           
  1481  0040                     trimf@x:	
  1482                           ; 3 bytes @ 0x20
  1483                           
  1484  0040                     trapmf@x:	
  1485                           ; 3 bytes @ 0x20
  1486                           
  1487                           
  1488                           ; 3 bytes @ 0x20
  1489  0040                     	ds	3
  1490  0043                     trimf@a:	
  1491  0043                     trapmf@a:	
  1492                           ; 3 bytes @ 0x23
  1493                           
  1494                           
  1495                           ; 3 bytes @ 0x23
  1496  0043                     	ds	3
  1497  0046                     trimf@b:	
  1498  0046                     trapmf@b:	
  1499                           ; 3 bytes @ 0x26
  1500                           
  1501                           
  1502                           ; 3 bytes @ 0x26
  1503  0046                     	ds	3
  1504  0049                     trimf@c:	
  1505  0049                     trapmf@c:	
  1506                           ; 3 bytes @ 0x29
  1507                           
  1508                           
  1509                           ; 3 bytes @ 0x29
  1510  0049                     	ds	3
  1511  004C                     trimf@ua:	
  1512  004C                     trapmf@d:	
  1513                           ; 3 bytes @ 0x2C
  1514                           
  1515                           
  1516                           ; 3 bytes @ 0x2C
  1517  004C                     	ds	3
  1518  004F                     trapmf@ua:	
  1519                           
  1520                           ; 3 bytes @ 0x2F
  1521  004F                     	ds	3
  1522  0052                     Fuzzy@freio:	
  1523                           
  1524                           ; 2 bytes @ 0x32
  1525  0052                     	ds	2
  1526  0054                     Fuzzy@tip:	
  1527                           
  1528                           ; 3 bytes @ 0x34
  1529  0054                     	ds	3
  1530  0057                     Fuzzy@a:	
  1531                           
  1532                           ; 2 bytes @ 0x37
  1533  0057                     	ds	2
  1534  0059                     Fuzzy@a_246:	
  1535                           
  1536                           ; 2 bytes @ 0x39
  1537  0059                     	ds	2
  1538  005B                     Fuzzy@a_247:	
  1539                           
  1540                           ; 2 bytes @ 0x3B
  1541  005B                     	ds	2
  1542  005D                     Fuzzy@mantem:	
  1543                           
  1544                           ; 3 bytes @ 0x3D
  1545  005D                     	ds	3
  1546  0060                     Fuzzy@reduz:	
  1547                           
  1548                           ; 3 bytes @ 0x40
  1549  0060                     	ds	3
  1550  0063                     Fuzzy@aumenta:	
  1551                           
  1552                           ; 3 bytes @ 0x43
  1553  0063                     	ds	3
  1554  0066                     Fuzzy@deltaRpm:	
  1555                           
  1556                           ; 3 bytes @ 0x46
  1557  0066                     	ds	3
  1558  0069                     ??_ISR:	
  1559                           
  1560                           ; 0 bytes @ 0x49
  1561  0069                     	ds	4
  1562                           
  1563                           	psect	maintext
  1564  08A6                     __pmaintext:	
  1565 ;;
  1566 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1567 ;;
  1568 ;; *************** function _main *****************
  1569 ;; Defined at:
  1570 ;;		line 500 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;		None               void
  1577 ;; Registers used:
  1578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 17F/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0
  1586 ;;      Temps:          0       0       3       0       0
  1587 ;;      Totals:         0       0       3       0       0
  1588 ;;Total ram usage:        3 bytes
  1589 ;; Hardware stack levels required when called:    7
  1590 ;; This function calls:
  1591 ;;		_ADC_Init
  1592 ;;		_LCD_Clear
  1593 ;;		_LCD_Cursor
  1594 ;;		_LCD_Init
  1595 ;;		_LCD_WriteString
  1596 ;;		_PWM_DutyCycle1
  1597 ;;		_PWM_DutyCycle2
  1598 ;;		_PWM_Init
  1599 ;;		_TIMER0_Init
  1600 ;;		_TIMER0_Set
  1601 ;;		_USART_Init
  1602 ;;		_sprintf
  1603 ;; This function is called by:
  1604 ;;		Startup code after reset
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _main
  1610  08A6                     _main:	
  1611                           
  1612                           ;main.c: 502: TRISA = 0b00000001;
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1616  08A6  3001               	movlw	1
  1617  08A7  1683               	bsf	3,5	;RP0=1, select bank1
  1618  08A8  1303               	bcf	3,6	;RP1=0, select bank1
  1619  08A9  0085               	movwf	5	;volatile
  1620                           
  1621                           ;main.c: 503: PORTA = 0b00000001;
  1622  08AA  3001               	movlw	1
  1623  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  1624  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  1625  08AD  0085               	movwf	5	;volatile
  1626                           
  1627                           ;main.c: 504: TRISB = 0b00000000;
  1628  08AE  1683               	bsf	3,5	;RP0=1, select bank1
  1629  08AF  1303               	bcf	3,6	;RP1=0, select bank1
  1630  08B0  0186               	clrf	6	;volatile
  1631                           
  1632                           ;main.c: 505: PORTB = 0b00000000;
  1633  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  1634  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  1635  08B3  0186               	clrf	6	;volatile
  1636                           
  1637                           ;main.c: 506: TRISC = 0b10000001;
  1638  08B4  3081               	movlw	129
  1639  08B5  1683               	bsf	3,5	;RP0=1, select bank1
  1640  08B6  1303               	bcf	3,6	;RP1=0, select bank1
  1641  08B7  0087               	movwf	7	;volatile
  1642                           
  1643                           ;main.c: 507: PORTC = 0b11000000;
  1644  08B8  30C0               	movlw	192
  1645  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  1646  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  1647  08BB  0087               	movwf	7	;volatile
  1648                           
  1649                           ;main.c: 508: TRISD = 0b00000000;
  1650  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  1651  08BD  1303               	bcf	3,6	;RP1=0, select bank1
  1652  08BE  0188               	clrf	8	;volatile
  1653                           
  1654                           ;main.c: 509: PORTD = 0b00000000;
  1655  08BF  1283               	bcf	3,5	;RP0=0, select bank0
  1656  08C0  1303               	bcf	3,6	;RP1=0, select bank0
  1657  08C1  0188               	clrf	8	;volatile
  1658                           
  1659                           ;main.c: 510: TRISE = 0b00000000;
  1660  08C2  1683               	bsf	3,5	;RP0=1, select bank1
  1661  08C3  1303               	bcf	3,6	;RP1=0, select bank1
  1662  08C4  0189               	clrf	9	;volatile
  1663                           
  1664                           ;main.c: 511: PORTE = 0b00000000;
  1665  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  1666  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  1667  08C7  0189               	clrf	9	;volatile
  1668                           
  1669                           ;main.c: 514: T1CON = 0x03;
  1670  08C8  3003               	movlw	3
  1671  08C9  0090               	movwf	16	;volatile
  1672                           
  1673                           ;main.c: 515: TMR1L = 0x00;
  1674  08CA  018E               	clrf	14	;volatile
  1675                           
  1676                           ;main.c: 516: TMR1H = 0x00;
  1677  08CB  018F               	clrf	15	;volatile
  1678                           
  1679                           ;main.c: 519: USART_Init(115200);
  1680  08CC  3000               	movlw	0
  1681  08CD  1683               	bsf	3,5	;RP0=1, select bank1
  1682  08CE  1303               	bcf	3,6	;RP1=0, select bank1
  1683  08CF  00DB               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1684  08D0  3001               	movlw	1
  1685  08D1  00DA               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1686  08D2  30C2               	movlw	194
  1687  08D3  00D9               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1688  08D4  3000               	movlw	0
  1689  08D5  00D8               	movwf	USART_Init@BaudRate^(0+128)
  1690  08D6  160A  118A  24B2  120A  158A  	fcall	_USART_Init
  1691                           
  1692                           ;main.c: 520: TIMER0_Init();
  1693  08DB  160A  118A  2229  120A  158A  	fcall	_TIMER0_Init
  1694                           
  1695                           ;main.c: 521: ADC_Init();
  1696  08E0  160A  118A  2244  120A  158A  	fcall	_ADC_Init
  1697                           
  1698                           ;main.c: 522: PWM_Init();
  1699  08E5  160A  118A  235B  120A  158A  	fcall	_PWM_Init
  1700                           
  1701                           ;main.c: 523: LCD_Init();
  1702  08EA  160A  118A  260C  120A  158A  	fcall	_LCD_Init
  1703                           
  1704                           ;main.c: 526: INTCONbits.PEIE = 1;
  1705  08EF  170B               	bsf	11,6	;volatile
  1706                           
  1707                           ;main.c: 527: INTCONbits.GIE = 1;
  1708  08F0  178B               	bsf	11,7	;volatile
  1709                           
  1710                           ;main.c: 534: LCD_Init();
  1711  08F1  160A  118A  260C  120A  158A  	fcall	_LCD_Init
  1712                           
  1713                           ;main.c: 535: LCD_Cursor(0,0);
  1714  08F6  1683               	bsf	3,5	;RP0=1, select bank1
  1715  08F7  1303               	bcf	3,6	;RP1=0, select bank1
  1716  08F8  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1717  08F9  3000               	movlw	0
  1718  08FA  160A  118A  22D6  120A  158A  	fcall	_LCD_Cursor
  1719                           
  1720                           ;main.c: 536: LCD_WriteString("Inicializando...");
  1721  08FF  3033               	movlw	low (STR_2-__stringbase)
  1722  0900  1683               	bsf	3,5	;RP0=1, select bank1
  1723  0901  1303               	bcf	3,6	;RP1=0, select bank1
  1724  0902  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1725  0903  3080               	movlw	128
  1726  0904  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1727  0905  160A  118A  23CD  120A  158A  	fcall	_LCD_WriteString
  1728                           
  1729                           ;main.c: 539: PWM_DutyCycle1(0);
  1730  090A  3000               	movlw	0
  1731  090B  1683               	bsf	3,5	;RP0=1, select bank1
  1732  090C  1303               	bcf	3,6	;RP1=0, select bank1
  1733  090D  00C9               	movwf	PWM_DutyCycle1@valor^(0+128)
  1734  090E  3000               	movlw	0
  1735  090F  00CA               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1736  0910  160A  118A  22F6  120A  158A  	fcall	_PWM_DutyCycle1
  1737                           
  1738                           ;main.c: 540: PWM_DutyCycle2(0);
  1739  0915  3000               	movlw	0
  1740  0916  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0917  1303               	bcf	3,6	;RP1=0, select bank1
  1742  0918  00C9               	movwf	PWM_DutyCycle2@valor^(0+128)
  1743  0919  3000               	movlw	0
  1744  091A  00CA               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1745  091B  160A  118A  2317  120A  158A  	fcall	_PWM_DutyCycle2
  1746                           
  1747                           ;main.c: 543: TIMER0_Set(238);
  1748  0920  30EE               	movlw	238
  1749  0921  160A  118A  220F  120A  158A  	fcall	_TIMER0_Set
  1750                           
  1751                           ;main.c: 546: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1752  0926  3018               	movlw	24
  1753  0927  1683               	bsf	3,5	;RP0=1, select bank1
  1754  0928  1303               	bcf	3,6	;RP1=0, select bank1
  1755  0929  00EA               	movwf	(??_main^(0+128)+2)
  1756  092A  3061               	movlw	97
  1757  092B  00E9               	movwf	(??_main^(0+128)+1)
  1758  092C  306E               	movlw	110
  1759  092D  00E8               	movwf	??_main^(0+128)
  1760  092E                     u4107:	
  1761  092E  0BE8               	decfsz	??_main^(0+128),f
  1762  092F  292E               	goto	u4107
  1763  0930  0BE9               	decfsz	(??_main^(0+128)+1),f
  1764  0931  292E               	goto	u4107
  1765  0932  0BEA               	decfsz	(??_main^(0+128)+2),f
  1766  0933  292E               	goto	u4107
  1767  0934  0000               	nop
  1768  0935                     l199:	
  1769                           ;main.c: 549: while(1)
  1770                           
  1771                           
  1772                           ;main.c: 550: {
  1773                           ;main.c: 553: sprintf(display_rpm,"%03d", rpm);
  1774  0935  3058               	movlw	(STR_3-__stringbase)& (0+255)
  1775  0936  1683               	bsf	3,5	;RP0=1, select bank1
  1776  0937  1303               	bcf	3,6	;RP1=0, select bank1
  1777  0938  00E8               	movwf	??_main^(0+128)
  1778  0939  0868               	movf	??_main^(0+128),w
  1779  093A  00D7               	movwf	sprintf@f^(0+128)
  1780  093B  0844               	movf	(_rpm+1)^(0+128),w
  1781  093C  01D9               	clrf	((?_sprintf+1)^(0+128)+1)
  1782  093D  07D9               	addwf	((?_sprintf+1)^(0+128)+1),f
  1783  093E  0843               	movf	_rpm^(0+128),w
  1784  093F  01D8               	clrf	(?_sprintf^(0+128)+1)
  1785  0940  07D8               	addwf	(?_sprintf^(0+128)+1),f
  1786  0941  3097               	movlw	_display_rpm& (0+255)
  1787  0942  120A  158A  2649  120A  158A  	fcall	_sprintf
  1788                           
  1789                           ;main.c: 556: LCD_Clear();
  1790  0947  160A  118A  23A4  120A  158A  	fcall	_LCD_Clear
  1791                           
  1792                           ;main.c: 557: LCD_Cursor(0,0);
  1793  094C  1683               	bsf	3,5	;RP0=1, select bank1
  1794  094D  1303               	bcf	3,6	;RP1=0, select bank1
  1795  094E  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1796  094F  3000               	movlw	0
  1797  0950  160A  118A  22D6  120A  158A  	fcall	_LCD_Cursor
  1798                           
  1799                           ;main.c: 558: LCD_WriteString("kmH: ");
  1800  0955  3052               	movlw	low (STR_4-__stringbase)
  1801  0956  1683               	bsf	3,5	;RP0=1, select bank1
  1802  0957  1303               	bcf	3,6	;RP1=0, select bank1
  1803  0958  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1804  0959  3080               	movlw	128
  1805  095A  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1806  095B  160A  118A  23CD  120A  158A  	fcall	_LCD_WriteString
  1807                           
  1808                           ;main.c: 559: LCD_Cursor(0,6);
  1809  0960  3006               	movlw	6
  1810  0961  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0962  1303               	bcf	3,6	;RP1=0, select bank1
  1812  0963  00E8               	movwf	??_main^(0+128)
  1813  0964  0868               	movf	??_main^(0+128),w
  1814  0965  00C9               	movwf	LCD_Cursor@Col^(0+128)
  1815  0966  3000               	movlw	0
  1816  0967  160A  118A  22D6  120A  158A  	fcall	_LCD_Cursor
  1817                           
  1818                           ;main.c: 560: LCD_WriteString(display_rpm);
  1819  096C  3097               	movlw	_display_rpm& (0+255)
  1820  096D  1683               	bsf	3,5	;RP0=1, select bank1
  1821  096E  1303               	bcf	3,6	;RP1=0, select bank1
  1822  096F  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1823  0970  3001               	movlw	1
  1824  0971  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1825  0972  160A  118A  23CD  120A  158A  	fcall	_LCD_WriteString
  1826                           
  1827                           ;main.c: 563: LCD_Cursor(1,6);
  1828  0977  3006               	movlw	6
  1829  0978  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0979  1303               	bcf	3,6	;RP1=0, select bank1
  1831  097A  00E8               	movwf	??_main^(0+128)
  1832  097B  0868               	movf	??_main^(0+128),w
  1833  097C  00C9               	movwf	LCD_Cursor@Col^(0+128)
  1834  097D  3001               	movlw	1
  1835  097E  160A  118A  22D6  120A  158A  	fcall	_LCD_Cursor
  1836                           
  1837                           ;main.c: 566: _delay((unsigned long)((200)*(18432000/4000.0)));
  1838  0983  3005               	movlw	5
  1839  0984  1683               	bsf	3,5	;RP0=1, select bank1
  1840  0985  1303               	bcf	3,6	;RP1=0, select bank1
  1841  0986  00EA               	movwf	(??_main^(0+128)+2)
  1842  0987  30AD               	movlw	173
  1843  0988  00E9               	movwf	(??_main^(0+128)+1)
  1844  0989  30E0               	movlw	224
  1845  098A  00E8               	movwf	??_main^(0+128)
  1846  098B                     u4117:	
  1847  098B  0BE8               	decfsz	??_main^(0+128),f
  1848  098C  298B               	goto	u4117
  1849  098D  0BE9               	decfsz	(??_main^(0+128)+1),f
  1850  098E  298B               	goto	u4117
  1851  098F  0BEA               	decfsz	(??_main^(0+128)+2),f
  1852  0990  298B               	goto	u4117
  1853  0991  2935               	goto	l199
  1854  0992                     __end_of_main:	
  1855                           
  1856                           	psect	text1
  1857  0E49                     __ptext1:	
  1858 ;; *************** function _sprintf *****************
  1859 ;; Defined at:
  1860 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  sp              1    wreg     PTR unsigned char 
  1863 ;;		 -> display_rpm(10), 
  1864 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  1865 ;;		 -> STR_3(5), 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1868 ;;		 -> display_rpm(10), 
  1869 ;;  _val            4   22[BANK1 ] struct .
  1870 ;;  width           2   27[BANK1 ] int 
  1871 ;;  c               1   30[BANK1 ] char 
  1872 ;;  flag            1   26[BANK1 ] unsigned char 
  1873 ;;  prec            1   21[BANK1 ] char 
  1874 ;;  ap              1   20[BANK1 ] PTR void [1]
  1875 ;;		 -> ?_sprintf(2), 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2   14[BANK1 ] int 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       3       0       0
  1886 ;;      Locals:         0       0      11       0       0
  1887 ;;      Temps:          0       0       3       0       0
  1888 ;;      Totals:         0       0      17       0       0
  1889 ;;Total ram usage:       17 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    6
  1892 ;; This function calls:
  1893 ;;		___lwdiv
  1894 ;;		___lwmod
  1895 ;;		___wmul
  1896 ;;		_isdigit
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _sprintf
  1904  0E49                     _sprintf:	
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1908                           ;sprintf@sp stored from wreg
  1909  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  1911  0E4B  00E6               	movwf	sprintf@sp^(0+128)
  1912                           
  1913                           ;doprnt.c: 494: va_list ap;
  1914                           ;doprnt.c: 499: signed char c;
  1915                           ;doprnt.c: 501: int width;
  1916                           ;doprnt.c: 506: signed char prec;
  1917                           ;doprnt.c: 508: unsigned char flag;
  1918                           ;doprnt.c: 527: union {
  1919                           ;doprnt.c: 528: unsigned int _val;
  1920                           ;doprnt.c: 529: struct {
  1921                           ;doprnt.c: 530: const char * _cp;
  1922                           ;doprnt.c: 531: unsigned _len;
  1923                           ;doprnt.c: 532: } _str;
  1924                           ;doprnt.c: 533: } _val;
  1925                           ;doprnt.c: 542: *ap = __va_start();
  1926  0E4C  30D8               	movlw	(?_sprintf+1)& (0+255)
  1927  0E4D  00DA               	movwf	??_sprintf^(0+128)
  1928  0E4E  085A               	movf	??_sprintf^(0+128),w
  1929  0E4F  00DD               	movwf	sprintf@ap^(0+128)
  1930  0E50                     l3129:	
  1931                           ;doprnt.c: 545: while(c = *f++) {
  1932                           
  1933  0E50  3001               	movlw	1
  1934  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  1935  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  1936  0E53  07D7               	addwf	sprintf@f^(0+128),f
  1937  0E54  30FF               	movlw	-1
  1938  0E55  0757               	addwf	sprintf@f^(0+128),w
  1939  0E56  0084               	movwf	4
  1940  0E57  160A  118A  200A  120A  158A  	fcall	stringdir
  1941  0E5C  00DA               	movwf	??_sprintf^(0+128)
  1942  0E5D  085A               	movf	??_sprintf^(0+128),w
  1943  0E5E  00E7               	movwf	sprintf@c^(0+128)
  1944  0E5F  08E7               	movf	sprintf@c^(0+128),f
  1945  0E60  1903               	btfsc	3,2
  1946  0E61  2FF9               	goto	l3131
  1947                           
  1948                           ;doprnt.c: 547: if(c != '%')
  1949  0E62  0867               	movf	sprintf@c^(0+128),w
  1950  0E63  3A25               	xorlw	37
  1951  0E64  1903               	skipnz
  1952  0E65  2E72               	goto	l3033
  1953                           
  1954                           ;doprnt.c: 549: {
  1955                           ;doprnt.c: 550: ((*sp++ = (c)));
  1956  0E66  0867               	movf	sprintf@c^(0+128),w
  1957  0E67  00DA               	movwf	??_sprintf^(0+128)
  1958  0E68  0866               	movf	sprintf@sp^(0+128),w
  1959  0E69  0084               	movwf	4
  1960  0E6A  085A               	movf	??_sprintf^(0+128),w
  1961  0E6B  1783               	bsf	3,7	;select IRP bank2
  1962  0E6C  0080               	movwf	0
  1963  0E6D  3001               	movlw	1
  1964  0E6E  00DA               	movwf	??_sprintf^(0+128)
  1965  0E6F  085A               	movf	??_sprintf^(0+128),w
  1966  0E70  07E6               	addwf	sprintf@sp^(0+128),f
  1967                           
  1968                           ;doprnt.c: 551: continue;
  1969  0E71  2E50               	goto	l3129
  1970  0E72                     l3033:	
  1971                           
  1972                           ;doprnt.c: 552: }
  1973                           ;doprnt.c: 555: width = 0;
  1974  0E72  01E4               	clrf	sprintf@width^(0+128)
  1975  0E73  01E5               	clrf	(sprintf@width+1)^(0+128)
  1976                           
  1977                           ;doprnt.c: 557: flag = 0;
  1978  0E74  01E3               	clrf	sprintf@flag^(0+128)
  1979                           
  1980                           ;doprnt.c: 560: switch(*f) {
  1981                           
  1982                           ;doprnt.c: 559: for(;;) {
  1983  0E75  2E7B               	goto	l3039
  1984  0E76                     l476:	
  1985                           ;doprnt.c: 588: case '0':
  1986                           
  1987                           
  1988                           ;doprnt.c: 589: flag |= 0x04;
  1989  0E76  1563               	bsf	sprintf@flag^(0+128),2
  1990                           
  1991                           ;doprnt.c: 590: f++;
  1992  0E77  3001               	movlw	1
  1993  0E78  00DA               	movwf	??_sprintf^(0+128)
  1994  0E79  085A               	movf	??_sprintf^(0+128),w
  1995  0E7A  07D7               	addwf	sprintf@f^(0+128),f
  1996  0E7B                     l3039:	
  1997                           ;doprnt.c: 593: }
  1998                           
  1999                           ;doprnt.c: 591: continue;
  2000                           
  2001  0E7B  0857               	movf	sprintf@f^(0+128),w
  2002  0E7C  0084               	movwf	4
  2003  0E7D  160A  118A  200A  120A  158A  	fcall	stringdir
  2004                           
  2005                           ; Switch size 1, requested type "space"
  2006                           ; Number of cases is 1, Range of values is 48 to 48
  2007                           ; switch strategies available:
  2008                           ; Name         Instructions Cycles
  2009                           ; simple_byte            4     3 (average)
  2010                           ; direct_byte           14    11 (fixed)
  2011                           ; jumptable            263     9 (fixed)
  2012                           ;	Chosen strategy is simple_byte
  2013  0E82  3A30               	xorlw	48	; case 48
  2014  0E83  1903               	skipnz
  2015  0E84  2E76               	goto	l476
  2016  0E85  2E86               	goto	l3041
  2017  0E86                     l3041:	
  2018                           ;doprnt.c: 595: }
  2019                           
  2020                           ;doprnt.c: 594: break;
  2021                           
  2022                           
  2023                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2024  0E86  0857               	movf	sprintf@f^(0+128),w
  2025  0E87  0084               	movwf	4
  2026  0E88  160A  118A  200A  120A  158A  	fcall	stringdir
  2027  0E8D  160A  118A  2234  120A  158A  	fcall	_isdigit
  2028  0E92  1C03               	btfss	3,0
  2029  0E93  2ED6               	goto	l3055
  2030                           
  2031                           ;doprnt.c: 607: width = 0;
  2032  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0E95  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0E96  01E4               	clrf	sprintf@width^(0+128)
  2035  0E97  01E5               	clrf	(sprintf@width+1)^(0+128)
  2036  0E98                     l3045:	
  2037                           ;doprnt.c: 608: do {
  2038                           
  2039                           
  2040                           ;doprnt.c: 609: width *= 10;
  2041  0E98  300A               	movlw	10
  2042  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  2043  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  2044  0E9B  00C9               	movwf	___wmul@multiplier^(0+128)
  2045  0E9C  3000               	movlw	0
  2046  0E9D  00CA               	movwf	(___wmul@multiplier^(0+128)+1)
  2047  0E9E  0865               	movf	(sprintf@width+1)^(0+128),w
  2048  0E9F  01CC               	clrf	(___wmul@multiplicand+1)^(0+128)
  2049  0EA0  07CC               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2050  0EA1  0864               	movf	sprintf@width^(0+128),w
  2051  0EA2  01CB               	clrf	___wmul@multiplicand^(0+128)
  2052  0EA3  07CB               	addwf	___wmul@multiplicand^(0+128),f
  2053  0EA4  160A  118A  237F  120A  158A  	fcall	___wmul
  2054  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  2056  0EAB  084A               	movf	(?___wmul+1)^(0+128),w
  2057  0EAC  01E5               	clrf	(sprintf@width+1)^(0+128)
  2058  0EAD  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2059  0EAE  0849               	movf	?___wmul^(0+128),w
  2060  0EAF  01E4               	clrf	sprintf@width^(0+128)
  2061  0EB0  07E4               	addwf	sprintf@width^(0+128),f
  2062                           
  2063                           ;doprnt.c: 610: width += *f++ - '0';
  2064  0EB1  0857               	movf	sprintf@f^(0+128),w
  2065  0EB2  0084               	movwf	4
  2066  0EB3  160A  118A  200A  120A  158A  	fcall	stringdir
  2067  0EB8  3ED0               	addlw	208
  2068  0EB9  00DA               	movwf	??_sprintf^(0+128)
  2069  0EBA  30FF               	movlw	255
  2070  0EBB  1803               	skipnc
  2071  0EBC  3000               	movlw	0
  2072  0EBD  00DB               	movwf	(??_sprintf^(0+128)+1)
  2073  0EBE  085A               	movf	??_sprintf^(0+128),w
  2074  0EBF  07E4               	addwf	sprintf@width^(0+128),f
  2075  0EC0  1803               	skipnc
  2076  0EC1  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2077  0EC2  085B               	movf	(??_sprintf+1)^(0+128),w
  2078  0EC3  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2079  0EC4  3001               	movlw	1
  2080  0EC5  00DA               	movwf	??_sprintf^(0+128)
  2081  0EC6  085A               	movf	??_sprintf^(0+128),w
  2082  0EC7  07D7               	addwf	sprintf@f^(0+128),f
  2083                           
  2084                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2085  0EC8  0857               	movf	sprintf@f^(0+128),w
  2086  0EC9  0084               	movwf	4
  2087  0ECA  160A  118A  200A  120A  158A  	fcall	stringdir
  2088  0ECF  160A  118A  2234  120A  158A  	fcall	_isdigit
  2089  0ED4  1803               	btfsc	3,0
  2090  0ED5  2E98               	goto	l3045
  2091  0ED6                     l3055:	
  2092                           ;doprnt.c: 831: }
  2093                           
  2094                           ;doprnt.c: 822: continue;
  2095                           
  2096                           ;doprnt.c: 811: default:
  2097                           
  2098                           ;doprnt.c: 707: case 'i':
  2099                           ;doprnt.c: 708: break;
  2100                           
  2101                           ;doprnt.c: 706: case 'd':
  2102                           
  2103                           ;doprnt.c: 647: goto alldone;
  2104                           
  2105                           ;doprnt.c: 646: case 0:
  2106                           
  2107                           ;doprnt.c: 617: }
  2108                           ;doprnt.c: 644: switch(c = *f++) {
  2109                           
  2110  0ED6  3001               	movlw	1
  2111  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  2112  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  2113  0ED9  07D7               	addwf	sprintf@f^(0+128),f
  2114  0EDA  30FF               	movlw	-1
  2115  0EDB  0757               	addwf	sprintf@f^(0+128),w
  2116  0EDC  0084               	movwf	4
  2117  0EDD  160A  118A  200A  120A  158A  	fcall	stringdir
  2118  0EE2  00E7               	movwf	sprintf@c^(0+128)
  2119                           
  2120                           ; Switch size 1, requested type "space"
  2121                           ; Number of cases is 3, Range of values is 0 to 105
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte           10     6 (average)
  2125                           ; jumptable            260     6 (fixed)
  2126                           ;	Chosen strategy is simple_byte
  2127  0EE3  3A00               	xorlw	0	; case 0
  2128  0EE4  1903               	skipnz
  2129  0EE5  2FF9               	goto	l3131
  2130  0EE6  3A64               	xorlw	100	; case 100
  2131  0EE7  1903               	skipnz
  2132  0EE8  2EED               	goto	l3057
  2133  0EE9  3A0D               	xorlw	13	; case 105
  2134  0EEA  1903               	skipnz
  2135  0EEB  2EED               	goto	l3057
  2136  0EEC  2E50               	goto	l3129
  2137  0EED                     l3057:	
  2138                           
  2139                           ;doprnt.c: 1262: {
  2140                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2141  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  2142  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  2143  0EEF  085D               	movf	sprintf@ap^(0+128),w
  2144  0EF0  0084               	movwf	4
  2145  0EF1  1383               	bcf	3,7	;select IRP bank0
  2146  0EF2  0800               	movf	0,w
  2147  0EF3  00DF               	movwf	sprintf@_val^(0+128)
  2148  0EF4  0A84               	incf	4,f
  2149  0EF5  0800               	movf	0,w
  2150  0EF6  00E0               	movwf	(sprintf@_val+1)^(0+128)
  2151  0EF7  3002               	movlw	2
  2152  0EF8  00DA               	movwf	??_sprintf^(0+128)
  2153  0EF9  085A               	movf	??_sprintf^(0+128),w
  2154  0EFA  07DD               	addwf	sprintf@ap^(0+128),f
  2155                           
  2156                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2157  0EFB  1FE0               	btfss	(sprintf@_val+1)^(0+128),7
  2158  0EFC  2F06               	goto	l3067
  2159                           
  2160                           ;doprnt.c: 1271: flag |= 0x03;
  2161  0EFD  3003               	movlw	3
  2162  0EFE  00DA               	movwf	??_sprintf^(0+128)
  2163  0EFF  085A               	movf	??_sprintf^(0+128),w
  2164  0F00  04E3               	iorwf	sprintf@flag^(0+128),f
  2165                           
  2166                           ;doprnt.c: 1272: _val._val = -_val._val;
  2167  0F01  09DF               	comf	sprintf@_val^(0+128),f
  2168  0F02  09E0               	comf	(sprintf@_val+1)^(0+128),f
  2169  0F03  0ADF               	incf	sprintf@_val^(0+128),f
  2170  0F04  1903               	skipnz
  2171  0F05  0AE0               	incf	(sprintf@_val+1)^(0+128),f
  2172  0F06                     l3067:	
  2173                           
  2174                           ;doprnt.c: 1273: }
  2175                           ;doprnt.c: 1275: }
  2176                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2177  0F06  01E7               	clrf	sprintf@c^(0+128)
  2178  0F07  0AE7               	incf	sprintf@c^(0+128),f
  2179  0F08  0867               	movf	sprintf@c^(0+128),w
  2180  0F09  3A05               	xorlw	5
  2181  0F0A  1903               	btfsc	3,2
  2182  0F0B  2F2D               	goto	l3079
  2183  0F0C                     l3071:	
  2184                           
  2185                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2186  0F0C  0867               	movf	sprintf@c^(0+128),w
  2187  0F0D  00DA               	movwf	??_sprintf^(0+128)
  2188  0F0E  075A               	addwf	??_sprintf^(0+128),w
  2189  0F0F  3E01               	addlw	low (_dpowers-__stringbase)
  2190  0F10  0084               	movwf	4
  2191  0F11  160A  118A  200A  120A  158A  	fcall	stringdir
  2192  0F16  00DB               	movwf	(??_sprintf+1)^(0+128)
  2193  0F17  160A  118A  200A  120A  158A  	fcall	stringdir
  2194  0F1C  00DC               	movwf	((??_sprintf+1)^(0+128)+1)
  2195  0F1D  085C               	movf	(??_sprintf+2)^(0+128),w
  2196  0F1E  0260               	subwf	(sprintf@_val+1)^(0+128),w
  2197  0F1F  1D03               	skipz
  2198  0F20  2F23               	goto	u3685
  2199  0F21  085B               	movf	(??_sprintf+1)^(0+128),w
  2200  0F22  025F               	subwf	sprintf@_val^(0+128),w
  2201  0F23                     u3685:	
  2202  0F23  1C03               	btfss	3,0
  2203  0F24  2F2D               	goto	l3079
  2204                           
  2205                           ;doprnt.c: 1316: break;
  2206  0F25  3001               	movlw	1
  2207  0F26  00DA               	movwf	??_sprintf^(0+128)
  2208  0F27  085A               	movf	??_sprintf^(0+128),w
  2209  0F28  07E7               	addwf	sprintf@c^(0+128),f
  2210  0F29  0867               	movf	sprintf@c^(0+128),w
  2211  0F2A  3A05               	xorlw	5
  2212  0F2B  1D03               	skipz
  2213  0F2C  2F0C               	goto	l3071
  2214  0F2D                     l3079:	
  2215                           
  2216                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2217  0F2D  0865               	movf	(sprintf@width+1)^(0+128),w
  2218  0F2E  0464               	iorwf	sprintf@width^(0+128),w
  2219  0F2F  1903               	skipnz
  2220  0F30  2F3B               	goto	l494
  2221  0F31  0863               	movf	sprintf@flag^(0+128),w
  2222  0F32  3903               	andlw	3
  2223  0F33  1903               	btfsc	3,2
  2224  0F34  2F3B               	goto	l494
  2225                           
  2226                           ;doprnt.c: 1355: width--;
  2227  0F35  30FF               	movlw	255
  2228  0F36  07E4               	addwf	sprintf@width^(0+128),f
  2229  0F37  1803               	skipnc
  2230  0F38  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2231  0F39  30FF               	movlw	255
  2232  0F3A  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2233  0F3B                     l494:	
  2234                           
  2235                           ;doprnt.c: 1390: if(width > c)
  2236  0F3B  0867               	movf	sprintf@c^(0+128),w
  2237  0F3C  00DA               	movwf	??_sprintf^(0+128)
  2238  0F3D  01DB               	clrf	(??_sprintf^(0+128)+1)
  2239  0F3E  1BDA               	btfsc	??_sprintf^(0+128),7
  2240  0F3F  03DB               	decf	(??_sprintf^(0+128)+1),f
  2241  0F40  085B               	movf	(??_sprintf+1)^(0+128),w
  2242  0F41  3A80               	xorlw	128
  2243  0F42  00DC               	movwf	(??_sprintf+2)^(0+128)
  2244  0F43  0865               	movf	(sprintf@width+1)^(0+128),w
  2245  0F44  3A80               	xorlw	128
  2246  0F45  025C               	subwf	(??_sprintf+2)^(0+128),w
  2247  0F46  1D03               	skipz
  2248  0F47  2F4A               	goto	u3725
  2249  0F48  0864               	movf	sprintf@width^(0+128),w
  2250  0F49  025A               	subwf	??_sprintf^(0+128),w
  2251  0F4A                     u3725:	
  2252  0F4A  1803               	skipnc
  2253  0F4B  2F5A               	goto	l3087
  2254                           
  2255                           ;doprnt.c: 1391: width -= c;
  2256  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  2258  0F4E  0867               	movf	sprintf@c^(0+128),w
  2259  0F4F  00DA               	movwf	??_sprintf^(0+128)
  2260  0F50  01DB               	clrf	(??_sprintf^(0+128)+1)
  2261  0F51  1BDA               	btfsc	??_sprintf^(0+128),7
  2262  0F52  03DB               	decf	(??_sprintf^(0+128)+1),f
  2263  0F53  085A               	movf	??_sprintf^(0+128),w
  2264  0F54  02E4               	subwf	sprintf@width^(0+128),f
  2265  0F55  085B               	movf	(??_sprintf+1)^(0+128),w
  2266  0F56  1C03               	skipc
  2267  0F57  03E5               	decf	(sprintf@width+1)^(0+128),f
  2268  0F58  02E5               	subwf	(sprintf@width+1)^(0+128),f
  2269  0F59  2F5E               	goto	l3089
  2270  0F5A                     l3087:	
  2271                           
  2272                           ;doprnt.c: 1392: else
  2273                           ;doprnt.c: 1393: width = 0;
  2274  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  2275  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  2276  0F5C  01E4               	clrf	sprintf@width^(0+128)
  2277  0F5D  01E5               	clrf	(sprintf@width+1)^(0+128)
  2278  0F5E                     l3089:	
  2279                           
  2280                           ;doprnt.c: 1396: if(flag & 0x04) {
  2281  0F5E  1D63               	btfss	sprintf@flag^(0+128),2
  2282  0F5F  2F85               	goto	l3105
  2283                           
  2284                           ;doprnt.c: 1401: if(flag & 0x03)
  2285  0F60  0863               	movf	sprintf@flag^(0+128),w
  2286  0F61  3903               	andlw	3
  2287  0F62  1903               	btfsc	3,2
  2288  0F63  2F6F               	goto	l3097
  2289                           
  2290                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2291  0F64  302D               	movlw	45
  2292  0F65  00DA               	movwf	??_sprintf^(0+128)
  2293  0F66  0866               	movf	sprintf@sp^(0+128),w
  2294  0F67  0084               	movwf	4
  2295  0F68  085A               	movf	??_sprintf^(0+128),w
  2296  0F69  1783               	bsf	3,7	;select IRP bank2
  2297  0F6A  0080               	movwf	0
  2298  0F6B  3001               	movlw	1
  2299  0F6C  00DA               	movwf	??_sprintf^(0+128)
  2300  0F6D  085A               	movf	??_sprintf^(0+128),w
  2301  0F6E  07E6               	addwf	sprintf@sp^(0+128),f
  2302  0F6F                     l3097:	
  2303                           
  2304                           ;doprnt.c: 1424: if(width)
  2305  0F6F  0865               	movf	(sprintf@width+1)^(0+128),w
  2306  0F70  0464               	iorwf	sprintf@width^(0+128),w
  2307  0F71  1903               	skipnz
  2308  0F72  2FAD               	goto	l3119
  2309                           
  2310                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2311                           
  2312                           ;doprnt.c: 1425: do
  2313  0F73  3030               	movlw	48
  2314  0F74  00DA               	movwf	??_sprintf^(0+128)
  2315  0F75  0866               	movf	sprintf@sp^(0+128),w
  2316  0F76  0084               	movwf	4
  2317  0F77  085A               	movf	??_sprintf^(0+128),w
  2318  0F78  1783               	bsf	3,7	;select IRP bank2
  2319  0F79  0080               	movwf	0
  2320  0F7A  3001               	movlw	1
  2321  0F7B  00DA               	movwf	??_sprintf^(0+128)
  2322  0F7C  085A               	movf	??_sprintf^(0+128),w
  2323  0F7D  07E6               	addwf	sprintf@sp^(0+128),f
  2324                           
  2325                           ;doprnt.c: 1427: while(--width);
  2326  0F7E  30FF               	movlw	255
  2327  0F7F  07E4               	addwf	sprintf@width^(0+128),f
  2328  0F80  1803               	skipnc
  2329  0F81  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2330  0F82  30FF               	movlw	255
  2331  0F83  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2332  0F84  2F6F               	goto	l3097
  2333  0F85                     l3105:	
  2334                           ;doprnt.c: 1429: } else
  2335                           
  2336                           
  2337                           ;doprnt.c: 1431: {
  2338                           ;doprnt.c: 1433: if(width
  2339                           ;doprnt.c: 1437: )
  2340  0F85  0865               	movf	(sprintf@width+1)^(0+128),w
  2341  0F86  0464               	iorwf	sprintf@width^(0+128),w
  2342  0F87  1903               	skipnz
  2343  0F88  2F9E               	goto	l3113
  2344  0F89                     l3107:	
  2345                           ;doprnt.c: 1438: do
  2346                           
  2347                           
  2348                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2349  0F89  3020               	movlw	32
  2350  0F8A  00DA               	movwf	??_sprintf^(0+128)
  2351  0F8B  0866               	movf	sprintf@sp^(0+128),w
  2352  0F8C  0084               	movwf	4
  2353  0F8D  085A               	movf	??_sprintf^(0+128),w
  2354  0F8E  1783               	bsf	3,7	;select IRP bank2
  2355  0F8F  0080               	movwf	0
  2356  0F90  3001               	movlw	1
  2357  0F91  00DA               	movwf	??_sprintf^(0+128)
  2358  0F92  085A               	movf	??_sprintf^(0+128),w
  2359  0F93  07E6               	addwf	sprintf@sp^(0+128),f
  2360                           
  2361                           ;doprnt.c: 1440: while(--width);
  2362  0F94  30FF               	movlw	255
  2363  0F95  07E4               	addwf	sprintf@width^(0+128),f
  2364  0F96  1803               	skipnc
  2365  0F97  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2366  0F98  30FF               	movlw	255
  2367  0F99  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2368  0F9A  0865               	movf	(sprintf@width+1)^(0+128),w
  2369  0F9B  0464               	iorwf	sprintf@width^(0+128),w
  2370  0F9C  1D03               	skipz
  2371  0F9D  2F89               	goto	l3107
  2372  0F9E                     l3113:	
  2373                           
  2374                           ;doprnt.c: 1447: if(flag & 0x03)
  2375  0F9E  0863               	movf	sprintf@flag^(0+128),w
  2376  0F9F  3903               	andlw	3
  2377  0FA0  1903               	btfsc	3,2
  2378  0FA1  2FAD               	goto	l3119
  2379                           
  2380                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2381  0FA2  302D               	movlw	45
  2382  0FA3  00DA               	movwf	??_sprintf^(0+128)
  2383  0FA4  0866               	movf	sprintf@sp^(0+128),w
  2384  0FA5  0084               	movwf	4
  2385  0FA6  085A               	movf	??_sprintf^(0+128),w
  2386  0FA7  1783               	bsf	3,7	;select IRP bank2
  2387  0FA8  0080               	movwf	0
  2388  0FA9  3001               	movlw	1
  2389  0FAA  00DA               	movwf	??_sprintf^(0+128)
  2390  0FAB  085A               	movf	??_sprintf^(0+128),w
  2391  0FAC  07E6               	addwf	sprintf@sp^(0+128),f
  2392  0FAD                     l3119:	
  2393                           
  2394                           ;doprnt.c: 1478: }
  2395                           ;doprnt.c: 1481: prec = c;
  2396  0FAD  0867               	movf	sprintf@c^(0+128),w
  2397  0FAE  00DA               	movwf	??_sprintf^(0+128)
  2398  0FAF  085A               	movf	??_sprintf^(0+128),w
  2399  0FB0  00DE               	movwf	sprintf@prec^(0+128)
  2400  0FB1                     l3127:	
  2401                           ;doprnt.c: 1483: while(prec--) {
  2402                           
  2403  0FB1  30FF               	movlw	-1
  2404  0FB2  00DA               	movwf	??_sprintf^(0+128)
  2405  0FB3  085A               	movf	??_sprintf^(0+128),w
  2406  0FB4  07DE               	addwf	sprintf@prec^(0+128),f
  2407  0FB5  085E               	movf	sprintf@prec^(0+128),w
  2408  0FB6  3AFF               	xorlw	-1
  2409  0FB7  1903               	btfsc	3,2
  2410  0FB8  2E50               	goto	l3129
  2411                           
  2412                           ;doprnt.c: 1487: {
  2413                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2414  0FB9  300A               	movlw	10
  2415  0FBA  00D1               	movwf	___lwmod@divisor^(0+128)
  2416  0FBB  3000               	movlw	0
  2417  0FBC  00D2               	movwf	(___lwmod@divisor^(0+128)+1)
  2418  0FBD  085E               	movf	sprintf@prec^(0+128),w
  2419  0FBE  00DA               	movwf	??_sprintf^(0+128)
  2420  0FBF  075A               	addwf	??_sprintf^(0+128),w
  2421  0FC0  3E01               	addlw	low (_dpowers-__stringbase)
  2422  0FC1  0084               	movwf	4
  2423  0FC2  160A  118A  200A  120A  158A  	fcall	stringdir
  2424  0FC7  00C9               	movwf	___lwdiv@divisor^(0+128)
  2425  0FC8  160A  118A  200A  120A  158A  	fcall	stringdir
  2426  0FCD  00CA               	movwf	(___lwdiv@divisor+1)^(0+128)
  2427  0FCE  0860               	movf	(sprintf@_val+1)^(0+128),w
  2428  0FCF  01CC               	clrf	(___lwdiv@dividend+1)^(0+128)
  2429  0FD0  07CC               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2430  0FD1  085F               	movf	sprintf@_val^(0+128),w
  2431  0FD2  01CB               	clrf	___lwdiv@dividend^(0+128)
  2432  0FD3  07CB               	addwf	___lwdiv@dividend^(0+128),f
  2433  0FD4  160A  118A  2472  120A  158A  	fcall	___lwdiv
  2434  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2435  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  2436  0FDB  084A               	movf	(?___lwdiv+1)^(0+128),w
  2437  0FDC  01D4               	clrf	(___lwmod@dividend+1)^(0+128)
  2438  0FDD  07D4               	addwf	(___lwmod@dividend+1)^(0+128),f
  2439  0FDE  0849               	movf	?___lwdiv^(0+128),w
  2440  0FDF  01D3               	clrf	___lwmod@dividend^(0+128)
  2441  0FE0  07D3               	addwf	___lwmod@dividend^(0+128),f
  2442  0FE1  160A  118A  23FE  120A  158A  	fcall	___lwmod
  2443  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2444  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2445  0FE8  0851               	movf	?___lwmod^(0+128),w
  2446  0FE9  3E30               	addlw	48
  2447  0FEA  00DB               	movwf	(??_sprintf+1)^(0+128)
  2448  0FEB  085B               	movf	(??_sprintf+1)^(0+128),w
  2449  0FEC  00E7               	movwf	sprintf@c^(0+128)
  2450                           
  2451                           ;doprnt.c: 1532: }
  2452                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2453  0FED  0867               	movf	sprintf@c^(0+128),w
  2454  0FEE  00DA               	movwf	??_sprintf^(0+128)
  2455  0FEF  0866               	movf	sprintf@sp^(0+128),w
  2456  0FF0  0084               	movwf	4
  2457  0FF1  085A               	movf	??_sprintf^(0+128),w
  2458  0FF2  1783               	bsf	3,7	;select IRP bank2
  2459  0FF3  0080               	movwf	0
  2460  0FF4  3001               	movlw	1
  2461  0FF5  00DA               	movwf	??_sprintf^(0+128)
  2462  0FF6  085A               	movf	??_sprintf^(0+128),w
  2463  0FF7  07E6               	addwf	sprintf@sp^(0+128),f
  2464  0FF8  2FB1               	goto	l3127
  2465  0FF9                     l3131:	
  2466                           ;doprnt.c: 1534: }
  2467                           ;doprnt.c: 1542: }
  2468                           ;doprnt.c: 1544: alldone:
  2469                           
  2470                           
  2471                           ;doprnt.c: 1547: *sp = 0;
  2472  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0FFB  0866               	movf	sprintf@sp^(0+128),w
  2475  0FFC  0084               	movwf	4
  2476  0FFD  1783               	bsf	3,7	;select IRP bank2
  2477  0FFE  0180               	clrf	0
  2478  0FFF  0008               	return
  2479  1000                     __end_of_sprintf:	
  2480                           ;doprnt.c: 1549: return 0;
  2481                           ;	Return value of _sprintf is never used
  2482                           
  2483                           
  2484                           	psect	text2
  2485  1234                     __ptext2:	
  2486 ;; *************** function _isdigit *****************
  2487 ;; Defined at:
  2488 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  c               1    wreg     unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  c               1    1[BANK1 ] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;		None               void
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2502 ;;      Params:         0       0       0       0       0
  2503 ;;      Locals:         0       0       2       0       0
  2504 ;;      Temps:          0       0       0       0       0
  2505 ;;      Totals:         0       0       2       0       0
  2506 ;;Total ram usage:        2 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    5
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_sprintf
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function _isdigit
  2518  1234                     _isdigit:	
  2519                           
  2520                           ;incstack = 0
  2521                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2522                           ;isdigit@c stored from wreg
  2523  1234  1683               	bsf	3,5	;RP0=1, select bank1
  2524  1235  1303               	bcf	3,6	;RP1=0, select bank1
  2525  1236  00CA               	movwf	isdigit@c^(0+128)
  2526  1237  01C9               	clrf	_isdigit$1439^(0+128)
  2527  1238  303A               	movlw	58
  2528  1239  024A               	subwf	isdigit@c^(0+128),w
  2529  123A  1803               	skipnc
  2530  123B  2A42               	goto	l2507
  2531  123C  3030               	movlw	48
  2532  123D  024A               	subwf	isdigit@c^(0+128),w
  2533  123E  1C03               	skipc
  2534  123F  2A42               	goto	l2507
  2535  1240  01C9               	clrf	_isdigit$1439^(0+128)
  2536  1241  0AC9               	incf	_isdigit$1439^(0+128),f
  2537  1242                     l2507:	
  2538  1242  0C49               	rrf	_isdigit$1439^(0+128),w
  2539  1243  0008               	return
  2540  1244                     __end_of_isdigit:	
  2541                           
  2542                           	psect	text3
  2543  137F                     __ptext3:	
  2544 ;; *************** function ___wmul *****************
  2545 ;; Defined at:
  2546 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2549 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  product         2    4[BANK1 ] unsigned int 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  2    0[BANK1 ] unsigned int 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       4       0       0
  2562 ;;      Locals:         0       0       2       0       0
  2563 ;;      Temps:          0       0       0       0       0
  2564 ;;      Totals:         0       0       6       0       0
  2565 ;;Total ram usage:        6 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    5
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_sprintf
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function ___wmul
  2577  137F                     ___wmul:	
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2581  137F  1683               	bsf	3,5	;RP0=1, select bank1
  2582  1380  1303               	bcf	3,6	;RP1=0, select bank1
  2583  1381  01CD               	clrf	___wmul@product^(0+128)
  2584  1382  01CE               	clrf	(___wmul@product+1)^(0+128)
  2585  1383                     l2513:	
  2586  1383  1C49               	btfss	___wmul@multiplier^(0+128),0
  2587  1384  2B8B               	goto	l595
  2588  1385  084B               	movf	___wmul@multiplicand^(0+128),w
  2589  1386  07CD               	addwf	___wmul@product^(0+128),f
  2590  1387  1803               	skipnc
  2591  1388  0ACE               	incf	(___wmul@product+1)^(0+128),f
  2592  1389  084C               	movf	(___wmul@multiplicand+1)^(0+128),w
  2593  138A  07CE               	addwf	(___wmul@product+1)^(0+128),f
  2594  138B                     l595:	
  2595  138B  3001               	movlw	1
  2596  138C                     u2815:	
  2597  138C  1003               	clrc
  2598  138D  0DCB               	rlf	___wmul@multiplicand^(0+128),f
  2599  138E  0DCC               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2600  138F  3EFF               	addlw	-1
  2601  1390  1D03               	skipz
  2602  1391  2B8C               	goto	u2815
  2603  1392  3001               	movlw	1
  2604  1393                     u2825:	
  2605  1393  1003               	clrc
  2606  1394  0CCA               	rrf	(___wmul@multiplier+1)^(0+128),f
  2607  1395  0CC9               	rrf	___wmul@multiplier^(0+128),f
  2608  1396  3EFF               	addlw	-1
  2609  1397  1D03               	skipz
  2610  1398  2B93               	goto	u2825
  2611  1399  084A               	movf	(___wmul@multiplier+1)^(0+128),w
  2612  139A  0449               	iorwf	___wmul@multiplier^(0+128),w
  2613  139B  1D03               	skipz
  2614  139C  2B83               	goto	l2513
  2615  139D  084E               	movf	(___wmul@product+1)^(0+128),w
  2616  139E  01CA               	clrf	(?___wmul+1)^(0+128)
  2617  139F  07CA               	addwf	(?___wmul+1)^(0+128),f
  2618  13A0  084D               	movf	___wmul@product^(0+128),w
  2619  13A1  01C9               	clrf	?___wmul^(0+128)
  2620  13A2  07C9               	addwf	?___wmul^(0+128),f
  2621  13A3  0008               	return
  2622  13A4                     __end_of___wmul:	
  2623                           
  2624                           	psect	text4
  2625  13FE                     __ptext4:	
  2626 ;; *************** function ___lwmod *****************
  2627 ;; Defined at:
  2628 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  divisor         2    8[BANK1 ] unsigned int 
  2631 ;;  dividend        2   10[BANK1 ] unsigned int 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  counter         1   13[BANK1 ] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  2    8[BANK1 ] unsigned int 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         0       0       4       0       0
  2644 ;;      Locals:         0       0       1       0       0
  2645 ;;      Temps:          0       0       1       0       0
  2646 ;;      Totals:         0       0       6       0       0
  2647 ;;Total ram usage:        6 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    5
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_sprintf
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function ___lwmod
  2659  13FE                     ___lwmod:	
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2663  13FE  1683               	bsf	3,5	;RP0=1, select bank1
  2664  13FF  1303               	bcf	3,6	;RP1=0, select bank1
  2665  1400  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  2666  1401  0451               	iorwf	___lwmod@divisor^(0+128),w
  2667  1402  1903               	skipnz
  2668  1403  2C2D               	goto	l2701
  2669  1404  01D6               	clrf	___lwmod@counter^(0+128)
  2670  1405  0AD6               	incf	___lwmod@counter^(0+128),f
  2671  1406                     l2691:	
  2672  1406  1BD2               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2673  1407  2C14               	goto	l2693
  2674  1408  3001               	movlw	1
  2675  1409                     u3265:	
  2676  1409  1003               	clrc
  2677  140A  0DD1               	rlf	___lwmod@divisor^(0+128),f
  2678  140B  0DD2               	rlf	(___lwmod@divisor+1)^(0+128),f
  2679  140C  3EFF               	addlw	-1
  2680  140D  1D03               	skipz
  2681  140E  2C09               	goto	u3265
  2682  140F  3001               	movlw	1
  2683  1410  00D5               	movwf	??___lwmod^(0+128)
  2684  1411  0855               	movf	??___lwmod^(0+128),w
  2685  1412  07D6               	addwf	___lwmod@counter^(0+128),f
  2686  1413  2C06               	goto	l2691
  2687  1414                     l2693:	
  2688  1414  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  2689  1415  0254               	subwf	(___lwmod@dividend+1)^(0+128),w
  2690  1416  1D03               	skipz
  2691  1417  2C1A               	goto	u3285
  2692  1418  0851               	movf	___lwmod@divisor^(0+128),w
  2693  1419  0253               	subwf	___lwmod@dividend^(0+128),w
  2694  141A                     u3285:	
  2695  141A  1C03               	skipc
  2696  141B  2C22               	goto	l2697
  2697  141C  0851               	movf	___lwmod@divisor^(0+128),w
  2698  141D  02D3               	subwf	___lwmod@dividend^(0+128),f
  2699  141E  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  2700  141F  1C03               	skipc
  2701  1420  03D4               	decf	(___lwmod@dividend+1)^(0+128),f
  2702  1421  02D4               	subwf	(___lwmod@dividend+1)^(0+128),f
  2703  1422                     l2697:	
  2704  1422  3001               	movlw	1
  2705  1423                     u3295:	
  2706  1423  1003               	clrc
  2707  1424  0CD2               	rrf	(___lwmod@divisor+1)^(0+128),f
  2708  1425  0CD1               	rrf	___lwmod@divisor^(0+128),f
  2709  1426  3EFF               	addlw	-1
  2710  1427  1D03               	skipz
  2711  1428  2C23               	goto	u3295
  2712  1429  3001               	movlw	1
  2713  142A  02D6               	subwf	___lwmod@counter^(0+128),f
  2714  142B  1D03               	btfss	3,2
  2715  142C  2C14               	goto	l2693
  2716  142D                     l2701:	
  2717  142D  0854               	movf	(___lwmod@dividend+1)^(0+128),w
  2718  142E  01D2               	clrf	(?___lwmod+1)^(0+128)
  2719  142F  07D2               	addwf	(?___lwmod+1)^(0+128),f
  2720  1430  0853               	movf	___lwmod@dividend^(0+128),w
  2721  1431  01D1               	clrf	?___lwmod^(0+128)
  2722  1432  07D1               	addwf	?___lwmod^(0+128),f
  2723  1433  0008               	return
  2724  1434                     __end_of___lwmod:	
  2725                           
  2726                           	psect	text5
  2727  1472                     __ptext5:	
  2728 ;; *************** function ___lwdiv *****************
  2729 ;; Defined at:
  2730 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  divisor         2    0[BANK1 ] unsigned int 
  2733 ;;  dividend        2    2[BANK1 ] unsigned int 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  quotient        2    5[BANK1 ] unsigned int 
  2736 ;;  counter         1    7[BANK1 ] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  2    0[BANK1 ] unsigned int 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       0       4       0       0
  2747 ;;      Locals:         0       0       3       0       0
  2748 ;;      Temps:          0       0       1       0       0
  2749 ;;      Totals:         0       0       8       0       0
  2750 ;;Total ram usage:        8 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    5
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_sprintf
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function ___lwdiv
  2762  1472                     ___lwdiv:	
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2766  1472  1683               	bsf	3,5	;RP0=1, select bank1
  2767  1473  1303               	bcf	3,6	;RP1=0, select bank1
  2768  1474  01CE               	clrf	___lwdiv@quotient^(0+128)
  2769  1475  01CF               	clrf	(___lwdiv@quotient+1)^(0+128)
  2770  1476  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  2771  1477  0449               	iorwf	___lwdiv@divisor^(0+128),w
  2772  1478  1903               	skipnz
  2773  1479  2CAB               	goto	l2679
  2774  147A  01D0               	clrf	___lwdiv@counter^(0+128)
  2775  147B  0AD0               	incf	___lwdiv@counter^(0+128),f
  2776  147C                     l2667:	
  2777  147C  1BCA               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2778  147D  2C8A               	goto	l2669
  2779  147E  3001               	movlw	1
  2780  147F                     u3195:	
  2781  147F  1003               	clrc
  2782  1480  0DC9               	rlf	___lwdiv@divisor^(0+128),f
  2783  1481  0DCA               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2784  1482  3EFF               	addlw	-1
  2785  1483  1D03               	skipz
  2786  1484  2C7F               	goto	u3195
  2787  1485  3001               	movlw	1
  2788  1486  00CD               	movwf	??___lwdiv^(0+128)
  2789  1487  084D               	movf	??___lwdiv^(0+128),w
  2790  1488  07D0               	addwf	___lwdiv@counter^(0+128),f
  2791  1489  2C7C               	goto	l2667
  2792  148A                     l2669:	
  2793  148A  3001               	movlw	1
  2794  148B                     u3215:	
  2795  148B  1003               	clrc
  2796  148C  0DCE               	rlf	___lwdiv@quotient^(0+128),f
  2797  148D  0DCF               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2798  148E  3EFF               	addlw	-1
  2799  148F  1D03               	skipz
  2800  1490  2C8B               	goto	u3215
  2801  1491  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  2802  1492  024C               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2803  1493  1D03               	skipz
  2804  1494  2C97               	goto	u3225
  2805  1495  0849               	movf	___lwdiv@divisor^(0+128),w
  2806  1496  024B               	subwf	___lwdiv@dividend^(0+128),w
  2807  1497                     u3225:	
  2808  1497  1C03               	skipc
  2809  1498  2CA0               	goto	l2675
  2810  1499  0849               	movf	___lwdiv@divisor^(0+128),w
  2811  149A  02CB               	subwf	___lwdiv@dividend^(0+128),f
  2812  149B  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  2813  149C  1C03               	skipc
  2814  149D  03CC               	decf	(___lwdiv@dividend+1)^(0+128),f
  2815  149E  02CC               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2816  149F  144E               	bsf	___lwdiv@quotient^(0+128),0
  2817  14A0                     l2675:	
  2818  14A0  3001               	movlw	1
  2819  14A1                     u3235:	
  2820  14A1  1003               	clrc
  2821  14A2  0CCA               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2822  14A3  0CC9               	rrf	___lwdiv@divisor^(0+128),f
  2823  14A4  3EFF               	addlw	-1
  2824  14A5  1D03               	skipz
  2825  14A6  2CA1               	goto	u3235
  2826  14A7  3001               	movlw	1
  2827  14A8  02D0               	subwf	___lwdiv@counter^(0+128),f
  2828  14A9  1D03               	btfss	3,2
  2829  14AA  2C8A               	goto	l2669
  2830  14AB                     l2679:	
  2831  14AB  084F               	movf	(___lwdiv@quotient+1)^(0+128),w
  2832  14AC  01CA               	clrf	(?___lwdiv+1)^(0+128)
  2833  14AD  07CA               	addwf	(?___lwdiv+1)^(0+128),f
  2834  14AE  084E               	movf	___lwdiv@quotient^(0+128),w
  2835  14AF  01C9               	clrf	?___lwdiv^(0+128)
  2836  14B0  07C9               	addwf	?___lwdiv^(0+128),f
  2837  14B1  0008               	return
  2838  14B2                     __end_of___lwdiv:	
  2839                           
  2840                           	psect	text6
  2841  14B2                     __ptext6:	
  2842 ;; *************** function _USART_Init *****************
  2843 ;; Defined at:
  2844 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  BaudRate        4   15[BANK1 ] long 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;		None               void
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       4       0       0
  2859 ;;      Locals:         0       0       0       0       0
  2860 ;;      Temps:          0       0       4       0       0
  2861 ;;      Totals:         0       0       8       0       0
  2862 ;;Total ram usage:        8 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    6
  2865 ;; This function calls:
  2866 ;;		___aldiv
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _USART_Init
  2874  14B2                     _USART_Init:	
  2875                           
  2876                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  2880  14B2  1683               	bsf	3,5	;RP0=1, select bank1
  2881  14B3  1303               	bcf	3,6	;RP1=0, select bank1
  2882  14B4  0858               	movf	USART_Init@BaudRate^(0+128),w
  2883  14B5  00DC               	movwf	??_USART_Init^(0+128)
  2884  14B6  0859               	movf	(USART_Init@BaudRate+1)^(0+128),w
  2885  14B7  00DD               	movwf	(??_USART_Init^(0+128)+1)
  2886  14B8  085A               	movf	(USART_Init@BaudRate+2)^(0+128),w
  2887  14B9  00DE               	movwf	(??_USART_Init^(0+128)+2)
  2888  14BA  085B               	movf	(USART_Init@BaudRate+3)^(0+128),w
  2889  14BB  00DF               	movwf	(??_USART_Init^(0+128)+3)
  2890  14BC  3004               	movlw	4
  2891  14BD                     u3595:	
  2892  14BD  1003               	clrc
  2893  14BE  0DDC               	rlf	??_USART_Init^(0+128),f
  2894  14BF  0DDD               	rlf	(??_USART_Init^(0+128)+1),f
  2895  14C0  0DDE               	rlf	(??_USART_Init^(0+128)+2),f
  2896  14C1  0DDF               	rlf	(??_USART_Init^(0+128)+3),f
  2897  14C2  3EFF               	addlw	-1
  2898  14C3  1D03               	skipz
  2899  14C4  2CBD               	goto	u3595
  2900  14C5  085F               	movf	(??_USART_Init+3)^(0+128),w
  2901  14C6  00CC               	movwf	(___aldiv@divisor+3)^(0+128)
  2902  14C7  085E               	movf	(??_USART_Init+2)^(0+128),w
  2903  14C8  00CB               	movwf	(___aldiv@divisor+2)^(0+128)
  2904  14C9  085D               	movf	(??_USART_Init+1)^(0+128),w
  2905  14CA  00CA               	movwf	(___aldiv@divisor+1)^(0+128)
  2906  14CB  085C               	movf	??_USART_Init^(0+128),w
  2907  14CC  00C9               	movwf	___aldiv@divisor^(0+128)
  2908  14CD  3001               	movlw	1
  2909  14CE  00D0               	movwf	(___aldiv@dividend+3)^(0+128)
  2910  14CF  3019               	movlw	25
  2911  14D0  00CF               	movwf	(___aldiv@dividend+2)^(0+128)
  2912  14D1  3040               	movlw	64
  2913  14D2  00CE               	movwf	(___aldiv@dividend+1)^(0+128)
  2914  14D3  3000               	movlw	0
  2915  14D4  00CD               	movwf	___aldiv@dividend^(0+128)
  2916  14D5  120A  118A  2757   	fcall	___aldiv
  2917  14D8  1683               	bsf	3,5	;RP0=1, select bank1
  2918  14D9  1303               	bcf	3,6	;RP1=0, select bank1
  2919  14DA  0849               	movf	?___aldiv^(0+128),w
  2920  14DB  3EFF               	addlw	255
  2921  14DC  0099               	movwf	25	;volatile
  2922                           
  2923                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  2924  14DD  1398               	bcf	24,7	;volatile
  2925                           
  2926                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  2927  14DE  1318               	bcf	24,6	;volatile
  2928                           
  2929                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  2930  14DF  1698               	bsf	24,5	;volatile
  2931                           
  2932                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  2933  14E0  1218               	bcf	24,4	;volatile
  2934                           
  2935                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  2936  14E1  1518               	bsf	24,2	;volatile
  2937                           
  2938                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  2939  14E2  1498               	bsf	24,1	;volatile
  2940                           
  2941                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  2942  14E3  1018               	bcf	24,0	;volatile
  2943                           
  2944                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  2945  14E4  1283               	bcf	3,5	;RP0=0, select bank0
  2946  14E5  1303               	bcf	3,6	;RP1=0, select bank0
  2947  14E6  1798               	bsf	24,7	;volatile
  2948                           
  2949                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  2950  14E7  1318               	bcf	24,6	;volatile
  2951                           
  2952                           ;usart.c: 28: RCSTAbits.SREN = 0;
  2953  14E8  1298               	bcf	24,5	;volatile
  2954                           
  2955                           ;usart.c: 29: RCSTAbits.CREN = 1;
  2956  14E9  1618               	bsf	24,4	;volatile
  2957                           
  2958                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  2959  14EA  1198               	bcf	24,3	;volatile
  2960                           
  2961                           ;usart.c: 31: RCSTAbits.FERR = 0;
  2962  14EB  1118               	bcf	24,2	;volatile
  2963                           
  2964                           ;usart.c: 32: RCSTAbits.OERR = 0;
  2965  14EC  1098               	bcf	24,1	;volatile
  2966                           
  2967                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  2968  14ED  1018               	bcf	24,0	;volatile
  2969                           
  2970                           ;usart.c: 36: PIE1bits.TXIE = 0;
  2971  14EE  1683               	bsf	3,5	;RP0=1, select bank1
  2972  14EF  1303               	bcf	3,6	;RP1=0, select bank1
  2973  14F0  120C               	bcf	12,4	;volatile
  2974                           
  2975                           ;usart.c: 37: PIR1bits.TXIF = 0;
  2976  14F1  1283               	bcf	3,5	;RP0=0, select bank0
  2977  14F2  1303               	bcf	3,6	;RP1=0, select bank0
  2978  14F3  120C               	bcf	12,4	;volatile
  2979                           
  2980                           ;usart.c: 38: PIE1bits.RCIE = 1;
  2981  14F4  1683               	bsf	3,5	;RP0=1, select bank1
  2982  14F5  1303               	bcf	3,6	;RP1=0, select bank1
  2983  14F6  168C               	bsf	12,5	;volatile
  2984                           
  2985                           ;usart.c: 39: PIR1bits.RCIF = 0;
  2986  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  2987  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  2988  14F9  128C               	bcf	12,5	;volatile
  2989  14FA  0008               	return
  2990  14FB                     __end_of_USART_Init:	
  2991                           
  2992                           	psect	text7
  2993  0757                     __ptext7:	
  2994 ;; *************** function ___aldiv *****************
  2995 ;; Defined at:
  2996 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  divisor         4    0[BANK1 ] long 
  2999 ;;  dividend        4    4[BANK1 ] long 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  quotient        4   11[BANK1 ] long 
  3002 ;;  sign            1   10[BANK1 ] unsigned char 
  3003 ;;  counter         1    9[BANK1 ] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  4    0[BANK1 ] long 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3013 ;;      Params:         0       0       8       0       0
  3014 ;;      Locals:         0       0       6       0       0
  3015 ;;      Temps:          0       0       1       0       0
  3016 ;;      Totals:         0       0      15       0       0
  3017 ;;Total ram usage:       15 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    5
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_USART_Init
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function ___aldiv
  3029  0757                     ___aldiv:	
  3030                           
  3031                           ;incstack = 0
  3032                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3033  0757  1683               	bsf	3,5	;RP0=1, select bank1
  3034  0758  1303               	bcf	3,6	;RP1=0, select bank1
  3035  0759  01D3               	clrf	___aldiv@sign^(0+128)
  3036  075A  1FCC               	btfss	(___aldiv@divisor+3)^(0+128),7
  3037  075B  2F69               	goto	l650
  3038  075C  09C9               	comf	___aldiv@divisor^(0+128),f
  3039  075D  09CA               	comf	(___aldiv@divisor+1)^(0+128),f
  3040  075E  09CB               	comf	(___aldiv@divisor+2)^(0+128),f
  3041  075F  09CC               	comf	(___aldiv@divisor+3)^(0+128),f
  3042  0760  0AC9               	incf	___aldiv@divisor^(0+128),f
  3043  0761  1903               	skipnz
  3044  0762  0ACA               	incf	(___aldiv@divisor+1)^(0+128),f
  3045  0763  1903               	skipnz
  3046  0764  0ACB               	incf	(___aldiv@divisor+2)^(0+128),f
  3047  0765  1903               	skipnz
  3048  0766  0ACC               	incf	(___aldiv@divisor+3)^(0+128),f
  3049  0767  01D3               	clrf	___aldiv@sign^(0+128)
  3050  0768  0AD3               	incf	___aldiv@sign^(0+128),f
  3051  0769                     l650:	
  3052  0769  1FD0               	btfss	(___aldiv@dividend+3)^(0+128),7
  3053  076A  2F7A               	goto	l2533
  3054  076B  09CD               	comf	___aldiv@dividend^(0+128),f
  3055  076C  09CE               	comf	(___aldiv@dividend+1)^(0+128),f
  3056  076D  09CF               	comf	(___aldiv@dividend+2)^(0+128),f
  3057  076E  09D0               	comf	(___aldiv@dividend+3)^(0+128),f
  3058  076F  0ACD               	incf	___aldiv@dividend^(0+128),f
  3059  0770  1903               	skipnz
  3060  0771  0ACE               	incf	(___aldiv@dividend+1)^(0+128),f
  3061  0772  1903               	skipnz
  3062  0773  0ACF               	incf	(___aldiv@dividend+2)^(0+128),f
  3063  0774  1903               	skipnz
  3064  0775  0AD0               	incf	(___aldiv@dividend+3)^(0+128),f
  3065  0776  3001               	movlw	1
  3066  0777  00D1               	movwf	??___aldiv^(0+128)
  3067  0778  0851               	movf	??___aldiv^(0+128),w
  3068  0779  06D3               	xorwf	___aldiv@sign^(0+128),f
  3069  077A                     l2533:	
  3070  077A  3000               	movlw	0
  3071  077B  00D7               	movwf	(___aldiv@quotient+3)^(0+128)
  3072  077C  3000               	movlw	0
  3073  077D  00D6               	movwf	(___aldiv@quotient+2)^(0+128)
  3074  077E  3000               	movlw	0
  3075  077F  00D5               	movwf	(___aldiv@quotient+1)^(0+128)
  3076  0780  3000               	movlw	0
  3077  0781  00D4               	movwf	___aldiv@quotient^(0+128)
  3078  0782  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3079  0783  044B               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3080  0784  044A               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3081  0785  0449               	iorwf	___aldiv@divisor^(0+128),w
  3082  0786  1903               	skipnz
  3083  0787  2FCF               	goto	l2555
  3084  0788  01D2               	clrf	___aldiv@counter^(0+128)
  3085  0789  0AD2               	incf	___aldiv@counter^(0+128),f
  3086  078A                     l2541:	
  3087  078A  1BCC               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3088  078B  2F9A               	goto	l2543
  3089  078C  3001               	movlw	1
  3090  078D  00D1               	movwf	??___aldiv^(0+128)
  3091  078E                     u2875:	
  3092  078E  1003               	clrc
  3093  078F  0DC9               	rlf	___aldiv@divisor^(0+128),f
  3094  0790  0DCA               	rlf	(___aldiv@divisor+1)^(0+128),f
  3095  0791  0DCB               	rlf	(___aldiv@divisor+2)^(0+128),f
  3096  0792  0DCC               	rlf	(___aldiv@divisor+3)^(0+128),f
  3097  0793  0BD1               	decfsz	??___aldiv^(0+128),f
  3098  0794  2F8E               	goto	u2875
  3099  0795  3001               	movlw	1
  3100  0796  00D1               	movwf	??___aldiv^(0+128)
  3101  0797  0851               	movf	??___aldiv^(0+128),w
  3102  0798  07D2               	addwf	___aldiv@counter^(0+128),f
  3103  0799  2F8A               	goto	l2541
  3104  079A                     l2543:	
  3105  079A  3001               	movlw	1
  3106  079B  00D1               	movwf	??___aldiv^(0+128)
  3107  079C                     u2895:	
  3108  079C  1003               	clrc
  3109  079D  0DD4               	rlf	___aldiv@quotient^(0+128),f
  3110  079E  0DD5               	rlf	(___aldiv@quotient+1)^(0+128),f
  3111  079F  0DD6               	rlf	(___aldiv@quotient+2)^(0+128),f
  3112  07A0  0DD7               	rlf	(___aldiv@quotient+3)^(0+128),f
  3113  07A1  0BD1               	decfsz	??___aldiv^(0+128),f
  3114  07A2  2F9C               	goto	u2895
  3115  07A3  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3116  07A4  0250               	subwf	(___aldiv@dividend+3)^(0+128),w
  3117  07A5  1D03               	skipz
  3118  07A6  2FB1               	goto	u2905
  3119  07A7  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  3120  07A8  024F               	subwf	(___aldiv@dividend+2)^(0+128),w
  3121  07A9  1D03               	skipz
  3122  07AA  2FB1               	goto	u2905
  3123  07AB  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  3124  07AC  024E               	subwf	(___aldiv@dividend+1)^(0+128),w
  3125  07AD  1D03               	skipz
  3126  07AE  2FB1               	goto	u2905
  3127  07AF  0849               	movf	___aldiv@divisor^(0+128),w
  3128  07B0  024D               	subwf	___aldiv@dividend^(0+128),w
  3129  07B1                     u2905:	
  3130  07B1  1C03               	skipc
  3131  07B2  2FC2               	goto	l2551
  3132  07B3  0849               	movf	___aldiv@divisor^(0+128),w
  3133  07B4  02CD               	subwf	___aldiv@dividend^(0+128),f
  3134  07B5  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  3135  07B6  1C03               	skipc
  3136  07B7  0F4A               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3137  07B8  02CE               	subwf	(___aldiv@dividend+1)^(0+128),f
  3138  07B9  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  3139  07BA  1C03               	skipc
  3140  07BB  0F4B               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3141  07BC  02CF               	subwf	(___aldiv@dividend+2)^(0+128),f
  3142  07BD  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3143  07BE  1C03               	skipc
  3144  07BF  0F4C               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3145  07C0  02D0               	subwf	(___aldiv@dividend+3)^(0+128),f
  3146  07C1  1454               	bsf	___aldiv@quotient^(0+128),0
  3147  07C2                     l2551:	
  3148  07C2  3001               	movlw	1
  3149  07C3                     u2915:	
  3150  07C3  1003               	clrc
  3151  07C4  0CCC               	rrf	(___aldiv@divisor+3)^(0+128),f
  3152  07C5  0CCB               	rrf	(___aldiv@divisor+2)^(0+128),f
  3153  07C6  0CCA               	rrf	(___aldiv@divisor+1)^(0+128),f
  3154  07C7  0CC9               	rrf	___aldiv@divisor^(0+128),f
  3155  07C8  3EFF               	addlw	-1
  3156  07C9  1D03               	skipz
  3157  07CA  2FC3               	goto	u2915
  3158  07CB  3001               	movlw	1
  3159  07CC  02D2               	subwf	___aldiv@counter^(0+128),f
  3160  07CD  1D03               	btfss	3,2
  3161  07CE  2F9A               	goto	l2543
  3162  07CF                     l2555:	
  3163  07CF  0853               	movf	___aldiv@sign^(0+128),w
  3164  07D0  1903               	btfsc	3,2
  3165  07D1  2FDD               	goto	l2559
  3166  07D2  09D4               	comf	___aldiv@quotient^(0+128),f
  3167  07D3  09D5               	comf	(___aldiv@quotient+1)^(0+128),f
  3168  07D4  09D6               	comf	(___aldiv@quotient+2)^(0+128),f
  3169  07D5  09D7               	comf	(___aldiv@quotient+3)^(0+128),f
  3170  07D6  0AD4               	incf	___aldiv@quotient^(0+128),f
  3171  07D7  1903               	skipnz
  3172  07D8  0AD5               	incf	(___aldiv@quotient+1)^(0+128),f
  3173  07D9  1903               	skipnz
  3174  07DA  0AD6               	incf	(___aldiv@quotient+2)^(0+128),f
  3175  07DB  1903               	skipnz
  3176  07DC  0AD7               	incf	(___aldiv@quotient+3)^(0+128),f
  3177  07DD                     l2559:	
  3178  07DD  0857               	movf	(___aldiv@quotient+3)^(0+128),w
  3179  07DE  00CC               	movwf	(?___aldiv+3)^(0+128)
  3180  07DF  0856               	movf	(___aldiv@quotient+2)^(0+128),w
  3181  07E0  00CB               	movwf	(?___aldiv+2)^(0+128)
  3182  07E1  0855               	movf	(___aldiv@quotient+1)^(0+128),w
  3183  07E2  00CA               	movwf	(?___aldiv+1)^(0+128)
  3184  07E3  0854               	movf	___aldiv@quotient^(0+128),w
  3185  07E4  00C9               	movwf	?___aldiv^(0+128)
  3186  07E5  0008               	return
  3187  07E6                     __end_of___aldiv:	
  3188                           
  3189                           	psect	text8
  3190  120F                     __ptext8:	
  3191 ;; *************** function _TIMER0_Set *****************
  3192 ;; Defined at:
  3193 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  contagens       1    wreg     unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  contagens       1    0[BANK1 ] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;		None               void
  3200 ;; Registers used:
  3201 ;;		wreg
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       0       0       0       0
  3208 ;;      Locals:         0       0       1       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         0       0       1       0       0
  3211 ;;Total ram usage:        1 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    5
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _TIMER0_Set
  3223  120F                     _TIMER0_Set:	
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _TIMER0_Set: [wreg]
  3227                           ;TIMER0_Set@contagens stored from wreg
  3228  120F  1683               	bsf	3,5	;RP0=1, select bank1
  3229  1210  1303               	bcf	3,6	;RP1=0, select bank1
  3230  1211  00C9               	movwf	TIMER0_Set@contagens^(0+128)
  3231                           
  3232                           ;timers.c: 22: TMR0 = contagens;
  3233  1212  0849               	movf	TIMER0_Set@contagens^(0+128),w
  3234  1213  1283               	bcf	3,5	;RP0=0, select bank0
  3235  1214  1303               	bcf	3,6	;RP1=0, select bank0
  3236  1215  0081               	movwf	1	;volatile
  3237  1216  0008               	return
  3238  1217                     __end_of_TIMER0_Set:	
  3239                           
  3240                           	psect	text9
  3241  1229                     __ptext9:	
  3242 ;; *************** function _TIMER0_Init *****************
  3243 ;; Defined at:
  3244 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;		None               void
  3251 ;; Registers used:
  3252 ;;		None
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0
  3261 ;;      Totals:         0       0       0       0       0
  3262 ;;Total ram usage:        0 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    5
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function _TIMER0_Init
  3274  1229                     _TIMER0_Init:	
  3275                           
  3276                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in _TIMER0_Init: []
  3280  1229  1683               	bsf	3,5	;RP0=1, select bank1
  3281  122A  1303               	bcf	3,6	;RP1=0, select bank1
  3282  122B  1281               	bcf	1,5	;volatile
  3283                           
  3284                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3285  122C  1201               	bcf	1,4	;volatile
  3286                           
  3287                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3288  122D  1181               	bcf	1,3	;volatile
  3289                           
  3290                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3291  122E  1501               	bsf	1,2	;volatile
  3292                           
  3293                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3294  122F  1481               	bsf	1,1	;volatile
  3295                           
  3296                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3297  1230  1401               	bsf	1,0	;volatile
  3298                           
  3299                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3300  1231  110B               	bcf	11,2	;volatile
  3301                           
  3302                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3303  1232  168B               	bsf	11,5	;volatile
  3304  1233  0008               	return
  3305  1234                     __end_of_TIMER0_Init:	
  3306                           
  3307                           	psect	text10
  3308  135B                     __ptext10:	
  3309 ;; *************** function _PWM_Init *****************
  3310 ;; Defined at:
  3311 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;		None               void
  3318 ;; Registers used:
  3319 ;;		wreg
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    5
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function _PWM_Init
  3341  135B                     _PWM_Init:	
  3342                           
  3343                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3344                           
  3345                           ;incstack = 0
  3346                           ; Regs used in _PWM_Init: [wreg]
  3347  135B  1283               	bcf	3,5	;RP0=0, select bank0
  3348  135C  1303               	bcf	3,6	;RP1=0, select bank0
  3349  135D  1492               	bsf	18,1	;volatile
  3350                           
  3351                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3352  135E  1012               	bcf	18,0	;volatile
  3353                           
  3354                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3355  135F  1312               	bcf	18,6	;volatile
  3356                           
  3357                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3358  1360  1292               	bcf	18,5	;volatile
  3359                           
  3360                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3361  1361  1212               	bcf	18,4	;volatile
  3362                           
  3363                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3364  1362  1192               	bcf	18,3	;volatile
  3365                           
  3366                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3367  1363  1512               	bsf	18,2	;volatile
  3368                           
  3369                           ;pwm.c: 27: PR2 = 255;
  3370  1364  30FF               	movlw	255
  3371  1365  1683               	bsf	3,5	;RP0=1, select bank1
  3372  1366  1303               	bcf	3,6	;RP1=0, select bank1
  3373  1367  0092               	movwf	18	;volatile
  3374                           
  3375                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3376  1368  1283               	bcf	3,5	;RP0=0, select bank0
  3377  1369  1303               	bcf	3,6	;RP1=0, select bank0
  3378  136A  1597               	bsf	23,3	;volatile
  3379                           
  3380                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3381  136B  1517               	bsf	23,2	;volatile
  3382                           
  3383                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3384  136C  1497               	bsf	23,1	;volatile
  3385                           
  3386                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3387  136D  1417               	bsf	23,0	;volatile
  3388                           
  3389                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3390  136E  1683               	bsf	3,5	;RP0=1, select bank1
  3391  136F  1303               	bcf	3,6	;RP1=0, select bank1
  3392  1370  150C               	bsf	12,2	;volatile
  3393                           
  3394                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3395  1371  1283               	bcf	3,5	;RP0=0, select bank0
  3396  1372  1303               	bcf	3,6	;RP1=0, select bank0
  3397  1373  110C               	bcf	12,2	;volatile
  3398                           
  3399                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3400  1374  159D               	bsf	29,3	;volatile
  3401                           
  3402                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3403  1375  151D               	bsf	29,2	;volatile
  3404                           
  3405                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3406  1376  149D               	bsf	29,1	;volatile
  3407                           
  3408                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3409  1377  141D               	bsf	29,0	;volatile
  3410                           
  3411                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3412  1378  1683               	bsf	3,5	;RP0=1, select bank1
  3413  1379  1303               	bcf	3,6	;RP1=0, select bank1
  3414  137A  140D               	bsf	13,0	;volatile
  3415                           
  3416                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3417  137B  1283               	bcf	3,5	;RP0=0, select bank0
  3418  137C  1303               	bcf	3,6	;RP1=0, select bank0
  3419  137D  100D               	bcf	13,0	;volatile
  3420  137E  0008               	return
  3421  137F                     __end_of_PWM_Init:	
  3422                           
  3423                           	psect	text11
  3424  1317                     __ptext11:	
  3425 ;; *************** function _PWM_DutyCycle2 *****************
  3426 ;; Defined at:
  3427 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  valor           2    0[BANK1 ] int 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;		None               void
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3441 ;;      Params:         0       0       2       0       0
  3442 ;;      Locals:         0       0       0       0       0
  3443 ;;      Temps:          0       0       2       0       0
  3444 ;;      Totals:         0       0       4       0       0
  3445 ;;Total ram usage:        4 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    5
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function _PWM_DutyCycle2
  3457  1317                     _PWM_DutyCycle2:	
  3458                           
  3459                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3460                           
  3461                           ;incstack = 0
  3462                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3463  1317  1683               	bsf	3,5	;RP0=1, select bank1
  3464  1318  1303               	bcf	3,6	;RP1=0, select bank1
  3465  1319  084A               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3466  131A  00CC               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3467  131B  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  3468  131C  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  3469  131D  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3470  131E  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3471  131F  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  3472  1320  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3473  1321  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3474  1322  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  3475  1323  084B               	movf	??_PWM_DutyCycle2^(0+128),w
  3476  1324  1283               	bcf	3,5	;RP0=0, select bank0
  3477  1325  1303               	bcf	3,6	;RP1=0, select bank0
  3478  1326  009B               	movwf	27	;volatile
  3479                           
  3480                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3481  1327  1683               	bsf	3,5	;RP0=1, select bank1
  3482  1328  1303               	bcf	3,6	;RP1=0, select bank1
  3483  1329  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  3484  132A  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  3485  132B  3003               	movlw	3
  3486  132C                     u3575:	
  3487  132C  1003               	clrc
  3488  132D  0DCB               	rlf	??_PWM_DutyCycle2^(0+128),f
  3489  132E  3EFF               	addlw	-1
  3490  132F  1D03               	skipz
  3491  1330  2B2C               	goto	u3575
  3492  1331  1003               	clrc
  3493  1332  0D4B               	rlf	??_PWM_DutyCycle2^(0+128),w
  3494  1333  380C               	iorlw	12
  3495  1334  1283               	bcf	3,5	;RP0=0, select bank0
  3496  1335  1303               	bcf	3,6	;RP1=0, select bank0
  3497  1336  009D               	movwf	29	;volatile
  3498  1337  0008               	return
  3499  1338                     __end_of_PWM_DutyCycle2:	
  3500                           
  3501                           	psect	text12
  3502  12F6                     __ptext12:	
  3503 ;; *************** function _PWM_DutyCycle1 *****************
  3504 ;; Defined at:
  3505 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  valor           2    0[BANK1 ] int 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;		None               void
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3519 ;;      Params:         0       0       2       0       0
  3520 ;;      Locals:         0       0       0       0       0
  3521 ;;      Temps:          0       0       2       0       0
  3522 ;;      Totals:         0       0       4       0       0
  3523 ;;Total ram usage:        4 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    5
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_main
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           
  3534                           ;psect for function _PWM_DutyCycle1
  3535  12F6                     _PWM_DutyCycle1:	
  3536                           
  3537                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3538                           
  3539                           ;incstack = 0
  3540                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3541  12F6  1683               	bsf	3,5	;RP0=1, select bank1
  3542  12F7  1303               	bcf	3,6	;RP1=0, select bank1
  3543  12F8  084A               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  3544  12F9  00CC               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  3545  12FA  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  3546  12FB  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  3547  12FC  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3548  12FD  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3549  12FE  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  3550  12FF  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3551  1300  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3552  1301  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  3553  1302  084B               	movf	??_PWM_DutyCycle1^(0+128),w
  3554  1303  1283               	bcf	3,5	;RP0=0, select bank0
  3555  1304  1303               	bcf	3,6	;RP1=0, select bank0
  3556  1305  0095               	movwf	21	;volatile
  3557                           
  3558                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3559  1306  1683               	bsf	3,5	;RP0=1, select bank1
  3560  1307  1303               	bcf	3,6	;RP1=0, select bank1
  3561  1308  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  3562  1309  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  3563  130A  3003               	movlw	3
  3564  130B                     u3625:	
  3565  130B  1003               	clrc
  3566  130C  0DCB               	rlf	??_PWM_DutyCycle1^(0+128),f
  3567  130D  3EFF               	addlw	-1
  3568  130E  1D03               	skipz
  3569  130F  2B0B               	goto	u3625
  3570  1310  1003               	clrc
  3571  1311  0D4B               	rlf	??_PWM_DutyCycle1^(0+128),w
  3572  1312  380C               	iorlw	12
  3573  1313  1283               	bcf	3,5	;RP0=0, select bank0
  3574  1314  1303               	bcf	3,6	;RP1=0, select bank0
  3575  1315  0097               	movwf	23	;volatile
  3576  1316  0008               	return
  3577  1317                     __end_of_PWM_DutyCycle1:	
  3578                           
  3579                           	psect	text13
  3580  13CD                     __ptext13:	
  3581 ;; *************** function _LCD_WriteString *****************
  3582 ;; Defined at:
  3583 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  3586 ;;		 -> STR_4(6), display_rpm(10), STR_2(17), 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;		None               void
  3591 ;; Registers used:
  3592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         0       0       2       0       0
  3599 ;;      Locals:         0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0
  3601 ;;      Totals:         0       0       2       0       0
  3602 ;;Total ram usage:        2 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    6
  3605 ;; This function calls:
  3606 ;;		_LCD_WriteData
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function _LCD_WriteString
  3614  13CD                     _LCD_WriteString:	
  3615  13CD                     l3019:	
  3616                           ;lcd.c: 63: while(*Str != '\0')
  3617                           
  3618                           ;incstack = 0
  3619                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3620                           
  3621  13CD  1683               	bsf	3,5	;RP0=1, select bank1
  3622  13CE  1303               	bcf	3,6	;RP1=0, select bank1
  3623  13CF  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3624  13D0  1283               	bcf	3,5	;RP0=0, select bank0
  3625  13D1  1303               	bcf	3,6	;RP1=0, select bank0
  3626  13D2  00FF               	movwf	127
  3627  13D3  1683               	bsf	3,5	;RP0=1, select bank1
  3628  13D4  1303               	bcf	3,6	;RP1=0, select bank1
  3629  13D5  084B               	movf	LCD_WriteString@Str^(0+128),w
  3630  13D6  0084               	movwf	4
  3631  13D7  1283               	bcf	3,5	;RP0=0, select bank0
  3632  13D8  1303               	bcf	3,6	;RP1=0, select bank0
  3633  13D9  160A  118A  2000  160A  118A  	fcall	stringtab
  3634  13DE  3800               	iorlw	0
  3635  13DF  1903               	btfsc	3,2
  3636  13E0  0008               	return
  3637                           
  3638                           ;lcd.c: 64: {
  3639                           ;lcd.c: 65: LCD_WriteData(*Str);
  3640  13E1  1683               	bsf	3,5	;RP0=1, select bank1
  3641  13E2  1303               	bcf	3,6	;RP1=0, select bank1
  3642  13E3  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3643  13E4  1283               	bcf	3,5	;RP0=0, select bank0
  3644  13E5  1303               	bcf	3,6	;RP1=0, select bank0
  3645  13E6  00FF               	movwf	127
  3646  13E7  1683               	bsf	3,5	;RP0=1, select bank1
  3647  13E8  1303               	bcf	3,6	;RP1=0, select bank1
  3648  13E9  084B               	movf	LCD_WriteString@Str^(0+128),w
  3649  13EA  0084               	movwf	4
  3650  13EB  1283               	bcf	3,5	;RP0=0, select bank0
  3651  13EC  1303               	bcf	3,6	;RP1=0, select bank0
  3652  13ED  160A  118A  2000  160A  118A  	fcall	stringtab
  3653  13F2  120A  158A  2001  160A  118A  	fcall	_LCD_WriteData
  3654                           
  3655                           ;lcd.c: 66: Str++;
  3656  13F7  3001               	movlw	1
  3657  13F8  1683               	bsf	3,5	;RP0=1, select bank1
  3658  13F9  1303               	bcf	3,6	;RP1=0, select bank1
  3659  13FA  07CB               	addwf	LCD_WriteString@Str^(0+128),f
  3660  13FB  1803               	skipnc
  3661  13FC  0ACC               	incf	(LCD_WriteString@Str+1)^(0+128),f
  3662  13FD  2BCD               	goto	l3019
  3663  13FE                     __end_of_LCD_WriteString:	
  3664                           
  3665                           	psect	text14
  3666  0801                     __ptext14:	
  3667 ;; *************** function _LCD_WriteData *****************
  3668 ;; Defined at:
  3669 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  Byte            1    wreg     unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  Byte            1    1[BANK1 ] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;		None               void
  3676 ;; Registers used:
  3677 ;;		wreg
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       0       0       0       0
  3684 ;;      Locals:         0       0       1       0       0
  3685 ;;      Temps:          0       0       1       0       0
  3686 ;;      Totals:         0       0       2       0       0
  3687 ;;Total ram usage:        2 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    5
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_LCD_WriteString
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _LCD_WriteData
  3699  0801                     _LCD_WriteData:	
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _LCD_WriteData: [wreg]
  3703                           ;LCD_WriteData@Byte stored from wreg
  3704  0801  1683               	bsf	3,5	;RP0=1, select bank1
  3705  0802  1303               	bcf	3,6	;RP1=0, select bank1
  3706  0803  00CA               	movwf	LCD_WriteData@Byte^(0+128)
  3707                           
  3708                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  3709  0804  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0805  1303               	bcf	3,6	;RP1=0, select bank0
  3711  0806  1409               	bsf	9,0	;volatile
  3712                           
  3713                           ;lcd.c: 51: PORTD = Byte;
  3714  0807  1683               	bsf	3,5	;RP0=1, select bank1
  3715  0808  1303               	bcf	3,6	;RP1=0, select bank1
  3716  0809  084A               	movf	LCD_WriteData@Byte^(0+128),w
  3717  080A  1283               	bcf	3,5	;RP0=0, select bank0
  3718  080B  1303               	bcf	3,6	;RP1=0, select bank0
  3719  080C  0088               	movwf	8	;volatile
  3720                           
  3721                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  3722  080D  1489               	bsf	9,1	;volatile
  3723                           
  3724                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3725  080E  303D               	movlw	61
  3726  080F  1683               	bsf	3,5	;RP0=1, select bank1
  3727  0810  1303               	bcf	3,6	;RP1=0, select bank1
  3728  0811  00C9               	movwf	??_LCD_WriteData^(0+128)
  3729  0812                     u4127:	
  3730  0812  0BC9               	decfsz	??_LCD_WriteData^(0+128),f
  3731  0813  2812               	goto	u4127
  3732                           
  3733                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  3734  0814  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0815  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0816  1089               	bcf	9,1	;volatile
  3737  0817  0008               	return
  3738  0818                     __end_of_LCD_WriteData:	
  3739                           
  3740                           	psect	text15
  3741  160C                     __ptext15:	
  3742 ;; *************** function _LCD_Init *****************
  3743 ;; Defined at:
  3744 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;		None               void
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0
  3760 ;;      Temps:          0       0       2       0       0
  3761 ;;      Totals:         0       0       2       0       0
  3762 ;;Total ram usage:        2 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    6
  3765 ;; This function calls:
  3766 ;;		_LCD_WriteCmd
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           
  3773                           ;psect for function _LCD_Init
  3774  160C                     _LCD_Init:	
  3775                           
  3776                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3780  160C  1683               	bsf	3,5	;RP0=1, select bank1
  3781  160D  1303               	bcf	3,6	;RP1=0, select bank1
  3782  160E  119F               	bcf	31,3	;volatile
  3783                           
  3784                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  3785  160F  151F               	bsf	31,2	;volatile
  3786                           
  3787                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  3788  1610  109F               	bcf	31,1	;volatile
  3789                           
  3790                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  3791  1611  101F               	bcf	31,0	;volatile
  3792                           
  3793                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  3794  1612  305A               	movlw	90
  3795  1613  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  3796  1614  30C3               	movlw	195
  3797  1615  00CB               	movwf	??_LCD_Init^(0+128)
  3798  1616                     u4137:	
  3799  1616  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3800  1617  2E16               	goto	u4137
  3801  1618  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  3802  1619  2E16               	goto	u4137
  3803                           
  3804                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  3805  161A  3030               	movlw	48
  3806  161B  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3807                           
  3808                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  3809  1620  3018               	movlw	24
  3810  1621  1683               	bsf	3,5	;RP0=1, select bank1
  3811  1622  1303               	bcf	3,6	;RP1=0, select bank1
  3812  1623  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  3813  1624  30EF               	movlw	239
  3814  1625  00CB               	movwf	??_LCD_Init^(0+128)
  3815  1626                     u4147:	
  3816  1626  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3817  1627  2E26               	goto	u4147
  3818  1628  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  3819  1629  2E26               	goto	u4147
  3820                           
  3821                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  3822  162A  3030               	movlw	48
  3823  162B  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3824                           
  3825                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  3826  1630  3099               	movlw	153
  3827  1631  1683               	bsf	3,5	;RP0=1, select bank1
  3828  1632  1303               	bcf	3,6	;RP1=0, select bank1
  3829  1633  00CB               	movwf	??_LCD_Init^(0+128)
  3830  1634                     u4157:	
  3831  1634  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3832  1635  2E34               	goto	u4157
  3833                           
  3834                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  3835  1636  3030               	movlw	48
  3836  1637  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3837                           
  3838                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3839  163C  303D               	movlw	61
  3840  163D  1683               	bsf	3,5	;RP0=1, select bank1
  3841  163E  1303               	bcf	3,6	;RP1=0, select bank1
  3842  163F  00CB               	movwf	??_LCD_Init^(0+128)
  3843  1640                     u4167:	
  3844  1640  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3845  1641  2E40               	goto	u4167
  3846                           
  3847                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  3848  1642  3038               	movlw	56
  3849  1643  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3850                           
  3851                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3852  1648  303D               	movlw	61
  3853  1649  1683               	bsf	3,5	;RP0=1, select bank1
  3854  164A  1303               	bcf	3,6	;RP1=0, select bank1
  3855  164B  00CB               	movwf	??_LCD_Init^(0+128)
  3856  164C                     u4177:	
  3857  164C  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3858  164D  2E4C               	goto	u4177
  3859                           
  3860                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  3861  164E  3001               	movlw	1
  3862  164F  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3863                           
  3864                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  3865  1654  300C               	movlw	12
  3866  1655  1683               	bsf	3,5	;RP0=1, select bank1
  3867  1656  1303               	bcf	3,6	;RP1=0, select bank1
  3868  1657  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  3869  1658  30F7               	movlw	247
  3870  1659  00CB               	movwf	??_LCD_Init^(0+128)
  3871  165A                     u4187:	
  3872  165A  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3873  165B  2E5A               	goto	u4187
  3874  165C  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  3875  165D  2E5A               	goto	u4187
  3876                           
  3877                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  3878  165E  300C               	movlw	12
  3879  165F  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3880                           
  3881                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3882  1664  303D               	movlw	61
  3883  1665  1683               	bsf	3,5	;RP0=1, select bank1
  3884  1666  1303               	bcf	3,6	;RP1=0, select bank1
  3885  1667  00CB               	movwf	??_LCD_Init^(0+128)
  3886  1668                     u4197:	
  3887  1668  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3888  1669  2E68               	goto	u4197
  3889                           
  3890                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  3891  166A  3006               	movlw	6
  3892  166B  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  3893                           
  3894                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3895  1670  303D               	movlw	61
  3896  1671  1683               	bsf	3,5	;RP0=1, select bank1
  3897  1672  1303               	bcf	3,6	;RP1=0, select bank1
  3898  1673  00CB               	movwf	??_LCD_Init^(0+128)
  3899  1674                     u4207:	
  3900  1674  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3901  1675  2E74               	goto	u4207
  3902  1676  0008               	return
  3903  1677                     __end_of_LCD_Init:	
  3904                           
  3905                           	psect	text16
  3906  12D6                     __ptext16:	
  3907 ;; *************** function _LCD_Cursor *****************
  3908 ;; Defined at:
  3909 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  Row             1    wreg     unsigned char 
  3912 ;;  Col             1    0[BANK1 ] unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  Row             1    2[BANK1 ] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;		None               void
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         0       0       1       0       0
  3925 ;;      Locals:         0       0       1       0       0
  3926 ;;      Temps:          0       0       1       0       0
  3927 ;;      Totals:         0       0       3       0       0
  3928 ;;Total ram usage:        3 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    5
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _LCD_Cursor
  3940  12D6                     _LCD_Cursor:	
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  3944                           ;LCD_Cursor@Row stored from wreg
  3945  12D6  1683               	bsf	3,5	;RP0=1, select bank1
  3946  12D7  1303               	bcf	3,6	;RP1=0, select bank1
  3947  12D8  00CB               	movwf	LCD_Cursor@Row^(0+128)
  3948                           
  3949                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  3950  12D9  1283               	bcf	3,5	;RP0=0, select bank0
  3951  12DA  1303               	bcf	3,6	;RP1=0, select bank0
  3952  12DB  1009               	bcf	9,0	;volatile
  3953                           
  3954                           ;lcd.c: 14: if (Row == 0)
  3955  12DC  1683               	bsf	3,5	;RP0=1, select bank1
  3956  12DD  1303               	bcf	3,6	;RP1=0, select bank1
  3957  12DE  08CB               	movf	LCD_Cursor@Row^(0+128),f
  3958  12DF  1D03               	skipz
  3959  12E0  2AE4               	goto	l3005
  3960                           
  3961                           ;lcd.c: 15: {
  3962                           ;lcd.c: 16: PORTD = 0x80 + Col;
  3963  12E1  0849               	movf	LCD_Cursor@Col^(0+128),w
  3964  12E2  3E80               	addlw	128
  3965  12E3  2AE8               	goto	L2
  3966  12E4                     l3005:	
  3967                           ;lcd.c: 17: }
  3968                           
  3969                           
  3970                           ;lcd.c: 18: else
  3971                           ;lcd.c: 19: {
  3972                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  3973  12E4  1683               	bsf	3,5	;RP0=1, select bank1
  3974  12E5  1303               	bcf	3,6	;RP1=0, select bank1
  3975  12E6  0849               	movf	LCD_Cursor@Col^(0+128),w
  3976  12E7  3EC0               	addlw	192
  3977  12E8                     L2:	
  3978  12E8  1283               	bcf	3,5	;RP0=0, select bank0
  3979  12E9  1303               	bcf	3,6	;RP1=0, select bank0
  3980  12EA  0088               	movwf	8	;volatile
  3981                           
  3982                           ;lcd.c: 21: }
  3983                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  3984  12EB  1489               	bsf	9,1	;volatile
  3985                           
  3986                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3987  12EC  303D               	movlw	61
  3988  12ED  1683               	bsf	3,5	;RP0=1, select bank1
  3989  12EE  1303               	bcf	3,6	;RP1=0, select bank1
  3990  12EF  00CA               	movwf	??_LCD_Cursor^(0+128)
  3991  12F0                     u4217:	
  3992  12F0  0BCA               	decfsz	??_LCD_Cursor^(0+128),f
  3993  12F1  2AF0               	goto	u4217
  3994                           
  3995                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  3996  12F2  1283               	bcf	3,5	;RP0=0, select bank0
  3997  12F3  1303               	bcf	3,6	;RP1=0, select bank0
  3998  12F4  1089               	bcf	9,1	;volatile
  3999  12F5  0008               	return
  4000  12F6                     __end_of_LCD_Cursor:	
  4001                           
  4002                           	psect	text17
  4003  13A4                     __ptext17:	
  4004 ;; *************** function _LCD_Clear *****************
  4005 ;; Defined at:
  4006 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;		None               void
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0, pclath, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4020 ;;      Params:         0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0
  4022 ;;      Temps:          0       0       2       0       0
  4023 ;;      Totals:         0       0       2       0       0
  4024 ;;Total ram usage:        2 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    6
  4027 ;; This function calls:
  4028 ;;		_LCD_WriteCmd
  4029 ;; This function is called by:
  4030 ;;		_main
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           
  4035                           ;psect for function _LCD_Clear
  4036  13A4                     _LCD_Clear:	
  4037                           
  4038                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4039                           
  4040                           ;incstack = 0
  4041                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4042  13A4  3001               	movlw	1
  4043  13A5  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  4044                           
  4045                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4046  13AA  300C               	movlw	12
  4047  13AB  1683               	bsf	3,5	;RP0=1, select bank1
  4048  13AC  1303               	bcf	3,6	;RP1=0, select bank1
  4049  13AD  00CC               	movwf	(??_LCD_Clear^(0+128)+1)
  4050  13AE  30F7               	movlw	247
  4051  13AF  00CB               	movwf	??_LCD_Clear^(0+128)
  4052  13B0                     u4227:	
  4053  13B0  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4054  13B1  2BB0               	goto	u4227
  4055  13B2  0BCC               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4056  13B3  2BB0               	goto	u4227
  4057                           
  4058                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4059  13B4  300C               	movlw	12
  4060  13B5  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  4061                           
  4062                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4063  13BA  303D               	movlw	61
  4064  13BB  1683               	bsf	3,5	;RP0=1, select bank1
  4065  13BC  1303               	bcf	3,6	;RP1=0, select bank1
  4066  13BD  00CB               	movwf	??_LCD_Clear^(0+128)
  4067  13BE                     u4237:	
  4068  13BE  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4069  13BF  2BBE               	goto	u4237
  4070                           
  4071                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4072  13C0  3006               	movlw	6
  4073  13C1  160A  118A  226A  160A  118A  	fcall	_LCD_WriteCmd
  4074                           
  4075                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4076  13C6  303D               	movlw	61
  4077  13C7  1683               	bsf	3,5	;RP0=1, select bank1
  4078  13C8  1303               	bcf	3,6	;RP1=0, select bank1
  4079  13C9  00CB               	movwf	??_LCD_Clear^(0+128)
  4080  13CA                     u4247:	
  4081  13CA  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4082  13CB  2BCA               	goto	u4247
  4083  13CC  0008               	return
  4084  13CD                     __end_of_LCD_Clear:	
  4085                           
  4086                           	psect	text18
  4087  126A                     __ptext18:	
  4088 ;; *************** function _LCD_WriteCmd *****************
  4089 ;; Defined at:
  4090 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  Byte            1    wreg     unsigned char 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  Byte            1    1[BANK1 ] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;		None               void
  4097 ;; Registers used:
  4098 ;;		wreg
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       0       0       0       0
  4105 ;;      Locals:         0       0       1       0       0
  4106 ;;      Temps:          0       0       1       0       0
  4107 ;;      Totals:         0       0       2       0       0
  4108 ;;Total ram usage:        2 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    5
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_LCD_Clear
  4115 ;;		_LCD_Init
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function _LCD_WriteCmd
  4121  126A                     _LCD_WriteCmd:	
  4122                           
  4123                           ;incstack = 0
  4124                           ; Regs used in _LCD_WriteCmd: [wreg]
  4125                           ;LCD_WriteCmd@Byte stored from wreg
  4126  126A  1683               	bsf	3,5	;RP0=1, select bank1
  4127  126B  1303               	bcf	3,6	;RP1=0, select bank1
  4128  126C  00CA               	movwf	LCD_WriteCmd@Byte^(0+128)
  4129                           
  4130                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4131  126D  1283               	bcf	3,5	;RP0=0, select bank0
  4132  126E  1303               	bcf	3,6	;RP1=0, select bank0
  4133  126F  1009               	bcf	9,0	;volatile
  4134                           
  4135                           ;lcd.c: 36: PORTD = Byte;
  4136  1270  1683               	bsf	3,5	;RP0=1, select bank1
  4137  1271  1303               	bcf	3,6	;RP1=0, select bank1
  4138  1272  084A               	movf	LCD_WriteCmd@Byte^(0+128),w
  4139  1273  1283               	bcf	3,5	;RP0=0, select bank0
  4140  1274  1303               	bcf	3,6	;RP1=0, select bank0
  4141  1275  0088               	movwf	8	;volatile
  4142                           
  4143                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4144  1276  1489               	bsf	9,1	;volatile
  4145                           
  4146                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4147  1277  303D               	movlw	61
  4148  1278  1683               	bsf	3,5	;RP0=1, select bank1
  4149  1279  1303               	bcf	3,6	;RP1=0, select bank1
  4150  127A  00C9               	movwf	??_LCD_WriteCmd^(0+128)
  4151  127B                     u4257:	
  4152  127B  0BC9               	decfsz	??_LCD_WriteCmd^(0+128),f
  4153  127C  2A7B               	goto	u4257
  4154                           
  4155                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4156  127D  1283               	bcf	3,5	;RP0=0, select bank0
  4157  127E  1303               	bcf	3,6	;RP1=0, select bank0
  4158  127F  1089               	bcf	9,1	;volatile
  4159  1280  0008               	return
  4160  1281                     __end_of_LCD_WriteCmd:	
  4161                           
  4162                           	psect	text19
  4163  1244                     __ptext19:	
  4164 ;; *************** function _ADC_Init *****************
  4165 ;; Defined at:
  4166 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;		None
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;		None               void
  4173 ;; Registers used:
  4174 ;;		None
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4180 ;;      Params:         0       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0
  4183 ;;      Totals:         0       0       0       0       0
  4184 ;;Total ram usage:        0 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    5
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _ADC_Init
  4196  1244                     _ADC_Init:	
  4197                           
  4198                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4199                           
  4200                           ;incstack = 0
  4201                           ; Regs used in _ADC_Init: []
  4202  1244  1683               	bsf	3,5	;RP0=1, select bank1
  4203  1245  1303               	bcf	3,6	;RP1=0, select bank1
  4204  1246  179F               	bsf	31,7	;volatile
  4205                           
  4206                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4207  1247  159F               	bsf	31,3	;volatile
  4208                           
  4209                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4210  1248  151F               	bsf	31,2	;volatile
  4211                           
  4212                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4213  1249  149F               	bsf	31,1	;volatile
  4214                           
  4215                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4216  124A  101F               	bcf	31,0	;volatile
  4217                           
  4218                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4219  124B  1283               	bcf	3,5	;RP0=0, select bank0
  4220  124C  1303               	bcf	3,6	;RP1=0, select bank0
  4221  124D  179F               	bsf	31,7	;volatile
  4222                           
  4223                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4224  124E  131F               	bcf	31,6	;volatile
  4225                           
  4226                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4227  124F  1683               	bsf	3,5	;RP0=1, select bank1
  4228  1250  1303               	bcf	3,6	;RP1=0, select bank1
  4229  1251  130C               	bcf	12,6	;volatile
  4230                           
  4231                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4232  1252  1283               	bcf	3,5	;RP0=0, select bank0
  4233  1253  1303               	bcf	3,6	;RP1=0, select bank0
  4234  1254  130C               	bcf	12,6	;volatile
  4235  1255  0008               	return
  4236  1256                     __end_of_ADC_Init:	
  4237                           
  4238                           	psect	text20
  4239  0BBF                     __ptext20:	
  4240 ;; *************** function _ISR *****************
  4241 ;; Defined at:
  4242 ;;		line 348 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;		None               void
  4249 ;; Registers used:
  4250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0
  4258 ;;      Temps:          0       4       0       0       0
  4259 ;;      Totals:         0       4       0       0       0
  4260 ;;Total ram usage:        4 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    4
  4263 ;; This function calls:
  4264 ;;		_Fuzzy
  4265 ;;		_USART_ReceiveChar
  4266 ;;		_USART_WriteString
  4267 ;;		___lwtoft
  4268 ;;		_send
  4269 ;;		i1_PWM_DutyCycle2
  4270 ;;		i1_TIMER0_Set
  4271 ;;		i1___lwdiv
  4272 ;;		i1___wmul
  4273 ;; This function is called by:
  4274 ;;		Interrupt level 1
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function _ISR
  4280  0BBF                     _ISR:	
  4281                           
  4282                           ;main.c: 351: if (PIR1bits.RCIF)
  4283  0BBF  1E8C               	btfss	12,5	;volatile
  4284  0BC0  2C85               	goto	i1l3247
  4285                           
  4286                           ;main.c: 352: {
  4287                           ;main.c: 353: if (USART_ReceiveChar() == '0')
  4288  0BC1  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4289  0BC6  3A30               	xorlw	48
  4290  0BC7  1D03               	skipz
  4291  0BC8  2BDB               	goto	i1l3201
  4292                           
  4293                           ;main.c: 354: {
  4294                           ;main.c: 355: USART_WriteString("\n\rdesligado\n\r");
  4295  0BC9  3044               	movlw	(STR_1-__stringbase)& (0+255)
  4296  0BCA  160A  118A  229C  120A  158A  	fcall	_USART_WriteString
  4297                           
  4298                           ;main.c: 357: PWM_DutyCycle2(0);
  4299  0BCF  3000               	movlw	0
  4300  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0BD2  00BE               	movwf	i1PWM_DutyCycle2@valor
  4303  0BD3  3000               	movlw	0
  4304  0BD4  00BF               	movwf	i1PWM_DutyCycle2@valor+1
  4305  0BD5  160A  118A  2281  120A  158A  	fcall	i1_PWM_DutyCycle2
  4306                           
  4307                           ;main.c: 358: return;
  4308  0BDA  2CE6               	goto	i1l180
  4309  0BDB                     i1l3201:	
  4310                           
  4311                           ;main.c: 359: }
  4312                           ;main.c: 361: if (USART_ReceiveChar() == '1')
  4313  0BDB  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4314  0BE0  3A31               	xorlw	49
  4315  0BE1  1D03               	skipz
  4316  0BE2  2BE9               	goto	i1l3205
  4317                           
  4318                           ;main.c: 362: {
  4319                           ;main.c: 363: setpointUI = 720;
  4320  0BE3  30D0               	movlw	208
  4321  0BE4  1683               	bsf	3,5	;RP0=1, select bank1
  4322  0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  4323  0BE6  00C5               	movwf	_setpointUI^(0+128)
  4324  0BE7  3002               	movlw	2
  4325  0BE8  00C6               	movwf	(_setpointUI^(0+128)+1)
  4326  0BE9                     i1l3205:	
  4327                           
  4328                           ;main.c: 365: }
  4329                           ;main.c: 367: if (USART_ReceiveChar() == '2')
  4330  0BE9  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4331  0BEE  3A32               	xorlw	50
  4332  0BEF  1D03               	skipz
  4333  0BF0  2BF7               	goto	i1l3209
  4334                           
  4335                           ;main.c: 368: {
  4336                           ;main.c: 369: setpointUI = 1450;
  4337  0BF1  30AA               	movlw	170
  4338  0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  4339  0BF3  1303               	bcf	3,6	;RP1=0, select bank1
  4340  0BF4  00C5               	movwf	_setpointUI^(0+128)
  4341  0BF5  3005               	movlw	5
  4342  0BF6  00C6               	movwf	(_setpointUI^(0+128)+1)
  4343  0BF7                     i1l3209:	
  4344                           
  4345                           ;main.c: 371: }
  4346                           ;main.c: 373: if (USART_ReceiveChar() == '3')
  4347  0BF7  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4348  0BFC  3A33               	xorlw	51
  4349  0BFD  1D03               	skipz
  4350  0BFE  2C05               	goto	i1l3213
  4351                           
  4352                           ;main.c: 374: {
  4353                           ;main.c: 375: setpointUI = 2828;
  4354  0BFF  300C               	movlw	12
  4355  0C00  1683               	bsf	3,5	;RP0=1, select bank1
  4356  0C01  1303               	bcf	3,6	;RP1=0, select bank1
  4357  0C02  00C5               	movwf	_setpointUI^(0+128)
  4358  0C03  300B               	movlw	11
  4359  0C04  00C6               	movwf	(_setpointUI^(0+128)+1)
  4360  0C05                     i1l3213:	
  4361                           
  4362                           ;main.c: 377: }
  4363                           ;main.c: 379: if (USART_ReceiveChar() == '4')
  4364  0C05  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4365  0C0A  3A34               	xorlw	52
  4366  0C0B  1D03               	skipz
  4367  0C0C  2C13               	goto	i1l3217
  4368                           
  4369                           ;main.c: 380: {
  4370                           ;main.c: 381: setpointUI = 3256;
  4371  0C0D  30B8               	movlw	184
  4372  0C0E  1683               	bsf	3,5	;RP0=1, select bank1
  4373  0C0F  1303               	bcf	3,6	;RP1=0, select bank1
  4374  0C10  00C5               	movwf	_setpointUI^(0+128)
  4375  0C11  300C               	movlw	12
  4376  0C12  00C6               	movwf	(_setpointUI^(0+128)+1)
  4377  0C13                     i1l3217:	
  4378                           
  4379                           ;main.c: 383: }
  4380                           ;main.c: 385: if (USART_ReceiveChar() == '5')
  4381  0C13  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4382  0C18  3A35               	xorlw	53
  4383  0C19  1D03               	skipz
  4384  0C1A  2C21               	goto	i1l3221
  4385                           
  4386                           ;main.c: 386: {
  4387                           ;main.c: 387: setpointUI = 4510;
  4388  0C1B  309E               	movlw	158
  4389  0C1C  1683               	bsf	3,5	;RP0=1, select bank1
  4390  0C1D  1303               	bcf	3,6	;RP1=0, select bank1
  4391  0C1E  00C5               	movwf	_setpointUI^(0+128)
  4392  0C1F  3011               	movlw	17
  4393  0C20  00C6               	movwf	(_setpointUI^(0+128)+1)
  4394  0C21                     i1l3221:	
  4395                           
  4396                           ;main.c: 389: }
  4397                           ;main.c: 391: if (USART_ReceiveChar() == '6')
  4398  0C21  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4399  0C26  3A36               	xorlw	54
  4400  0C27  1D03               	skipz
  4401  0C28  2C2F               	goto	i1l3225
  4402                           
  4403                           ;main.c: 392: {
  4404                           ;main.c: 393: setpointUI = 5760;
  4405  0C29  3080               	movlw	128
  4406  0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  4407  0C2B  1303               	bcf	3,6	;RP1=0, select bank1
  4408  0C2C  00C5               	movwf	_setpointUI^(0+128)
  4409  0C2D  3016               	movlw	22
  4410  0C2E  00C6               	movwf	(_setpointUI^(0+128)+1)
  4411  0C2F                     i1l3225:	
  4412                           
  4413                           ;main.c: 395: }
  4414                           ;main.c: 397: if (USART_ReceiveChar() == '7')
  4415  0C2F  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4416  0C34  3A37               	xorlw	55
  4417  0C35  1D03               	skipz
  4418  0C36  2C3D               	goto	i1l3229
  4419                           
  4420                           ;main.c: 398: {
  4421                           ;main.c: 399: setpointUI = 6890;
  4422  0C37  30EA               	movlw	234
  4423  0C38  1683               	bsf	3,5	;RP0=1, select bank1
  4424  0C39  1303               	bcf	3,6	;RP1=0, select bank1
  4425  0C3A  00C5               	movwf	_setpointUI^(0+128)
  4426  0C3B  301A               	movlw	26
  4427  0C3C  00C6               	movwf	(_setpointUI^(0+128)+1)
  4428  0C3D                     i1l3229:	
  4429                           
  4430                           ;main.c: 401: }
  4431                           ;main.c: 403: if (USART_ReceiveChar() == '8')
  4432  0C3D  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4433  0C42  3A38               	xorlw	56
  4434  0C43  1D03               	skipz
  4435  0C44  2C4B               	goto	i1l3233
  4436                           
  4437                           ;main.c: 404: {
  4438                           ;main.c: 405: setpointUI = 8100;
  4439  0C45  30A4               	movlw	164
  4440  0C46  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0C47  1303               	bcf	3,6	;RP1=0, select bank1
  4442  0C48  00C5               	movwf	_setpointUI^(0+128)
  4443  0C49  301F               	movlw	31
  4444  0C4A  00C6               	movwf	(_setpointUI^(0+128)+1)
  4445  0C4B                     i1l3233:	
  4446                           
  4447                           ;main.c: 407: }
  4448                           ;main.c: 409: if (USART_ReceiveChar() == '9')
  4449  0C4B  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4450  0C50  3A39               	xorlw	57
  4451  0C51  1D03               	skipz
  4452  0C52  2C59               	goto	i1l3237
  4453                           
  4454                           ;main.c: 410: {
  4455                           ;main.c: 411: setpointUI = 9000;
  4456  0C53  3028               	movlw	40
  4457  0C54  1683               	bsf	3,5	;RP0=1, select bank1
  4458  0C55  1303               	bcf	3,6	;RP1=0, select bank1
  4459  0C56  00C5               	movwf	_setpointUI^(0+128)
  4460  0C57  3023               	movlw	35
  4461  0C58  00C6               	movwf	(_setpointUI^(0+128)+1)
  4462  0C59                     i1l3237:	
  4463                           
  4464                           ;main.c: 413: }
  4465                           ;main.c: 417: Fuzzy();
  4466  0C59  120A  118A  206B  120A  158A  	fcall	_Fuzzy
  4467                           
  4468                           ;main.c: 418: tf = (setpointUI - 100);
  4469  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  4470  0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  4471  0C60  0845               	movf	_setpointUI^(0+128),w
  4472  0C61  3E9C               	addlw	156
  4473  0C62  00F8               	movwf	___lwtoft@c
  4474  0C63  0846               	movf	(_setpointUI+1)^(0+128),w
  4475  0C64  1803               	skipnc
  4476  0C65  3E01               	addlw	1
  4477  0C66  3EFF               	addlw	255
  4478  0C67  00F9               	movwf	___lwtoft@c+1
  4479  0C68  160A  118A  2256  120A  158A  	fcall	___lwtoft
  4480  0C6D  0878               	movf	?___lwtoft,w
  4481  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  4482  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  4483  0C70  00ED               	movwf	_tf
  4484  0C71  0879               	movf	?___lwtoft+1,w
  4485  0C72  00EE               	movwf	_tf+1
  4486  0C73  087A               	movf	?___lwtoft+2,w
  4487  0C74  00EF               	movwf	_tf+2
  4488                           
  4489                           ;main.c: 421: if(USART_ReceiveChar() == 'X')
  4490  0C75  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4491  0C7A  3A58               	xorlw	88
  4492  0C7B  1D03               	skipz
  4493  0C7C  2C82               	goto	i1l3245
  4494                           
  4495                           ;main.c: 422: {
  4496                           ;main.c: 423: send();
  4497  0C7D  160A  118A  24FB  120A  158A  	fcall	_send
  4498  0C82                     i1l3245:	
  4499                           
  4500                           ;main.c: 424: }
  4501                           ;main.c: 426: PIR1bits.RCIF = 0;
  4502  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0C84  128C               	bcf	12,5	;volatile
  4505  0C85                     i1l3247:	
  4506                           
  4507                           ;main.c: 427: }
  4508                           ;main.c: 430: if (PIR1bits.ADIF)
  4509  0C85  1B0C               	btfsc	12,6	;volatile
  4510                           
  4511                           ;main.c: 431: {
  4512                           ;main.c: 435: PIR1bits.ADIF = 0;
  4513  0C86  130C               	bcf	12,6	;volatile
  4514                           
  4515                           ;main.c: 436: }
  4516                           ;main.c: 440: if (INTCONbits.T0IF)
  4517  0C87  1D0B               	btfss	11,2	;volatile
  4518  0C88  2CE2               	goto	i1l3273
  4519                           
  4520                           ;main.c: 441: {
  4521                           ;main.c: 443: TIMER0_Set(238);
  4522  0C89  30EE               	movlw	238
  4523  0C8A  160A  118A  2201  120A  158A  	fcall	i1_TIMER0_Set
  4524                           
  4525                           ;main.c: 446: if (contagens_tm0 < 499)
  4526  0C8F  3001               	movlw	1
  4527  0C90  1683               	bsf	3,5	;RP0=1, select bank1
  4528  0C91  1303               	bcf	3,6	;RP1=0, select bank1
  4529  0C92  023E               	subwf	(_contagens_tm0+1)^(0+128),w
  4530  0C93  30F3               	movlw	243
  4531  0C94  1903               	skipnz
  4532  0C95  023D               	subwf	_contagens_tm0^(0+128),w
  4533  0C96  1803               	skipnc
  4534  0C97  2CA2               	goto	i1l3259
  4535                           
  4536                           ;main.c: 447: {
  4537                           ;main.c: 449: contagens_tm0++;
  4538  0C98  3001               	movlw	1
  4539  0C99  07BD               	addwf	_contagens_tm0^(0+128),f
  4540  0C9A  1803               	skipnc
  4541  0C9B  0ABE               	incf	(_contagens_tm0+1)^(0+128),f
  4542  0C9C  3000               	movlw	0
  4543  0C9D  07BE               	addwf	(_contagens_tm0+1)^(0+128),f
  4544                           
  4545                           ;main.c: 452: PORTBbits.RB6 = 1;
  4546  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  4548  0CA0  1706               	bsf	6,6	;volatile
  4549                           
  4550                           ;main.c: 453: }
  4551  0CA1  2CE1               	goto	i1l3271
  4552  0CA2                     i1l3259:	
  4553                           
  4554                           ;main.c: 454: else
  4555                           ;main.c: 455: {
  4556                           ;main.c: 457: contagens_tm0 = 0;
  4557  0CA2  1683               	bsf	3,5	;RP0=1, select bank1
  4558  0CA3  1303               	bcf	3,6	;RP1=0, select bank1
  4559  0CA4  01BD               	clrf	_contagens_tm0^(0+128)
  4560  0CA5  01BE               	clrf	(_contagens_tm0+1)^(0+128)
  4561                           
  4562                           ;main.c: 460: pulsos = (TMR1H << 8) + TMR1L;
  4563  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  4564  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  4565  0CA8  080F               	movf	15,w	;volatile
  4566  0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  4567  0CAA  1303               	bcf	3,6	;RP1=0, select bank1
  4568  0CAB  01C2               	clrf	(_pulsos+1)^(0+128)
  4569  0CAC  07C2               	addwf	(_pulsos+1)^(0+128),f
  4570  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  4571  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  4572  0CAF  080E               	movf	14,w	;volatile
  4573  0CB0  1683               	bsf	3,5	;RP0=1, select bank1
  4574  0CB1  1303               	bcf	3,6	;RP1=0, select bank1
  4575  0CB2  01C1               	clrf	_pulsos^(0+128)
  4576  0CB3  07C1               	addwf	_pulsos^(0+128),f
  4577                           
  4578                           ;main.c: 462: rpm = ((pulsos / pas_cooler) * 3);
  4579  0CB4  086F               	movf	(_pas_cooler+1)^(0+128),w
  4580  0CB5  01F1               	clrf	i1___lwdiv@divisor+1
  4581  0CB6  07F1               	addwf	i1___lwdiv@divisor+1,f
  4582  0CB7  086E               	movf	_pas_cooler^(0+128),w
  4583  0CB8  01F0               	clrf	i1___lwdiv@divisor
  4584  0CB9  07F0               	addwf	i1___lwdiv@divisor,f
  4585  0CBA  0842               	movf	(_pulsos+1)^(0+128),w
  4586  0CBB  01F3               	clrf	i1___lwdiv@dividend+1
  4587  0CBC  07F3               	addwf	i1___lwdiv@dividend+1,f
  4588  0CBD  0841               	movf	_pulsos^(0+128),w
  4589  0CBE  01F2               	clrf	i1___lwdiv@dividend
  4590  0CBF  07F2               	addwf	i1___lwdiv@dividend,f
  4591  0CC0  160A  118A  2434  120A  158A  	fcall	i1___lwdiv
  4592  0CC5  0871               	movf	?i1___lwdiv+1,w
  4593  0CC6  01F9               	clrf	i1___wmul@multiplier+1
  4594  0CC7  07F9               	addwf	i1___wmul@multiplier+1,f
  4595  0CC8  0870               	movf	?i1___lwdiv,w
  4596  0CC9  01F8               	clrf	i1___wmul@multiplier
  4597  0CCA  07F8               	addwf	i1___wmul@multiplier,f
  4598  0CCB  3003               	movlw	3
  4599  0CCC  00FA               	movwf	i1___wmul@multiplicand
  4600  0CCD  3000               	movlw	0
  4601  0CCE  00FB               	movwf	i1___wmul@multiplicand+1
  4602  0CCF  160A  118A  2338  120A  158A  	fcall	i1___wmul
  4603  0CD4  0879               	movf	?i1___wmul+1,w
  4604  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  4605  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  4606  0CD7  01C4               	clrf	(_rpm+1)^(0+128)
  4607  0CD8  07C4               	addwf	(_rpm+1)^(0+128),f
  4608  0CD9  0878               	movf	?i1___wmul,w
  4609  0CDA  01C3               	clrf	_rpm^(0+128)
  4610  0CDB  07C3               	addwf	_rpm^(0+128),f
  4611                           
  4612                           ;main.c: 469: TMR1L = 0x00;
  4613  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  4614  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  4615  0CDE  018E               	clrf	14	;volatile
  4616                           
  4617                           ;main.c: 470: TMR1H = 0x00;
  4618  0CDF  018F               	clrf	15	;volatile
  4619                           
  4620                           ;main.c: 473: PORTBbits.RB6 = 0;
  4621  0CE0  1306               	bcf	6,6	;volatile
  4622  0CE1                     i1l3271:	
  4623                           
  4624                           ;main.c: 474: }
  4625                           ;main.c: 477: INTCONbits.T0IF = 0;
  4626  0CE1  110B               	bcf	11,2	;volatile
  4627  0CE2                     i1l3273:	
  4628                           
  4629                           ;main.c: 478: }
  4630                           ;main.c: 481: if (PIR1bits.TMR1IF)
  4631  0CE2  180C               	btfsc	12,0	;volatile
  4632                           
  4633                           ;main.c: 482: {
  4634                           ;main.c: 486: PIR1bits.TMR1IF = 0;
  4635  0CE3  100C               	bcf	12,0	;volatile
  4636                           
  4637                           ;main.c: 487: }
  4638                           ;main.c: 490: if (PIR1bits.SSPIF)
  4639  0CE4  198C               	btfsc	12,3	;volatile
  4640                           
  4641                           ;main.c: 491: {
  4642                           ;main.c: 495: PIR1bits.SSPIF = 0;
  4643  0CE5  118C               	bcf	12,3	;volatile
  4644  0CE6                     i1l180:	
  4645  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  4646  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  4647  0CE8  086C               	movf	??_ISR+3,w
  4648  0CE9  00FF               	movwf	127
  4649  0CEA  086B               	movf	??_ISR+2,w
  4650  0CEB  008A               	movwf	10
  4651  0CEC  086A               	movf	??_ISR+1,w
  4652  0CED  0084               	movwf	4
  4653  0CEE  0E69               	swapf	??_ISR^0,w
  4654  0CEF  0083               	movwf	3
  4655  0CF0  0EFE               	swapf	126,f
  4656  0CF1  0E7E               	swapf	126,w
  4657  0CF2  0009               	retfie
  4658  0CF3                     __end_of_ISR:	
  4659                           
  4660                           	psect	intentry
  4661  0004                     __pintentry:	
  4662                           ;incstack = 0
  4663                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4664                           
  4665  0004                     interrupt_function:	
  4666  007E                     saved_w	set	btemp
  4667  0004  00FE               	movwf	btemp
  4668  0005  0E03               	swapf	3,w
  4669  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4670  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4671  0008  00E9               	movwf	??_ISR
  4672  0009  0804               	movf	4,w
  4673  000A  00EA               	movwf	??_ISR+1
  4674  000B  080A               	movf	10,w
  4675  000C  00EB               	movwf	??_ISR+2
  4676  000D  087F               	movf	btemp+1,w
  4677  000E  00EC               	movwf	??_ISR+3
  4678  000F  120A  158A  2BBF   	ljmp	_ISR
  4679                           
  4680                           	psect	text21
  4681  1338                     __ptext21:	
  4682 ;; *************** function i1___wmul *****************
  4683 ;; Defined at:
  4684 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  multiplier      2    8[COMMON] unsigned int 
  4687 ;;  multiplicand    2   10[COMMON] unsigned int 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;  __wmul          2   12[COMMON] unsigned int 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  2    8[COMMON] unsigned int 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4699 ;;      Params:         4       0       0       0       0
  4700 ;;      Locals:         2       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0
  4702 ;;      Totals:         6       0       0       0       0
  4703 ;;Total ram usage:        6 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_ISR
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           
  4713                           ;psect for function i1___wmul
  4714  1338                     i1___wmul:	
  4715                           
  4716                           ;incstack = 0
  4717                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  4718  1338  01FC               	clrf	i1___wmul@product
  4719  1339  01FD               	clrf	i1___wmul@product+1
  4720  133A                     i1l3149:	
  4721  133A  1C78               	btfss	i1___wmul@multiplier,0
  4722  133B  2B42               	goto	i1l595
  4723  133C  087A               	movf	i1___wmul@multiplicand,w
  4724  133D  07FC               	addwf	i1___wmul@product,f
  4725  133E  1803               	skipnc
  4726  133F  0AFD               	incf	i1___wmul@product+1,f
  4727  1340  087B               	movf	i1___wmul@multiplicand+1,w
  4728  1341  07FD               	addwf	i1___wmul@product+1,f
  4729  1342                     i1l595:	
  4730  1342  3001               	movlw	1
  4731  1343                     u383_25:	
  4732  1343  1003               	clrc
  4733  1344  0DFA               	rlf	i1___wmul@multiplicand,f
  4734  1345  0DFB               	rlf	i1___wmul@multiplicand+1,f
  4735  1346  3EFF               	addlw	-1
  4736  1347  1D03               	skipz
  4737  1348  2B43               	goto	u383_25
  4738  1349  3001               	movlw	1
  4739  134A                     u384_25:	
  4740  134A  1003               	clrc
  4741  134B  0CF9               	rrf	i1___wmul@multiplier+1,f
  4742  134C  0CF8               	rrf	i1___wmul@multiplier,f
  4743  134D  3EFF               	addlw	-1
  4744  134E  1D03               	skipz
  4745  134F  2B4A               	goto	u384_25
  4746  1350  0879               	movf	i1___wmul@multiplier+1,w
  4747  1351  0478               	iorwf	i1___wmul@multiplier,w
  4748  1352  1D03               	skipz
  4749  1353  2B3A               	goto	i1l3149
  4750  1354  087D               	movf	i1___wmul@product+1,w
  4751  1355  01F9               	clrf	?i1___wmul+1
  4752  1356  07F9               	addwf	?i1___wmul+1,f
  4753  1357  087C               	movf	i1___wmul@product,w
  4754  1358  01F8               	clrf	?i1___wmul
  4755  1359  07F8               	addwf	?i1___wmul,f
  4756  135A  0008               	return
  4757  135B                     __end_ofi1___wmul:	
  4758                           
  4759                           	psect	text22
  4760  1434                     __ptext22:	
  4761 ;; *************** function i1___lwdiv *****************
  4762 ;; Defined at:
  4763 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  divisor         2    0[COMMON] unsigned int 
  4766 ;;  dividend        2    2[COMMON] unsigned int 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  __lwdiv         2    5[COMMON] unsigned int 
  4769 ;;  __lwdiv         1    7[COMMON] unsigned char 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  2    0[COMMON] unsigned int 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4779 ;;      Params:         4       0       0       0       0
  4780 ;;      Locals:         3       0       0       0       0
  4781 ;;      Temps:          1       0       0       0       0
  4782 ;;      Totals:         8       0       0       0       0
  4783 ;;Total ram usage:        8 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_ISR
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           
  4793                           ;psect for function i1___lwdiv
  4794  1434                     i1___lwdiv:	
  4795                           
  4796                           ;incstack = 0
  4797                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  4798  1434  01F5               	clrf	i1___lwdiv@quotient
  4799  1435  01F6               	clrf	i1___lwdiv@quotient+1
  4800  1436  0871               	movf	i1___lwdiv@divisor+1,w
  4801  1437  0470               	iorwf	i1___lwdiv@divisor,w
  4802  1438  1903               	skipnz
  4803  1439  2C6B               	goto	i1l3181
  4804  143A  01F7               	clrf	i1___lwdiv@counter
  4805  143B  0AF7               	incf	i1___lwdiv@counter,f
  4806  143C                     i1l3169:	
  4807  143C  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  4808  143D  2C4A               	goto	i1l3171
  4809  143E  3001               	movlw	1
  4810  143F                     u387_25:	
  4811  143F  1003               	clrc
  4812  1440  0DF0               	rlf	i1___lwdiv@divisor,f
  4813  1441  0DF1               	rlf	i1___lwdiv@divisor+1,f
  4814  1442  3EFF               	addlw	-1
  4815  1443  1D03               	skipz
  4816  1444  2C3F               	goto	u387_25
  4817  1445  3001               	movlw	1
  4818  1446  00F4               	movwf	??i1___lwdiv
  4819  1447  0874               	movf	??i1___lwdiv,w
  4820  1448  07F7               	addwf	i1___lwdiv@counter,f
  4821  1449  2C3C               	goto	i1l3169
  4822  144A                     i1l3171:	
  4823  144A  3001               	movlw	1
  4824  144B                     u389_25:	
  4825  144B  1003               	clrc
  4826  144C  0DF5               	rlf	i1___lwdiv@quotient,f
  4827  144D  0DF6               	rlf	i1___lwdiv@quotient+1,f
  4828  144E  3EFF               	addlw	-1
  4829  144F  1D03               	skipz
  4830  1450  2C4B               	goto	u389_25
  4831  1451  0871               	movf	i1___lwdiv@divisor+1,w
  4832  1452  0273               	subwf	i1___lwdiv@dividend+1,w
  4833  1453  1D03               	skipz
  4834  1454  2C57               	goto	u390_25
  4835  1455  0870               	movf	i1___lwdiv@divisor,w
  4836  1456  0272               	subwf	i1___lwdiv@dividend,w
  4837  1457                     u390_25:	
  4838  1457  1C03               	skipc
  4839  1458  2C60               	goto	i1l3177
  4840  1459  0870               	movf	i1___lwdiv@divisor,w
  4841  145A  02F2               	subwf	i1___lwdiv@dividend,f
  4842  145B  0871               	movf	i1___lwdiv@divisor+1,w
  4843  145C  1C03               	skipc
  4844  145D  03F3               	decf	i1___lwdiv@dividend+1,f
  4845  145E  02F3               	subwf	i1___lwdiv@dividend+1,f
  4846  145F  1475               	bsf	i1___lwdiv@quotient,0
  4847  1460                     i1l3177:	
  4848  1460  3001               	movlw	1
  4849  1461                     u391_25:	
  4850  1461  1003               	clrc
  4851  1462  0CF1               	rrf	i1___lwdiv@divisor+1,f
  4852  1463  0CF0               	rrf	i1___lwdiv@divisor,f
  4853  1464  3EFF               	addlw	-1
  4854  1465  1D03               	skipz
  4855  1466  2C61               	goto	u391_25
  4856  1467  3001               	movlw	1
  4857  1468  02F7               	subwf	i1___lwdiv@counter,f
  4858  1469  1D03               	btfss	3,2
  4859  146A  2C4A               	goto	i1l3171
  4860  146B                     i1l3181:	
  4861  146B  0876               	movf	i1___lwdiv@quotient+1,w
  4862  146C  01F1               	clrf	?i1___lwdiv+1
  4863  146D  07F1               	addwf	?i1___lwdiv+1,f
  4864  146E  0875               	movf	i1___lwdiv@quotient,w
  4865  146F  01F0               	clrf	?i1___lwdiv
  4866  1470  07F0               	addwf	?i1___lwdiv,f
  4867  1471  0008               	return
  4868  1472                     __end_ofi1___lwdiv:	
  4869                           
  4870                           	psect	text23
  4871  1201                     __ptext23:	
  4872 ;; *************** function i1_TIMER0_Set *****************
  4873 ;; Defined at:
  4874 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  contagens       1    wreg     unsigned char 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  contagens       1    0[COMMON] unsigned char 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;		None               void
  4881 ;; Registers used:
  4882 ;;		wreg
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4888 ;;      Params:         0       0       0       0       0
  4889 ;;      Locals:         1       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0
  4891 ;;      Totals:         1       0       0       0       0
  4892 ;;Total ram usage:        1 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_ISR
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function i1_TIMER0_Set
  4903  1201                     i1_TIMER0_Set:	
  4904                           
  4905                           ;incstack = 0
  4906                           ; Regs used in i1_TIMER0_Set: [wreg]
  4907                           ;i1TIMER0_Set@contagens stored from wreg
  4908  1201  00F0               	movwf	i1TIMER0_Set@contagens
  4909                           
  4910                           ;timers.c: 22: TMR0 = contagens;
  4911  1202  0870               	movf	i1TIMER0_Set@contagens,w
  4912  1203  1283               	bcf	3,5	;RP0=0, select bank0
  4913  1204  1303               	bcf	3,6	;RP1=0, select bank0
  4914  1205  0081               	movwf	1	;volatile
  4915  1206  0008               	return
  4916  1207                     __end_ofi1_TIMER0_Set:	
  4917                           
  4918                           	psect	text24
  4919  14FB                     __ptext24:	
  4920 ;; *************** function _send *****************
  4921 ;; Defined at:
  4922 ;;		line 102 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  index           1    3[COMMON] unsigned char 
  4927 ;;  checksum        1    2[COMMON] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;		None               void
  4930 ;; Registers used:
  4931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4937 ;;      Params:         0       0       0       0       0
  4938 ;;      Locals:         2       0       0       0       0
  4939 ;;      Temps:          1       0       0       0       0
  4940 ;;      Totals:         3       0       0       0       0
  4941 ;;Total ram usage:        3 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:    1
  4944 ;; This function calls:
  4945 ;;		_USART_WriteChar
  4946 ;; This function is called by:
  4947 ;;		_ISR
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           
  4952                           ;psect for function _send
  4953  14FB                     _send:	
  4954                           
  4955                           ;main.c: 106: buffer[0] = '#';
  4956                           
  4957                           ;incstack = 0
  4958                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4959  14FB  3023               	movlw	35
  4960  14FC  00F1               	movwf	??_send
  4961  14FD  0871               	movf	??_send,w
  4962  14FE  1683               	bsf	3,5	;RP0=1, select bank3
  4963  14FF  1703               	bsf	3,6	;RP1=1, select bank3
  4964  1500  0090               	movwf	_buffer^(0+384)
  4965                           
  4966                           ;main.c: 107: buffer[1] = '$';
  4967  1501  3024               	movlw	36
  4968  1502  00F1               	movwf	??_send
  4969  1503  0871               	movf	??_send,w
  4970  1504  0091               	movwf	(_buffer^(0+384)+1)
  4971                           
  4972                           ;main.c: 108: buffer[2] = ':';
  4973  1505  303A               	movlw	58
  4974  1506  00F1               	movwf	??_send
  4975  1507  0871               	movf	??_send,w
  4976  1508  0092               	movwf	(_buffer^(0+384)+2)
  4977                           
  4978                           ;main.c: 111: buffer[3] = (rpm >> 8) & 0xFF;
  4979  1509  1683               	bsf	3,5	;RP0=1, select bank1
  4980  150A  1303               	bcf	3,6	;RP1=0, select bank1
  4981  150B  0844               	movf	(_rpm+1)^(0+128),w
  4982  150C  00F1               	movwf	??_send
  4983  150D  0871               	movf	??_send,w
  4984  150E  1683               	bsf	3,5	;RP0=1, select bank3
  4985  150F  1703               	bsf	3,6	;RP1=1, select bank3
  4986  1510  0093               	movwf	(_buffer^(0+384)+3)
  4987                           
  4988                           ;main.c: 112: buffer[4] = rpm & 0xFF;
  4989  1511  1683               	bsf	3,5	;RP0=1, select bank1
  4990  1512  1303               	bcf	3,6	;RP1=0, select bank1
  4991  1513  0843               	movf	_rpm^(0+128),w
  4992  1514  00F1               	movwf	??_send
  4993  1515  0871               	movf	??_send,w
  4994  1516  1683               	bsf	3,5	;RP0=1, select bank3
  4995  1517  1703               	bsf	3,6	;RP1=1, select bank3
  4996  1518  0094               	movwf	(_buffer^(0+384)+4)
  4997                           
  4998                           ;main.c: 113: buffer[5] = 0;
  4999  1519  0195               	clrf	(_buffer^(0+384)+5)
  5000                           
  5001                           ;main.c: 115: unsigned char checksum = 0x00;
  5002  151A  01F2               	clrf	send@checksum
  5003                           
  5004                           ;main.c: 116: for (unsigned char index = 0; index < 6; index++)
  5005  151B  01F3               	clrf	send@index
  5006  151C  3006               	movlw	6
  5007  151D  0273               	subwf	send@index,w
  5008  151E  1803               	btfsc	3,0
  5009  151F  2D3A               	goto	i1l2735
  5010  1520                     i1l2727:	
  5011                           
  5012                           ;main.c: 117: {
  5013                           ;main.c: 118: USART_WriteChar(buffer[index]);
  5014  1520  0873               	movf	send@index,w
  5015  1521  3E90               	addlw	_buffer& (0+255)
  5016  1522  0084               	movwf	4
  5017  1523  1783               	bsf	3,7	;select IRP bank3
  5018  1524  0800               	movf	0,w
  5019  1525  160A  118A  2207  160A  118A  	fcall	_USART_WriteChar
  5020                           
  5021                           ;main.c: 119: checksum ^= buffer[index];
  5022  152A  0873               	movf	send@index,w
  5023  152B  3E90               	addlw	_buffer& (0+255)
  5024  152C  0084               	movwf	4
  5025  152D  1783               	bsf	3,7	;select IRP bank3
  5026  152E  0800               	movf	0,w
  5027  152F  00F1               	movwf	??_send
  5028  1530  0871               	movf	??_send,w
  5029  1531  06F2               	xorwf	send@checksum,f
  5030  1532  3001               	movlw	1
  5031  1533  00F1               	movwf	??_send
  5032  1534  0871               	movf	??_send,w
  5033  1535  07F3               	addwf	send@index,f
  5034  1536  3006               	movlw	6
  5035  1537  0273               	subwf	send@index,w
  5036  1538  1C03               	skipc
  5037  1539  2D20               	goto	i1l2727
  5038  153A                     i1l2735:	
  5039                           
  5040                           ;main.c: 120: }
  5041                           ;main.c: 121: buffer[6] = checksum;
  5042  153A  0872               	movf	send@checksum,w
  5043  153B  00F1               	movwf	??_send
  5044  153C  0871               	movf	??_send,w
  5045  153D  1683               	bsf	3,5	;RP0=1, select bank3
  5046  153E  1703               	bsf	3,6	;RP1=1, select bank3
  5047  153F  0096               	movwf	(_buffer^(0+384)+6)
  5048                           
  5049                           ;main.c: 122: USART_WriteChar(buffer[6]);
  5050  1540  0816               	movf	(_buffer^(0+384)+6),w
  5051  1541  160A  118A  2207   	fcall	_USART_WriteChar
  5052  1544  0008               	return
  5053  1545                     __end_of_send:	
  5054                           
  5055                           	psect	text25
  5056  07E6                     __ptext25:	
  5057 ;; *************** function _USART_ReceiveChar *****************
  5058 ;; Defined at:
  5059 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  byte            1    4[COMMON] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      unsigned char 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5073 ;;      Params:         0       0       0       0       0
  5074 ;;      Locals:         1       0       0       0       0
  5075 ;;      Temps:          1       0       0       0       0
  5076 ;;      Totals:         2       0       0       0       0
  5077 ;;Total ram usage:        2 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    2
  5080 ;; This function calls:
  5081 ;;		_USART_WriteString
  5082 ;; This function is called by:
  5083 ;;		_ISR
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function _USART_ReceiveChar
  5089  07E6                     _USART_ReceiveChar:	
  5090                           
  5091                           ;usart.c: 65: unsigned char byte;
  5092                           ;usart.c: 67: if (!OERR)
  5093                           
  5094                           ;incstack = 0
  5095                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5096  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  5097  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  5098  07E8  1898               	btfsc	24,1	;volatile
  5099  07E9  2FEF               	goto	i1l2887
  5100                           
  5101                           ;usart.c: 68: {
  5102                           ;usart.c: 69: byte = RCREG;
  5103  07EA  081A               	movf	26,w	;volatile
  5104  07EB  00F3               	movwf	??_USART_ReceiveChar
  5105  07EC  0873               	movf	??_USART_ReceiveChar,w
  5106  07ED  00F4               	movwf	USART_ReceiveChar@byte
  5107  07EE  2FFB               	goto	i1l2895
  5108  07EF                     i1l2887:	
  5109                           ;usart.c: 71: }
  5110                           
  5111                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5112                           
  5113                           
  5114                           ;usart.c: 72: else
  5115                           ;usart.c: 73: {
  5116                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5117  07EF  300B               	movlw	(STR_5-__stringbase)& (0+255)
  5118  07F0  160A  118A  229C   	fcall	_USART_WriteString
  5119                           
  5120                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5121  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  5122  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  5123  07F5  1218               	bcf	24,4	;volatile
  5124                           
  5125                           ;usart.c: 77: byte = RCREG;
  5126  07F6  081A               	movf	26,w	;volatile
  5127  07F7  00F3               	movwf	??_USART_ReceiveChar
  5128  07F8  0873               	movf	??_USART_ReceiveChar,w
  5129  07F9  00F4               	movwf	USART_ReceiveChar@byte
  5130                           
  5131                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5132  07FA  1618               	bsf	24,4	;volatile
  5133  07FB                     i1l2895:	
  5134                           
  5135                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5136  07FB  128C               	bcf	12,5	;volatile
  5137                           
  5138                           ;usart.c: 80: }
  5139                           ;usart.c: 82: return(byte);
  5140  07FC  0874               	movf	USART_ReceiveChar@byte,w
  5141  07FD  0008               	return
  5142  07FE                     __end_of_USART_ReceiveChar:	
  5143                           
  5144                           	psect	text26
  5145  129C                     __ptext26:	
  5146 ;; *************** function _USART_WriteString *****************
  5147 ;; Defined at:
  5148 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  str             1    wreg     PTR const unsigned char 
  5151 ;;		 -> STR_5(40), STR_1(14), 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  str             1    2[COMMON] PTR const unsigned char 
  5154 ;;		 -> STR_5(40), STR_1(14), 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;		None               void
  5157 ;; Registers used:
  5158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5164 ;;      Params:         0       0       0       0       0
  5165 ;;      Locals:         1       0       0       0       0
  5166 ;;      Temps:          1       0       0       0       0
  5167 ;;      Totals:         2       0       0       0       0
  5168 ;;Total ram usage:        2 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    1
  5171 ;; This function calls:
  5172 ;;		_USART_WriteChar
  5173 ;; This function is called by:
  5174 ;;		_ISR
  5175 ;;		_USART_ReceiveChar
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           
  5180                           ;psect for function _USART_WriteString
  5181  129C                     _USART_WriteString:	
  5182                           
  5183                           ;incstack = 0
  5184                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5185                           ;USART_WriteString@str stored from wreg
  5186  129C  00F2               	movwf	USART_WriteString@str
  5187  129D                     i1l2481:	
  5188                           ;usart.c: 54: while(*str != '\0')
  5189                           
  5190  129D  0872               	movf	USART_WriteString@str,w
  5191  129E  0084               	movwf	4
  5192  129F  160A  118A  200A  160A  118A  	fcall	stringdir
  5193  12A4  3800               	iorlw	0
  5194  12A5  1903               	btfsc	3,2
  5195  12A6  0008               	return
  5196                           
  5197                           ;usart.c: 55: {
  5198                           ;usart.c: 56: USART_WriteChar(*str);
  5199  12A7  0872               	movf	USART_WriteString@str,w
  5200  12A8  0084               	movwf	4
  5201  12A9  160A  118A  200A  160A  118A  	fcall	stringdir
  5202  12AE  160A  118A  2207  160A  118A  	fcall	_USART_WriteChar
  5203                           
  5204                           ;usart.c: 57: str++;
  5205  12B3  3001               	movlw	1
  5206  12B4  00F1               	movwf	??_USART_WriteString
  5207  12B5  0871               	movf	??_USART_WriteString,w
  5208  12B6  07F2               	addwf	USART_WriteString@str,f
  5209  12B7  2A9D               	goto	i1l2481
  5210  12B8                     __end_of_USART_WriteString:	
  5211                           
  5212                           	psect	text27
  5213  1207                     __ptext27:	
  5214 ;; *************** function _USART_WriteChar *****************
  5215 ;; Defined at:
  5216 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  byte            1    wreg     unsigned char 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  byte            1    0[COMMON] unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;		None               void
  5223 ;; Registers used:
  5224 ;;		wreg
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5230 ;;      Params:         0       0       0       0       0
  5231 ;;      Locals:         1       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0
  5233 ;;      Totals:         1       0       0       0       0
  5234 ;;Total ram usage:        1 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_send
  5240 ;;		_USART_WriteString
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           
  5245                           ;psect for function _USART_WriteChar
  5246  1207                     _USART_WriteChar:	
  5247                           
  5248                           ;incstack = 0
  5249                           ; Regs used in _USART_WriteChar: [wreg]
  5250                           ;USART_WriteChar@byte stored from wreg
  5251  1207  00F0               	movwf	USART_WriteChar@byte
  5252  1208                     i1l224:	
  5253                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5254                           
  5255  1208  1283               	bcf	3,5	;RP0=0, select bank0
  5256  1209  1303               	bcf	3,6	;RP1=0, select bank0
  5257  120A  1E0C               	btfss	12,4	;volatile
  5258  120B  2A08               	goto	i1l224
  5259                           
  5260                           ;usart.c: 47: TXREG = byte;
  5261  120C  0870               	movf	USART_WriteChar@byte,w
  5262  120D  0099               	movwf	25	;volatile
  5263  120E  0008               	return
  5264  120F                     __end_of_USART_WriteChar:	
  5265                           
  5266                           	psect	text28
  5267  006B                     __ptext28:	
  5268 ;; *************** function _Fuzzy *****************
  5269 ;; Defined at:
  5270 ;;		line 147 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  a               2   59[BANK0 ] int 
  5275 ;;  a               2   57[BANK0 ] int 
  5276 ;;  a               2   55[BANK0 ] int 
  5277 ;;  deltaRpm        3   70[BANK0 ] float 
  5278 ;;  aumenta         3   67[BANK0 ] float 
  5279 ;;  reduz           3   64[BANK0 ] float 
  5280 ;;  mantem          3   61[BANK0 ] float 
  5281 ;;  tip             3   52[BANK0 ] float 
  5282 ;;  freio           2   50[BANK0 ] unsigned int 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;		None               void
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5292 ;;      Params:         0       0       0       0       0
  5293 ;;      Locals:         0      23       0       0       0
  5294 ;;      Temps:          0       0       0       0       0
  5295 ;;      Totals:         0      23       0       0       0
  5296 ;;Total ram usage:       23 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    3
  5299 ;; This function calls:
  5300 ;;		___ftadd
  5301 ;;		___ftdiv
  5302 ;;		___ftge
  5303 ;;		___ftmul
  5304 ;;		___ftneg
  5305 ;;		___fttol
  5306 ;;		___lwtoft
  5307 ;;		_max_val
  5308 ;;		_trapmf
  5309 ;;		_trimf
  5310 ;;		i1_PWM_DutyCycle2
  5311 ;; This function is called by:
  5312 ;;		_ISR
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           
  5317                           ;psect for function _Fuzzy
  5318  006B                     _Fuzzy:	
  5319                           
  5320                           ;main.c: 158: setpoint = (float)setpointUI;
  5321                           
  5322                           ;incstack = 0
  5323                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5324  006B  1683               	bsf	3,5	;RP0=1, select bank1
  5325  006C  1303               	bcf	3,6	;RP1=0, select bank1
  5326  006D  0846               	movf	(_setpointUI+1)^(0+128),w
  5327  006E  01F9               	clrf	___lwtoft@c+1
  5328  006F  07F9               	addwf	___lwtoft@c+1,f
  5329  0070  0845               	movf	_setpointUI^(0+128),w
  5330  0071  01F8               	clrf	___lwtoft@c
  5331  0072  07F8               	addwf	___lwtoft@c,f
  5332  0073  160A  118A  2256  120A  118A  	fcall	___lwtoft
  5333  0078  0878               	movf	?___lwtoft,w
  5334  0079  1683               	bsf	3,5	;RP0=1, select bank1
  5335  007A  1303               	bcf	3,6	;RP1=0, select bank1
  5336  007B  00EB               	movwf	_setpoint^(0+128)
  5337  007C  0879               	movf	?___lwtoft+1,w
  5338  007D  00EC               	movwf	(_setpoint+1)^(0+128)
  5339  007E  087A               	movf	?___lwtoft+2,w
  5340  007F  00ED               	movwf	(_setpoint+2)^(0+128)
  5341                           
  5342                           ;main.c: 159: float deltaRpm = 0;
  5343  0080  3000               	movlw	0
  5344  0081  1283               	bcf	3,5	;RP0=0, select bank0
  5345  0082  1303               	bcf	3,6	;RP1=0, select bank0
  5346  0083  00E6               	movwf	Fuzzy@deltaRpm
  5347  0084  3000               	movlw	0
  5348  0085  00E7               	movwf	Fuzzy@deltaRpm+1
  5349  0086  3000               	movlw	0
  5350  0087  00E8               	movwf	Fuzzy@deltaRpm+2
  5351                           
  5352                           ;main.c: 162: unsigned int freio = 0;
  5353  0088  01D2               	clrf	Fuzzy@freio
  5354  0089  01D3               	clrf	Fuzzy@freio+1
  5355                           
  5356                           ;main.c: 168: float mantem = 0;
  5357  008A  3000               	movlw	0
  5358  008B  00DD               	movwf	Fuzzy@mantem
  5359  008C  3000               	movlw	0
  5360  008D  00DE               	movwf	Fuzzy@mantem+1
  5361  008E  3000               	movlw	0
  5362  008F  00DF               	movwf	Fuzzy@mantem+2
  5363                           
  5364                           ;main.c: 169: float reduz = 0;
  5365  0090  3000               	movlw	0
  5366  0091  00E0               	movwf	Fuzzy@reduz
  5367  0092  3000               	movlw	0
  5368  0093  00E1               	movwf	Fuzzy@reduz+1
  5369  0094  3000               	movlw	0
  5370  0095  00E2               	movwf	Fuzzy@reduz+2
  5371                           
  5372                           ;main.c: 170: float aumenta = 0;
  5373  0096  3000               	movlw	0
  5374  0097  00E3               	movwf	Fuzzy@aumenta
  5375  0098  3000               	movlw	0
  5376  0099  00E4               	movwf	Fuzzy@aumenta+1
  5377  009A  3000               	movlw	0
  5378  009B  00E5               	movwf	Fuzzy@aumenta+2
  5379                           
  5380                           ;main.c: 171: float tip;
  5381                           ;main.c: 172: fitemp = 0;
  5382  009C  3000               	movlw	0
  5383  009D  1683               	bsf	3,5	;RP0=1, select bank1
  5384  009E  1303               	bcf	3,6	;RP1=0, select bank1
  5385  009F  00A3               	movwf	_fitemp^(0+128)
  5386  00A0  3000               	movlw	0
  5387  00A1  00A4               	movwf	(_fitemp+1)^(0+128)
  5388  00A2  3000               	movlw	0
  5389  00A3  00A5               	movwf	(_fitemp+2)^(0+128)
  5390                           
  5391                           ;main.c: 175: deltaRpm = (setpoint - tf);
  5392  00A4  086B               	movf	_setpoint^(0+128),w
  5393  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  5394  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  5395  00A7  00A3               	movwf	___ftadd@f1
  5396  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  5397  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  5398  00AA  086C               	movf	(_setpoint+1)^(0+128),w
  5399  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  5400  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  5401  00AD  00A4               	movwf	___ftadd@f1+1
  5402  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  5403  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  5404  00B0  086D               	movf	(_setpoint+2)^(0+128),w
  5405  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  5406  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  5407  00B3  00A5               	movwf	___ftadd@f1+2
  5408  00B4  086D               	movf	_tf,w
  5409  00B5  00A0               	movwf	___ftneg@f1
  5410  00B6  086E               	movf	_tf+1,w
  5411  00B7  00A1               	movwf	___ftneg@f1+1
  5412  00B8  086F               	movf	_tf+2,w
  5413  00B9  00A2               	movwf	___ftneg@f1+2
  5414  00BA  160A  118A  221F  120A  118A  	fcall	___ftneg
  5415  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  5416  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  5417  00C1  0820               	movf	?___ftneg,w
  5418  00C2  00A6               	movwf	___ftadd@f2
  5419  00C3  0821               	movf	?___ftneg+1,w
  5420  00C4  00A7               	movwf	___ftadd@f2+1
  5421  00C5  0822               	movf	?___ftneg+2,w
  5422  00C6  00A8               	movwf	___ftadd@f2+2
  5423  00C7  120A  158A  2192  120A  118A  	fcall	___ftadd
  5424  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  5425  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  5426  00CE  0823               	movf	?___ftadd,w
  5427  00CF  00E6               	movwf	Fuzzy@deltaRpm
  5428  00D0  0824               	movf	?___ftadd+1,w
  5429  00D1  00E7               	movwf	Fuzzy@deltaRpm+1
  5430  00D2  0825               	movf	?___ftadd+2,w
  5431  00D3  00E8               	movwf	Fuzzy@deltaRpm+2
  5432                           
  5433                           ;main.c: 176: deltaRpm = (deltaRpm/100);
  5434  00D4  3000               	movlw	0
  5435  00D5  00B0               	movwf	___ftdiv@f2
  5436  00D6  30C8               	movlw	200
  5437  00D7  00B1               	movwf	___ftdiv@f2+1
  5438  00D8  3042               	movlw	66
  5439  00D9  00B2               	movwf	___ftdiv@f2+2
  5440  00DA  0866               	movf	Fuzzy@deltaRpm,w
  5441  00DB  00B3               	movwf	___ftdiv@f1
  5442  00DC  0867               	movf	Fuzzy@deltaRpm+1,w
  5443  00DD  00B4               	movwf	___ftdiv@f1+1
  5444  00DE  0868               	movf	Fuzzy@deltaRpm+2,w
  5445  00DF  00B5               	movwf	___ftdiv@f1+2
  5446  00E0  160A  118A  2677  120A  118A  	fcall	___ftdiv
  5447  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  5448  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  5449  00E7  0830               	movf	?___ftdiv,w
  5450  00E8  00E6               	movwf	Fuzzy@deltaRpm
  5451  00E9  0831               	movf	?___ftdiv+1,w
  5452  00EA  00E7               	movwf	Fuzzy@deltaRpm+1
  5453  00EB  0832               	movf	?___ftdiv+2,w
  5454  00EC  00E8               	movwf	Fuzzy@deltaRpm+2
  5455                           
  5456                           ;main.c: 178: deltaV = deltaRpm;
  5457  00ED  0866               	movf	Fuzzy@deltaRpm,w
  5458  00EE  00B0               	movwf	___fttol@f1
  5459  00EF  0867               	movf	Fuzzy@deltaRpm+1,w
  5460  00F0  00B1               	movwf	___fttol@f1+1
  5461  00F1  0868               	movf	Fuzzy@deltaRpm+2,w
  5462  00F2  00B2               	movwf	___fttol@f1+2
  5463  00F3  120A  158A  2018  120A  118A  	fcall	___fttol
  5464  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  5465  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  5466  00FA  0831               	movf	?___fttol+1,w
  5467  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  5468  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  5469  00FD  01C0               	clrf	(_deltaV+1)^(0+128)
  5470  00FE  07C0               	addwf	(_deltaV+1)^(0+128),f
  5471  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  5472  0100  1303               	bcf	3,6	;RP1=0, select bank0
  5473  0101  0830               	movf	?___fttol,w
  5474  0102  1683               	bsf	3,5	;RP0=1, select bank1
  5475  0103  1303               	bcf	3,6	;RP1=0, select bank1
  5476  0104  01BF               	clrf	_deltaV^(0+128)
  5477  0105  07BF               	addwf	_deltaV^(0+128),f
  5478                           
  5479                           ;main.c: 180: if (deltaRpm <0)
  5480  0106  1283               	bcf	3,5	;RP0=0, select bank0
  5481  0107  1303               	bcf	3,6	;RP1=0, select bank0
  5482  0108  0866               	movf	Fuzzy@deltaRpm,w
  5483  0109  00B0               	movwf	___ftge@ff1
  5484  010A  0867               	movf	Fuzzy@deltaRpm+1,w
  5485  010B  00B1               	movwf	___ftge@ff1+1
  5486  010C  0868               	movf	Fuzzy@deltaRpm+2,w
  5487  010D  00B2               	movwf	___ftge@ff1+2
  5488  010E  3000               	movlw	0
  5489  010F  00B3               	movwf	___ftge@ff2
  5490  0110  3000               	movlw	0
  5491  0111  00B4               	movwf	___ftge@ff2+1
  5492  0112  3000               	movlw	0
  5493  0113  00B5               	movwf	___ftge@ff2+2
  5494  0114  160A  118A  2545  120A  118A  	fcall	___ftge
  5495  0119  1803               	btfsc	3,0
  5496  011A  293F               	goto	i1l2769
  5497                           
  5498                           ;main.c: 181: {
  5499                           ;main.c: 182: if(PORTBbits.RB1 == 0)
  5500  011B  1283               	bcf	3,5	;RP0=0, select bank0
  5501  011C  1303               	bcf	3,6	;RP1=0, select bank0
  5502  011D  1886               	btfsc	6,1	;volatile
  5503  011E  2921               	goto	i1l149
  5504                           
  5505                           ;main.c: 183: {
  5506                           ;main.c: 184: PORTBbits.RB1 = 1;
  5507  011F  1486               	bsf	6,1	;volatile
  5508                           
  5509                           ;main.c: 185: }else{
  5510  0120  2922               	goto	i1l2765
  5511  0121                     i1l149:	
  5512                           
  5513                           ;main.c: 186: PORTBbits.RB1 = 0;
  5514  0121  1086               	bcf	6,1	;volatile
  5515  0122                     i1l2765:	
  5516                           
  5517                           ;main.c: 187: }
  5518                           ;main.c: 189: deltaRpm = deltaRpm*-1;
  5519  0122  3000               	movlw	0
  5520  0123  00F8               	movwf	___ftmul@f1
  5521  0124  3080               	movlw	128
  5522  0125  00F9               	movwf	___ftmul@f1+1
  5523  0126  30BF               	movlw	191
  5524  0127  00FA               	movwf	___ftmul@f1+2
  5525  0128  0866               	movf	Fuzzy@deltaRpm,w
  5526  0129  00FB               	movwf	___ftmul@f2
  5527  012A  0867               	movf	Fuzzy@deltaRpm+1,w
  5528  012B  00FC               	movwf	___ftmul@f2+1
  5529  012C  0868               	movf	Fuzzy@deltaRpm+2,w
  5530  012D  00FD               	movwf	___ftmul@f2+2
  5531  012E  160A  118A  272F  120A  118A  	fcall	___ftmul
  5532  0133  0878               	movf	?___ftmul,w
  5533  0134  1283               	bcf	3,5	;RP0=0, select bank0
  5534  0135  1303               	bcf	3,6	;RP1=0, select bank0
  5535  0136  00E6               	movwf	Fuzzy@deltaRpm
  5536  0137  0879               	movf	?___ftmul+1,w
  5537  0138  00E7               	movwf	Fuzzy@deltaRpm+1
  5538  0139  087A               	movf	?___ftmul+2,w
  5539  013A  00E8               	movwf	Fuzzy@deltaRpm+2
  5540                           
  5541                           ;main.c: 190: freio = 1;
  5542  013B  3001               	movlw	1
  5543  013C  00D2               	movwf	Fuzzy@freio
  5544  013D  3000               	movlw	0
  5545  013E  00D3               	movwf	Fuzzy@freio+1
  5546  013F                     i1l2769:	
  5547                           
  5548                           ;main.c: 191: }
  5549                           ;main.c: 193: if (deltaRpm >90) deltaRpm = 90;
  5550  013F  3000               	movlw	0
  5551  0140  1283               	bcf	3,5	;RP0=0, select bank0
  5552  0141  1303               	bcf	3,6	;RP1=0, select bank0
  5553  0142  00B0               	movwf	___ftge@ff1
  5554  0143  30B4               	movlw	180
  5555  0144  00B1               	movwf	___ftge@ff1+1
  5556  0145  3042               	movlw	66
  5557  0146  00B2               	movwf	___ftge@ff1+2
  5558  0147  0866               	movf	Fuzzy@deltaRpm,w
  5559  0148  00B3               	movwf	___ftge@ff2
  5560  0149  0867               	movf	Fuzzy@deltaRpm+1,w
  5561  014A  00B4               	movwf	___ftge@ff2+1
  5562  014B  0868               	movf	Fuzzy@deltaRpm+2,w
  5563  014C  00B5               	movwf	___ftge@ff2+2
  5564  014D  160A  118A  2545  120A  118A  	fcall	___ftge
  5565  0152  1803               	btfsc	3,0
  5566  0153  295C               	goto	i1l2773
  5567  0154  3000               	movlw	0
  5568  0155  1283               	bcf	3,5	;RP0=0, select bank0
  5569  0156  1303               	bcf	3,6	;RP1=0, select bank0
  5570  0157  00E6               	movwf	Fuzzy@deltaRpm
  5571  0158  30B4               	movlw	180
  5572  0159  00E7               	movwf	Fuzzy@deltaRpm+1
  5573  015A  3042               	movlw	66
  5574  015B  00E8               	movwf	Fuzzy@deltaRpm+2
  5575  015C                     i1l2773:	
  5576                           
  5577                           ;main.c: 196: if (deltaRpm < 25)
  5578  015C  1283               	bcf	3,5	;RP0=0, select bank0
  5579  015D  1303               	bcf	3,6	;RP1=0, select bank0
  5580  015E  0866               	movf	Fuzzy@deltaRpm,w
  5581  015F  00B0               	movwf	___ftge@ff1
  5582  0160  0867               	movf	Fuzzy@deltaRpm+1,w
  5583  0161  00B1               	movwf	___ftge@ff1+1
  5584  0162  0868               	movf	Fuzzy@deltaRpm+2,w
  5585  0163  00B2               	movwf	___ftge@ff1+2
  5586  0164  3000               	movlw	0
  5587  0165  00B3               	movwf	___ftge@ff2
  5588  0166  30C8               	movlw	200
  5589  0167  00B4               	movwf	___ftge@ff2+1
  5590  0168  3041               	movlw	65
  5591  0169  00B5               	movwf	___ftge@ff2+2
  5592  016A  160A  118A  2545  120A  118A  	fcall	___ftge
  5593  016F  1803               	btfsc	3,0
  5594  0170  2AD1               	goto	i1l2797
  5595                           
  5596                           ;main.c: 197: {
  5597                           ;main.c: 201: fitemp = trapmf(deltaRpm, 0,0,13,32);
  5598  0171  1283               	bcf	3,5	;RP0=0, select bank0
  5599  0172  1303               	bcf	3,6	;RP1=0, select bank0
  5600  0173  0866               	movf	Fuzzy@deltaRpm,w
  5601  0174  00C0               	movwf	trapmf@x
  5602  0175  0867               	movf	Fuzzy@deltaRpm+1,w
  5603  0176  00C1               	movwf	trapmf@x+1
  5604  0177  0868               	movf	Fuzzy@deltaRpm+2,w
  5605  0178  00C2               	movwf	trapmf@x+2
  5606  0179  3000               	movlw	0
  5607  017A  00C3               	movwf	trapmf@a
  5608  017B  3000               	movlw	0
  5609  017C  00C4               	movwf	trapmf@a+1
  5610  017D  3000               	movlw	0
  5611  017E  00C5               	movwf	trapmf@a+2
  5612  017F  3000               	movlw	0
  5613  0180  00C6               	movwf	trapmf@b
  5614  0181  3000               	movlw	0
  5615  0182  00C7               	movwf	trapmf@b+1
  5616  0183  3000               	movlw	0
  5617  0184  00C8               	movwf	trapmf@b+2
  5618  0185  3000               	movlw	0
  5619  0186  00C9               	movwf	trapmf@c
  5620  0187  3050               	movlw	80
  5621  0188  00CA               	movwf	trapmf@c+1
  5622  0189  3041               	movlw	65
  5623  018A  00CB               	movwf	trapmf@c+2
  5624  018B  3000               	movlw	0
  5625  018C  00CC               	movwf	trapmf@d
  5626  018D  3000               	movlw	0
  5627  018E  00CD               	movwf	trapmf@d+1
  5628  018F  3042               	movlw	66
  5629  0190  00CE               	movwf	trapmf@d+2
  5630  0191  120A  158A  24F3  120A  118A  	fcall	_trapmf
  5631  0196  1283               	bcf	3,5	;RP0=0, select bank0
  5632  0197  1303               	bcf	3,6	;RP1=0, select bank0
  5633  0198  0840               	movf	?_trapmf,w
  5634  0199  1683               	bsf	3,5	;RP0=1, select bank1
  5635  019A  1303               	bcf	3,6	;RP1=0, select bank1
  5636  019B  00A3               	movwf	_fitemp^(0+128)
  5637  019C  1283               	bcf	3,5	;RP0=0, select bank0
  5638  019D  1303               	bcf	3,6	;RP1=0, select bank0
  5639  019E  0841               	movf	?_trapmf+1,w
  5640  019F  1683               	bsf	3,5	;RP0=1, select bank1
  5641  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  5642  01A1  00A4               	movwf	(_fitemp+1)^(0+128)
  5643  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  5644  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  5645  01A4  0842               	movf	?_trapmf+2,w
  5646  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  5647  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  5648  01A7  00A5               	movwf	(_fitemp+2)^(0+128)
  5649                           
  5650                           ;main.c: 204: fop_rule1 = max_val(fitemp,0.1);
  5651  01A8  0823               	movf	_fitemp^(0+128),w
  5652  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  5653  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  5654  01AB  00BC               	movwf	max_val@a
  5655  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  5656  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  5657  01AE  0824               	movf	(_fitemp+1)^(0+128),w
  5658  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  5659  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  5660  01B1  00BD               	movwf	max_val@a+1
  5661  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  5662  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  5663  01B4  0825               	movf	(_fitemp+2)^(0+128),w
  5664  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  5665  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  5666  01B7  00BE               	movwf	max_val@a+2
  5667  01B8  30CD               	movlw	205
  5668  01B9  00BF               	movwf	max_val@b
  5669  01BA  30CC               	movlw	204
  5670  01BB  00C0               	movwf	max_val@b+1
  5671  01BC  303D               	movlw	61
  5672  01BD  00C1               	movwf	max_val@b+2
  5673  01BE  160A  118A  22B8  120A  118A  	fcall	_max_val
  5674  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  5675  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  5676  01C5  083C               	movf	?_max_val,w
  5677  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  5678  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  5679  01C8  00A6               	movwf	_fop_rule1^(0+128)
  5680  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  5681  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  5682  01CB  083D               	movf	?_max_val+1,w
  5683  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  5684  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  5685  01CE  00A7               	movwf	(_fop_rule1+1)^(0+128)
  5686  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  5687  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  5688  01D1  083E               	movf	?_max_val+2,w
  5689  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  5690  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  5691  01D4  00A8               	movwf	(_fop_rule1+2)^(0+128)
  5692                           
  5693                           ;main.c: 207: x=0;
  5694  01D5  3000               	movlw	0
  5695  01D6  00B5               	movwf	_x^(0+128)
  5696  01D7  3000               	movlw	0
  5697  01D8  00B6               	movwf	(_x+1)^(0+128)
  5698  01D9  3000               	movlw	0
  5699  01DA  00B7               	movwf	(_x+2)^(0+128)
  5700                           
  5701                           ;main.c: 208: y=0;
  5702  01DB  3000               	movlw	0
  5703  01DC  00B8               	movwf	_y^(0+128)
  5704  01DD  3000               	movlw	0
  5705  01DE  00B9               	movwf	(_y+1)^(0+128)
  5706  01DF  3000               	movlw	0
  5707  01E0  00BA               	movwf	(_y+2)^(0+128)
  5708                           
  5709                           ;main.c: 209: for (int a=0; a<=90; a++)
  5710  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  5711  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  5712  01E3  01D7               	clrf	Fuzzy@a
  5713  01E4  01D8               	clrf	Fuzzy@a+1
  5714  01E5  0858               	movf	Fuzzy@a+1,w
  5715  01E6  3A80               	xorlw	128
  5716  01E7  00FF               	movwf	127
  5717  01E8  3080               	movlw	128
  5718  01E9  027F               	subwf	127,w
  5719  01EA  1D03               	skipz
  5720  01EB  29EE               	goto	u338_25
  5721  01EC  305B               	movlw	91
  5722  01ED  0257               	subwf	Fuzzy@a,w
  5723  01EE                     u338_25:	
  5724  01EE  1803               	btfsc	3,0
  5725  01EF  2AD1               	goto	i1l2797
  5726  01F0                     i1l2787:	
  5727                           
  5728                           ;main.c: 210: {
  5729                           ;main.c: 211: y = trapmf(x,0,0,13,32);
  5730  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  5731  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  5732  01F2  0835               	movf	_x^(0+128),w
  5733  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  5734  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  5735  01F5  00C0               	movwf	trapmf@x
  5736  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  5737  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  5738  01F8  0836               	movf	(_x+1)^(0+128),w
  5739  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  5740  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  5741  01FB  00C1               	movwf	trapmf@x+1
  5742  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  5743  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  5744  01FE  0837               	movf	(_x+2)^(0+128),w
  5745  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  5746  0200  1303               	bcf	3,6	;RP1=0, select bank0
  5747  0201  00C2               	movwf	trapmf@x+2
  5748  0202  3000               	movlw	0
  5749  0203  00C3               	movwf	trapmf@a
  5750  0204  3000               	movlw	0
  5751  0205  00C4               	movwf	trapmf@a+1
  5752  0206  3000               	movlw	0
  5753  0207  00C5               	movwf	trapmf@a+2
  5754  0208  3000               	movlw	0
  5755  0209  00C6               	movwf	trapmf@b
  5756  020A  3000               	movlw	0
  5757  020B  00C7               	movwf	trapmf@b+1
  5758  020C  3000               	movlw	0
  5759  020D  00C8               	movwf	trapmf@b+2
  5760  020E  3000               	movlw	0
  5761  020F  00C9               	movwf	trapmf@c
  5762  0210  3050               	movlw	80
  5763  0211  00CA               	movwf	trapmf@c+1
  5764  0212  3041               	movlw	65
  5765  0213  00CB               	movwf	trapmf@c+2
  5766  0214  3000               	movlw	0
  5767  0215  00CC               	movwf	trapmf@d
  5768  0216  3000               	movlw	0
  5769  0217  00CD               	movwf	trapmf@d+1
  5770  0218  3042               	movlw	66
  5771  0219  00CE               	movwf	trapmf@d+2
  5772  021A  120A  158A  24F3  120A  118A  	fcall	_trapmf
  5773  021F  1283               	bcf	3,5	;RP0=0, select bank0
  5774  0220  1303               	bcf	3,6	;RP1=0, select bank0
  5775  0221  0840               	movf	?_trapmf,w
  5776  0222  1683               	bsf	3,5	;RP0=1, select bank1
  5777  0223  1303               	bcf	3,6	;RP1=0, select bank1
  5778  0224  00B8               	movwf	_y^(0+128)
  5779  0225  1283               	bcf	3,5	;RP0=0, select bank0
  5780  0226  1303               	bcf	3,6	;RP1=0, select bank0
  5781  0227  0841               	movf	?_trapmf+1,w
  5782  0228  1683               	bsf	3,5	;RP0=1, select bank1
  5783  0229  1303               	bcf	3,6	;RP1=0, select bank1
  5784  022A  00B9               	movwf	(_y+1)^(0+128)
  5785  022B  1283               	bcf	3,5	;RP0=0, select bank0
  5786  022C  1303               	bcf	3,6	;RP1=0, select bank0
  5787  022D  0842               	movf	?_trapmf+2,w
  5788  022E  1683               	bsf	3,5	;RP0=1, select bank1
  5789  022F  1303               	bcf	3,6	;RP1=0, select bank1
  5790  0230  00BA               	movwf	(_y+2)^(0+128)
  5791                           
  5792                           ;main.c: 213: if (y > fop_rule1)
  5793  0231  0826               	movf	_fop_rule1^(0+128),w
  5794  0232  1283               	bcf	3,5	;RP0=0, select bank0
  5795  0233  1303               	bcf	3,6	;RP1=0, select bank0
  5796  0234  00B0               	movwf	___ftge@ff1
  5797  0235  1683               	bsf	3,5	;RP0=1, select bank1
  5798  0236  1303               	bcf	3,6	;RP1=0, select bank1
  5799  0237  0827               	movf	(_fop_rule1+1)^(0+128),w
  5800  0238  1283               	bcf	3,5	;RP0=0, select bank0
  5801  0239  1303               	bcf	3,6	;RP1=0, select bank0
  5802  023A  00B1               	movwf	___ftge@ff1+1
  5803  023B  1683               	bsf	3,5	;RP0=1, select bank1
  5804  023C  1303               	bcf	3,6	;RP1=0, select bank1
  5805  023D  0828               	movf	(_fop_rule1+2)^(0+128),w
  5806  023E  1283               	bcf	3,5	;RP0=0, select bank0
  5807  023F  1303               	bcf	3,6	;RP1=0, select bank0
  5808  0240  00B2               	movwf	___ftge@ff1+2
  5809  0241  1683               	bsf	3,5	;RP0=1, select bank1
  5810  0242  1303               	bcf	3,6	;RP1=0, select bank1
  5811  0243  0838               	movf	_y^(0+128),w
  5812  0244  1283               	bcf	3,5	;RP0=0, select bank0
  5813  0245  1303               	bcf	3,6	;RP1=0, select bank0
  5814  0246  00B3               	movwf	___ftge@ff2
  5815  0247  1683               	bsf	3,5	;RP0=1, select bank1
  5816  0248  1303               	bcf	3,6	;RP1=0, select bank1
  5817  0249  0839               	movf	(_y+1)^(0+128),w
  5818  024A  1283               	bcf	3,5	;RP0=0, select bank0
  5819  024B  1303               	bcf	3,6	;RP1=0, select bank0
  5820  024C  00B4               	movwf	___ftge@ff2+1
  5821  024D  1683               	bsf	3,5	;RP0=1, select bank1
  5822  024E  1303               	bcf	3,6	;RP1=0, select bank1
  5823  024F  083A               	movf	(_y+2)^(0+128),w
  5824  0250  1283               	bcf	3,5	;RP0=0, select bank0
  5825  0251  1303               	bcf	3,6	;RP1=0, select bank0
  5826  0252  00B5               	movwf	___ftge@ff2+2
  5827  0253  160A  118A  2545  120A  118A  	fcall	___ftge
  5828  0258  1803               	btfsc	3,0
  5829  0259  2A6A               	goto	i1l2791
  5830                           
  5831                           ;main.c: 214: {
  5832                           ;main.c: 215: reduz += fop_rule1;
  5833  025A  1683               	bsf	3,5	;RP0=1, select bank1
  5834  025B  1303               	bcf	3,6	;RP1=0, select bank1
  5835  025C  0826               	movf	_fop_rule1^(0+128),w
  5836  025D  1283               	bcf	3,5	;RP0=0, select bank0
  5837  025E  1303               	bcf	3,6	;RP1=0, select bank0
  5838  025F  00A3               	movwf	___ftadd@f1
  5839  0260  1683               	bsf	3,5	;RP0=1, select bank1
  5840  0261  1303               	bcf	3,6	;RP1=0, select bank1
  5841  0262  0827               	movf	(_fop_rule1+1)^(0+128),w
  5842  0263  1283               	bcf	3,5	;RP0=0, select bank0
  5843  0264  1303               	bcf	3,6	;RP1=0, select bank0
  5844  0265  00A4               	movwf	___ftadd@f1+1
  5845  0266  1683               	bsf	3,5	;RP0=1, select bank1
  5846  0267  1303               	bcf	3,6	;RP1=0, select bank1
  5847  0268  0828               	movf	(_fop_rule1+2)^(0+128),w
  5848  0269  2A79               	goto	L3
  5849  026A                     i1l2791:	
  5850                           ;main.c: 216: }
  5851                           
  5852                           
  5853                           ;main.c: 217: else
  5854                           ;main.c: 218: {
  5855                           ;main.c: 219: reduz += y;
  5856  026A  1683               	bsf	3,5	;RP0=1, select bank1
  5857  026B  1303               	bcf	3,6	;RP1=0, select bank1
  5858  026C  0838               	movf	_y^(0+128),w
  5859  026D  1283               	bcf	3,5	;RP0=0, select bank0
  5860  026E  1303               	bcf	3,6	;RP1=0, select bank0
  5861  026F  00A3               	movwf	___ftadd@f1
  5862  0270  1683               	bsf	3,5	;RP0=1, select bank1
  5863  0271  1303               	bcf	3,6	;RP1=0, select bank1
  5864  0272  0839               	movf	(_y+1)^(0+128),w
  5865  0273  1283               	bcf	3,5	;RP0=0, select bank0
  5866  0274  1303               	bcf	3,6	;RP1=0, select bank0
  5867  0275  00A4               	movwf	___ftadd@f1+1
  5868  0276  1683               	bsf	3,5	;RP0=1, select bank1
  5869  0277  1303               	bcf	3,6	;RP1=0, select bank1
  5870  0278  083A               	movf	(_y+2)^(0+128),w
  5871  0279                     L3:	
  5872  0279  1283               	bcf	3,5	;RP0=0, select bank0
  5873  027A  1303               	bcf	3,6	;RP1=0, select bank0
  5874  027B  00A5               	movwf	___ftadd@f1+2
  5875  027C  0860               	movf	Fuzzy@reduz,w
  5876  027D  00A6               	movwf	___ftadd@f2
  5877  027E  0861               	movf	Fuzzy@reduz+1,w
  5878  027F  00A7               	movwf	___ftadd@f2+1
  5879  0280  0862               	movf	Fuzzy@reduz+2,w
  5880  0281  00A8               	movwf	___ftadd@f2+2
  5881  0282  120A  158A  2192  120A  118A  	fcall	___ftadd
  5882  0287  1283               	bcf	3,5	;RP0=0, select bank0
  5883  0288  1303               	bcf	3,6	;RP1=0, select bank0
  5884  0289  0823               	movf	?___ftadd,w
  5885  028A  00E0               	movwf	Fuzzy@reduz
  5886  028B  0824               	movf	?___ftadd+1,w
  5887  028C  00E1               	movwf	Fuzzy@reduz+1
  5888  028D  0825               	movf	?___ftadd+2,w
  5889  028E  00E2               	movwf	Fuzzy@reduz+2
  5890                           
  5891                           ;main.c: 220: }
  5892                           ;main.c: 222: x=x+1;
  5893  028F  3000               	movlw	0
  5894  0290  00A3               	movwf	___ftadd@f1
  5895  0291  3080               	movlw	128
  5896  0292  00A4               	movwf	___ftadd@f1+1
  5897  0293  303F               	movlw	63
  5898  0294  00A5               	movwf	___ftadd@f1+2
  5899  0295  1683               	bsf	3,5	;RP0=1, select bank1
  5900  0296  1303               	bcf	3,6	;RP1=0, select bank1
  5901  0297  0835               	movf	_x^(0+128),w
  5902  0298  1283               	bcf	3,5	;RP0=0, select bank0
  5903  0299  1303               	bcf	3,6	;RP1=0, select bank0
  5904  029A  00A6               	movwf	___ftadd@f2
  5905  029B  1683               	bsf	3,5	;RP0=1, select bank1
  5906  029C  1303               	bcf	3,6	;RP1=0, select bank1
  5907  029D  0836               	movf	(_x+1)^(0+128),w
  5908  029E  1283               	bcf	3,5	;RP0=0, select bank0
  5909  029F  1303               	bcf	3,6	;RP1=0, select bank0
  5910  02A0  00A7               	movwf	___ftadd@f2+1
  5911  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  5912  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  5913  02A3  0837               	movf	(_x+2)^(0+128),w
  5914  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  5915  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  5916  02A6  00A8               	movwf	___ftadd@f2+2
  5917  02A7  120A  158A  2192  120A  118A  	fcall	___ftadd
  5918  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  5919  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  5920  02AE  0823               	movf	?___ftadd,w
  5921  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  5922  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  5923  02B1  00B5               	movwf	_x^(0+128)
  5924  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  5925  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  5926  02B4  0824               	movf	?___ftadd+1,w
  5927  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  5928  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  5929  02B7  00B6               	movwf	(_x+1)^(0+128)
  5930  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  5931  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  5932  02BA  0825               	movf	?___ftadd+2,w
  5933  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  5934  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  5935  02BD  00B7               	movwf	(_x+2)^(0+128)
  5936  02BE  3001               	movlw	1
  5937  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  5938  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  5939  02C1  07D7               	addwf	Fuzzy@a,f
  5940  02C2  1803               	skipnc
  5941  02C3  0AD8               	incf	Fuzzy@a+1,f
  5942  02C4  3000               	movlw	0
  5943  02C5  07D8               	addwf	Fuzzy@a+1,f
  5944  02C6  0858               	movf	Fuzzy@a+1,w
  5945  02C7  3A80               	xorlw	128
  5946  02C8  00FF               	movwf	127
  5947  02C9  3080               	movlw	128
  5948  02CA  027F               	subwf	127,w
  5949  02CB  1D03               	skipz
  5950  02CC  2ACF               	goto	u340_25
  5951  02CD  305B               	movlw	91
  5952  02CE  0257               	subwf	Fuzzy@a,w
  5953  02CF                     u340_25:	
  5954  02CF  1C03               	skipc
  5955  02D0  29F0               	goto	i1l2787
  5956  02D1                     i1l2797:	
  5957                           
  5958                           ;main.c: 223: }
  5959                           ;main.c: 225: }
  5960                           ;main.c: 231: if ((deltaRpm > 20) && (deltaRpm < 70))
  5961  02D1  3000               	movlw	0
  5962  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  5963  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  5964  02D4  00B0               	movwf	___ftge@ff1
  5965  02D5  30A0               	movlw	160
  5966  02D6  00B1               	movwf	___ftge@ff1+1
  5967  02D7  3041               	movlw	65
  5968  02D8  00B2               	movwf	___ftge@ff1+2
  5969  02D9  0866               	movf	Fuzzy@deltaRpm,w
  5970  02DA  00B3               	movwf	___ftge@ff2
  5971  02DB  0867               	movf	Fuzzy@deltaRpm+1,w
  5972  02DC  00B4               	movwf	___ftge@ff2+1
  5973  02DD  0868               	movf	Fuzzy@deltaRpm+2,w
  5974  02DE  00B5               	movwf	___ftge@ff2+2
  5975  02DF  160A  118A  2545  120A  118A  	fcall	___ftge
  5976  02E4  1803               	btfsc	3,0
  5977  02E5  2C4F               	goto	i1l2823
  5978  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  5979  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  5980  02E8  0866               	movf	Fuzzy@deltaRpm,w
  5981  02E9  00B0               	movwf	___ftge@ff1
  5982  02EA  0867               	movf	Fuzzy@deltaRpm+1,w
  5983  02EB  00B1               	movwf	___ftge@ff1+1
  5984  02EC  0868               	movf	Fuzzy@deltaRpm+2,w
  5985  02ED  00B2               	movwf	___ftge@ff1+2
  5986  02EE  3000               	movlw	0
  5987  02EF  00B3               	movwf	___ftge@ff2
  5988  02F0  308C               	movlw	140
  5989  02F1  00B4               	movwf	___ftge@ff2+1
  5990  02F2  3042               	movlw	66
  5991  02F3  00B5               	movwf	___ftge@ff2+2
  5992  02F4  160A  118A  2545  120A  118A  	fcall	___ftge
  5993  02F9  1803               	btfsc	3,0
  5994  02FA  2C4F               	goto	i1l2823
  5995                           
  5996                           ;main.c: 232: {
  5997                           ;main.c: 235: fitemp = trimf(deltaRpm, 9, 45, 81);
  5998  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  5999  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  6000  02FD  0866               	movf	Fuzzy@deltaRpm,w
  6001  02FE  00C0               	movwf	trimf@x
  6002  02FF  0867               	movf	Fuzzy@deltaRpm+1,w
  6003  0300  00C1               	movwf	trimf@x+1
  6004  0301  0868               	movf	Fuzzy@deltaRpm+2,w
  6005  0302  00C2               	movwf	trimf@x+2
  6006  0303  3000               	movlw	0
  6007  0304  00C3               	movwf	trimf@a
  6008  0305  3010               	movlw	16
  6009  0306  00C4               	movwf	trimf@a+1
  6010  0307  3041               	movlw	65
  6011  0308  00C5               	movwf	trimf@a+2
  6012  0309  3000               	movlw	0
  6013  030A  00C6               	movwf	trimf@b
  6014  030B  3034               	movlw	52
  6015  030C  00C7               	movwf	trimf@b+1
  6016  030D  3042               	movlw	66
  6017  030E  00C8               	movwf	trimf@b+2
  6018  030F  3000               	movlw	0
  6019  0310  00C9               	movwf	trimf@c
  6020  0311  30A2               	movlw	162
  6021  0312  00CA               	movwf	trimf@c+1
  6022  0313  3042               	movlw	66
  6023  0314  00CB               	movwf	trimf@c+2
  6024  0315  120A  158A  229B  120A  118A  	fcall	_trimf
  6025  031A  1283               	bcf	3,5	;RP0=0, select bank0
  6026  031B  1303               	bcf	3,6	;RP1=0, select bank0
  6027  031C  0840               	movf	?_trimf,w
  6028  031D  1683               	bsf	3,5	;RP0=1, select bank1
  6029  031E  1303               	bcf	3,6	;RP1=0, select bank1
  6030  031F  00A3               	movwf	_fitemp^(0+128)
  6031  0320  1283               	bcf	3,5	;RP0=0, select bank0
  6032  0321  1303               	bcf	3,6	;RP1=0, select bank0
  6033  0322  0841               	movf	?_trimf+1,w
  6034  0323  1683               	bsf	3,5	;RP0=1, select bank1
  6035  0324  1303               	bcf	3,6	;RP1=0, select bank1
  6036  0325  00A4               	movwf	(_fitemp+1)^(0+128)
  6037  0326  1283               	bcf	3,5	;RP0=0, select bank0
  6038  0327  1303               	bcf	3,6	;RP1=0, select bank0
  6039  0328  0842               	movf	?_trimf+2,w
  6040  0329  1683               	bsf	3,5	;RP0=1, select bank1
  6041  032A  1303               	bcf	3,6	;RP1=0, select bank1
  6042  032B  00A5               	movwf	(_fitemp+2)^(0+128)
  6043                           
  6044                           ;main.c: 238: fop_rule2 = max_val(fitemp,0.1);
  6045  032C  0823               	movf	_fitemp^(0+128),w
  6046  032D  1283               	bcf	3,5	;RP0=0, select bank0
  6047  032E  1303               	bcf	3,6	;RP1=0, select bank0
  6048  032F  00BC               	movwf	max_val@a
  6049  0330  1683               	bsf	3,5	;RP0=1, select bank1
  6050  0331  1303               	bcf	3,6	;RP1=0, select bank1
  6051  0332  0824               	movf	(_fitemp+1)^(0+128),w
  6052  0333  1283               	bcf	3,5	;RP0=0, select bank0
  6053  0334  1303               	bcf	3,6	;RP1=0, select bank0
  6054  0335  00BD               	movwf	max_val@a+1
  6055  0336  1683               	bsf	3,5	;RP0=1, select bank1
  6056  0337  1303               	bcf	3,6	;RP1=0, select bank1
  6057  0338  0825               	movf	(_fitemp+2)^(0+128),w
  6058  0339  1283               	bcf	3,5	;RP0=0, select bank0
  6059  033A  1303               	bcf	3,6	;RP1=0, select bank0
  6060  033B  00BE               	movwf	max_val@a+2
  6061  033C  30CD               	movlw	205
  6062  033D  00BF               	movwf	max_val@b
  6063  033E  30CC               	movlw	204
  6064  033F  00C0               	movwf	max_val@b+1
  6065  0340  303D               	movlw	61
  6066  0341  00C1               	movwf	max_val@b+2
  6067  0342  160A  118A  22B8  120A  118A  	fcall	_max_val
  6068  0347  1283               	bcf	3,5	;RP0=0, select bank0
  6069  0348  1303               	bcf	3,6	;RP1=0, select bank0
  6070  0349  083C               	movf	?_max_val,w
  6071  034A  1683               	bsf	3,5	;RP0=1, select bank1
  6072  034B  1303               	bcf	3,6	;RP1=0, select bank1
  6073  034C  00A9               	movwf	_fop_rule2^(0+128)
  6074  034D  1283               	bcf	3,5	;RP0=0, select bank0
  6075  034E  1303               	bcf	3,6	;RP1=0, select bank0
  6076  034F  083D               	movf	?_max_val+1,w
  6077  0350  1683               	bsf	3,5	;RP0=1, select bank1
  6078  0351  1303               	bcf	3,6	;RP1=0, select bank1
  6079  0352  00AA               	movwf	(_fop_rule2+1)^(0+128)
  6080  0353  1283               	bcf	3,5	;RP0=0, select bank0
  6081  0354  1303               	bcf	3,6	;RP1=0, select bank0
  6082  0355  083E               	movf	?_max_val+2,w
  6083  0356  1683               	bsf	3,5	;RP0=1, select bank1
  6084  0357  1303               	bcf	3,6	;RP1=0, select bank1
  6085  0358  00AB               	movwf	(_fop_rule2+2)^(0+128)
  6086                           
  6087                           ;main.c: 241: x=0;
  6088  0359  3000               	movlw	0
  6089  035A  00B5               	movwf	_x^(0+128)
  6090  035B  3000               	movlw	0
  6091  035C  00B6               	movwf	(_x+1)^(0+128)
  6092  035D  3000               	movlw	0
  6093  035E  00B7               	movwf	(_x+2)^(0+128)
  6094                           
  6095                           ;main.c: 242: y=0;
  6096  035F  3000               	movlw	0
  6097  0360  00B8               	movwf	_y^(0+128)
  6098  0361  3000               	movlw	0
  6099  0362  00B9               	movwf	(_y+1)^(0+128)
  6100  0363  3000               	movlw	0
  6101  0364  00BA               	movwf	(_y+2)^(0+128)
  6102                           
  6103                           ;main.c: 243: for (int a=0; a<=90; a++)
  6104  0365  1283               	bcf	3,5	;RP0=0, select bank0
  6105  0366  1303               	bcf	3,6	;RP1=0, select bank0
  6106  0367  01D9               	clrf	Fuzzy@a_246
  6107  0368  01DA               	clrf	Fuzzy@a_246+1
  6108  0369  085A               	movf	Fuzzy@a_246+1,w
  6109  036A  3A80               	xorlw	128
  6110  036B  00FF               	movwf	127
  6111  036C  3080               	movlw	128
  6112  036D  027F               	subwf	127,w
  6113  036E  1D03               	skipz
  6114  036F  2B72               	goto	u343_25
  6115  0370  305B               	movlw	91
  6116  0371  0259               	subwf	Fuzzy@a_246,w
  6117  0372                     u343_25:	
  6118  0372  1803               	btfsc	3,0
  6119  0373  2C4F               	goto	i1l2823
  6120  0374                     i1l2813:	
  6121                           
  6122                           ;main.c: 244: {
  6123                           ;main.c: 245: y = trimf(x, 9, 45, 81);
  6124  0374  1683               	bsf	3,5	;RP0=1, select bank1
  6125  0375  1303               	bcf	3,6	;RP1=0, select bank1
  6126  0376  0835               	movf	_x^(0+128),w
  6127  0377  1283               	bcf	3,5	;RP0=0, select bank0
  6128  0378  1303               	bcf	3,6	;RP1=0, select bank0
  6129  0379  00C0               	movwf	trimf@x
  6130  037A  1683               	bsf	3,5	;RP0=1, select bank1
  6131  037B  1303               	bcf	3,6	;RP1=0, select bank1
  6132  037C  0836               	movf	(_x+1)^(0+128),w
  6133  037D  1283               	bcf	3,5	;RP0=0, select bank0
  6134  037E  1303               	bcf	3,6	;RP1=0, select bank0
  6135  037F  00C1               	movwf	trimf@x+1
  6136  0380  1683               	bsf	3,5	;RP0=1, select bank1
  6137  0381  1303               	bcf	3,6	;RP1=0, select bank1
  6138  0382  0837               	movf	(_x+2)^(0+128),w
  6139  0383  1283               	bcf	3,5	;RP0=0, select bank0
  6140  0384  1303               	bcf	3,6	;RP1=0, select bank0
  6141  0385  00C2               	movwf	trimf@x+2
  6142  0386  3000               	movlw	0
  6143  0387  00C3               	movwf	trimf@a
  6144  0388  3010               	movlw	16
  6145  0389  00C4               	movwf	trimf@a+1
  6146  038A  3041               	movlw	65
  6147  038B  00C5               	movwf	trimf@a+2
  6148  038C  3000               	movlw	0
  6149  038D  00C6               	movwf	trimf@b
  6150  038E  3034               	movlw	52
  6151  038F  00C7               	movwf	trimf@b+1
  6152  0390  3042               	movlw	66
  6153  0391  00C8               	movwf	trimf@b+2
  6154  0392  3000               	movlw	0
  6155  0393  00C9               	movwf	trimf@c
  6156  0394  30A2               	movlw	162
  6157  0395  00CA               	movwf	trimf@c+1
  6158  0396  3042               	movlw	66
  6159  0397  00CB               	movwf	trimf@c+2
  6160  0398  120A  158A  229B  120A  118A  	fcall	_trimf
  6161  039D  1283               	bcf	3,5	;RP0=0, select bank0
  6162  039E  1303               	bcf	3,6	;RP1=0, select bank0
  6163  039F  0840               	movf	?_trimf,w
  6164  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  6165  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  6166  03A2  00B8               	movwf	_y^(0+128)
  6167  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  6168  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  6169  03A5  0841               	movf	?_trimf+1,w
  6170  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  6171  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  6172  03A8  00B9               	movwf	(_y+1)^(0+128)
  6173  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  6174  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  6175  03AB  0842               	movf	?_trimf+2,w
  6176  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  6177  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  6178  03AE  00BA               	movwf	(_y+2)^(0+128)
  6179                           
  6180                           ;main.c: 247: if (y >= fop_rule2)
  6181  03AF  0838               	movf	_y^(0+128),w
  6182  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  6183  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  6184  03B2  00B0               	movwf	___ftge@ff1
  6185  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  6186  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  6187  03B5  0839               	movf	(_y+1)^(0+128),w
  6188  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  6189  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  6190  03B8  00B1               	movwf	___ftge@ff1+1
  6191  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  6192  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  6193  03BB  083A               	movf	(_y+2)^(0+128),w
  6194  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  6195  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  6196  03BE  00B2               	movwf	___ftge@ff1+2
  6197  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  6198  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  6199  03C1  0829               	movf	_fop_rule2^(0+128),w
  6200  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  6201  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  6202  03C4  00B3               	movwf	___ftge@ff2
  6203  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  6204  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  6205  03C7  082A               	movf	(_fop_rule2+1)^(0+128),w
  6206  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  6207  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  6208  03CA  00B4               	movwf	___ftge@ff2+1
  6209  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  6210  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  6211  03CD  082B               	movf	(_fop_rule2+2)^(0+128),w
  6212  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  6213  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  6214  03D0  00B5               	movwf	___ftge@ff2+2
  6215  03D1  160A  118A  2545  120A  118A  	fcall	___ftge
  6216  03D6  1C03               	btfss	3,0
  6217  03D7  2BE8               	goto	i1l2817
  6218                           
  6219                           ;main.c: 248: {
  6220                           ;main.c: 249: mantem += fop_rule2;
  6221  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  6222  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  6223  03DA  0829               	movf	_fop_rule2^(0+128),w
  6224  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  6225  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  6226  03DD  00A3               	movwf	___ftadd@f1
  6227  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  6228  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  6229  03E0  082A               	movf	(_fop_rule2+1)^(0+128),w
  6230  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  6231  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  6232  03E3  00A4               	movwf	___ftadd@f1+1
  6233  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  6234  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  6235  03E6  082B               	movf	(_fop_rule2+2)^(0+128),w
  6236  03E7  2BF7               	goto	L4
  6237  03E8                     i1l2817:	
  6238                           ;main.c: 250: }
  6239                           
  6240                           
  6241                           ;main.c: 251: else
  6242                           ;main.c: 252: {
  6243                           ;main.c: 253: mantem += y;
  6244  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  6245  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  6246  03EA  0838               	movf	_y^(0+128),w
  6247  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  6248  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  6249  03ED  00A3               	movwf	___ftadd@f1
  6250  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  6251  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  6252  03F0  0839               	movf	(_y+1)^(0+128),w
  6253  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  6254  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  6255  03F3  00A4               	movwf	___ftadd@f1+1
  6256  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  6257  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  6258  03F6  083A               	movf	(_y+2)^(0+128),w
  6259  03F7                     L4:	
  6260  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  6261  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  6262  03F9  00A5               	movwf	___ftadd@f1+2
  6263  03FA  085D               	movf	Fuzzy@mantem,w
  6264  03FB  00A6               	movwf	___ftadd@f2
  6265  03FC  085E               	movf	Fuzzy@mantem+1,w
  6266  03FD  00A7               	movwf	___ftadd@f2+1
  6267  03FE  085F               	movf	Fuzzy@mantem+2,w
  6268  03FF  00A8               	movwf	___ftadd@f2+2
  6269  0400  120A  158A  2192  120A  118A  	fcall	___ftadd
  6270  0405  1283               	bcf	3,5	;RP0=0, select bank0
  6271  0406  1303               	bcf	3,6	;RP1=0, select bank0
  6272  0407  0823               	movf	?___ftadd,w
  6273  0408  00DD               	movwf	Fuzzy@mantem
  6274  0409  0824               	movf	?___ftadd+1,w
  6275  040A  00DE               	movwf	Fuzzy@mantem+1
  6276  040B  0825               	movf	?___ftadd+2,w
  6277  040C  00DF               	movwf	Fuzzy@mantem+2
  6278                           
  6279                           ;main.c: 254: }
  6280                           ;main.c: 256: x=x+1;
  6281  040D  3000               	movlw	0
  6282  040E  00A3               	movwf	___ftadd@f1
  6283  040F  3080               	movlw	128
  6284  0410  00A4               	movwf	___ftadd@f1+1
  6285  0411  303F               	movlw	63
  6286  0412  00A5               	movwf	___ftadd@f1+2
  6287  0413  1683               	bsf	3,5	;RP0=1, select bank1
  6288  0414  1303               	bcf	3,6	;RP1=0, select bank1
  6289  0415  0835               	movf	_x^(0+128),w
  6290  0416  1283               	bcf	3,5	;RP0=0, select bank0
  6291  0417  1303               	bcf	3,6	;RP1=0, select bank0
  6292  0418  00A6               	movwf	___ftadd@f2
  6293  0419  1683               	bsf	3,5	;RP0=1, select bank1
  6294  041A  1303               	bcf	3,6	;RP1=0, select bank1
  6295  041B  0836               	movf	(_x+1)^(0+128),w
  6296  041C  1283               	bcf	3,5	;RP0=0, select bank0
  6297  041D  1303               	bcf	3,6	;RP1=0, select bank0
  6298  041E  00A7               	movwf	___ftadd@f2+1
  6299  041F  1683               	bsf	3,5	;RP0=1, select bank1
  6300  0420  1303               	bcf	3,6	;RP1=0, select bank1
  6301  0421  0837               	movf	(_x+2)^(0+128),w
  6302  0422  1283               	bcf	3,5	;RP0=0, select bank0
  6303  0423  1303               	bcf	3,6	;RP1=0, select bank0
  6304  0424  00A8               	movwf	___ftadd@f2+2
  6305  0425  120A  158A  2192  120A  118A  	fcall	___ftadd
  6306  042A  1283               	bcf	3,5	;RP0=0, select bank0
  6307  042B  1303               	bcf	3,6	;RP1=0, select bank0
  6308  042C  0823               	movf	?___ftadd,w
  6309  042D  1683               	bsf	3,5	;RP0=1, select bank1
  6310  042E  1303               	bcf	3,6	;RP1=0, select bank1
  6311  042F  00B5               	movwf	_x^(0+128)
  6312  0430  1283               	bcf	3,5	;RP0=0, select bank0
  6313  0431  1303               	bcf	3,6	;RP1=0, select bank0
  6314  0432  0824               	movf	?___ftadd+1,w
  6315  0433  1683               	bsf	3,5	;RP0=1, select bank1
  6316  0434  1303               	bcf	3,6	;RP1=0, select bank1
  6317  0435  00B6               	movwf	(_x+1)^(0+128)
  6318  0436  1283               	bcf	3,5	;RP0=0, select bank0
  6319  0437  1303               	bcf	3,6	;RP1=0, select bank0
  6320  0438  0825               	movf	?___ftadd+2,w
  6321  0439  1683               	bsf	3,5	;RP0=1, select bank1
  6322  043A  1303               	bcf	3,6	;RP1=0, select bank1
  6323  043B  00B7               	movwf	(_x+2)^(0+128)
  6324  043C  3001               	movlw	1
  6325  043D  1283               	bcf	3,5	;RP0=0, select bank0
  6326  043E  1303               	bcf	3,6	;RP1=0, select bank0
  6327  043F  07D9               	addwf	Fuzzy@a_246,f
  6328  0440  1803               	skipnc
  6329  0441  0ADA               	incf	Fuzzy@a_246+1,f
  6330  0442  3000               	movlw	0
  6331  0443  07DA               	addwf	Fuzzy@a_246+1,f
  6332  0444  085A               	movf	Fuzzy@a_246+1,w
  6333  0445  3A80               	xorlw	128
  6334  0446  00FF               	movwf	127
  6335  0447  3080               	movlw	128
  6336  0448  027F               	subwf	127,w
  6337  0449  1D03               	skipz
  6338  044A  2C4D               	goto	u345_25
  6339  044B  305B               	movlw	91
  6340  044C  0259               	subwf	Fuzzy@a_246,w
  6341  044D                     u345_25:	
  6342  044D  1C03               	skipc
  6343  044E  2B74               	goto	i1l2813
  6344  044F                     i1l2823:	
  6345                           
  6346                           ;main.c: 257: }
  6347                           ;main.c: 259: }
  6348                           ;main.c: 265: if (deltaRpm > 70 )
  6349  044F  3000               	movlw	0
  6350  0450  1283               	bcf	3,5	;RP0=0, select bank0
  6351  0451  1303               	bcf	3,6	;RP1=0, select bank0
  6352  0452  00B0               	movwf	___ftge@ff1
  6353  0453  308C               	movlw	140
  6354  0454  00B1               	movwf	___ftge@ff1+1
  6355  0455  3042               	movlw	66
  6356  0456  00B2               	movwf	___ftge@ff1+2
  6357  0457  0866               	movf	Fuzzy@deltaRpm,w
  6358  0458  00B3               	movwf	___ftge@ff2
  6359  0459  0867               	movf	Fuzzy@deltaRpm+1,w
  6360  045A  00B4               	movwf	___ftge@ff2+1
  6361  045B  0868               	movf	Fuzzy@deltaRpm+2,w
  6362  045C  00B5               	movwf	___ftge@ff2+2
  6363  045D  160A  118A  2545  120A  118A  	fcall	___ftge
  6364  0462  1803               	btfsc	3,0
  6365  0463  2DC4               	goto	i1l2847
  6366                           
  6367                           ;main.c: 266: {
  6368                           ;main.c: 269: fitemp = trapmf(deltaRpm, 62, 79, 90, 90);
  6369  0464  1283               	bcf	3,5	;RP0=0, select bank0
  6370  0465  1303               	bcf	3,6	;RP1=0, select bank0
  6371  0466  0866               	movf	Fuzzy@deltaRpm,w
  6372  0467  00C0               	movwf	trapmf@x
  6373  0468  0867               	movf	Fuzzy@deltaRpm+1,w
  6374  0469  00C1               	movwf	trapmf@x+1
  6375  046A  0868               	movf	Fuzzy@deltaRpm+2,w
  6376  046B  00C2               	movwf	trapmf@x+2
  6377  046C  3000               	movlw	0
  6378  046D  00C3               	movwf	trapmf@a
  6379  046E  3078               	movlw	120
  6380  046F  00C4               	movwf	trapmf@a+1
  6381  0470  3042               	movlw	66
  6382  0471  00C5               	movwf	trapmf@a+2
  6383  0472  3000               	movlw	0
  6384  0473  00C6               	movwf	trapmf@b
  6385  0474  309E               	movlw	158
  6386  0475  00C7               	movwf	trapmf@b+1
  6387  0476  3042               	movlw	66
  6388  0477  00C8               	movwf	trapmf@b+2
  6389  0478  3000               	movlw	0
  6390  0479  00C9               	movwf	trapmf@c
  6391  047A  30B4               	movlw	180
  6392  047B  00CA               	movwf	trapmf@c+1
  6393  047C  3042               	movlw	66
  6394  047D  00CB               	movwf	trapmf@c+2
  6395  047E  3000               	movlw	0
  6396  047F  00CC               	movwf	trapmf@d
  6397  0480  30B4               	movlw	180
  6398  0481  00CD               	movwf	trapmf@d+1
  6399  0482  3042               	movlw	66
  6400  0483  00CE               	movwf	trapmf@d+2
  6401  0484  120A  158A  24F3  120A  118A  	fcall	_trapmf
  6402  0489  1283               	bcf	3,5	;RP0=0, select bank0
  6403  048A  1303               	bcf	3,6	;RP1=0, select bank0
  6404  048B  0840               	movf	?_trapmf,w
  6405  048C  1683               	bsf	3,5	;RP0=1, select bank1
  6406  048D  1303               	bcf	3,6	;RP1=0, select bank1
  6407  048E  00A3               	movwf	_fitemp^(0+128)
  6408  048F  1283               	bcf	3,5	;RP0=0, select bank0
  6409  0490  1303               	bcf	3,6	;RP1=0, select bank0
  6410  0491  0841               	movf	?_trapmf+1,w
  6411  0492  1683               	bsf	3,5	;RP0=1, select bank1
  6412  0493  1303               	bcf	3,6	;RP1=0, select bank1
  6413  0494  00A4               	movwf	(_fitemp+1)^(0+128)
  6414  0495  1283               	bcf	3,5	;RP0=0, select bank0
  6415  0496  1303               	bcf	3,6	;RP1=0, select bank0
  6416  0497  0842               	movf	?_trapmf+2,w
  6417  0498  1683               	bsf	3,5	;RP0=1, select bank1
  6418  0499  1303               	bcf	3,6	;RP1=0, select bank1
  6419  049A  00A5               	movwf	(_fitemp+2)^(0+128)
  6420                           
  6421                           ;main.c: 273: fop_rule3 = max_val(fitemp,0.1);
  6422  049B  0823               	movf	_fitemp^(0+128),w
  6423  049C  1283               	bcf	3,5	;RP0=0, select bank0
  6424  049D  1303               	bcf	3,6	;RP1=0, select bank0
  6425  049E  00BC               	movwf	max_val@a
  6426  049F  1683               	bsf	3,5	;RP0=1, select bank1
  6427  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  6428  04A1  0824               	movf	(_fitemp+1)^(0+128),w
  6429  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  6430  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  6431  04A4  00BD               	movwf	max_val@a+1
  6432  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  6433  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  6434  04A7  0825               	movf	(_fitemp+2)^(0+128),w
  6435  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  6436  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  6437  04AA  00BE               	movwf	max_val@a+2
  6438  04AB  30CD               	movlw	205
  6439  04AC  00BF               	movwf	max_val@b
  6440  04AD  30CC               	movlw	204
  6441  04AE  00C0               	movwf	max_val@b+1
  6442  04AF  303D               	movlw	61
  6443  04B0  00C1               	movwf	max_val@b+2
  6444  04B1  160A  118A  22B8  120A  118A  	fcall	_max_val
  6445  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  6446  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  6447  04B8  083C               	movf	?_max_val,w
  6448  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  6449  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  6450  04BB  00AC               	movwf	_fop_rule3^(0+128)
  6451  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  6452  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  6453  04BE  083D               	movf	?_max_val+1,w
  6454  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  6455  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  6456  04C1  00AD               	movwf	(_fop_rule3+1)^(0+128)
  6457  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  6458  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  6459  04C4  083E               	movf	?_max_val+2,w
  6460  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  6461  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  6462  04C7  00AE               	movwf	(_fop_rule3+2)^(0+128)
  6463                           
  6464                           ;main.c: 276: x=0;
  6465  04C8  3000               	movlw	0
  6466  04C9  00B5               	movwf	_x^(0+128)
  6467  04CA  3000               	movlw	0
  6468  04CB  00B6               	movwf	(_x+1)^(0+128)
  6469  04CC  3000               	movlw	0
  6470  04CD  00B7               	movwf	(_x+2)^(0+128)
  6471                           
  6472                           ;main.c: 277: y=0;
  6473  04CE  3000               	movlw	0
  6474  04CF  00B8               	movwf	_y^(0+128)
  6475  04D0  3000               	movlw	0
  6476  04D1  00B9               	movwf	(_y+1)^(0+128)
  6477  04D2  3000               	movlw	0
  6478  04D3  00BA               	movwf	(_y+2)^(0+128)
  6479                           
  6480                           ;main.c: 278: for (int a=0; a<=90; a++)
  6481  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  6482  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  6483  04D6  01DB               	clrf	Fuzzy@a_247
  6484  04D7  01DC               	clrf	Fuzzy@a_247+1
  6485  04D8  085C               	movf	Fuzzy@a_247+1,w
  6486  04D9  3A80               	xorlw	128
  6487  04DA  00FF               	movwf	127
  6488  04DB  3080               	movlw	128
  6489  04DC  027F               	subwf	127,w
  6490  04DD  1D03               	skipz
  6491  04DE  2CE1               	goto	u347_25
  6492  04DF  305B               	movlw	91
  6493  04E0  025B               	subwf	Fuzzy@a_247,w
  6494  04E1                     u347_25:	
  6495  04E1  1803               	btfsc	3,0
  6496  04E2  2DC4               	goto	i1l2847
  6497  04E3                     i1l2837:	
  6498                           
  6499                           ;main.c: 279: {
  6500                           ;main.c: 280: y = trapmf(x, 62, 79, 90, 90);
  6501  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  6502  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  6503  04E5  0835               	movf	_x^(0+128),w
  6504  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  6505  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  6506  04E8  00C0               	movwf	trapmf@x
  6507  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  6508  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  6509  04EB  0836               	movf	(_x+1)^(0+128),w
  6510  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  6511  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  6512  04EE  00C1               	movwf	trapmf@x+1
  6513  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  6514  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  6515  04F1  0837               	movf	(_x+2)^(0+128),w
  6516  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  6517  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  6518  04F4  00C2               	movwf	trapmf@x+2
  6519  04F5  3000               	movlw	0
  6520  04F6  00C3               	movwf	trapmf@a
  6521  04F7  3078               	movlw	120
  6522  04F8  00C4               	movwf	trapmf@a+1
  6523  04F9  3042               	movlw	66
  6524  04FA  00C5               	movwf	trapmf@a+2
  6525  04FB  3000               	movlw	0
  6526  04FC  00C6               	movwf	trapmf@b
  6527  04FD  309E               	movlw	158
  6528  04FE  00C7               	movwf	trapmf@b+1
  6529  04FF  3042               	movlw	66
  6530  0500  00C8               	movwf	trapmf@b+2
  6531  0501  3000               	movlw	0
  6532  0502  00C9               	movwf	trapmf@c
  6533  0503  30B4               	movlw	180
  6534  0504  00CA               	movwf	trapmf@c+1
  6535  0505  3042               	movlw	66
  6536  0506  00CB               	movwf	trapmf@c+2
  6537  0507  3000               	movlw	0
  6538  0508  00CC               	movwf	trapmf@d
  6539  0509  30B4               	movlw	180
  6540  050A  00CD               	movwf	trapmf@d+1
  6541  050B  3042               	movlw	66
  6542  050C  00CE               	movwf	trapmf@d+2
  6543  050D  120A  158A  24F3  120A  118A  	fcall	_trapmf
  6544  0512  1283               	bcf	3,5	;RP0=0, select bank0
  6545  0513  1303               	bcf	3,6	;RP1=0, select bank0
  6546  0514  0840               	movf	?_trapmf,w
  6547  0515  1683               	bsf	3,5	;RP0=1, select bank1
  6548  0516  1303               	bcf	3,6	;RP1=0, select bank1
  6549  0517  00B8               	movwf	_y^(0+128)
  6550  0518  1283               	bcf	3,5	;RP0=0, select bank0
  6551  0519  1303               	bcf	3,6	;RP1=0, select bank0
  6552  051A  0841               	movf	?_trapmf+1,w
  6553  051B  1683               	bsf	3,5	;RP0=1, select bank1
  6554  051C  1303               	bcf	3,6	;RP1=0, select bank1
  6555  051D  00B9               	movwf	(_y+1)^(0+128)
  6556  051E  1283               	bcf	3,5	;RP0=0, select bank0
  6557  051F  1303               	bcf	3,6	;RP1=0, select bank0
  6558  0520  0842               	movf	?_trapmf+2,w
  6559  0521  1683               	bsf	3,5	;RP0=1, select bank1
  6560  0522  1303               	bcf	3,6	;RP1=0, select bank1
  6561  0523  00BA               	movwf	(_y+2)^(0+128)
  6562                           
  6563                           ;main.c: 282: if (y >= fop_rule3)
  6564  0524  0838               	movf	_y^(0+128),w
  6565  0525  1283               	bcf	3,5	;RP0=0, select bank0
  6566  0526  1303               	bcf	3,6	;RP1=0, select bank0
  6567  0527  00B0               	movwf	___ftge@ff1
  6568  0528  1683               	bsf	3,5	;RP0=1, select bank1
  6569  0529  1303               	bcf	3,6	;RP1=0, select bank1
  6570  052A  0839               	movf	(_y+1)^(0+128),w
  6571  052B  1283               	bcf	3,5	;RP0=0, select bank0
  6572  052C  1303               	bcf	3,6	;RP1=0, select bank0
  6573  052D  00B1               	movwf	___ftge@ff1+1
  6574  052E  1683               	bsf	3,5	;RP0=1, select bank1
  6575  052F  1303               	bcf	3,6	;RP1=0, select bank1
  6576  0530  083A               	movf	(_y+2)^(0+128),w
  6577  0531  1283               	bcf	3,5	;RP0=0, select bank0
  6578  0532  1303               	bcf	3,6	;RP1=0, select bank0
  6579  0533  00B2               	movwf	___ftge@ff1+2
  6580  0534  1683               	bsf	3,5	;RP0=1, select bank1
  6581  0535  1303               	bcf	3,6	;RP1=0, select bank1
  6582  0536  082C               	movf	_fop_rule3^(0+128),w
  6583  0537  1283               	bcf	3,5	;RP0=0, select bank0
  6584  0538  1303               	bcf	3,6	;RP1=0, select bank0
  6585  0539  00B3               	movwf	___ftge@ff2
  6586  053A  1683               	bsf	3,5	;RP0=1, select bank1
  6587  053B  1303               	bcf	3,6	;RP1=0, select bank1
  6588  053C  082D               	movf	(_fop_rule3+1)^(0+128),w
  6589  053D  1283               	bcf	3,5	;RP0=0, select bank0
  6590  053E  1303               	bcf	3,6	;RP1=0, select bank0
  6591  053F  00B4               	movwf	___ftge@ff2+1
  6592  0540  1683               	bsf	3,5	;RP0=1, select bank1
  6593  0541  1303               	bcf	3,6	;RP1=0, select bank1
  6594  0542  082E               	movf	(_fop_rule3+2)^(0+128),w
  6595  0543  1283               	bcf	3,5	;RP0=0, select bank0
  6596  0544  1303               	bcf	3,6	;RP1=0, select bank0
  6597  0545  00B5               	movwf	___ftge@ff2+2
  6598  0546  160A  118A  2545  120A  118A  	fcall	___ftge
  6599  054B  1C03               	btfss	3,0
  6600  054C  2D5D               	goto	i1l2841
  6601                           
  6602                           ;main.c: 283: {
  6603                           ;main.c: 284: aumenta += fop_rule3;
  6604  054D  1683               	bsf	3,5	;RP0=1, select bank1
  6605  054E  1303               	bcf	3,6	;RP1=0, select bank1
  6606  054F  082C               	movf	_fop_rule3^(0+128),w
  6607  0550  1283               	bcf	3,5	;RP0=0, select bank0
  6608  0551  1303               	bcf	3,6	;RP1=0, select bank0
  6609  0552  00A3               	movwf	___ftadd@f1
  6610  0553  1683               	bsf	3,5	;RP0=1, select bank1
  6611  0554  1303               	bcf	3,6	;RP1=0, select bank1
  6612  0555  082D               	movf	(_fop_rule3+1)^(0+128),w
  6613  0556  1283               	bcf	3,5	;RP0=0, select bank0
  6614  0557  1303               	bcf	3,6	;RP1=0, select bank0
  6615  0558  00A4               	movwf	___ftadd@f1+1
  6616  0559  1683               	bsf	3,5	;RP0=1, select bank1
  6617  055A  1303               	bcf	3,6	;RP1=0, select bank1
  6618  055B  082E               	movf	(_fop_rule3+2)^(0+128),w
  6619  055C  2D6C               	goto	L5
  6620  055D                     i1l2841:	
  6621                           ;main.c: 285: }
  6622                           
  6623                           
  6624                           ;main.c: 286: else
  6625                           ;main.c: 287: {
  6626                           ;main.c: 288: aumenta += y;
  6627  055D  1683               	bsf	3,5	;RP0=1, select bank1
  6628  055E  1303               	bcf	3,6	;RP1=0, select bank1
  6629  055F  0838               	movf	_y^(0+128),w
  6630  0560  1283               	bcf	3,5	;RP0=0, select bank0
  6631  0561  1303               	bcf	3,6	;RP1=0, select bank0
  6632  0562  00A3               	movwf	___ftadd@f1
  6633  0563  1683               	bsf	3,5	;RP0=1, select bank1
  6634  0564  1303               	bcf	3,6	;RP1=0, select bank1
  6635  0565  0839               	movf	(_y+1)^(0+128),w
  6636  0566  1283               	bcf	3,5	;RP0=0, select bank0
  6637  0567  1303               	bcf	3,6	;RP1=0, select bank0
  6638  0568  00A4               	movwf	___ftadd@f1+1
  6639  0569  1683               	bsf	3,5	;RP0=1, select bank1
  6640  056A  1303               	bcf	3,6	;RP1=0, select bank1
  6641  056B  083A               	movf	(_y+2)^(0+128),w
  6642  056C                     L5:	
  6643  056C  1283               	bcf	3,5	;RP0=0, select bank0
  6644  056D  1303               	bcf	3,6	;RP1=0, select bank0
  6645  056E  00A5               	movwf	___ftadd@f1+2
  6646  056F  0863               	movf	Fuzzy@aumenta,w
  6647  0570  00A6               	movwf	___ftadd@f2
  6648  0571  0864               	movf	Fuzzy@aumenta+1,w
  6649  0572  00A7               	movwf	___ftadd@f2+1
  6650  0573  0865               	movf	Fuzzy@aumenta+2,w
  6651  0574  00A8               	movwf	___ftadd@f2+2
  6652  0575  120A  158A  2192  120A  118A  	fcall	___ftadd
  6653  057A  1283               	bcf	3,5	;RP0=0, select bank0
  6654  057B  1303               	bcf	3,6	;RP1=0, select bank0
  6655  057C  0823               	movf	?___ftadd,w
  6656  057D  00E3               	movwf	Fuzzy@aumenta
  6657  057E  0824               	movf	?___ftadd+1,w
  6658  057F  00E4               	movwf	Fuzzy@aumenta+1
  6659  0580  0825               	movf	?___ftadd+2,w
  6660  0581  00E5               	movwf	Fuzzy@aumenta+2
  6661                           
  6662                           ;main.c: 289: }
  6663                           ;main.c: 291: x=x+1;
  6664  0582  3000               	movlw	0
  6665  0583  00A3               	movwf	___ftadd@f1
  6666  0584  3080               	movlw	128
  6667  0585  00A4               	movwf	___ftadd@f1+1
  6668  0586  303F               	movlw	63
  6669  0587  00A5               	movwf	___ftadd@f1+2
  6670  0588  1683               	bsf	3,5	;RP0=1, select bank1
  6671  0589  1303               	bcf	3,6	;RP1=0, select bank1
  6672  058A  0835               	movf	_x^(0+128),w
  6673  058B  1283               	bcf	3,5	;RP0=0, select bank0
  6674  058C  1303               	bcf	3,6	;RP1=0, select bank0
  6675  058D  00A6               	movwf	___ftadd@f2
  6676  058E  1683               	bsf	3,5	;RP0=1, select bank1
  6677  058F  1303               	bcf	3,6	;RP1=0, select bank1
  6678  0590  0836               	movf	(_x+1)^(0+128),w
  6679  0591  1283               	bcf	3,5	;RP0=0, select bank0
  6680  0592  1303               	bcf	3,6	;RP1=0, select bank0
  6681  0593  00A7               	movwf	___ftadd@f2+1
  6682  0594  1683               	bsf	3,5	;RP0=1, select bank1
  6683  0595  1303               	bcf	3,6	;RP1=0, select bank1
  6684  0596  0837               	movf	(_x+2)^(0+128),w
  6685  0597  1283               	bcf	3,5	;RP0=0, select bank0
  6686  0598  1303               	bcf	3,6	;RP1=0, select bank0
  6687  0599  00A8               	movwf	___ftadd@f2+2
  6688  059A  120A  158A  2192  120A  118A  	fcall	___ftadd
  6689  059F  1283               	bcf	3,5	;RP0=0, select bank0
  6690  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  6691  05A1  0823               	movf	?___ftadd,w
  6692  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  6693  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  6694  05A4  00B5               	movwf	_x^(0+128)
  6695  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6696  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  6697  05A7  0824               	movf	?___ftadd+1,w
  6698  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  6699  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  6700  05AA  00B6               	movwf	(_x+1)^(0+128)
  6701  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  6702  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  6703  05AD  0825               	movf	?___ftadd+2,w
  6704  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  6705  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  6706  05B0  00B7               	movwf	(_x+2)^(0+128)
  6707  05B1  3001               	movlw	1
  6708  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  6709  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  6710  05B4  07DB               	addwf	Fuzzy@a_247,f
  6711  05B5  1803               	skipnc
  6712  05B6  0ADC               	incf	Fuzzy@a_247+1,f
  6713  05B7  3000               	movlw	0
  6714  05B8  07DC               	addwf	Fuzzy@a_247+1,f
  6715  05B9  085C               	movf	Fuzzy@a_247+1,w
  6716  05BA  3A80               	xorlw	128
  6717  05BB  00FF               	movwf	127
  6718  05BC  3080               	movlw	128
  6719  05BD  027F               	subwf	127,w
  6720  05BE  1D03               	skipz
  6721  05BF  2DC2               	goto	u349_25
  6722  05C0  305B               	movlw	91
  6723  05C1  025B               	subwf	Fuzzy@a_247,w
  6724  05C2                     u349_25:	
  6725  05C2  1C03               	skipc
  6726  05C3  2CE3               	goto	i1l2837
  6727  05C4                     i1l2847:	
  6728                           
  6729                           ;main.c: 292: }
  6730                           ;main.c: 294: }
  6731                           ;main.c: 297: if (deltaRpm < 25)
  6732  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  6733  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  6734  05C6  0866               	movf	Fuzzy@deltaRpm,w
  6735  05C7  00B0               	movwf	___ftge@ff1
  6736  05C8  0867               	movf	Fuzzy@deltaRpm+1,w
  6737  05C9  00B1               	movwf	___ftge@ff1+1
  6738  05CA  0868               	movf	Fuzzy@deltaRpm+2,w
  6739  05CB  00B2               	movwf	___ftge@ff1+2
  6740  05CC  3000               	movlw	0
  6741  05CD  00B3               	movwf	___ftge@ff2
  6742  05CE  30C8               	movlw	200
  6743  05CF  00B4               	movwf	___ftge@ff2+1
  6744  05D0  3041               	movlw	65
  6745  05D1  00B5               	movwf	___ftge@ff2+2
  6746  05D2  160A  118A  2545  120A  118A  	fcall	___ftge
  6747  05D7  1803               	btfsc	3,0
  6748  05D8  2DE1               	goto	i1l2851
  6749                           
  6750                           ;main.c: 298: {
  6751                           ;main.c: 299: tip = reduz;
  6752  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  6753  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  6754  05DB  0860               	movf	Fuzzy@reduz,w
  6755  05DC  00D4               	movwf	Fuzzy@tip
  6756  05DD  0861               	movf	Fuzzy@reduz+1,w
  6757  05DE  00D5               	movwf	Fuzzy@tip+1
  6758  05DF  0862               	movf	Fuzzy@reduz+2,w
  6759  05E0  2E1A               	goto	L7
  6760  05E1                     i1l2851:	
  6761                           ;main.c: 300: }else
  6762                           
  6763                           
  6764                           ;main.c: 301: if (deltaRpm >= 25 && deltaRpm < 75)
  6765  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  6766  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  6767  05E3  0866               	movf	Fuzzy@deltaRpm,w
  6768  05E4  00B0               	movwf	___ftge@ff1
  6769  05E5  0867               	movf	Fuzzy@deltaRpm+1,w
  6770  05E6  00B1               	movwf	___ftge@ff1+1
  6771  05E7  0868               	movf	Fuzzy@deltaRpm+2,w
  6772  05E8  00B2               	movwf	___ftge@ff1+2
  6773  05E9  3000               	movlw	0
  6774  05EA  00B3               	movwf	___ftge@ff2
  6775  05EB  30C8               	movlw	200
  6776  05EC  00B4               	movwf	___ftge@ff2+1
  6777  05ED  3041               	movlw	65
  6778  05EE  00B5               	movwf	___ftge@ff2+2
  6779  05EF  160A  118A  2545  120A  118A  	fcall	___ftge
  6780  05F4  1C03               	btfss	3,0
  6781  05F5  2E13               	goto	i1l2857
  6782  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  6783  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  6784  05F8  0866               	movf	Fuzzy@deltaRpm,w
  6785  05F9  00B0               	movwf	___ftge@ff1
  6786  05FA  0867               	movf	Fuzzy@deltaRpm+1,w
  6787  05FB  00B1               	movwf	___ftge@ff1+1
  6788  05FC  0868               	movf	Fuzzy@deltaRpm+2,w
  6789  05FD  00B2               	movwf	___ftge@ff1+2
  6790  05FE  3000               	movlw	0
  6791  05FF  00B3               	movwf	___ftge@ff2
  6792  0600  3096               	movlw	150
  6793  0601  00B4               	movwf	___ftge@ff2+1
  6794  0602  3042               	movlw	66
  6795  0603  00B5               	movwf	___ftge@ff2+2
  6796  0604  160A  118A  2545  120A  118A  	fcall	___ftge
  6797  0609  1803               	btfsc	3,0
  6798  060A  2E13               	goto	i1l2857
  6799                           
  6800                           ;main.c: 302: {
  6801                           ;main.c: 303: tip = mantem;
  6802  060B  1283               	bcf	3,5	;RP0=0, select bank0
  6803  060C  1303               	bcf	3,6	;RP1=0, select bank0
  6804  060D  085D               	movf	Fuzzy@mantem,w
  6805  060E  00D4               	movwf	Fuzzy@tip
  6806  060F  085E               	movf	Fuzzy@mantem+1,w
  6807  0610  00D5               	movwf	Fuzzy@tip+1
  6808  0611  085F               	movf	Fuzzy@mantem+2,w
  6809  0612  2E1A               	goto	L7
  6810  0613                     i1l2857:	
  6811                           ;main.c: 304: }else
  6812                           
  6813                           
  6814                           ;main.c: 305: {
  6815                           ;main.c: 306: tip = aumenta;
  6816  0613  1283               	bcf	3,5	;RP0=0, select bank0
  6817  0614  1303               	bcf	3,6	;RP1=0, select bank0
  6818  0615  0863               	movf	Fuzzy@aumenta,w
  6819  0616  00D4               	movwf	Fuzzy@tip
  6820  0617  0864               	movf	Fuzzy@aumenta+1,w
  6821  0618  00D5               	movwf	Fuzzy@tip+1
  6822  0619  0865               	movf	Fuzzy@aumenta+2,w
  6823  061A                     L7:	
  6824  061A  00D6               	movwf	Fuzzy@tip+2
  6825                           
  6826                           ;main.c: 307: }
  6827                           ;main.c: 310: total_area = 90;
  6828  061B  3000               	movlw	0
  6829  061C  1683               	bsf	3,5	;RP0=1, select bank1
  6830  061D  1303               	bcf	3,6	;RP1=0, select bank1
  6831  061E  00B2               	movwf	_total_area^(0+128)
  6832  061F  30B4               	movlw	180
  6833  0620  00B3               	movwf	(_total_area+1)^(0+128)
  6834  0621  3042               	movlw	66
  6835  0622  00B4               	movwf	(_total_area+2)^(0+128)
  6836                           
  6837                           ;main.c: 311: sum = 0;
  6838  0623  3000               	movlw	0
  6839  0624  00AF               	movwf	_sum^(0+128)
  6840  0625  3000               	movlw	0
  6841  0626  00B0               	movwf	(_sum+1)^(0+128)
  6842  0627  3000               	movlw	0
  6843  0628  00B1               	movwf	(_sum+2)^(0+128)
  6844                           
  6845                           ;main.c: 312: sum = sum + tip;
  6846  0629  1283               	bcf	3,5	;RP0=0, select bank0
  6847  062A  1303               	bcf	3,6	;RP1=0, select bank0
  6848  062B  0854               	movf	Fuzzy@tip,w
  6849  062C  00A3               	movwf	___ftadd@f1
  6850  062D  0855               	movf	Fuzzy@tip+1,w
  6851  062E  00A4               	movwf	___ftadd@f1+1
  6852  062F  0856               	movf	Fuzzy@tip+2,w
  6853  0630  00A5               	movwf	___ftadd@f1+2
  6854  0631  1683               	bsf	3,5	;RP0=1, select bank1
  6855  0632  1303               	bcf	3,6	;RP1=0, select bank1
  6856  0633  082F               	movf	_sum^(0+128),w
  6857  0634  1283               	bcf	3,5	;RP0=0, select bank0
  6858  0635  1303               	bcf	3,6	;RP1=0, select bank0
  6859  0636  00A6               	movwf	___ftadd@f2
  6860  0637  1683               	bsf	3,5	;RP0=1, select bank1
  6861  0638  1303               	bcf	3,6	;RP1=0, select bank1
  6862  0639  0830               	movf	(_sum+1)^(0+128),w
  6863  063A  1283               	bcf	3,5	;RP0=0, select bank0
  6864  063B  1303               	bcf	3,6	;RP1=0, select bank0
  6865  063C  00A7               	movwf	___ftadd@f2+1
  6866  063D  1683               	bsf	3,5	;RP0=1, select bank1
  6867  063E  1303               	bcf	3,6	;RP1=0, select bank1
  6868  063F  0831               	movf	(_sum+2)^(0+128),w
  6869  0640  1283               	bcf	3,5	;RP0=0, select bank0
  6870  0641  1303               	bcf	3,6	;RP1=0, select bank0
  6871  0642  00A8               	movwf	___ftadd@f2+2
  6872  0643  120A  158A  2192  120A  118A  	fcall	___ftadd
  6873  0648  1283               	bcf	3,5	;RP0=0, select bank0
  6874  0649  1303               	bcf	3,6	;RP1=0, select bank0
  6875  064A  0823               	movf	?___ftadd,w
  6876  064B  1683               	bsf	3,5	;RP0=1, select bank1
  6877  064C  1303               	bcf	3,6	;RP1=0, select bank1
  6878  064D  00AF               	movwf	_sum^(0+128)
  6879  064E  1283               	bcf	3,5	;RP0=0, select bank0
  6880  064F  1303               	bcf	3,6	;RP1=0, select bank0
  6881  0650  0824               	movf	?___ftadd+1,w
  6882  0651  1683               	bsf	3,5	;RP0=1, select bank1
  6883  0652  1303               	bcf	3,6	;RP1=0, select bank1
  6884  0653  00B0               	movwf	(_sum+1)^(0+128)
  6885  0654  1283               	bcf	3,5	;RP0=0, select bank0
  6886  0655  1303               	bcf	3,6	;RP1=0, select bank0
  6887  0656  0825               	movf	?___ftadd+2,w
  6888  0657  1683               	bsf	3,5	;RP0=1, select bank1
  6889  0658  1303               	bcf	3,6	;RP1=0, select bank1
  6890  0659  00B1               	movwf	(_sum+2)^(0+128)
  6891                           
  6892                           ;main.c: 315: ativa_fan = sum/total_area;
  6893  065A  0832               	movf	_total_area^(0+128),w
  6894  065B  1283               	bcf	3,5	;RP0=0, select bank0
  6895  065C  1303               	bcf	3,6	;RP1=0, select bank0
  6896  065D  00B0               	movwf	___ftdiv@f2
  6897  065E  1683               	bsf	3,5	;RP0=1, select bank1
  6898  065F  1303               	bcf	3,6	;RP1=0, select bank1
  6899  0660  0833               	movf	(_total_area+1)^(0+128),w
  6900  0661  1283               	bcf	3,5	;RP0=0, select bank0
  6901  0662  1303               	bcf	3,6	;RP1=0, select bank0
  6902  0663  00B1               	movwf	___ftdiv@f2+1
  6903  0664  1683               	bsf	3,5	;RP0=1, select bank1
  6904  0665  1303               	bcf	3,6	;RP1=0, select bank1
  6905  0666  0834               	movf	(_total_area+2)^(0+128),w
  6906  0667  1283               	bcf	3,5	;RP0=0, select bank0
  6907  0668  1303               	bcf	3,6	;RP1=0, select bank0
  6908  0669  00B2               	movwf	___ftdiv@f2+2
  6909  066A  1683               	bsf	3,5	;RP0=1, select bank1
  6910  066B  1303               	bcf	3,6	;RP1=0, select bank1
  6911  066C  082F               	movf	_sum^(0+128),w
  6912  066D  1283               	bcf	3,5	;RP0=0, select bank0
  6913  066E  1303               	bcf	3,6	;RP1=0, select bank0
  6914  066F  00B3               	movwf	___ftdiv@f1
  6915  0670  1683               	bsf	3,5	;RP0=1, select bank1
  6916  0671  1303               	bcf	3,6	;RP1=0, select bank1
  6917  0672  0830               	movf	(_sum+1)^(0+128),w
  6918  0673  1283               	bcf	3,5	;RP0=0, select bank0
  6919  0674  1303               	bcf	3,6	;RP1=0, select bank0
  6920  0675  00B4               	movwf	___ftdiv@f1+1
  6921  0676  1683               	bsf	3,5	;RP0=1, select bank1
  6922  0677  1303               	bcf	3,6	;RP1=0, select bank1
  6923  0678  0831               	movf	(_sum+2)^(0+128),w
  6924  0679  1283               	bcf	3,5	;RP0=0, select bank0
  6925  067A  1303               	bcf	3,6	;RP1=0, select bank0
  6926  067B  00B5               	movwf	___ftdiv@f1+2
  6927  067C  160A  118A  2677  120A  118A  	fcall	___ftdiv
  6928  0681  1283               	bcf	3,5	;RP0=0, select bank0
  6929  0682  1303               	bcf	3,6	;RP1=0, select bank0
  6930  0683  0830               	movf	?___ftdiv,w
  6931  0684  1683               	bsf	3,5	;RP0=1, select bank1
  6932  0685  1303               	bcf	3,6	;RP1=0, select bank1
  6933  0686  00A0               	movwf	_ativa_fan^(0+128)
  6934  0687  1283               	bcf	3,5	;RP0=0, select bank0
  6935  0688  1303               	bcf	3,6	;RP1=0, select bank0
  6936  0689  0831               	movf	?___ftdiv+1,w
  6937  068A  1683               	bsf	3,5	;RP0=1, select bank1
  6938  068B  1303               	bcf	3,6	;RP1=0, select bank1
  6939  068C  00A1               	movwf	(_ativa_fan+1)^(0+128)
  6940  068D  1283               	bcf	3,5	;RP0=0, select bank0
  6941  068E  1303               	bcf	3,6	;RP1=0, select bank0
  6942  068F  0832               	movf	?___ftdiv+2,w
  6943  0690  1683               	bsf	3,5	;RP0=1, select bank1
  6944  0691  1303               	bcf	3,6	;RP1=0, select bank1
  6945  0692  00A2               	movwf	(_ativa_fan+2)^(0+128)
  6946                           
  6947                           ;main.c: 318: ativa_fan = ativa_fan*100;
  6948  0693  3000               	movlw	0
  6949  0694  00F8               	movwf	___ftmul@f1
  6950  0695  30C8               	movlw	200
  6951  0696  00F9               	movwf	___ftmul@f1+1
  6952  0697  3042               	movlw	66
  6953  0698  00FA               	movwf	___ftmul@f1+2
  6954  0699  0820               	movf	_ativa_fan^(0+128),w
  6955  069A  00FB               	movwf	___ftmul@f2
  6956  069B  0821               	movf	(_ativa_fan+1)^(0+128),w
  6957  069C  00FC               	movwf	___ftmul@f2+1
  6958  069D  0822               	movf	(_ativa_fan+2)^(0+128),w
  6959  069E  00FD               	movwf	___ftmul@f2+2
  6960  069F  160A  118A  272F  120A  118A  	fcall	___ftmul
  6961  06A4  0878               	movf	?___ftmul,w
  6962  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  6963  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  6964  06A7  00A0               	movwf	_ativa_fan^(0+128)
  6965  06A8  0879               	movf	?___ftmul+1,w
  6966  06A9  00A1               	movwf	(_ativa_fan+1)^(0+128)
  6967  06AA  087A               	movf	?___ftmul+2,w
  6968  06AB  00A2               	movwf	(_ativa_fan+2)^(0+128)
  6969                           
  6970                           ;main.c: 322: if (freio = 1)
  6971  06AC  3001               	movlw	1
  6972  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  6973  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  6974  06AF  00D2               	movwf	Fuzzy@freio
  6975  06B0  3000               	movlw	0
  6976  06B1  00D3               	movwf	Fuzzy@freio+1
  6977                           
  6978                           ;main.c: 323: {
  6979                           ;main.c: 324: if ((tf + deltaV) >0 && (tf + deltaV) < 1020)
  6980  06B2  3000               	movlw	0
  6981  06B3  00B0               	movwf	___ftge@ff1
  6982  06B4  3000               	movlw	0
  6983  06B5  00B1               	movwf	___ftge@ff1+1
  6984  06B6  3000               	movlw	0
  6985  06B7  00B2               	movwf	___ftge@ff1+2
  6986  06B8  086D               	movf	_tf,w
  6987  06B9  00A3               	movwf	___ftadd@f1
  6988  06BA  086E               	movf	_tf+1,w
  6989  06BB  00A4               	movwf	___ftadd@f1+1
  6990  06BC  086F               	movf	_tf+2,w
  6991  06BD  00A5               	movwf	___ftadd@f1+2
  6992  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  6993  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  6994  06C0  0840               	movf	(_deltaV+1)^(0+128),w
  6995  06C1  01F9               	clrf	___lwtoft@c+1
  6996  06C2  07F9               	addwf	___lwtoft@c+1,f
  6997  06C3  083F               	movf	_deltaV^(0+128),w
  6998  06C4  01F8               	clrf	___lwtoft@c
  6999  06C5  07F8               	addwf	___lwtoft@c,f
  7000  06C6  160A  118A  2256  120A  118A  	fcall	___lwtoft
  7001  06CB  0878               	movf	?___lwtoft,w
  7002  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  7003  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  7004  06CE  00A6               	movwf	___ftadd@f2
  7005  06CF  0879               	movf	?___lwtoft+1,w
  7006  06D0  00A7               	movwf	___ftadd@f2+1
  7007  06D1  087A               	movf	?___lwtoft+2,w
  7008  06D2  00A8               	movwf	___ftadd@f2+2
  7009  06D3  120A  158A  2192  120A  118A  	fcall	___ftadd
  7010  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  7011  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  7012  06DA  0823               	movf	?___ftadd,w
  7013  06DB  00B3               	movwf	___ftge@ff2
  7014  06DC  0824               	movf	?___ftadd+1,w
  7015  06DD  00B4               	movwf	___ftge@ff2+1
  7016  06DE  0825               	movf	?___ftadd+2,w
  7017  06DF  00B5               	movwf	___ftge@ff2+2
  7018  06E0  160A  118A  2545  120A  118A  	fcall	___ftge
  7019  06E5  1803               	btfsc	3,0
  7020  06E6  0008               	return
  7021  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  7022  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  7023  06E9  086D               	movf	_tf,w
  7024  06EA  00A3               	movwf	___ftadd@f1
  7025  06EB  086E               	movf	_tf+1,w
  7026  06EC  00A4               	movwf	___ftadd@f1+1
  7027  06ED  086F               	movf	_tf+2,w
  7028  06EE  00A5               	movwf	___ftadd@f1+2
  7029  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  7030  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  7031  06F1  0840               	movf	(_deltaV+1)^(0+128),w
  7032  06F2  01F9               	clrf	___lwtoft@c+1
  7033  06F3  07F9               	addwf	___lwtoft@c+1,f
  7034  06F4  083F               	movf	_deltaV^(0+128),w
  7035  06F5  01F8               	clrf	___lwtoft@c
  7036  06F6  07F8               	addwf	___lwtoft@c,f
  7037  06F7  160A  118A  2256  120A  118A  	fcall	___lwtoft
  7038  06FC  0878               	movf	?___lwtoft,w
  7039  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  7040  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  7041  06FF  00A6               	movwf	___ftadd@f2
  7042  0700  0879               	movf	?___lwtoft+1,w
  7043  0701  00A7               	movwf	___ftadd@f2+1
  7044  0702  087A               	movf	?___lwtoft+2,w
  7045  0703  00A8               	movwf	___ftadd@f2+2
  7046  0704  120A  158A  2192  120A  118A  	fcall	___ftadd
  7047  0709  1283               	bcf	3,5	;RP0=0, select bank0
  7048  070A  1303               	bcf	3,6	;RP1=0, select bank0
  7049  070B  0823               	movf	?___ftadd,w
  7050  070C  00B0               	movwf	___ftge@ff1
  7051  070D  0824               	movf	?___ftadd+1,w
  7052  070E  00B1               	movwf	___ftge@ff1+1
  7053  070F  0825               	movf	?___ftadd+2,w
  7054  0710  00B2               	movwf	___ftge@ff1+2
  7055  0711  3000               	movlw	0
  7056  0712  00B3               	movwf	___ftge@ff2
  7057  0713  307F               	movlw	127
  7058  0714  00B4               	movwf	___ftge@ff2+1
  7059  0715  3044               	movlw	68
  7060  0716  00B5               	movwf	___ftge@ff2+2
  7061  0717  160A  118A  2545  120A  118A  	fcall	___ftge
  7062  071C  1803               	btfsc	3,0
  7063  071D  0008               	return
  7064                           
  7065                           ;main.c: 325: {
  7066                           ;main.c: 326: PWM_DutyCycle2(tf + deltaV);
  7067  071E  1683               	bsf	3,5	;RP0=1, select bank1
  7068  071F  1303               	bcf	3,6	;RP1=0, select bank1
  7069  0720  0840               	movf	(_deltaV+1)^(0+128),w
  7070  0721  01F9               	clrf	___lwtoft@c+1
  7071  0722  07F9               	addwf	___lwtoft@c+1,f
  7072  0723  083F               	movf	_deltaV^(0+128),w
  7073  0724  01F8               	clrf	___lwtoft@c
  7074  0725  07F8               	addwf	___lwtoft@c,f
  7075  0726  160A  118A  2256  120A  118A  	fcall	___lwtoft
  7076  072B  0878               	movf	?___lwtoft,w
  7077  072C  1283               	bcf	3,5	;RP0=0, select bank0
  7078  072D  1303               	bcf	3,6	;RP1=0, select bank0
  7079  072E  00A6               	movwf	___ftadd@f2
  7080  072F  0879               	movf	?___lwtoft+1,w
  7081  0730  00A7               	movwf	___ftadd@f2+1
  7082  0731  087A               	movf	?___lwtoft+2,w
  7083  0732  00A8               	movwf	___ftadd@f2+2
  7084  0733  086D               	movf	_tf,w
  7085  0734  00A3               	movwf	___ftadd@f1
  7086  0735  086E               	movf	_tf+1,w
  7087  0736  00A4               	movwf	___ftadd@f1+1
  7088  0737  086F               	movf	_tf+2,w
  7089  0738  00A5               	movwf	___ftadd@f1+2
  7090  0739  120A  158A  2192  120A  118A  	fcall	___ftadd
  7091  073E  1283               	bcf	3,5	;RP0=0, select bank0
  7092  073F  1303               	bcf	3,6	;RP1=0, select bank0
  7093  0740  0823               	movf	?___ftadd,w
  7094  0741  00B0               	movwf	___fttol@f1
  7095  0742  0824               	movf	?___ftadd+1,w
  7096  0743  00B1               	movwf	___fttol@f1+1
  7097  0744  0825               	movf	?___ftadd+2,w
  7098  0745  00B2               	movwf	___fttol@f1+2
  7099  0746  120A  158A  2018  120A  118A  	fcall	___fttol
  7100  074B  1283               	bcf	3,5	;RP0=0, select bank0
  7101  074C  1303               	bcf	3,6	;RP1=0, select bank0
  7102  074D  0831               	movf	?___fttol+1,w
  7103  074E  01BF               	clrf	i1PWM_DutyCycle2@valor+1
  7104  074F  07BF               	addwf	i1PWM_DutyCycle2@valor+1,f
  7105  0750  0830               	movf	?___fttol,w
  7106  0751  01BE               	clrf	i1PWM_DutyCycle2@valor
  7107  0752  07BE               	addwf	i1PWM_DutyCycle2@valor,f
  7108  0753  160A  118A  2281   	fcall	i1_PWM_DutyCycle2
  7109                           
  7110                           ;main.c: 327: }
  7111                           ;main.c: 328: }else
  7112  0756  0008               	return
  7113  0757                     __end_of_Fuzzy:	
  7114                           ;main.c: 331: {
  7115                           ;main.c: 332: PWM_DutyCycle2(tf - deltaV);
  7116                           
  7117                           ;main.c: 329: {
  7118                           ;main.c: 330: if ((tf - deltaV) >0 && (tf - deltaV) < 1020)
  7119                           
  7120                           
  7121                           	psect	text29
  7122  1281                     __ptext29:	
  7123 ;; *************** function i1_PWM_DutyCycle2 *****************
  7124 ;; Defined at:
  7125 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  valor           2   30[BANK0 ] int 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;		None
  7130 ;; Return value:  Size  Location     Type
  7131 ;;		None               void
  7132 ;; Registers used:
  7133 ;;		wreg, status,2, status,0
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7139 ;;      Params:         0       2       0       0       0
  7140 ;;      Locals:         0       0       0       0       0
  7141 ;;      Temps:          2       0       0       0       0
  7142 ;;      Totals:         2       2       0       0       0
  7143 ;;Total ram usage:        4 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		_Fuzzy
  7149 ;;		_ISR
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           
  7154                           ;psect for function i1_PWM_DutyCycle2
  7155  1281                     i1_PWM_DutyCycle2:	
  7156                           
  7157                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7158                           
  7159                           ;incstack = 0
  7160                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7161  1281  1283               	bcf	3,5	;RP0=0, select bank0
  7162  1282  1303               	bcf	3,6	;RP1=0, select bank0
  7163  1283  083F               	movf	i1PWM_DutyCycle2@valor+1,w
  7164  1284  00FD               	movwf	??i1_PWM_DutyCycle2+1
  7165  1285  083E               	movf	i1PWM_DutyCycle2@valor,w
  7166  1286  00FC               	movwf	??i1_PWM_DutyCycle2
  7167  1287  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  7168  1288  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  7169  1289  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  7170  128A  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  7171  128B  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  7172  128C  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  7173  128D  087C               	movf	??i1_PWM_DutyCycle2,w
  7174  128E  009B               	movwf	27	;volatile
  7175                           
  7176                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7177  128F  083E               	movf	i1PWM_DutyCycle2@valor,w
  7178  1290  00FC               	movwf	??i1_PWM_DutyCycle2
  7179  1291  3003               	movlw	3
  7180  1292                     u331_25:	
  7181  1292  1003               	clrc
  7182  1293  0DFC               	rlf	??i1_PWM_DutyCycle2,f
  7183  1294  3EFF               	addlw	-1
  7184  1295  1D03               	skipz
  7185  1296  2A92               	goto	u331_25
  7186  1297  1003               	clrc
  7187  1298  0D7C               	rlf	??i1_PWM_DutyCycle2,w
  7188  1299  380C               	iorlw	12
  7189  129A  009D               	movwf	29	;volatile
  7190  129B  0008               	return
  7191  129C                     __end_ofi1_PWM_DutyCycle2:	
  7192                           
  7193                           	psect	text30
  7194  0A9B                     __ptext30:	
  7195 ;; *************** function _trimf *****************
  7196 ;; Defined at:
  7197 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;  x               3   32[BANK0 ] float 
  7200 ;;  a               3   35[BANK0 ] float 
  7201 ;;  b               3   38[BANK0 ] float 
  7202 ;;  c               3   41[BANK0 ] float 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;  ua              3   44[BANK0 ] float 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  3   32[BANK0 ] float 
  7207 ;; Registers used:
  7208 ;;		wreg, status,2, status,0, pclath, cstack
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7214 ;;      Params:         0      12       0       0       0
  7215 ;;      Locals:         0       3       0       0       0
  7216 ;;      Temps:          0       0       0       0       0
  7217 ;;      Totals:         0      15       0       0       0
  7218 ;;Total ram usage:       15 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    2
  7221 ;; This function calls:
  7222 ;;		___ftadd
  7223 ;;		___ftdiv
  7224 ;;		___ftge
  7225 ;;		___ftneg
  7226 ;; This function is called by:
  7227 ;;		_Fuzzy
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           
  7232                           ;psect for function _trimf
  7233  0A9B                     _trimf:	
  7234                           
  7235                           ;main.c: 65: float ua = 0;
  7236                           
  7237                           ;incstack = 0
  7238                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7239  0A9B  3000               	movlw	0
  7240  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  7241  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  7242  0A9E  00CC               	movwf	trimf@ua
  7243  0A9F  3000               	movlw	0
  7244  0AA0  00CD               	movwf	trimf@ua+1
  7245  0AA1  3000               	movlw	0
  7246  0AA2  00CE               	movwf	trimf@ua+2
  7247                           
  7248                           ;main.c: 67: if (x <= a)
  7249  0AA3  0843               	movf	trimf@a,w
  7250  0AA4  00B0               	movwf	___ftge@ff1
  7251  0AA5  0844               	movf	trimf@a+1,w
  7252  0AA6  00B1               	movwf	___ftge@ff1+1
  7253  0AA7  0845               	movf	trimf@a+2,w
  7254  0AA8  00B2               	movwf	___ftge@ff1+2
  7255  0AA9  0840               	movf	trimf@x,w
  7256  0AAA  00B3               	movwf	___ftge@ff2
  7257  0AAB  0841               	movf	trimf@x+1,w
  7258  0AAC  00B4               	movwf	___ftge@ff2+1
  7259  0AAD  0842               	movf	trimf@x+2,w
  7260  0AAE  00B5               	movwf	___ftge@ff2+2
  7261  0AAF  160A  118A  2545  120A  158A  	fcall	___ftge
  7262  0AB4  1803               	btfsc	3,0
  7263  0AB5  2BAE               	goto	L12
  7264                           
  7265                           ;main.c: 69: else if ((a < x) && (x <= b))
  7266                           
  7267                           ;main.c: 68: ua = 0;
  7268  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  7269  0AB7  1303               	bcf	3,6	;RP1=0, select bank0
  7270  0AB8  0843               	movf	trimf@a,w
  7271  0AB9  00B0               	movwf	___ftge@ff1
  7272  0ABA  0844               	movf	trimf@a+1,w
  7273  0ABB  00B1               	movwf	___ftge@ff1+1
  7274  0ABC  0845               	movf	trimf@a+2,w
  7275  0ABD  00B2               	movwf	___ftge@ff1+2
  7276  0ABE  0840               	movf	trimf@x,w
  7277  0ABF  00B3               	movwf	___ftge@ff2
  7278  0AC0  0841               	movf	trimf@x+1,w
  7279  0AC1  00B4               	movwf	___ftge@ff2+1
  7280  0AC2  0842               	movf	trimf@x+2,w
  7281  0AC3  00B5               	movwf	___ftge@ff2+2
  7282  0AC4  160A  118A  2545  120A  158A  	fcall	___ftge
  7283  0AC9  1803               	btfsc	3,0
  7284  0ACA  2B14               	goto	i1l2423
  7285  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  7286  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  7287  0ACD  0846               	movf	trimf@b,w
  7288  0ACE  00B0               	movwf	___ftge@ff1
  7289  0ACF  0847               	movf	trimf@b+1,w
  7290  0AD0  00B1               	movwf	___ftge@ff1+1
  7291  0AD1  0848               	movf	trimf@b+2,w
  7292  0AD2  00B2               	movwf	___ftge@ff1+2
  7293  0AD3  0840               	movf	trimf@x,w
  7294  0AD4  00B3               	movwf	___ftge@ff2
  7295  0AD5  0841               	movf	trimf@x+1,w
  7296  0AD6  00B4               	movwf	___ftge@ff2+1
  7297  0AD7  0842               	movf	trimf@x+2,w
  7298  0AD8  00B5               	movwf	___ftge@ff2+2
  7299  0AD9  160A  118A  2545  120A  158A  	fcall	___ftge
  7300  0ADE  1C03               	btfss	3,0
  7301  0ADF  2B14               	goto	i1l2423
  7302                           
  7303                           ;main.c: 70: ua = ((x - a) / (b - a));
  7304  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  7305  0AE1  1303               	bcf	3,6	;RP1=0, select bank0
  7306  0AE2  0846               	movf	trimf@b,w
  7307  0AE3  00A3               	movwf	___ftadd@f1
  7308  0AE4  0847               	movf	trimf@b+1,w
  7309  0AE5  00A4               	movwf	___ftadd@f1+1
  7310  0AE6  0848               	movf	trimf@b+2,w
  7311  0AE7  00A5               	movwf	___ftadd@f1+2
  7312  0AE8  0843               	movf	trimf@a,w
  7313  0AE9  00A0               	movwf	___ftneg@f1
  7314  0AEA  0844               	movf	trimf@a+1,w
  7315  0AEB  00A1               	movwf	___ftneg@f1+1
  7316  0AEC  0845               	movf	trimf@a+2,w
  7317  0AED  00A2               	movwf	___ftneg@f1+2
  7318  0AEE  160A  118A  221F  120A  158A  	fcall	___ftneg
  7319  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  7320  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  7321  0AF5  0820               	movf	?___ftneg,w
  7322  0AF6  00A6               	movwf	___ftadd@f2
  7323  0AF7  0821               	movf	?___ftneg+1,w
  7324  0AF8  00A7               	movwf	___ftadd@f2+1
  7325  0AF9  0822               	movf	?___ftneg+2,w
  7326  0AFA  00A8               	movwf	___ftadd@f2+2
  7327  0AFB  120A  158A  2192  120A  158A  	fcall	___ftadd
  7328  0B00  1283               	bcf	3,5	;RP0=0, select bank0
  7329  0B01  1303               	bcf	3,6	;RP1=0, select bank0
  7330  0B02  0823               	movf	?___ftadd,w
  7331  0B03  00B0               	movwf	___ftdiv@f2
  7332  0B04  0824               	movf	?___ftadd+1,w
  7333  0B05  00B1               	movwf	___ftdiv@f2+1
  7334  0B06  0825               	movf	?___ftadd+2,w
  7335  0B07  00B2               	movwf	___ftdiv@f2+2
  7336  0B08  0840               	movf	trimf@x,w
  7337  0B09  00A3               	movwf	___ftadd@f1
  7338  0B0A  0841               	movf	trimf@x+1,w
  7339  0B0B  00A4               	movwf	___ftadd@f1+1
  7340  0B0C  0842               	movf	trimf@x+2,w
  7341  0B0D  00A5               	movwf	___ftadd@f1+2
  7342  0B0E  0843               	movf	trimf@a,w
  7343  0B0F  00A0               	movwf	___ftneg@f1
  7344  0B10  0844               	movf	trimf@a+1,w
  7345  0B11  00A1               	movwf	___ftneg@f1+1
  7346  0B12  0845               	movf	trimf@a+2,w
  7347  0B13  2B71               	goto	L13
  7348  0B14                     i1l2423:	
  7349                           
  7350                           ;main.c: 71: else if ((b < x) && (x <= c))
  7351  0B14  1283               	bcf	3,5	;RP0=0, select bank0
  7352  0B15  1303               	bcf	3,6	;RP1=0, select bank0
  7353  0B16  0846               	movf	trimf@b,w
  7354  0B17  00B0               	movwf	___ftge@ff1
  7355  0B18  0847               	movf	trimf@b+1,w
  7356  0B19  00B1               	movwf	___ftge@ff1+1
  7357  0B1A  0848               	movf	trimf@b+2,w
  7358  0B1B  00B2               	movwf	___ftge@ff1+2
  7359  0B1C  0840               	movf	trimf@x,w
  7360  0B1D  00B3               	movwf	___ftge@ff2
  7361  0B1E  0841               	movf	trimf@x+1,w
  7362  0B1F  00B4               	movwf	___ftge@ff2+1
  7363  0B20  0842               	movf	trimf@x+2,w
  7364  0B21  00B5               	movwf	___ftge@ff2+2
  7365  0B22  160A  118A  2545  120A  158A  	fcall	___ftge
  7366  0B27  1803               	btfsc	3,0
  7367  0B28  2B99               	goto	i1l2429
  7368  0B29  1283               	bcf	3,5	;RP0=0, select bank0
  7369  0B2A  1303               	bcf	3,6	;RP1=0, select bank0
  7370  0B2B  0849               	movf	trimf@c,w
  7371  0B2C  00B0               	movwf	___ftge@ff1
  7372  0B2D  084A               	movf	trimf@c+1,w
  7373  0B2E  00B1               	movwf	___ftge@ff1+1
  7374  0B2F  084B               	movf	trimf@c+2,w
  7375  0B30  00B2               	movwf	___ftge@ff1+2
  7376  0B31  0840               	movf	trimf@x,w
  7377  0B32  00B3               	movwf	___ftge@ff2
  7378  0B33  0841               	movf	trimf@x+1,w
  7379  0B34  00B4               	movwf	___ftge@ff2+1
  7380  0B35  0842               	movf	trimf@x+2,w
  7381  0B36  00B5               	movwf	___ftge@ff2+2
  7382  0B37  160A  118A  2545  120A  158A  	fcall	___ftge
  7383  0B3C  1C03               	btfss	3,0
  7384  0B3D  2B99               	goto	i1l2429
  7385                           
  7386                           ;main.c: 72: ua = ((x - c) / (b - c));
  7387  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  7388  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  7389  0B40  0846               	movf	trimf@b,w
  7390  0B41  00A3               	movwf	___ftadd@f1
  7391  0B42  0847               	movf	trimf@b+1,w
  7392  0B43  00A4               	movwf	___ftadd@f1+1
  7393  0B44  0848               	movf	trimf@b+2,w
  7394  0B45  00A5               	movwf	___ftadd@f1+2
  7395  0B46  0849               	movf	trimf@c,w
  7396  0B47  00A0               	movwf	___ftneg@f1
  7397  0B48  084A               	movf	trimf@c+1,w
  7398  0B49  00A1               	movwf	___ftneg@f1+1
  7399  0B4A  084B               	movf	trimf@c+2,w
  7400  0B4B  00A2               	movwf	___ftneg@f1+2
  7401  0B4C  160A  118A  221F  120A  158A  	fcall	___ftneg
  7402  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  7403  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  7404  0B53  0820               	movf	?___ftneg,w
  7405  0B54  00A6               	movwf	___ftadd@f2
  7406  0B55  0821               	movf	?___ftneg+1,w
  7407  0B56  00A7               	movwf	___ftadd@f2+1
  7408  0B57  0822               	movf	?___ftneg+2,w
  7409  0B58  00A8               	movwf	___ftadd@f2+2
  7410  0B59  120A  158A  2192  120A  158A  	fcall	___ftadd
  7411  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  7412  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  7413  0B60  0823               	movf	?___ftadd,w
  7414  0B61  00B0               	movwf	___ftdiv@f2
  7415  0B62  0824               	movf	?___ftadd+1,w
  7416  0B63  00B1               	movwf	___ftdiv@f2+1
  7417  0B64  0825               	movf	?___ftadd+2,w
  7418  0B65  00B2               	movwf	___ftdiv@f2+2
  7419  0B66  0840               	movf	trimf@x,w
  7420  0B67  00A3               	movwf	___ftadd@f1
  7421  0B68  0841               	movf	trimf@x+1,w
  7422  0B69  00A4               	movwf	___ftadd@f1+1
  7423  0B6A  0842               	movf	trimf@x+2,w
  7424  0B6B  00A5               	movwf	___ftadd@f1+2
  7425  0B6C  0849               	movf	trimf@c,w
  7426  0B6D  00A0               	movwf	___ftneg@f1
  7427  0B6E  084A               	movf	trimf@c+1,w
  7428  0B6F  00A1               	movwf	___ftneg@f1+1
  7429  0B70  084B               	movf	trimf@c+2,w
  7430  0B71                     L13:	
  7431  0B71  00A2               	movwf	___ftneg@f1+2
  7432  0B72  160A  118A  221F  120A  158A  	fcall	___ftneg
  7433  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  7434  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  7435  0B79  0820               	movf	?___ftneg,w
  7436  0B7A  00A6               	movwf	___ftadd@f2
  7437  0B7B  0821               	movf	?___ftneg+1,w
  7438  0B7C  00A7               	movwf	___ftadd@f2+1
  7439  0B7D  0822               	movf	?___ftneg+2,w
  7440  0B7E  00A8               	movwf	___ftadd@f2+2
  7441  0B7F  120A  158A  2192  120A  158A  	fcall	___ftadd
  7442  0B84  1283               	bcf	3,5	;RP0=0, select bank0
  7443  0B85  1303               	bcf	3,6	;RP1=0, select bank0
  7444  0B86  0823               	movf	?___ftadd,w
  7445  0B87  00B3               	movwf	___ftdiv@f1
  7446  0B88  0824               	movf	?___ftadd+1,w
  7447  0B89  00B4               	movwf	___ftdiv@f1+1
  7448  0B8A  0825               	movf	?___ftadd+2,w
  7449  0B8B  00B5               	movwf	___ftdiv@f1+2
  7450  0B8C  160A  118A  2677  120A  158A  	fcall	___ftdiv
  7451  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  7452  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  7453  0B93  0830               	movf	?___ftdiv,w
  7454  0B94  00CC               	movwf	trimf@ua
  7455  0B95  0831               	movf	?___ftdiv+1,w
  7456  0B96  00CD               	movwf	trimf@ua+1
  7457  0B97  0832               	movf	?___ftdiv+2,w
  7458  0B98  2BB5               	goto	L10
  7459  0B99                     i1l2429:	
  7460                           
  7461                           ;main.c: 73: else if (x > c)
  7462  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  7463  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  7464  0B9B  0849               	movf	trimf@c,w
  7465  0B9C  00B0               	movwf	___ftge@ff1
  7466  0B9D  084A               	movf	trimf@c+1,w
  7467  0B9E  00B1               	movwf	___ftge@ff1+1
  7468  0B9F  084B               	movf	trimf@c+2,w
  7469  0BA0  00B2               	movwf	___ftge@ff1+2
  7470  0BA1  0840               	movf	trimf@x,w
  7471  0BA2  00B3               	movwf	___ftge@ff2
  7472  0BA3  0841               	movf	trimf@x+1,w
  7473  0BA4  00B4               	movwf	___ftge@ff2+1
  7474  0BA5  0842               	movf	trimf@x+2,w
  7475  0BA6  00B5               	movwf	___ftge@ff2+2
  7476  0BA7  160A  118A  2545  120A  158A  	fcall	___ftge
  7477  0BAC  1803               	btfsc	3,0
  7478  0BAD  2BB6               	goto	i1l112
  7479  0BAE                     L12:	
  7480                           
  7481                           ;main.c: 74: ua = 0;
  7482  0BAE  3000               	movlw	0
  7483  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  7484  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  7485  0BB1  00CC               	movwf	trimf@ua
  7486  0BB2  3000               	movlw	0
  7487  0BB3  00CD               	movwf	trimf@ua+1
  7488  0BB4  3000               	movlw	0
  7489  0BB5                     L10:	
  7490  0BB5  00CE               	movwf	trimf@ua+2
  7491  0BB6                     i1l112:	
  7492                           
  7493                           ;main.c: 76: return(ua);
  7494  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  7495  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  7496  0BB8  084C               	movf	trimf@ua,w
  7497  0BB9  00C0               	movwf	?_trimf
  7498  0BBA  084D               	movf	trimf@ua+1,w
  7499  0BBB  00C1               	movwf	?_trimf+1
  7500  0BBC  084E               	movf	trimf@ua+2,w
  7501  0BBD  00C2               	movwf	?_trimf+2
  7502  0BBE  0008               	return
  7503  0BBF                     __end_of_trimf:	
  7504                           
  7505                           	psect	text31
  7506  0CF3                     __ptext31:	
  7507 ;; *************** function _trapmf *****************
  7508 ;; Defined at:
  7509 ;;		line 82 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  x               3   32[BANK0 ] float 
  7512 ;;  a               3   35[BANK0 ] float 
  7513 ;;  b               3   38[BANK0 ] float 
  7514 ;;  c               3   41[BANK0 ] float 
  7515 ;;  d               3   44[BANK0 ] float 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  ua              3   47[BANK0 ] float 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  3   32[BANK0 ] float 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0, pclath, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7527 ;;      Params:         0      15       0       0       0
  7528 ;;      Locals:         0       3       0       0       0
  7529 ;;      Temps:          0       0       0       0       0
  7530 ;;      Totals:         0      18       0       0       0
  7531 ;;Total ram usage:       18 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    2
  7534 ;; This function calls:
  7535 ;;		___ftadd
  7536 ;;		___ftdiv
  7537 ;;		___ftge
  7538 ;;		___ftneg
  7539 ;; This function is called by:
  7540 ;;		_Fuzzy
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           
  7545                           ;psect for function _trapmf
  7546  0CF3                     _trapmf:	
  7547                           
  7548                           ;main.c: 84: float ua = 0;
  7549                           
  7550                           ;incstack = 0
  7551                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7552  0CF3  3000               	movlw	0
  7553  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  7554  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  7555  0CF6  00CF               	movwf	trapmf@ua
  7556  0CF7  3000               	movlw	0
  7557  0CF8  00D0               	movwf	trapmf@ua+1
  7558  0CF9  3000               	movlw	0
  7559  0CFA  00D1               	movwf	trapmf@ua+2
  7560                           
  7561                           ;main.c: 86: if (x <= a)
  7562  0CFB  0843               	movf	trapmf@a,w
  7563  0CFC  00B0               	movwf	___ftge@ff1
  7564  0CFD  0844               	movf	trapmf@a+1,w
  7565  0CFE  00B1               	movwf	___ftge@ff1+1
  7566  0CFF  0845               	movf	trapmf@a+2,w
  7567  0D00  00B2               	movwf	___ftge@ff1+2
  7568  0D01  0840               	movf	trapmf@x,w
  7569  0D02  00B3               	movwf	___ftge@ff2
  7570  0D03  0841               	movf	trapmf@x+1,w
  7571  0D04  00B4               	movwf	___ftge@ff2+1
  7572  0D05  0842               	movf	trapmf@x+2,w
  7573  0D06  00B5               	movwf	___ftge@ff2+2
  7574  0D07  160A  118A  2545  120A  158A  	fcall	___ftge
  7575  0D0C  1803               	btfsc	3,0
  7576  0D0D  2E38               	goto	L18
  7577                           
  7578                           ;main.c: 88: else if ((a < x) && (x <= b))
  7579                           
  7580                           ;main.c: 87: ua = 0;
  7581  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  7582  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  7583  0D10  0843               	movf	trapmf@a,w
  7584  0D11  00B0               	movwf	___ftge@ff1
  7585  0D12  0844               	movf	trapmf@a+1,w
  7586  0D13  00B1               	movwf	___ftge@ff1+1
  7587  0D14  0845               	movf	trapmf@a+2,w
  7588  0D15  00B2               	movwf	___ftge@ff1+2
  7589  0D16  0840               	movf	trapmf@x,w
  7590  0D17  00B3               	movwf	___ftge@ff2
  7591  0D18  0841               	movf	trapmf@x+1,w
  7592  0D19  00B4               	movwf	___ftge@ff2+1
  7593  0D1A  0842               	movf	trapmf@x+2,w
  7594  0D1B  00B5               	movwf	___ftge@ff2+2
  7595  0D1C  160A  118A  2545  120A  158A  	fcall	___ftge
  7596  0D21  1803               	btfsc	3,0
  7597  0D22  2D6C               	goto	i1l2447
  7598  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  7599  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  7600  0D25  0846               	movf	trapmf@b,w
  7601  0D26  00B0               	movwf	___ftge@ff1
  7602  0D27  0847               	movf	trapmf@b+1,w
  7603  0D28  00B1               	movwf	___ftge@ff1+1
  7604  0D29  0848               	movf	trapmf@b+2,w
  7605  0D2A  00B2               	movwf	___ftge@ff1+2
  7606  0D2B  0840               	movf	trapmf@x,w
  7607  0D2C  00B3               	movwf	___ftge@ff2
  7608  0D2D  0841               	movf	trapmf@x+1,w
  7609  0D2E  00B4               	movwf	___ftge@ff2+1
  7610  0D2F  0842               	movf	trapmf@x+2,w
  7611  0D30  00B5               	movwf	___ftge@ff2+2
  7612  0D31  160A  118A  2545  120A  158A  	fcall	___ftge
  7613  0D36  1C03               	btfss	3,0
  7614  0D37  2D6C               	goto	i1l2447
  7615                           
  7616                           ;main.c: 89: ua = ((x - a) / (b - a));
  7617  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  7618  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  7619  0D3A  0846               	movf	trapmf@b,w
  7620  0D3B  00A3               	movwf	___ftadd@f1
  7621  0D3C  0847               	movf	trapmf@b+1,w
  7622  0D3D  00A4               	movwf	___ftadd@f1+1
  7623  0D3E  0848               	movf	trapmf@b+2,w
  7624  0D3F  00A5               	movwf	___ftadd@f1+2
  7625  0D40  0843               	movf	trapmf@a,w
  7626  0D41  00A0               	movwf	___ftneg@f1
  7627  0D42  0844               	movf	trapmf@a+1,w
  7628  0D43  00A1               	movwf	___ftneg@f1+1
  7629  0D44  0845               	movf	trapmf@a+2,w
  7630  0D45  00A2               	movwf	___ftneg@f1+2
  7631  0D46  160A  118A  221F  120A  158A  	fcall	___ftneg
  7632  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  7633  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  7634  0D4D  0820               	movf	?___ftneg,w
  7635  0D4E  00A6               	movwf	___ftadd@f2
  7636  0D4F  0821               	movf	?___ftneg+1,w
  7637  0D50  00A7               	movwf	___ftadd@f2+1
  7638  0D51  0822               	movf	?___ftneg+2,w
  7639  0D52  00A8               	movwf	___ftadd@f2+2
  7640  0D53  120A  158A  2192  120A  158A  	fcall	___ftadd
  7641  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  7642  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  7643  0D5A  0823               	movf	?___ftadd,w
  7644  0D5B  00B0               	movwf	___ftdiv@f2
  7645  0D5C  0824               	movf	?___ftadd+1,w
  7646  0D5D  00B1               	movwf	___ftdiv@f2+1
  7647  0D5E  0825               	movf	?___ftadd+2,w
  7648  0D5F  00B2               	movwf	___ftdiv@f2+2
  7649  0D60  0840               	movf	trapmf@x,w
  7650  0D61  00A3               	movwf	___ftadd@f1
  7651  0D62  0841               	movf	trapmf@x+1,w
  7652  0D63  00A4               	movwf	___ftadd@f1+1
  7653  0D64  0842               	movf	trapmf@x+2,w
  7654  0D65  00A5               	movwf	___ftadd@f1+2
  7655  0D66  0843               	movf	trapmf@a,w
  7656  0D67  00A0               	movwf	___ftneg@f1
  7657  0D68  0844               	movf	trapmf@a+1,w
  7658  0D69  00A1               	movwf	___ftneg@f1+1
  7659  0D6A  0845               	movf	trapmf@a+2,w
  7660  0D6B  2DFB               	goto	L20
  7661  0D6C                     i1l2447:	
  7662                           
  7663                           ;main.c: 90: else if ((b <= x) && (x <= c))
  7664  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  7665  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  7666  0D6E  0840               	movf	trapmf@x,w
  7667  0D6F  00B0               	movwf	___ftge@ff1
  7668  0D70  0841               	movf	trapmf@x+1,w
  7669  0D71  00B1               	movwf	___ftge@ff1+1
  7670  0D72  0842               	movf	trapmf@x+2,w
  7671  0D73  00B2               	movwf	___ftge@ff1+2
  7672  0D74  0846               	movf	trapmf@b,w
  7673  0D75  00B3               	movwf	___ftge@ff2
  7674  0D76  0847               	movf	trapmf@b+1,w
  7675  0D77  00B4               	movwf	___ftge@ff2+1
  7676  0D78  0848               	movf	trapmf@b+2,w
  7677  0D79  00B5               	movwf	___ftge@ff2+2
  7678  0D7A  160A  118A  2545  120A  158A  	fcall	___ftge
  7679  0D7F  1C03               	btfss	3,0
  7680  0D80  2D9E               	goto	i1l2453
  7681  0D81  1283               	bcf	3,5	;RP0=0, select bank0
  7682  0D82  1303               	bcf	3,6	;RP1=0, select bank0
  7683  0D83  0849               	movf	trapmf@c,w
  7684  0D84  00B0               	movwf	___ftge@ff1
  7685  0D85  084A               	movf	trapmf@c+1,w
  7686  0D86  00B1               	movwf	___ftge@ff1+1
  7687  0D87  084B               	movf	trapmf@c+2,w
  7688  0D88  00B2               	movwf	___ftge@ff1+2
  7689  0D89  0840               	movf	trapmf@x,w
  7690  0D8A  00B3               	movwf	___ftge@ff2
  7691  0D8B  0841               	movf	trapmf@x+1,w
  7692  0D8C  00B4               	movwf	___ftge@ff2+1
  7693  0D8D  0842               	movf	trapmf@x+2,w
  7694  0D8E  00B5               	movwf	___ftge@ff2+2
  7695  0D8F  160A  118A  2545  120A  158A  	fcall	___ftge
  7696  0D94  1C03               	btfss	3,0
  7697  0D95  2D9E               	goto	i1l2453
  7698                           
  7699                           ;main.c: 91: ua = 1;
  7700  0D96  3000               	movlw	0
  7701  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  7702  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  7703  0D99  00CF               	movwf	trapmf@ua
  7704  0D9A  3080               	movlw	128
  7705  0D9B  00D0               	movwf	trapmf@ua+1
  7706  0D9C  303F               	movlw	63
  7707  0D9D  2E3F               	goto	L17
  7708  0D9E                     i1l2453:	
  7709                           
  7710                           ;main.c: 92: else if ((c < x) && (x <= d))
  7711  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  7712  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  7713  0DA0  0849               	movf	trapmf@c,w
  7714  0DA1  00B0               	movwf	___ftge@ff1
  7715  0DA2  084A               	movf	trapmf@c+1,w
  7716  0DA3  00B1               	movwf	___ftge@ff1+1
  7717  0DA4  084B               	movf	trapmf@c+2,w
  7718  0DA5  00B2               	movwf	___ftge@ff1+2
  7719  0DA6  0840               	movf	trapmf@x,w
  7720  0DA7  00B3               	movwf	___ftge@ff2
  7721  0DA8  0841               	movf	trapmf@x+1,w
  7722  0DA9  00B4               	movwf	___ftge@ff2+1
  7723  0DAA  0842               	movf	trapmf@x+2,w
  7724  0DAB  00B5               	movwf	___ftge@ff2+2
  7725  0DAC  160A  118A  2545  120A  158A  	fcall	___ftge
  7726  0DB1  1803               	btfsc	3,0
  7727  0DB2  2E23               	goto	i1l2459
  7728  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  7729  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  7730  0DB5  084C               	movf	trapmf@d,w
  7731  0DB6  00B0               	movwf	___ftge@ff1
  7732  0DB7  084D               	movf	trapmf@d+1,w
  7733  0DB8  00B1               	movwf	___ftge@ff1+1
  7734  0DB9  084E               	movf	trapmf@d+2,w
  7735  0DBA  00B2               	movwf	___ftge@ff1+2
  7736  0DBB  0840               	movf	trapmf@x,w
  7737  0DBC  00B3               	movwf	___ftge@ff2
  7738  0DBD  0841               	movf	trapmf@x+1,w
  7739  0DBE  00B4               	movwf	___ftge@ff2+1
  7740  0DBF  0842               	movf	trapmf@x+2,w
  7741  0DC0  00B5               	movwf	___ftge@ff2+2
  7742  0DC1  160A  118A  2545  120A  158A  	fcall	___ftge
  7743  0DC6  1C03               	btfss	3,0
  7744  0DC7  2E23               	goto	i1l2459
  7745                           
  7746                           ;main.c: 93: ua = ((d - x) / (d - c));
  7747  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  7748  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  7749  0DCA  084C               	movf	trapmf@d,w
  7750  0DCB  00A3               	movwf	___ftadd@f1
  7751  0DCC  084D               	movf	trapmf@d+1,w
  7752  0DCD  00A4               	movwf	___ftadd@f1+1
  7753  0DCE  084E               	movf	trapmf@d+2,w
  7754  0DCF  00A5               	movwf	___ftadd@f1+2
  7755  0DD0  0849               	movf	trapmf@c,w
  7756  0DD1  00A0               	movwf	___ftneg@f1
  7757  0DD2  084A               	movf	trapmf@c+1,w
  7758  0DD3  00A1               	movwf	___ftneg@f1+1
  7759  0DD4  084B               	movf	trapmf@c+2,w
  7760  0DD5  00A2               	movwf	___ftneg@f1+2
  7761  0DD6  160A  118A  221F  120A  158A  	fcall	___ftneg
  7762  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  7763  0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  7764  0DDD  0820               	movf	?___ftneg,w
  7765  0DDE  00A6               	movwf	___ftadd@f2
  7766  0DDF  0821               	movf	?___ftneg+1,w
  7767  0DE0  00A7               	movwf	___ftadd@f2+1
  7768  0DE1  0822               	movf	?___ftneg+2,w
  7769  0DE2  00A8               	movwf	___ftadd@f2+2
  7770  0DE3  120A  158A  2192  120A  158A  	fcall	___ftadd
  7771  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  7772  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  7773  0DEA  0823               	movf	?___ftadd,w
  7774  0DEB  00B0               	movwf	___ftdiv@f2
  7775  0DEC  0824               	movf	?___ftadd+1,w
  7776  0DED  00B1               	movwf	___ftdiv@f2+1
  7777  0DEE  0825               	movf	?___ftadd+2,w
  7778  0DEF  00B2               	movwf	___ftdiv@f2+2
  7779  0DF0  084C               	movf	trapmf@d,w
  7780  0DF1  00A3               	movwf	___ftadd@f1
  7781  0DF2  084D               	movf	trapmf@d+1,w
  7782  0DF3  00A4               	movwf	___ftadd@f1+1
  7783  0DF4  084E               	movf	trapmf@d+2,w
  7784  0DF5  00A5               	movwf	___ftadd@f1+2
  7785  0DF6  0840               	movf	trapmf@x,w
  7786  0DF7  00A0               	movwf	___ftneg@f1
  7787  0DF8  0841               	movf	trapmf@x+1,w
  7788  0DF9  00A1               	movwf	___ftneg@f1+1
  7789  0DFA  0842               	movf	trapmf@x+2,w
  7790  0DFB                     L20:	
  7791  0DFB  00A2               	movwf	___ftneg@f1+2
  7792  0DFC  160A  118A  221F  120A  158A  	fcall	___ftneg
  7793  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  7794  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  7795  0E03  0820               	movf	?___ftneg,w
  7796  0E04  00A6               	movwf	___ftadd@f2
  7797  0E05  0821               	movf	?___ftneg+1,w
  7798  0E06  00A7               	movwf	___ftadd@f2+1
  7799  0E07  0822               	movf	?___ftneg+2,w
  7800  0E08  00A8               	movwf	___ftadd@f2+2
  7801  0E09  120A  158A  2192  120A  158A  	fcall	___ftadd
  7802  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  7803  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  7804  0E10  0823               	movf	?___ftadd,w
  7805  0E11  00B3               	movwf	___ftdiv@f1
  7806  0E12  0824               	movf	?___ftadd+1,w
  7807  0E13  00B4               	movwf	___ftdiv@f1+1
  7808  0E14  0825               	movf	?___ftadd+2,w
  7809  0E15  00B5               	movwf	___ftdiv@f1+2
  7810  0E16  160A  118A  2677  120A  158A  	fcall	___ftdiv
  7811  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  7812  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  7813  0E1D  0830               	movf	?___ftdiv,w
  7814  0E1E  00CF               	movwf	trapmf@ua
  7815  0E1F  0831               	movf	?___ftdiv+1,w
  7816  0E20  00D0               	movwf	trapmf@ua+1
  7817  0E21  0832               	movf	?___ftdiv+2,w
  7818  0E22  2E3F               	goto	L17
  7819  0E23                     i1l2459:	
  7820                           
  7821                           ;main.c: 94: else if (x > d)
  7822  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  7823  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  7824  0E25  084C               	movf	trapmf@d,w
  7825  0E26  00B0               	movwf	___ftge@ff1
  7826  0E27  084D               	movf	trapmf@d+1,w
  7827  0E28  00B1               	movwf	___ftge@ff1+1
  7828  0E29  084E               	movf	trapmf@d+2,w
  7829  0E2A  00B2               	movwf	___ftge@ff1+2
  7830  0E2B  0840               	movf	trapmf@x,w
  7831  0E2C  00B3               	movwf	___ftge@ff2
  7832  0E2D  0841               	movf	trapmf@x+1,w
  7833  0E2E  00B4               	movwf	___ftge@ff2+1
  7834  0E2F  0842               	movf	trapmf@x+2,w
  7835  0E30  00B5               	movwf	___ftge@ff2+2
  7836  0E31  160A  118A  2545  120A  158A  	fcall	___ftge
  7837  0E36  1803               	btfsc	3,0
  7838  0E37  2E40               	goto	i1l122
  7839  0E38                     L18:	
  7840                           
  7841                           ;main.c: 95: ua = 0;
  7842  0E38  3000               	movlw	0
  7843  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  7844  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  7845  0E3B  00CF               	movwf	trapmf@ua
  7846  0E3C  3000               	movlw	0
  7847  0E3D  00D0               	movwf	trapmf@ua+1
  7848  0E3E  3000               	movlw	0
  7849  0E3F                     L17:	
  7850  0E3F  00D1               	movwf	trapmf@ua+2
  7851  0E40                     i1l122:	
  7852                           
  7853                           ;main.c: 97: return(ua);
  7854  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  7855  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  7856  0E42  084F               	movf	trapmf@ua,w
  7857  0E43  00C0               	movwf	?_trapmf
  7858  0E44  0850               	movf	trapmf@ua+1,w
  7859  0E45  00C1               	movwf	?_trapmf+1
  7860  0E46  0851               	movf	trapmf@ua+2,w
  7861  0E47  00C2               	movwf	?_trapmf+2
  7862  0E48  0008               	return
  7863  0E49                     __end_of_trapmf:	
  7864                           
  7865                           	psect	text32
  7866  121F                     __ptext32:	
  7867 ;; *************** function ___ftneg *****************
  7868 ;; Defined at:
  7869 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  f1              3    0[BANK0 ] float 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  3    0[BANK0 ] float 
  7876 ;; Registers used:
  7877 ;;		wreg
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7883 ;;      Params:         0       3       0       0       0
  7884 ;;      Locals:         0       0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0
  7886 ;;      Totals:         0       3       0       0       0
  7887 ;;Total ram usage:        3 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; This function calls:
  7890 ;;		Nothing
  7891 ;; This function is called by:
  7892 ;;		_trimf
  7893 ;;		_trapmf
  7894 ;;		_Fuzzy
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           
  7899                           ;psect for function ___ftneg
  7900  121F                     ___ftneg:	
  7901                           
  7902                           ;incstack = 0
  7903                           ; Regs used in ___ftneg: [wreg]
  7904  121F  1283               	bcf	3,5	;RP0=0, select bank0
  7905  1220  1303               	bcf	3,6	;RP1=0, select bank0
  7906  1221  0822               	movf	___ftneg@f1+2,w
  7907  1222  0421               	iorwf	___ftneg@f1+1,w
  7908  1223  0420               	iorwf	___ftneg@f1,w
  7909  1224  1903               	skipnz
  7910  1225  0008               	return
  7911  1226  3080               	movlw	128
  7912  1227  06A2               	xorwf	___ftneg@f1+2,f
  7913  1228  0008               	return
  7914  1229                     __end_of___ftneg:	
  7915                           
  7916                           	psect	text33
  7917  1677                     __ptext33:	
  7918 ;; *************** function ___ftdiv *****************
  7919 ;; Defined at:
  7920 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  f2              3   16[BANK0 ] float 
  7923 ;;  f1              3   19[BANK0 ] float 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;  f3              3   27[BANK0 ] float 
  7926 ;;  sign            1   31[BANK0 ] unsigned char 
  7927 ;;  exp             1   30[BANK0 ] unsigned char 
  7928 ;;  cntr            1   26[BANK0 ] unsigned char 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  3   16[BANK0 ] float 
  7931 ;; Registers used:
  7932 ;;		wreg, status,2, status,0, pclath, cstack
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7938 ;;      Params:         0       6       0       0       0
  7939 ;;      Locals:         0       6       0       0       0
  7940 ;;      Temps:          0       4       0       0       0
  7941 ;;      Totals:         0      16       0       0       0
  7942 ;;Total ram usage:       16 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:    1
  7945 ;; This function calls:
  7946 ;;		___ftpack
  7947 ;; This function is called by:
  7948 ;;		_trimf
  7949 ;;		_trapmf
  7950 ;;		_Fuzzy
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           
  7955                           ;psect for function ___ftdiv
  7956  1677                     ___ftdiv:	
  7957                           
  7958                           ;incstack = 0
  7959                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7960  1677  1283               	bcf	3,5	;RP0=0, select bank0
  7961  1678  1303               	bcf	3,6	;RP1=0, select bank0
  7962  1679  0833               	movf	___ftdiv@f1,w
  7963  167A  00B6               	movwf	??___ftdiv
  7964  167B  0834               	movf	___ftdiv@f1+1,w
  7965  167C  00B7               	movwf	??___ftdiv+1
  7966  167D  0835               	movf	___ftdiv@f1+2,w
  7967  167E  00B8               	movwf	??___ftdiv+2
  7968  167F  1003               	clrc
  7969  1680  0D37               	rlf	??___ftdiv+1,w
  7970  1681  0D38               	rlf	??___ftdiv+2,w
  7971  1682  00B9               	movwf	??___ftdiv+3
  7972  1683  0839               	movf	??___ftdiv+3,w
  7973  1684  00BE               	movwf	___ftdiv@exp
  7974  1685  08BE               	movf	___ftdiv@exp,f
  7975  1686  1D03               	skipz
  7976  1687  2E8F               	goto	i1l2347
  7977  1688  3000               	movlw	0
  7978  1689  00B0               	movwf	?___ftdiv
  7979  168A  3000               	movlw	0
  7980  168B  00B1               	movwf	?___ftdiv+1
  7981  168C  3000               	movlw	0
  7982  168D  00B2               	movwf	?___ftdiv+2
  7983  168E  0008               	return
  7984  168F                     i1l2347:	
  7985  168F  0830               	movf	___ftdiv@f2,w
  7986  1690  00B6               	movwf	??___ftdiv
  7987  1691  0831               	movf	___ftdiv@f2+1,w
  7988  1692  00B7               	movwf	??___ftdiv+1
  7989  1693  0832               	movf	___ftdiv@f2+2,w
  7990  1694  00B8               	movwf	??___ftdiv+2
  7991  1695  1003               	clrc
  7992  1696  0D37               	rlf	??___ftdiv+1,w
  7993  1697  0D38               	rlf	??___ftdiv+2,w
  7994  1698  00B9               	movwf	??___ftdiv+3
  7995  1699  0839               	movf	??___ftdiv+3,w
  7996  169A  00BF               	movwf	___ftdiv@sign
  7997  169B  08BF               	movf	___ftdiv@sign,f
  7998  169C  1D03               	skipz
  7999  169D  2EA5               	goto	i1l2353
  8000  169E  3000               	movlw	0
  8001  169F  00B0               	movwf	?___ftdiv
  8002  16A0  3000               	movlw	0
  8003  16A1  00B1               	movwf	?___ftdiv+1
  8004  16A2  3000               	movlw	0
  8005  16A3  00B2               	movwf	?___ftdiv+2
  8006  16A4  0008               	return
  8007  16A5                     i1l2353:	
  8008  16A5  3000               	movlw	0
  8009  16A6  00BB               	movwf	___ftdiv@f3
  8010  16A7  3000               	movlw	0
  8011  16A8  00BC               	movwf	___ftdiv@f3+1
  8012  16A9  3000               	movlw	0
  8013  16AA  00BD               	movwf	___ftdiv@f3+2
  8014  16AB  3089               	movlw	137
  8015  16AC  073F               	addwf	___ftdiv@sign,w
  8016  16AD  00B6               	movwf	??___ftdiv
  8017  16AE  0836               	movf	??___ftdiv,w
  8018  16AF  02BE               	subwf	___ftdiv@exp,f
  8019  16B0  0833               	movf	___ftdiv@f1,w
  8020  16B1  00B6               	movwf	??___ftdiv
  8021  16B2  0834               	movf	___ftdiv@f1+1,w
  8022  16B3  00B7               	movwf	??___ftdiv+1
  8023  16B4  0835               	movf	___ftdiv@f1+2,w
  8024  16B5  00B8               	movwf	??___ftdiv+2
  8025  16B6  3010               	movlw	16
  8026  16B7                     u250_25:	
  8027  16B7  1003               	clrc
  8028  16B8  0CB8               	rrf	??___ftdiv+2,f
  8029  16B9  0CB7               	rrf	??___ftdiv+1,f
  8030  16BA  0CB6               	rrf	??___ftdiv,f
  8031  16BB  3EFF               	addlw	-1
  8032  16BC  1D03               	skipz
  8033  16BD  2EB7               	goto	u250_25
  8034  16BE  0836               	movf	??___ftdiv,w
  8035  16BF  00B9               	movwf	??___ftdiv+3
  8036  16C0  0839               	movf	??___ftdiv+3,w
  8037  16C1  00BF               	movwf	___ftdiv@sign
  8038  16C2  0830               	movf	___ftdiv@f2,w
  8039  16C3  00B6               	movwf	??___ftdiv
  8040  16C4  0831               	movf	___ftdiv@f2+1,w
  8041  16C5  00B7               	movwf	??___ftdiv+1
  8042  16C6  0832               	movf	___ftdiv@f2+2,w
  8043  16C7  00B8               	movwf	??___ftdiv+2
  8044  16C8  3010               	movlw	16
  8045  16C9                     u251_25:	
  8046  16C9  1003               	clrc
  8047  16CA  0CB8               	rrf	??___ftdiv+2,f
  8048  16CB  0CB7               	rrf	??___ftdiv+1,f
  8049  16CC  0CB6               	rrf	??___ftdiv,f
  8050  16CD  3EFF               	addlw	-1
  8051  16CE  1D03               	skipz
  8052  16CF  2EC9               	goto	u251_25
  8053  16D0  0836               	movf	??___ftdiv,w
  8054  16D1  00B9               	movwf	??___ftdiv+3
  8055  16D2  0839               	movf	??___ftdiv+3,w
  8056  16D3  06BF               	xorwf	___ftdiv@sign,f
  8057  16D4  3080               	movlw	128
  8058  16D5  00B6               	movwf	??___ftdiv
  8059  16D6  0836               	movf	??___ftdiv,w
  8060  16D7  05BF               	andwf	___ftdiv@sign,f
  8061  16D8  17B4               	bsf	___ftdiv@f1+1,7
  8062  16D9  30FF               	movlw	255
  8063  16DA  05B3               	andwf	___ftdiv@f1,f
  8064  16DB  30FF               	movlw	255
  8065  16DC  05B4               	andwf	___ftdiv@f1+1,f
  8066  16DD  3000               	movlw	0
  8067  16DE  05B5               	andwf	___ftdiv@f1+2,f
  8068  16DF  17B1               	bsf	___ftdiv@f2+1,7
  8069  16E0  30FF               	movlw	255
  8070  16E1  05B0               	andwf	___ftdiv@f2,f
  8071  16E2  30FF               	movlw	255
  8072  16E3  05B1               	andwf	___ftdiv@f2+1,f
  8073  16E4  3000               	movlw	0
  8074  16E5  05B2               	andwf	___ftdiv@f2+2,f
  8075  16E6  3018               	movlw	24
  8076  16E7  00B6               	movwf	??___ftdiv
  8077  16E8  0836               	movf	??___ftdiv,w
  8078  16E9  00BA               	movwf	___ftdiv@cntr
  8079  16EA                     i1l2367:	
  8080  16EA  3001               	movlw	1
  8081  16EB                     u252_25:	
  8082  16EB  1003               	clrc
  8083  16EC  0DBB               	rlf	___ftdiv@f3,f
  8084  16ED  0DBC               	rlf	___ftdiv@f3+1,f
  8085  16EE  0DBD               	rlf	___ftdiv@f3+2,f
  8086  16EF  3EFF               	addlw	-1
  8087  16F0  1D03               	skipz
  8088  16F1  2EEB               	goto	u252_25
  8089  16F2  0832               	movf	___ftdiv@f2+2,w
  8090  16F3  0235               	subwf	___ftdiv@f1+2,w
  8091  16F4  1D03               	skipz
  8092  16F5  2EFC               	goto	u253_25
  8093  16F6  0831               	movf	___ftdiv@f2+1,w
  8094  16F7  0234               	subwf	___ftdiv@f1+1,w
  8095  16F8  1D03               	skipz
  8096  16F9  2EFC               	goto	u253_25
  8097  16FA  0830               	movf	___ftdiv@f2,w
  8098  16FB  0233               	subwf	___ftdiv@f1,w
  8099  16FC                     u253_25:	
  8100  16FC  1C03               	skipc
  8101  16FD  2F09               	goto	i1l2375
  8102  16FE  0830               	movf	___ftdiv@f2,w
  8103  16FF  02B3               	subwf	___ftdiv@f1,f
  8104  1700  0831               	movf	___ftdiv@f2+1,w
  8105  1701  1C03               	skipc
  8106  1702  0F31               	incfsz	___ftdiv@f2+1,w
  8107  1703  02B4               	subwf	___ftdiv@f1+1,f
  8108  1704  0832               	movf	___ftdiv@f2+2,w
  8109  1705  1C03               	skipc
  8110  1706  0A32               	incf	___ftdiv@f2+2,w
  8111  1707  02B5               	subwf	___ftdiv@f1+2,f
  8112  1708  143B               	bsf	___ftdiv@f3,0
  8113  1709                     i1l2375:	
  8114  1709  3001               	movlw	1
  8115  170A                     u254_25:	
  8116  170A  1003               	clrc
  8117  170B  0DB3               	rlf	___ftdiv@f1,f
  8118  170C  0DB4               	rlf	___ftdiv@f1+1,f
  8119  170D  0DB5               	rlf	___ftdiv@f1+2,f
  8120  170E  3EFF               	addlw	-1
  8121  170F  1D03               	skipz
  8122  1710  2F0A               	goto	u254_25
  8123  1711  3001               	movlw	1
  8124  1712  02BA               	subwf	___ftdiv@cntr,f
  8125  1713  1D03               	btfss	3,2
  8126  1714  2EEA               	goto	i1l2367
  8127  1715  083B               	movf	___ftdiv@f3,w
  8128  1716  00F0               	movwf	___ftpack@arg
  8129  1717  083C               	movf	___ftdiv@f3+1,w
  8130  1718  00F1               	movwf	___ftpack@arg+1
  8131  1719  083D               	movf	___ftdiv@f3+2,w
  8132  171A  00F2               	movwf	___ftpack@arg+2
  8133  171B  083E               	movf	___ftdiv@exp,w
  8134  171C  00B6               	movwf	??___ftdiv
  8135  171D  0836               	movf	??___ftdiv,w
  8136  171E  00F3               	movwf	___ftpack@exp
  8137  171F  083F               	movf	___ftdiv@sign,w
  8138  1720  00B7               	movwf	??___ftdiv+1
  8139  1721  0837               	movf	??___ftdiv+1,w
  8140  1722  00F4               	movwf	___ftpack@sign
  8141  1723  160A  118A  25A4   	fcall	___ftpack
  8142  1726  0870               	movf	?___ftpack,w
  8143  1727  1283               	bcf	3,5	;RP0=0, select bank0
  8144  1728  1303               	bcf	3,6	;RP1=0, select bank0
  8145  1729  00B0               	movwf	?___ftdiv
  8146  172A  0871               	movf	?___ftpack+1,w
  8147  172B  00B1               	movwf	?___ftdiv+1
  8148  172C  0872               	movf	?___ftpack+2,w
  8149  172D  00B2               	movwf	?___ftdiv+2
  8150  172E  0008               	return
  8151  172F                     __end_of___ftdiv:	
  8152                           
  8153                           	psect	text34
  8154  0992                     __ptext34:	
  8155 ;; *************** function ___ftadd *****************
  8156 ;; Defined at:
  8157 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;  f1              3    3[BANK0 ] float 
  8160 ;;  f2              3    6[BANK0 ] float 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;  exp1            1   15[BANK0 ] unsigned char 
  8163 ;;  exp2            1   14[BANK0 ] unsigned char 
  8164 ;;  sign            1   13[BANK0 ] unsigned char 
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  3    3[BANK0 ] float 
  8167 ;; Registers used:
  8168 ;;		wreg, status,2, status,0, pclath, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8174 ;;      Params:         0       6       0       0       0
  8175 ;;      Locals:         0       3       0       0       0
  8176 ;;      Temps:          0       4       0       0       0
  8177 ;;      Totals:         0      13       0       0       0
  8178 ;;Total ram usage:       13 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:    1
  8181 ;; This function calls:
  8182 ;;		___ftpack
  8183 ;; This function is called by:
  8184 ;;		_trimf
  8185 ;;		_trapmf
  8186 ;;		_Fuzzy
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           
  8191                           ;psect for function ___ftadd
  8192  0992                     ___ftadd:	
  8193                           
  8194                           ;incstack = 0
  8195                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8196  0992  1283               	bcf	3,5	;RP0=0, select bank0
  8197  0993  1303               	bcf	3,6	;RP1=0, select bank0
  8198  0994  0823               	movf	___ftadd@f1,w
  8199  0995  00A9               	movwf	??___ftadd
  8200  0996  0824               	movf	___ftadd@f1+1,w
  8201  0997  00AA               	movwf	??___ftadd+1
  8202  0998  0825               	movf	___ftadd@f1+2,w
  8203  0999  00AB               	movwf	??___ftadd+2
  8204  099A  1003               	clrc
  8205  099B  0D2A               	rlf	??___ftadd+1,w
  8206  099C  0D2B               	rlf	??___ftadd+2,w
  8207  099D  00AC               	movwf	??___ftadd+3
  8208  099E  082C               	movf	??___ftadd+3,w
  8209  099F  00AF               	movwf	___ftadd@exp1
  8210  09A0  0826               	movf	___ftadd@f2,w
  8211  09A1  00A9               	movwf	??___ftadd
  8212  09A2  0827               	movf	___ftadd@f2+1,w
  8213  09A3  00AA               	movwf	??___ftadd+1
  8214  09A4  0828               	movf	___ftadd@f2+2,w
  8215  09A5  00AB               	movwf	??___ftadd+2
  8216  09A6  1003               	clrc
  8217  09A7  0D2A               	rlf	??___ftadd+1,w
  8218  09A8  0D2B               	rlf	??___ftadd+2,w
  8219  09A9  00AC               	movwf	??___ftadd+3
  8220  09AA  082C               	movf	??___ftadd+3,w
  8221  09AB  00AE               	movwf	___ftadd@exp2
  8222  09AC  082F               	movf	___ftadd@exp1,w
  8223  09AD  1903               	btfsc	3,2
  8224  09AE  29BB               	goto	i1l2277
  8225  09AF  082E               	movf	___ftadd@exp2,w
  8226  09B0  022F               	subwf	___ftadd@exp1,w
  8227  09B1  1803               	skipnc
  8228  09B2  29C2               	goto	i1l2281
  8229  09B3  032F               	decf	___ftadd@exp1,w
  8230  09B4  3AFF               	xorlw	255
  8231  09B5  072E               	addwf	___ftadd@exp2,w
  8232  09B6  00A9               	movwf	??___ftadd
  8233  09B7  3019               	movlw	25
  8234  09B8  0229               	subwf	??___ftadd,w
  8235  09B9  1C03               	skipc
  8236  09BA  29C2               	goto	i1l2281
  8237  09BB                     i1l2277:	
  8238  09BB  0826               	movf	___ftadd@f2,w
  8239  09BC  00A3               	movwf	?___ftadd
  8240  09BD  0827               	movf	___ftadd@f2+1,w
  8241  09BE  00A4               	movwf	?___ftadd+1
  8242  09BF  0828               	movf	___ftadd@f2+2,w
  8243  09C0  00A5               	movwf	?___ftadd+2
  8244  09C1  0008               	return
  8245  09C2                     i1l2281:	
  8246  09C2  082E               	movf	___ftadd@exp2,w
  8247  09C3  1903               	btfsc	3,2
  8248  09C4  0008               	return
  8249  09C5  082F               	movf	___ftadd@exp1,w
  8250  09C6  022E               	subwf	___ftadd@exp2,w
  8251  09C7  1803               	skipnc
  8252  09C8  29D1               	goto	i1l2287
  8253  09C9  032E               	decf	___ftadd@exp2,w
  8254  09CA  3AFF               	xorlw	255
  8255  09CB  072F               	addwf	___ftadd@exp1,w
  8256  09CC  00A9               	movwf	??___ftadd
  8257  09CD  3019               	movlw	25
  8258  09CE  0229               	subwf	??___ftadd,w
  8259  09CF  1803               	btfsc	3,0
  8260  09D0  0008               	return
  8261  09D1                     i1l2287:	
  8262  09D1  3006               	movlw	6
  8263  09D2  00A9               	movwf	??___ftadd
  8264  09D3  0829               	movf	??___ftadd,w
  8265  09D4  00AD               	movwf	___ftadd@sign
  8266  09D5  1BA5               	btfsc	___ftadd@f1+2,7
  8267  09D6  17AD               	bsf	___ftadd@sign,7
  8268  09D7  1BA8               	btfsc	___ftadd@f2+2,7
  8269  09D8  172D               	bsf	___ftadd@sign,6
  8270  09D9  17A4               	bsf	___ftadd@f1+1,7
  8271  09DA  30FF               	movlw	255
  8272  09DB  05A3               	andwf	___ftadd@f1,f
  8273  09DC  30FF               	movlw	255
  8274  09DD  05A4               	andwf	___ftadd@f1+1,f
  8275  09DE  3000               	movlw	0
  8276  09DF  05A5               	andwf	___ftadd@f1+2,f
  8277  09E0  17A7               	bsf	___ftadd@f2+1,7
  8278  09E1  30FF               	movlw	255
  8279  09E2  05A6               	andwf	___ftadd@f2,f
  8280  09E3  30FF               	movlw	255
  8281  09E4  05A7               	andwf	___ftadd@f2+1,f
  8282  09E5  3000               	movlw	0
  8283  09E6  05A8               	andwf	___ftadd@f2+2,f
  8284  09E7  082E               	movf	___ftadd@exp2,w
  8285  09E8  022F               	subwf	___ftadd@exp1,w
  8286  09E9  1803               	skipnc
  8287  09EA  2A11               	goto	i1l2309
  8288  09EB                     i1l2299:	
  8289  09EB  3001               	movlw	1
  8290  09EC                     u233_25:	
  8291  09EC  1003               	clrc
  8292  09ED  0DA6               	rlf	___ftadd@f2,f
  8293  09EE  0DA7               	rlf	___ftadd@f2+1,f
  8294  09EF  0DA8               	rlf	___ftadd@f2+2,f
  8295  09F0  3EFF               	addlw	-1
  8296  09F1  1D03               	skipz
  8297  09F2  29EC               	goto	u233_25
  8298  09F3  3001               	movlw	1
  8299  09F4  02AE               	subwf	___ftadd@exp2,f
  8300  09F5  082E               	movf	___ftadd@exp2,w
  8301  09F6  062F               	xorwf	___ftadd@exp1,w
  8302  09F7  1903               	skipnz
  8303  09F8  2A0C               	goto	i1l2307
  8304  09F9  3001               	movlw	1
  8305  09FA  02AD               	subwf	___ftadd@sign,f
  8306  09FB  082D               	movf	___ftadd@sign,w
  8307  09FC  3907               	andlw	7
  8308  09FD  1903               	btfsc	3,2
  8309  09FE  2A0C               	goto	i1l2307
  8310  09FF  29EB               	goto	i1l2299
  8311  0A00                     i1l2305:	
  8312  0A00  3001               	movlw	1
  8313  0A01                     u236_25:	
  8314  0A01  1003               	clrc
  8315  0A02  0CA5               	rrf	___ftadd@f1+2,f
  8316  0A03  0CA4               	rrf	___ftadd@f1+1,f
  8317  0A04  0CA3               	rrf	___ftadd@f1,f
  8318  0A05  3EFF               	addlw	-1
  8319  0A06  1D03               	skipz
  8320  0A07  2A01               	goto	u236_25
  8321  0A08  3001               	movlw	1
  8322  0A09  00A9               	movwf	??___ftadd
  8323  0A0A  0829               	movf	??___ftadd,w
  8324  0A0B  07AF               	addwf	___ftadd@exp1,f
  8325  0A0C                     i1l2307:	
  8326  0A0C  082F               	movf	___ftadd@exp1,w
  8327  0A0D  062E               	xorwf	___ftadd@exp2,w
  8328  0A0E  1903               	btfsc	3,2
  8329  0A0F  2A3A               	goto	i1l785
  8330  0A10  2A00               	goto	i1l2305
  8331  0A11                     i1l2309:	
  8332  0A11  082F               	movf	___ftadd@exp1,w
  8333  0A12  022E               	subwf	___ftadd@exp2,w
  8334  0A13  1803               	skipnc
  8335  0A14  2A3A               	goto	i1l785
  8336  0A15                     i1l2311:	
  8337  0A15  3001               	movlw	1
  8338  0A16                     u239_25:	
  8339  0A16  1003               	clrc
  8340  0A17  0DA3               	rlf	___ftadd@f1,f
  8341  0A18  0DA4               	rlf	___ftadd@f1+1,f
  8342  0A19  0DA5               	rlf	___ftadd@f1+2,f
  8343  0A1A  3EFF               	addlw	-1
  8344  0A1B  1D03               	skipz
  8345  0A1C  2A16               	goto	u239_25
  8346  0A1D  3001               	movlw	1
  8347  0A1E  02AF               	subwf	___ftadd@exp1,f
  8348  0A1F  082E               	movf	___ftadd@exp2,w
  8349  0A20  062F               	xorwf	___ftadd@exp1,w
  8350  0A21  1903               	skipnz
  8351  0A22  2A36               	goto	i1l2319
  8352  0A23  3001               	movlw	1
  8353  0A24  02AD               	subwf	___ftadd@sign,f
  8354  0A25  082D               	movf	___ftadd@sign,w
  8355  0A26  3907               	andlw	7
  8356  0A27  1903               	btfsc	3,2
  8357  0A28  2A36               	goto	i1l2319
  8358  0A29  2A15               	goto	i1l2311
  8359  0A2A                     i1l2317:	
  8360  0A2A  3001               	movlw	1
  8361  0A2B                     u242_25:	
  8362  0A2B  1003               	clrc
  8363  0A2C  0CA8               	rrf	___ftadd@f2+2,f
  8364  0A2D  0CA7               	rrf	___ftadd@f2+1,f
  8365  0A2E  0CA6               	rrf	___ftadd@f2,f
  8366  0A2F  3EFF               	addlw	-1
  8367  0A30  1D03               	skipz
  8368  0A31  2A2B               	goto	u242_25
  8369  0A32  3001               	movlw	1
  8370  0A33  00A9               	movwf	??___ftadd
  8371  0A34  0829               	movf	??___ftadd,w
  8372  0A35  07AE               	addwf	___ftadd@exp2,f
  8373  0A36                     i1l2319:	
  8374  0A36  082F               	movf	___ftadd@exp1,w
  8375  0A37  062E               	xorwf	___ftadd@exp2,w
  8376  0A38  1D03               	skipz
  8377  0A39  2A2A               	goto	i1l2317
  8378  0A3A                     i1l785:	
  8379  0A3A  1FAD               	btfss	___ftadd@sign,7
  8380  0A3B  2A4C               	goto	i1l2323
  8381  0A3C  30FF               	movlw	255
  8382  0A3D  06A3               	xorwf	___ftadd@f1,f
  8383  0A3E  30FF               	movlw	255
  8384  0A3F  06A4               	xorwf	___ftadd@f1+1,f
  8385  0A40  30FF               	movlw	255
  8386  0A41  06A5               	xorwf	___ftadd@f1+2,f
  8387  0A42  3001               	movlw	1
  8388  0A43  07A3               	addwf	___ftadd@f1,f
  8389  0A44  3000               	movlw	0
  8390  0A45  1803               	skipnc
  8391  0A46  3001               	movlw	1
  8392  0A47  07A4               	addwf	___ftadd@f1+1,f
  8393  0A48  3000               	movlw	0
  8394  0A49  1803               	skipnc
  8395  0A4A  3001               	movlw	1
  8396  0A4B  07A5               	addwf	___ftadd@f1+2,f
  8397  0A4C                     i1l2323:	
  8398  0A4C  1F2D               	btfss	___ftadd@sign,6
  8399  0A4D  2A5E               	goto	i1l2327
  8400  0A4E  30FF               	movlw	255
  8401  0A4F  06A6               	xorwf	___ftadd@f2,f
  8402  0A50  30FF               	movlw	255
  8403  0A51  06A7               	xorwf	___ftadd@f2+1,f
  8404  0A52  30FF               	movlw	255
  8405  0A53  06A8               	xorwf	___ftadd@f2+2,f
  8406  0A54  3001               	movlw	1
  8407  0A55  07A6               	addwf	___ftadd@f2,f
  8408  0A56  3000               	movlw	0
  8409  0A57  1803               	skipnc
  8410  0A58  3001               	movlw	1
  8411  0A59  07A7               	addwf	___ftadd@f2+1,f
  8412  0A5A  3000               	movlw	0
  8413  0A5B  1803               	skipnc
  8414  0A5C  3001               	movlw	1
  8415  0A5D  07A8               	addwf	___ftadd@f2+2,f
  8416  0A5E                     i1l2327:	
  8417  0A5E  01AD               	clrf	___ftadd@sign
  8418  0A5F  0823               	movf	___ftadd@f1,w
  8419  0A60  07A6               	addwf	___ftadd@f2,f
  8420  0A61  0824               	movf	___ftadd@f1+1,w
  8421  0A62  1103               	clrz
  8422  0A63  1803               	skipnc
  8423  0A64  0A24               	incf	___ftadd@f1+1,w
  8424  0A65  1D03               	btfss	3,2
  8425  0A66  07A7               	addwf	___ftadd@f2+1,f
  8426  0A67  0825               	movf	___ftadd@f1+2,w
  8427  0A68  1103               	clrz
  8428  0A69  1803               	skipnc
  8429  0A6A  0A25               	incf	___ftadd@f1+2,w
  8430  0A6B  1D03               	btfss	3,2
  8431  0A6C  07A8               	addwf	___ftadd@f2+2,f
  8432  0A6D  1FA8               	btfss	___ftadd@f2+2,7
  8433  0A6E  2A81               	goto	i1l2337
  8434  0A6F  30FF               	movlw	255
  8435  0A70  06A6               	xorwf	___ftadd@f2,f
  8436  0A71  30FF               	movlw	255
  8437  0A72  06A7               	xorwf	___ftadd@f2+1,f
  8438  0A73  30FF               	movlw	255
  8439  0A74  06A8               	xorwf	___ftadd@f2+2,f
  8440  0A75  3001               	movlw	1
  8441  0A76  07A6               	addwf	___ftadd@f2,f
  8442  0A77  3000               	movlw	0
  8443  0A78  1803               	skipnc
  8444  0A79  3001               	movlw	1
  8445  0A7A  07A7               	addwf	___ftadd@f2+1,f
  8446  0A7B  3000               	movlw	0
  8447  0A7C  1803               	skipnc
  8448  0A7D  3001               	movlw	1
  8449  0A7E  07A8               	addwf	___ftadd@f2+2,f
  8450  0A7F  01AD               	clrf	___ftadd@sign
  8451  0A80  0AAD               	incf	___ftadd@sign,f
  8452  0A81                     i1l2337:	
  8453  0A81  0826               	movf	___ftadd@f2,w
  8454  0A82  00F0               	movwf	___ftpack@arg
  8455  0A83  0827               	movf	___ftadd@f2+1,w
  8456  0A84  00F1               	movwf	___ftpack@arg+1
  8457  0A85  0828               	movf	___ftadd@f2+2,w
  8458  0A86  00F2               	movwf	___ftpack@arg+2
  8459  0A87  082F               	movf	___ftadd@exp1,w
  8460  0A88  00A9               	movwf	??___ftadd
  8461  0A89  0829               	movf	??___ftadd,w
  8462  0A8A  00F3               	movwf	___ftpack@exp
  8463  0A8B  082D               	movf	___ftadd@sign,w
  8464  0A8C  00AA               	movwf	??___ftadd+1
  8465  0A8D  082A               	movf	??___ftadd+1,w
  8466  0A8E  00F4               	movwf	___ftpack@sign
  8467  0A8F  160A  118A  25A4   	fcall	___ftpack
  8468  0A92  0870               	movf	?___ftpack,w
  8469  0A93  1283               	bcf	3,5	;RP0=0, select bank0
  8470  0A94  1303               	bcf	3,6	;RP1=0, select bank0
  8471  0A95  00A3               	movwf	?___ftadd
  8472  0A96  0871               	movf	?___ftpack+1,w
  8473  0A97  00A4               	movwf	?___ftadd+1
  8474  0A98  0872               	movf	?___ftpack+2,w
  8475  0A99  00A5               	movwf	?___ftadd+2
  8476  0A9A  0008               	return
  8477  0A9B                     __end_of___ftadd:	
  8478                           
  8479                           	psect	text35
  8480  12B8                     __ptext35:	
  8481 ;; *************** function _max_val *****************
  8482 ;; Defined at:
  8483 ;;		line 135 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  a               3   28[BANK0 ] float 
  8486 ;;  b               3   31[BANK0 ] float 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;		None
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  3   28[BANK0 ] float 
  8491 ;; Registers used:
  8492 ;;		wreg, status,2, status,0, pclath, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8498 ;;      Params:         0       6       0       0       0
  8499 ;;      Locals:         0       0       0       0       0
  8500 ;;      Temps:          0       0       0       0       0
  8501 ;;      Totals:         0       6       0       0       0
  8502 ;;Total ram usage:        6 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    1
  8505 ;; This function calls:
  8506 ;;		___ftge
  8507 ;; This function is called by:
  8508 ;;		_Fuzzy
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           
  8513                           ;psect for function _max_val
  8514  12B8                     _max_val:	
  8515                           
  8516                           ;main.c: 137: if (a > b)
  8517                           
  8518                           ;incstack = 0
  8519                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8520  12B8  1283               	bcf	3,5	;RP0=0, select bank0
  8521  12B9  1303               	bcf	3,6	;RP1=0, select bank0
  8522  12BA  083F               	movf	max_val@b,w
  8523  12BB  00B0               	movwf	___ftge@ff1
  8524  12BC  0840               	movf	max_val@b+1,w
  8525  12BD  00B1               	movwf	___ftge@ff1+1
  8526  12BE  0841               	movf	max_val@b+2,w
  8527  12BF  00B2               	movwf	___ftge@ff1+2
  8528  12C0  083C               	movf	max_val@a,w
  8529  12C1  00B3               	movwf	___ftge@ff2
  8530  12C2  083D               	movf	max_val@a+1,w
  8531  12C3  00B4               	movwf	___ftge@ff2+1
  8532  12C4  083E               	movf	max_val@a+2,w
  8533  12C5  00B5               	movwf	___ftge@ff2+2
  8534  12C6  160A  118A  2545  160A  118A  	fcall	___ftge
  8535  12CB  1C03               	btfss	3,0
  8536  12CC  0008               	return
  8537                           
  8538                           ;main.c: 139: else
  8539                           ;main.c: 140: return b;
  8540                           
  8541                           ;main.c: 138: return a;
  8542  12CD  1283               	bcf	3,5	;RP0=0, select bank0
  8543  12CE  1303               	bcf	3,6	;RP1=0, select bank0
  8544  12CF  083F               	movf	max_val@b,w
  8545  12D0  00BC               	movwf	?_max_val
  8546  12D1  0840               	movf	max_val@b+1,w
  8547  12D2  00BD               	movwf	?_max_val+1
  8548  12D3  0841               	movf	max_val@b+2,w
  8549  12D4  00BE               	movwf	?_max_val+2
  8550  12D5  0008               	return
  8551  12D6                     __end_of_max_val:	
  8552                           
  8553                           	psect	text36
  8554  1545                     __ptext36:	
  8555 ;; *************** function ___ftge *****************
  8556 ;; Defined at:
  8557 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  ff1             3   16[BANK0 ] float 
  8560 ;;  ff2             3   19[BANK0 ] float 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;		None
  8563 ;; Return value:  Size  Location     Type
  8564 ;;		None               void
  8565 ;; Registers used:
  8566 ;;		wreg, status,2, status,0
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8572 ;;      Params:         0       6       0       0       0
  8573 ;;      Locals:         0       0       0       0       0
  8574 ;;      Temps:          0       6       0       0       0
  8575 ;;      Totals:         0      12       0       0       0
  8576 ;;Total ram usage:       12 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_trimf
  8582 ;;		_trapmf
  8583 ;;		_max_val
  8584 ;;		_Fuzzy
  8585 ;;		_min_val
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           
  8590                           ;psect for function ___ftge
  8591  1545                     ___ftge:	
  8592                           
  8593                           ;incstack = 0
  8594                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8595  1545  1283               	bcf	3,5	;RP0=0, select bank0
  8596  1546  1303               	bcf	3,6	;RP1=0, select bank0
  8597  1547  1FB2               	btfss	___ftge@ff1+2,7
  8598  1548  2D6E               	goto	i1l2387
  8599  1549  3000               	movlw	0
  8600  154A  00B6               	movwf	??___ftge
  8601  154B  3000               	movlw	0
  8602  154C  00B7               	movwf	??___ftge+1
  8603  154D  3080               	movlw	128
  8604  154E  00B8               	movwf	??___ftge+2
  8605  154F  0930               	comf	___ftge@ff1,w
  8606  1550  00B9               	movwf	??___ftge+3
  8607  1551  0931               	comf	___ftge@ff1+1,w
  8608  1552  00BA               	movwf	??___ftge+4
  8609  1553  0932               	comf	___ftge@ff1+2,w
  8610  1554  00BB               	movwf	??___ftge+5
  8611  1555  0AB9               	incf	??___ftge+3,f
  8612  1556  1903               	skipnz
  8613  1557  0ABA               	incf	??___ftge+4,f
  8614  1558  1903               	skipnz
  8615  1559  0ABB               	incf	??___ftge+5,f
  8616  155A  0839               	movf	??___ftge+3,w
  8617  155B  07B6               	addwf	??___ftge,f
  8618  155C  083A               	movf	??___ftge+4,w
  8619  155D  1803               	skipnc
  8620  155E  0F3A               	incfsz	??___ftge+4,w
  8621  155F  2D61               	goto	u257_21
  8622  1560  2D62               	goto	u257_22
  8623  1561                     u257_21:	
  8624  1561  07B7               	addwf	??___ftge+1,f
  8625  1562                     u257_22:	
  8626  1562  083B               	movf	??___ftge+5,w
  8627  1563  1803               	skipnc
  8628  1564  0F3B               	incfsz	??___ftge+5,w
  8629  1565  2D67               	goto	u257_23
  8630  1566  2D68               	goto	u257_24
  8631  1567                     u257_23:	
  8632  1567  07B8               	addwf	??___ftge+2,f
  8633  1568                     u257_24:	
  8634  1568  0836               	movf	??___ftge,w
  8635  1569  00B0               	movwf	___ftge@ff1
  8636  156A  0837               	movf	??___ftge+1,w
  8637  156B  00B1               	movwf	___ftge@ff1+1
  8638  156C  0838               	movf	??___ftge+2,w
  8639  156D  00B2               	movwf	___ftge@ff1+2
  8640  156E                     i1l2387:	
  8641  156E  1FB5               	btfss	___ftge@ff2+2,7
  8642  156F  2D95               	goto	i1l2391
  8643  1570  3000               	movlw	0
  8644  1571  00B6               	movwf	??___ftge
  8645  1572  3000               	movlw	0
  8646  1573  00B7               	movwf	??___ftge+1
  8647  1574  3080               	movlw	128
  8648  1575  00B8               	movwf	??___ftge+2
  8649  1576  0933               	comf	___ftge@ff2,w
  8650  1577  00B9               	movwf	??___ftge+3
  8651  1578  0934               	comf	___ftge@ff2+1,w
  8652  1579  00BA               	movwf	??___ftge+4
  8653  157A  0935               	comf	___ftge@ff2+2,w
  8654  157B  00BB               	movwf	??___ftge+5
  8655  157C  0AB9               	incf	??___ftge+3,f
  8656  157D  1903               	skipnz
  8657  157E  0ABA               	incf	??___ftge+4,f
  8658  157F  1903               	skipnz
  8659  1580  0ABB               	incf	??___ftge+5,f
  8660  1581  0839               	movf	??___ftge+3,w
  8661  1582  07B6               	addwf	??___ftge,f
  8662  1583  083A               	movf	??___ftge+4,w
  8663  1584  1803               	skipnc
  8664  1585  0F3A               	incfsz	??___ftge+4,w
  8665  1586  2D88               	goto	u259_21
  8666  1587  2D89               	goto	u259_22
  8667  1588                     u259_21:	
  8668  1588  07B7               	addwf	??___ftge+1,f
  8669  1589                     u259_22:	
  8670  1589  083B               	movf	??___ftge+5,w
  8671  158A  1803               	skipnc
  8672  158B  0F3B               	incfsz	??___ftge+5,w
  8673  158C  2D8E               	goto	u259_23
  8674  158D  2D8F               	goto	u259_24
  8675  158E                     u259_23:	
  8676  158E  07B8               	addwf	??___ftge+2,f
  8677  158F                     u259_24:	
  8678  158F  0836               	movf	??___ftge,w
  8679  1590  00B3               	movwf	___ftge@ff2
  8680  1591  0837               	movf	??___ftge+1,w
  8681  1592  00B4               	movwf	___ftge@ff2+1
  8682  1593  0838               	movf	??___ftge+2,w
  8683  1594  00B5               	movwf	___ftge@ff2+2
  8684  1595                     i1l2391:	
  8685  1595  3080               	movlw	128
  8686  1596  06B2               	xorwf	___ftge@ff1+2,f
  8687  1597  3080               	movlw	128
  8688  1598  06B5               	xorwf	___ftge@ff2+2,f
  8689  1599  0835               	movf	___ftge@ff2+2,w
  8690  159A  0232               	subwf	___ftge@ff1+2,w
  8691  159B  1D03               	skipz
  8692  159C  0008               	return
  8693  159D  0834               	movf	___ftge@ff2+1,w
  8694  159E  0231               	subwf	___ftge@ff1+1,w
  8695  159F  1D03               	skipz
  8696  15A0  0008               	return
  8697  15A1  0833               	movf	___ftge@ff2,w
  8698  15A2  0230               	subwf	___ftge@ff1,w
  8699  15A3  0008               	return
  8700  15A4                     __end_of___ftge:	
  8701                           
  8702                           	psect	text37
  8703  1256                     __ptext37:	
  8704 ;; *************** function ___lwtoft *****************
  8705 ;; Defined at:
  8706 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  c               2    8[COMMON] unsigned int 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;		None
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  3    8[COMMON] float 
  8713 ;; Registers used:
  8714 ;;		wreg, status,2, status,0, pclath, cstack
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8720 ;;      Params:         3       0       0       0       0
  8721 ;;      Locals:         0       0       0       0       0
  8722 ;;      Temps:          1       0       0       0       0
  8723 ;;      Totals:         4       0       0       0       0
  8724 ;;Total ram usage:        4 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:    1
  8727 ;; This function calls:
  8728 ;;		___ftpack
  8729 ;; This function is called by:
  8730 ;;		_Fuzzy
  8731 ;;		_ISR
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           
  8736                           ;psect for function ___lwtoft
  8737  1256                     ___lwtoft:	
  8738                           
  8739                           ;incstack = 0
  8740                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8741  1256  0878               	movf	___lwtoft@c,w
  8742  1257  00F0               	movwf	___ftpack@arg
  8743  1258  0879               	movf	___lwtoft@c+1,w
  8744  1259  00F1               	movwf	___ftpack@arg+1
  8745  125A  01F2               	clrf	___ftpack@arg+2
  8746  125B  308E               	movlw	142
  8747  125C  00FB               	movwf	??___lwtoft
  8748  125D  087B               	movf	??___lwtoft,w
  8749  125E  00F3               	movwf	___ftpack@exp
  8750  125F  01F4               	clrf	___ftpack@sign
  8751  1260  160A  118A  25A4   	fcall	___ftpack
  8752  1263  0870               	movf	?___ftpack,w
  8753  1264  00F8               	movwf	?___lwtoft
  8754  1265  0871               	movf	?___ftpack+1,w
  8755  1266  00F9               	movwf	?___lwtoft+1
  8756  1267  0872               	movf	?___ftpack+2,w
  8757  1268  00FA               	movwf	?___lwtoft+2
  8758  1269  0008               	return
  8759  126A                     __end_of___lwtoft:	
  8760                           
  8761                           	psect	text38
  8762  0818                     __ptext38:	
  8763 ;; *************** function ___fttol *****************
  8764 ;; Defined at:
  8765 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  f1              3   16[BANK0 ] float 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  lval            4   25[BANK0 ] unsigned long 
  8770 ;;  exp1            1   29[BANK0 ] unsigned char 
  8771 ;;  sign1           1   24[BANK0 ] unsigned char 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  4   16[BANK0 ] long 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8781 ;;      Params:         0       4       0       0       0
  8782 ;;      Locals:         0       6       0       0       0
  8783 ;;      Temps:          0       4       0       0       0
  8784 ;;      Totals:         0      14       0       0       0
  8785 ;;Total ram usage:       14 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; This function calls:
  8788 ;;		Nothing
  8789 ;; This function is called by:
  8790 ;;		_Fuzzy
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           
  8795                           ;psect for function ___fttol
  8796  0818                     ___fttol:	
  8797                           
  8798                           ;incstack = 0
  8799                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8800  0818  1283               	bcf	3,5	;RP0=0, select bank0
  8801  0819  1303               	bcf	3,6	;RP1=0, select bank0
  8802  081A  0830               	movf	___fttol@f1,w
  8803  081B  00B4               	movwf	??___fttol
  8804  081C  0831               	movf	___fttol@f1+1,w
  8805  081D  00B5               	movwf	??___fttol+1
  8806  081E  0832               	movf	___fttol@f1+2,w
  8807  081F  00B6               	movwf	??___fttol+2
  8808  0820  1003               	clrc
  8809  0821  0D35               	rlf	??___fttol+1,w
  8810  0822  0D36               	rlf	??___fttol+2,w
  8811  0823  00B7               	movwf	??___fttol+3
  8812  0824  0837               	movf	??___fttol+3,w
  8813  0825  00BD               	movwf	___fttol@exp1
  8814  0826  08BD               	movf	___fttol@exp1,f
  8815  0827  1D03               	skipz
  8816  0828  2832               	goto	i1l2619
  8817  0829  3000               	movlw	0
  8818  082A  00B3               	movwf	?___fttol+3
  8819  082B  3000               	movlw	0
  8820  082C  00B2               	movwf	?___fttol+2
  8821  082D  3000               	movlw	0
  8822  082E  00B1               	movwf	?___fttol+1
  8823  082F  3000               	movlw	0
  8824  0830  00B0               	movwf	?___fttol
  8825  0831  0008               	return
  8826  0832                     i1l2619:	
  8827  0832  0830               	movf	___fttol@f1,w
  8828  0833  00B4               	movwf	??___fttol
  8829  0834  0831               	movf	___fttol@f1+1,w
  8830  0835  00B5               	movwf	??___fttol+1
  8831  0836  0832               	movf	___fttol@f1+2,w
  8832  0837  00B6               	movwf	??___fttol+2
  8833  0838  3017               	movlw	23
  8834  0839                     u309_25:	
  8835  0839  1003               	clrc
  8836  083A  0CB6               	rrf	??___fttol+2,f
  8837  083B  0CB5               	rrf	??___fttol+1,f
  8838  083C  0CB4               	rrf	??___fttol,f
  8839  083D  3EFF               	addlw	-1
  8840  083E  1D03               	skipz
  8841  083F  2839               	goto	u309_25
  8842  0840  0834               	movf	??___fttol,w
  8843  0841  00B7               	movwf	??___fttol+3
  8844  0842  0837               	movf	??___fttol+3,w
  8845  0843  00B8               	movwf	___fttol@sign1
  8846  0844  17B1               	bsf	___fttol@f1+1,7
  8847  0845  30FF               	movlw	255
  8848  0846  05B0               	andwf	___fttol@f1,f
  8849  0847  30FF               	movlw	255
  8850  0848  05B1               	andwf	___fttol@f1+1,f
  8851  0849  3000               	movlw	0
  8852  084A  05B2               	andwf	___fttol@f1+2,f
  8853  084B  0830               	movf	___fttol@f1,w
  8854  084C  00B9               	movwf	___fttol@lval
  8855  084D  0831               	movf	___fttol@f1+1,w
  8856  084E  00BA               	movwf	___fttol@lval+1
  8857  084F  0832               	movf	___fttol@f1+2,w
  8858  0850  00BB               	movwf	___fttol@lval+2
  8859  0851  01BC               	clrf	___fttol@lval+3
  8860  0852  308E               	movlw	142
  8861  0853  02BD               	subwf	___fttol@exp1,f
  8862  0854  1FBD               	btfss	___fttol@exp1,7
  8863  0855  2874               	goto	i1l2639
  8864  0856  083D               	movf	___fttol@exp1,w
  8865  0857  3A80               	xorlw	128
  8866  0858  3E8F               	addlw	143
  8867  0859  1803               	skipnc
  8868  085A  2864               	goto	i1l2637
  8869  085B  3000               	movlw	0
  8870  085C  00B3               	movwf	?___fttol+3
  8871  085D  3000               	movlw	0
  8872  085E  00B2               	movwf	?___fttol+2
  8873  085F  3000               	movlw	0
  8874  0860  00B1               	movwf	?___fttol+1
  8875  0861  3000               	movlw	0
  8876  0862  00B0               	movwf	?___fttol
  8877  0863  0008               	return
  8878  0864                     i1l2637:	
  8879  0864  3001               	movlw	1
  8880  0865                     u312_25:	
  8881  0865  1003               	clrc
  8882  0866  0CBC               	rrf	___fttol@lval+3,f
  8883  0867  0CBB               	rrf	___fttol@lval+2,f
  8884  0868  0CBA               	rrf	___fttol@lval+1,f
  8885  0869  0CB9               	rrf	___fttol@lval,f
  8886  086A  3EFF               	addlw	-1
  8887  086B  1D03               	skipz
  8888  086C  2865               	goto	u312_25
  8889  086D  3001               	movlw	1
  8890  086E  00B4               	movwf	??___fttol
  8891  086F  0834               	movf	??___fttol,w
  8892  0870  07BD               	addwf	___fttol@exp1,f
  8893  0871  1903               	btfsc	3,2
  8894  0872  288F               	goto	i1l2649
  8895  0873  2864               	goto	i1l2637
  8896  0874                     i1l2639:	
  8897  0874  3018               	movlw	24
  8898  0875  023D               	subwf	___fttol@exp1,w
  8899  0876  1C03               	skipc
  8900  0877  288C               	goto	i1l2647
  8901  0878  3000               	movlw	0
  8902  0879  00B3               	movwf	?___fttol+3
  8903  087A  3000               	movlw	0
  8904  087B  00B2               	movwf	?___fttol+2
  8905  087C  3000               	movlw	0
  8906  087D  00B1               	movwf	?___fttol+1
  8907  087E  3000               	movlw	0
  8908  087F  00B0               	movwf	?___fttol
  8909  0880  0008               	return
  8910  0881                     i1l2645:	
  8911  0881  3001               	movlw	1
  8912  0882  00B4               	movwf	??___fttol
  8913  0883                     u315_25:	
  8914  0883  1003               	clrc
  8915  0884  0DB9               	rlf	___fttol@lval,f
  8916  0885  0DBA               	rlf	___fttol@lval+1,f
  8917  0886  0DBB               	rlf	___fttol@lval+2,f
  8918  0887  0DBC               	rlf	___fttol@lval+3,f
  8919  0888  0BB4               	decfsz	??___fttol,f
  8920  0889  2883               	goto	u315_25
  8921  088A  3001               	movlw	1
  8922  088B  02BD               	subwf	___fttol@exp1,f
  8923  088C                     i1l2647:	
  8924  088C  08BD               	movf	___fttol@exp1,f
  8925  088D  1D03               	skipz
  8926  088E  2881               	goto	i1l2645
  8927  088F                     i1l2649:	
  8928  088F  0838               	movf	___fttol@sign1,w
  8929  0890  1903               	btfsc	3,2
  8930  0891  289D               	goto	i1l2653
  8931  0892  09B9               	comf	___fttol@lval,f
  8932  0893  09BA               	comf	___fttol@lval+1,f
  8933  0894  09BB               	comf	___fttol@lval+2,f
  8934  0895  09BC               	comf	___fttol@lval+3,f
  8935  0896  0AB9               	incf	___fttol@lval,f
  8936  0897  1903               	skipnz
  8937  0898  0ABA               	incf	___fttol@lval+1,f
  8938  0899  1903               	skipnz
  8939  089A  0ABB               	incf	___fttol@lval+2,f
  8940  089B  1903               	skipnz
  8941  089C  0ABC               	incf	___fttol@lval+3,f
  8942  089D                     i1l2653:	
  8943  089D  083C               	movf	___fttol@lval+3,w
  8944  089E  00B3               	movwf	?___fttol+3
  8945  089F  083B               	movf	___fttol@lval+2,w
  8946  08A0  00B2               	movwf	?___fttol+2
  8947  08A1  083A               	movf	___fttol@lval+1,w
  8948  08A2  00B1               	movwf	?___fttol+1
  8949  08A3  0839               	movf	___fttol@lval,w
  8950  08A4  00B0               	movwf	?___fttol
  8951  08A5  0008               	return
  8952  08A6                     __end_of___fttol:	
  8953                           
  8954                           	psect	text39
  8955  172F                     __ptext39:	
  8956 ;; *************** function ___ftmul *****************
  8957 ;; Defined at:
  8958 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  f1              3    8[COMMON] float 
  8961 ;;  f2              3   11[COMMON] float 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  8964 ;;  sign            1    9[BANK0 ] unsigned char 
  8965 ;;  cntr            1    8[BANK0 ] unsigned char 
  8966 ;;  exp             1    4[BANK0 ] unsigned char 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  3    8[COMMON] float 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0, pclath, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8976 ;;      Params:         6       0       0       0       0
  8977 ;;      Locals:         0       6       0       0       0
  8978 ;;      Temps:          0       4       0       0       0
  8979 ;;      Totals:         6      10       0       0       0
  8980 ;;Total ram usage:       16 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    1
  8983 ;; This function calls:
  8984 ;;		___ftpack
  8985 ;; This function is called by:
  8986 ;;		_Fuzzy
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function ___ftmul
  8992  172F                     ___ftmul:	
  8993                           
  8994                           ;incstack = 0
  8995                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8996  172F  0878               	movf	___ftmul@f1,w
  8997  1730  1283               	bcf	3,5	;RP0=0, select bank0
  8998  1731  1303               	bcf	3,6	;RP1=0, select bank0
  8999  1732  00A0               	movwf	??___ftmul
  9000  1733  0879               	movf	___ftmul@f1+1,w
  9001  1734  00A1               	movwf	??___ftmul+1
  9002  1735  087A               	movf	___ftmul@f1+2,w
  9003  1736  00A2               	movwf	??___ftmul+2
  9004  1737  1003               	clrc
  9005  1738  0D21               	rlf	??___ftmul+1,w
  9006  1739  0D22               	rlf	??___ftmul+2,w
  9007  173A  00A3               	movwf	??___ftmul+3
  9008  173B  0823               	movf	??___ftmul+3,w
  9009  173C  00A4               	movwf	___ftmul@exp
  9010  173D  08A4               	movf	___ftmul@exp,f
  9011  173E  1D03               	skipz
  9012  173F  2F47               	goto	i1l2569
  9013  1740  3000               	movlw	0
  9014  1741  00F8               	movwf	?___ftmul
  9015  1742  3000               	movlw	0
  9016  1743  00F9               	movwf	?___ftmul+1
  9017  1744  3000               	movlw	0
  9018  1745  00FA               	movwf	?___ftmul+2
  9019  1746  0008               	return
  9020  1747                     i1l2569:	
  9021  1747  087B               	movf	___ftmul@f2,w
  9022  1748  00A0               	movwf	??___ftmul
  9023  1749  087C               	movf	___ftmul@f2+1,w
  9024  174A  00A1               	movwf	??___ftmul+1
  9025  174B  087D               	movf	___ftmul@f2+2,w
  9026  174C  00A2               	movwf	??___ftmul+2
  9027  174D  1003               	clrc
  9028  174E  0D21               	rlf	??___ftmul+1,w
  9029  174F  0D22               	rlf	??___ftmul+2,w
  9030  1750  00A3               	movwf	??___ftmul+3
  9031  1751  0823               	movf	??___ftmul+3,w
  9032  1752  00A9               	movwf	___ftmul@sign
  9033  1753  08A9               	movf	___ftmul@sign,f
  9034  1754  1D03               	skipz
  9035  1755  2F5D               	goto	i1l2575
  9036  1756  3000               	movlw	0
  9037  1757  00F8               	movwf	?___ftmul
  9038  1758  3000               	movlw	0
  9039  1759  00F9               	movwf	?___ftmul+1
  9040  175A  3000               	movlw	0
  9041  175B  00FA               	movwf	?___ftmul+2
  9042  175C  0008               	return
  9043  175D                     i1l2575:	
  9044  175D  0829               	movf	___ftmul@sign,w
  9045  175E  3E7B               	addlw	123
  9046  175F  00A0               	movwf	??___ftmul
  9047  1760  0820               	movf	??___ftmul,w
  9048  1761  07A4               	addwf	___ftmul@exp,f
  9049  1762  0878               	movf	___ftmul@f1,w
  9050  1763  00A0               	movwf	??___ftmul
  9051  1764  0879               	movf	___ftmul@f1+1,w
  9052  1765  00A1               	movwf	??___ftmul+1
  9053  1766  087A               	movf	___ftmul@f1+2,w
  9054  1767  00A2               	movwf	??___ftmul+2
  9055  1768  3010               	movlw	16
  9056  1769                     u296_25:	
  9057  1769  1003               	clrc
  9058  176A  0CA2               	rrf	??___ftmul+2,f
  9059  176B  0CA1               	rrf	??___ftmul+1,f
  9060  176C  0CA0               	rrf	??___ftmul,f
  9061  176D  3EFF               	addlw	-1
  9062  176E  1D03               	skipz
  9063  176F  2F69               	goto	u296_25
  9064  1770  0820               	movf	??___ftmul,w
  9065  1771  00A3               	movwf	??___ftmul+3
  9066  1772  0823               	movf	??___ftmul+3,w
  9067  1773  00A9               	movwf	___ftmul@sign
  9068  1774  087B               	movf	___ftmul@f2,w
  9069  1775  00A0               	movwf	??___ftmul
  9070  1776  087C               	movf	___ftmul@f2+1,w
  9071  1777  00A1               	movwf	??___ftmul+1
  9072  1778  087D               	movf	___ftmul@f2+2,w
  9073  1779  00A2               	movwf	??___ftmul+2
  9074  177A  3010               	movlw	16
  9075  177B                     u297_25:	
  9076  177B  1003               	clrc
  9077  177C  0CA2               	rrf	??___ftmul+2,f
  9078  177D  0CA1               	rrf	??___ftmul+1,f
  9079  177E  0CA0               	rrf	??___ftmul,f
  9080  177F  3EFF               	addlw	-1
  9081  1780  1D03               	skipz
  9082  1781  2F7B               	goto	u297_25
  9083  1782  0820               	movf	??___ftmul,w
  9084  1783  00A3               	movwf	??___ftmul+3
  9085  1784  0823               	movf	??___ftmul+3,w
  9086  1785  06A9               	xorwf	___ftmul@sign,f
  9087  1786  3080               	movlw	128
  9088  1787  00A0               	movwf	??___ftmul
  9089  1788  0820               	movf	??___ftmul,w
  9090  1789  05A9               	andwf	___ftmul@sign,f
  9091  178A  17F9               	bsf	___ftmul@f1+1,7
  9092  178B  17FC               	bsf	___ftmul@f2+1,7
  9093  178C  30FF               	movlw	255
  9094  178D  05FB               	andwf	___ftmul@f2,f
  9095  178E  30FF               	movlw	255
  9096  178F  05FC               	andwf	___ftmul@f2+1,f
  9097  1790  3000               	movlw	0
  9098  1791  05FD               	andwf	___ftmul@f2+2,f
  9099  1792  3000               	movlw	0
  9100  1793  00A5               	movwf	___ftmul@f3_as_product
  9101  1794  3000               	movlw	0
  9102  1795  00A6               	movwf	___ftmul@f3_as_product+1
  9103  1796  3000               	movlw	0
  9104  1797  00A7               	movwf	___ftmul@f3_as_product+2
  9105  1798  3007               	movlw	7
  9106  1799  00A0               	movwf	??___ftmul
  9107  179A  0820               	movf	??___ftmul,w
  9108  179B  00A8               	movwf	___ftmul@cntr
  9109  179C                     i1l2587:	
  9110  179C  1C78               	btfss	___ftmul@f1,0
  9111  179D  2FAC               	goto	i1l2591
  9112  179E  087B               	movf	___ftmul@f2,w
  9113  179F  07A5               	addwf	___ftmul@f3_as_product,f
  9114  17A0  087C               	movf	___ftmul@f2+1,w
  9115  17A1  1103               	clrz
  9116  17A2  1803               	skipnc
  9117  17A3  0A7C               	incf	___ftmul@f2+1,w
  9118  17A4  1D03               	btfss	3,2
  9119  17A5  07A6               	addwf	___ftmul@f3_as_product+1,f
  9120  17A6  087D               	movf	___ftmul@f2+2,w
  9121  17A7  1103               	clrz
  9122  17A8  1803               	skipnc
  9123  17A9  0A7D               	incf	___ftmul@f2+2,w
  9124  17AA  1D03               	btfss	3,2
  9125  17AB  07A7               	addwf	___ftmul@f3_as_product+2,f
  9126  17AC                     i1l2591:	
  9127  17AC  3001               	movlw	1
  9128  17AD                     u300_25:	
  9129  17AD  1003               	clrc
  9130  17AE  0CFA               	rrf	___ftmul@f1+2,f
  9131  17AF  0CF9               	rrf	___ftmul@f1+1,f
  9132  17B0  0CF8               	rrf	___ftmul@f1,f
  9133  17B1  3EFF               	addlw	-1
  9134  17B2  1D03               	skipz
  9135  17B3  2FAD               	goto	u300_25
  9136  17B4  3001               	movlw	1
  9137  17B5                     u301_25:	
  9138  17B5  1003               	clrc
  9139  17B6  0DFB               	rlf	___ftmul@f2,f
  9140  17B7  0DFC               	rlf	___ftmul@f2+1,f
  9141  17B8  0DFD               	rlf	___ftmul@f2+2,f
  9142  17B9  3EFF               	addlw	-1
  9143  17BA  1D03               	skipz
  9144  17BB  2FB5               	goto	u301_25
  9145  17BC  3001               	movlw	1
  9146  17BD  02A8               	subwf	___ftmul@cntr,f
  9147  17BE  1D03               	btfss	3,2
  9148  17BF  2F9C               	goto	i1l2587
  9149  17C0  3009               	movlw	9
  9150  17C1  00A0               	movwf	??___ftmul
  9151  17C2  0820               	movf	??___ftmul,w
  9152  17C3  00A8               	movwf	___ftmul@cntr
  9153  17C4                     i1l2599:	
  9154  17C4  1C78               	btfss	___ftmul@f1,0
  9155  17C5  2FD4               	goto	i1l2603
  9156  17C6  087B               	movf	___ftmul@f2,w
  9157  17C7  07A5               	addwf	___ftmul@f3_as_product,f
  9158  17C8  087C               	movf	___ftmul@f2+1,w
  9159  17C9  1103               	clrz
  9160  17CA  1803               	skipnc
  9161  17CB  0A7C               	incf	___ftmul@f2+1,w
  9162  17CC  1D03               	btfss	3,2
  9163  17CD  07A6               	addwf	___ftmul@f3_as_product+1,f
  9164  17CE  087D               	movf	___ftmul@f2+2,w
  9165  17CF  1103               	clrz
  9166  17D0  1803               	skipnc
  9167  17D1  0A7D               	incf	___ftmul@f2+2,w
  9168  17D2  1D03               	btfss	3,2
  9169  17D3  07A7               	addwf	___ftmul@f3_as_product+2,f
  9170  17D4                     i1l2603:	
  9171  17D4  3001               	movlw	1
  9172  17D5                     u305_25:	
  9173  17D5  1003               	clrc
  9174  17D6  0CFA               	rrf	___ftmul@f1+2,f
  9175  17D7  0CF9               	rrf	___ftmul@f1+1,f
  9176  17D8  0CF8               	rrf	___ftmul@f1,f
  9177  17D9  3EFF               	addlw	-1
  9178  17DA  1D03               	skipz
  9179  17DB  2FD5               	goto	u305_25
  9180  17DC  3001               	movlw	1
  9181  17DD                     u306_25:	
  9182  17DD  1003               	clrc
  9183  17DE  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9184  17DF  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9185  17E0  0CA5               	rrf	___ftmul@f3_as_product,f
  9186  17E1  3EFF               	addlw	-1
  9187  17E2  1D03               	skipz
  9188  17E3  2FDD               	goto	u306_25
  9189  17E4  3001               	movlw	1
  9190  17E5  02A8               	subwf	___ftmul@cntr,f
  9191  17E6  1D03               	btfss	3,2
  9192  17E7  2FC4               	goto	i1l2599
  9193  17E8  0825               	movf	___ftmul@f3_as_product,w
  9194  17E9  00F0               	movwf	___ftpack@arg
  9195  17EA  0826               	movf	___ftmul@f3_as_product+1,w
  9196  17EB  00F1               	movwf	___ftpack@arg+1
  9197  17EC  0827               	movf	___ftmul@f3_as_product+2,w
  9198  17ED  00F2               	movwf	___ftpack@arg+2
  9199  17EE  0824               	movf	___ftmul@exp,w
  9200  17EF  00A0               	movwf	??___ftmul
  9201  17F0  0820               	movf	??___ftmul,w
  9202  17F1  00F3               	movwf	___ftpack@exp
  9203  17F2  0829               	movf	___ftmul@sign,w
  9204  17F3  00A1               	movwf	??___ftmul+1
  9205  17F4  0821               	movf	??___ftmul+1,w
  9206  17F5  00F4               	movwf	___ftpack@sign
  9207  17F6  160A  118A  25A4   	fcall	___ftpack
  9208  17F9  0870               	movf	?___ftpack,w
  9209  17FA  00F8               	movwf	?___ftmul
  9210  17FB  0871               	movf	?___ftpack+1,w
  9211  17FC  00F9               	movwf	?___ftmul+1
  9212  17FD  0872               	movf	?___ftpack+2,w
  9213  17FE  00FA               	movwf	?___ftmul+2
  9214  17FF  0008               	return
  9215  1800                     __end_of___ftmul:	
  9216                           
  9217                           	psect	text40
  9218  15A4                     __ptext40:	
  9219 ;; *************** function ___ftpack *****************
  9220 ;; Defined at:
  9221 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  arg             3    0[COMMON] unsigned um
  9224 ;;  exp             1    3[COMMON] unsigned char 
  9225 ;;  sign            1    4[COMMON] unsigned char 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;		None
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  3    0[COMMON] float 
  9230 ;; Registers used:
  9231 ;;		wreg, status,2, status,0
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9237 ;;      Params:         5       0       0       0       0
  9238 ;;      Locals:         0       0       0       0       0
  9239 ;;      Temps:          3       0       0       0       0
  9240 ;;      Totals:         8       0       0       0       0
  9241 ;;Total ram usage:        8 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; This function calls:
  9244 ;;		Nothing
  9245 ;; This function is called by:
  9246 ;;		___ftadd
  9247 ;;		___ftdiv
  9248 ;;		___ftmul
  9249 ;;		___lwtoft
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           
  9254                           ;psect for function ___ftpack
  9255  15A4                     ___ftpack:	
  9256                           
  9257                           ;incstack = 0
  9258                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9259  15A4  0873               	movf	___ftpack@exp,w
  9260  15A5  1903               	btfsc	3,2
  9261  15A6  2DAC               	goto	i1l2239
  9262  15A7  0872               	movf	___ftpack@arg+2,w
  9263  15A8  0471               	iorwf	___ftpack@arg+1,w
  9264  15A9  0470               	iorwf	___ftpack@arg,w
  9265  15AA  1D03               	skipz
  9266  15AB  2DBF               	goto	i1l2245
  9267  15AC                     i1l2239:	
  9268  15AC  3000               	movlw	0
  9269  15AD  00F0               	movwf	?___ftpack
  9270  15AE  3000               	movlw	0
  9271  15AF  00F1               	movwf	?___ftpack+1
  9272  15B0  3000               	movlw	0
  9273  15B1  00F2               	movwf	?___ftpack+2
  9274  15B2  0008               	return
  9275  15B3                     i1l2243:	
  9276  15B3  3001               	movlw	1
  9277  15B4  00F5               	movwf	??___ftpack
  9278  15B5  0875               	movf	??___ftpack,w
  9279  15B6  07F3               	addwf	___ftpack@exp,f
  9280  15B7  3001               	movlw	1
  9281  15B8                     u214_25:	
  9282  15B8  1003               	clrc
  9283  15B9  0CF2               	rrf	___ftpack@arg+2,f
  9284  15BA  0CF1               	rrf	___ftpack@arg+1,f
  9285  15BB  0CF0               	rrf	___ftpack@arg,f
  9286  15BC  3EFF               	addlw	-1
  9287  15BD  1D03               	skipz
  9288  15BE  2DB8               	goto	u214_25
  9289  15BF                     i1l2245:	
  9290  15BF  30FE               	movlw	254
  9291  15C0  0572               	andwf	___ftpack@arg+2,w
  9292  15C1  1903               	btfsc	3,2
  9293  15C2  2DDA               	goto	i1l756
  9294  15C3  2DB3               	goto	i1l2243
  9295  15C4                     i1l2247:	
  9296  15C4  3001               	movlw	1
  9297  15C5  00F5               	movwf	??___ftpack
  9298  15C6  0875               	movf	??___ftpack,w
  9299  15C7  07F3               	addwf	___ftpack@exp,f
  9300  15C8  3001               	movlw	1
  9301  15C9  07F0               	addwf	___ftpack@arg,f
  9302  15CA  3000               	movlw	0
  9303  15CB  1803               	skipnc
  9304  15CC  3001               	movlw	1
  9305  15CD  07F1               	addwf	___ftpack@arg+1,f
  9306  15CE  3000               	movlw	0
  9307  15CF  1803               	skipnc
  9308  15D0  3001               	movlw	1
  9309  15D1  07F2               	addwf	___ftpack@arg+2,f
  9310  15D2  3001               	movlw	1
  9311  15D3                     u216_25:	
  9312  15D3  1003               	clrc
  9313  15D4  0CF2               	rrf	___ftpack@arg+2,f
  9314  15D5  0CF1               	rrf	___ftpack@arg+1,f
  9315  15D6  0CF0               	rrf	___ftpack@arg,f
  9316  15D7  3EFF               	addlw	-1
  9317  15D8  1D03               	skipz
  9318  15D9  2DD3               	goto	u216_25
  9319  15DA                     i1l756:	
  9320  15DA  30FF               	movlw	255
  9321  15DB  0572               	andwf	___ftpack@arg+2,w
  9322  15DC  1903               	btfsc	3,2
  9323  15DD  2DE9               	goto	i1l2255
  9324  15DE  2DC4               	goto	i1l2247
  9325  15DF                     i1l2253:	
  9326  15DF  3001               	movlw	1
  9327  15E0  02F3               	subwf	___ftpack@exp,f
  9328  15E1  3001               	movlw	1
  9329  15E2                     u218_25:	
  9330  15E2  1003               	clrc
  9331  15E3  0DF0               	rlf	___ftpack@arg,f
  9332  15E4  0DF1               	rlf	___ftpack@arg+1,f
  9333  15E5  0DF2               	rlf	___ftpack@arg+2,f
  9334  15E6  3EFF               	addlw	-1
  9335  15E7  1D03               	skipz
  9336  15E8  2DE2               	goto	u218_25
  9337  15E9                     i1l2255:	
  9338  15E9  1FF1               	btfss	___ftpack@arg+1,7
  9339  15EA  2DDF               	goto	i1l2253
  9340  15EB  1873               	btfsc	___ftpack@exp,0
  9341  15EC  2DF3               	goto	i1l762
  9342  15ED  30FF               	movlw	255
  9343  15EE  05F0               	andwf	___ftpack@arg,f
  9344  15EF  307F               	movlw	127
  9345  15F0  05F1               	andwf	___ftpack@arg+1,f
  9346  15F1  30FF               	movlw	255
  9347  15F2  05F2               	andwf	___ftpack@arg+2,f
  9348  15F3                     i1l762:	
  9349  15F3  1003               	clrc
  9350  15F4  0CF3               	rrf	___ftpack@exp,f
  9351  15F5  0873               	movf	___ftpack@exp,w
  9352  15F6  00F5               	movwf	??___ftpack
  9353  15F7  01F6               	clrf	??___ftpack+1
  9354  15F8  01F7               	clrf	??___ftpack+2
  9355  15F9  3010               	movlw	16
  9356  15FA                     u221_25:	
  9357  15FA  1003               	clrc
  9358  15FB  0DF5               	rlf	??___ftpack,f
  9359  15FC  0DF6               	rlf	??___ftpack+1,f
  9360  15FD  0DF7               	rlf	??___ftpack+2,f
  9361  15FE  3EFF               	addlw	-1
  9362  15FF  1D03               	skipz
  9363  1600  2DFA               	goto	u221_25
  9364  1601  0875               	movf	??___ftpack,w
  9365  1602  04F0               	iorwf	___ftpack@arg,f
  9366  1603  0876               	movf	??___ftpack+1,w
  9367  1604  04F1               	iorwf	___ftpack@arg+1,f
  9368  1605  0877               	movf	??___ftpack+2,w
  9369  1606  04F2               	iorwf	___ftpack@arg+2,f
  9370  1607  0874               	movf	___ftpack@sign,w
  9371  1608  1903               	btfsc	3,2
  9372  1609  0008               	return
  9373  160A  17F2               	bsf	___ftpack@arg+2,7
  9374  160B  0008               	return
  9375  160C                     __end_of___ftpack:	
  9376  007E                     btemp	set	126	;btemp
  9377  007E                     wtemp	set	126
  9378  007E                     wtemp0	set	126
  9379  0080                     wtemp1	set	128
  9380  0082                     wtemp2	set	130
  9381  0084                     wtemp3	set	132
  9382  0086                     wtemp4	set	134
  9383  0088                     wtemp5	set	136
  9384  007F                     wtemp6	set	127
  9385  007E                     ttemp	set	126
  9386  007E                     ttemp0	set	126
  9387  0081                     ttemp1	set	129
  9388  0084                     ttemp2	set	132
  9389  0087                     ttemp3	set	135
  9390  007F                     ttemp4	set	127
  9391  007E                     ltemp	set	126
  9392  007E                     ltemp0	set	126
  9393  0082                     ltemp1	set	130
  9394  0086                     ltemp2	set	134
  9395  0080                     ltemp3	set	128


Data Sizes:
    Strings     82
    Constant    10
    Data        10
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80     34      80
    BANK3            96      0      19
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1243$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[6]), display_rpm(BANK3[10]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_5(CODE[40]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_PWM_DutyCycle2
    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _send->_USART_WriteChar
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->i1_PWM_DutyCycle2
    i1_PWM_DutyCycle2->___lwtoft
    ___ftneg->___lwtoft
    ___ftadd->___lwtoft
    ___ftge->___lwtoft
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    i1_PWM_DutyCycle2->___fttol
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _max_val->___ftge
    ___ftge->___ftadd
    ___fttol->___ftadd

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3518
                                             31 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2027
                                             14 BANK1     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     296
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     366
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     259
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     322
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   60496
                                             73 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                           ___lwtoft
                               _send
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send                                                 3     3      0     136
                                              1 COMMON     3     3      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               23    23      0   56998
                                             50 BANK0     23    23      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                             12 COMMON     2     2      0
                                             30 BANK0      2     0      2
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   15310
                                             32 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   16167
                                             32 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     813
                                              0 BANK0      3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    6190
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4704
                                             28 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    4232
                                             16 BANK0     12     6      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2582
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     444
                                             16 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _trapmf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     _trimf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     i1_PWM_DutyCycle2
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwtoft
     ___ftpack
   _send
     _USART_WriteChar
   i1_PWM_DutyCycle2
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   i1_TIMER0_Set
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      13       9       19.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C1      12        0.0%
ABS                  0      0      C1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jun 22 01:18:22 2022

         ?i1_PWM_DutyCycle2 003E                           _x 00B5                           _y 00B8  
                         pc 0002                 ?_LCD_Cursor 00C9     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        _tf 006D                          fsr 0004         ___wmul@multiplicand 00CB  
        ??i1_PWM_DutyCycle2 007C            i1___wmul@product 007C                ___ftadd@exp1 002F  
              ___ftadd@exp2 002E               _contagens_tm0 00BD                ___ftadd@sign 002D  
                       l199 0935                         l650 0769                         l476 0E76  
                       l494 0F3B                         l595 138B                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0BBF                         _rpm 00C3  
                       fsr0 0004                         _pwm 01A1                         _sum 00AF  
__size_of_USART_WriteString 001C                         indf 0000                __CFG_FOSC$HS 0000  
         ??_LCD_WriteString 00CD                __CFG_LVP$OFF 0000                        ?_ISR 0070  
              ___ftdiv@cntr 003A                ___ftdiv@sign 003F                        l3005 12E4  
        LCD_WriteString@Str 00CB                        l3113 0F9E                        l3105 0F85  
                      l3041 0E86                        l3033 0E72                        l3019 13CD  
                      l3107 0F89                        l3131 0FF9                        l3045 0E98  
                      l3127 0FB1                        l3119 0FAD                        l3071 0F0C  
                      l3055 0ED6                        l3039 0E7B                        l2513 1383  
                      l3057 0EED                        l3129 0E50                        l2507 1242  
                      l3067 0F06                        l2541 078A                        l2533 077A  
                      l2701 142D                        l2551 07C2                        l2543 079A  
                      l3087 0F5A                        l3079 0F2D                        l3097 0F6F  
                      l3089 0F5E                        l2555 07CF                        l2559 07DD  
                      l2675 14A0                        l2667 147C                        l2691 1406  
                      l2669 148A                        l2693 1414                        l2679 14AB  
                      l2697 1422                        STR_1 1053                        STR_2 1042  
                      STR_3 1067                        STR_4 1061                        STR_5 101A  
                      u3215 148B                        u3225 1497                        u3235 14A1  
                      u4107 092E                        u4117 098B                        u4207 1674  
                      u4127 0812                        u4217 12F0                        u4137 1616  
                      u3265 1409                        u4227 13B0                        u4147 1626  
                      u3195 147F                        u4237 13BE                        u4157 1634  
                      u3285 141A                        u4247 13CA                        u4167 1640  
                      u3295 1423                        u2815 138C                        u4257 127B  
                      u4177 164C                        u3625 130B                        u2905 07B1  
                      u2825 1393                        u4187 165A                        u2915 07C3  
                      u4197 1668                        u3725 0F4A                        u3575 132C  
                      u2875 078E                        u3595 14BD                        u3685 0F23  
                      u2895 079C                        _OERR 00C1                        _TMR0 0001  
                      _TMR1 000E                        _main 08A6                ___ftpack@arg 0070  
        __size_of_LCD_Clear 0029                ___ftpack@exp 0073                        _send 14FB  
                      btemp 007E            __end_of_ADC_Init 1256                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 0801                ___ftmul@cntr 0028  
              ___ftmul@sign 0029     __end_of_USART_WriteChar 120F                       ??_ISR 0069  
              ___fttol@exp1 003D                ___fttol@lval 0039                 ?_TIMER0_Set 0070  
          __end_of_LCD_Init 1677             __end_of___aldiv 07E6                       ?_main 0070  
                     _EEADR 010D             __end_of___ftadd 0A9B                       ?_send 0070  
             __CFG_WDTE$OFF 0000             __end_of___ftdiv 172F             __end_of___ftneg 1229  
           __end_of___ftmul 1800                       _T1CON 0010             __end_of___fttol 08A6  
           __end_of___lwdiv 14B2                       i1l112 0BB6                       i1l122 0E40  
                     i1l224 1208                       i1l180 0CE6                       i1l149 0121  
           __end_of___lwmod 1434                       i1l762 15F3                       i1l595 1342  
                     i1l756 15DA                       i1l785 0A3A                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _TXREG 0019               __CFG_PWRTE$ON 0000  
                     _Fuzzy 006B             __end_of_dpowers 101A             __end_of_max_val 12D6  
           __end_of_isdigit 1244               ___ftpack@sign 0074                       _trimf 0A9B  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 137F            __end_ofi1___wmul 135B                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
                     ttemp0 007E                       ttemp1 0081                       ttemp2 0084  
                     ttemp3 0087                       ttemp4 007F                       status 0003  
       i1___wmul@multiplier 0078                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F             __end_of_sprintf 1000  
        __size_ofi1___lwdiv 003E              ??_LCD_WriteCmd 00C9              ?_LCD_WriteData 0070  
               ?_USART_Init 00D8       i1TIMER0_Set@contagens 0070             __initialization 0015  
              __end_of_main 0992                __end_of_send 1545                      ??_main 00E8  
             ___fttol@sign1 0038                      ??_send 0071                ?_TIMER0_Init 0070  
         __end_of_LCD_Clear 13CD                  Fuzzy@a_246 0059                  Fuzzy@a_247 005B  
                    ?_Fuzzy 0070                  Fuzzy@freio 0052                  Fuzzy@reduz 0060  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _CCPR1L 0015                      _CCPR2L 001B                      _EECON2 018D  
          __end_of___ftpack 160C                      ?_trimf 0040                      i1l2311 0A15  
                    i1l2305 0A00                      i1l3201 0BDB                      i1l2243 15B3  
                    i1l2323 0A4C                      i1l2307 0A0C                      i1l2253 15DF  
                    i1l2245 15BF                      i1l2317 0A2A                      i1l2309 0A11  
                    i1l3221 0C21                      i1l3213 0C05                      i1l3205 0BE9  
                    i1l2255 15E9                      i1l2247 15C4                      i1l2239 15AC  
                    i1l2327 0A5E                      i1l2319 0A36                      i1l2423 0B14  
                    i1l2337 0A81                      i1l2281 09C2                      i1l2353 16A5  
                    i1l3233 0C4B                      i1l3225 0C2F                      i1l3217 0C13  
                    i1l3209 0BF7                      i1l2603 17D4                      i1l2347 168F  
                    i1l3171 144A                      i1l2277 09BB                      i1l2453 0D9E  
                    i1l2429 0B99                      i1l3181 146B                      i1l3149 133A  
                    i1l3245 0C82                      i1l3237 0C59                      i1l3229 0C3D  
                    i1l2391 1595                      i1l2287 09D1                      i1l2375 1709  
                    i1l2367 16EA                      i1l2447 0D6C                      i1l3271 0CE1  
                    i1l3247 0C85                      i1l2481 129D                      i1l3177 1460  
                    i1l3169 143C                      i1l3273 0CE2                      i1l2619 0832  
                    i1l2387 156E                      i1l2299 09EB                      i1l2459 0E23  
                    i1l3259 0CA2                      i1l2653 089D                      i1l2645 0881  
                    i1l2637 0864                      i1l2813 0374                      i1l2591 17AC  
                    i1l2575 175D                      i1l2647 088C                      i1l2639 0874  
                    i1l2823 044F                      i1l2735 153A                      i1l2727 1520  
                    i1l2569 1747                      i1l2649 088F                      i1l2841 055D  
                    i1l2817 03E8                      i1l2587 179C                      i1l2851 05E1  
                    i1l2837 04E3                      i1l2773 015C                      i1l2765 0122  
                    i1l2599 17C4                      i1l2847 05C4                      i1l2791 026A  
                    i1l2857 0613                      i1l2769 013F                      i1l2787 01F0  
                    u300_25 17AD                      i1l2797 02D1                      i1l2895 07FB  
                    i1l2887 07EF                      u221_25 15FA                      u301_25 17B5  
                    u214_25 15B8                      u216_25 15D3                      u312_25 0865  
                    u305_25 17D5                      u233_25 09EC                      u218_25 15E2  
                    u306_25 17DD                      u242_25 0A2B                      u250_25 16B7  
                    u315_25 0883                      u251_25 16C9                      u331_25 1292  
                    u236_25 0A01                      u252_25 16EB                      u340_25 02CF  
                    u309_25 0839                      u253_25 16FC                      u254_25 170A  
                    u239_25 0A16                      u343_25 0372                      u257_21 1561  
                    u257_22 1562                      u257_23 1567                      u257_24 1568  
                    u345_25 044D            __end_of___lwtoft 126A                      u338_25 01EE  
                    u259_21 1588                      u259_22 1589                      u259_23 158E  
                    u259_24 158F                      u347_25 04E1                      u349_25 05C2  
       __size_of_TIMER0_Set 0008                      u390_25 1457                      u391_25 1461  
                    u383_25 1343                      u296_25 1769                      u384_25 134A  
                    u297_25 177B                      u387_25 143F                      u389_25 144B  
                    _SSPADD 0093                      _SSPBUF 0013                      Fuzzy@a 0057  
          LCD_WriteCmd@Byte 00CA                      ___ftge 1545                   ??___aldiv 00D1  
                    ___wmul 137F                   ??___ftadd 0029              _PWM_DutyCycle1 12F6  
            _PWM_DutyCycle2 1317            ?_USART_WriteChar 0070                   ??___ftdiv 0036  
                 ??___ftneg 007C                      _deltaV 00BF                   ??___ftmul 0020  
                 ??___fttol 0034                   ??___lwdiv 00CD                   ??___lwmod 00D5  
                    _buffer 0190                      _fitemp 00A3       USART_ReceiveChar@byte 0074  
                    _trapmf 0CF3                      _pulsos 00C1                      _status 00C7  
     ___ftmul@f3_as_product 0025                   ??_max_val 007C           __end_ofi1___lwdiv 1472  
                 ??_isdigit 00C9                   ?_ADC_Init 0070                      saved_w 007E  
       __size_of_USART_Init 0049                      trimf@a 0043                      trimf@b 0046  
                    trimf@c 0049                      trimf@x 0040                   ??_sprintf 00DA  
             ?i1_TIMER0_Set 0070     __end_of__initialization 0067                   ?_LCD_Init 0070  
                ___ftadd@f1 0023                  ___ftadd@f2 0026             ??_LCD_WriteData 00C9  
                ___ftge@ff1 0030                  ___ftge@ff2 0033                  ___ftdiv@f1 0033  
                ___ftdiv@f2 0030                  ___ftdiv@f3 003B                  ___ftneg@f1 0020  
    __end_of_PWM_DutyCycle1 1317      __end_of_PWM_DutyCycle2 1338                  ___ftmul@f1 0078  
                ___ftmul@f2 007B                  ___fttol@f1 0030              __pcstackCOMMON 0070  
             __end_of_Fuzzy 0757                __pidataBANK0 11F9                __pidataBANK1 11FC  
              __pidataBANK3 07FE               LCD_Cursor@Col 00C9               LCD_Cursor@Row 00CB  
              ??_LCD_Cursor 00CA             _LCD_WriteString 13CD               __end_of_trimf 0BBF  
                ___lwtoft@c 0078                   ?_PWM_Init 0070                   ?i1___wmul 0078  
            _OPTION_REGbits 0081                  ??_ADC_Init 00C9        __end_of_LCD_WriteCmd 1281  
                   ??_Fuzzy 007E   __size_ofi1_PWM_DutyCycle2 001B              ??i1_TIMER0_Set 0070  
              sprintf@width 00E4                     ??_trimf 007C                  __pbssBANK1 00A0  
                __pbssBANK3 0190          __end_of_LCD_Cursor 12F6                  ??_LCD_Init 00CB  
             Fuzzy@deltaRpm 0066             ?_PWM_DutyCycle1 00C9             ?_PWM_DutyCycle2 00C9  
                __pmaintext 08A6                 Fuzzy@mantem 005D                     ?___ftge 0030  
                   ?___wmul 00C9                  __pintentry 0004                ??_TIMER0_Set 00C9  
                   _CCP1CON 0017                     _CCP2CON 001D                   ?___ftpack 0070  
                   ?_trapmf 0040                  ??_PWM_Init 00C9                  ??i1___wmul 007C  
                 ?___lwtoft 0078        __size_of_TIMER0_Init 000B                     _SSPCON2 0091  
                __stringtab 1000          __end_of_TIMER0_Set 1217     __end_of_LCD_WriteString 13FE  
                 _ADCResult 00BB                ??_USART_Init 00DC           LCD_WriteData@Byte 00CA  
                   ___aldiv 0757             __size_of___ftge 005F                     ___ftadd 0992  
                   ___ftdiv 1677                     ___ftneg 121F             __size_of___wmul 0025  
                   ___ftmul 172F                     ___fttol 0818                     ___lwdiv 1472  
                   ___lwmod 13FE                  ??___ftpack 0075                     __ptext1 0E49  
                   __ptext2 1234                     __ptext3 137F                     __ptext4 13FE  
                   __ptext5 1472                     __ptext6 14B2                     __ptext7 0757  
                   __ptext8 120F                     __ptext9 1229                  _pas_cooler 00EE  
                ??___lwtoft 007B             __size_of_trapmf 0156                __size_of_ISR 0134  
                 _T1CONbits 0010                     _dpowers 1010           i1___lwdiv@divisor 0070  
                 _T2CONbits 0012                     _max_val 12B8                     _isdigit 1234  
         i1___lwdiv@counter 0077            ___aldiv@dividend 00CD                   _LCD_Clear 13A4  
        __end_of_USART_Init 14FB                     _sprintf 0E49                     clrloop0 1218  
      end_of_initialization 0067                   _RCSTAbits 0018            ___aldiv@quotient 00D4  
                   trapmf@a 0043                     trapmf@b 0046                     trapmf@c 0049  
                   trapmf@d 004C                     trapmf@x 0040                     trimf@ua 004C  
      __end_ofi1_TIMER0_Set 1207       i1___wmul@multiplicand 007A       __size_of_LCD_WriteCmd 0017  
                 _PORTBbits 0006                   _PORTEbits 0009                  _setpointUI 00C5  
                ?_LCD_Clear 0070            i1_PWM_DutyCycle2 1281           __size_of_ADC_Init 0012  
                 i1___lwdiv 1434         PWM_DutyCycle1@valor 00C9                  _total_area 00B2  
       PWM_DutyCycle2@valor 00C9                 _CCP1CONbits 0017                 ___ftdiv@exp 003E  
               _CCP2CONbits 001D                   _TXSTAbits 0098            ?_LCD_WriteString 00CB  
         __size_of_LCD_Init 006B                _LCD_WriteCmd 126A                 ___ftmul@exp 0024  
            __end_of___ftge 15A4              __end_of___wmul 13A4              __end_of_trapmf 0E49  
  __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024         start_initialization 0015  
         __size_ofi1___wmul 0023                 __end_of_ISR 0CF3                  ?i1___lwdiv 0070  
          ??_PWM_DutyCycle1 00CB            ??_PWM_DutyCycle2 00CB       __end_of_LCD_WriteData 0818  
         _USART_ReceiveChar 07E6                    ??___ftge 0036          ?_USART_ReceiveChar 0070  
                  ??___wmul 00CD                 __pdataBANK0 006D                 __pdataBANK1 00EB  
               __pdataBANK3 01A1                send@checksum 0072                    ??_trapmf 007C  
       ??_USART_ReceiveChar 0073           __size_of___ftpack 0068                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00C9  
               ??_LCD_Clear 00CB         __end_of__stringdata 106C                _isdigit$1439 00C9  
               sprintf@_val 00DF                 sprintf@flag 00E3                 sprintf@prec 00DE  
 __end_of_USART_ReceiveChar 07FE       __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 00CB  
       TIMER0_Set@contagens 00C9                Fuzzy@aumenta 0063                    ?___aldiv 00C9  
                  ?___ftadd 0023                    ?___ftdiv 0030                    ?___ftneg 0020  
                  ?___ftmul 0078                    ?___fttol 0030                    ?___lwdiv 00C9  
                  ?___lwmod 00D1                   __pstrings 1000                   _ativa_fan 00A0  
             ??_TIMER0_Init 00C9          USART_Init@BaudRate 00D8                    ?_max_val 003C  
                  ?_isdigit 0070                    _ADC_Init 1244                   _fop_rule1 00A6  
                 _fop_rule2 00A9                   _fop_rule3 00AC              __size_of_Fuzzy 06EC  
          ___lwdiv@quotient 00CE                 ??i1___lwdiv 0074                    ?_sprintf 00D7  
            __size_of_trimf 0124           ??_USART_WriteChar 0070                i1_TIMER0_Set 1201  
           ___aldiv@divisor 00C9           interrupt_function 0004             ___aldiv@counter 00D2  
                  _LCD_Init 160C              ___wmul@product 00CD                   clear_ram0 1217  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 129C                 _display_rpm 0197  
                _ADCON0bits 001F                 __stringbase 100F                  _ADCON1bits 009F  
               __stringdata 101A                    _PWM_Init 135B           ___wmul@multiplier 00C9  
                  i1___wmul 1338         __end_of_TIMER0_Init 1234  __size_of_USART_ReceiveChar 0018  
                _EECON1bits 018C                    Fuzzy@tip 0054            __size_of___aldiv 008F  
          __size_of___ftadd 0109            __size_of___ftdiv 00B8            __size_of___ftneg 000A  
          __size_of___ftmul 00D1            __size_of___fttol 008E            __size_of___lwdiv 0040  
          __size_of___lwmod 0036                    ___ftpack 15A4          __end_of__stringtab 1010  
                  ___lwtoft 1256                   send@index 0073            __size_of_max_val 001E  
          __size_of_isdigit 0010             ___lwdiv@divisor 00C9             ___lwdiv@counter 00D0  
         _USART_WriteString 129C                    __ptext10 135B                    __ptext11 1317  
                  __ptext20 0BBF                    __ptext12 12F6                    __ptext21 1338  
                  __ptext13 13CD                    __ptext30 0A9B                    __ptext22 1434  
                  __ptext14 0801                    __ptext31 0CF3                    __ptext23 1201  
                  __ptext15 160C                    __ptext40 15A4                    __ptext32 121F  
                  __ptext24 14FB                    __ptext16 12D6                    __ptext33 1677  
                  __ptext25 07E6                    __ptext17 13A4                    __ptext34 0992  
                  __ptext26 129C                    __ptext18 126A                    __ptext35 12B8  
                  __ptext27 1207                    __ptext19 1244                    __ptext36 1545  
                  __ptext28 006B                    __ptext37 1256                    __ptext29 1281  
                  __ptext38 0818                    __ptext39 172F          ?_USART_WriteString 0070  
          __size_of_sprintf 01B7          i1___lwdiv@dividend 0072               __size_of_main 00EC  
             __size_of_send 004A         USART_WriteChar@byte 0070         ??_USART_WriteString 0071  
                  _setpoint 00EB                  _LCD_Cursor 12D6    __size_of_LCD_WriteString 0031  
        i1___lwdiv@quotient 0075                 _TIMER0_Init 1229                  _INTCONbits 000B  
 __end_of_USART_WriteString 12B8                    max_val@a 003C                    max_val@b 003F  
                  isdigit@c 00CA                    intlevel1 0000                   sprintf@ap 00DD  
                 sprintf@sp 00E6            ___lwmod@dividend 00D3                   stringcode 100A  
      USART_WriteString@str 0072                  _TIMER0_Set 120F                    trapmf@ua 004F  
           _USART_WriteChar 1207                    sprintf@c 00E7                    sprintf@f 00D7  
           ___lwmod@divisor 00D1             ___lwmod@counter 00D6                    stringdir 100A  
                  stringtab 1000                ___aldiv@sign 00D3      __size_of_LCD_WriteData 0017  
               _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 003E                  _SSPCONbits 0014  
                _USART_Init 14B2  
