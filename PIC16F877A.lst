

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jun 22 16:45:03 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000D                     	;# 
   373  000E                     	;# 
   374  000E                     	;# 
   375  000F                     	;# 
   376  0010                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0013                     	;# 
   380  0014                     	;# 
   381  0015                     	;# 
   382  0015                     	;# 
   383  0016                     	;# 
   384  0017                     	;# 
   385  0018                     	;# 
   386  0019                     	;# 
   387  001A                     	;# 
   388  001B                     	;# 
   389  001B                     	;# 
   390  001C                     	;# 
   391  001D                     	;# 
   392  001E                     	;# 
   393  001F                     	;# 
   394  0081                     	;# 
   395  0085                     	;# 
   396  0086                     	;# 
   397  0087                     	;# 
   398  0088                     	;# 
   399  0089                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  0091                     	;# 
   404  0092                     	;# 
   405  0093                     	;# 
   406  0094                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009C                     	;# 
   410  009D                     	;# 
   411  009E                     	;# 
   412  009F                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  010F                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000D                     	;# 
   433  000E                     	;# 
   434  000E                     	;# 
   435  000F                     	;# 
   436  0010                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0014                     	;# 
   441  0015                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001D                     	;# 
   452  001E                     	;# 
   453  001F                     	;# 
   454  0081                     	;# 
   455  0085                     	;# 
   456  0086                     	;# 
   457  0087                     	;# 
   458  0088                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0094                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  009F                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000E                     	;# 
   495  000F                     	;# 
   496  0010                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0013                     	;# 
   500  0014                     	;# 
   501  0015                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001D                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  0081                     	;# 
   515  0085                     	;# 
   516  0086                     	;# 
   517  0087                     	;# 
   518  0088                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0098                     	;# 
   528  0099                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  018C                     	;# 
   538  018D                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000D                     	;# 
   553  000E                     	;# 
   554  000E                     	;# 
   555  000F                     	;# 
   556  0010                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001D                     	;# 
   572  001E                     	;# 
   573  001F                     	;# 
   574  0081                     	;# 
   575  0085                     	;# 
   576  0086                     	;# 
   577  0087                     	;# 
   578  0088                     	;# 
   579  0089                     	;# 
   580  008C                     	;# 
   581  008D                     	;# 
   582  008E                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009C                     	;# 
   590  009D                     	;# 
   591  009E                     	;# 
   592  009F                     	;# 
   593  010C                     	;# 
   594  010D                     	;# 
   595  010E                     	;# 
   596  010F                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599                           
   600                           	psect	idataBANK0
   601  0803                     __pidataBANK0:	
   602                           
   603                           ;initializer for _pas_cooler
   604  0803  3407               	retlw	7
   605  0804  3400               	retlw	0
   606                           
   607                           	psect	idataBANK1
   608  0801                     __pidataBANK1:	
   609                           
   610                           ;initializer for _pwm
   611  0801  3432               	retlw	50
   612  0802  3400               	retlw	0
   613                           
   614                           	psect	idataBANK3
   615  1511                     __pidataBANK3:	
   616                           
   617                           ;initializer for _antigo
   618  1511  3400               	retlw	0
   619  1512  3448               	retlw	72
   620  1513  3442               	retlw	66
   621                           
   622                           ;initializer for _setpoint
   623  1514  3400               	retlw	0
   624  1515  34A0               	retlw	160
   625  1516  3441               	retlw	65
   626  000E                     _TMR1	set	14
   627  001F                     _ADCON0bits	set	31
   628  001E                     _ADRESH	set	30
   629  0017                     _CCP1CON	set	23
   630  0017                     _CCP1CONbits	set	23
   631  001D                     _CCP2CON	set	29
   632  001D                     _CCP2CONbits	set	29
   633  0015                     _CCPR1L	set	21
   634  001B                     _CCPR2L	set	27
   635  000B                     _INTCONbits	set	11
   636  000C                     _PIR1bits	set	12
   637  000D                     _PIR2bits	set	13
   638  0005                     _PORTA	set	5
   639  0006                     _PORTB	set	6
   640  0006                     _PORTBbits	set	6
   641  0007                     _PORTC	set	7
   642  0008                     _PORTD	set	8
   643  0009                     _PORTE	set	9
   644  0009                     _PORTEbits	set	9
   645  001A                     _RCREG	set	26
   646  0018                     _RCSTAbits	set	24
   647  0013                     _SSPBUF	set	19
   648  0014                     _SSPCONbits	set	20
   649  0010                     _T1CON	set	16
   650  0010                     _T1CONbits	set	16
   651  0012                     _T2CONbits	set	18
   652  0001                     _TMR0	set	1
   653  000F                     _TMR1H	set	15
   654  000E                     _TMR1L	set	14
   655  0019                     _TXREG	set	25
   656  00C1                     _OERR	set	193
   657  009F                     _ADCON1bits	set	159
   658  009E                     _ADRESL	set	158
   659  0081                     _OPTION_REGbits	set	129
   660  008C                     _PIE1bits	set	140
   661  008D                     _PIE2bits	set	141
   662  0092                     _PR2	set	146
   663  0099                     _SPBRG	set	153
   664  0093                     _SSPADD	set	147
   665  0091                     _SSPCON2	set	145
   666  0091                     _SSPCON2bits	set	145
   667  0094                     _SSPSTATbits	set	148
   668  0085                     _TRISA	set	133
   669  0086                     _TRISB	set	134
   670  0087                     _TRISC	set	135
   671  0088                     _TRISD	set	136
   672  0089                     _TRISE	set	137
   673  0098                     _TXSTAbits	set	152
   674  010D                     _EEADR	set	269
   675  010C                     _EEDATA	set	268
   676  018C                     _EECON1bits	set	396
   677  018D                     _EECON2	set	397
   678                           
   679                           	psect	strings
   680  1000                     __pstrings:	
   681  1000                     stringtab:	
   682  1000                     __stringtab:	
   683                           
   684                           ;	String table - string pointers are 1 byte each
   685  1000  1BFF               	btfsc	btemp+1,7
   686  1001  280A               	ljmp	stringcode
   687  1002  1383               	bcf	3,7
   688  1003  187F               	btfsc	btemp+1,0
   689  1004  1783               	bsf	3,7
   690  1005  0800               	movf	0,w
   691  1006  0A84               	incf	4,f
   692  1007  1903               	skipnz
   693  1008  0AFF               	incf	btemp+1,f
   694  1009  0008               	return
   695  100A                     stringcode:	
   696  100A                     stringdir:	
   697  100A  3010               	movlw	high stringdir
   698  100B  008A               	movwf	10
   699  100C  0804               	movf	4,w
   700  100D  0A84               	incf	4,f
   701  100E  0782               	addwf	2,f
   702  100F                     __stringbase:	
   703  100F  3400               	retlw	0
   704  1010                     __end_of__stringtab:	
   705  1010                     __stringdata:	
   706  1010                     STR_4:	
   707  1010  340A               	retlw	10
   708  1011  340D               	retlw	13
   709  1012  3420               	retlw	32	;' '
   710  1013  342D               	retlw	45	;'-'
   711  1014  342D               	retlw	45	;'-'
   712  1015  342D               	retlw	45	;'-'
   713  1016  342D               	retlw	45	;'-'
   714  1017  342D               	retlw	45	;'-'
   715  1018  342D               	retlw	45	;'-'
   716  1019  342D               	retlw	45	;'-'
   717  101A  3420               	retlw	32	;' '
   718  101B  3445               	retlw	69	;'E'
   719  101C  3453               	retlw	83	;'S'
   720  101D  3454               	retlw	84	;'T'
   721  101E  344F               	retlw	79	;'O'
   722  101F  3455               	retlw	85	;'U'
   723  1020  3452               	retlw	82	;'R'
   724  1021  344F               	retlw	79	;'O'
   725  1022  3420               	retlw	32	;' '
   726  1023  3444               	retlw	68	;'D'
   727  1024  3445               	retlw	69	;'E'
   728  1025  3420               	retlw	32	;' '
   729  1026  3450               	retlw	80	;'P'
   730  1027  3449               	retlw	73	;'I'
   731  1028  344C               	retlw	76	;'L'
   732  1029  3448               	retlw	72	;'H'
   733  102A  3441               	retlw	65	;'A'
   734  102B  3420               	retlw	32	;' '
   735  102C  342D               	retlw	45	;'-'
   736  102D  342D               	retlw	45	;'-'
   737  102E  342D               	retlw	45	;'-'
   738  102F  342D               	retlw	45	;'-'
   739  1030  342D               	retlw	45	;'-'
   740  1031  342D               	retlw	45	;'-'
   741  1032  342D               	retlw	45	;'-'
   742  1033  3420               	retlw	32	;' '
   743  1034  340A               	retlw	10
   744  1035  340D               	retlw	13
   745  1036  3420               	retlw	32	;' '
   746  1037  3400               	retlw	0
   747  1038                     STR_2:	
   748  1038  3449               	retlw	73	;'I'
   749  1039  346E               	retlw	110	;'n'
   750  103A  3469               	retlw	105	;'i'
   751  103B  3463               	retlw	99	;'c'
   752  103C  3469               	retlw	105	;'i'
   753  103D  3461               	retlw	97	;'a'
   754  103E  346C               	retlw	108	;'l'
   755  103F  3469               	retlw	105	;'i'
   756  1040  347A               	retlw	122	;'z'
   757  1041  3461               	retlw	97	;'a'
   758  1042  346E               	retlw	110	;'n'
   759  1043  3464               	retlw	100	;'d'
   760  1044  346F               	retlw	111	;'o'
   761  1045  342E               	retlw	46	;'.'
   762  1046  342E               	retlw	46	;'.'
   763  1047  342E               	retlw	46	;'.'
   764  1048  3400               	retlw	0
   765  1049                     STR_1:	
   766  1049  340A               	retlw	10
   767  104A  340D               	retlw	13
   768  104B  3464               	retlw	100	;'d'
   769  104C  3465               	retlw	101	;'e'
   770  104D  3473               	retlw	115	;'s'
   771  104E  346C               	retlw	108	;'l'
   772  104F  3469               	retlw	105	;'i'
   773  1050  3467               	retlw	103	;'g'
   774  1051  3461               	retlw	97	;'a'
   775  1052  3464               	retlw	100	;'d'
   776  1053  346F               	retlw	111	;'o'
   777  1054  340A               	retlw	10
   778  1055  340D               	retlw	13
   779  1056  3400               	retlw	0
   780  1057                     STR_3:	
   781  1057  346B               	retlw	107	;'k'
   782  1058  346D               	retlw	109	;'m'
   783  1059  3448               	retlw	72	;'H'
   784  105A  343A               	retlw	58	;':'
   785  105B  3420               	retlw	32	;' '
   786  105C  3400               	retlw	0
   787  105D                     __end_of__stringdata:	
   788                           
   789                           ; #config settings
   790  0000                     
   791                           	psect	cinit
   792  0015                     start_initialization:	
   793  0015                     __initialization:	
   794                           
   795                           ; Clear objects allocated to BANK0
   796  0015  1383               	bcf	3,7	;select IRP bank0
   797  0016  3063               	movlw	low __pbssBANK0
   798  0017  0084               	movwf	4
   799  0018  306D               	movlw	low (__pbssBANK0+10)
   800  0019  160A  118A  252F  120A  118A  	fcall	clear_ram0
   801                           
   802                           ; Clear objects allocated to BANK1
   803  001E  30A0               	movlw	low __pbssBANK1
   804  001F  0084               	movwf	4
   805  0020  30BF               	movlw	low (__pbssBANK1+31)
   806  0021  160A  118A  252F  120A  118A  	fcall	clear_ram0
   807                           
   808                           ; Clear objects allocated to BANK3
   809  0026  1783               	bsf	3,7	;select IRP bank2
   810  0027  3090               	movlw	low __pbssBANK3
   811  0028  0084               	movwf	4
   812  0029  30AA               	movlw	low (__pbssBANK3+26)
   813  002A  160A  118A  252F  120A  118A  	fcall	clear_ram0
   814                           
   815                           ; Initialize objects allocated to BANK3
   816  002F  1683               	bsf	3,5	;RP0=1, select bank3
   817  0030  1703               	bsf	3,6	;RP1=1, select bank3
   818  0031  160A  118A  2511  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   819  0036  00BD               	movwf	__pdataBANK3& (0+127)
   820  0037  160A  118A  2512  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   821  003C  00BE               	movwf	(__pdataBANK3+1)& (0+127)
   822  003D  160A  118A  2513  120A  118A  	fcall	__pidataBANK3+2	;fetch initializer
   823  0042  00BF               	movwf	(__pdataBANK3+2)& (0+127)
   824  0043  160A  118A  2514  120A  118A  	fcall	__pidataBANK3+3	;fetch initializer
   825  0048  00C0               	movwf	(__pdataBANK3+3)& (0+127)
   826  0049  160A  118A  2515  120A  118A  	fcall	__pidataBANK3+4	;fetch initializer
   827  004E  00C1               	movwf	(__pdataBANK3+4)& (0+127)
   828  004F  160A  118A  2516  120A  118A  	fcall	__pidataBANK3+5	;fetch initializer
   829  0054  00C2               	movwf	(__pdataBANK3+5)& (0+127)
   830                           
   831                           ; Initialize objects allocated to BANK1
   832  0055  1683               	bsf	3,5	;RP0=1, select bank1
   833  0056  1303               	bcf	3,6	;RP1=0, select bank1
   834  0057  120A  158A  2001  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   835  005C  00DA               	movwf	__pdataBANK1& (0+127)
   836  005D  120A  158A  2002  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   837  0062  00DB               	movwf	(__pdataBANK1+1)& (0+127)
   838                           
   839                           ; Initialize objects allocated to BANK0
   840  0063  1283               	bcf	3,5	;RP0=0, select bank0
   841  0064  1303               	bcf	3,6	;RP1=0, select bank0
   842  0065  120A  158A  2003  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   843  006A  00ED               	movwf	__pdataBANK0& (0+127)
   844  006B  120A  158A  2004   	fcall	__pidataBANK0+1	;fetch initializer
   845  006E  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   846  006F                     end_of_initialization:	
   847                           ;End of C runtime variable initialization code
   848                           
   849  006F                     __end_of__initialization:	
   850  006F  0183               	clrf	3
   851  0070  120A  158A  2BC8   	ljmp	_main	;jump to C main() function
   852                           
   853                           	psect	bssBANK0
   854  0063                     __pbssBANK0:	
   855  0063                     _antigoUI:	
   856  0063                     	ds	2
   857  0065                     _deltaV:	
   858  0065                     	ds	2
   859  0067                     _pulsos:	
   860  0067                     	ds	2
   861  0069                     _rpm:	
   862  0069                     	ds	2
   863  006B                     _setpointUI:	
   864  006B                     	ds	2
   865                           
   866                           	psect	dataBANK0
   867  006D                     __pdataBANK0:	
   868  006D                     _pas_cooler:	
   869  006D                     	ds	2
   870                           
   871                           	psect	bssBANK1
   872  00A0                     __pbssBANK1:	
   873  00A0                     _ativa_fan:	
   874  00A0                     	ds	3
   875  00A3                     _fitemp:	
   876  00A3                     	ds	3
   877  00A6                     _fop_rule1:	
   878  00A6                     	ds	3
   879  00A9                     _fop_rule2:	
   880  00A9                     	ds	3
   881  00AC                     _fop_rule3:	
   882  00AC                     	ds	3
   883  00AF                     _sum:	
   884  00AF                     	ds	3
   885  00B2                     _total_area:	
   886  00B2                     	ds	3
   887  00B5                     _ADCResult:	
   888  00B5                     	ds	2
   889  00B7                     _contagens_tm0:	
   890  00B7                     	ds	2
   891  00B9                     _status:	
   892  00B9                     	ds	2
   893  00BB                     _x:	
   894  00BB                     	ds	2
   895  00BD                     _y:	
   896  00BD                     	ds	2
   897                           
   898                           	psect	dataBANK1
   899  00DA                     __pdataBANK1:	
   900  00DA                     _pwm:	
   901  00DA                     	ds	2
   902                           
   903                           	psect	bssBANK3
   904  0190                     __pbssBANK3:	
   905  0190                     _buffer:	
   906  0190                     	ds	16
   907  01A0                     _display_rpm:	
   908  01A0                     	ds	10
   909                           
   910                           	psect	dataBANK3
   911  01BD                     __pdataBANK3:	
   912  01BD                     _antigo:	
   913  01BD                     	ds	3
   914  01C0                     _setpoint:	
   915  01C0                     	ds	3
   916                           
   917                           	psect	clrtext
   918  152F                     clear_ram0:	
   919                           ;	Called with FSR containing the base address, and
   920                           ;	W with the last address+1
   921                           
   922  152F  0064               	clrwdt	;clear the watchdog before getting into this loop
   923  1530                     clrloop0:	
   924  1530  0180               	clrf	0	;clear RAM location pointed to by FSR
   925  1531  0A84               	incf	4,f	;increment pointer
   926  1532  0604               	xorwf	4,w	;XOR with final address
   927  1533  1903               	btfsc	3,2	;have we reached the end yet?
   928  1534  3400               	retlw	0	;all done for this memory range, return
   929  1535  0604               	xorwf	4,w	;XOR again to restore value
   930  1536  2D30               	goto	clrloop0	;do the next byte
   931                           
   932                           	psect	cstackBANK3
   933  01AA                     __pcstackBANK3:	
   934  01AA                     ?___aldiv:	
   935  01AA                     ___aldiv@divisor:	
   936                           ; 4 bytes @ 0x0
   937                           
   938                           
   939                           ; 4 bytes @ 0x0
   940  01AA                     	ds	4
   941  01AE                     ___aldiv@dividend:	
   942                           
   943                           ; 4 bytes @ 0x4
   944  01AE                     	ds	4
   945  01B2                     ?_USART_Init:	
   946  01B2                     USART_Init@BaudRate:	
   947                           ; 0 bytes @ 0x8
   948                           
   949                           
   950                           ; 4 bytes @ 0x8
   951  01B2                     	ds	4
   952  01B6                     ??_USART_Init:	
   953                           
   954                           ; 0 bytes @ 0xC
   955  01B6                     	ds	4
   956  01BA                     ??_main:	
   957                           
   958                           ; 0 bytes @ 0x10
   959  01BA                     	ds	3
   960                           
   961                           	psect	cstackBANK1
   962  00BF                     __pcstackBANK1:	
   963  00BF                     Fuzzy@freio:	
   964                           
   965                           ; 2 bytes @ 0x0
   966  00BF                     	ds	2
   967  00C1                     Fuzzy@tip:	
   968                           
   969                           ; 3 bytes @ 0x2
   970  00C1                     	ds	3
   971  00C4                     Fuzzy@a:	
   972                           
   973                           ; 2 bytes @ 0x5
   974  00C4                     	ds	2
   975  00C6                     Fuzzy@a_242:	
   976                           
   977                           ; 2 bytes @ 0x7
   978  00C6                     	ds	2
   979  00C8                     Fuzzy@a_243:	
   980                           
   981                           ; 2 bytes @ 0x9
   982  00C8                     	ds	2
   983  00CA                     Fuzzy@mantem:	
   984                           
   985                           ; 3 bytes @ 0xB
   986  00CA                     	ds	3
   987  00CD                     Fuzzy@reduz:	
   988                           
   989                           ; 3 bytes @ 0xE
   990  00CD                     	ds	3
   991  00D0                     Fuzzy@aumenta:	
   992                           
   993                           ; 3 bytes @ 0x11
   994  00D0                     	ds	3
   995  00D3                     ?_PWM_DutyCycle2:	
   996  00D3                     ??_TIMER0_Set:	
   997                           ; 0 bytes @ 0x14
   998                           
   999  00D3                     ??_TIMER0_Init:	
  1000                           ; 0 bytes @ 0x14
  1001                           
  1002  00D3                     ??_ADC_Init:	
  1003                           ; 0 bytes @ 0x14
  1004                           
  1005  00D3                     ??_PWM_Init:	
  1006                           ; 0 bytes @ 0x14
  1007                           
  1008  00D3                     ?_LCD_Cursor:	
  1009                           ; 0 bytes @ 0x14
  1010                           
  1011  00D3                     ?_PWM_DutyCycle1:	
  1012                           ; 0 bytes @ 0x14
  1013                           
  1014  00D3                     ??_LCD_WriteCmd:	
  1015                           ; 0 bytes @ 0x14
  1016                           
  1017  00D3                     ??_LCD_WriteData:	
  1018                           ; 0 bytes @ 0x14
  1019                           
  1020  00D3                     ??___aldiv:	
  1021                           ; 0 bytes @ 0x14
  1022                           
  1023  00D3                     TIMER0_Set@contagens:	
  1024                           ; 0 bytes @ 0x14
  1025                           
  1026  00D3                     LCD_Cursor@Col:	
  1027                           ; 1 bytes @ 0x14
  1028                           
  1029  00D3                     PWM_DutyCycle1@valor:	
  1030                           ; 1 bytes @ 0x14
  1031                           
  1032  00D3                     PWM_DutyCycle2@valor:	
  1033                           ; 2 bytes @ 0x14
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x14
  1037  00D3                     	ds	1
  1038  00D4                     ??_LCD_Cursor:	
  1039  00D4                     LCD_WriteCmd@Byte:	
  1040                           ; 0 bytes @ 0x15
  1041                           
  1042  00D4                     LCD_WriteData@Byte:	
  1043                           ; 1 bytes @ 0x15
  1044                           
  1045  00D4                     ___aldiv@counter:	
  1046                           ; 1 bytes @ 0x15
  1047                           
  1048                           
  1049                           ; 1 bytes @ 0x15
  1050  00D4                     	ds	1
  1051  00D5                     ??_PWM_DutyCycle2:	
  1052  00D5                     ??_LCD_Init:	
  1053                           ; 0 bytes @ 0x16
  1054                           
  1055  00D5                     ?_LCD_WriteString:	
  1056                           ; 0 bytes @ 0x16
  1057                           
  1058  00D5                     ??_PWM_DutyCycle1:	
  1059                           ; 0 bytes @ 0x16
  1060                           
  1061  00D5                     ??_LCD_Clear:	
  1062                           ; 0 bytes @ 0x16
  1063                           
  1064  00D5                     LCD_Cursor@Row:	
  1065                           ; 0 bytes @ 0x16
  1066                           
  1067  00D5                     ___aldiv@sign:	
  1068                           ; 1 bytes @ 0x16
  1069                           
  1070  00D5                     LCD_WriteString@Str:	
  1071                           ; 1 bytes @ 0x16
  1072                           
  1073                           
  1074                           ; 2 bytes @ 0x16
  1075  00D5                     	ds	1
  1076  00D6                     ___aldiv@quotient:	
  1077                           
  1078                           ; 4 bytes @ 0x17
  1079  00D6                     	ds	1
  1080  00D7                     ??_LCD_WriteString:	
  1081                           
  1082                           ; 0 bytes @ 0x18
  1083  00D7                     	ds	3
  1084                           
  1085                           	psect	cstackCOMMON
  1086  0070                     __pcstackCOMMON:	
  1087  0070                     ?_USART_WriteChar:	
  1088  0070                     ??_USART_WriteChar:	
  1089                           ; 0 bytes @ 0x0
  1090                           
  1091  0070                     ?_USART_WriteString:	
  1092                           ; 0 bytes @ 0x0
  1093                           
  1094  0070                     ?_TIMER0_Set:	
  1095                           ; 0 bytes @ 0x0
  1096                           
  1097  0070                     ?_TIMER0_Init:	
  1098                           ; 0 bytes @ 0x0
  1099                           
  1100  0070                     ?_ADC_Init:	
  1101                           ; 0 bytes @ 0x0
  1102                           
  1103  0070                     ?_PWM_Init:	
  1104                           ; 0 bytes @ 0x0
  1105                           
  1106  0070                     ?_LCD_Init:	
  1107                           ; 0 bytes @ 0x0
  1108                           
  1109  0070                     ?_LCD_Clear:	
  1110                           ; 0 bytes @ 0x0
  1111                           
  1112  0070                     ?_send:	
  1113                           ; 0 bytes @ 0x0
  1114                           
  1115  0070                     ?_Fuzzy:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0070                     ?_ISR:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0070                     ?_main:	
  1122                           ; 0 bytes @ 0x0
  1123                           
  1124  0070                     ?_LCD_WriteCmd:	
  1125                           ; 0 bytes @ 0x0
  1126                           
  1127  0070                     ?_LCD_WriteData:	
  1128                           ; 0 bytes @ 0x0
  1129                           
  1130  0070                     ?i1_TIMER0_Set:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0070                     ??i1_TIMER0_Set:	
  1134                           ; 0 bytes @ 0x0
  1135                           
  1136  0070                     ?i1_PWM_DutyCycle2:	
  1137                           ; 0 bytes @ 0x0
  1138                           
  1139  0070                     ?_USART_ReceiveChar:	
  1140                           ; 0 bytes @ 0x0
  1141                           
  1142  0070                     ?___lwdiv:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?___ftpack:	
  1146                           ; 2 bytes @ 0x0
  1147                           
  1148  0070                     ?___ftneg:	
  1149                           ; 3 bytes @ 0x0
  1150                           
  1151  0070                     USART_WriteChar@byte:	
  1152                           ; 3 bytes @ 0x0
  1153                           
  1154  0070                     i1TIMER0_Set@contagens:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ___lwdiv@divisor:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     i1PWM_DutyCycle2@valor:	
  1161                           ; 2 bytes @ 0x0
  1162                           
  1163  0070                     ___ftpack@arg:	
  1164                           ; 2 bytes @ 0x0
  1165                           
  1166  0070                     ___ftneg@f1:	
  1167                           ; 3 bytes @ 0x0
  1168                           
  1169                           
  1170                           ; 3 bytes @ 0x0
  1171  0070                     	ds	1
  1172  0071                     ??_USART_WriteString:	
  1173                           
  1174                           ; 0 bytes @ 0x1
  1175  0071                     	ds	1
  1176  0072                     ??i1_PWM_DutyCycle2:	
  1177  0072                     USART_WriteString@str:	
  1178                           ; 0 bytes @ 0x2
  1179                           
  1180  0072                     ___lwdiv@dividend:	
  1181                           ; 1 bytes @ 0x2
  1182                           
  1183                           
  1184                           ; 2 bytes @ 0x2
  1185  0072                     	ds	1
  1186  0073                     ??_USART_ReceiveChar:	
  1187  0073                     ??___ftneg:	
  1188                           ; 0 bytes @ 0x3
  1189                           
  1190  0073                     ___ftpack@exp:	
  1191                           ; 0 bytes @ 0x3
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x3
  1195  0073                     	ds	1
  1196  0074                     ??___lwdiv:	
  1197  0074                     USART_ReceiveChar@byte:	
  1198                           ; 0 bytes @ 0x4
  1199                           
  1200  0074                     ___ftpack@sign:	
  1201                           ; 1 bytes @ 0x4
  1202                           
  1203                           
  1204                           ; 1 bytes @ 0x4
  1205  0074                     	ds	1
  1206  0075                     ??___ftpack:	
  1207  0075                     ___lwdiv@quotient:	
  1208                           ; 0 bytes @ 0x5
  1209                           
  1210                           
  1211                           ; 2 bytes @ 0x5
  1212  0075                     	ds	2
  1213  0077                     ___lwdiv@counter:	
  1214                           
  1215                           ; 1 bytes @ 0x7
  1216  0077                     	ds	1
  1217  0078                     ?___wmul:	
  1218  0078                     ?___awtoft:	
  1219                           ; 2 bytes @ 0x8
  1220                           
  1221  0078                     ?___ftmul:	
  1222                           ; 3 bytes @ 0x8
  1223                           
  1224  0078                     ?___lwtoft:	
  1225                           ; 3 bytes @ 0x8
  1226                           
  1227  0078                     ___wmul@multiplier:	
  1228                           ; 3 bytes @ 0x8
  1229                           
  1230  0078                     ___awtoft@c:	
  1231                           ; 2 bytes @ 0x8
  1232                           
  1233  0078                     ___lwtoft@c:	
  1234                           ; 2 bytes @ 0x8
  1235                           
  1236  0078                     ___ftmul@f1:	
  1237                           ; 2 bytes @ 0x8
  1238                           
  1239                           
  1240                           ; 3 bytes @ 0x8
  1241  0078                     	ds	2
  1242  007A                     ___wmul@multiplicand:	
  1243                           
  1244                           ; 2 bytes @ 0xA
  1245  007A                     	ds	1
  1246  007B                     ??___awtoft:	
  1247  007B                     ??___lwtoft:	
  1248                           ; 0 bytes @ 0xB
  1249                           
  1250  007B                     ___ftmul@f2:	
  1251                           ; 0 bytes @ 0xB
  1252                           
  1253                           
  1254                           ; 3 bytes @ 0xB
  1255  007B                     	ds	1
  1256  007C                     ??___wmul:	
  1257  007C                     ___wmul@product:	
  1258                           ; 0 bytes @ 0xC
  1259                           
  1260                           
  1261                           ; 2 bytes @ 0xC
  1262  007C                     	ds	1
  1263  007D                     ___awtoft@sign:	
  1264                           
  1265                           ; 1 bytes @ 0xD
  1266  007D                     	ds	1
  1267  007E                     ??_trimf:	
  1268  007E                     ??_trapmf:	
  1269                           ; 0 bytes @ 0xE
  1270                           
  1271  007E                     ??_max_val:	
  1272                           ; 0 bytes @ 0xE
  1273                           
  1274                           
  1275                           	psect	cstackBANK0
  1276  0020                     __pcstackBANK0:	
  1277                           ; 0 bytes @ 0xE
  1278                           
  1279  0020                     ??_send:	
  1280  0020                     ?___ftge:	
  1281                           ; 0 bytes @ 0x0
  1282                           
  1283  0020                     ??___ftmul:	
  1284                           ; 1 bit 
  1285                           
  1286  0020                     ?___ftadd:	
  1287                           ; 0 bytes @ 0x0
  1288                           
  1289  0020                     ___ftadd@f1:	
  1290                           ; 3 bytes @ 0x0
  1291                           
  1292  0020                     ___ftge@ff1:	
  1293                           ; 3 bytes @ 0x0
  1294                           
  1295                           
  1296                           ; 3 bytes @ 0x0
  1297  0020                     	ds	1
  1298  0021                     send@checksum:	
  1299                           
  1300                           ; 1 bytes @ 0x1
  1301  0021                     	ds	1
  1302  0022                     send@velocidade:	
  1303                           
  1304                           ; 2 bytes @ 0x2
  1305  0022                     	ds	1
  1306  0023                     ___ftadd@f2:	
  1307  0023                     ___ftge@ff2:	
  1308                           ; 3 bytes @ 0x3
  1309                           
  1310                           
  1311                           ; 3 bytes @ 0x3
  1312  0023                     	ds	1
  1313  0024                     send@index:	
  1314  0024                     ___ftmul@exp:	
  1315                           ; 1 bytes @ 0x4
  1316                           
  1317                           
  1318                           ; 1 bytes @ 0x4
  1319  0024                     	ds	1
  1320  0025                     ___ftmul@f3_as_product:	
  1321                           
  1322                           ; 3 bytes @ 0x5
  1323  0025                     	ds	1
  1324  0026                     ??___ftadd:	
  1325  0026                     ??___ftge:	
  1326                           ; 0 bytes @ 0x6
  1327                           
  1328                           
  1329                           ; 0 bytes @ 0x6
  1330  0026                     	ds	2
  1331  0028                     ___ftmul@cntr:	
  1332                           
  1333                           ; 1 bytes @ 0x8
  1334  0028                     	ds	1
  1335  0029                     ___ftmul@sign:	
  1336                           
  1337                           ; 1 bytes @ 0x9
  1338  0029                     	ds	1
  1339  002A                     ___ftadd@sign:	
  1340                           
  1341                           ; 1 bytes @ 0xA
  1342  002A                     	ds	1
  1343  002B                     ___ftadd@exp2:	
  1344                           
  1345                           ; 1 bytes @ 0xB
  1346  002B                     	ds	1
  1347  002C                     ?_max_val:	
  1348  002C                     ___ftadd@exp1:	
  1349                           ; 3 bytes @ 0xC
  1350                           
  1351  002C                     max_val@a:	
  1352                           ; 1 bytes @ 0xC
  1353                           
  1354                           
  1355                           ; 3 bytes @ 0xC
  1356  002C                     	ds	1
  1357  002D                     ?___ftdiv:	
  1358  002D                     ___ftdiv@f2:	
  1359                           ; 3 bytes @ 0xD
  1360                           
  1361                           
  1362                           ; 3 bytes @ 0xD
  1363  002D                     	ds	2
  1364  002F                     max_val@b:	
  1365                           
  1366                           ; 3 bytes @ 0xF
  1367  002F                     	ds	1
  1368  0030                     ___ftdiv@f1:	
  1369                           
  1370                           ; 3 bytes @ 0x10
  1371  0030                     	ds	3
  1372  0033                     ??___ftdiv:	
  1373                           
  1374                           ; 0 bytes @ 0x13
  1375  0033                     	ds	4
  1376  0037                     ___ftdiv@cntr:	
  1377                           
  1378                           ; 1 bytes @ 0x17
  1379  0037                     	ds	1
  1380  0038                     ___ftdiv@f3:	
  1381                           
  1382                           ; 3 bytes @ 0x18
  1383  0038                     	ds	3
  1384  003B                     ___ftdiv@exp:	
  1385                           
  1386                           ; 1 bytes @ 0x1B
  1387  003B                     	ds	1
  1388  003C                     ___ftdiv@sign:	
  1389                           
  1390                           ; 1 bytes @ 0x1C
  1391  003C                     	ds	1
  1392  003D                     ?_trimf:	
  1393  003D                     ?_trapmf:	
  1394                           ; 3 bytes @ 0x1D
  1395                           
  1396  003D                     trimf@x:	
  1397                           ; 3 bytes @ 0x1D
  1398                           
  1399  003D                     trapmf@x:	
  1400                           ; 3 bytes @ 0x1D
  1401                           
  1402                           
  1403                           ; 3 bytes @ 0x1D
  1404  003D                     	ds	3
  1405  0040                     trimf@a:	
  1406  0040                     trapmf@a:	
  1407                           ; 3 bytes @ 0x20
  1408                           
  1409                           
  1410                           ; 3 bytes @ 0x20
  1411  0040                     	ds	3
  1412  0043                     trimf@b:	
  1413  0043                     trapmf@b:	
  1414                           ; 3 bytes @ 0x23
  1415                           
  1416                           
  1417                           ; 3 bytes @ 0x23
  1418  0043                     	ds	3
  1419  0046                     trimf@c:	
  1420  0046                     trapmf@c:	
  1421                           ; 3 bytes @ 0x26
  1422                           
  1423                           
  1424                           ; 3 bytes @ 0x26
  1425  0046                     	ds	3
  1426  0049                     trimf@ua:	
  1427  0049                     trapmf@d:	
  1428                           ; 3 bytes @ 0x29
  1429                           
  1430                           
  1431                           ; 3 bytes @ 0x29
  1432  0049                     	ds	3
  1433  004C                     trapmf@ua:	
  1434                           
  1435                           ; 3 bytes @ 0x2C
  1436  004C                     	ds	3
  1437  004F                     ?___fttol:	
  1438  004F                     ___fttol@f1:	
  1439                           ; 4 bytes @ 0x2F
  1440                           
  1441                           
  1442                           ; 3 bytes @ 0x2F
  1443  004F                     	ds	4
  1444  0053                     ??___fttol:	
  1445                           
  1446                           ; 0 bytes @ 0x33
  1447  0053                     	ds	4
  1448  0057                     ___fttol@sign1:	
  1449                           
  1450                           ; 1 bytes @ 0x37
  1451  0057                     	ds	1
  1452  0058                     ___fttol@lval:	
  1453                           
  1454                           ; 4 bytes @ 0x38
  1455  0058                     	ds	4
  1456  005C                     ___fttol@exp1:	
  1457                           
  1458                           ; 1 bytes @ 0x3C
  1459  005C                     	ds	1
  1460  005D                     ??_Fuzzy:	
  1461                           
  1462                           ; 0 bytes @ 0x3D
  1463  005D                     	ds	2
  1464  005F                     ??_ISR:	
  1465                           
  1466                           ; 0 bytes @ 0x3F
  1467  005F                     	ds	4
  1468                           
  1469                           	psect	maintext
  1470  0BC8                     __pmaintext:	
  1471 ;;
  1472 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1473 ;;
  1474 ;; *************** function _main *****************
  1475 ;; Defined at:
  1476 ;;		line 522 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;		None               void
  1483 ;; Registers used:
  1484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 17F/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0
  1492 ;;      Temps:          0       0       0       3       0
  1493 ;;      Totals:         0       0       0       3       0
  1494 ;;Total ram usage:        3 bytes
  1495 ;; Hardware stack levels required when called:    7
  1496 ;; This function calls:
  1497 ;;		_ADC_Init
  1498 ;;		_LCD_Clear
  1499 ;;		_LCD_Cursor
  1500 ;;		_LCD_Init
  1501 ;;		_LCD_WriteString
  1502 ;;		_PWM_DutyCycle1
  1503 ;;		_PWM_DutyCycle2
  1504 ;;		_PWM_Init
  1505 ;;		_TIMER0_Init
  1506 ;;		_TIMER0_Set
  1507 ;;		_USART_Init
  1508 ;; This function is called by:
  1509 ;;		Startup code after reset
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _main
  1515  0BC8                     _main:	
  1516                           
  1517                           ;main.c: 524: TRISA = 0b00000001;
  1518                           
  1519                           ;incstack = 0
  1520                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1521  0BC8  3001               	movlw	1
  1522  0BC9  1683               	bsf	3,5	;RP0=1, select bank1
  1523  0BCA  1303               	bcf	3,6	;RP1=0, select bank1
  1524  0BCB  0085               	movwf	5	;volatile
  1525                           
  1526                           ;main.c: 525: PORTA = 0b00000001;
  1527  0BCC  3001               	movlw	1
  1528  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0BCF  0085               	movwf	5	;volatile
  1531                           
  1532                           ;main.c: 526: TRISB = 0b00000000;
  1533  0BD0  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0BD1  1303               	bcf	3,6	;RP1=0, select bank1
  1535  0BD2  0186               	clrf	6	;volatile
  1536                           
  1537                           ;main.c: 527: PORTB = 0b00000000;
  1538  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0BD5  0186               	clrf	6	;volatile
  1541                           
  1542                           ;main.c: 528: TRISC = 0b10000001;
  1543  0BD6  3081               	movlw	129
  1544  0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  1545  0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  1546  0BD9  0087               	movwf	7	;volatile
  1547                           
  1548                           ;main.c: 529: PORTC = 0b11000000;
  1549  0BDA  30C0               	movlw	192
  1550  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0BDC  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0BDD  0087               	movwf	7	;volatile
  1553                           
  1554                           ;main.c: 530: TRISD = 0b00000000;
  1555  0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  1556  0BDF  1303               	bcf	3,6	;RP1=0, select bank1
  1557  0BE0  0188               	clrf	8	;volatile
  1558                           
  1559                           ;main.c: 531: PORTD = 0b00000000;
  1560  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0BE3  0188               	clrf	8	;volatile
  1563                           
  1564                           ;main.c: 532: TRISE = 0b00000000;
  1565  0BE4  1683               	bsf	3,5	;RP0=1, select bank1
  1566  0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  1567  0BE6  0189               	clrf	9	;volatile
  1568                           
  1569                           ;main.c: 533: PORTE = 0b00000000;
  1570  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  1572  0BE9  0189               	clrf	9	;volatile
  1573                           
  1574                           ;main.c: 536: T1CON = 0x03;
  1575  0BEA  3003               	movlw	3
  1576  0BEB  0090               	movwf	16	;volatile
  1577                           
  1578                           ;main.c: 537: TMR1L = 0x00;
  1579  0BEC  018E               	clrf	14	;volatile
  1580                           
  1581                           ;main.c: 538: TMR1H = 0x00;
  1582  0BED  018F               	clrf	15	;volatile
  1583                           
  1584                           ;main.c: 541: USART_Init(115200);
  1585  0BEE  3000               	movlw	0
  1586  0BEF  1683               	bsf	3,5	;RP0=1, select bank3
  1587  0BF0  1703               	bsf	3,6	;RP1=1, select bank3
  1588  0BF1  00B5               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1589  0BF2  3001               	movlw	1
  1590  0BF3  00B4               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1591  0BF4  30C2               	movlw	194
  1592  0BF5  00B3               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1593  0BF6  3000               	movlw	0
  1594  0BF7  00B2               	movwf	USART_Init@BaudRate^(0+384)
  1595  0BF8  120A  158A  2010  120A  158A  	fcall	_USART_Init
  1596                           
  1597                           ;main.c: 542: TIMER0_Init();
  1598  0BFD  120A  158A  2005  120A  158A  	fcall	_TIMER0_Init
  1599                           
  1600                           ;main.c: 543: ADC_Init();
  1601  0C02  160A  118A  2537  120A  158A  	fcall	_ADC_Init
  1602                           
  1603                           ;main.c: 544: PWM_Init();
  1604  0C07  160A  118A  267D  120A  158A  	fcall	_PWM_Init
  1605                           
  1606                           ;main.c: 545: LCD_Init();
  1607  0C0C  120A  158A  205B  120A  158A  	fcall	_LCD_Init
  1608                           
  1609                           ;main.c: 548: INTCONbits.PEIE = 1;
  1610  0C11  170B               	bsf	11,6	;volatile
  1611                           
  1612                           ;main.c: 549: INTCONbits.GIE = 1;
  1613  0C12  178B               	bsf	11,7	;volatile
  1614                           
  1615                           ;main.c: 556: LCD_Init();
  1616  0C13  120A  158A  205B  120A  158A  	fcall	_LCD_Init
  1617                           
  1618                           ;main.c: 557: LCD_Cursor(0,0);
  1619  0C18  1683               	bsf	3,5	;RP0=1, select bank1
  1620  0C19  1303               	bcf	3,6	;RP1=0, select bank1
  1621  0C1A  01D3               	clrf	LCD_Cursor@Col^(0+128)
  1622  0C1B  3000               	movlw	0
  1623  0C1C  160A  118A  25F8  120A  158A  	fcall	_LCD_Cursor
  1624                           
  1625                           ;main.c: 558: LCD_WriteString("Inicializando...");
  1626  0C21  3029               	movlw	low (STR_2-__stringbase)
  1627  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0C23  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0C24  00D5               	movwf	LCD_WriteString@Str^(0+128)
  1630  0C25  3080               	movlw	128
  1631  0C26  00D6               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1632  0C27  160A  118A  26CA  120A  158A  	fcall	_LCD_WriteString
  1633                           
  1634                           ;main.c: 561: PWM_DutyCycle1(0);
  1635  0C2C  3000               	movlw	0
  1636  0C2D  1683               	bsf	3,5	;RP0=1, select bank1
  1637  0C2E  1303               	bcf	3,6	;RP1=0, select bank1
  1638  0C2F  00D3               	movwf	PWM_DutyCycle1@valor^(0+128)
  1639  0C30  3000               	movlw	0
  1640  0C31  00D4               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1641  0C32  160A  118A  2639  120A  158A  	fcall	_PWM_DutyCycle1
  1642                           
  1643                           ;main.c: 562: PWM_DutyCycle2(0);
  1644  0C37  3000               	movlw	0
  1645  0C38  1683               	bsf	3,5	;RP0=1, select bank1
  1646  0C39  1303               	bcf	3,6	;RP1=0, select bank1
  1647  0C3A  00D3               	movwf	PWM_DutyCycle2@valor^(0+128)
  1648  0C3B  3000               	movlw	0
  1649  0C3C  00D4               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1650  0C3D  120A  118A  27DE  120A  158A  	fcall	_PWM_DutyCycle2
  1651                           
  1652                           ;main.c: 565: TIMER0_Set(238);
  1653  0C42  30EE               	movlw	238
  1654  0C43  160A  118A  2527  120A  158A  	fcall	_TIMER0_Set
  1655                           
  1656                           ;main.c: 568: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1657  0C48  3018               	movlw	24
  1658  0C49  1683               	bsf	3,5	;RP0=1, select bank3
  1659  0C4A  1703               	bsf	3,6	;RP1=1, select bank3
  1660  0C4B  00BC               	movwf	(??_main^(0+384)+2)
  1661  0C4C  3061               	movlw	97
  1662  0C4D  00BB               	movwf	(??_main^(0+384)+1)
  1663  0C4E  306E               	movlw	110
  1664  0C4F  00BA               	movwf	??_main^(0+384)
  1665  0C50                     u3497:	
  1666  0C50  0BBA               	decfsz	??_main^(0+384),f
  1667  0C51  2C50               	goto	u3497
  1668  0C52  0BBB               	decfsz	(??_main^(0+384)+1),f
  1669  0C53  2C50               	goto	u3497
  1670  0C54  0BBC               	decfsz	(??_main^(0+384)+2),f
  1671  0C55  2C50               	goto	u3497
  1672  0C56  0000               	nop
  1673  0C57                     l3102:	
  1674                           ;main.c: 571: while(1)
  1675                           
  1676                           
  1677                           ;main.c: 572: {
  1678                           ;main.c: 578: LCD_Clear();
  1679  0C57  160A  118A  26A1  120A  158A  	fcall	_LCD_Clear
  1680                           
  1681                           ;main.c: 579: LCD_Cursor(0,0);
  1682  0C5C  1683               	bsf	3,5	;RP0=1, select bank1
  1683  0C5D  1303               	bcf	3,6	;RP1=0, select bank1
  1684  0C5E  01D3               	clrf	LCD_Cursor@Col^(0+128)
  1685  0C5F  3000               	movlw	0
  1686  0C60  160A  118A  25F8  120A  158A  	fcall	_LCD_Cursor
  1687                           
  1688                           ;main.c: 580: LCD_WriteString("kmH: ");
  1689  0C65  3048               	movlw	low (STR_3-__stringbase)
  1690  0C66  1683               	bsf	3,5	;RP0=1, select bank1
  1691  0C67  1303               	bcf	3,6	;RP1=0, select bank1
  1692  0C68  00D5               	movwf	LCD_WriteString@Str^(0+128)
  1693  0C69  3080               	movlw	128
  1694  0C6A  00D6               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1695  0C6B  160A  118A  26CA  120A  158A  	fcall	_LCD_WriteString
  1696                           
  1697                           ;main.c: 581: LCD_Cursor(0,6);
  1698  0C70  3006               	movlw	6
  1699  0C71  1683               	bsf	3,5	;RP0=1, select bank3
  1700  0C72  1703               	bsf	3,6	;RP1=1, select bank3
  1701  0C73  00BA               	movwf	??_main^(0+384)
  1702  0C74  083A               	movf	??_main^(0+384),w
  1703  0C75  1683               	bsf	3,5	;RP0=1, select bank1
  1704  0C76  1303               	bcf	3,6	;RP1=0, select bank1
  1705  0C77  00D3               	movwf	LCD_Cursor@Col^(0+128)
  1706  0C78  3000               	movlw	0
  1707  0C79  160A  118A  25F8  120A  158A  	fcall	_LCD_Cursor
  1708                           
  1709                           ;main.c: 582: LCD_WriteString(display_rpm);
  1710  0C7E  30A0               	movlw	_display_rpm& (0+255)
  1711  0C7F  1683               	bsf	3,5	;RP0=1, select bank1
  1712  0C80  1303               	bcf	3,6	;RP1=0, select bank1
  1713  0C81  00D5               	movwf	LCD_WriteString@Str^(0+128)
  1714  0C82  3001               	movlw	1
  1715  0C83  00D6               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1716  0C84  160A  118A  26CA  120A  158A  	fcall	_LCD_WriteString
  1717                           
  1718                           ;main.c: 583: LCD_Cursor(1,0);
  1719  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0C8A  1303               	bcf	3,6	;RP1=0, select bank1
  1721  0C8B  01D3               	clrf	LCD_Cursor@Col^(0+128)
  1722  0C8C  3001               	movlw	1
  1723  0C8D  160A  118A  25F8  120A  158A  	fcall	_LCD_Cursor
  1724                           
  1725                           ;main.c: 588: _delay((unsigned long)((200)*(18432000/4000.0)));
  1726  0C92  3005               	movlw	5
  1727  0C93  1683               	bsf	3,5	;RP0=1, select bank3
  1728  0C94  1703               	bsf	3,6	;RP1=1, select bank3
  1729  0C95  00BC               	movwf	(??_main^(0+384)+2)
  1730  0C96  30AD               	movlw	173
  1731  0C97  00BB               	movwf	(??_main^(0+384)+1)
  1732  0C98  30E0               	movlw	224
  1733  0C99  00BA               	movwf	??_main^(0+384)
  1734  0C9A                     u3507:	
  1735  0C9A  0BBA               	decfsz	??_main^(0+384),f
  1736  0C9B  2C9A               	goto	u3507
  1737  0C9C  0BBB               	decfsz	(??_main^(0+384)+1),f
  1738  0C9D  2C9A               	goto	u3507
  1739  0C9E  0BBC               	decfsz	(??_main^(0+384)+2),f
  1740  0C9F  2C9A               	goto	u3507
  1741  0CA0  2C57               	goto	l3102
  1742  0CA1                     __end_of_main:	
  1743                           
  1744                           	psect	text1
  1745  0810                     __ptext1:	
  1746 ;; *************** function _USART_Init *****************
  1747 ;; Defined at:
  1748 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  BaudRate        4    8[BANK3 ] long 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;		None               void
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0, pclath, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1762 ;;      Params:         0       0       0       4       0
  1763 ;;      Locals:         0       0       0       0       0
  1764 ;;      Temps:          0       0       0       4       0
  1765 ;;      Totals:         0       0       0       8       0
  1766 ;;Total ram usage:        8 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    6
  1769 ;; This function calls:
  1770 ;;		___aldiv
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _USART_Init
  1778  0810                     _USART_Init:	
  1779                           
  1780                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1784  0810  1683               	bsf	3,5	;RP0=1, select bank3
  1785  0811  1703               	bsf	3,6	;RP1=1, select bank3
  1786  0812  0832               	movf	USART_Init@BaudRate^(0+384),w
  1787  0813  00B6               	movwf	??_USART_Init^(0+384)
  1788  0814  0833               	movf	(USART_Init@BaudRate+1)^(0+384),w
  1789  0815  00B7               	movwf	(??_USART_Init^(0+384)+1)
  1790  0816  0834               	movf	(USART_Init@BaudRate+2)^(0+384),w
  1791  0817  00B8               	movwf	(??_USART_Init^(0+384)+2)
  1792  0818  0835               	movf	(USART_Init@BaudRate+3)^(0+384),w
  1793  0819  00B9               	movwf	(??_USART_Init^(0+384)+3)
  1794  081A  3004               	movlw	4
  1795  081B                     u3485:	
  1796  081B  1003               	clrc
  1797  081C  0DB6               	rlf	??_USART_Init^(0+384),f
  1798  081D  0DB7               	rlf	(??_USART_Init^(0+384)+1),f
  1799  081E  0DB8               	rlf	(??_USART_Init^(0+384)+2),f
  1800  081F  0DB9               	rlf	(??_USART_Init^(0+384)+3),f
  1801  0820  3EFF               	addlw	-1
  1802  0821  1D03               	skipz
  1803  0822  281B               	goto	u3485
  1804  0823  0839               	movf	(??_USART_Init+3)^(0+384),w
  1805  0824  00AD               	movwf	(___aldiv@divisor+3)^(0+384)
  1806  0825  0838               	movf	(??_USART_Init+2)^(0+384),w
  1807  0826  00AC               	movwf	(___aldiv@divisor+2)^(0+384)
  1808  0827  0837               	movf	(??_USART_Init+1)^(0+384),w
  1809  0828  00AB               	movwf	(___aldiv@divisor+1)^(0+384)
  1810  0829  0836               	movf	??_USART_Init^(0+384),w
  1811  082A  00AA               	movwf	___aldiv@divisor^(0+384)
  1812  082B  3001               	movlw	1
  1813  082C  00B1               	movwf	(___aldiv@dividend+3)^(0+384)
  1814  082D  3019               	movlw	25
  1815  082E  00B0               	movwf	(___aldiv@dividend+2)^(0+384)
  1816  082F  3040               	movlw	64
  1817  0830  00AF               	movwf	(___aldiv@dividend+1)^(0+384)
  1818  0831  3000               	movlw	0
  1819  0832  00AE               	movwf	___aldiv@dividend^(0+384)
  1820  0833  120A  158A  217E   	fcall	___aldiv
  1821  0836  1683               	bsf	3,5	;RP0=1, select bank3
  1822  0837  1703               	bsf	3,6	;RP1=1, select bank3
  1823  0838  082A               	movf	?___aldiv^(0+384),w
  1824  0839  3EFF               	addlw	255
  1825  083A  1683               	bsf	3,5	;RP0=1, select bank1
  1826  083B  1303               	bcf	3,6	;RP1=0, select bank1
  1827  083C  0099               	movwf	25	;volatile
  1828                           
  1829                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1830  083D  1398               	bcf	24,7	;volatile
  1831                           
  1832                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1833  083E  1318               	bcf	24,6	;volatile
  1834                           
  1835                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1836  083F  1698               	bsf	24,5	;volatile
  1837                           
  1838                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1839  0840  1218               	bcf	24,4	;volatile
  1840                           
  1841                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1842  0841  1518               	bsf	24,2	;volatile
  1843                           
  1844                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1845  0842  1498               	bsf	24,1	;volatile
  1846                           
  1847                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1848  0843  1018               	bcf	24,0	;volatile
  1849                           
  1850                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1851  0844  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0845  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0846  1798               	bsf	24,7	;volatile
  1854                           
  1855                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1856  0847  1318               	bcf	24,6	;volatile
  1857                           
  1858                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1859  0848  1298               	bcf	24,5	;volatile
  1860                           
  1861                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1862  0849  1618               	bsf	24,4	;volatile
  1863                           
  1864                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1865  084A  1198               	bcf	24,3	;volatile
  1866                           
  1867                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1868  084B  1118               	bcf	24,2	;volatile
  1869                           
  1870                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1871  084C  1098               	bcf	24,1	;volatile
  1872                           
  1873                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1874  084D  1018               	bcf	24,0	;volatile
  1875                           
  1876                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1877  084E  1683               	bsf	3,5	;RP0=1, select bank1
  1878  084F  1303               	bcf	3,6	;RP1=0, select bank1
  1879  0850  120C               	bcf	12,4	;volatile
  1880                           
  1881                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1882  0851  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0852  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0853  120C               	bcf	12,4	;volatile
  1885                           
  1886                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1887  0854  1683               	bsf	3,5	;RP0=1, select bank1
  1888  0855  1303               	bcf	3,6	;RP1=0, select bank1
  1889  0856  168C               	bsf	12,5	;volatile
  1890                           
  1891                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1892  0857  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0858  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0859  128C               	bcf	12,5	;volatile
  1895  085A  0008               	return
  1896  085B                     __end_of_USART_Init:	
  1897                           
  1898                           	psect	text2
  1899  097E                     __ptext2:	
  1900 ;; *************** function ___aldiv *****************
  1901 ;; Defined at:
  1902 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  divisor         4    0[BANK3 ] long 
  1905 ;;  dividend        4    4[BANK3 ] long 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  quotient        4   23[BANK1 ] long 
  1908 ;;  sign            1   22[BANK1 ] unsigned char 
  1909 ;;  counter         1   21[BANK1 ] unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  4    0[BANK3 ] long 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1919 ;;      Params:         0       0       0       8       0
  1920 ;;      Locals:         0       0       6       0       0
  1921 ;;      Temps:          0       0       1       0       0
  1922 ;;      Totals:         0       0       7       8       0
  1923 ;;Total ram usage:       15 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    5
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_USART_Init
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function ___aldiv
  1935  097E                     ___aldiv:	
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1939  097E  1683               	bsf	3,5	;RP0=1, select bank1
  1940  097F  1303               	bcf	3,6	;RP1=0, select bank1
  1941  0980  01D5               	clrf	___aldiv@sign^(0+128)
  1942  0981  1683               	bsf	3,5	;RP0=1, select bank3
  1943  0982  1703               	bsf	3,6	;RP1=1, select bank3
  1944  0983  1FAD               	btfss	(___aldiv@divisor+3)^(0+384),7
  1945  0984  2994               	goto	l600
  1946  0985  09AA               	comf	___aldiv@divisor^(0+384),f
  1947  0986  09AB               	comf	(___aldiv@divisor+1)^(0+384),f
  1948  0987  09AC               	comf	(___aldiv@divisor+2)^(0+384),f
  1949  0988  09AD               	comf	(___aldiv@divisor+3)^(0+384),f
  1950  0989  0AAA               	incf	___aldiv@divisor^(0+384),f
  1951  098A  1903               	skipnz
  1952  098B  0AAB               	incf	(___aldiv@divisor+1)^(0+384),f
  1953  098C  1903               	skipnz
  1954  098D  0AAC               	incf	(___aldiv@divisor+2)^(0+384),f
  1955  098E  1903               	skipnz
  1956  098F  0AAD               	incf	(___aldiv@divisor+3)^(0+384),f
  1957  0990  1683               	bsf	3,5	;RP0=1, select bank1
  1958  0991  1303               	bcf	3,6	;RP1=0, select bank1
  1959  0992  01D5               	clrf	___aldiv@sign^(0+128)
  1960  0993  0AD5               	incf	___aldiv@sign^(0+128),f
  1961  0994                     l600:	
  1962  0994  1683               	bsf	3,5	;RP0=1, select bank3
  1963  0995  1703               	bsf	3,6	;RP1=1, select bank3
  1964  0996  1FB1               	btfss	(___aldiv@dividend+3)^(0+384),7
  1965  0997  29A9               	goto	l2990
  1966  0998  09AE               	comf	___aldiv@dividend^(0+384),f
  1967  0999  09AF               	comf	(___aldiv@dividend+1)^(0+384),f
  1968  099A  09B0               	comf	(___aldiv@dividend+2)^(0+384),f
  1969  099B  09B1               	comf	(___aldiv@dividend+3)^(0+384),f
  1970  099C  0AAE               	incf	___aldiv@dividend^(0+384),f
  1971  099D  1903               	skipnz
  1972  099E  0AAF               	incf	(___aldiv@dividend+1)^(0+384),f
  1973  099F  1903               	skipnz
  1974  09A0  0AB0               	incf	(___aldiv@dividend+2)^(0+384),f
  1975  09A1  1903               	skipnz
  1976  09A2  0AB1               	incf	(___aldiv@dividend+3)^(0+384),f
  1977  09A3  3001               	movlw	1
  1978  09A4  1683               	bsf	3,5	;RP0=1, select bank1
  1979  09A5  1303               	bcf	3,6	;RP1=0, select bank1
  1980  09A6  00D3               	movwf	??___aldiv^(0+128)
  1981  09A7  0853               	movf	??___aldiv^(0+128),w
  1982  09A8  06D5               	xorwf	___aldiv@sign^(0+128),f
  1983  09A9                     l2990:	
  1984  09A9  3000               	movlw	0
  1985  09AA  1303               	bcf	3,6	;RP1=0, select bank1
  1986  09AB  00D9               	movwf	(___aldiv@quotient+3)^(0+128)
  1987  09AC  3000               	movlw	0
  1988  09AD  00D8               	movwf	(___aldiv@quotient+2)^(0+128)
  1989  09AE  3000               	movlw	0
  1990  09AF  00D7               	movwf	(___aldiv@quotient+1)^(0+128)
  1991  09B0  3000               	movlw	0
  1992  09B1  00D6               	movwf	___aldiv@quotient^(0+128)
  1993  09B2  1683               	bsf	3,5	;RP0=1, select bank3
  1994  09B3  1703               	bsf	3,6	;RP1=1, select bank3
  1995  09B4  082D               	movf	(___aldiv@divisor+3)^(0+384),w
  1996  09B5  042C               	iorwf	(___aldiv@divisor+2)^(0+384),w
  1997  09B6  042B               	iorwf	(___aldiv@divisor+1)^(0+384),w
  1998  09B7  042A               	iorwf	___aldiv@divisor^(0+384),w
  1999  09B8  1903               	skipnz
  2000  09B9  2A13               	goto	l3012
  2001  09BA  1683               	bsf	3,5	;RP0=1, select bank1
  2002  09BB  1303               	bcf	3,6	;RP1=0, select bank1
  2003  09BC  01D4               	clrf	___aldiv@counter^(0+128)
  2004  09BD  0AD4               	incf	___aldiv@counter^(0+128),f
  2005  09BE                     l2998:	
  2006  09BE  1683               	bsf	3,5	;RP0=1, select bank3
  2007  09BF  1703               	bsf	3,6	;RP1=1, select bank3
  2008  09C0  1BAD               	btfsc	(___aldiv@divisor+3)^(0+384),7
  2009  09C1  29D5               	goto	l3000
  2010  09C2  3001               	movlw	1
  2011  09C3  1303               	bcf	3,6	;RP1=0, select bank1
  2012  09C4  00D3               	movwf	??___aldiv^(0+128)
  2013  09C5                     u3415:	
  2014  09C5  1003               	clrc
  2015  09C6  1683               	bsf	3,5	;RP0=1, select bank3
  2016  09C7  1703               	bsf	3,6	;RP1=1, select bank3
  2017  09C8  0DAA               	rlf	___aldiv@divisor^(0+384),f
  2018  09C9  0DAB               	rlf	(___aldiv@divisor+1)^(0+384),f
  2019  09CA  0DAC               	rlf	(___aldiv@divisor+2)^(0+384),f
  2020  09CB  0DAD               	rlf	(___aldiv@divisor+3)^(0+384),f
  2021  09CC  1683               	bsf	3,5	;RP0=1, select bank1
  2022  09CD  1303               	bcf	3,6	;RP1=0, select bank1
  2023  09CE  0BD3               	decfsz	??___aldiv^(0+128),f
  2024  09CF  29C5               	goto	u3415
  2025  09D0  3001               	movlw	1
  2026  09D1  00D3               	movwf	??___aldiv^(0+128)
  2027  09D2  0853               	movf	??___aldiv^(0+128),w
  2028  09D3  07D4               	addwf	___aldiv@counter^(0+128),f
  2029  09D4  29BE               	goto	l2998
  2030  09D5                     l3000:	
  2031  09D5  3001               	movlw	1
  2032  09D6  1303               	bcf	3,6	;RP1=0, select bank1
  2033  09D7  00D3               	movwf	??___aldiv^(0+128)
  2034  09D8                     u3435:	
  2035  09D8  1003               	clrc
  2036  09D9  0DD6               	rlf	___aldiv@quotient^(0+128),f
  2037  09DA  0DD7               	rlf	(___aldiv@quotient+1)^(0+128),f
  2038  09DB  0DD8               	rlf	(___aldiv@quotient+2)^(0+128),f
  2039  09DC  0DD9               	rlf	(___aldiv@quotient+3)^(0+128),f
  2040  09DD  0BD3               	decfsz	??___aldiv^(0+128),f
  2041  09DE  29D8               	goto	u3435
  2042  09DF  1683               	bsf	3,5	;RP0=1, select bank3
  2043  09E0  1703               	bsf	3,6	;RP1=1, select bank3
  2044  09E1  082D               	movf	(___aldiv@divisor+3)^(0+384),w
  2045  09E2  0231               	subwf	(___aldiv@dividend+3)^(0+384),w
  2046  09E3  1D03               	skipz
  2047  09E4  29EF               	goto	u3445
  2048  09E5  082C               	movf	(___aldiv@divisor+2)^(0+384),w
  2049  09E6  0230               	subwf	(___aldiv@dividend+2)^(0+384),w
  2050  09E7  1D03               	skipz
  2051  09E8  29EF               	goto	u3445
  2052  09E9  082B               	movf	(___aldiv@divisor+1)^(0+384),w
  2053  09EA  022F               	subwf	(___aldiv@dividend+1)^(0+384),w
  2054  09EB  1D03               	skipz
  2055  09EC  29EF               	goto	u3445
  2056  09ED  082A               	movf	___aldiv@divisor^(0+384),w
  2057  09EE  022E               	subwf	___aldiv@dividend^(0+384),w
  2058  09EF                     u3445:	
  2059  09EF  1C03               	skipc
  2060  09F0  2A02               	goto	l3008
  2061  09F1  082A               	movf	___aldiv@divisor^(0+384),w
  2062  09F2  02AE               	subwf	___aldiv@dividend^(0+384),f
  2063  09F3  082B               	movf	(___aldiv@divisor+1)^(0+384),w
  2064  09F4  1C03               	skipc
  2065  09F5  0F2B               	incfsz	(___aldiv@divisor+1)^(0+384),w
  2066  09F6  02AF               	subwf	(___aldiv@dividend+1)^(0+384),f
  2067  09F7  082C               	movf	(___aldiv@divisor+2)^(0+384),w
  2068  09F8  1C03               	skipc
  2069  09F9  0F2C               	incfsz	(___aldiv@divisor+2)^(0+384),w
  2070  09FA  02B0               	subwf	(___aldiv@dividend+2)^(0+384),f
  2071  09FB  082D               	movf	(___aldiv@divisor+3)^(0+384),w
  2072  09FC  1C03               	skipc
  2073  09FD  0F2D               	incfsz	(___aldiv@divisor+3)^(0+384),w
  2074  09FE  02B1               	subwf	(___aldiv@dividend+3)^(0+384),f
  2075  09FF  1683               	bsf	3,5	;RP0=1, select bank1
  2076  0A00  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0A01  1456               	bsf	___aldiv@quotient^(0+128),0
  2078  0A02                     l3008:	
  2079  0A02  3001               	movlw	1
  2080  0A03                     u3455:	
  2081  0A03  1003               	clrc
  2082  0A04  1683               	bsf	3,5	;RP0=1, select bank3
  2083  0A05  1703               	bsf	3,6	;RP1=1, select bank3
  2084  0A06  0CAD               	rrf	(___aldiv@divisor+3)^(0+384),f
  2085  0A07  0CAC               	rrf	(___aldiv@divisor+2)^(0+384),f
  2086  0A08  0CAB               	rrf	(___aldiv@divisor+1)^(0+384),f
  2087  0A09  0CAA               	rrf	___aldiv@divisor^(0+384),f
  2088  0A0A  3EFF               	addlw	-1
  2089  0A0B  1D03               	skipz
  2090  0A0C  2A03               	goto	u3455
  2091  0A0D  3001               	movlw	1
  2092  0A0E  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0A0F  1303               	bcf	3,6	;RP1=0, select bank1
  2094  0A10  02D4               	subwf	___aldiv@counter^(0+128),f
  2095  0A11  1D03               	btfss	3,2
  2096  0A12  29D5               	goto	l3000
  2097  0A13                     l3012:	
  2098  0A13  1303               	bcf	3,6	;RP1=0, select bank1
  2099  0A14  0855               	movf	___aldiv@sign^(0+128),w
  2100  0A15  1903               	btfsc	3,2
  2101  0A16  2A22               	goto	l3016
  2102  0A17  09D6               	comf	___aldiv@quotient^(0+128),f
  2103  0A18  09D7               	comf	(___aldiv@quotient+1)^(0+128),f
  2104  0A19  09D8               	comf	(___aldiv@quotient+2)^(0+128),f
  2105  0A1A  09D9               	comf	(___aldiv@quotient+3)^(0+128),f
  2106  0A1B  0AD6               	incf	___aldiv@quotient^(0+128),f
  2107  0A1C  1903               	skipnz
  2108  0A1D  0AD7               	incf	(___aldiv@quotient+1)^(0+128),f
  2109  0A1E  1903               	skipnz
  2110  0A1F  0AD8               	incf	(___aldiv@quotient+2)^(0+128),f
  2111  0A20  1903               	skipnz
  2112  0A21  0AD9               	incf	(___aldiv@quotient+3)^(0+128),f
  2113  0A22                     l3016:	
  2114  0A22  0859               	movf	(___aldiv@quotient+3)^(0+128),w
  2115  0A23  1683               	bsf	3,5	;RP0=1, select bank3
  2116  0A24  1703               	bsf	3,6	;RP1=1, select bank3
  2117  0A25  00AD               	movwf	(?___aldiv+3)^(0+384)
  2118  0A26  1683               	bsf	3,5	;RP0=1, select bank1
  2119  0A27  1303               	bcf	3,6	;RP1=0, select bank1
  2120  0A28  0858               	movf	(___aldiv@quotient+2)^(0+128),w
  2121  0A29  1683               	bsf	3,5	;RP0=1, select bank3
  2122  0A2A  1703               	bsf	3,6	;RP1=1, select bank3
  2123  0A2B  00AC               	movwf	(?___aldiv+2)^(0+384)
  2124  0A2C  1683               	bsf	3,5	;RP0=1, select bank1
  2125  0A2D  1303               	bcf	3,6	;RP1=0, select bank1
  2126  0A2E  0857               	movf	(___aldiv@quotient+1)^(0+128),w
  2127  0A2F  1683               	bsf	3,5	;RP0=1, select bank3
  2128  0A30  1703               	bsf	3,6	;RP1=1, select bank3
  2129  0A31  00AB               	movwf	(?___aldiv+1)^(0+384)
  2130  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0A33  1303               	bcf	3,6	;RP1=0, select bank1
  2132  0A34  0856               	movf	___aldiv@quotient^(0+128),w
  2133  0A35  1683               	bsf	3,5	;RP0=1, select bank3
  2134  0A36  1703               	bsf	3,6	;RP1=1, select bank3
  2135  0A37  00AA               	movwf	?___aldiv^(0+384)
  2136  0A38  0008               	return
  2137  0A39                     __end_of___aldiv:	
  2138                           
  2139                           	psect	text3
  2140  1527                     __ptext3:	
  2141 ;; *************** function _TIMER0_Set *****************
  2142 ;; Defined at:
  2143 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  contagens       1    wreg     unsigned char 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  contagens       1   20[BANK1 ] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;		None               void
  2150 ;; Registers used:
  2151 ;;		wreg
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         0       0       1       0       0
  2159 ;;      Temps:          0       0       0       0       0
  2160 ;;      Totals:         0       0       1       0       0
  2161 ;;Total ram usage:        1 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    5
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           
  2172                           ;psect for function _TIMER0_Set
  2173  1527                     _TIMER0_Set:	
  2174                           
  2175                           ;incstack = 0
  2176                           ; Regs used in _TIMER0_Set: [wreg]
  2177                           ;TIMER0_Set@contagens stored from wreg
  2178  1527  1683               	bsf	3,5	;RP0=1, select bank1
  2179  1528  1303               	bcf	3,6	;RP1=0, select bank1
  2180  1529  00D3               	movwf	TIMER0_Set@contagens^(0+128)
  2181                           
  2182                           ;timers.c: 22: TMR0 = contagens;
  2183  152A  0853               	movf	TIMER0_Set@contagens^(0+128),w
  2184  152B  1283               	bcf	3,5	;RP0=0, select bank0
  2185  152C  1303               	bcf	3,6	;RP1=0, select bank0
  2186  152D  0081               	movwf	1	;volatile
  2187  152E  0008               	return
  2188  152F                     __end_of_TIMER0_Set:	
  2189                           
  2190                           	psect	text4
  2191  0805                     __ptext4:	
  2192 ;; *************** function _TIMER0_Init *****************
  2193 ;; Defined at:
  2194 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;		None               void
  2201 ;; Registers used:
  2202 ;;		None
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2208 ;;      Params:         0       0       0       0       0
  2209 ;;      Locals:         0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0
  2211 ;;      Totals:         0       0       0       0       0
  2212 ;;Total ram usage:        0 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    5
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_main
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _TIMER0_Init
  2224  0805                     _TIMER0_Init:	
  2225                           
  2226                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2227                           
  2228                           ;incstack = 0
  2229                           ; Regs used in _TIMER0_Init: []
  2230  0805  1683               	bsf	3,5	;RP0=1, select bank1
  2231  0806  1303               	bcf	3,6	;RP1=0, select bank1
  2232  0807  1281               	bcf	1,5	;volatile
  2233                           
  2234                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2235  0808  1201               	bcf	1,4	;volatile
  2236                           
  2237                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2238  0809  1181               	bcf	1,3	;volatile
  2239                           
  2240                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2241  080A  1501               	bsf	1,2	;volatile
  2242                           
  2243                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2244  080B  1481               	bsf	1,1	;volatile
  2245                           
  2246                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2247  080C  1401               	bsf	1,0	;volatile
  2248                           
  2249                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2250  080D  110B               	bcf	11,2	;volatile
  2251                           
  2252                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2253  080E  168B               	bsf	11,5	;volatile
  2254  080F  0008               	return
  2255  0810                     __end_of_TIMER0_Init:	
  2256                           
  2257                           	psect	text5
  2258  167D                     __ptext5:	
  2259 ;; *************** function _PWM_Init *****************
  2260 ;; Defined at:
  2261 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;		None               void
  2268 ;; Registers used:
  2269 ;;		wreg
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0
  2278 ;;      Totals:         0       0       0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    5
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function _PWM_Init
  2291  167D                     _PWM_Init:	
  2292                           
  2293                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2294                           
  2295                           ;incstack = 0
  2296                           ; Regs used in _PWM_Init: [wreg]
  2297  167D  1283               	bcf	3,5	;RP0=0, select bank0
  2298  167E  1303               	bcf	3,6	;RP1=0, select bank0
  2299  167F  1492               	bsf	18,1	;volatile
  2300                           
  2301                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2302  1680  1012               	bcf	18,0	;volatile
  2303                           
  2304                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2305  1681  1312               	bcf	18,6	;volatile
  2306                           
  2307                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2308  1682  1292               	bcf	18,5	;volatile
  2309                           
  2310                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2311  1683  1212               	bcf	18,4	;volatile
  2312                           
  2313                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2314  1684  1192               	bcf	18,3	;volatile
  2315                           
  2316                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2317  1685  1512               	bsf	18,2	;volatile
  2318                           
  2319                           ;pwm.c: 27: PR2 = 255;
  2320  1686  30FF               	movlw	255
  2321  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2322  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2323  1689  0092               	movwf	18	;volatile
  2324                           
  2325                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2326  168A  1283               	bcf	3,5	;RP0=0, select bank0
  2327  168B  1303               	bcf	3,6	;RP1=0, select bank0
  2328  168C  1597               	bsf	23,3	;volatile
  2329                           
  2330                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2331  168D  1517               	bsf	23,2	;volatile
  2332                           
  2333                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2334  168E  1497               	bsf	23,1	;volatile
  2335                           
  2336                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2337  168F  1417               	bsf	23,0	;volatile
  2338                           
  2339                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2340  1690  1683               	bsf	3,5	;RP0=1, select bank1
  2341  1691  1303               	bcf	3,6	;RP1=0, select bank1
  2342  1692  150C               	bsf	12,2	;volatile
  2343                           
  2344                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2345  1693  1283               	bcf	3,5	;RP0=0, select bank0
  2346  1694  1303               	bcf	3,6	;RP1=0, select bank0
  2347  1695  110C               	bcf	12,2	;volatile
  2348                           
  2349                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2350  1696  159D               	bsf	29,3	;volatile
  2351                           
  2352                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2353  1697  151D               	bsf	29,2	;volatile
  2354                           
  2355                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2356  1698  149D               	bsf	29,1	;volatile
  2357                           
  2358                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2359  1699  141D               	bsf	29,0	;volatile
  2360                           
  2361                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2362  169A  1683               	bsf	3,5	;RP0=1, select bank1
  2363  169B  1303               	bcf	3,6	;RP1=0, select bank1
  2364  169C  140D               	bsf	13,0	;volatile
  2365                           
  2366                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2367  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2368  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2369  169F  100D               	bcf	13,0	;volatile
  2370  16A0  0008               	return
  2371  16A1                     __end_of_PWM_Init:	
  2372                           
  2373                           	psect	text6
  2374  07DE                     __ptext6:	
  2375 ;; *************** function _PWM_DutyCycle2 *****************
  2376 ;; Defined at:
  2377 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  valor           2   20[BANK1 ] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;		None               void
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       2       0       0
  2392 ;;      Locals:         0       0       0       0       0
  2393 ;;      Temps:          0       0       2       0       0
  2394 ;;      Totals:         0       0       4       0       0
  2395 ;;Total ram usage:        4 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    5
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _PWM_DutyCycle2
  2407  07DE                     _PWM_DutyCycle2:	
  2408                           
  2409                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2410                           
  2411                           ;incstack = 0
  2412                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2413  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  2414  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  2415  07E0  0854               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  2416  07E1  00D6               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  2417  07E2  0853               	movf	PWM_DutyCycle2@valor^(0+128),w
  2418  07E3  00D5               	movwf	??_PWM_DutyCycle2^(0+128)
  2419  07E4  0D56               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  2420  07E5  0CD6               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  2421  07E6  0CD5               	rrf	??_PWM_DutyCycle2^(0+128),f
  2422  07E7  0D56               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  2423  07E8  0CD6               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  2424  07E9  0CD5               	rrf	??_PWM_DutyCycle2^(0+128),f
  2425  07EA  0855               	movf	??_PWM_DutyCycle2^(0+128),w
  2426  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  2427  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  2428  07ED  009B               	movwf	27	;volatile
  2429                           
  2430                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2431  07EE  1683               	bsf	3,5	;RP0=1, select bank1
  2432  07EF  1303               	bcf	3,6	;RP1=0, select bank1
  2433  07F0  0853               	movf	PWM_DutyCycle2@valor^(0+128),w
  2434  07F1  00D5               	movwf	??_PWM_DutyCycle2^(0+128)
  2435  07F2  3003               	movlw	3
  2436  07F3                     u3155:	
  2437  07F3  1003               	clrc
  2438  07F4  0DD5               	rlf	??_PWM_DutyCycle2^(0+128),f
  2439  07F5  3EFF               	addlw	-1
  2440  07F6  1D03               	skipz
  2441  07F7  2FF3               	goto	u3155
  2442  07F8  1003               	clrc
  2443  07F9  0D55               	rlf	??_PWM_DutyCycle2^(0+128),w
  2444  07FA  380C               	iorlw	12
  2445  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  2446  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  2447  07FD  009D               	movwf	29	;volatile
  2448  07FE  0008               	return
  2449  07FF                     __end_of_PWM_DutyCycle2:	
  2450                           
  2451                           	psect	text7
  2452  1639                     __ptext7:	
  2453 ;; *************** function _PWM_DutyCycle1 *****************
  2454 ;; Defined at:
  2455 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  valor           2   20[BANK1 ] int 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;		None               void
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       2       0       0
  2470 ;;      Locals:         0       0       0       0       0
  2471 ;;      Temps:          0       0       2       0       0
  2472 ;;      Totals:         0       0       4       0       0
  2473 ;;Total ram usage:        4 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    5
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function _PWM_DutyCycle1
  2485  1639                     _PWM_DutyCycle1:	
  2486                           
  2487                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2491  1639  1683               	bsf	3,5	;RP0=1, select bank1
  2492  163A  1303               	bcf	3,6	;RP1=0, select bank1
  2493  163B  0854               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  2494  163C  00D6               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  2495  163D  0853               	movf	PWM_DutyCycle1@valor^(0+128),w
  2496  163E  00D5               	movwf	??_PWM_DutyCycle1^(0+128)
  2497  163F  0D56               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  2498  1640  0CD6               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  2499  1641  0CD5               	rrf	??_PWM_DutyCycle1^(0+128),f
  2500  1642  0D56               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  2501  1643  0CD6               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  2502  1644  0CD5               	rrf	??_PWM_DutyCycle1^(0+128),f
  2503  1645  0855               	movf	??_PWM_DutyCycle1^(0+128),w
  2504  1646  1283               	bcf	3,5	;RP0=0, select bank0
  2505  1647  1303               	bcf	3,6	;RP1=0, select bank0
  2506  1648  0095               	movwf	21	;volatile
  2507                           
  2508                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2509  1649  1683               	bsf	3,5	;RP0=1, select bank1
  2510  164A  1303               	bcf	3,6	;RP1=0, select bank1
  2511  164B  0853               	movf	PWM_DutyCycle1@valor^(0+128),w
  2512  164C  00D5               	movwf	??_PWM_DutyCycle1^(0+128)
  2513  164D  3003               	movlw	3
  2514  164E                     u3205:	
  2515  164E  1003               	clrc
  2516  164F  0DD5               	rlf	??_PWM_DutyCycle1^(0+128),f
  2517  1650  3EFF               	addlw	-1
  2518  1651  1D03               	skipz
  2519  1652  2E4E               	goto	u3205
  2520  1653  1003               	clrc
  2521  1654  0D55               	rlf	??_PWM_DutyCycle1^(0+128),w
  2522  1655  380C               	iorlw	12
  2523  1656  1283               	bcf	3,5	;RP0=0, select bank0
  2524  1657  1303               	bcf	3,6	;RP1=0, select bank0
  2525  1658  0097               	movwf	23	;volatile
  2526  1659  0008               	return
  2527  165A                     __end_of_PWM_DutyCycle1:	
  2528                           
  2529                           	psect	text8
  2530  16CA                     __ptext8:	
  2531 ;; *************** function _LCD_WriteString *****************
  2532 ;; Defined at:
  2533 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  Str             2   22[BANK1 ] PTR const unsigned char 
  2536 ;;		 -> display_rpm(10), STR_3(6), STR_2(17), 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;		None               void
  2541 ;; Registers used:
  2542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         0       0       2       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0
  2551 ;;      Totals:         0       0       2       0       0
  2552 ;;Total ram usage:        2 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    6
  2555 ;; This function calls:
  2556 ;;		_LCD_WriteData
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function _LCD_WriteString
  2564  16CA                     _LCD_WriteString:	
  2565  16CA                     l2814:	
  2566                           ;lcd.c: 63: while(*Str != '\0')
  2567                           
  2568                           ;incstack = 0
  2569                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2570                           
  2571  16CA  1683               	bsf	3,5	;RP0=1, select bank1
  2572  16CB  1303               	bcf	3,6	;RP1=0, select bank1
  2573  16CC  0856               	movf	(LCD_WriteString@Str+1)^(0+128),w
  2574  16CD  1283               	bcf	3,5	;RP0=0, select bank0
  2575  16CE  1303               	bcf	3,6	;RP1=0, select bank0
  2576  16CF  00FF               	movwf	127
  2577  16D0  1683               	bsf	3,5	;RP0=1, select bank1
  2578  16D1  1303               	bcf	3,6	;RP1=0, select bank1
  2579  16D2  0855               	movf	LCD_WriteString@Str^(0+128),w
  2580  16D3  0084               	movwf	4
  2581  16D4  1283               	bcf	3,5	;RP0=0, select bank0
  2582  16D5  1303               	bcf	3,6	;RP1=0, select bank0
  2583  16D6  160A  118A  2000  160A  118A  	fcall	stringtab
  2584  16DB  3800               	iorlw	0
  2585  16DC  1903               	btfsc	3,2
  2586  16DD  0008               	return
  2587                           
  2588                           ;lcd.c: 64: {
  2589                           ;lcd.c: 65: LCD_WriteData(*Str);
  2590  16DE  1683               	bsf	3,5	;RP0=1, select bank1
  2591  16DF  1303               	bcf	3,6	;RP1=0, select bank1
  2592  16E0  0856               	movf	(LCD_WriteString@Str+1)^(0+128),w
  2593  16E1  1283               	bcf	3,5	;RP0=0, select bank0
  2594  16E2  1303               	bcf	3,6	;RP1=0, select bank0
  2595  16E3  00FF               	movwf	127
  2596  16E4  1683               	bsf	3,5	;RP0=1, select bank1
  2597  16E5  1303               	bcf	3,6	;RP1=0, select bank1
  2598  16E6  0855               	movf	LCD_WriteString@Str^(0+128),w
  2599  16E7  0084               	movwf	4
  2600  16E8  1283               	bcf	3,5	;RP0=0, select bank0
  2601  16E9  1303               	bcf	3,6	;RP1=0, select bank0
  2602  16EA  160A  118A  2000  160A  118A  	fcall	stringtab
  2603  16EF  160A  118A  2574  160A  118A  	fcall	_LCD_WriteData
  2604                           
  2605                           ;lcd.c: 66: Str++;
  2606  16F4  3001               	movlw	1
  2607  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2608  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2609  16F7  07D5               	addwf	LCD_WriteString@Str^(0+128),f
  2610  16F8  1803               	skipnc
  2611  16F9  0AD6               	incf	(LCD_WriteString@Str+1)^(0+128),f
  2612  16FA  2ECA               	goto	l2814
  2613  16FB                     __end_of_LCD_WriteString:	
  2614                           
  2615                           	psect	text9
  2616  1574                     __ptext9:	
  2617 ;; *************** function _LCD_WriteData *****************
  2618 ;; Defined at:
  2619 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  Byte            1    wreg     unsigned char 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  Byte            1   21[BANK1 ] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       0       0       0       0
  2634 ;;      Locals:         0       0       1       0       0
  2635 ;;      Temps:          0       0       1       0       0
  2636 ;;      Totals:         0       0       2       0       0
  2637 ;;Total ram usage:        2 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    5
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_LCD_WriteString
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _LCD_WriteData
  2649  1574                     _LCD_WriteData:	
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in _LCD_WriteData: [wreg]
  2653                           ;LCD_WriteData@Byte stored from wreg
  2654  1574  1683               	bsf	3,5	;RP0=1, select bank1
  2655  1575  1303               	bcf	3,6	;RP1=0, select bank1
  2656  1576  00D4               	movwf	LCD_WriteData@Byte^(0+128)
  2657                           
  2658                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  2659  1577  1283               	bcf	3,5	;RP0=0, select bank0
  2660  1578  1303               	bcf	3,6	;RP1=0, select bank0
  2661  1579  1409               	bsf	9,0	;volatile
  2662                           
  2663                           ;lcd.c: 51: PORTD = Byte;
  2664  157A  1683               	bsf	3,5	;RP0=1, select bank1
  2665  157B  1303               	bcf	3,6	;RP1=0, select bank1
  2666  157C  0854               	movf	LCD_WriteData@Byte^(0+128),w
  2667  157D  1283               	bcf	3,5	;RP0=0, select bank0
  2668  157E  1303               	bcf	3,6	;RP1=0, select bank0
  2669  157F  0088               	movwf	8	;volatile
  2670                           
  2671                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  2672  1580  1489               	bsf	9,1	;volatile
  2673                           
  2674                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2675  1581  303D               	movlw	61
  2676  1582  1683               	bsf	3,5	;RP0=1, select bank1
  2677  1583  1303               	bcf	3,6	;RP1=0, select bank1
  2678  1584  00D3               	movwf	??_LCD_WriteData^(0+128)
  2679  1585                     u3517:	
  2680  1585  0BD3               	decfsz	??_LCD_WriteData^(0+128),f
  2681  1586  2D85               	goto	u3517
  2682                           
  2683                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  2684  1587  1283               	bcf	3,5	;RP0=0, select bank0
  2685  1588  1303               	bcf	3,6	;RP1=0, select bank0
  2686  1589  1089               	bcf	9,1	;volatile
  2687  158A  0008               	return
  2688  158B                     __end_of_LCD_WriteData:	
  2689                           
  2690                           	psect	text10
  2691  085B                     __ptext10:	
  2692 ;; *************** function _LCD_Init *****************
  2693 ;; Defined at:
  2694 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;		None               void
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, pclath, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0
  2710 ;;      Temps:          0       0       2       0       0
  2711 ;;      Totals:         0       0       2       0       0
  2712 ;;Total ram usage:        2 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    6
  2715 ;; This function calls:
  2716 ;;		_LCD_WriteCmd
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _LCD_Init
  2724  085B                     _LCD_Init:	
  2725                           
  2726                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2727                           
  2728                           ;incstack = 0
  2729                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2730  085B  1683               	bsf	3,5	;RP0=1, select bank1
  2731  085C  1303               	bcf	3,6	;RP1=0, select bank1
  2732  085D  119F               	bcf	31,3	;volatile
  2733                           
  2734                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2735  085E  151F               	bsf	31,2	;volatile
  2736                           
  2737                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2738  085F  109F               	bcf	31,1	;volatile
  2739                           
  2740                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2741  0860  101F               	bcf	31,0	;volatile
  2742                           
  2743                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2744  0861  305A               	movlw	90
  2745  0862  00D6               	movwf	(??_LCD_Init^(0+128)+1)
  2746  0863  30C3               	movlw	195
  2747  0864  00D5               	movwf	??_LCD_Init^(0+128)
  2748  0865                     u3527:	
  2749  0865  0BD5               	decfsz	??_LCD_Init^(0+128),f
  2750  0866  2865               	goto	u3527
  2751  0867  0BD6               	decfsz	(??_LCD_Init^(0+128)+1),f
  2752  0868  2865               	goto	u3527
  2753                           
  2754                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2755  0869  3030               	movlw	48
  2756  086A  160A  118A  255D  120A  158A  	fcall	_LCD_WriteCmd
  2757                           
  2758                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2759  086F  3018               	movlw	24
  2760  0870  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0871  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0872  00D6               	movwf	(??_LCD_Init^(0+128)+1)
  2763  0873  30EF               	movlw	239
  2764  0874  00D5               	movwf	??_LCD_Init^(0+128)
  2765  0875                     u3537:	
  2766  0875  0BD5               	decfsz	??_LCD_Init^(0+128),f
  2767  0876  2875               	goto	u3537
  2768  0877  0BD6               	decfsz	(??_LCD_Init^(0+128)+1),f
  2769  0878  2875               	goto	u3537
  2770                           
  2771                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2772  0879  3030               	movlw	48
  2773  087A  160A  118A  255D  120A  158A  	fcall	_LCD_WriteCmd
  2774                           
  2775                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2776  087F  3099               	movlw	153
  2777  0880  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0881  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0882  00D5               	movwf	??_LCD_Init^(0+128)
  2780  0883                     u3547:	
  2781  0883  0BD5               	decfsz	??_LCD_Init^(0+128),f
  2782  0884  2883               	goto	u3547
  2783                           
  2784                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2785  0885  3030               	movlw	48
  2786  0886  160A  118A  255D  120A  158A  	fcall	_LCD_WriteCmd
  2787                           
  2788                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2789  088B  303D               	movlw	61
  2790  088C  1683               	bsf	3,5	;RP0=1, select bank1
  2791  088D  1303               	bcf	3,6	;RP1=0, select bank1
  2792  088E  00D5               	movwf	??_LCD_Init^(0+128)
  2793  088F                     u3557:	
  2794  088F  0BD5               	decfsz	??_LCD_Init^(0+128),f
  2795  0890  288F               	goto	u3557
  2796                           
  2797                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2798  0891  3038               	movlw	56
  2799  0892  160A  118A  255D  120A  158A  	fcall	_LCD_WriteCmd
  2800                           
  2801                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2802  0897  303D               	movlw	61
  2803  0898  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0899  1303               	bcf	3,6	;RP1=0, select bank1
  2805  089A  00D5               	movwf	??_LCD_Init^(0+128)
  2806  089B                     u3567:	
  2807  089B  0BD5               	decfsz	??_LCD_Init^(0+128),f
  2808  089C  289B               	goto	u3567
  2809                           
  2810                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2811  089D  3001               	movlw	1
  2812  089E  160A  118A  255D  120A  158A  	fcall	_LCD_WriteCmd
  2813                           
  2814                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2815  08A3  300C               	movlw	12
  2816  08A4  1683               	bsf	3,5	;RP0=1, select bank1
  2817  08A5  1303               	bcf	3,6	;RP1=0, select bank1
  2818  08A6  00D6               	movwf	(??_LCD_Init^(0+128)+1)
  2819  08A7  30F7               	movlw	247
  2820  08A8  00D5               	movwf	??_LCD_Init^(0+128)
  2821  08A9                     u3577:	
  2822  08A9  0BD5               	decfsz	??_LCD_Init^(0+128),f
  2823  08AA  28A9               	goto	u3577
  2824  08AB  0BD6               	decfsz	(??_LCD_Init^(0+128)+1),f
  2825  08AC  28A9               	goto	u3577
  2826                           
  2827                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2828  08AD  300C               	movlw	12
  2829  08AE  160A  118A  255D  120A  158A  	fcall	_LCD_WriteCmd
  2830                           
  2831                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2832  08B3  303D               	movlw	61
  2833  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  2834  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  2835  08B6  00D5               	movwf	??_LCD_Init^(0+128)
  2836  08B7                     u3587:	
  2837  08B7  0BD5               	decfsz	??_LCD_Init^(0+128),f
  2838  08B8  28B7               	goto	u3587
  2839                           
  2840                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2841  08B9  3006               	movlw	6
  2842  08BA  160A  118A  255D  120A  158A  	fcall	_LCD_WriteCmd
  2843                           
  2844                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2845  08BF  303D               	movlw	61
  2846  08C0  1683               	bsf	3,5	;RP0=1, select bank1
  2847  08C1  1303               	bcf	3,6	;RP1=0, select bank1
  2848  08C2  00D5               	movwf	??_LCD_Init^(0+128)
  2849  08C3                     u3597:	
  2850  08C3  0BD5               	decfsz	??_LCD_Init^(0+128),f
  2851  08C4  28C3               	goto	u3597
  2852  08C5  0008               	return
  2853  08C6                     __end_of_LCD_Init:	
  2854                           
  2855                           	psect	text11
  2856  15F8                     __ptext11:	
  2857 ;; *************** function _LCD_Cursor *****************
  2858 ;; Defined at:
  2859 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  Row             1    wreg     unsigned char 
  2862 ;;  Col             1   20[BANK1 ] unsigned char 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  Row             1   22[BANK1 ] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;		None               void
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2874 ;;      Params:         0       0       1       0       0
  2875 ;;      Locals:         0       0       1       0       0
  2876 ;;      Temps:          0       0       1       0       0
  2877 ;;      Totals:         0       0       3       0       0
  2878 ;;Total ram usage:        3 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    5
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _LCD_Cursor
  2890  15F8                     _LCD_Cursor:	
  2891                           
  2892                           ;incstack = 0
  2893                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  2894                           ;LCD_Cursor@Row stored from wreg
  2895  15F8  1683               	bsf	3,5	;RP0=1, select bank1
  2896  15F9  1303               	bcf	3,6	;RP1=0, select bank1
  2897  15FA  00D5               	movwf	LCD_Cursor@Row^(0+128)
  2898                           
  2899                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  2900  15FB  1283               	bcf	3,5	;RP0=0, select bank0
  2901  15FC  1303               	bcf	3,6	;RP1=0, select bank0
  2902  15FD  1009               	bcf	9,0	;volatile
  2903                           
  2904                           ;lcd.c: 14: if (Row == 0)
  2905  15FE  1683               	bsf	3,5	;RP0=1, select bank1
  2906  15FF  1303               	bcf	3,6	;RP1=0, select bank1
  2907  1600  08D5               	movf	LCD_Cursor@Row^(0+128),f
  2908  1601  1D03               	skipz
  2909  1602  2E06               	goto	l2800
  2910                           
  2911                           ;lcd.c: 15: {
  2912                           ;lcd.c: 16: PORTD = 0x80 + Col;
  2913  1603  0853               	movf	LCD_Cursor@Col^(0+128),w
  2914  1604  3E80               	addlw	128
  2915  1605  2E0A               	goto	L1
  2916  1606                     l2800:	
  2917                           ;lcd.c: 17: }
  2918                           
  2919                           
  2920                           ;lcd.c: 18: else
  2921                           ;lcd.c: 19: {
  2922                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  2923  1606  1683               	bsf	3,5	;RP0=1, select bank1
  2924  1607  1303               	bcf	3,6	;RP1=0, select bank1
  2925  1608  0853               	movf	LCD_Cursor@Col^(0+128),w
  2926  1609  3EC0               	addlw	192
  2927  160A                     L1:	
  2928  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2929  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2930  160C  0088               	movwf	8	;volatile
  2931                           
  2932                           ;lcd.c: 21: }
  2933                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  2934  160D  1489               	bsf	9,1	;volatile
  2935                           
  2936                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2937  160E  303D               	movlw	61
  2938  160F  1683               	bsf	3,5	;RP0=1, select bank1
  2939  1610  1303               	bcf	3,6	;RP1=0, select bank1
  2940  1611  00D4               	movwf	??_LCD_Cursor^(0+128)
  2941  1612                     u3607:	
  2942  1612  0BD4               	decfsz	??_LCD_Cursor^(0+128),f
  2943  1613  2E12               	goto	u3607
  2944                           
  2945                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  2946  1614  1283               	bcf	3,5	;RP0=0, select bank0
  2947  1615  1303               	bcf	3,6	;RP1=0, select bank0
  2948  1616  1089               	bcf	9,1	;volatile
  2949  1617  0008               	return
  2950  1618                     __end_of_LCD_Cursor:	
  2951                           
  2952                           	psect	text12
  2953  16A1                     __ptext12:	
  2954 ;; *************** function _LCD_Clear *****************
  2955 ;; Defined at:
  2956 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;		None               void
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0, pclath, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0
  2972 ;;      Temps:          0       0       2       0       0
  2973 ;;      Totals:         0       0       2       0       0
  2974 ;;Total ram usage:        2 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    6
  2977 ;; This function calls:
  2978 ;;		_LCD_WriteCmd
  2979 ;; This function is called by:
  2980 ;;		_main
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _LCD_Clear
  2986  16A1                     _LCD_Clear:	
  2987                           
  2988                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2992  16A1  3001               	movlw	1
  2993  16A2  160A  118A  255D  160A  118A  	fcall	_LCD_WriteCmd
  2994                           
  2995                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  2996  16A7  300C               	movlw	12
  2997  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2998  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2999  16AA  00D6               	movwf	(??_LCD_Clear^(0+128)+1)
  3000  16AB  30F7               	movlw	247
  3001  16AC  00D5               	movwf	??_LCD_Clear^(0+128)
  3002  16AD                     u3617:	
  3003  16AD  0BD5               	decfsz	??_LCD_Clear^(0+128),f
  3004  16AE  2EAD               	goto	u3617
  3005  16AF  0BD6               	decfsz	(??_LCD_Clear^(0+128)+1),f
  3006  16B0  2EAD               	goto	u3617
  3007                           
  3008                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  3009  16B1  300C               	movlw	12
  3010  16B2  160A  118A  255D  160A  118A  	fcall	_LCD_WriteCmd
  3011                           
  3012                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3013  16B7  303D               	movlw	61
  3014  16B8  1683               	bsf	3,5	;RP0=1, select bank1
  3015  16B9  1303               	bcf	3,6	;RP1=0, select bank1
  3016  16BA  00D5               	movwf	??_LCD_Clear^(0+128)
  3017  16BB                     u3627:	
  3018  16BB  0BD5               	decfsz	??_LCD_Clear^(0+128),f
  3019  16BC  2EBB               	goto	u3627
  3020                           
  3021                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  3022  16BD  3006               	movlw	6
  3023  16BE  160A  118A  255D  160A  118A  	fcall	_LCD_WriteCmd
  3024                           
  3025                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3026  16C3  303D               	movlw	61
  3027  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  3028  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  3029  16C6  00D5               	movwf	??_LCD_Clear^(0+128)
  3030  16C7                     u3637:	
  3031  16C7  0BD5               	decfsz	??_LCD_Clear^(0+128),f
  3032  16C8  2EC7               	goto	u3637
  3033  16C9  0008               	return
  3034  16CA                     __end_of_LCD_Clear:	
  3035                           
  3036                           	psect	text13
  3037  155D                     __ptext13:	
  3038 ;; *************** function _LCD_WriteCmd *****************
  3039 ;; Defined at:
  3040 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  Byte            1    wreg     unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  Byte            1   21[BANK1 ] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;		None               void
  3047 ;; Registers used:
  3048 ;;		wreg
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         0       0       0       0       0
  3055 ;;      Locals:         0       0       1       0       0
  3056 ;;      Temps:          0       0       1       0       0
  3057 ;;      Totals:         0       0       2       0       0
  3058 ;;Total ram usage:        2 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    5
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_LCD_Clear
  3065 ;;		_LCD_Init
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _LCD_WriteCmd
  3071  155D                     _LCD_WriteCmd:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _LCD_WriteCmd: [wreg]
  3075                           ;LCD_WriteCmd@Byte stored from wreg
  3076  155D  1683               	bsf	3,5	;RP0=1, select bank1
  3077  155E  1303               	bcf	3,6	;RP1=0, select bank1
  3078  155F  00D4               	movwf	LCD_WriteCmd@Byte^(0+128)
  3079                           
  3080                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  3081  1560  1283               	bcf	3,5	;RP0=0, select bank0
  3082  1561  1303               	bcf	3,6	;RP1=0, select bank0
  3083  1562  1009               	bcf	9,0	;volatile
  3084                           
  3085                           ;lcd.c: 36: PORTD = Byte;
  3086  1563  1683               	bsf	3,5	;RP0=1, select bank1
  3087  1564  1303               	bcf	3,6	;RP1=0, select bank1
  3088  1565  0854               	movf	LCD_WriteCmd@Byte^(0+128),w
  3089  1566  1283               	bcf	3,5	;RP0=0, select bank0
  3090  1567  1303               	bcf	3,6	;RP1=0, select bank0
  3091  1568  0088               	movwf	8	;volatile
  3092                           
  3093                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3094  1569  1489               	bsf	9,1	;volatile
  3095                           
  3096                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3097  156A  303D               	movlw	61
  3098  156B  1683               	bsf	3,5	;RP0=1, select bank1
  3099  156C  1303               	bcf	3,6	;RP1=0, select bank1
  3100  156D  00D3               	movwf	??_LCD_WriteCmd^(0+128)
  3101  156E                     u3647:	
  3102  156E  0BD3               	decfsz	??_LCD_WriteCmd^(0+128),f
  3103  156F  2D6E               	goto	u3647
  3104                           
  3105                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3106  1570  1283               	bcf	3,5	;RP0=0, select bank0
  3107  1571  1303               	bcf	3,6	;RP1=0, select bank0
  3108  1572  1089               	bcf	9,1	;volatile
  3109  1573  0008               	return
  3110  1574                     __end_of_LCD_WriteCmd:	
  3111                           
  3112                           	psect	text14
  3113  1537                     __ptext14:	
  3114 ;; *************** function _ADC_Init *****************
  3115 ;; Defined at:
  3116 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;		None               void
  3123 ;; Registers used:
  3124 ;;		None
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3130 ;;      Params:         0       0       0       0       0
  3131 ;;      Locals:         0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0
  3133 ;;      Totals:         0       0       0       0       0
  3134 ;;Total ram usage:        0 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    5
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function _ADC_Init
  3146  1537                     _ADC_Init:	
  3147                           
  3148                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  3149                           
  3150                           ;incstack = 0
  3151                           ; Regs used in _ADC_Init: []
  3152  1537  1683               	bsf	3,5	;RP0=1, select bank1
  3153  1538  1303               	bcf	3,6	;RP1=0, select bank1
  3154  1539  179F               	bsf	31,7	;volatile
  3155                           
  3156                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  3157  153A  159F               	bsf	31,3	;volatile
  3158                           
  3159                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  3160  153B  151F               	bsf	31,2	;volatile
  3161                           
  3162                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  3163  153C  149F               	bsf	31,1	;volatile
  3164                           
  3165                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  3166  153D  101F               	bcf	31,0	;volatile
  3167                           
  3168                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  3169  153E  1283               	bcf	3,5	;RP0=0, select bank0
  3170  153F  1303               	bcf	3,6	;RP1=0, select bank0
  3171  1540  179F               	bsf	31,7	;volatile
  3172                           
  3173                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  3174  1541  131F               	bcf	31,6	;volatile
  3175                           
  3176                           ;adc.c: 42: PIE1bits.ADIE = 0;
  3177  1542  1683               	bsf	3,5	;RP0=1, select bank1
  3178  1543  1303               	bcf	3,6	;RP1=0, select bank1
  3179  1544  130C               	bcf	12,6	;volatile
  3180                           
  3181                           ;adc.c: 43: PIR1bits.ADIF = 0;
  3182  1545  1283               	bcf	3,5	;RP0=0, select bank0
  3183  1546  1303               	bcf	3,6	;RP1=0, select bank0
  3184  1547  130C               	bcf	12,6	;volatile
  3185  1548  0008               	return
  3186  1549                     __end_of_ADC_Init:	
  3187                           
  3188                           	psect	text15
  3189  0ECE                     __ptext15:	
  3190 ;; *************** function _ISR *****************
  3191 ;; Defined at:
  3192 ;;		line 371 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;		None               void
  3199 ;; Registers used:
  3200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3206 ;;      Params:         0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0
  3208 ;;      Temps:          0       4       0       0       0
  3209 ;;      Totals:         0       4       0       0       0
  3210 ;;Total ram usage:        4 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    4
  3213 ;; This function calls:
  3214 ;;		_Fuzzy
  3215 ;;		_USART_ReceiveChar
  3216 ;;		_USART_WriteString
  3217 ;;		___lwdiv
  3218 ;;		___wmul
  3219 ;;		_send
  3220 ;;		i1_PWM_DutyCycle2
  3221 ;;		i1_TIMER0_Set
  3222 ;; This function is called by:
  3223 ;;		Interrupt level 1
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function _ISR
  3229  0ECE                     _ISR:	
  3230                           
  3231                           ;main.c: 374: if (PIR1bits.RCIF)
  3232  0ECE  1E8C               	btfss	12,5	;volatile
  3233  0ECF  2F83               	goto	i1l2894
  3234                           
  3235                           ;main.c: 375: {
  3236                           ;main.c: 376: if (USART_ReceiveChar() == '0')
  3237  0ED0  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3238  0ED5  3A30               	xorlw	48
  3239  0ED6  1D03               	skipz
  3240  0ED7  2EE8               	goto	i1l2848
  3241                           
  3242                           ;main.c: 377: {
  3243                           ;main.c: 378: USART_WriteString("\n\rdesligado\n\r");
  3244  0ED8  303A               	movlw	(STR_1-__stringbase)& (0+255)
  3245  0ED9  160A  118A  25BE  120A  158A  	fcall	_USART_WriteString
  3246                           
  3247                           ;main.c: 380: PWM_DutyCycle2(0);
  3248  0EDE  3000               	movlw	0
  3249  0EDF  00F0               	movwf	i1PWM_DutyCycle2@valor
  3250  0EE0  3000               	movlw	0
  3251  0EE1  00F1               	movwf	i1PWM_DutyCycle2@valor+1
  3252  0EE2  160A  118A  25A3  120A  158A  	fcall	i1_PWM_DutyCycle2
  3253                           
  3254                           ;main.c: 381: return;
  3255  0EE7  2FF3               	goto	i1l181
  3256  0EE8                     i1l2848:	
  3257                           
  3258                           ;main.c: 382: }
  3259                           ;main.c: 384: if (USART_ReceiveChar() == '1')
  3260  0EE8  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3261  0EED  3A31               	xorlw	49
  3262  0EEE  1D03               	skipz
  3263  0EEF  2EF6               	goto	i1l2852
  3264                           
  3265                           ;main.c: 385: {
  3266                           ;main.c: 386: setpointUI = 720;
  3267  0EF0  30D0               	movlw	208
  3268  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0EF3  00EB               	movwf	_setpointUI
  3271  0EF4  3002               	movlw	2
  3272  0EF5  00EC               	movwf	_setpointUI+1
  3273  0EF6                     i1l2852:	
  3274                           
  3275                           ;main.c: 388: }
  3276                           ;main.c: 390: if (USART_ReceiveChar() == '2')
  3277  0EF6  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3278  0EFB  3A32               	xorlw	50
  3279  0EFC  1D03               	skipz
  3280  0EFD  2F04               	goto	i1l2856
  3281                           
  3282                           ;main.c: 391: {
  3283                           ;main.c: 392: setpointUI = 1450;
  3284  0EFE  30AA               	movlw	170
  3285  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3287  0F01  00EB               	movwf	_setpointUI
  3288  0F02  3005               	movlw	5
  3289  0F03  00EC               	movwf	_setpointUI+1
  3290  0F04                     i1l2856:	
  3291                           
  3292                           ;main.c: 394: }
  3293                           ;main.c: 396: if (USART_ReceiveChar() == '3')
  3294  0F04  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3295  0F09  3A33               	xorlw	51
  3296  0F0A  1D03               	skipz
  3297  0F0B  2F12               	goto	i1l2860
  3298                           
  3299                           ;main.c: 397: {
  3300                           ;main.c: 398: setpointUI = 2828;
  3301  0F0C  300C               	movlw	12
  3302  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0F0F  00EB               	movwf	_setpointUI
  3305  0F10  300B               	movlw	11
  3306  0F11  00EC               	movwf	_setpointUI+1
  3307  0F12                     i1l2860:	
  3308                           
  3309                           ;main.c: 400: }
  3310                           ;main.c: 402: if (USART_ReceiveChar() == '4')
  3311  0F12  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3312  0F17  3A34               	xorlw	52
  3313  0F18  1D03               	skipz
  3314  0F19  2F20               	goto	i1l2864
  3315                           
  3316                           ;main.c: 403: {
  3317                           ;main.c: 404: setpointUI = 3256;
  3318  0F1A  30B8               	movlw	184
  3319  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0F1D  00EB               	movwf	_setpointUI
  3322  0F1E  300C               	movlw	12
  3323  0F1F  00EC               	movwf	_setpointUI+1
  3324  0F20                     i1l2864:	
  3325                           
  3326                           ;main.c: 406: }
  3327                           ;main.c: 408: if (USART_ReceiveChar() == '5')
  3328  0F20  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3329  0F25  3A35               	xorlw	53
  3330  0F26  1D03               	skipz
  3331  0F27  2F2E               	goto	i1l2868
  3332                           
  3333                           ;main.c: 409: {
  3334                           ;main.c: 410: setpointUI = 4510;
  3335  0F28  309E               	movlw	158
  3336  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0F2B  00EB               	movwf	_setpointUI
  3339  0F2C  3011               	movlw	17
  3340  0F2D  00EC               	movwf	_setpointUI+1
  3341  0F2E                     i1l2868:	
  3342                           
  3343                           ;main.c: 412: }
  3344                           ;main.c: 414: if (USART_ReceiveChar() == '6')
  3345  0F2E  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3346  0F33  3A36               	xorlw	54
  3347  0F34  1D03               	skipz
  3348  0F35  2F3C               	goto	i1l2872
  3349                           
  3350                           ;main.c: 415: {
  3351                           ;main.c: 416: setpointUI = 5760;
  3352  0F36  3080               	movlw	128
  3353  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0F39  00EB               	movwf	_setpointUI
  3356  0F3A  3016               	movlw	22
  3357  0F3B  00EC               	movwf	_setpointUI+1
  3358  0F3C                     i1l2872:	
  3359                           
  3360                           ;main.c: 418: }
  3361                           ;main.c: 420: if (USART_ReceiveChar() == '7')
  3362  0F3C  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3363  0F41  3A37               	xorlw	55
  3364  0F42  1D03               	skipz
  3365  0F43  2F4A               	goto	i1l2876
  3366                           
  3367                           ;main.c: 421: {
  3368                           ;main.c: 422: setpointUI = 6890;
  3369  0F44  30EA               	movlw	234
  3370  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0F47  00EB               	movwf	_setpointUI
  3373  0F48  301A               	movlw	26
  3374  0F49  00EC               	movwf	_setpointUI+1
  3375  0F4A                     i1l2876:	
  3376                           
  3377                           ;main.c: 424: }
  3378                           ;main.c: 426: if (USART_ReceiveChar() == '8')
  3379  0F4A  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3380  0F4F  3A38               	xorlw	56
  3381  0F50  1D03               	skipz
  3382  0F51  2F58               	goto	i1l2880
  3383                           
  3384                           ;main.c: 427: {
  3385                           ;main.c: 428: setpointUI = 8100;
  3386  0F52  30A4               	movlw	164
  3387  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0F55  00EB               	movwf	_setpointUI
  3390  0F56  301F               	movlw	31
  3391  0F57  00EC               	movwf	_setpointUI+1
  3392  0F58                     i1l2880:	
  3393                           
  3394                           ;main.c: 430: }
  3395                           ;main.c: 432: if (USART_ReceiveChar() == '9')
  3396  0F58  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3397  0F5D  3A39               	xorlw	57
  3398  0F5E  1D03               	skipz
  3399  0F5F  2F66               	goto	i1l2884
  3400                           
  3401                           ;main.c: 433: {
  3402                           ;main.c: 434: setpointUI = 9000;
  3403  0F60  3028               	movlw	40
  3404  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0F63  00EB               	movwf	_setpointUI
  3407  0F64  3023               	movlw	35
  3408  0F65  00EC               	movwf	_setpointUI+1
  3409  0F66                     i1l2884:	
  3410                           
  3411                           ;main.c: 436: }
  3412                           ;main.c: 440: Fuzzy();
  3413  0F66  120A  118A  2073  120A  158A  	fcall	_Fuzzy
  3414                           
  3415                           ;main.c: 441: antigoUI = setpointUI;
  3416  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0F6D  086C               	movf	_setpointUI+1,w
  3419  0F6E  01E4               	clrf	_antigoUI+1
  3420  0F6F  07E4               	addwf	_antigoUI+1,f
  3421  0F70  086B               	movf	_setpointUI,w
  3422  0F71  01E3               	clrf	_antigoUI
  3423  0F72  07E3               	addwf	_antigoUI,f
  3424                           
  3425                           ;main.c: 444: if(USART_ReceiveChar() == 'X')
  3426  0F73  160A  118A  258B  120A  158A  	fcall	_USART_ReceiveChar
  3427  0F78  3A58               	xorlw	88
  3428  0F79  1D03               	skipz
  3429  0F7A  2F80               	goto	i1l2892
  3430                           
  3431                           ;main.c: 445: {
  3432                           ;main.c: 446: send();
  3433  0F7B  120A  158A  2239  120A  158A  	fcall	_send
  3434  0F80                     i1l2892:	
  3435                           
  3436                           ;main.c: 447: }
  3437                           ;main.c: 449: PIR1bits.RCIF = 0;
  3438  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0F82  128C               	bcf	12,5	;volatile
  3441  0F83                     i1l2894:	
  3442                           
  3443                           ;main.c: 450: }
  3444                           ;main.c: 453: if (PIR1bits.ADIF)
  3445  0F83  1B0C               	btfsc	12,6	;volatile
  3446                           
  3447                           ;main.c: 454: {
  3448                           ;main.c: 458: PIR1bits.ADIF = 0;
  3449  0F84  130C               	bcf	12,6	;volatile
  3450                           
  3451                           ;main.c: 459: }
  3452                           ;main.c: 463: if (INTCONbits.T0IF)
  3453  0F85  1D0B               	btfss	11,2	;volatile
  3454  0F86  2FEF               	goto	i1l2922
  3455                           
  3456                           ;main.c: 464: {
  3457                           ;main.c: 466: TIMER0_Set(238);
  3458  0F87  30EE               	movlw	238
  3459  0F88  160A  118A  250B  120A  158A  	fcall	i1_TIMER0_Set
  3460                           
  3461                           ;main.c: 469: if (contagens_tm0 < 499)
  3462  0F8D  3001               	movlw	1
  3463  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  3464  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  3465  0F90  0238               	subwf	(_contagens_tm0+1)^(0+128),w
  3466  0F91  30F3               	movlw	243
  3467  0F92  1903               	skipnz
  3468  0F93  0237               	subwf	_contagens_tm0^(0+128),w
  3469  0F94  1803               	skipnc
  3470  0F95  2FA0               	goto	i1l2906
  3471                           
  3472                           ;main.c: 470: {
  3473                           ;main.c: 472: contagens_tm0++;
  3474  0F96  3001               	movlw	1
  3475  0F97  07B7               	addwf	_contagens_tm0^(0+128),f
  3476  0F98  1803               	skipnc
  3477  0F99  0AB8               	incf	(_contagens_tm0+1)^(0+128),f
  3478  0F9A  3000               	movlw	0
  3479  0F9B  07B8               	addwf	(_contagens_tm0+1)^(0+128),f
  3480                           
  3481                           ;main.c: 475: PORTBbits.RB6 = 1;
  3482  0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0F9E  1706               	bsf	6,6	;volatile
  3485                           
  3486                           ;main.c: 476: }
  3487  0F9F  2FEE               	goto	i1l2920
  3488  0FA0                     i1l2906:	
  3489                           
  3490                           ;main.c: 477: else
  3491                           ;main.c: 478: {
  3492                           ;main.c: 480: contagens_tm0 = 0;
  3493  0FA0  1683               	bsf	3,5	;RP0=1, select bank1
  3494  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  3495  0FA2  01B7               	clrf	_contagens_tm0^(0+128)
  3496  0FA3  01B8               	clrf	(_contagens_tm0+1)^(0+128)
  3497                           
  3498                           ;main.c: 483: pulsos = (TMR1H << 8) + TMR1L;
  3499  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0FA6  080F               	movf	15,w	;volatile
  3502  0FA7  01E8               	clrf	_pulsos+1
  3503  0FA8  07E8               	addwf	_pulsos+1,f
  3504  0FA9  080E               	movf	14,w	;volatile
  3505  0FAA  01E7               	clrf	_pulsos
  3506  0FAB  07E7               	addwf	_pulsos,f
  3507                           
  3508                           ;main.c: 484: rpm = ((pulsos / pas_cooler) * 120);
  3509  0FAC  086E               	movf	_pas_cooler+1,w
  3510  0FAD  01F1               	clrf	___lwdiv@divisor+1
  3511  0FAE  07F1               	addwf	___lwdiv@divisor+1,f
  3512  0FAF  086D               	movf	_pas_cooler,w
  3513  0FB0  01F0               	clrf	___lwdiv@divisor
  3514  0FB1  07F0               	addwf	___lwdiv@divisor,f
  3515  0FB2  0868               	movf	_pulsos+1,w
  3516  0FB3  01F3               	clrf	___lwdiv@dividend+1
  3517  0FB4  07F3               	addwf	___lwdiv@dividend+1,f
  3518  0FB5  0867               	movf	_pulsos,w
  3519  0FB6  01F2               	clrf	___lwdiv@dividend
  3520  0FB7  07F2               	addwf	___lwdiv@dividend,f
  3521  0FB8  160A  118A  26FB  120A  158A  	fcall	___lwdiv
  3522  0FBD  0871               	movf	?___lwdiv+1,w
  3523  0FBE  01F9               	clrf	___wmul@multiplier+1
  3524  0FBF  07F9               	addwf	___wmul@multiplier+1,f
  3525  0FC0  0870               	movf	?___lwdiv,w
  3526  0FC1  01F8               	clrf	___wmul@multiplier
  3527  0FC2  07F8               	addwf	___wmul@multiplier,f
  3528  0FC3  3078               	movlw	120
  3529  0FC4  00FA               	movwf	___wmul@multiplicand
  3530  0FC5  3000               	movlw	0
  3531  0FC6  00FB               	movwf	___wmul@multiplicand+1
  3532  0FC7  160A  118A  265A  120A  158A  	fcall	___wmul
  3533  0FCC  0879               	movf	?___wmul+1,w
  3534  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  3535  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  3536  0FCF  01EA               	clrf	_rpm+1
  3537  0FD0  07EA               	addwf	_rpm+1,f
  3538  0FD1  0878               	movf	?___wmul,w
  3539  0FD2  01E9               	clrf	_rpm
  3540  0FD3  07E9               	addwf	_rpm,f
  3541                           
  3542                           ;main.c: 488: rpm = rpm / 40;
  3543  0FD4  3028               	movlw	40
  3544  0FD5  00F0               	movwf	___lwdiv@divisor
  3545  0FD6  3000               	movlw	0
  3546  0FD7  00F1               	movwf	___lwdiv@divisor+1
  3547  0FD8  086A               	movf	_rpm+1,w
  3548  0FD9  01F3               	clrf	___lwdiv@dividend+1
  3549  0FDA  07F3               	addwf	___lwdiv@dividend+1,f
  3550  0FDB  0869               	movf	_rpm,w
  3551  0FDC  01F2               	clrf	___lwdiv@dividend
  3552  0FDD  07F2               	addwf	___lwdiv@dividend,f
  3553  0FDE  160A  118A  26FB  120A  158A  	fcall	___lwdiv
  3554  0FE3  0871               	movf	?___lwdiv+1,w
  3555  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0FE6  01EA               	clrf	_rpm+1
  3558  0FE7  07EA               	addwf	_rpm+1,f
  3559  0FE8  0870               	movf	?___lwdiv,w
  3560  0FE9  01E9               	clrf	_rpm
  3561  0FEA  07E9               	addwf	_rpm,f
  3562                           
  3563                           ;main.c: 491: TMR1L = 0x00;
  3564  0FEB  018E               	clrf	14	;volatile
  3565                           
  3566                           ;main.c: 492: TMR1H = 0x00;
  3567  0FEC  018F               	clrf	15	;volatile
  3568                           
  3569                           ;main.c: 495: PORTBbits.RB6 = 0;
  3570  0FED  1306               	bcf	6,6	;volatile
  3571  0FEE                     i1l2920:	
  3572                           
  3573                           ;main.c: 496: }
  3574                           ;main.c: 499: INTCONbits.T0IF = 0;
  3575  0FEE  110B               	bcf	11,2	;volatile
  3576  0FEF                     i1l2922:	
  3577                           
  3578                           ;main.c: 500: }
  3579                           ;main.c: 503: if (PIR1bits.TMR1IF)
  3580  0FEF  180C               	btfsc	12,0	;volatile
  3581                           
  3582                           ;main.c: 504: {
  3583                           ;main.c: 508: PIR1bits.TMR1IF = 0;
  3584  0FF0  100C               	bcf	12,0	;volatile
  3585                           
  3586                           ;main.c: 509: }
  3587                           ;main.c: 512: if (PIR1bits.SSPIF)
  3588  0FF1  198C               	btfsc	12,3	;volatile
  3589                           
  3590                           ;main.c: 513: {
  3591                           ;main.c: 517: PIR1bits.SSPIF = 0;
  3592  0FF2  118C               	bcf	12,3	;volatile
  3593  0FF3                     i1l181:	
  3594  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0FF5  0862               	movf	??_ISR+3,w
  3597  0FF6  00FF               	movwf	127
  3598  0FF7  0861               	movf	??_ISR+2,w
  3599  0FF8  008A               	movwf	10
  3600  0FF9  0860               	movf	??_ISR+1,w
  3601  0FFA  0084               	movwf	4
  3602  0FFB  0E5F               	swapf	??_ISR^0,w
  3603  0FFC  0083               	movwf	3
  3604  0FFD  0EFE               	swapf	126,f
  3605  0FFE  0E7E               	swapf	126,w
  3606  0FFF  0009               	retfie
  3607  1000                     __end_of_ISR:	
  3608                           
  3609                           	psect	intentry
  3610  0004                     __pintentry:	
  3611                           ;incstack = 0
  3612                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3613                           
  3614  0004                     interrupt_function:	
  3615  007E                     saved_w	set	btemp
  3616  0004  00FE               	movwf	btemp
  3617  0005  0E03               	swapf	3,w
  3618  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3620  0008  00DF               	movwf	??_ISR
  3621  0009  0804               	movf	4,w
  3622  000A  00E0               	movwf	??_ISR+1
  3623  000B  080A               	movf	10,w
  3624  000C  00E1               	movwf	??_ISR+2
  3625  000D  087F               	movf	btemp+1,w
  3626  000E  00E2               	movwf	??_ISR+3
  3627  000F  120A  158A  2ECE   	ljmp	_ISR
  3628                           
  3629                           	psect	text16
  3630  150B                     __ptext16:	
  3631 ;; *************** function i1_TIMER0_Set *****************
  3632 ;; Defined at:
  3633 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  contagens       1    wreg     unsigned char 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  contagens       1    0[COMMON] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;		None               void
  3640 ;; Registers used:
  3641 ;;		wreg
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         0       0       0       0       0
  3648 ;;      Locals:         1       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0
  3650 ;;      Totals:         1       0       0       0       0
  3651 ;;Total ram usage:        1 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_ISR
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function i1_TIMER0_Set
  3662  150B                     i1_TIMER0_Set:	
  3663                           
  3664                           ;incstack = 0
  3665                           ; Regs used in i1_TIMER0_Set: [wreg]
  3666                           ;i1TIMER0_Set@contagens stored from wreg
  3667  150B  00F0               	movwf	i1TIMER0_Set@contagens
  3668                           
  3669                           ;timers.c: 22: TMR0 = contagens;
  3670  150C  0870               	movf	i1TIMER0_Set@contagens,w
  3671  150D  1283               	bcf	3,5	;RP0=0, select bank0
  3672  150E  1303               	bcf	3,6	;RP1=0, select bank0
  3673  150F  0081               	movwf	1	;volatile
  3674  1510  0008               	return
  3675  1511                     __end_ofi1_TIMER0_Set:	
  3676                           
  3677                           	psect	text17
  3678  0A39                     __ptext17:	
  3679 ;; *************** function _send *****************
  3680 ;; Defined at:
  3681 ;;		line 105 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  index           1    4[BANK0 ] unsigned char 
  3686 ;;  velocidade      2    2[BANK0 ] unsigned int 
  3687 ;;  checksum        1    1[BANK0 ] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;		None               void
  3690 ;; Registers used:
  3691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       0       0
  3698 ;;      Locals:         0       4       0       0       0
  3699 ;;      Temps:          0       1       0       0       0
  3700 ;;      Totals:         0       5       0       0       0
  3701 ;;Total ram usage:        5 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    1
  3704 ;; This function calls:
  3705 ;;		_USART_WriteChar
  3706 ;;		___wmul
  3707 ;; This function is called by:
  3708 ;;		_ISR
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           
  3713                           ;psect for function _send
  3714  0A39                     _send:	
  3715                           
  3716                           ;main.c: 108: buffer[0] = '#';
  3717                           
  3718                           ;incstack = 0
  3719                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3720  0A39  3023               	movlw	35
  3721  0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0A3C  00A0               	movwf	??_send
  3724  0A3D  0820               	movf	??_send,w
  3725  0A3E  1683               	bsf	3,5	;RP0=1, select bank3
  3726  0A3F  1703               	bsf	3,6	;RP1=1, select bank3
  3727  0A40  0090               	movwf	_buffer^(0+384)
  3728                           
  3729                           ;main.c: 109: buffer[1] = '$';
  3730  0A41  3024               	movlw	36
  3731  0A42  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0A43  1303               	bcf	3,6	;RP1=0, select bank0
  3733  0A44  00A0               	movwf	??_send
  3734  0A45  0820               	movf	??_send,w
  3735  0A46  1683               	bsf	3,5	;RP0=1, select bank3
  3736  0A47  1703               	bsf	3,6	;RP1=1, select bank3
  3737  0A48  0091               	movwf	(_buffer^(0+384)+1)
  3738                           
  3739                           ;main.c: 110: buffer[2] = ':';
  3740  0A49  303A               	movlw	58
  3741  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  3742  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  3743  0A4C  00A0               	movwf	??_send
  3744  0A4D  0820               	movf	??_send,w
  3745  0A4E  1683               	bsf	3,5	;RP0=1, select bank3
  3746  0A4F  1703               	bsf	3,6	;RP1=1, select bank3
  3747  0A50  0092               	movwf	(_buffer^(0+384)+2)
  3748                           
  3749                           ;main.c: 112: unsigned int velocidade = rpm * 40;
  3750  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0A52  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0A53  086A               	movf	_rpm+1,w
  3753  0A54  01F9               	clrf	___wmul@multiplier+1
  3754  0A55  07F9               	addwf	___wmul@multiplier+1,f
  3755  0A56  0869               	movf	_rpm,w
  3756  0A57  01F8               	clrf	___wmul@multiplier
  3757  0A58  07F8               	addwf	___wmul@multiplier,f
  3758  0A59  3028               	movlw	40
  3759  0A5A  00FA               	movwf	___wmul@multiplicand
  3760  0A5B  3000               	movlw	0
  3761  0A5C  00FB               	movwf	___wmul@multiplicand+1
  3762  0A5D  160A  118A  265A  120A  158A  	fcall	___wmul
  3763  0A62  0879               	movf	?___wmul+1,w
  3764  0A63  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0A64  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0A65  01A3               	clrf	send@velocidade+1
  3767  0A66  07A3               	addwf	send@velocidade+1,f
  3768  0A67  0878               	movf	?___wmul,w
  3769  0A68  01A2               	clrf	send@velocidade
  3770  0A69  07A2               	addwf	send@velocidade,f
  3771                           
  3772                           ;main.c: 114: buffer[3] = (velocidade >> 8) & 0xFF;
  3773  0A6A  0823               	movf	send@velocidade+1,w
  3774  0A6B  00A0               	movwf	??_send
  3775  0A6C  0820               	movf	??_send,w
  3776  0A6D  1683               	bsf	3,5	;RP0=1, select bank3
  3777  0A6E  1703               	bsf	3,6	;RP1=1, select bank3
  3778  0A6F  0093               	movwf	(_buffer^(0+384)+3)
  3779                           
  3780                           ;main.c: 115: buffer[4] = velocidade & 0xFF;
  3781  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  3782  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  3783  0A72  0822               	movf	send@velocidade,w
  3784  0A73  00A0               	movwf	??_send
  3785  0A74  0820               	movf	??_send,w
  3786  0A75  1683               	bsf	3,5	;RP0=1, select bank3
  3787  0A76  1703               	bsf	3,6	;RP1=1, select bank3
  3788  0A77  0094               	movwf	(_buffer^(0+384)+4)
  3789                           
  3790                           ;main.c: 116: buffer[5] = 'V';
  3791  0A78  3056               	movlw	86
  3792  0A79  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0A7A  1303               	bcf	3,6	;RP1=0, select bank0
  3794  0A7B  00A0               	movwf	??_send
  3795  0A7C  0820               	movf	??_send,w
  3796  0A7D  1683               	bsf	3,5	;RP0=1, select bank3
  3797  0A7E  1703               	bsf	3,6	;RP1=1, select bank3
  3798  0A7F  0095               	movwf	(_buffer^(0+384)+5)
  3799                           
  3800                           ;main.c: 119: buffer[6] = (setpointUI >> 8) & 0xFF;
  3801  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0A81  1303               	bcf	3,6	;RP1=0, select bank0
  3803  0A82  086C               	movf	_setpointUI+1,w
  3804  0A83  00A0               	movwf	??_send
  3805  0A84  0820               	movf	??_send,w
  3806  0A85  1683               	bsf	3,5	;RP0=1, select bank3
  3807  0A86  1703               	bsf	3,6	;RP1=1, select bank3
  3808  0A87  0096               	movwf	(_buffer^(0+384)+6)
  3809                           
  3810                           ;main.c: 120: buffer[7] = setpointUI & 0xFF;
  3811  0A88  1283               	bcf	3,5	;RP0=0, select bank0
  3812  0A89  1303               	bcf	3,6	;RP1=0, select bank0
  3813  0A8A  086B               	movf	_setpointUI,w
  3814  0A8B  00A0               	movwf	??_send
  3815  0A8C  0820               	movf	??_send,w
  3816  0A8D  1683               	bsf	3,5	;RP0=1, select bank3
  3817  0A8E  1703               	bsf	3,6	;RP1=1, select bank3
  3818  0A8F  0097               	movwf	(_buffer^(0+384)+7)
  3819                           
  3820                           ;main.c: 121: buffer[8] = 'S';
  3821  0A90  3053               	movlw	83
  3822  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  3823  0A92  1303               	bcf	3,6	;RP1=0, select bank0
  3824  0A93  00A0               	movwf	??_send
  3825  0A94  0820               	movf	??_send,w
  3826  0A95  1683               	bsf	3,5	;RP0=1, select bank3
  3827  0A96  1703               	bsf	3,6	;RP1=1, select bank3
  3828  0A97  0098               	movwf	(_buffer^(0+384)+8)
  3829                           
  3830                           ;main.c: 124: buffer[9] = (deltaV >> 8) & 0xFF;
  3831  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  3833  0A9A  0866               	movf	_deltaV+1,w
  3834  0A9B  00A0               	movwf	??_send
  3835  0A9C  0820               	movf	??_send,w
  3836  0A9D  1683               	bsf	3,5	;RP0=1, select bank3
  3837  0A9E  1703               	bsf	3,6	;RP1=1, select bank3
  3838  0A9F  0099               	movwf	(_buffer^(0+384)+9)
  3839                           
  3840                           ;main.c: 125: buffer[10] = deltaV & 0xFF;
  3841  0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  3842  0AA1  1303               	bcf	3,6	;RP1=0, select bank0
  3843  0AA2  0865               	movf	_deltaV,w
  3844  0AA3  00A0               	movwf	??_send
  3845  0AA4  0820               	movf	??_send,w
  3846  0AA5  1683               	bsf	3,5	;RP0=1, select bank3
  3847  0AA6  1703               	bsf	3,6	;RP1=1, select bank3
  3848  0AA7  009A               	movwf	(_buffer^(0+384)+10)
  3849                           
  3850                           ;main.c: 126: buffer[11] = 'S';
  3851  0AA8  3053               	movlw	83
  3852  0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  3853  0AAA  1303               	bcf	3,6	;RP1=0, select bank0
  3854  0AAB  00A0               	movwf	??_send
  3855  0AAC  0820               	movf	??_send,w
  3856  0AAD  1683               	bsf	3,5	;RP0=1, select bank3
  3857  0AAE  1703               	bsf	3,6	;RP1=1, select bank3
  3858  0AAF  009B               	movwf	(_buffer^(0+384)+11)
  3859                           
  3860                           ;main.c: 129: buffer[12] = (antigoUI >> 8) & 0xFF;
  3861  0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  3862  0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  3863  0AB2  0864               	movf	_antigoUI+1,w
  3864  0AB3  00A0               	movwf	??_send
  3865  0AB4  0820               	movf	??_send,w
  3866  0AB5  1683               	bsf	3,5	;RP0=1, select bank3
  3867  0AB6  1703               	bsf	3,6	;RP1=1, select bank3
  3868  0AB7  009C               	movwf	(_buffer^(0+384)+12)
  3869                           
  3870                           ;main.c: 130: buffer[13] = antigoUI & 0xFF;
  3871  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  3872  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  3873  0ABA  0863               	movf	_antigoUI,w
  3874  0ABB  00A0               	movwf	??_send
  3875  0ABC  0820               	movf	??_send,w
  3876  0ABD  1683               	bsf	3,5	;RP0=1, select bank3
  3877  0ABE  1703               	bsf	3,6	;RP1=1, select bank3
  3878  0ABF  009D               	movwf	(_buffer^(0+384)+13)
  3879                           
  3880                           ;main.c: 131: buffer[14] = 'S';
  3881  0AC0  3053               	movlw	83
  3882  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  3884  0AC3  00A0               	movwf	??_send
  3885  0AC4  0820               	movf	??_send,w
  3886  0AC5  1683               	bsf	3,5	;RP0=1, select bank3
  3887  0AC6  1703               	bsf	3,6	;RP1=1, select bank3
  3888  0AC7  009E               	movwf	(_buffer^(0+384)+14)
  3889                           
  3890                           ;main.c: 133: unsigned char checksum = 0x00;
  3891  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0AC9  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0ACA  01A1               	clrf	send@checksum
  3894                           
  3895                           ;main.c: 134: for (unsigned char index = 0; index < 15; index++)
  3896  0ACB  01A4               	clrf	send@index
  3897  0ACC  300F               	movlw	15
  3898  0ACD  0224               	subwf	send@index,w
  3899  0ACE  1803               	btfsc	3,0
  3900  0ACF  2AEC               	goto	i1l2532
  3901  0AD0                     i1l2524:	
  3902                           
  3903                           ;main.c: 135: {
  3904                           ;main.c: 136: USART_WriteChar(buffer[index]);
  3905  0AD0  0824               	movf	send@index,w
  3906  0AD1  3E90               	addlw	_buffer& (0+255)
  3907  0AD2  0084               	movwf	4
  3908  0AD3  1783               	bsf	3,7	;select IRP bank3
  3909  0AD4  0800               	movf	0,w
  3910  0AD5  160A  118A  251F  120A  158A  	fcall	_USART_WriteChar
  3911                           
  3912                           ;main.c: 137: checksum ^= buffer[index];
  3913  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  3914  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  3915  0ADC  0824               	movf	send@index,w
  3916  0ADD  3E90               	addlw	_buffer& (0+255)
  3917  0ADE  0084               	movwf	4
  3918  0ADF  1783               	bsf	3,7	;select IRP bank3
  3919  0AE0  0800               	movf	0,w
  3920  0AE1  00A0               	movwf	??_send
  3921  0AE2  0820               	movf	??_send,w
  3922  0AE3  06A1               	xorwf	send@checksum,f
  3923  0AE4  3001               	movlw	1
  3924  0AE5  00A0               	movwf	??_send
  3925  0AE6  0820               	movf	??_send,w
  3926  0AE7  07A4               	addwf	send@index,f
  3927  0AE8  300F               	movlw	15
  3928  0AE9  0224               	subwf	send@index,w
  3929  0AEA  1C03               	skipc
  3930  0AEB  2AD0               	goto	i1l2524
  3931  0AEC                     i1l2532:	
  3932                           
  3933                           ;main.c: 138: }
  3934                           ;main.c: 139: buffer[15] = checksum;
  3935  0AEC  0821               	movf	send@checksum,w
  3936  0AED  00A0               	movwf	??_send
  3937  0AEE  0820               	movf	??_send,w
  3938  0AEF  1683               	bsf	3,5	;RP0=1, select bank3
  3939  0AF0  1703               	bsf	3,6	;RP1=1, select bank3
  3940  0AF1  009F               	movwf	(_buffer^(0+384)+15)
  3941                           
  3942                           ;main.c: 140: USART_WriteChar(buffer[15]);
  3943  0AF2  081F               	movf	(_buffer^(0+384)+15),w
  3944  0AF3  160A  118A  251F   	fcall	_USART_WriteChar
  3945  0AF6  0008               	return
  3946  0AF7                     __end_of_send:	
  3947                           
  3948                           	psect	text18
  3949  165A                     __ptext18:	
  3950 ;; *************** function ___wmul *****************
  3951 ;; Defined at:
  3952 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  multiplier      2    8[COMMON] unsigned int 
  3955 ;;  multiplicand    2   10[COMMON] unsigned int 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;  product         2   12[COMMON] unsigned int 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  2    8[COMMON] unsigned int 
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3967 ;;      Params:         4       0       0       0       0
  3968 ;;      Locals:         2       0       0       0       0
  3969 ;;      Temps:          0       0       0       0       0
  3970 ;;      Totals:         6       0       0       0       0
  3971 ;;Total ram usage:        6 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_send
  3977 ;;		_ISR
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           
  3982                           ;psect for function ___wmul
  3983  165A                     ___wmul:	
  3984                           
  3985                           ;incstack = 0
  3986                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3987  165A  01FC               	clrf	___wmul@product
  3988  165B  01FD               	clrf	___wmul@product+1
  3989  165C                     i1l2298:	
  3990  165C  1C78               	btfss	___wmul@multiplier,0
  3991  165D  2E64               	goto	i1l545
  3992  165E  087A               	movf	___wmul@multiplicand,w
  3993  165F  07FC               	addwf	___wmul@product,f
  3994  1660  1803               	skipnc
  3995  1661  0AFD               	incf	___wmul@product+1,f
  3996  1662  087B               	movf	___wmul@multiplicand+1,w
  3997  1663  07FD               	addwf	___wmul@product+1,f
  3998  1664                     i1l545:	
  3999  1664  3001               	movlw	1
  4000  1665                     u243_25:	
  4001  1665  1003               	clrc
  4002  1666  0DFA               	rlf	___wmul@multiplicand,f
  4003  1667  0DFB               	rlf	___wmul@multiplicand+1,f
  4004  1668  3EFF               	addlw	-1
  4005  1669  1D03               	skipz
  4006  166A  2E65               	goto	u243_25
  4007  166B  3001               	movlw	1
  4008  166C                     u244_25:	
  4009  166C  1003               	clrc
  4010  166D  0CF9               	rrf	___wmul@multiplier+1,f
  4011  166E  0CF8               	rrf	___wmul@multiplier,f
  4012  166F  3EFF               	addlw	-1
  4013  1670  1D03               	skipz
  4014  1671  2E6C               	goto	u244_25
  4015  1672  0879               	movf	___wmul@multiplier+1,w
  4016  1673  0478               	iorwf	___wmul@multiplier,w
  4017  1674  1D03               	skipz
  4018  1675  2E5C               	goto	i1l2298
  4019  1676  087D               	movf	___wmul@product+1,w
  4020  1677  01F9               	clrf	?___wmul+1
  4021  1678  07F9               	addwf	?___wmul+1,f
  4022  1679  087C               	movf	___wmul@product,w
  4023  167A  01F8               	clrf	?___wmul
  4024  167B  07F8               	addwf	?___wmul,f
  4025  167C  0008               	return
  4026  167D                     __end_of___wmul:	
  4027                           
  4028                           	psect	text19
  4029  158B                     __ptext19:	
  4030 ;; *************** function _USART_ReceiveChar *****************
  4031 ;; Defined at:
  4032 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  byte            1    4[COMMON] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      unsigned char 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4046 ;;      Params:         0       0       0       0       0
  4047 ;;      Locals:         1       0       0       0       0
  4048 ;;      Temps:          1       0       0       0       0
  4049 ;;      Totals:         2       0       0       0       0
  4050 ;;Total ram usage:        2 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    2
  4053 ;; This function calls:
  4054 ;;		_USART_WriteString
  4055 ;; This function is called by:
  4056 ;;		_ISR
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function _USART_ReceiveChar
  4062  158B                     _USART_ReceiveChar:	
  4063                           
  4064                           ;usart.c: 65: unsigned char byte;
  4065                           ;usart.c: 67: if (!OERR)
  4066                           
  4067                           ;incstack = 0
  4068                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4069  158B  1283               	bcf	3,5	;RP0=0, select bank0
  4070  158C  1303               	bcf	3,6	;RP1=0, select bank0
  4071  158D  1898               	btfsc	24,1	;volatile
  4072  158E  2D94               	goto	i1l2682
  4073                           
  4074                           ;usart.c: 68: {
  4075                           ;usart.c: 69: byte = RCREG;
  4076  158F  081A               	movf	26,w	;volatile
  4077  1590  00F3               	movwf	??_USART_ReceiveChar
  4078  1591  0873               	movf	??_USART_ReceiveChar,w
  4079  1592  00F4               	movwf	USART_ReceiveChar@byte
  4080  1593  2DA0               	goto	i1l2690
  4081  1594                     i1l2682:	
  4082                           ;usart.c: 71: }
  4083                           
  4084                           ;usart.c: 70: PIR1bits.RCIF = 0;
  4085                           
  4086                           
  4087                           ;usart.c: 72: else
  4088                           ;usart.c: 73: {
  4089                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  4090  1594  3001               	movlw	(STR_4-__stringbase)& (0+255)
  4091  1595  160A  118A  25BE   	fcall	_USART_WriteString
  4092                           
  4093                           ;usart.c: 76: RCSTAbits.CREN = 0;
  4094  1598  1283               	bcf	3,5	;RP0=0, select bank0
  4095  1599  1303               	bcf	3,6	;RP1=0, select bank0
  4096  159A  1218               	bcf	24,4	;volatile
  4097                           
  4098                           ;usart.c: 77: byte = RCREG;
  4099  159B  081A               	movf	26,w	;volatile
  4100  159C  00F3               	movwf	??_USART_ReceiveChar
  4101  159D  0873               	movf	??_USART_ReceiveChar,w
  4102  159E  00F4               	movwf	USART_ReceiveChar@byte
  4103                           
  4104                           ;usart.c: 78: RCSTAbits.CREN = 1;
  4105  159F  1618               	bsf	24,4	;volatile
  4106  15A0                     i1l2690:	
  4107                           
  4108                           ;usart.c: 79: PIR1bits.RCIF = 0;
  4109  15A0  128C               	bcf	12,5	;volatile
  4110                           
  4111                           ;usart.c: 80: }
  4112                           ;usart.c: 82: return(byte);
  4113  15A1  0874               	movf	USART_ReceiveChar@byte,w
  4114  15A2  0008               	return
  4115  15A3                     __end_of_USART_ReceiveChar:	
  4116                           
  4117                           	psect	text20
  4118  15BE                     __ptext20:	
  4119 ;; *************** function _USART_WriteString *****************
  4120 ;; Defined at:
  4121 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  str             1    wreg     PTR const unsigned char 
  4124 ;;		 -> STR_4(40), STR_1(14), 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  str             1    2[COMMON] PTR const unsigned char 
  4127 ;;		 -> STR_4(40), STR_1(14), 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;		None               void
  4130 ;; Registers used:
  4131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4137 ;;      Params:         0       0       0       0       0
  4138 ;;      Locals:         1       0       0       0       0
  4139 ;;      Temps:          1       0       0       0       0
  4140 ;;      Totals:         2       0       0       0       0
  4141 ;;Total ram usage:        2 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    1
  4144 ;; This function calls:
  4145 ;;		_USART_WriteChar
  4146 ;; This function is called by:
  4147 ;;		_ISR
  4148 ;;		_USART_ReceiveChar
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function _USART_WriteString
  4154  15BE                     _USART_WriteString:	
  4155                           
  4156                           ;incstack = 0
  4157                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4158                           ;USART_WriteString@str stored from wreg
  4159  15BE  00F2               	movwf	USART_WriteString@str
  4160  15BF                     i1l2278:	
  4161                           ;usart.c: 54: while(*str != '\0')
  4162                           
  4163  15BF  0872               	movf	USART_WriteString@str,w
  4164  15C0  0084               	movwf	4
  4165  15C1  160A  118A  200A  160A  118A  	fcall	stringdir
  4166  15C6  3800               	iorlw	0
  4167  15C7  1903               	btfsc	3,2
  4168  15C8  0008               	return
  4169                           
  4170                           ;usart.c: 55: {
  4171                           ;usart.c: 56: USART_WriteChar(*str);
  4172  15C9  0872               	movf	USART_WriteString@str,w
  4173  15CA  0084               	movwf	4
  4174  15CB  160A  118A  200A  160A  118A  	fcall	stringdir
  4175  15D0  160A  118A  251F  160A  118A  	fcall	_USART_WriteChar
  4176                           
  4177                           ;usart.c: 57: str++;
  4178  15D5  3001               	movlw	1
  4179  15D6  00F1               	movwf	??_USART_WriteString
  4180  15D7  0871               	movf	??_USART_WriteString,w
  4181  15D8  07F2               	addwf	USART_WriteString@str,f
  4182  15D9  2DBF               	goto	i1l2278
  4183  15DA                     __end_of_USART_WriteString:	
  4184                           
  4185                           	psect	text21
  4186  151F                     __ptext21:	
  4187 ;; *************** function _USART_WriteChar *****************
  4188 ;; Defined at:
  4189 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  byte            1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  byte            1    0[COMMON] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;		None               void
  4196 ;; Registers used:
  4197 ;;		wreg
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4203 ;;      Params:         0       0       0       0       0
  4204 ;;      Locals:         1       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0
  4206 ;;      Totals:         1       0       0       0       0
  4207 ;;Total ram usage:        1 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_send
  4213 ;;		_USART_WriteString
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           
  4218                           ;psect for function _USART_WriteChar
  4219  151F                     _USART_WriteChar:	
  4220                           
  4221                           ;incstack = 0
  4222                           ; Regs used in _USART_WriteChar: [wreg]
  4223                           ;USART_WriteChar@byte stored from wreg
  4224  151F  00F0               	movwf	USART_WriteChar@byte
  4225  1520                     i1l225:	
  4226                           ;usart.c: 46: while(!PIR1bits.TXIF);
  4227                           
  4228  1520  1283               	bcf	3,5	;RP0=0, select bank0
  4229  1521  1303               	bcf	3,6	;RP1=0, select bank0
  4230  1522  1E0C               	btfss	12,4	;volatile
  4231  1523  2D20               	goto	i1l225
  4232                           
  4233                           ;usart.c: 47: TXREG = byte;
  4234  1524  0870               	movf	USART_WriteChar@byte,w
  4235  1525  0099               	movwf	25	;volatile
  4236  1526  0008               	return
  4237  1527                     __end_of_USART_WriteChar:	
  4238                           
  4239                           	psect	text22
  4240  0073                     __ptext22:	
  4241 ;; *************** function _Fuzzy *****************
  4242 ;; Defined at:
  4243 ;;		line 165 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  a               2    9[BANK1 ] int 
  4248 ;;  a               2    7[BANK1 ] int 
  4249 ;;  a               2    5[BANK1 ] int 
  4250 ;;  aumenta         3   17[BANK1 ] float 
  4251 ;;  reduz           3   14[BANK1 ] float 
  4252 ;;  mantem          3   11[BANK1 ] float 
  4253 ;;  tip             3    2[BANK1 ] float 
  4254 ;;  deltaFuzzy      3    0        float 
  4255 ;;  freio           2    0[BANK1 ] unsigned int 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;		None               void
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4265 ;;      Params:         0       0       0       0       0
  4266 ;;      Locals:         0       0      20       0       0
  4267 ;;      Temps:          0       2       0       0       0
  4268 ;;      Totals:         0       2      20       0       0
  4269 ;;Total ram usage:       22 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    3
  4272 ;; This function calls:
  4273 ;;		___awtoft
  4274 ;;		___ftadd
  4275 ;;		___ftdiv
  4276 ;;		___ftge
  4277 ;;		___ftmul
  4278 ;;		___fttol
  4279 ;;		___lwdiv
  4280 ;;		___lwtoft
  4281 ;;		_max_val
  4282 ;;		_trapmf
  4283 ;;		_trimf
  4284 ;;		i1_PWM_DutyCycle2
  4285 ;; This function is called by:
  4286 ;;		_ISR
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           
  4291                           ;psect for function _Fuzzy
  4292  0073                     _Fuzzy:	
  4293                           
  4294                           ;main.c: 178: unsigned int freio = 0;
  4295                           
  4296                           ;incstack = 0
  4297                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4298  0073  1683               	bsf	3,5	;RP0=1, select bank1
  4299  0074  1303               	bcf	3,6	;RP1=0, select bank1
  4300  0075  01BF               	clrf	Fuzzy@freio^(0+128)
  4301  0076  01C0               	clrf	(Fuzzy@freio+1)^(0+128)
  4302                           
  4303                           ;main.c: 179: float deltaFuzzy;
  4304                           ;main.c: 185: float mantem = 0;
  4305  0077  3000               	movlw	0
  4306  0078  00CA               	movwf	Fuzzy@mantem^(0+128)
  4307  0079  3000               	movlw	0
  4308  007A  00CB               	movwf	(Fuzzy@mantem+1)^(0+128)
  4309  007B  3000               	movlw	0
  4310  007C  00CC               	movwf	(Fuzzy@mantem+2)^(0+128)
  4311                           
  4312                           ;main.c: 186: float reduz = 0;
  4313  007D  3000               	movlw	0
  4314  007E  00CD               	movwf	Fuzzy@reduz^(0+128)
  4315  007F  3000               	movlw	0
  4316  0080  00CE               	movwf	(Fuzzy@reduz+1)^(0+128)
  4317  0081  3000               	movlw	0
  4318  0082  00CF               	movwf	(Fuzzy@reduz+2)^(0+128)
  4319                           
  4320                           ;main.c: 187: float aumenta = 0;
  4321  0083  3000               	movlw	0
  4322  0084  00D0               	movwf	Fuzzy@aumenta^(0+128)
  4323  0085  3000               	movlw	0
  4324  0086  00D1               	movwf	(Fuzzy@aumenta+1)^(0+128)
  4325  0087  3000               	movlw	0
  4326  0088  00D2               	movwf	(Fuzzy@aumenta+2)^(0+128)
  4327                           
  4328                           ;main.c: 188: float tip;
  4329                           ;main.c: 189: fitemp = 0;
  4330  0089  3000               	movlw	0
  4331  008A  00A3               	movwf	_fitemp^(0+128)
  4332  008B  3000               	movlw	0
  4333  008C  00A4               	movwf	(_fitemp+1)^(0+128)
  4334  008D  3000               	movlw	0
  4335  008E  00A5               	movwf	(_fitemp+2)^(0+128)
  4336                           
  4337                           ;main.c: 192: if (setpointUI == antigoUI)
  4338  008F  1283               	bcf	3,5	;RP0=0, select bank0
  4339  0090  1303               	bcf	3,6	;RP1=0, select bank0
  4340  0091  0864               	movf	_antigoUI+1,w
  4341  0092  066C               	xorwf	_setpointUI+1,w
  4342  0093  1D03               	skipz
  4343  0094  2897               	goto	u291_25
  4344  0095  0863               	movf	_antigoUI,w
  4345  0096  066B               	xorwf	_setpointUI,w
  4346  0097                     u291_25:	
  4347  0097  1903               	btfsc	3,2
  4348  0098  0008               	return
  4349                           
  4350                           ;main.c: 195: }
  4351                           ;main.c: 197: deltaV = (setpointUI - antigoUI)/10;
  4352                           
  4353                           ;main.c: 193: {
  4354                           ;main.c: 194: return;
  4355  0099  300A               	movlw	10
  4356  009A  00F0               	movwf	___lwdiv@divisor
  4357  009B  3000               	movlw	0
  4358  009C  00F1               	movwf	___lwdiv@divisor+1
  4359  009D  0963               	comf	_antigoUI,w
  4360  009E  00DD               	movwf	??_Fuzzy
  4361  009F  0964               	comf	_antigoUI+1,w
  4362  00A0  00DE               	movwf	??_Fuzzy+1
  4363  00A1  0ADD               	incf	??_Fuzzy,f
  4364  00A2  1903               	skipnz
  4365  00A3  0ADE               	incf	??_Fuzzy+1,f
  4366  00A4  086B               	movf	_setpointUI,w
  4367  00A5  075D               	addwf	??_Fuzzy,w
  4368  00A6  00F2               	movwf	___lwdiv@dividend
  4369  00A7  086C               	movf	_setpointUI+1,w
  4370  00A8  1803               	skipnc
  4371  00A9  0A6C               	incf	_setpointUI+1,w
  4372  00AA  075E               	addwf	??_Fuzzy+1,w
  4373  00AB  00F3               	movwf	___lwdiv@dividend+1
  4374  00AC  160A  118A  26FB  120A  118A  	fcall	___lwdiv
  4375  00B1  0871               	movf	?___lwdiv+1,w
  4376  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  4377  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  4378  00B4  01E6               	clrf	_deltaV+1
  4379  00B5  07E6               	addwf	_deltaV+1,f
  4380  00B6  0870               	movf	?___lwdiv,w
  4381  00B7  01E5               	clrf	_deltaV
  4382  00B8  07E5               	addwf	_deltaV,f
  4383                           
  4384                           ;main.c: 200: if (setpointUI < antigoUI)
  4385  00B9  0864               	movf	_antigoUI+1,w
  4386  00BA  026C               	subwf	_setpointUI+1,w
  4387  00BB  1D03               	skipz
  4388  00BC  28BF               	goto	u292_25
  4389  00BD  0863               	movf	_antigoUI,w
  4390  00BE  026B               	subwf	_setpointUI,w
  4391  00BF                     u292_25:	
  4392  00BF  1803               	skipnc
  4393  00C0  28CC               	goto	i1l150
  4394                           
  4395                           ;main.c: 201: {
  4396                           ;main.c: 202: if(PORTBbits.RB1 == 1)
  4397  00C1  1C86               	btfss	6,1	;volatile
  4398  00C2  28C5               	goto	i1l151
  4399                           
  4400                           ;main.c: 203: {
  4401                           ;main.c: 204: PORTBbits.RB1 = 0;
  4402  00C3  1086               	bcf	6,1	;volatile
  4403                           
  4404                           ;main.c: 205: }else{
  4405  00C4  28C6               	goto	i1l2558
  4406  00C5                     i1l151:	
  4407                           
  4408                           ;main.c: 206: PORTBbits.RB1 = 1;
  4409  00C5  1486               	bsf	6,1	;volatile
  4410  00C6                     i1l2558:	
  4411                           
  4412                           ;main.c: 207: }
  4413                           ;main.c: 209: freio = 1;
  4414  00C6  3001               	movlw	1
  4415  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  4416  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  4417  00C9  00BF               	movwf	Fuzzy@freio^(0+128)
  4418  00CA  3000               	movlw	0
  4419  00CB  00C0               	movwf	(Fuzzy@freio^(0+128)+1)
  4420  00CC                     i1l150:	
  4421                           
  4422                           ;main.c: 210: }
  4423                           ;main.c: 212: if (deltaV >90) deltaV = 90;
  4424  00CC  3000               	movlw	0
  4425  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  4426  00CE  0266               	subwf	_deltaV+1,w
  4427  00CF  305B               	movlw	91
  4428  00D0  1903               	skipnz
  4429  00D1  0265               	subwf	_deltaV,w
  4430  00D2  1C03               	skipc
  4431  00D3  28D8               	goto	i1l153
  4432  00D4  305A               	movlw	90
  4433  00D5  00E5               	movwf	_deltaV
  4434  00D6  3000               	movlw	0
  4435  00D7  00E6               	movwf	_deltaV+1
  4436  00D8                     i1l153:	
  4437                           
  4438                           ;main.c: 217: if (deltaV < 20)
  4439  00D8  3000               	movlw	0
  4440  00D9  0266               	subwf	_deltaV+1,w
  4441  00DA  3014               	movlw	20
  4442  00DB  1903               	skipnz
  4443  00DC  0265               	subwf	_deltaV,w
  4444  00DD  1803               	skipnc
  4445  00DE  2A43               	goto	i1l2586
  4446                           
  4447                           ;main.c: 218: {
  4448                           ;main.c: 222: fitemp = trapmf(deltaV, 0,0,13,32);
  4449  00DF  0866               	movf	_deltaV+1,w
  4450  00E0  01F9               	clrf	___lwtoft@c+1
  4451  00E1  07F9               	addwf	___lwtoft@c+1,f
  4452  00E2  0865               	movf	_deltaV,w
  4453  00E3  01F8               	clrf	___lwtoft@c
  4454  00E4  07F8               	addwf	___lwtoft@c,f
  4455  00E5  160A  118A  2549  120A  118A  	fcall	___lwtoft
  4456  00EA  0878               	movf	?___lwtoft,w
  4457  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  4458  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  4459  00ED  00BD               	movwf	trapmf@x
  4460  00EE  0879               	movf	?___lwtoft+1,w
  4461  00EF  00BE               	movwf	trapmf@x+1
  4462  00F0  087A               	movf	?___lwtoft+2,w
  4463  00F1  00BF               	movwf	trapmf@x+2
  4464  00F2  3000               	movlw	0
  4465  00F3  00C0               	movwf	trapmf@a
  4466  00F4  3000               	movlw	0
  4467  00F5  00C1               	movwf	trapmf@a+1
  4468  00F6  3000               	movlw	0
  4469  00F7  00C2               	movwf	trapmf@a+2
  4470  00F8  3000               	movlw	0
  4471  00F9  00C3               	movwf	trapmf@b
  4472  00FA  3000               	movlw	0
  4473  00FB  00C4               	movwf	trapmf@b+1
  4474  00FC  3000               	movlw	0
  4475  00FD  00C5               	movwf	trapmf@b+2
  4476  00FE  3000               	movlw	0
  4477  00FF  00C6               	movwf	trapmf@c
  4478  0100  3050               	movlw	80
  4479  0101  00C7               	movwf	trapmf@c+1
  4480  0102  3041               	movlw	65
  4481  0103  00C8               	movwf	trapmf@c+2
  4482  0104  3000               	movlw	0
  4483  0105  00C9               	movwf	trapmf@d
  4484  0106  3000               	movlw	0
  4485  0107  00CA               	movwf	trapmf@d+1
  4486  0108  3042               	movlw	66
  4487  0109  00CB               	movwf	trapmf@d+2
  4488  010A  120A  118A  25FA  120A  118A  	fcall	_trapmf
  4489  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4490  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4491  0111  083D               	movf	?_trapmf,w
  4492  0112  1683               	bsf	3,5	;RP0=1, select bank1
  4493  0113  1303               	bcf	3,6	;RP1=0, select bank1
  4494  0114  00A3               	movwf	_fitemp^(0+128)
  4495  0115  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0116  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0117  083E               	movf	?_trapmf+1,w
  4498  0118  1683               	bsf	3,5	;RP0=1, select bank1
  4499  0119  1303               	bcf	3,6	;RP1=0, select bank1
  4500  011A  00A4               	movwf	(_fitemp+1)^(0+128)
  4501  011B  1283               	bcf	3,5	;RP0=0, select bank0
  4502  011C  1303               	bcf	3,6	;RP1=0, select bank0
  4503  011D  083F               	movf	?_trapmf+2,w
  4504  011E  1683               	bsf	3,5	;RP0=1, select bank1
  4505  011F  1303               	bcf	3,6	;RP1=0, select bank1
  4506  0120  00A5               	movwf	(_fitemp+2)^(0+128)
  4507                           
  4508                           ;main.c: 225: fop_rule1 = max_val(fitemp,0.1);
  4509  0121  0823               	movf	_fitemp^(0+128),w
  4510  0122  1283               	bcf	3,5	;RP0=0, select bank0
  4511  0123  1303               	bcf	3,6	;RP1=0, select bank0
  4512  0124  00AC               	movwf	max_val@a
  4513  0125  1683               	bsf	3,5	;RP0=1, select bank1
  4514  0126  1303               	bcf	3,6	;RP1=0, select bank1
  4515  0127  0824               	movf	(_fitemp+1)^(0+128),w
  4516  0128  1283               	bcf	3,5	;RP0=0, select bank0
  4517  0129  1303               	bcf	3,6	;RP1=0, select bank0
  4518  012A  00AD               	movwf	max_val@a+1
  4519  012B  1683               	bsf	3,5	;RP0=1, select bank1
  4520  012C  1303               	bcf	3,6	;RP1=0, select bank1
  4521  012D  0825               	movf	(_fitemp+2)^(0+128),w
  4522  012E  1283               	bcf	3,5	;RP0=0, select bank0
  4523  012F  1303               	bcf	3,6	;RP1=0, select bank0
  4524  0130  00AE               	movwf	max_val@a+2
  4525  0131  30CD               	movlw	205
  4526  0132  00AF               	movwf	max_val@b
  4527  0133  30CC               	movlw	204
  4528  0134  00B0               	movwf	max_val@b+1
  4529  0135  303D               	movlw	61
  4530  0136  00B1               	movwf	max_val@b+2
  4531  0137  160A  118A  25DA  120A  118A  	fcall	_max_val
  4532  013C  1283               	bcf	3,5	;RP0=0, select bank0
  4533  013D  1303               	bcf	3,6	;RP1=0, select bank0
  4534  013E  082C               	movf	?_max_val,w
  4535  013F  1683               	bsf	3,5	;RP0=1, select bank1
  4536  0140  1303               	bcf	3,6	;RP1=0, select bank1
  4537  0141  00A6               	movwf	_fop_rule1^(0+128)
  4538  0142  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0143  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0144  082D               	movf	?_max_val+1,w
  4541  0145  1683               	bsf	3,5	;RP0=1, select bank1
  4542  0146  1303               	bcf	3,6	;RP1=0, select bank1
  4543  0147  00A7               	movwf	(_fop_rule1+1)^(0+128)
  4544  0148  1283               	bcf	3,5	;RP0=0, select bank0
  4545  0149  1303               	bcf	3,6	;RP1=0, select bank0
  4546  014A  082E               	movf	?_max_val+2,w
  4547  014B  1683               	bsf	3,5	;RP0=1, select bank1
  4548  014C  1303               	bcf	3,6	;RP1=0, select bank1
  4549  014D  00A8               	movwf	(_fop_rule1+2)^(0+128)
  4550                           
  4551                           ;main.c: 228: x=0;
  4552  014E  01BB               	clrf	_x^(0+128)
  4553  014F  01BC               	clrf	(_x+1)^(0+128)
  4554                           
  4555                           ;main.c: 229: y=0;
  4556  0150  01BD               	clrf	_y^(0+128)
  4557  0151  01BE               	clrf	(_y+1)^(0+128)
  4558                           
  4559                           ;main.c: 230: for (int a=0; a<=90; a++)
  4560  0152  01C4               	clrf	Fuzzy@a^(0+128)
  4561  0153  01C5               	clrf	(Fuzzy@a+1)^(0+128)
  4562  0154  0845               	movf	(Fuzzy@a+1)^(0+128),w
  4563  0155  3A80               	xorlw	128
  4564  0156  00FF               	movwf	127
  4565  0157  3080               	movlw	128
  4566  0158  027F               	subwf	127,w
  4567  0159  1D03               	skipz
  4568  015A  295D               	goto	u296_25
  4569  015B  305B               	movlw	91
  4570  015C  0244               	subwf	Fuzzy@a^(0+128),w
  4571  015D                     u296_25:	
  4572  015D  1803               	btfsc	3,0
  4573  015E  2A43               	goto	i1l2586
  4574  015F                     i1l2574:	
  4575                           
  4576                           ;main.c: 231: {
  4577                           ;main.c: 232: y = trapmf(x,0,0,13,32);
  4578  015F  3000               	movlw	0
  4579  0160  1283               	bcf	3,5	;RP0=0, select bank0
  4580  0161  1303               	bcf	3,6	;RP1=0, select bank0
  4581  0162  00C9               	movwf	trapmf@d
  4582  0163  3000               	movlw	0
  4583  0164  00CA               	movwf	trapmf@d+1
  4584  0165  3042               	movlw	66
  4585  0166  00CB               	movwf	trapmf@d+2
  4586  0167  3000               	movlw	0
  4587  0168  00C6               	movwf	trapmf@c
  4588  0169  3050               	movlw	80
  4589  016A  00C7               	movwf	trapmf@c+1
  4590  016B  3041               	movlw	65
  4591  016C  00C8               	movwf	trapmf@c+2
  4592  016D  3000               	movlw	0
  4593  016E  00C3               	movwf	trapmf@b
  4594  016F  3000               	movlw	0
  4595  0170  00C4               	movwf	trapmf@b+1
  4596  0171  3000               	movlw	0
  4597  0172  00C5               	movwf	trapmf@b+2
  4598  0173  3000               	movlw	0
  4599  0174  00C0               	movwf	trapmf@a
  4600  0175  3000               	movlw	0
  4601  0176  00C1               	movwf	trapmf@a+1
  4602  0177  3000               	movlw	0
  4603  0178  00C2               	movwf	trapmf@a+2
  4604  0179  1683               	bsf	3,5	;RP0=1, select bank1
  4605  017A  1303               	bcf	3,6	;RP1=0, select bank1
  4606  017B  083C               	movf	(_x+1)^(0+128),w
  4607  017C  01F9               	clrf	___awtoft@c+1
  4608  017D  07F9               	addwf	___awtoft@c+1,f
  4609  017E  083B               	movf	_x^(0+128),w
  4610  017F  01F8               	clrf	___awtoft@c
  4611  0180  07F8               	addwf	___awtoft@c,f
  4612  0181  160A  118A  2618  120A  118A  	fcall	___awtoft
  4613  0186  0878               	movf	?___awtoft,w
  4614  0187  1283               	bcf	3,5	;RP0=0, select bank0
  4615  0188  1303               	bcf	3,6	;RP1=0, select bank0
  4616  0189  00BD               	movwf	trapmf@x
  4617  018A  0879               	movf	?___awtoft+1,w
  4618  018B  00BE               	movwf	trapmf@x+1
  4619  018C  087A               	movf	?___awtoft+2,w
  4620  018D  00BF               	movwf	trapmf@x+2
  4621  018E  120A  118A  25FA  120A  118A  	fcall	_trapmf
  4622  0193  1283               	bcf	3,5	;RP0=0, select bank0
  4623  0194  1303               	bcf	3,6	;RP1=0, select bank0
  4624  0195  083D               	movf	?_trapmf,w
  4625  0196  00CF               	movwf	___fttol@f1
  4626  0197  083E               	movf	?_trapmf+1,w
  4627  0198  00D0               	movwf	___fttol@f1+1
  4628  0199  083F               	movf	?_trapmf+2,w
  4629  019A  00D1               	movwf	___fttol@f1+2
  4630  019B  120A  118A  2750  120A  118A  	fcall	___fttol
  4631  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  4632  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  4633  01A2  0850               	movf	?___fttol+1,w
  4634  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  4635  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  4636  01A5  01BE               	clrf	(_y+1)^(0+128)
  4637  01A6  07BE               	addwf	(_y+1)^(0+128),f
  4638  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  4639  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  4640  01A9  084F               	movf	?___fttol,w
  4641  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  4642  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  4643  01AC  01BD               	clrf	_y^(0+128)
  4644  01AD  07BD               	addwf	_y^(0+128),f
  4645                           
  4646                           ;main.c: 234: if (y > fop_rule1)
  4647  01AE  0826               	movf	_fop_rule1^(0+128),w
  4648  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  4649  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  4650  01B1  00A0               	movwf	___ftge@ff1
  4651  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  4652  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  4653  01B4  0827               	movf	(_fop_rule1+1)^(0+128),w
  4654  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  4655  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  4656  01B7  00A1               	movwf	___ftge@ff1+1
  4657  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  4658  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  4659  01BA  0828               	movf	(_fop_rule1+2)^(0+128),w
  4660  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  4661  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  4662  01BD  00A2               	movwf	___ftge@ff1+2
  4663  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  4664  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  4665  01C0  083E               	movf	(_y+1)^(0+128),w
  4666  01C1  01F9               	clrf	___awtoft@c+1
  4667  01C2  07F9               	addwf	___awtoft@c+1,f
  4668  01C3  083D               	movf	_y^(0+128),w
  4669  01C4  01F8               	clrf	___awtoft@c
  4670  01C5  07F8               	addwf	___awtoft@c,f
  4671  01C6  160A  118A  2618  120A  118A  	fcall	___awtoft
  4672  01CB  0878               	movf	?___awtoft,w
  4673  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  4674  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  4675  01CE  00A3               	movwf	___ftge@ff2
  4676  01CF  0879               	movf	?___awtoft+1,w
  4677  01D0  00A4               	movwf	___ftge@ff2+1
  4678  01D1  087A               	movf	?___awtoft+2,w
  4679  01D2  00A5               	movwf	___ftge@ff2+2
  4680  01D3  160A  118A  2739  120A  118A  	fcall	___ftge
  4681  01D8  1803               	btfsc	3,0
  4682  01D9  29EC               	goto	i1l2578
  4683                           
  4684                           ;main.c: 235: {
  4685                           ;main.c: 236: reduz += fop_rule1;
  4686  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  4687  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  4688  01DC  0826               	movf	_fop_rule1^(0+128),w
  4689  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  4690  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  4691  01DF  00A0               	movwf	___ftadd@f1
  4692  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  4693  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  4694  01E2  0827               	movf	(_fop_rule1+1)^(0+128),w
  4695  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  4696  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  4697  01E5  00A1               	movwf	___ftadd@f1+1
  4698  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  4699  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  4700  01E8  0828               	movf	(_fop_rule1+2)^(0+128),w
  4701  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  4702  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  4703  01EB  2A00               	goto	L7
  4704  01EC                     i1l2578:	
  4705                           ;main.c: 237: }
  4706                           
  4707                           
  4708                           ;main.c: 238: else
  4709                           ;main.c: 239: {
  4710                           ;main.c: 240: reduz += y;
  4711  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  4712  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  4713  01EE  083E               	movf	(_y+1)^(0+128),w
  4714  01EF  01F9               	clrf	___awtoft@c+1
  4715  01F0  07F9               	addwf	___awtoft@c+1,f
  4716  01F1  083D               	movf	_y^(0+128),w
  4717  01F2  01F8               	clrf	___awtoft@c
  4718  01F3  07F8               	addwf	___awtoft@c,f
  4719  01F4  160A  118A  2618  120A  118A  	fcall	___awtoft
  4720  01F9  0878               	movf	?___awtoft,w
  4721  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  4722  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  4723  01FC  00A0               	movwf	___ftadd@f1
  4724  01FD  0879               	movf	?___awtoft+1,w
  4725  01FE  00A1               	movwf	___ftadd@f1+1
  4726  01FF  087A               	movf	?___awtoft+2,w
  4727  0200                     L7:	
  4728  0200  00A2               	movwf	___ftadd@f1+2
  4729  0201  1683               	bsf	3,5	;RP0=1, select bank1
  4730  0202  1303               	bcf	3,6	;RP1=0, select bank1
  4731  0203  084D               	movf	Fuzzy@reduz^(0+128),w
  4732  0204  1283               	bcf	3,5	;RP0=0, select bank0
  4733  0205  1303               	bcf	3,6	;RP1=0, select bank0
  4734  0206  00A3               	movwf	___ftadd@f2
  4735  0207  1683               	bsf	3,5	;RP0=1, select bank1
  4736  0208  1303               	bcf	3,6	;RP1=0, select bank1
  4737  0209  084E               	movf	(Fuzzy@reduz+1)^(0+128),w
  4738  020A  1283               	bcf	3,5	;RP0=0, select bank0
  4739  020B  1303               	bcf	3,6	;RP1=0, select bank0
  4740  020C  00A4               	movwf	___ftadd@f2+1
  4741  020D  1683               	bsf	3,5	;RP0=1, select bank1
  4742  020E  1303               	bcf	3,6	;RP1=0, select bank1
  4743  020F  084F               	movf	(Fuzzy@reduz+2)^(0+128),w
  4744  0210  1283               	bcf	3,5	;RP0=0, select bank0
  4745  0211  1303               	bcf	3,6	;RP1=0, select bank0
  4746  0212  00A5               	movwf	___ftadd@f2+2
  4747  0213  120A  158A  24A1  120A  118A  	fcall	___ftadd
  4748  0218  1283               	bcf	3,5	;RP0=0, select bank0
  4749  0219  1303               	bcf	3,6	;RP1=0, select bank0
  4750  021A  0820               	movf	?___ftadd,w
  4751  021B  1683               	bsf	3,5	;RP0=1, select bank1
  4752  021C  1303               	bcf	3,6	;RP1=0, select bank1
  4753  021D  00CD               	movwf	Fuzzy@reduz^(0+128)
  4754  021E  1283               	bcf	3,5	;RP0=0, select bank0
  4755  021F  1303               	bcf	3,6	;RP1=0, select bank0
  4756  0220  0821               	movf	?___ftadd+1,w
  4757  0221  1683               	bsf	3,5	;RP0=1, select bank1
  4758  0222  1303               	bcf	3,6	;RP1=0, select bank1
  4759  0223  00CE               	movwf	(Fuzzy@reduz+1)^(0+128)
  4760  0224  1283               	bcf	3,5	;RP0=0, select bank0
  4761  0225  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0226  0822               	movf	?___ftadd+2,w
  4763  0227  1683               	bsf	3,5	;RP0=1, select bank1
  4764  0228  1303               	bcf	3,6	;RP1=0, select bank1
  4765  0229  00CF               	movwf	(Fuzzy@reduz+2)^(0+128)
  4766                           
  4767                           ;main.c: 241: }
  4768                           ;main.c: 243: x=x+1;
  4769  022A  083B               	movf	_x^(0+128),w
  4770  022B  3E01               	addlw	1
  4771  022C  00BB               	movwf	_x^(0+128)
  4772  022D  083C               	movf	(_x+1)^(0+128),w
  4773  022E  1803               	skipnc
  4774  022F  3E01               	addlw	1
  4775  0230  3E00               	addlw	0
  4776  0231  00BC               	movwf	(_x+1)^(0+128)
  4777  0232  3001               	movlw	1
  4778  0233  07C4               	addwf	Fuzzy@a^(0+128),f
  4779  0234  1803               	skipnc
  4780  0235  0AC5               	incf	(Fuzzy@a+1)^(0+128),f
  4781  0236  3000               	movlw	0
  4782  0237  07C5               	addwf	(Fuzzy@a+1)^(0+128),f
  4783  0238  0845               	movf	(Fuzzy@a+1)^(0+128),w
  4784  0239  3A80               	xorlw	128
  4785  023A  00FF               	movwf	127
  4786  023B  3080               	movlw	128
  4787  023C  027F               	subwf	127,w
  4788  023D  1D03               	skipz
  4789  023E  2A41               	goto	u298_25
  4790  023F  305B               	movlw	91
  4791  0240  0244               	subwf	Fuzzy@a^(0+128),w
  4792  0241                     u298_25:	
  4793  0241  1C03               	skipc
  4794  0242  295F               	goto	i1l2574
  4795  0243                     i1l2586:	
  4796                           
  4797                           ;main.c: 244: }
  4798                           ;main.c: 246: }
  4799                           ;main.c: 252: if ((deltaV > 20) && (deltaV < 70))
  4800  0243  3000               	movlw	0
  4801  0244  1283               	bcf	3,5	;RP0=0, select bank0
  4802  0245  1303               	bcf	3,6	;RP1=0, select bank0
  4803  0246  0266               	subwf	_deltaV+1,w
  4804  0247  3015               	movlw	21
  4805  0248  1903               	skipnz
  4806  0249  0265               	subwf	_deltaV,w
  4807  024A  1C03               	skipc
  4808  024B  2BAB               	goto	i1l2614
  4809  024C  3000               	movlw	0
  4810  024D  0266               	subwf	_deltaV+1,w
  4811  024E  3046               	movlw	70
  4812  024F  1903               	skipnz
  4813  0250  0265               	subwf	_deltaV,w
  4814  0251  1803               	skipnc
  4815  0252  2BAB               	goto	i1l2614
  4816                           
  4817                           ;main.c: 253: {
  4818                           ;main.c: 256: fitemp = trimf(deltaV, 9, 45, 81);
  4819  0253  0866               	movf	_deltaV+1,w
  4820  0254  01F9               	clrf	___lwtoft@c+1
  4821  0255  07F9               	addwf	___lwtoft@c+1,f
  4822  0256  0865               	movf	_deltaV,w
  4823  0257  01F8               	clrf	___lwtoft@c
  4824  0258  07F8               	addwf	___lwtoft@c,f
  4825  0259  160A  118A  2549  120A  118A  	fcall	___lwtoft
  4826  025E  0878               	movf	?___lwtoft,w
  4827  025F  1283               	bcf	3,5	;RP0=0, select bank0
  4828  0260  1303               	bcf	3,6	;RP1=0, select bank0
  4829  0261  00BD               	movwf	trimf@x
  4830  0262  0879               	movf	?___lwtoft+1,w
  4831  0263  00BE               	movwf	trimf@x+1
  4832  0264  087A               	movf	?___lwtoft+2,w
  4833  0265  00BF               	movwf	trimf@x+2
  4834  0266  3000               	movlw	0
  4835  0267  00C0               	movwf	trimf@a
  4836  0268  3010               	movlw	16
  4837  0269  00C1               	movwf	trimf@a+1
  4838  026A  3041               	movlw	65
  4839  026B  00C2               	movwf	trimf@a+2
  4840  026C  3000               	movlw	0
  4841  026D  00C3               	movwf	trimf@b
  4842  026E  3034               	movlw	52
  4843  026F  00C4               	movwf	trimf@b+1
  4844  0270  3042               	movlw	66
  4845  0271  00C5               	movwf	trimf@b+2
  4846  0272  3000               	movlw	0
  4847  0273  00C6               	movwf	trimf@c
  4848  0274  30A2               	movlw	162
  4849  0275  00C7               	movwf	trimf@c+1
  4850  0276  3042               	movlw	66
  4851  0277  00C8               	movwf	trimf@c+2
  4852  0278  120A  158A  25AA  120A  118A  	fcall	_trimf
  4853  027D  1283               	bcf	3,5	;RP0=0, select bank0
  4854  027E  1303               	bcf	3,6	;RP1=0, select bank0
  4855  027F  083D               	movf	?_trimf,w
  4856  0280  1683               	bsf	3,5	;RP0=1, select bank1
  4857  0281  1303               	bcf	3,6	;RP1=0, select bank1
  4858  0282  00A3               	movwf	_fitemp^(0+128)
  4859  0283  1283               	bcf	3,5	;RP0=0, select bank0
  4860  0284  1303               	bcf	3,6	;RP1=0, select bank0
  4861  0285  083E               	movf	?_trimf+1,w
  4862  0286  1683               	bsf	3,5	;RP0=1, select bank1
  4863  0287  1303               	bcf	3,6	;RP1=0, select bank1
  4864  0288  00A4               	movwf	(_fitemp+1)^(0+128)
  4865  0289  1283               	bcf	3,5	;RP0=0, select bank0
  4866  028A  1303               	bcf	3,6	;RP1=0, select bank0
  4867  028B  083F               	movf	?_trimf+2,w
  4868  028C  1683               	bsf	3,5	;RP0=1, select bank1
  4869  028D  1303               	bcf	3,6	;RP1=0, select bank1
  4870  028E  00A5               	movwf	(_fitemp+2)^(0+128)
  4871                           
  4872                           ;main.c: 259: fop_rule2 = max_val(fitemp,0.1);
  4873  028F  0823               	movf	_fitemp^(0+128),w
  4874  0290  1283               	bcf	3,5	;RP0=0, select bank0
  4875  0291  1303               	bcf	3,6	;RP1=0, select bank0
  4876  0292  00AC               	movwf	max_val@a
  4877  0293  1683               	bsf	3,5	;RP0=1, select bank1
  4878  0294  1303               	bcf	3,6	;RP1=0, select bank1
  4879  0295  0824               	movf	(_fitemp+1)^(0+128),w
  4880  0296  1283               	bcf	3,5	;RP0=0, select bank0
  4881  0297  1303               	bcf	3,6	;RP1=0, select bank0
  4882  0298  00AD               	movwf	max_val@a+1
  4883  0299  1683               	bsf	3,5	;RP0=1, select bank1
  4884  029A  1303               	bcf	3,6	;RP1=0, select bank1
  4885  029B  0825               	movf	(_fitemp+2)^(0+128),w
  4886  029C  1283               	bcf	3,5	;RP0=0, select bank0
  4887  029D  1303               	bcf	3,6	;RP1=0, select bank0
  4888  029E  00AE               	movwf	max_val@a+2
  4889  029F  30CD               	movlw	205
  4890  02A0  00AF               	movwf	max_val@b
  4891  02A1  30CC               	movlw	204
  4892  02A2  00B0               	movwf	max_val@b+1
  4893  02A3  303D               	movlw	61
  4894  02A4  00B1               	movwf	max_val@b+2
  4895  02A5  160A  118A  25DA  120A  118A  	fcall	_max_val
  4896  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  4897  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  4898  02AC  082C               	movf	?_max_val,w
  4899  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  4900  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  4901  02AF  00A9               	movwf	_fop_rule2^(0+128)
  4902  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  4903  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  4904  02B2  082D               	movf	?_max_val+1,w
  4905  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  4906  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  4907  02B5  00AA               	movwf	(_fop_rule2+1)^(0+128)
  4908  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  4909  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  4910  02B8  082E               	movf	?_max_val+2,w
  4911  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  4912  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  4913  02BB  00AB               	movwf	(_fop_rule2+2)^(0+128)
  4914                           
  4915                           ;main.c: 262: x=0;
  4916  02BC  01BB               	clrf	_x^(0+128)
  4917  02BD  01BC               	clrf	(_x+1)^(0+128)
  4918                           
  4919                           ;main.c: 263: y=0;
  4920  02BE  01BD               	clrf	_y^(0+128)
  4921  02BF  01BE               	clrf	(_y+1)^(0+128)
  4922                           
  4923                           ;main.c: 264: for (int a=0; a<=90; a++)
  4924  02C0  01C6               	clrf	Fuzzy@a_242^(0+128)
  4925  02C1  01C7               	clrf	(Fuzzy@a_242+1)^(0+128)
  4926  02C2  0847               	movf	(Fuzzy@a_242+1)^(0+128),w
  4927  02C3  3A80               	xorlw	128
  4928  02C4  00FF               	movwf	127
  4929  02C5  3080               	movlw	128
  4930  02C6  027F               	subwf	127,w
  4931  02C7  1D03               	skipz
  4932  02C8  2ACB               	goto	u301_25
  4933  02C9  305B               	movlw	91
  4934  02CA  0246               	subwf	Fuzzy@a_242^(0+128),w
  4935  02CB                     u301_25:	
  4936  02CB  1803               	btfsc	3,0
  4937  02CC  2BAB               	goto	i1l2614
  4938  02CD                     i1l2602:	
  4939                           
  4940                           ;main.c: 265: {
  4941                           ;main.c: 266: y = trimf(x, 9, 45, 81);
  4942  02CD  3000               	movlw	0
  4943  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  4944  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  4945  02D0  00C6               	movwf	trimf@c
  4946  02D1  30A2               	movlw	162
  4947  02D2  00C7               	movwf	trimf@c+1
  4948  02D3  3042               	movlw	66
  4949  02D4  00C8               	movwf	trimf@c+2
  4950  02D5  3000               	movlw	0
  4951  02D6  00C3               	movwf	trimf@b
  4952  02D7  3034               	movlw	52
  4953  02D8  00C4               	movwf	trimf@b+1
  4954  02D9  3042               	movlw	66
  4955  02DA  00C5               	movwf	trimf@b+2
  4956  02DB  3000               	movlw	0
  4957  02DC  00C0               	movwf	trimf@a
  4958  02DD  3010               	movlw	16
  4959  02DE  00C1               	movwf	trimf@a+1
  4960  02DF  3041               	movlw	65
  4961  02E0  00C2               	movwf	trimf@a+2
  4962  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  4963  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  4964  02E3  083C               	movf	(_x+1)^(0+128),w
  4965  02E4  01F9               	clrf	___awtoft@c+1
  4966  02E5  07F9               	addwf	___awtoft@c+1,f
  4967  02E6  083B               	movf	_x^(0+128),w
  4968  02E7  01F8               	clrf	___awtoft@c
  4969  02E8  07F8               	addwf	___awtoft@c,f
  4970  02E9  160A  118A  2618  120A  118A  	fcall	___awtoft
  4971  02EE  0878               	movf	?___awtoft,w
  4972  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  4973  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  4974  02F1  00BD               	movwf	trimf@x
  4975  02F2  0879               	movf	?___awtoft+1,w
  4976  02F3  00BE               	movwf	trimf@x+1
  4977  02F4  087A               	movf	?___awtoft+2,w
  4978  02F5  00BF               	movwf	trimf@x+2
  4979  02F6  120A  158A  25AA  120A  118A  	fcall	_trimf
  4980  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  4981  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  4982  02FD  083D               	movf	?_trimf,w
  4983  02FE  00CF               	movwf	___fttol@f1
  4984  02FF  083E               	movf	?_trimf+1,w
  4985  0300  00D0               	movwf	___fttol@f1+1
  4986  0301  083F               	movf	?_trimf+2,w
  4987  0302  00D1               	movwf	___fttol@f1+2
  4988  0303  120A  118A  2750  120A  118A  	fcall	___fttol
  4989  0308  1283               	bcf	3,5	;RP0=0, select bank0
  4990  0309  1303               	bcf	3,6	;RP1=0, select bank0
  4991  030A  0850               	movf	?___fttol+1,w
  4992  030B  1683               	bsf	3,5	;RP0=1, select bank1
  4993  030C  1303               	bcf	3,6	;RP1=0, select bank1
  4994  030D  01BE               	clrf	(_y+1)^(0+128)
  4995  030E  07BE               	addwf	(_y+1)^(0+128),f
  4996  030F  1283               	bcf	3,5	;RP0=0, select bank0
  4997  0310  1303               	bcf	3,6	;RP1=0, select bank0
  4998  0311  084F               	movf	?___fttol,w
  4999  0312  1683               	bsf	3,5	;RP0=1, select bank1
  5000  0313  1303               	bcf	3,6	;RP1=0, select bank1
  5001  0314  01BD               	clrf	_y^(0+128)
  5002  0315  07BD               	addwf	_y^(0+128),f
  5003                           
  5004                           ;main.c: 268: if (y >= fop_rule2)
  5005  0316  083E               	movf	(_y+1)^(0+128),w
  5006  0317  01F9               	clrf	___awtoft@c+1
  5007  0318  07F9               	addwf	___awtoft@c+1,f
  5008  0319  083D               	movf	_y^(0+128),w
  5009  031A  01F8               	clrf	___awtoft@c
  5010  031B  07F8               	addwf	___awtoft@c,f
  5011  031C  160A  118A  2618  120A  118A  	fcall	___awtoft
  5012  0321  0878               	movf	?___awtoft,w
  5013  0322  1283               	bcf	3,5	;RP0=0, select bank0
  5014  0323  1303               	bcf	3,6	;RP1=0, select bank0
  5015  0324  00A0               	movwf	___ftge@ff1
  5016  0325  0879               	movf	?___awtoft+1,w
  5017  0326  00A1               	movwf	___ftge@ff1+1
  5018  0327  087A               	movf	?___awtoft+2,w
  5019  0328  00A2               	movwf	___ftge@ff1+2
  5020  0329  1683               	bsf	3,5	;RP0=1, select bank1
  5021  032A  1303               	bcf	3,6	;RP1=0, select bank1
  5022  032B  0829               	movf	_fop_rule2^(0+128),w
  5023  032C  1283               	bcf	3,5	;RP0=0, select bank0
  5024  032D  1303               	bcf	3,6	;RP1=0, select bank0
  5025  032E  00A3               	movwf	___ftge@ff2
  5026  032F  1683               	bsf	3,5	;RP0=1, select bank1
  5027  0330  1303               	bcf	3,6	;RP1=0, select bank1
  5028  0331  082A               	movf	(_fop_rule2+1)^(0+128),w
  5029  0332  1283               	bcf	3,5	;RP0=0, select bank0
  5030  0333  1303               	bcf	3,6	;RP1=0, select bank0
  5031  0334  00A4               	movwf	___ftge@ff2+1
  5032  0335  1683               	bsf	3,5	;RP0=1, select bank1
  5033  0336  1303               	bcf	3,6	;RP1=0, select bank1
  5034  0337  082B               	movf	(_fop_rule2+2)^(0+128),w
  5035  0338  1283               	bcf	3,5	;RP0=0, select bank0
  5036  0339  1303               	bcf	3,6	;RP1=0, select bank0
  5037  033A  00A5               	movwf	___ftge@ff2+2
  5038  033B  160A  118A  2739  120A  118A  	fcall	___ftge
  5039  0340  1C03               	btfss	3,0
  5040  0341  2B54               	goto	i1l2606
  5041                           
  5042                           ;main.c: 269: {
  5043                           ;main.c: 270: mantem += fop_rule2;
  5044  0342  1683               	bsf	3,5	;RP0=1, select bank1
  5045  0343  1303               	bcf	3,6	;RP1=0, select bank1
  5046  0344  0829               	movf	_fop_rule2^(0+128),w
  5047  0345  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0346  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0347  00A0               	movwf	___ftadd@f1
  5050  0348  1683               	bsf	3,5	;RP0=1, select bank1
  5051  0349  1303               	bcf	3,6	;RP1=0, select bank1
  5052  034A  082A               	movf	(_fop_rule2+1)^(0+128),w
  5053  034B  1283               	bcf	3,5	;RP0=0, select bank0
  5054  034C  1303               	bcf	3,6	;RP1=0, select bank0
  5055  034D  00A1               	movwf	___ftadd@f1+1
  5056  034E  1683               	bsf	3,5	;RP0=1, select bank1
  5057  034F  1303               	bcf	3,6	;RP1=0, select bank1
  5058  0350  082B               	movf	(_fop_rule2+2)^(0+128),w
  5059  0351  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0352  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0353  2B68               	goto	L8
  5062  0354                     i1l2606:	
  5063                           ;main.c: 271: }
  5064                           
  5065                           
  5066                           ;main.c: 272: else
  5067                           ;main.c: 273: {
  5068                           ;main.c: 274: mantem += y;
  5069  0354  1683               	bsf	3,5	;RP0=1, select bank1
  5070  0355  1303               	bcf	3,6	;RP1=0, select bank1
  5071  0356  083E               	movf	(_y+1)^(0+128),w
  5072  0357  01F9               	clrf	___awtoft@c+1
  5073  0358  07F9               	addwf	___awtoft@c+1,f
  5074  0359  083D               	movf	_y^(0+128),w
  5075  035A  01F8               	clrf	___awtoft@c
  5076  035B  07F8               	addwf	___awtoft@c,f
  5077  035C  160A  118A  2618  120A  118A  	fcall	___awtoft
  5078  0361  0878               	movf	?___awtoft,w
  5079  0362  1283               	bcf	3,5	;RP0=0, select bank0
  5080  0363  1303               	bcf	3,6	;RP1=0, select bank0
  5081  0364  00A0               	movwf	___ftadd@f1
  5082  0365  0879               	movf	?___awtoft+1,w
  5083  0366  00A1               	movwf	___ftadd@f1+1
  5084  0367  087A               	movf	?___awtoft+2,w
  5085  0368                     L8:	
  5086  0368  00A2               	movwf	___ftadd@f1+2
  5087  0369  1683               	bsf	3,5	;RP0=1, select bank1
  5088  036A  1303               	bcf	3,6	;RP1=0, select bank1
  5089  036B  084A               	movf	Fuzzy@mantem^(0+128),w
  5090  036C  1283               	bcf	3,5	;RP0=0, select bank0
  5091  036D  1303               	bcf	3,6	;RP1=0, select bank0
  5092  036E  00A3               	movwf	___ftadd@f2
  5093  036F  1683               	bsf	3,5	;RP0=1, select bank1
  5094  0370  1303               	bcf	3,6	;RP1=0, select bank1
  5095  0371  084B               	movf	(Fuzzy@mantem+1)^(0+128),w
  5096  0372  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0373  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0374  00A4               	movwf	___ftadd@f2+1
  5099  0375  1683               	bsf	3,5	;RP0=1, select bank1
  5100  0376  1303               	bcf	3,6	;RP1=0, select bank1
  5101  0377  084C               	movf	(Fuzzy@mantem+2)^(0+128),w
  5102  0378  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0379  1303               	bcf	3,6	;RP1=0, select bank0
  5104  037A  00A5               	movwf	___ftadd@f2+2
  5105  037B  120A  158A  24A1  120A  118A  	fcall	___ftadd
  5106  0380  1283               	bcf	3,5	;RP0=0, select bank0
  5107  0381  1303               	bcf	3,6	;RP1=0, select bank0
  5108  0382  0820               	movf	?___ftadd,w
  5109  0383  1683               	bsf	3,5	;RP0=1, select bank1
  5110  0384  1303               	bcf	3,6	;RP1=0, select bank1
  5111  0385  00CA               	movwf	Fuzzy@mantem^(0+128)
  5112  0386  1283               	bcf	3,5	;RP0=0, select bank0
  5113  0387  1303               	bcf	3,6	;RP1=0, select bank0
  5114  0388  0821               	movf	?___ftadd+1,w
  5115  0389  1683               	bsf	3,5	;RP0=1, select bank1
  5116  038A  1303               	bcf	3,6	;RP1=0, select bank1
  5117  038B  00CB               	movwf	(Fuzzy@mantem+1)^(0+128)
  5118  038C  1283               	bcf	3,5	;RP0=0, select bank0
  5119  038D  1303               	bcf	3,6	;RP1=0, select bank0
  5120  038E  0822               	movf	?___ftadd+2,w
  5121  038F  1683               	bsf	3,5	;RP0=1, select bank1
  5122  0390  1303               	bcf	3,6	;RP1=0, select bank1
  5123  0391  00CC               	movwf	(Fuzzy@mantem+2)^(0+128)
  5124                           
  5125                           ;main.c: 275: }
  5126                           ;main.c: 277: x=x+1;
  5127  0392  083B               	movf	_x^(0+128),w
  5128  0393  3E01               	addlw	1
  5129  0394  00BB               	movwf	_x^(0+128)
  5130  0395  083C               	movf	(_x+1)^(0+128),w
  5131  0396  1803               	skipnc
  5132  0397  3E01               	addlw	1
  5133  0398  3E00               	addlw	0
  5134  0399  00BC               	movwf	(_x+1)^(0+128)
  5135  039A  3001               	movlw	1
  5136  039B  07C6               	addwf	Fuzzy@a_242^(0+128),f
  5137  039C  1803               	skipnc
  5138  039D  0AC7               	incf	(Fuzzy@a_242+1)^(0+128),f
  5139  039E  3000               	movlw	0
  5140  039F  07C7               	addwf	(Fuzzy@a_242+1)^(0+128),f
  5141  03A0  0847               	movf	(Fuzzy@a_242+1)^(0+128),w
  5142  03A1  3A80               	xorlw	128
  5143  03A2  00FF               	movwf	127
  5144  03A3  3080               	movlw	128
  5145  03A4  027F               	subwf	127,w
  5146  03A5  1D03               	skipz
  5147  03A6  2BA9               	goto	u303_25
  5148  03A7  305B               	movlw	91
  5149  03A8  0246               	subwf	Fuzzy@a_242^(0+128),w
  5150  03A9                     u303_25:	
  5151  03A9  1C03               	skipc
  5152  03AA  2ACD               	goto	i1l2602
  5153  03AB                     i1l2614:	
  5154                           
  5155                           ;main.c: 278: }
  5156                           ;main.c: 280: }
  5157                           ;main.c: 286: if (deltaV > 70 )
  5158  03AB  3000               	movlw	0
  5159  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  5160  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  5161  03AE  0266               	subwf	_deltaV+1,w
  5162  03AF  3047               	movlw	71
  5163  03B0  1903               	skipnz
  5164  03B1  0265               	subwf	_deltaV,w
  5165  03B2  1C03               	skipc
  5166  03B3  2D18               	goto	i1l2640
  5167                           
  5168                           ;main.c: 287: {
  5169                           ;main.c: 290: fitemp = trapmf(deltaV, 62, 79, 90, 90);
  5170  03B4  0866               	movf	_deltaV+1,w
  5171  03B5  01F9               	clrf	___lwtoft@c+1
  5172  03B6  07F9               	addwf	___lwtoft@c+1,f
  5173  03B7  0865               	movf	_deltaV,w
  5174  03B8  01F8               	clrf	___lwtoft@c
  5175  03B9  07F8               	addwf	___lwtoft@c,f
  5176  03BA  160A  118A  2549  120A  118A  	fcall	___lwtoft
  5177  03BF  0878               	movf	?___lwtoft,w
  5178  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  5179  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  5180  03C2  00BD               	movwf	trapmf@x
  5181  03C3  0879               	movf	?___lwtoft+1,w
  5182  03C4  00BE               	movwf	trapmf@x+1
  5183  03C5  087A               	movf	?___lwtoft+2,w
  5184  03C6  00BF               	movwf	trapmf@x+2
  5185  03C7  3000               	movlw	0
  5186  03C8  00C0               	movwf	trapmf@a
  5187  03C9  3078               	movlw	120
  5188  03CA  00C1               	movwf	trapmf@a+1
  5189  03CB  3042               	movlw	66
  5190  03CC  00C2               	movwf	trapmf@a+2
  5191  03CD  3000               	movlw	0
  5192  03CE  00C3               	movwf	trapmf@b
  5193  03CF  309E               	movlw	158
  5194  03D0  00C4               	movwf	trapmf@b+1
  5195  03D1  3042               	movlw	66
  5196  03D2  00C5               	movwf	trapmf@b+2
  5197  03D3  3000               	movlw	0
  5198  03D4  00C6               	movwf	trapmf@c
  5199  03D5  30B4               	movlw	180
  5200  03D6  00C7               	movwf	trapmf@c+1
  5201  03D7  3042               	movlw	66
  5202  03D8  00C8               	movwf	trapmf@c+2
  5203  03D9  3000               	movlw	0
  5204  03DA  00C9               	movwf	trapmf@d
  5205  03DB  30B4               	movlw	180
  5206  03DC  00CA               	movwf	trapmf@d+1
  5207  03DD  3042               	movlw	66
  5208  03DE  00CB               	movwf	trapmf@d+2
  5209  03DF  120A  118A  25FA  120A  118A  	fcall	_trapmf
  5210  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  5211  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  5212  03E6  083D               	movf	?_trapmf,w
  5213  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  5214  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  5215  03E9  00A3               	movwf	_fitemp^(0+128)
  5216  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  5217  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  5218  03EC  083E               	movf	?_trapmf+1,w
  5219  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  5220  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  5221  03EF  00A4               	movwf	(_fitemp+1)^(0+128)
  5222  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  5223  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  5224  03F2  083F               	movf	?_trapmf+2,w
  5225  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  5226  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  5227  03F5  00A5               	movwf	(_fitemp+2)^(0+128)
  5228                           
  5229                           ;main.c: 294: fop_rule3 = max_val(fitemp,0.1);
  5230  03F6  0823               	movf	_fitemp^(0+128),w
  5231  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  5232  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  5233  03F9  00AC               	movwf	max_val@a
  5234  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  5235  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  5236  03FC  0824               	movf	(_fitemp+1)^(0+128),w
  5237  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  5238  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  5239  03FF  00AD               	movwf	max_val@a+1
  5240  0400  1683               	bsf	3,5	;RP0=1, select bank1
  5241  0401  1303               	bcf	3,6	;RP1=0, select bank1
  5242  0402  0825               	movf	(_fitemp+2)^(0+128),w
  5243  0403  1283               	bcf	3,5	;RP0=0, select bank0
  5244  0404  1303               	bcf	3,6	;RP1=0, select bank0
  5245  0405  00AE               	movwf	max_val@a+2
  5246  0406  30CD               	movlw	205
  5247  0407  00AF               	movwf	max_val@b
  5248  0408  30CC               	movlw	204
  5249  0409  00B0               	movwf	max_val@b+1
  5250  040A  303D               	movlw	61
  5251  040B  00B1               	movwf	max_val@b+2
  5252  040C  160A  118A  25DA  120A  118A  	fcall	_max_val
  5253  0411  1283               	bcf	3,5	;RP0=0, select bank0
  5254  0412  1303               	bcf	3,6	;RP1=0, select bank0
  5255  0413  082C               	movf	?_max_val,w
  5256  0414  1683               	bsf	3,5	;RP0=1, select bank1
  5257  0415  1303               	bcf	3,6	;RP1=0, select bank1
  5258  0416  00AC               	movwf	_fop_rule3^(0+128)
  5259  0417  1283               	bcf	3,5	;RP0=0, select bank0
  5260  0418  1303               	bcf	3,6	;RP1=0, select bank0
  5261  0419  082D               	movf	?_max_val+1,w
  5262  041A  1683               	bsf	3,5	;RP0=1, select bank1
  5263  041B  1303               	bcf	3,6	;RP1=0, select bank1
  5264  041C  00AD               	movwf	(_fop_rule3+1)^(0+128)
  5265  041D  1283               	bcf	3,5	;RP0=0, select bank0
  5266  041E  1303               	bcf	3,6	;RP1=0, select bank0
  5267  041F  082E               	movf	?_max_val+2,w
  5268  0420  1683               	bsf	3,5	;RP0=1, select bank1
  5269  0421  1303               	bcf	3,6	;RP1=0, select bank1
  5270  0422  00AE               	movwf	(_fop_rule3+2)^(0+128)
  5271                           
  5272                           ;main.c: 297: x=0;
  5273  0423  01BB               	clrf	_x^(0+128)
  5274  0424  01BC               	clrf	(_x+1)^(0+128)
  5275                           
  5276                           ;main.c: 298: y=0;
  5277  0425  01BD               	clrf	_y^(0+128)
  5278  0426  01BE               	clrf	(_y+1)^(0+128)
  5279                           
  5280                           ;main.c: 299: for (int a=0; a<=90; a++)
  5281  0427  01C8               	clrf	Fuzzy@a_243^(0+128)
  5282  0428  01C9               	clrf	(Fuzzy@a_243+1)^(0+128)
  5283  0429  0849               	movf	(Fuzzy@a_243+1)^(0+128),w
  5284  042A  3A80               	xorlw	128
  5285  042B  00FF               	movwf	127
  5286  042C  3080               	movlw	128
  5287  042D  027F               	subwf	127,w
  5288  042E  1D03               	skipz
  5289  042F  2C32               	goto	u305_25
  5290  0430  305B               	movlw	91
  5291  0431  0248               	subwf	Fuzzy@a_243^(0+128),w
  5292  0432                     u305_25:	
  5293  0432  1803               	btfsc	3,0
  5294  0433  2D18               	goto	i1l2640
  5295  0434                     i1l2628:	
  5296                           
  5297                           ;main.c: 300: {
  5298                           ;main.c: 301: y = trapmf(x, 62, 79, 90, 90);
  5299  0434  3000               	movlw	0
  5300  0435  1283               	bcf	3,5	;RP0=0, select bank0
  5301  0436  1303               	bcf	3,6	;RP1=0, select bank0
  5302  0437  00C9               	movwf	trapmf@d
  5303  0438  30B4               	movlw	180
  5304  0439  00CA               	movwf	trapmf@d+1
  5305  043A  3042               	movlw	66
  5306  043B  00CB               	movwf	trapmf@d+2
  5307  043C  3000               	movlw	0
  5308  043D  00C6               	movwf	trapmf@c
  5309  043E  30B4               	movlw	180
  5310  043F  00C7               	movwf	trapmf@c+1
  5311  0440  3042               	movlw	66
  5312  0441  00C8               	movwf	trapmf@c+2
  5313  0442  3000               	movlw	0
  5314  0443  00C3               	movwf	trapmf@b
  5315  0444  309E               	movlw	158
  5316  0445  00C4               	movwf	trapmf@b+1
  5317  0446  3042               	movlw	66
  5318  0447  00C5               	movwf	trapmf@b+2
  5319  0448  3000               	movlw	0
  5320  0449  00C0               	movwf	trapmf@a
  5321  044A  3078               	movlw	120
  5322  044B  00C1               	movwf	trapmf@a+1
  5323  044C  3042               	movlw	66
  5324  044D  00C2               	movwf	trapmf@a+2
  5325  044E  1683               	bsf	3,5	;RP0=1, select bank1
  5326  044F  1303               	bcf	3,6	;RP1=0, select bank1
  5327  0450  083C               	movf	(_x+1)^(0+128),w
  5328  0451  01F9               	clrf	___awtoft@c+1
  5329  0452  07F9               	addwf	___awtoft@c+1,f
  5330  0453  083B               	movf	_x^(0+128),w
  5331  0454  01F8               	clrf	___awtoft@c
  5332  0455  07F8               	addwf	___awtoft@c,f
  5333  0456  160A  118A  2618  120A  118A  	fcall	___awtoft
  5334  045B  0878               	movf	?___awtoft,w
  5335  045C  1283               	bcf	3,5	;RP0=0, select bank0
  5336  045D  1303               	bcf	3,6	;RP1=0, select bank0
  5337  045E  00BD               	movwf	trapmf@x
  5338  045F  0879               	movf	?___awtoft+1,w
  5339  0460  00BE               	movwf	trapmf@x+1
  5340  0461  087A               	movf	?___awtoft+2,w
  5341  0462  00BF               	movwf	trapmf@x+2
  5342  0463  120A  118A  25FA  120A  118A  	fcall	_trapmf
  5343  0468  1283               	bcf	3,5	;RP0=0, select bank0
  5344  0469  1303               	bcf	3,6	;RP1=0, select bank0
  5345  046A  083D               	movf	?_trapmf,w
  5346  046B  00CF               	movwf	___fttol@f1
  5347  046C  083E               	movf	?_trapmf+1,w
  5348  046D  00D0               	movwf	___fttol@f1+1
  5349  046E  083F               	movf	?_trapmf+2,w
  5350  046F  00D1               	movwf	___fttol@f1+2
  5351  0470  120A  118A  2750  120A  118A  	fcall	___fttol
  5352  0475  1283               	bcf	3,5	;RP0=0, select bank0
  5353  0476  1303               	bcf	3,6	;RP1=0, select bank0
  5354  0477  0850               	movf	?___fttol+1,w
  5355  0478  1683               	bsf	3,5	;RP0=1, select bank1
  5356  0479  1303               	bcf	3,6	;RP1=0, select bank1
  5357  047A  01BE               	clrf	(_y+1)^(0+128)
  5358  047B  07BE               	addwf	(_y+1)^(0+128),f
  5359  047C  1283               	bcf	3,5	;RP0=0, select bank0
  5360  047D  1303               	bcf	3,6	;RP1=0, select bank0
  5361  047E  084F               	movf	?___fttol,w
  5362  047F  1683               	bsf	3,5	;RP0=1, select bank1
  5363  0480  1303               	bcf	3,6	;RP1=0, select bank1
  5364  0481  01BD               	clrf	_y^(0+128)
  5365  0482  07BD               	addwf	_y^(0+128),f
  5366                           
  5367                           ;main.c: 303: if (y >= fop_rule3)
  5368  0483  083E               	movf	(_y+1)^(0+128),w
  5369  0484  01F9               	clrf	___awtoft@c+1
  5370  0485  07F9               	addwf	___awtoft@c+1,f
  5371  0486  083D               	movf	_y^(0+128),w
  5372  0487  01F8               	clrf	___awtoft@c
  5373  0488  07F8               	addwf	___awtoft@c,f
  5374  0489  160A  118A  2618  120A  118A  	fcall	___awtoft
  5375  048E  0878               	movf	?___awtoft,w
  5376  048F  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0490  1303               	bcf	3,6	;RP1=0, select bank0
  5378  0491  00A0               	movwf	___ftge@ff1
  5379  0492  0879               	movf	?___awtoft+1,w
  5380  0493  00A1               	movwf	___ftge@ff1+1
  5381  0494  087A               	movf	?___awtoft+2,w
  5382  0495  00A2               	movwf	___ftge@ff1+2
  5383  0496  1683               	bsf	3,5	;RP0=1, select bank1
  5384  0497  1303               	bcf	3,6	;RP1=0, select bank1
  5385  0498  082C               	movf	_fop_rule3^(0+128),w
  5386  0499  1283               	bcf	3,5	;RP0=0, select bank0
  5387  049A  1303               	bcf	3,6	;RP1=0, select bank0
  5388  049B  00A3               	movwf	___ftge@ff2
  5389  049C  1683               	bsf	3,5	;RP0=1, select bank1
  5390  049D  1303               	bcf	3,6	;RP1=0, select bank1
  5391  049E  082D               	movf	(_fop_rule3+1)^(0+128),w
  5392  049F  1283               	bcf	3,5	;RP0=0, select bank0
  5393  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  5394  04A1  00A4               	movwf	___ftge@ff2+1
  5395  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  5396  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  5397  04A4  082E               	movf	(_fop_rule3+2)^(0+128),w
  5398  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  5399  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  5400  04A7  00A5               	movwf	___ftge@ff2+2
  5401  04A8  160A  118A  2739  120A  118A  	fcall	___ftge
  5402  04AD  1C03               	btfss	3,0
  5403  04AE  2CC1               	goto	i1l2632
  5404                           
  5405                           ;main.c: 304: {
  5406                           ;main.c: 305: aumenta += fop_rule3;
  5407  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  5408  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  5409  04B1  082C               	movf	_fop_rule3^(0+128),w
  5410  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  5411  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  5412  04B4  00A0               	movwf	___ftadd@f1
  5413  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  5414  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  5415  04B7  082D               	movf	(_fop_rule3+1)^(0+128),w
  5416  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  5417  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  5418  04BA  00A1               	movwf	___ftadd@f1+1
  5419  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  5420  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  5421  04BD  082E               	movf	(_fop_rule3+2)^(0+128),w
  5422  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  5423  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  5424  04C0  2CD5               	goto	L9
  5425  04C1                     i1l2632:	
  5426                           ;main.c: 306: }
  5427                           
  5428                           
  5429                           ;main.c: 307: else
  5430                           ;main.c: 308: {
  5431                           ;main.c: 309: aumenta += y;
  5432  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  5433  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  5434  04C3  083E               	movf	(_y+1)^(0+128),w
  5435  04C4  01F9               	clrf	___awtoft@c+1
  5436  04C5  07F9               	addwf	___awtoft@c+1,f
  5437  04C6  083D               	movf	_y^(0+128),w
  5438  04C7  01F8               	clrf	___awtoft@c
  5439  04C8  07F8               	addwf	___awtoft@c,f
  5440  04C9  160A  118A  2618  120A  118A  	fcall	___awtoft
  5441  04CE  0878               	movf	?___awtoft,w
  5442  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  5443  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  5444  04D1  00A0               	movwf	___ftadd@f1
  5445  04D2  0879               	movf	?___awtoft+1,w
  5446  04D3  00A1               	movwf	___ftadd@f1+1
  5447  04D4  087A               	movf	?___awtoft+2,w
  5448  04D5                     L9:	
  5449  04D5  00A2               	movwf	___ftadd@f1+2
  5450  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  5451  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  5452  04D8  0850               	movf	Fuzzy@aumenta^(0+128),w
  5453  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  5454  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  5455  04DB  00A3               	movwf	___ftadd@f2
  5456  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  5457  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  5458  04DE  0851               	movf	(Fuzzy@aumenta+1)^(0+128),w
  5459  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  5460  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  5461  04E1  00A4               	movwf	___ftadd@f2+1
  5462  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  5463  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  5464  04E4  0852               	movf	(Fuzzy@aumenta+2)^(0+128),w
  5465  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  5466  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  5467  04E7  00A5               	movwf	___ftadd@f2+2
  5468  04E8  120A  158A  24A1  120A  118A  	fcall	___ftadd
  5469  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  5470  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  5471  04EF  0820               	movf	?___ftadd,w
  5472  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  5473  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  5474  04F2  00D0               	movwf	Fuzzy@aumenta^(0+128)
  5475  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  5476  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  5477  04F5  0821               	movf	?___ftadd+1,w
  5478  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  5479  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  5480  04F8  00D1               	movwf	(Fuzzy@aumenta+1)^(0+128)
  5481  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  5482  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  5483  04FB  0822               	movf	?___ftadd+2,w
  5484  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  5485  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  5486  04FE  00D2               	movwf	(Fuzzy@aumenta+2)^(0+128)
  5487                           
  5488                           ;main.c: 310: }
  5489                           ;main.c: 312: x=x+1;
  5490  04FF  083B               	movf	_x^(0+128),w
  5491  0500  3E01               	addlw	1
  5492  0501  00BB               	movwf	_x^(0+128)
  5493  0502  083C               	movf	(_x+1)^(0+128),w
  5494  0503  1803               	skipnc
  5495  0504  3E01               	addlw	1
  5496  0505  3E00               	addlw	0
  5497  0506  00BC               	movwf	(_x+1)^(0+128)
  5498  0507  3001               	movlw	1
  5499  0508  07C8               	addwf	Fuzzy@a_243^(0+128),f
  5500  0509  1803               	skipnc
  5501  050A  0AC9               	incf	(Fuzzy@a_243+1)^(0+128),f
  5502  050B  3000               	movlw	0
  5503  050C  07C9               	addwf	(Fuzzy@a_243+1)^(0+128),f
  5504  050D  0849               	movf	(Fuzzy@a_243+1)^(0+128),w
  5505  050E  3A80               	xorlw	128
  5506  050F  00FF               	movwf	127
  5507  0510  3080               	movlw	128
  5508  0511  027F               	subwf	127,w
  5509  0512  1D03               	skipz
  5510  0513  2D16               	goto	u307_25
  5511  0514  305B               	movlw	91
  5512  0515  0248               	subwf	Fuzzy@a_243^(0+128),w
  5513  0516                     u307_25:	
  5514  0516  1C03               	skipc
  5515  0517  2C34               	goto	i1l2628
  5516  0518                     i1l2640:	
  5517                           
  5518                           ;main.c: 313: }
  5519                           ;main.c: 315: }
  5520                           ;main.c: 318: if (deltaV < 25)
  5521  0518  3000               	movlw	0
  5522  0519  1283               	bcf	3,5	;RP0=0, select bank0
  5523  051A  1303               	bcf	3,6	;RP1=0, select bank0
  5524  051B  0266               	subwf	_deltaV+1,w
  5525  051C  3019               	movlw	25
  5526  051D  1903               	skipnz
  5527  051E  0265               	subwf	_deltaV,w
  5528  051F  1803               	skipnc
  5529  0520  2D29               	goto	i1l2644
  5530                           
  5531                           ;main.c: 319: {
  5532                           ;main.c: 320: tip = reduz;
  5533  0521  1683               	bsf	3,5	;RP0=1, select bank1
  5534  0522  1303               	bcf	3,6	;RP1=0, select bank1
  5535  0523  084D               	movf	Fuzzy@reduz^(0+128),w
  5536  0524  00C1               	movwf	Fuzzy@tip^(0+128)
  5537  0525  084E               	movf	(Fuzzy@reduz+1)^(0+128),w
  5538  0526  00C2               	movwf	(Fuzzy@tip+1)^(0+128)
  5539  0527  084F               	movf	(Fuzzy@reduz+2)^(0+128),w
  5540  0528  2D47               	goto	L6
  5541  0529                     i1l2644:	
  5542                           ;main.c: 321: }else
  5543                           
  5544                           
  5545                           ;main.c: 322: if (deltaV >= 25 && deltaV < 75)
  5546  0529  3000               	movlw	0
  5547  052A  1283               	bcf	3,5	;RP0=0, select bank0
  5548  052B  0266               	subwf	_deltaV+1,w
  5549  052C  3019               	movlw	25
  5550  052D  1903               	skipnz
  5551  052E  0265               	subwf	_deltaV,w
  5552  052F  1C03               	skipc
  5553  0530  2D40               	goto	i1l2650
  5554  0531  3000               	movlw	0
  5555  0532  0266               	subwf	_deltaV+1,w
  5556  0533  304B               	movlw	75
  5557  0534  1903               	skipnz
  5558  0535  0265               	subwf	_deltaV,w
  5559  0536  1803               	skipnc
  5560  0537  2D40               	goto	i1l2650
  5561                           
  5562                           ;main.c: 323: {
  5563                           ;main.c: 324: tip = mantem;
  5564  0538  1683               	bsf	3,5	;RP0=1, select bank1
  5565  0539  1303               	bcf	3,6	;RP1=0, select bank1
  5566  053A  084A               	movf	Fuzzy@mantem^(0+128),w
  5567  053B  00C1               	movwf	Fuzzy@tip^(0+128)
  5568  053C  084B               	movf	(Fuzzy@mantem+1)^(0+128),w
  5569  053D  00C2               	movwf	(Fuzzy@tip+1)^(0+128)
  5570  053E  084C               	movf	(Fuzzy@mantem+2)^(0+128),w
  5571  053F  2D47               	goto	L6
  5572  0540                     i1l2650:	
  5573                           ;main.c: 325: }else
  5574                           
  5575                           
  5576                           ;main.c: 326: {
  5577                           ;main.c: 327: tip = aumenta;
  5578  0540  1683               	bsf	3,5	;RP0=1, select bank1
  5579  0541  1303               	bcf	3,6	;RP1=0, select bank1
  5580  0542  0850               	movf	Fuzzy@aumenta^(0+128),w
  5581  0543  00C1               	movwf	Fuzzy@tip^(0+128)
  5582  0544  0851               	movf	(Fuzzy@aumenta+1)^(0+128),w
  5583  0545  00C2               	movwf	(Fuzzy@tip+1)^(0+128)
  5584  0546  0852               	movf	(Fuzzy@aumenta+2)^(0+128),w
  5585  0547                     L6:	
  5586  0547  00C3               	movwf	(Fuzzy@tip+2)^(0+128)
  5587                           
  5588                           ;main.c: 328: }
  5589                           ;main.c: 331: total_area = 90;
  5590  0548  3000               	movlw	0
  5591  0549  00B2               	movwf	_total_area^(0+128)
  5592  054A  30B4               	movlw	180
  5593  054B  00B3               	movwf	(_total_area+1)^(0+128)
  5594  054C  3042               	movlw	66
  5595  054D  00B4               	movwf	(_total_area+2)^(0+128)
  5596                           
  5597                           ;main.c: 332: sum = 0;
  5598  054E  3000               	movlw	0
  5599  054F  00AF               	movwf	_sum^(0+128)
  5600  0550  3000               	movlw	0
  5601  0551  00B0               	movwf	(_sum+1)^(0+128)
  5602  0552  3000               	movlw	0
  5603  0553  00B1               	movwf	(_sum+2)^(0+128)
  5604                           
  5605                           ;main.c: 333: sum = sum + tip;
  5606  0554  0841               	movf	Fuzzy@tip^(0+128),w
  5607  0555  1283               	bcf	3,5	;RP0=0, select bank0
  5608  0556  1303               	bcf	3,6	;RP1=0, select bank0
  5609  0557  00A0               	movwf	___ftadd@f1
  5610  0558  1683               	bsf	3,5	;RP0=1, select bank1
  5611  0559  1303               	bcf	3,6	;RP1=0, select bank1
  5612  055A  0842               	movf	(Fuzzy@tip+1)^(0+128),w
  5613  055B  1283               	bcf	3,5	;RP0=0, select bank0
  5614  055C  1303               	bcf	3,6	;RP1=0, select bank0
  5615  055D  00A1               	movwf	___ftadd@f1+1
  5616  055E  1683               	bsf	3,5	;RP0=1, select bank1
  5617  055F  1303               	bcf	3,6	;RP1=0, select bank1
  5618  0560  0843               	movf	(Fuzzy@tip+2)^(0+128),w
  5619  0561  1283               	bcf	3,5	;RP0=0, select bank0
  5620  0562  1303               	bcf	3,6	;RP1=0, select bank0
  5621  0563  00A2               	movwf	___ftadd@f1+2
  5622  0564  1683               	bsf	3,5	;RP0=1, select bank1
  5623  0565  1303               	bcf	3,6	;RP1=0, select bank1
  5624  0566  082F               	movf	_sum^(0+128),w
  5625  0567  1283               	bcf	3,5	;RP0=0, select bank0
  5626  0568  1303               	bcf	3,6	;RP1=0, select bank0
  5627  0569  00A3               	movwf	___ftadd@f2
  5628  056A  1683               	bsf	3,5	;RP0=1, select bank1
  5629  056B  1303               	bcf	3,6	;RP1=0, select bank1
  5630  056C  0830               	movf	(_sum+1)^(0+128),w
  5631  056D  1283               	bcf	3,5	;RP0=0, select bank0
  5632  056E  1303               	bcf	3,6	;RP1=0, select bank0
  5633  056F  00A4               	movwf	___ftadd@f2+1
  5634  0570  1683               	bsf	3,5	;RP0=1, select bank1
  5635  0571  1303               	bcf	3,6	;RP1=0, select bank1
  5636  0572  0831               	movf	(_sum+2)^(0+128),w
  5637  0573  1283               	bcf	3,5	;RP0=0, select bank0
  5638  0574  1303               	bcf	3,6	;RP1=0, select bank0
  5639  0575  00A5               	movwf	___ftadd@f2+2
  5640  0576  120A  158A  24A1  120A  118A  	fcall	___ftadd
  5641  057B  1283               	bcf	3,5	;RP0=0, select bank0
  5642  057C  1303               	bcf	3,6	;RP1=0, select bank0
  5643  057D  0820               	movf	?___ftadd,w
  5644  057E  1683               	bsf	3,5	;RP0=1, select bank1
  5645  057F  1303               	bcf	3,6	;RP1=0, select bank1
  5646  0580  00AF               	movwf	_sum^(0+128)
  5647  0581  1283               	bcf	3,5	;RP0=0, select bank0
  5648  0582  1303               	bcf	3,6	;RP1=0, select bank0
  5649  0583  0821               	movf	?___ftadd+1,w
  5650  0584  1683               	bsf	3,5	;RP0=1, select bank1
  5651  0585  1303               	bcf	3,6	;RP1=0, select bank1
  5652  0586  00B0               	movwf	(_sum+1)^(0+128)
  5653  0587  1283               	bcf	3,5	;RP0=0, select bank0
  5654  0588  1303               	bcf	3,6	;RP1=0, select bank0
  5655  0589  0822               	movf	?___ftadd+2,w
  5656  058A  1683               	bsf	3,5	;RP0=1, select bank1
  5657  058B  1303               	bcf	3,6	;RP1=0, select bank1
  5658  058C  00B1               	movwf	(_sum+2)^(0+128)
  5659                           
  5660                           ;main.c: 336: ativa_fan = sum/total_area;
  5661  058D  0832               	movf	_total_area^(0+128),w
  5662  058E  1283               	bcf	3,5	;RP0=0, select bank0
  5663  058F  1303               	bcf	3,6	;RP1=0, select bank0
  5664  0590  00AD               	movwf	___ftdiv@f2
  5665  0591  1683               	bsf	3,5	;RP0=1, select bank1
  5666  0592  1303               	bcf	3,6	;RP1=0, select bank1
  5667  0593  0833               	movf	(_total_area+1)^(0+128),w
  5668  0594  1283               	bcf	3,5	;RP0=0, select bank0
  5669  0595  1303               	bcf	3,6	;RP1=0, select bank0
  5670  0596  00AE               	movwf	___ftdiv@f2+1
  5671  0597  1683               	bsf	3,5	;RP0=1, select bank1
  5672  0598  1303               	bcf	3,6	;RP1=0, select bank1
  5673  0599  0834               	movf	(_total_area+2)^(0+128),w
  5674  059A  1283               	bcf	3,5	;RP0=0, select bank0
  5675  059B  1303               	bcf	3,6	;RP1=0, select bank0
  5676  059C  00AF               	movwf	___ftdiv@f2+2
  5677  059D  1683               	bsf	3,5	;RP0=1, select bank1
  5678  059E  1303               	bcf	3,6	;RP1=0, select bank1
  5679  059F  082F               	movf	_sum^(0+128),w
  5680  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  5681  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  5682  05A2  00B0               	movwf	___ftdiv@f1
  5683  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  5684  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  5685  05A5  0830               	movf	(_sum+1)^(0+128),w
  5686  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  5687  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  5688  05A8  00B1               	movwf	___ftdiv@f1+1
  5689  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  5690  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  5691  05AB  0831               	movf	(_sum+2)^(0+128),w
  5692  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  5693  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  5694  05AE  00B2               	movwf	___ftdiv@f1+2
  5695  05AF  120A  158A  20C6  120A  118A  	fcall	___ftdiv
  5696  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  5697  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  5698  05B6  082D               	movf	?___ftdiv,w
  5699  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  5700  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  5701  05B9  00A0               	movwf	_ativa_fan^(0+128)
  5702  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  5703  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  5704  05BC  082E               	movf	?___ftdiv+1,w
  5705  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  5706  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  5707  05BF  00A1               	movwf	(_ativa_fan+1)^(0+128)
  5708  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  5709  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  5710  05C2  082F               	movf	?___ftdiv+2,w
  5711  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  5712  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  5713  05C5  00A2               	movwf	(_ativa_fan+2)^(0+128)
  5714                           
  5715                           ;main.c: 339: ativa_fan = ativa_fan*100;
  5716  05C6  3000               	movlw	0
  5717  05C7  00F8               	movwf	___ftmul@f1
  5718  05C8  30C8               	movlw	200
  5719  05C9  00F9               	movwf	___ftmul@f1+1
  5720  05CA  3042               	movlw	66
  5721  05CB  00FA               	movwf	___ftmul@f1+2
  5722  05CC  0820               	movf	_ativa_fan^(0+128),w
  5723  05CD  00FB               	movwf	___ftmul@f2
  5724  05CE  0821               	movf	(_ativa_fan+1)^(0+128),w
  5725  05CF  00FC               	movwf	___ftmul@f2+1
  5726  05D0  0822               	movf	(_ativa_fan+2)^(0+128),w
  5727  05D1  00FD               	movwf	___ftmul@f2+2
  5728  05D2  120A  158A  22F7  120A  118A  	fcall	___ftmul
  5729  05D7  0878               	movf	?___ftmul,w
  5730  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  5731  05D9  1303               	bcf	3,6	;RP1=0, select bank1
  5732  05DA  00A0               	movwf	_ativa_fan^(0+128)
  5733  05DB  0879               	movf	?___ftmul+1,w
  5734  05DC  00A1               	movwf	(_ativa_fan+1)^(0+128)
  5735  05DD  087A               	movf	?___ftmul+2,w
  5736  05DE  00A2               	movwf	(_ativa_fan+2)^(0+128)
  5737                           
  5738                           ;main.c: 345: if (freio = 1)
  5739  05DF  3001               	movlw	1
  5740  05E0  00BF               	movwf	Fuzzy@freio^(0+128)
  5741  05E1  3000               	movlw	0
  5742  05E2  00C0               	movwf	(Fuzzy@freio^(0+128)+1)
  5743                           
  5744                           ;main.c: 346: {
  5745                           ;main.c: 347: if (deltaV >0 && deltaV < 1020)
  5746  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  5747  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  5748  05E5  0866               	movf	_deltaV+1,w
  5749  05E6  0465               	iorwf	_deltaV,w
  5750  05E7  1903               	skipnz
  5751  05E8  0008               	return
  5752  05E9  3003               	movlw	3
  5753  05EA  0266               	subwf	_deltaV+1,w
  5754  05EB  30FC               	movlw	252
  5755  05EC  1903               	skipnz
  5756  05ED  0265               	subwf	_deltaV,w
  5757  05EE  1803               	skipnc
  5758  05EF  0008               	return
  5759                           
  5760                           ;main.c: 348: {
  5761                           ;main.c: 349: PWM_DutyCycle2(deltaV);
  5762  05F0  0866               	movf	_deltaV+1,w
  5763  05F1  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  5764  05F2  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  5765  05F3  0865               	movf	_deltaV,w
  5766  05F4  01F0               	clrf	i1PWM_DutyCycle2@valor
  5767  05F5  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  5768  05F6  160A  118A  25A3   	fcall	i1_PWM_DutyCycle2
  5769                           
  5770                           ;main.c: 350: }
  5771                           ;main.c: 351: }else
  5772  05F9  0008               	return
  5773  05FA                     __end_of_Fuzzy:	
  5774                           ;main.c: 354: {
  5775                           ;main.c: 355: PWM_DutyCycle2(deltaV);
  5776                           
  5777                           ;main.c: 352: {
  5778                           ;main.c: 353: if (deltaV > 0 && deltaV < 1020)
  5779                           
  5780                           
  5781                           	psect	text23
  5782  15A3                     __ptext23:	
  5783 ;; *************** function i1_PWM_DutyCycle2 *****************
  5784 ;; Defined at:
  5785 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  valor           2    0[COMMON] int 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;		None               void
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5799 ;;      Params:         2       0       0       0       0
  5800 ;;      Locals:         0       0       0       0       0
  5801 ;;      Temps:          2       0       0       0       0
  5802 ;;      Totals:         4       0       0       0       0
  5803 ;;Total ram usage:        4 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_Fuzzy
  5809 ;;		_ISR
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           
  5814                           ;psect for function i1_PWM_DutyCycle2
  5815  15A3                     i1_PWM_DutyCycle2:	
  5816                           
  5817                           ;pwm.c: 98: CCPR2L = valor >> 2;
  5818                           
  5819                           ;incstack = 0
  5820                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  5821  15A3  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  5822  15A4  00F3               	movwf	??i1_PWM_DutyCycle2+1
  5823  15A5  0870               	movf	i1PWM_DutyCycle2@valor,w
  5824  15A6  00F2               	movwf	??i1_PWM_DutyCycle2
  5825  15A7  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  5826  15A8  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  5827  15A9  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  5828  15AA  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  5829  15AB  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  5830  15AC  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  5831  15AD  0872               	movf	??i1_PWM_DutyCycle2,w
  5832  15AE  1283               	bcf	3,5	;RP0=0, select bank0
  5833  15AF  1303               	bcf	3,6	;RP1=0, select bank0
  5834  15B0  009B               	movwf	27	;volatile
  5835                           
  5836                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  5837  15B1  0870               	movf	i1PWM_DutyCycle2@valor,w
  5838  15B2  00F2               	movwf	??i1_PWM_DutyCycle2
  5839  15B3  3003               	movlw	3
  5840  15B4                     u288_25:	
  5841  15B4  1003               	clrc
  5842  15B5  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  5843  15B6  3EFF               	addlw	-1
  5844  15B7  1D03               	skipz
  5845  15B8  2DB4               	goto	u288_25
  5846  15B9  1003               	clrc
  5847  15BA  0D72               	rlf	??i1_PWM_DutyCycle2,w
  5848  15BB  380C               	iorlw	12
  5849  15BC  009D               	movwf	29	;volatile
  5850  15BD  0008               	return
  5851  15BE                     __end_ofi1_PWM_DutyCycle2:	
  5852                           
  5853                           	psect	text24
  5854  0DAA                     __ptext24:	
  5855 ;; *************** function _trimf *****************
  5856 ;; Defined at:
  5857 ;;		line 66 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  x               3   29[BANK0 ] float 
  5860 ;;  a               3   32[BANK0 ] float 
  5861 ;;  b               3   35[BANK0 ] float 
  5862 ;;  c               3   38[BANK0 ] float 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  ua              3   41[BANK0 ] float 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  3   29[BANK0 ] float 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0, pclath, cstack
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5874 ;;      Params:         0      12       0       0       0
  5875 ;;      Locals:         0       3       0       0       0
  5876 ;;      Temps:          0       0       0       0       0
  5877 ;;      Totals:         0      15       0       0       0
  5878 ;;Total ram usage:       15 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    2
  5881 ;; This function calls:
  5882 ;;		___ftadd
  5883 ;;		___ftdiv
  5884 ;;		___ftge
  5885 ;;		___ftneg
  5886 ;; This function is called by:
  5887 ;;		_Fuzzy
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function _trimf
  5893  0DAA                     _trimf:	
  5894                           
  5895                           ;main.c: 68: float ua = 0;
  5896                           
  5897                           ;incstack = 0
  5898                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  5899  0DAA  3000               	movlw	0
  5900  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  5901  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  5902  0DAD  00C9               	movwf	trimf@ua
  5903  0DAE  3000               	movlw	0
  5904  0DAF  00CA               	movwf	trimf@ua+1
  5905  0DB0  3000               	movlw	0
  5906  0DB1  00CB               	movwf	trimf@ua+2
  5907                           
  5908                           ;main.c: 70: if (x <= a)
  5909  0DB2  0840               	movf	trimf@a,w
  5910  0DB3  00A0               	movwf	___ftge@ff1
  5911  0DB4  0841               	movf	trimf@a+1,w
  5912  0DB5  00A1               	movwf	___ftge@ff1+1
  5913  0DB6  0842               	movf	trimf@a+2,w
  5914  0DB7  00A2               	movwf	___ftge@ff1+2
  5915  0DB8  083D               	movf	trimf@x,w
  5916  0DB9  00A3               	movwf	___ftge@ff2
  5917  0DBA  083E               	movf	trimf@x+1,w
  5918  0DBB  00A4               	movwf	___ftge@ff2+1
  5919  0DBC  083F               	movf	trimf@x+2,w
  5920  0DBD  00A5               	movwf	___ftge@ff2+2
  5921  0DBE  160A  118A  2739  120A  158A  	fcall	___ftge
  5922  0DC3  1803               	btfsc	3,0
  5923  0DC4  2EBD               	goto	L14
  5924                           
  5925                           ;main.c: 72: else if ((a < x) && (x <= b))
  5926                           
  5927                           ;main.c: 71: ua = 0;
  5928  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  5929  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  5930  0DC7  0840               	movf	trimf@a,w
  5931  0DC8  00A0               	movwf	___ftge@ff1
  5932  0DC9  0841               	movf	trimf@a+1,w
  5933  0DCA  00A1               	movwf	___ftge@ff1+1
  5934  0DCB  0842               	movf	trimf@a+2,w
  5935  0DCC  00A2               	movwf	___ftge@ff1+2
  5936  0DCD  083D               	movf	trimf@x,w
  5937  0DCE  00A3               	movwf	___ftge@ff2
  5938  0DCF  083E               	movf	trimf@x+1,w
  5939  0DD0  00A4               	movwf	___ftge@ff2+1
  5940  0DD1  083F               	movf	trimf@x+2,w
  5941  0DD2  00A5               	movwf	___ftge@ff2+2
  5942  0DD3  160A  118A  2739  120A  158A  	fcall	___ftge
  5943  0DD8  1803               	btfsc	3,0
  5944  0DD9  2E23               	goto	i1l2220
  5945  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5946  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5947  0DDC  0843               	movf	trimf@b,w
  5948  0DDD  00A0               	movwf	___ftge@ff1
  5949  0DDE  0844               	movf	trimf@b+1,w
  5950  0DDF  00A1               	movwf	___ftge@ff1+1
  5951  0DE0  0845               	movf	trimf@b+2,w
  5952  0DE1  00A2               	movwf	___ftge@ff1+2
  5953  0DE2  083D               	movf	trimf@x,w
  5954  0DE3  00A3               	movwf	___ftge@ff2
  5955  0DE4  083E               	movf	trimf@x+1,w
  5956  0DE5  00A4               	movwf	___ftge@ff2+1
  5957  0DE6  083F               	movf	trimf@x+2,w
  5958  0DE7  00A5               	movwf	___ftge@ff2+2
  5959  0DE8  160A  118A  2739  120A  158A  	fcall	___ftge
  5960  0DED  1C03               	btfss	3,0
  5961  0DEE  2E23               	goto	i1l2220
  5962                           
  5963                           ;main.c: 73: ua = ((x - a) / (b - a));
  5964  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  5965  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  5966  0DF1  0843               	movf	trimf@b,w
  5967  0DF2  00A0               	movwf	___ftadd@f1
  5968  0DF3  0844               	movf	trimf@b+1,w
  5969  0DF4  00A1               	movwf	___ftadd@f1+1
  5970  0DF5  0845               	movf	trimf@b+2,w
  5971  0DF6  00A2               	movwf	___ftadd@f1+2
  5972  0DF7  0840               	movf	trimf@a,w
  5973  0DF8  00F0               	movwf	___ftneg@f1
  5974  0DF9  0841               	movf	trimf@a+1,w
  5975  0DFA  00F1               	movwf	___ftneg@f1+1
  5976  0DFB  0842               	movf	trimf@a+2,w
  5977  0DFC  00F2               	movwf	___ftneg@f1+2
  5978  0DFD  160A  118A  2517  120A  158A  	fcall	___ftneg
  5979  0E02  0870               	movf	?___ftneg,w
  5980  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  5981  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  5982  0E05  00A3               	movwf	___ftadd@f2
  5983  0E06  0871               	movf	?___ftneg+1,w
  5984  0E07  00A4               	movwf	___ftadd@f2+1
  5985  0E08  0872               	movf	?___ftneg+2,w
  5986  0E09  00A5               	movwf	___ftadd@f2+2
  5987  0E0A  120A  158A  24A1  120A  158A  	fcall	___ftadd
  5988  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  5989  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  5990  0E11  0820               	movf	?___ftadd,w
  5991  0E12  00AD               	movwf	___ftdiv@f2
  5992  0E13  0821               	movf	?___ftadd+1,w
  5993  0E14  00AE               	movwf	___ftdiv@f2+1
  5994  0E15  0822               	movf	?___ftadd+2,w
  5995  0E16  00AF               	movwf	___ftdiv@f2+2
  5996  0E17  083D               	movf	trimf@x,w
  5997  0E18  00A0               	movwf	___ftadd@f1
  5998  0E19  083E               	movf	trimf@x+1,w
  5999  0E1A  00A1               	movwf	___ftadd@f1+1
  6000  0E1B  083F               	movf	trimf@x+2,w
  6001  0E1C  00A2               	movwf	___ftadd@f1+2
  6002  0E1D  0840               	movf	trimf@a,w
  6003  0E1E  00F0               	movwf	___ftneg@f1
  6004  0E1F  0841               	movf	trimf@a+1,w
  6005  0E20  00F1               	movwf	___ftneg@f1+1
  6006  0E21  0842               	movf	trimf@a+2,w
  6007  0E22  2E80               	goto	L15
  6008  0E23                     i1l2220:	
  6009                           
  6010                           ;main.c: 74: else if ((b < x) && (x <= c))
  6011  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  6012  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  6013  0E25  0843               	movf	trimf@b,w
  6014  0E26  00A0               	movwf	___ftge@ff1
  6015  0E27  0844               	movf	trimf@b+1,w
  6016  0E28  00A1               	movwf	___ftge@ff1+1
  6017  0E29  0845               	movf	trimf@b+2,w
  6018  0E2A  00A2               	movwf	___ftge@ff1+2
  6019  0E2B  083D               	movf	trimf@x,w
  6020  0E2C  00A3               	movwf	___ftge@ff2
  6021  0E2D  083E               	movf	trimf@x+1,w
  6022  0E2E  00A4               	movwf	___ftge@ff2+1
  6023  0E2F  083F               	movf	trimf@x+2,w
  6024  0E30  00A5               	movwf	___ftge@ff2+2
  6025  0E31  160A  118A  2739  120A  158A  	fcall	___ftge
  6026  0E36  1803               	btfsc	3,0
  6027  0E37  2EA8               	goto	i1l2226
  6028  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  6029  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  6030  0E3A  0846               	movf	trimf@c,w
  6031  0E3B  00A0               	movwf	___ftge@ff1
  6032  0E3C  0847               	movf	trimf@c+1,w
  6033  0E3D  00A1               	movwf	___ftge@ff1+1
  6034  0E3E  0848               	movf	trimf@c+2,w
  6035  0E3F  00A2               	movwf	___ftge@ff1+2
  6036  0E40  083D               	movf	trimf@x,w
  6037  0E41  00A3               	movwf	___ftge@ff2
  6038  0E42  083E               	movf	trimf@x+1,w
  6039  0E43  00A4               	movwf	___ftge@ff2+1
  6040  0E44  083F               	movf	trimf@x+2,w
  6041  0E45  00A5               	movwf	___ftge@ff2+2
  6042  0E46  160A  118A  2739  120A  158A  	fcall	___ftge
  6043  0E4B  1C03               	btfss	3,0
  6044  0E4C  2EA8               	goto	i1l2226
  6045                           
  6046                           ;main.c: 75: ua = ((x - c) / (b - c));
  6047  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  6048  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  6049  0E4F  0843               	movf	trimf@b,w
  6050  0E50  00A0               	movwf	___ftadd@f1
  6051  0E51  0844               	movf	trimf@b+1,w
  6052  0E52  00A1               	movwf	___ftadd@f1+1
  6053  0E53  0845               	movf	trimf@b+2,w
  6054  0E54  00A2               	movwf	___ftadd@f1+2
  6055  0E55  0846               	movf	trimf@c,w
  6056  0E56  00F0               	movwf	___ftneg@f1
  6057  0E57  0847               	movf	trimf@c+1,w
  6058  0E58  00F1               	movwf	___ftneg@f1+1
  6059  0E59  0848               	movf	trimf@c+2,w
  6060  0E5A  00F2               	movwf	___ftneg@f1+2
  6061  0E5B  160A  118A  2517  120A  158A  	fcall	___ftneg
  6062  0E60  0870               	movf	?___ftneg,w
  6063  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  6064  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  6065  0E63  00A3               	movwf	___ftadd@f2
  6066  0E64  0871               	movf	?___ftneg+1,w
  6067  0E65  00A4               	movwf	___ftadd@f2+1
  6068  0E66  0872               	movf	?___ftneg+2,w
  6069  0E67  00A5               	movwf	___ftadd@f2+2
  6070  0E68  120A  158A  24A1  120A  158A  	fcall	___ftadd
  6071  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  6072  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  6073  0E6F  0820               	movf	?___ftadd,w
  6074  0E70  00AD               	movwf	___ftdiv@f2
  6075  0E71  0821               	movf	?___ftadd+1,w
  6076  0E72  00AE               	movwf	___ftdiv@f2+1
  6077  0E73  0822               	movf	?___ftadd+2,w
  6078  0E74  00AF               	movwf	___ftdiv@f2+2
  6079  0E75  083D               	movf	trimf@x,w
  6080  0E76  00A0               	movwf	___ftadd@f1
  6081  0E77  083E               	movf	trimf@x+1,w
  6082  0E78  00A1               	movwf	___ftadd@f1+1
  6083  0E79  083F               	movf	trimf@x+2,w
  6084  0E7A  00A2               	movwf	___ftadd@f1+2
  6085  0E7B  0846               	movf	trimf@c,w
  6086  0E7C  00F0               	movwf	___ftneg@f1
  6087  0E7D  0847               	movf	trimf@c+1,w
  6088  0E7E  00F1               	movwf	___ftneg@f1+1
  6089  0E7F  0848               	movf	trimf@c+2,w
  6090  0E80                     L15:	
  6091  0E80  00F2               	movwf	___ftneg@f1+2
  6092  0E81  160A  118A  2517  120A  158A  	fcall	___ftneg
  6093  0E86  0870               	movf	?___ftneg,w
  6094  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  6095  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  6096  0E89  00A3               	movwf	___ftadd@f2
  6097  0E8A  0871               	movf	?___ftneg+1,w
  6098  0E8B  00A4               	movwf	___ftadd@f2+1
  6099  0E8C  0872               	movf	?___ftneg+2,w
  6100  0E8D  00A5               	movwf	___ftadd@f2+2
  6101  0E8E  120A  158A  24A1  120A  158A  	fcall	___ftadd
  6102  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  6103  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  6104  0E95  0820               	movf	?___ftadd,w
  6105  0E96  00B0               	movwf	___ftdiv@f1
  6106  0E97  0821               	movf	?___ftadd+1,w
  6107  0E98  00B1               	movwf	___ftdiv@f1+1
  6108  0E99  0822               	movf	?___ftadd+2,w
  6109  0E9A  00B2               	movwf	___ftdiv@f1+2
  6110  0E9B  120A  158A  20C6  120A  158A  	fcall	___ftdiv
  6111  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  6112  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  6113  0EA2  082D               	movf	?___ftdiv,w
  6114  0EA3  00C9               	movwf	trimf@ua
  6115  0EA4  082E               	movf	?___ftdiv+1,w
  6116  0EA5  00CA               	movwf	trimf@ua+1
  6117  0EA6  082F               	movf	?___ftdiv+2,w
  6118  0EA7  2EC4               	goto	L12
  6119  0EA8                     i1l2226:	
  6120                           
  6121                           ;main.c: 76: else if (x > c)
  6122  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  6123  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  6124  0EAA  0846               	movf	trimf@c,w
  6125  0EAB  00A0               	movwf	___ftge@ff1
  6126  0EAC  0847               	movf	trimf@c+1,w
  6127  0EAD  00A1               	movwf	___ftge@ff1+1
  6128  0EAE  0848               	movf	trimf@c+2,w
  6129  0EAF  00A2               	movwf	___ftge@ff1+2
  6130  0EB0  083D               	movf	trimf@x,w
  6131  0EB1  00A3               	movwf	___ftge@ff2
  6132  0EB2  083E               	movf	trimf@x+1,w
  6133  0EB3  00A4               	movwf	___ftge@ff2+1
  6134  0EB4  083F               	movf	trimf@x+2,w
  6135  0EB5  00A5               	movwf	___ftge@ff2+2
  6136  0EB6  160A  118A  2739  120A  158A  	fcall	___ftge
  6137  0EBB  1803               	btfsc	3,0
  6138  0EBC  2EC5               	goto	i1l112
  6139  0EBD                     L14:	
  6140                           
  6141                           ;main.c: 77: ua = 0;
  6142  0EBD  3000               	movlw	0
  6143  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  6144  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  6145  0EC0  00C9               	movwf	trimf@ua
  6146  0EC1  3000               	movlw	0
  6147  0EC2  00CA               	movwf	trimf@ua+1
  6148  0EC3  3000               	movlw	0
  6149  0EC4                     L12:	
  6150  0EC4  00CB               	movwf	trimf@ua+2
  6151  0EC5                     i1l112:	
  6152                           
  6153                           ;main.c: 79: return(ua);
  6154  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  6155  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  6156  0EC7  0849               	movf	trimf@ua,w
  6157  0EC8  00BD               	movwf	?_trimf
  6158  0EC9  084A               	movf	trimf@ua+1,w
  6159  0ECA  00BE               	movwf	?_trimf+1
  6160  0ECB  084B               	movf	trimf@ua+2,w
  6161  0ECC  00BF               	movwf	?_trimf+2
  6162  0ECD  0008               	return
  6163  0ECE                     __end_of_trimf:	
  6164                           
  6165                           	psect	text25
  6166  05FA                     __ptext25:	
  6167 ;; *************** function _trapmf *****************
  6168 ;; Defined at:
  6169 ;;		line 85 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  x               3   29[BANK0 ] float 
  6172 ;;  a               3   32[BANK0 ] float 
  6173 ;;  b               3   35[BANK0 ] float 
  6174 ;;  c               3   38[BANK0 ] float 
  6175 ;;  d               3   41[BANK0 ] float 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  ua              3   44[BANK0 ] float 
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  3   29[BANK0 ] float 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2, status,0, pclath, cstack
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6187 ;;      Params:         0      15       0       0       0
  6188 ;;      Locals:         0       3       0       0       0
  6189 ;;      Temps:          0       0       0       0       0
  6190 ;;      Totals:         0      18       0       0       0
  6191 ;;Total ram usage:       18 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    2
  6194 ;; This function calls:
  6195 ;;		___ftadd
  6196 ;;		___ftdiv
  6197 ;;		___ftge
  6198 ;;		___ftneg
  6199 ;; This function is called by:
  6200 ;;		_Fuzzy
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           
  6205                           ;psect for function _trapmf
  6206  05FA                     _trapmf:	
  6207                           
  6208                           ;main.c: 87: float ua = 0;
  6209                           
  6210                           ;incstack = 0
  6211                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  6212  05FA  3000               	movlw	0
  6213  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  6214  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  6215  05FD  00CC               	movwf	trapmf@ua
  6216  05FE  3000               	movlw	0
  6217  05FF  00CD               	movwf	trapmf@ua+1
  6218  0600  3000               	movlw	0
  6219  0601  00CE               	movwf	trapmf@ua+2
  6220                           
  6221                           ;main.c: 89: if (x <= a)
  6222  0602  0840               	movf	trapmf@a,w
  6223  0603  00A0               	movwf	___ftge@ff1
  6224  0604  0841               	movf	trapmf@a+1,w
  6225  0605  00A1               	movwf	___ftge@ff1+1
  6226  0606  0842               	movf	trapmf@a+2,w
  6227  0607  00A2               	movwf	___ftge@ff1+2
  6228  0608  083D               	movf	trapmf@x,w
  6229  0609  00A3               	movwf	___ftge@ff2
  6230  060A  083E               	movf	trapmf@x+1,w
  6231  060B  00A4               	movwf	___ftge@ff2+1
  6232  060C  083F               	movf	trapmf@x+2,w
  6233  060D  00A5               	movwf	___ftge@ff2+2
  6234  060E  160A  118A  2739  120A  118A  	fcall	___ftge
  6235  0613  1803               	btfsc	3,0
  6236  0614  2F3F               	goto	L20
  6237                           
  6238                           ;main.c: 91: else if ((a < x) && (x <= b))
  6239                           
  6240                           ;main.c: 90: ua = 0;
  6241  0615  1283               	bcf	3,5	;RP0=0, select bank0
  6242  0616  1303               	bcf	3,6	;RP1=0, select bank0
  6243  0617  0840               	movf	trapmf@a,w
  6244  0618  00A0               	movwf	___ftge@ff1
  6245  0619  0841               	movf	trapmf@a+1,w
  6246  061A  00A1               	movwf	___ftge@ff1+1
  6247  061B  0842               	movf	trapmf@a+2,w
  6248  061C  00A2               	movwf	___ftge@ff1+2
  6249  061D  083D               	movf	trapmf@x,w
  6250  061E  00A3               	movwf	___ftge@ff2
  6251  061F  083E               	movf	trapmf@x+1,w
  6252  0620  00A4               	movwf	___ftge@ff2+1
  6253  0621  083F               	movf	trapmf@x+2,w
  6254  0622  00A5               	movwf	___ftge@ff2+2
  6255  0623  160A  118A  2739  120A  118A  	fcall	___ftge
  6256  0628  1803               	btfsc	3,0
  6257  0629  2E73               	goto	i1l2244
  6258  062A  1283               	bcf	3,5	;RP0=0, select bank0
  6259  062B  1303               	bcf	3,6	;RP1=0, select bank0
  6260  062C  0843               	movf	trapmf@b,w
  6261  062D  00A0               	movwf	___ftge@ff1
  6262  062E  0844               	movf	trapmf@b+1,w
  6263  062F  00A1               	movwf	___ftge@ff1+1
  6264  0630  0845               	movf	trapmf@b+2,w
  6265  0631  00A2               	movwf	___ftge@ff1+2
  6266  0632  083D               	movf	trapmf@x,w
  6267  0633  00A3               	movwf	___ftge@ff2
  6268  0634  083E               	movf	trapmf@x+1,w
  6269  0635  00A4               	movwf	___ftge@ff2+1
  6270  0636  083F               	movf	trapmf@x+2,w
  6271  0637  00A5               	movwf	___ftge@ff2+2
  6272  0638  160A  118A  2739  120A  118A  	fcall	___ftge
  6273  063D  1C03               	btfss	3,0
  6274  063E  2E73               	goto	i1l2244
  6275                           
  6276                           ;main.c: 92: ua = ((x - a) / (b - a));
  6277  063F  1283               	bcf	3,5	;RP0=0, select bank0
  6278  0640  1303               	bcf	3,6	;RP1=0, select bank0
  6279  0641  0843               	movf	trapmf@b,w
  6280  0642  00A0               	movwf	___ftadd@f1
  6281  0643  0844               	movf	trapmf@b+1,w
  6282  0644  00A1               	movwf	___ftadd@f1+1
  6283  0645  0845               	movf	trapmf@b+2,w
  6284  0646  00A2               	movwf	___ftadd@f1+2
  6285  0647  0840               	movf	trapmf@a,w
  6286  0648  00F0               	movwf	___ftneg@f1
  6287  0649  0841               	movf	trapmf@a+1,w
  6288  064A  00F1               	movwf	___ftneg@f1+1
  6289  064B  0842               	movf	trapmf@a+2,w
  6290  064C  00F2               	movwf	___ftneg@f1+2
  6291  064D  160A  118A  2517  120A  118A  	fcall	___ftneg
  6292  0652  0870               	movf	?___ftneg,w
  6293  0653  1283               	bcf	3,5	;RP0=0, select bank0
  6294  0654  1303               	bcf	3,6	;RP1=0, select bank0
  6295  0655  00A3               	movwf	___ftadd@f2
  6296  0656  0871               	movf	?___ftneg+1,w
  6297  0657  00A4               	movwf	___ftadd@f2+1
  6298  0658  0872               	movf	?___ftneg+2,w
  6299  0659  00A5               	movwf	___ftadd@f2+2
  6300  065A  120A  158A  24A1  120A  118A  	fcall	___ftadd
  6301  065F  1283               	bcf	3,5	;RP0=0, select bank0
  6302  0660  1303               	bcf	3,6	;RP1=0, select bank0
  6303  0661  0820               	movf	?___ftadd,w
  6304  0662  00AD               	movwf	___ftdiv@f2
  6305  0663  0821               	movf	?___ftadd+1,w
  6306  0664  00AE               	movwf	___ftdiv@f2+1
  6307  0665  0822               	movf	?___ftadd+2,w
  6308  0666  00AF               	movwf	___ftdiv@f2+2
  6309  0667  083D               	movf	trapmf@x,w
  6310  0668  00A0               	movwf	___ftadd@f1
  6311  0669  083E               	movf	trapmf@x+1,w
  6312  066A  00A1               	movwf	___ftadd@f1+1
  6313  066B  083F               	movf	trapmf@x+2,w
  6314  066C  00A2               	movwf	___ftadd@f1+2
  6315  066D  0840               	movf	trapmf@a,w
  6316  066E  00F0               	movwf	___ftneg@f1
  6317  066F  0841               	movf	trapmf@a+1,w
  6318  0670  00F1               	movwf	___ftneg@f1+1
  6319  0671  0842               	movf	trapmf@a+2,w
  6320  0672  2F02               	goto	L22
  6321  0673                     i1l2244:	
  6322                           
  6323                           ;main.c: 93: else if ((b <= x) && (x <= c))
  6324  0673  1283               	bcf	3,5	;RP0=0, select bank0
  6325  0674  1303               	bcf	3,6	;RP1=0, select bank0
  6326  0675  083D               	movf	trapmf@x,w
  6327  0676  00A0               	movwf	___ftge@ff1
  6328  0677  083E               	movf	trapmf@x+1,w
  6329  0678  00A1               	movwf	___ftge@ff1+1
  6330  0679  083F               	movf	trapmf@x+2,w
  6331  067A  00A2               	movwf	___ftge@ff1+2
  6332  067B  0843               	movf	trapmf@b,w
  6333  067C  00A3               	movwf	___ftge@ff2
  6334  067D  0844               	movf	trapmf@b+1,w
  6335  067E  00A4               	movwf	___ftge@ff2+1
  6336  067F  0845               	movf	trapmf@b+2,w
  6337  0680  00A5               	movwf	___ftge@ff2+2
  6338  0681  160A  118A  2739  120A  118A  	fcall	___ftge
  6339  0686  1C03               	btfss	3,0
  6340  0687  2EA5               	goto	i1l2250
  6341  0688  1283               	bcf	3,5	;RP0=0, select bank0
  6342  0689  1303               	bcf	3,6	;RP1=0, select bank0
  6343  068A  0846               	movf	trapmf@c,w
  6344  068B  00A0               	movwf	___ftge@ff1
  6345  068C  0847               	movf	trapmf@c+1,w
  6346  068D  00A1               	movwf	___ftge@ff1+1
  6347  068E  0848               	movf	trapmf@c+2,w
  6348  068F  00A2               	movwf	___ftge@ff1+2
  6349  0690  083D               	movf	trapmf@x,w
  6350  0691  00A3               	movwf	___ftge@ff2
  6351  0692  083E               	movf	trapmf@x+1,w
  6352  0693  00A4               	movwf	___ftge@ff2+1
  6353  0694  083F               	movf	trapmf@x+2,w
  6354  0695  00A5               	movwf	___ftge@ff2+2
  6355  0696  160A  118A  2739  120A  118A  	fcall	___ftge
  6356  069B  1C03               	btfss	3,0
  6357  069C  2EA5               	goto	i1l2250
  6358                           
  6359                           ;main.c: 94: ua = 1;
  6360  069D  3000               	movlw	0
  6361  069E  1283               	bcf	3,5	;RP0=0, select bank0
  6362  069F  1303               	bcf	3,6	;RP1=0, select bank0
  6363  06A0  00CC               	movwf	trapmf@ua
  6364  06A1  3080               	movlw	128
  6365  06A2  00CD               	movwf	trapmf@ua+1
  6366  06A3  303F               	movlw	63
  6367  06A4  2F46               	goto	L19
  6368  06A5                     i1l2250:	
  6369                           
  6370                           ;main.c: 95: else if ((c < x) && (x <= d))
  6371  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  6372  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  6373  06A7  0846               	movf	trapmf@c,w
  6374  06A8  00A0               	movwf	___ftge@ff1
  6375  06A9  0847               	movf	trapmf@c+1,w
  6376  06AA  00A1               	movwf	___ftge@ff1+1
  6377  06AB  0848               	movf	trapmf@c+2,w
  6378  06AC  00A2               	movwf	___ftge@ff1+2
  6379  06AD  083D               	movf	trapmf@x,w
  6380  06AE  00A3               	movwf	___ftge@ff2
  6381  06AF  083E               	movf	trapmf@x+1,w
  6382  06B0  00A4               	movwf	___ftge@ff2+1
  6383  06B1  083F               	movf	trapmf@x+2,w
  6384  06B2  00A5               	movwf	___ftge@ff2+2
  6385  06B3  160A  118A  2739  120A  118A  	fcall	___ftge
  6386  06B8  1803               	btfsc	3,0
  6387  06B9  2F2A               	goto	i1l2256
  6388  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  6389  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  6390  06BC  0849               	movf	trapmf@d,w
  6391  06BD  00A0               	movwf	___ftge@ff1
  6392  06BE  084A               	movf	trapmf@d+1,w
  6393  06BF  00A1               	movwf	___ftge@ff1+1
  6394  06C0  084B               	movf	trapmf@d+2,w
  6395  06C1  00A2               	movwf	___ftge@ff1+2
  6396  06C2  083D               	movf	trapmf@x,w
  6397  06C3  00A3               	movwf	___ftge@ff2
  6398  06C4  083E               	movf	trapmf@x+1,w
  6399  06C5  00A4               	movwf	___ftge@ff2+1
  6400  06C6  083F               	movf	trapmf@x+2,w
  6401  06C7  00A5               	movwf	___ftge@ff2+2
  6402  06C8  160A  118A  2739  120A  118A  	fcall	___ftge
  6403  06CD  1C03               	btfss	3,0
  6404  06CE  2F2A               	goto	i1l2256
  6405                           
  6406                           ;main.c: 96: ua = ((d - x) / (d - c));
  6407  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  6408  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  6409  06D1  0849               	movf	trapmf@d,w
  6410  06D2  00A0               	movwf	___ftadd@f1
  6411  06D3  084A               	movf	trapmf@d+1,w
  6412  06D4  00A1               	movwf	___ftadd@f1+1
  6413  06D5  084B               	movf	trapmf@d+2,w
  6414  06D6  00A2               	movwf	___ftadd@f1+2
  6415  06D7  0846               	movf	trapmf@c,w
  6416  06D8  00F0               	movwf	___ftneg@f1
  6417  06D9  0847               	movf	trapmf@c+1,w
  6418  06DA  00F1               	movwf	___ftneg@f1+1
  6419  06DB  0848               	movf	trapmf@c+2,w
  6420  06DC  00F2               	movwf	___ftneg@f1+2
  6421  06DD  160A  118A  2517  120A  118A  	fcall	___ftneg
  6422  06E2  0870               	movf	?___ftneg,w
  6423  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  6424  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  6425  06E5  00A3               	movwf	___ftadd@f2
  6426  06E6  0871               	movf	?___ftneg+1,w
  6427  06E7  00A4               	movwf	___ftadd@f2+1
  6428  06E8  0872               	movf	?___ftneg+2,w
  6429  06E9  00A5               	movwf	___ftadd@f2+2
  6430  06EA  120A  158A  24A1  120A  118A  	fcall	___ftadd
  6431  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  6432  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  6433  06F1  0820               	movf	?___ftadd,w
  6434  06F2  00AD               	movwf	___ftdiv@f2
  6435  06F3  0821               	movf	?___ftadd+1,w
  6436  06F4  00AE               	movwf	___ftdiv@f2+1
  6437  06F5  0822               	movf	?___ftadd+2,w
  6438  06F6  00AF               	movwf	___ftdiv@f2+2
  6439  06F7  0849               	movf	trapmf@d,w
  6440  06F8  00A0               	movwf	___ftadd@f1
  6441  06F9  084A               	movf	trapmf@d+1,w
  6442  06FA  00A1               	movwf	___ftadd@f1+1
  6443  06FB  084B               	movf	trapmf@d+2,w
  6444  06FC  00A2               	movwf	___ftadd@f1+2
  6445  06FD  083D               	movf	trapmf@x,w
  6446  06FE  00F0               	movwf	___ftneg@f1
  6447  06FF  083E               	movf	trapmf@x+1,w
  6448  0700  00F1               	movwf	___ftneg@f1+1
  6449  0701  083F               	movf	trapmf@x+2,w
  6450  0702                     L22:	
  6451  0702  00F2               	movwf	___ftneg@f1+2
  6452  0703  160A  118A  2517  120A  118A  	fcall	___ftneg
  6453  0708  0870               	movf	?___ftneg,w
  6454  0709  1283               	bcf	3,5	;RP0=0, select bank0
  6455  070A  1303               	bcf	3,6	;RP1=0, select bank0
  6456  070B  00A3               	movwf	___ftadd@f2
  6457  070C  0871               	movf	?___ftneg+1,w
  6458  070D  00A4               	movwf	___ftadd@f2+1
  6459  070E  0872               	movf	?___ftneg+2,w
  6460  070F  00A5               	movwf	___ftadd@f2+2
  6461  0710  120A  158A  24A1  120A  118A  	fcall	___ftadd
  6462  0715  1283               	bcf	3,5	;RP0=0, select bank0
  6463  0716  1303               	bcf	3,6	;RP1=0, select bank0
  6464  0717  0820               	movf	?___ftadd,w
  6465  0718  00B0               	movwf	___ftdiv@f1
  6466  0719  0821               	movf	?___ftadd+1,w
  6467  071A  00B1               	movwf	___ftdiv@f1+1
  6468  071B  0822               	movf	?___ftadd+2,w
  6469  071C  00B2               	movwf	___ftdiv@f1+2
  6470  071D  120A  158A  20C6  120A  118A  	fcall	___ftdiv
  6471  0722  1283               	bcf	3,5	;RP0=0, select bank0
  6472  0723  1303               	bcf	3,6	;RP1=0, select bank0
  6473  0724  082D               	movf	?___ftdiv,w
  6474  0725  00CC               	movwf	trapmf@ua
  6475  0726  082E               	movf	?___ftdiv+1,w
  6476  0727  00CD               	movwf	trapmf@ua+1
  6477  0728  082F               	movf	?___ftdiv+2,w
  6478  0729  2F46               	goto	L19
  6479  072A                     i1l2256:	
  6480                           
  6481                           ;main.c: 97: else if (x > d)
  6482  072A  1283               	bcf	3,5	;RP0=0, select bank0
  6483  072B  1303               	bcf	3,6	;RP1=0, select bank0
  6484  072C  0849               	movf	trapmf@d,w
  6485  072D  00A0               	movwf	___ftge@ff1
  6486  072E  084A               	movf	trapmf@d+1,w
  6487  072F  00A1               	movwf	___ftge@ff1+1
  6488  0730  084B               	movf	trapmf@d+2,w
  6489  0731  00A2               	movwf	___ftge@ff1+2
  6490  0732  083D               	movf	trapmf@x,w
  6491  0733  00A3               	movwf	___ftge@ff2
  6492  0734  083E               	movf	trapmf@x+1,w
  6493  0735  00A4               	movwf	___ftge@ff2+1
  6494  0736  083F               	movf	trapmf@x+2,w
  6495  0737  00A5               	movwf	___ftge@ff2+2
  6496  0738  160A  118A  2739  120A  118A  	fcall	___ftge
  6497  073D  1803               	btfsc	3,0
  6498  073E  2F47               	goto	i1l122
  6499  073F                     L20:	
  6500                           
  6501                           ;main.c: 98: ua = 0;
  6502  073F  3000               	movlw	0
  6503  0740  1283               	bcf	3,5	;RP0=0, select bank0
  6504  0741  1303               	bcf	3,6	;RP1=0, select bank0
  6505  0742  00CC               	movwf	trapmf@ua
  6506  0743  3000               	movlw	0
  6507  0744  00CD               	movwf	trapmf@ua+1
  6508  0745  3000               	movlw	0
  6509  0746                     L19:	
  6510  0746  00CE               	movwf	trapmf@ua+2
  6511  0747                     i1l122:	
  6512                           
  6513                           ;main.c: 100: return(ua);
  6514  0747  1283               	bcf	3,5	;RP0=0, select bank0
  6515  0748  1303               	bcf	3,6	;RP1=0, select bank0
  6516  0749  084C               	movf	trapmf@ua,w
  6517  074A  00BD               	movwf	?_trapmf
  6518  074B  084D               	movf	trapmf@ua+1,w
  6519  074C  00BE               	movwf	?_trapmf+1
  6520  074D  084E               	movf	trapmf@ua+2,w
  6521  074E  00BF               	movwf	?_trapmf+2
  6522  074F  0008               	return
  6523  0750                     __end_of_trapmf:	
  6524                           
  6525                           	psect	text26
  6526  1517                     __ptext26:	
  6527 ;; *************** function ___ftneg *****************
  6528 ;; Defined at:
  6529 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  f1              3    0[COMMON] float 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;		None
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  3    0[COMMON] float 
  6536 ;; Registers used:
  6537 ;;		wreg
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6543 ;;      Params:         3       0       0       0       0
  6544 ;;      Locals:         0       0       0       0       0
  6545 ;;      Temps:          0       0       0       0       0
  6546 ;;      Totals:         3       0       0       0       0
  6547 ;;Total ram usage:        3 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; This function calls:
  6550 ;;		Nothing
  6551 ;; This function is called by:
  6552 ;;		_trimf
  6553 ;;		_trapmf
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           
  6558                           ;psect for function ___ftneg
  6559  1517                     ___ftneg:	
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in ___ftneg: [wreg]
  6563  1517  0872               	movf	___ftneg@f1+2,w
  6564  1518  0471               	iorwf	___ftneg@f1+1,w
  6565  1519  0470               	iorwf	___ftneg@f1,w
  6566  151A  1903               	skipnz
  6567  151B  0008               	return
  6568  151C  3080               	movlw	128
  6569  151D  06F2               	xorwf	___ftneg@f1+2,f
  6570  151E  0008               	return
  6571  151F                     __end_of___ftneg:	
  6572                           
  6573                           	psect	text27
  6574  08C6                     __ptext27:	
  6575 ;; *************** function ___ftdiv *****************
  6576 ;; Defined at:
  6577 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  f2              3   13[BANK0 ] float 
  6580 ;;  f1              3   16[BANK0 ] float 
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;  f3              3   24[BANK0 ] float 
  6583 ;;  sign            1   28[BANK0 ] unsigned char 
  6584 ;;  exp             1   27[BANK0 ] unsigned char 
  6585 ;;  cntr            1   23[BANK0 ] unsigned char 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  3   13[BANK0 ] float 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0, pclath, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6595 ;;      Params:         0       6       0       0       0
  6596 ;;      Locals:         0       6       0       0       0
  6597 ;;      Temps:          0       4       0       0       0
  6598 ;;      Totals:         0      16       0       0       0
  6599 ;;Total ram usage:       16 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    1
  6602 ;; This function calls:
  6603 ;;		___ftpack
  6604 ;; This function is called by:
  6605 ;;		_trimf
  6606 ;;		_trapmf
  6607 ;;		_Fuzzy
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           
  6612                           ;psect for function ___ftdiv
  6613  08C6                     ___ftdiv:	
  6614                           
  6615                           ;incstack = 0
  6616                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6617  08C6  1283               	bcf	3,5	;RP0=0, select bank0
  6618  08C7  1303               	bcf	3,6	;RP1=0, select bank0
  6619  08C8  0830               	movf	___ftdiv@f1,w
  6620  08C9  00B3               	movwf	??___ftdiv
  6621  08CA  0831               	movf	___ftdiv@f1+1,w
  6622  08CB  00B4               	movwf	??___ftdiv+1
  6623  08CC  0832               	movf	___ftdiv@f1+2,w
  6624  08CD  00B5               	movwf	??___ftdiv+2
  6625  08CE  1003               	clrc
  6626  08CF  0D34               	rlf	??___ftdiv+1,w
  6627  08D0  0D35               	rlf	??___ftdiv+2,w
  6628  08D1  00B6               	movwf	??___ftdiv+3
  6629  08D2  0836               	movf	??___ftdiv+3,w
  6630  08D3  00BB               	movwf	___ftdiv@exp
  6631  08D4  08BB               	movf	___ftdiv@exp,f
  6632  08D5  1D03               	skipz
  6633  08D6  28DE               	goto	i1l2144
  6634  08D7  3000               	movlw	0
  6635  08D8  00AD               	movwf	?___ftdiv
  6636  08D9  3000               	movlw	0
  6637  08DA  00AE               	movwf	?___ftdiv+1
  6638  08DB  3000               	movlw	0
  6639  08DC  00AF               	movwf	?___ftdiv+2
  6640  08DD  0008               	return
  6641  08DE                     i1l2144:	
  6642  08DE  082D               	movf	___ftdiv@f2,w
  6643  08DF  00B3               	movwf	??___ftdiv
  6644  08E0  082E               	movf	___ftdiv@f2+1,w
  6645  08E1  00B4               	movwf	??___ftdiv+1
  6646  08E2  082F               	movf	___ftdiv@f2+2,w
  6647  08E3  00B5               	movwf	??___ftdiv+2
  6648  08E4  1003               	clrc
  6649  08E5  0D34               	rlf	??___ftdiv+1,w
  6650  08E6  0D35               	rlf	??___ftdiv+2,w
  6651  08E7  00B6               	movwf	??___ftdiv+3
  6652  08E8  0836               	movf	??___ftdiv+3,w
  6653  08E9  00BC               	movwf	___ftdiv@sign
  6654  08EA  08BC               	movf	___ftdiv@sign,f
  6655  08EB  1D03               	skipz
  6656  08EC  28F4               	goto	i1l2150
  6657  08ED  3000               	movlw	0
  6658  08EE  00AD               	movwf	?___ftdiv
  6659  08EF  3000               	movlw	0
  6660  08F0  00AE               	movwf	?___ftdiv+1
  6661  08F1  3000               	movlw	0
  6662  08F2  00AF               	movwf	?___ftdiv+2
  6663  08F3  0008               	return
  6664  08F4                     i1l2150:	
  6665  08F4  3000               	movlw	0
  6666  08F5  00B8               	movwf	___ftdiv@f3
  6667  08F6  3000               	movlw	0
  6668  08F7  00B9               	movwf	___ftdiv@f3+1
  6669  08F8  3000               	movlw	0
  6670  08F9  00BA               	movwf	___ftdiv@f3+2
  6671  08FA  3089               	movlw	137
  6672  08FB  073C               	addwf	___ftdiv@sign,w
  6673  08FC  00B3               	movwf	??___ftdiv
  6674  08FD  0833               	movf	??___ftdiv,w
  6675  08FE  02BB               	subwf	___ftdiv@exp,f
  6676  08FF  0830               	movf	___ftdiv@f1,w
  6677  0900  00B3               	movwf	??___ftdiv
  6678  0901  0831               	movf	___ftdiv@f1+1,w
  6679  0902  00B4               	movwf	??___ftdiv+1
  6680  0903  0832               	movf	___ftdiv@f1+2,w
  6681  0904  00B5               	movwf	??___ftdiv+2
  6682  0905  3010               	movlw	16
  6683  0906                     u214_25:	
  6684  0906  1003               	clrc
  6685  0907  0CB5               	rrf	??___ftdiv+2,f
  6686  0908  0CB4               	rrf	??___ftdiv+1,f
  6687  0909  0CB3               	rrf	??___ftdiv,f
  6688  090A  3EFF               	addlw	-1
  6689  090B  1D03               	skipz
  6690  090C  2906               	goto	u214_25
  6691  090D  0833               	movf	??___ftdiv,w
  6692  090E  00B6               	movwf	??___ftdiv+3
  6693  090F  0836               	movf	??___ftdiv+3,w
  6694  0910  00BC               	movwf	___ftdiv@sign
  6695  0911  082D               	movf	___ftdiv@f2,w
  6696  0912  00B3               	movwf	??___ftdiv
  6697  0913  082E               	movf	___ftdiv@f2+1,w
  6698  0914  00B4               	movwf	??___ftdiv+1
  6699  0915  082F               	movf	___ftdiv@f2+2,w
  6700  0916  00B5               	movwf	??___ftdiv+2
  6701  0917  3010               	movlw	16
  6702  0918                     u215_25:	
  6703  0918  1003               	clrc
  6704  0919  0CB5               	rrf	??___ftdiv+2,f
  6705  091A  0CB4               	rrf	??___ftdiv+1,f
  6706  091B  0CB3               	rrf	??___ftdiv,f
  6707  091C  3EFF               	addlw	-1
  6708  091D  1D03               	skipz
  6709  091E  2918               	goto	u215_25
  6710  091F  0833               	movf	??___ftdiv,w
  6711  0920  00B6               	movwf	??___ftdiv+3
  6712  0921  0836               	movf	??___ftdiv+3,w
  6713  0922  06BC               	xorwf	___ftdiv@sign,f
  6714  0923  3080               	movlw	128
  6715  0924  00B3               	movwf	??___ftdiv
  6716  0925  0833               	movf	??___ftdiv,w
  6717  0926  05BC               	andwf	___ftdiv@sign,f
  6718  0927  17B1               	bsf	___ftdiv@f1+1,7
  6719  0928  30FF               	movlw	255
  6720  0929  05B0               	andwf	___ftdiv@f1,f
  6721  092A  30FF               	movlw	255
  6722  092B  05B1               	andwf	___ftdiv@f1+1,f
  6723  092C  3000               	movlw	0
  6724  092D  05B2               	andwf	___ftdiv@f1+2,f
  6725  092E  17AE               	bsf	___ftdiv@f2+1,7
  6726  092F  30FF               	movlw	255
  6727  0930  05AD               	andwf	___ftdiv@f2,f
  6728  0931  30FF               	movlw	255
  6729  0932  05AE               	andwf	___ftdiv@f2+1,f
  6730  0933  3000               	movlw	0
  6731  0934  05AF               	andwf	___ftdiv@f2+2,f
  6732  0935  3018               	movlw	24
  6733  0936  00B3               	movwf	??___ftdiv
  6734  0937  0833               	movf	??___ftdiv,w
  6735  0938  00B7               	movwf	___ftdiv@cntr
  6736  0939                     i1l2164:	
  6737  0939  3001               	movlw	1
  6738  093A                     u216_25:	
  6739  093A  1003               	clrc
  6740  093B  0DB8               	rlf	___ftdiv@f3,f
  6741  093C  0DB9               	rlf	___ftdiv@f3+1,f
  6742  093D  0DBA               	rlf	___ftdiv@f3+2,f
  6743  093E  3EFF               	addlw	-1
  6744  093F  1D03               	skipz
  6745  0940  293A               	goto	u216_25
  6746  0941  082F               	movf	___ftdiv@f2+2,w
  6747  0942  0232               	subwf	___ftdiv@f1+2,w
  6748  0943  1D03               	skipz
  6749  0944  294B               	goto	u217_25
  6750  0945  082E               	movf	___ftdiv@f2+1,w
  6751  0946  0231               	subwf	___ftdiv@f1+1,w
  6752  0947  1D03               	skipz
  6753  0948  294B               	goto	u217_25
  6754  0949  082D               	movf	___ftdiv@f2,w
  6755  094A  0230               	subwf	___ftdiv@f1,w
  6756  094B                     u217_25:	
  6757  094B  1C03               	skipc
  6758  094C  2958               	goto	i1l2172
  6759  094D  082D               	movf	___ftdiv@f2,w
  6760  094E  02B0               	subwf	___ftdiv@f1,f
  6761  094F  082E               	movf	___ftdiv@f2+1,w
  6762  0950  1C03               	skipc
  6763  0951  0F2E               	incfsz	___ftdiv@f2+1,w
  6764  0952  02B1               	subwf	___ftdiv@f1+1,f
  6765  0953  082F               	movf	___ftdiv@f2+2,w
  6766  0954  1C03               	skipc
  6767  0955  0A2F               	incf	___ftdiv@f2+2,w
  6768  0956  02B2               	subwf	___ftdiv@f1+2,f
  6769  0957  1438               	bsf	___ftdiv@f3,0
  6770  0958                     i1l2172:	
  6771  0958  3001               	movlw	1
  6772  0959                     u218_25:	
  6773  0959  1003               	clrc
  6774  095A  0DB0               	rlf	___ftdiv@f1,f
  6775  095B  0DB1               	rlf	___ftdiv@f1+1,f
  6776  095C  0DB2               	rlf	___ftdiv@f1+2,f
  6777  095D  3EFF               	addlw	-1
  6778  095E  1D03               	skipz
  6779  095F  2959               	goto	u218_25
  6780  0960  3001               	movlw	1
  6781  0961  02B7               	subwf	___ftdiv@cntr,f
  6782  0962  1D03               	btfss	3,2
  6783  0963  2939               	goto	i1l2164
  6784  0964  0838               	movf	___ftdiv@f3,w
  6785  0965  00F0               	movwf	___ftpack@arg
  6786  0966  0839               	movf	___ftdiv@f3+1,w
  6787  0967  00F1               	movwf	___ftpack@arg+1
  6788  0968  083A               	movf	___ftdiv@f3+2,w
  6789  0969  00F2               	movwf	___ftpack@arg+2
  6790  096A  083B               	movf	___ftdiv@exp,w
  6791  096B  00B3               	movwf	??___ftdiv
  6792  096C  0833               	movf	??___ftdiv,w
  6793  096D  00F3               	movwf	___ftpack@exp
  6794  096E  083C               	movf	___ftdiv@sign,w
  6795  096F  00B4               	movwf	??___ftdiv+1
  6796  0970  0834               	movf	??___ftdiv+1,w
  6797  0971  00F4               	movwf	___ftpack@sign
  6798  0972  160A  118A  2798   	fcall	___ftpack
  6799  0975  0870               	movf	?___ftpack,w
  6800  0976  1283               	bcf	3,5	;RP0=0, select bank0
  6801  0977  1303               	bcf	3,6	;RP1=0, select bank0
  6802  0978  00AD               	movwf	?___ftdiv
  6803  0979  0871               	movf	?___ftpack+1,w
  6804  097A  00AE               	movwf	?___ftdiv+1
  6805  097B  0872               	movf	?___ftpack+2,w
  6806  097C  00AF               	movwf	?___ftdiv+2
  6807  097D  0008               	return
  6808  097E                     __end_of___ftdiv:	
  6809                           
  6810                           	psect	text28
  6811  0CA1                     __ptext28:	
  6812 ;; *************** function ___ftadd *****************
  6813 ;; Defined at:
  6814 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;  f1              3    0[BANK0 ] float 
  6817 ;;  f2              3    3[BANK0 ] float 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  exp1            1   12[BANK0 ] unsigned char 
  6820 ;;  exp2            1   11[BANK0 ] unsigned char 
  6821 ;;  sign            1   10[BANK0 ] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  3    0[BANK0 ] float 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0, pclath, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6831 ;;      Params:         0       6       0       0       0
  6832 ;;      Locals:         0       3       0       0       0
  6833 ;;      Temps:          0       4       0       0       0
  6834 ;;      Totals:         0      13       0       0       0
  6835 ;;Total ram usage:       13 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    1
  6838 ;; This function calls:
  6839 ;;		___ftpack
  6840 ;; This function is called by:
  6841 ;;		_trimf
  6842 ;;		_trapmf
  6843 ;;		_Fuzzy
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847                           
  6848                           ;psect for function ___ftadd
  6849  0CA1                     ___ftadd:	
  6850                           
  6851                           ;incstack = 0
  6852                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6853  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  6854  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  6855  0CA3  0820               	movf	___ftadd@f1,w
  6856  0CA4  00A6               	movwf	??___ftadd
  6857  0CA5  0821               	movf	___ftadd@f1+1,w
  6858  0CA6  00A7               	movwf	??___ftadd+1
  6859  0CA7  0822               	movf	___ftadd@f1+2,w
  6860  0CA8  00A8               	movwf	??___ftadd+2
  6861  0CA9  1003               	clrc
  6862  0CAA  0D27               	rlf	??___ftadd+1,w
  6863  0CAB  0D28               	rlf	??___ftadd+2,w
  6864  0CAC  00A9               	movwf	??___ftadd+3
  6865  0CAD  0829               	movf	??___ftadd+3,w
  6866  0CAE  00AC               	movwf	___ftadd@exp1
  6867  0CAF  0823               	movf	___ftadd@f2,w
  6868  0CB0  00A6               	movwf	??___ftadd
  6869  0CB1  0824               	movf	___ftadd@f2+1,w
  6870  0CB2  00A7               	movwf	??___ftadd+1
  6871  0CB3  0825               	movf	___ftadd@f2+2,w
  6872  0CB4  00A8               	movwf	??___ftadd+2
  6873  0CB5  1003               	clrc
  6874  0CB6  0D27               	rlf	??___ftadd+1,w
  6875  0CB7  0D28               	rlf	??___ftadd+2,w
  6876  0CB8  00A9               	movwf	??___ftadd+3
  6877  0CB9  0829               	movf	??___ftadd+3,w
  6878  0CBA  00AB               	movwf	___ftadd@exp2
  6879  0CBB  082C               	movf	___ftadd@exp1,w
  6880  0CBC  1903               	btfsc	3,2
  6881  0CBD  2CCA               	goto	i1l2074
  6882  0CBE  082B               	movf	___ftadd@exp2,w
  6883  0CBF  022C               	subwf	___ftadd@exp1,w
  6884  0CC0  1803               	skipnc
  6885  0CC1  2CD1               	goto	i1l2078
  6886  0CC2  032C               	decf	___ftadd@exp1,w
  6887  0CC3  3AFF               	xorlw	255
  6888  0CC4  072B               	addwf	___ftadd@exp2,w
  6889  0CC5  00A6               	movwf	??___ftadd
  6890  0CC6  3019               	movlw	25
  6891  0CC7  0226               	subwf	??___ftadd,w
  6892  0CC8  1C03               	skipc
  6893  0CC9  2CD1               	goto	i1l2078
  6894  0CCA                     i1l2074:	
  6895  0CCA  0823               	movf	___ftadd@f2,w
  6896  0CCB  00A0               	movwf	?___ftadd
  6897  0CCC  0824               	movf	___ftadd@f2+1,w
  6898  0CCD  00A1               	movwf	?___ftadd+1
  6899  0CCE  0825               	movf	___ftadd@f2+2,w
  6900  0CCF  00A2               	movwf	?___ftadd+2
  6901  0CD0  0008               	return
  6902  0CD1                     i1l2078:	
  6903  0CD1  082B               	movf	___ftadd@exp2,w
  6904  0CD2  1903               	btfsc	3,2
  6905  0CD3  0008               	return
  6906  0CD4  082C               	movf	___ftadd@exp1,w
  6907  0CD5  022B               	subwf	___ftadd@exp2,w
  6908  0CD6  1803               	skipnc
  6909  0CD7  2CE0               	goto	i1l2084
  6910  0CD8  032B               	decf	___ftadd@exp2,w
  6911  0CD9  3AFF               	xorlw	255
  6912  0CDA  072C               	addwf	___ftadd@exp1,w
  6913  0CDB  00A6               	movwf	??___ftadd
  6914  0CDC  3019               	movlw	25
  6915  0CDD  0226               	subwf	??___ftadd,w
  6916  0CDE  1803               	btfsc	3,0
  6917  0CDF  0008               	return
  6918  0CE0                     i1l2084:	
  6919  0CE0  3006               	movlw	6
  6920  0CE1  00A6               	movwf	??___ftadd
  6921  0CE2  0826               	movf	??___ftadd,w
  6922  0CE3  00AA               	movwf	___ftadd@sign
  6923  0CE4  1BA2               	btfsc	___ftadd@f1+2,7
  6924  0CE5  17AA               	bsf	___ftadd@sign,7
  6925  0CE6  1BA5               	btfsc	___ftadd@f2+2,7
  6926  0CE7  172A               	bsf	___ftadd@sign,6
  6927  0CE8  17A1               	bsf	___ftadd@f1+1,7
  6928  0CE9  30FF               	movlw	255
  6929  0CEA  05A0               	andwf	___ftadd@f1,f
  6930  0CEB  30FF               	movlw	255
  6931  0CEC  05A1               	andwf	___ftadd@f1+1,f
  6932  0CED  3000               	movlw	0
  6933  0CEE  05A2               	andwf	___ftadd@f1+2,f
  6934  0CEF  17A4               	bsf	___ftadd@f2+1,7
  6935  0CF0  30FF               	movlw	255
  6936  0CF1  05A3               	andwf	___ftadd@f2,f
  6937  0CF2  30FF               	movlw	255
  6938  0CF3  05A4               	andwf	___ftadd@f2+1,f
  6939  0CF4  3000               	movlw	0
  6940  0CF5  05A5               	andwf	___ftadd@f2+2,f
  6941  0CF6  082B               	movf	___ftadd@exp2,w
  6942  0CF7  022C               	subwf	___ftadd@exp1,w
  6943  0CF8  1803               	skipnc
  6944  0CF9  2D20               	goto	i1l2106
  6945  0CFA                     i1l2096:	
  6946  0CFA  3001               	movlw	1
  6947  0CFB                     u197_25:	
  6948  0CFB  1003               	clrc
  6949  0CFC  0DA3               	rlf	___ftadd@f2,f
  6950  0CFD  0DA4               	rlf	___ftadd@f2+1,f
  6951  0CFE  0DA5               	rlf	___ftadd@f2+2,f
  6952  0CFF  3EFF               	addlw	-1
  6953  0D00  1D03               	skipz
  6954  0D01  2CFB               	goto	u197_25
  6955  0D02  3001               	movlw	1
  6956  0D03  02AB               	subwf	___ftadd@exp2,f
  6957  0D04  082B               	movf	___ftadd@exp2,w
  6958  0D05  062C               	xorwf	___ftadd@exp1,w
  6959  0D06  1903               	skipnz
  6960  0D07  2D1B               	goto	i1l2104
  6961  0D08  3001               	movlw	1
  6962  0D09  02AA               	subwf	___ftadd@sign,f
  6963  0D0A  082A               	movf	___ftadd@sign,w
  6964  0D0B  3907               	andlw	7
  6965  0D0C  1903               	btfsc	3,2
  6966  0D0D  2D1B               	goto	i1l2104
  6967  0D0E  2CFA               	goto	i1l2096
  6968  0D0F                     i1l2102:	
  6969  0D0F  3001               	movlw	1
  6970  0D10                     u200_25:	
  6971  0D10  1003               	clrc
  6972  0D11  0CA2               	rrf	___ftadd@f1+2,f
  6973  0D12  0CA1               	rrf	___ftadd@f1+1,f
  6974  0D13  0CA0               	rrf	___ftadd@f1,f
  6975  0D14  3EFF               	addlw	-1
  6976  0D15  1D03               	skipz
  6977  0D16  2D10               	goto	u200_25
  6978  0D17  3001               	movlw	1
  6979  0D18  00A6               	movwf	??___ftadd
  6980  0D19  0826               	movf	??___ftadd,w
  6981  0D1A  07AC               	addwf	___ftadd@exp1,f
  6982  0D1B                     i1l2104:	
  6983  0D1B  082C               	movf	___ftadd@exp1,w
  6984  0D1C  062B               	xorwf	___ftadd@exp2,w
  6985  0D1D  1903               	btfsc	3,2
  6986  0D1E  2D49               	goto	i1l735
  6987  0D1F  2D0F               	goto	i1l2102
  6988  0D20                     i1l2106:	
  6989  0D20  082C               	movf	___ftadd@exp1,w
  6990  0D21  022B               	subwf	___ftadd@exp2,w
  6991  0D22  1803               	skipnc
  6992  0D23  2D49               	goto	i1l735
  6993  0D24                     i1l2108:	
  6994  0D24  3001               	movlw	1
  6995  0D25                     u203_25:	
  6996  0D25  1003               	clrc
  6997  0D26  0DA0               	rlf	___ftadd@f1,f
  6998  0D27  0DA1               	rlf	___ftadd@f1+1,f
  6999  0D28  0DA2               	rlf	___ftadd@f1+2,f
  7000  0D29  3EFF               	addlw	-1
  7001  0D2A  1D03               	skipz
  7002  0D2B  2D25               	goto	u203_25
  7003  0D2C  3001               	movlw	1
  7004  0D2D  02AC               	subwf	___ftadd@exp1,f
  7005  0D2E  082B               	movf	___ftadd@exp2,w
  7006  0D2F  062C               	xorwf	___ftadd@exp1,w
  7007  0D30  1903               	skipnz
  7008  0D31  2D45               	goto	i1l2116
  7009  0D32  3001               	movlw	1
  7010  0D33  02AA               	subwf	___ftadd@sign,f
  7011  0D34  082A               	movf	___ftadd@sign,w
  7012  0D35  3907               	andlw	7
  7013  0D36  1903               	btfsc	3,2
  7014  0D37  2D45               	goto	i1l2116
  7015  0D38  2D24               	goto	i1l2108
  7016  0D39                     i1l2114:	
  7017  0D39  3001               	movlw	1
  7018  0D3A                     u206_25:	
  7019  0D3A  1003               	clrc
  7020  0D3B  0CA5               	rrf	___ftadd@f2+2,f
  7021  0D3C  0CA4               	rrf	___ftadd@f2+1,f
  7022  0D3D  0CA3               	rrf	___ftadd@f2,f
  7023  0D3E  3EFF               	addlw	-1
  7024  0D3F  1D03               	skipz
  7025  0D40  2D3A               	goto	u206_25
  7026  0D41  3001               	movlw	1
  7027  0D42  00A6               	movwf	??___ftadd
  7028  0D43  0826               	movf	??___ftadd,w
  7029  0D44  07AB               	addwf	___ftadd@exp2,f
  7030  0D45                     i1l2116:	
  7031  0D45  082C               	movf	___ftadd@exp1,w
  7032  0D46  062B               	xorwf	___ftadd@exp2,w
  7033  0D47  1D03               	skipz
  7034  0D48  2D39               	goto	i1l2114
  7035  0D49                     i1l735:	
  7036  0D49  1FAA               	btfss	___ftadd@sign,7
  7037  0D4A  2D5B               	goto	i1l2120
  7038  0D4B  30FF               	movlw	255
  7039  0D4C  06A0               	xorwf	___ftadd@f1,f
  7040  0D4D  30FF               	movlw	255
  7041  0D4E  06A1               	xorwf	___ftadd@f1+1,f
  7042  0D4F  30FF               	movlw	255
  7043  0D50  06A2               	xorwf	___ftadd@f1+2,f
  7044  0D51  3001               	movlw	1
  7045  0D52  07A0               	addwf	___ftadd@f1,f
  7046  0D53  3000               	movlw	0
  7047  0D54  1803               	skipnc
  7048  0D55  3001               	movlw	1
  7049  0D56  07A1               	addwf	___ftadd@f1+1,f
  7050  0D57  3000               	movlw	0
  7051  0D58  1803               	skipnc
  7052  0D59  3001               	movlw	1
  7053  0D5A  07A2               	addwf	___ftadd@f1+2,f
  7054  0D5B                     i1l2120:	
  7055  0D5B  1F2A               	btfss	___ftadd@sign,6
  7056  0D5C  2D6D               	goto	i1l2124
  7057  0D5D  30FF               	movlw	255
  7058  0D5E  06A3               	xorwf	___ftadd@f2,f
  7059  0D5F  30FF               	movlw	255
  7060  0D60  06A4               	xorwf	___ftadd@f2+1,f
  7061  0D61  30FF               	movlw	255
  7062  0D62  06A5               	xorwf	___ftadd@f2+2,f
  7063  0D63  3001               	movlw	1
  7064  0D64  07A3               	addwf	___ftadd@f2,f
  7065  0D65  3000               	movlw	0
  7066  0D66  1803               	skipnc
  7067  0D67  3001               	movlw	1
  7068  0D68  07A4               	addwf	___ftadd@f2+1,f
  7069  0D69  3000               	movlw	0
  7070  0D6A  1803               	skipnc
  7071  0D6B  3001               	movlw	1
  7072  0D6C  07A5               	addwf	___ftadd@f2+2,f
  7073  0D6D                     i1l2124:	
  7074  0D6D  01AA               	clrf	___ftadd@sign
  7075  0D6E  0820               	movf	___ftadd@f1,w
  7076  0D6F  07A3               	addwf	___ftadd@f2,f
  7077  0D70  0821               	movf	___ftadd@f1+1,w
  7078  0D71  1103               	clrz
  7079  0D72  1803               	skipnc
  7080  0D73  0A21               	incf	___ftadd@f1+1,w
  7081  0D74  1D03               	btfss	3,2
  7082  0D75  07A4               	addwf	___ftadd@f2+1,f
  7083  0D76  0822               	movf	___ftadd@f1+2,w
  7084  0D77  1103               	clrz
  7085  0D78  1803               	skipnc
  7086  0D79  0A22               	incf	___ftadd@f1+2,w
  7087  0D7A  1D03               	btfss	3,2
  7088  0D7B  07A5               	addwf	___ftadd@f2+2,f
  7089  0D7C  1FA5               	btfss	___ftadd@f2+2,7
  7090  0D7D  2D90               	goto	i1l2134
  7091  0D7E  30FF               	movlw	255
  7092  0D7F  06A3               	xorwf	___ftadd@f2,f
  7093  0D80  30FF               	movlw	255
  7094  0D81  06A4               	xorwf	___ftadd@f2+1,f
  7095  0D82  30FF               	movlw	255
  7096  0D83  06A5               	xorwf	___ftadd@f2+2,f
  7097  0D84  3001               	movlw	1
  7098  0D85  07A3               	addwf	___ftadd@f2,f
  7099  0D86  3000               	movlw	0
  7100  0D87  1803               	skipnc
  7101  0D88  3001               	movlw	1
  7102  0D89  07A4               	addwf	___ftadd@f2+1,f
  7103  0D8A  3000               	movlw	0
  7104  0D8B  1803               	skipnc
  7105  0D8C  3001               	movlw	1
  7106  0D8D  07A5               	addwf	___ftadd@f2+2,f
  7107  0D8E  01AA               	clrf	___ftadd@sign
  7108  0D8F  0AAA               	incf	___ftadd@sign,f
  7109  0D90                     i1l2134:	
  7110  0D90  0823               	movf	___ftadd@f2,w
  7111  0D91  00F0               	movwf	___ftpack@arg
  7112  0D92  0824               	movf	___ftadd@f2+1,w
  7113  0D93  00F1               	movwf	___ftpack@arg+1
  7114  0D94  0825               	movf	___ftadd@f2+2,w
  7115  0D95  00F2               	movwf	___ftpack@arg+2
  7116  0D96  082C               	movf	___ftadd@exp1,w
  7117  0D97  00A6               	movwf	??___ftadd
  7118  0D98  0826               	movf	??___ftadd,w
  7119  0D99  00F3               	movwf	___ftpack@exp
  7120  0D9A  082A               	movf	___ftadd@sign,w
  7121  0D9B  00A7               	movwf	??___ftadd+1
  7122  0D9C  0827               	movf	??___ftadd+1,w
  7123  0D9D  00F4               	movwf	___ftpack@sign
  7124  0D9E  160A  118A  2798   	fcall	___ftpack
  7125  0DA1  0870               	movf	?___ftpack,w
  7126  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  7127  0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  7128  0DA4  00A0               	movwf	?___ftadd
  7129  0DA5  0871               	movf	?___ftpack+1,w
  7130  0DA6  00A1               	movwf	?___ftadd+1
  7131  0DA7  0872               	movf	?___ftpack+2,w
  7132  0DA8  00A2               	movwf	?___ftadd+2
  7133  0DA9  0008               	return
  7134  0DAA                     __end_of___ftadd:	
  7135                           
  7136                           	psect	text29
  7137  15DA                     __ptext29:	
  7138 ;; *************** function _max_val *****************
  7139 ;; Defined at:
  7140 ;;		line 153 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;  a               3   12[BANK0 ] float 
  7143 ;;  b               3   15[BANK0 ] float 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  3   12[BANK0 ] float 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2, status,0, pclath, cstack
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7155 ;;      Params:         0       6       0       0       0
  7156 ;;      Locals:         0       0       0       0       0
  7157 ;;      Temps:          0       0       0       0       0
  7158 ;;      Totals:         0       6       0       0       0
  7159 ;;Total ram usage:        6 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; Hardware stack levels required when called:    1
  7162 ;; This function calls:
  7163 ;;		___ftge
  7164 ;; This function is called by:
  7165 ;;		_Fuzzy
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           
  7170                           ;psect for function _max_val
  7171  15DA                     _max_val:	
  7172                           
  7173                           ;main.c: 155: if (a > b)
  7174                           
  7175                           ;incstack = 0
  7176                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  7177  15DA  1283               	bcf	3,5	;RP0=0, select bank0
  7178  15DB  1303               	bcf	3,6	;RP1=0, select bank0
  7179  15DC  082F               	movf	max_val@b,w
  7180  15DD  00A0               	movwf	___ftge@ff1
  7181  15DE  0830               	movf	max_val@b+1,w
  7182  15DF  00A1               	movwf	___ftge@ff1+1
  7183  15E0  0831               	movf	max_val@b+2,w
  7184  15E1  00A2               	movwf	___ftge@ff1+2
  7185  15E2  082C               	movf	max_val@a,w
  7186  15E3  00A3               	movwf	___ftge@ff2
  7187  15E4  082D               	movf	max_val@a+1,w
  7188  15E5  00A4               	movwf	___ftge@ff2+1
  7189  15E6  082E               	movf	max_val@a+2,w
  7190  15E7  00A5               	movwf	___ftge@ff2+2
  7191  15E8  160A  118A  2739  160A  118A  	fcall	___ftge
  7192  15ED  1C03               	btfss	3,0
  7193  15EE  0008               	return
  7194                           
  7195                           ;main.c: 157: else
  7196                           ;main.c: 158: return b;
  7197                           
  7198                           ;main.c: 156: return a;
  7199  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  7200  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  7201  15F1  082F               	movf	max_val@b,w
  7202  15F2  00AC               	movwf	?_max_val
  7203  15F3  0830               	movf	max_val@b+1,w
  7204  15F4  00AD               	movwf	?_max_val+1
  7205  15F5  0831               	movf	max_val@b+2,w
  7206  15F6  00AE               	movwf	?_max_val+2
  7207  15F7  0008               	return
  7208  15F8                     __end_of_max_val:	
  7209                           
  7210                           	psect	text30
  7211  1739                     __ptext30:	
  7212 ;; *************** function ___ftge *****************
  7213 ;; Defined at:
  7214 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  ff1             3    0[BANK0 ] float 
  7217 ;;  ff2             3    3[BANK0 ] float 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;		None               void
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7229 ;;      Params:         0       6       0       0       0
  7230 ;;      Locals:         0       0       0       0       0
  7231 ;;      Temps:          0       6       0       0       0
  7232 ;;      Totals:         0      12       0       0       0
  7233 ;;Total ram usage:       12 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; This function calls:
  7236 ;;		Nothing
  7237 ;; This function is called by:
  7238 ;;		_trimf
  7239 ;;		_trapmf
  7240 ;;		_max_val
  7241 ;;		_Fuzzy
  7242 ;;		_min_val
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           
  7247                           ;psect for function ___ftge
  7248  1739                     ___ftge:	
  7249                           
  7250                           ;incstack = 0
  7251                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7252  1739  1283               	bcf	3,5	;RP0=0, select bank0
  7253  173A  1303               	bcf	3,6	;RP1=0, select bank0
  7254  173B  1FA2               	btfss	___ftge@ff1+2,7
  7255  173C  2F62               	goto	i1l2184
  7256  173D  3000               	movlw	0
  7257  173E  00A6               	movwf	??___ftge
  7258  173F  3000               	movlw	0
  7259  1740  00A7               	movwf	??___ftge+1
  7260  1741  3080               	movlw	128
  7261  1742  00A8               	movwf	??___ftge+2
  7262  1743  0920               	comf	___ftge@ff1,w
  7263  1744  00A9               	movwf	??___ftge+3
  7264  1745  0921               	comf	___ftge@ff1+1,w
  7265  1746  00AA               	movwf	??___ftge+4
  7266  1747  0922               	comf	___ftge@ff1+2,w
  7267  1748  00AB               	movwf	??___ftge+5
  7268  1749  0AA9               	incf	??___ftge+3,f
  7269  174A  1903               	skipnz
  7270  174B  0AAA               	incf	??___ftge+4,f
  7271  174C  1903               	skipnz
  7272  174D  0AAB               	incf	??___ftge+5,f
  7273  174E  0829               	movf	??___ftge+3,w
  7274  174F  07A6               	addwf	??___ftge,f
  7275  1750  082A               	movf	??___ftge+4,w
  7276  1751  1803               	skipnc
  7277  1752  0F2A               	incfsz	??___ftge+4,w
  7278  1753  2F55               	goto	u221_21
  7279  1754  2F56               	goto	u221_22
  7280  1755                     u221_21:	
  7281  1755  07A7               	addwf	??___ftge+1,f
  7282  1756                     u221_22:	
  7283  1756  082B               	movf	??___ftge+5,w
  7284  1757  1803               	skipnc
  7285  1758  0F2B               	incfsz	??___ftge+5,w
  7286  1759  2F5B               	goto	u221_23
  7287  175A  2F5C               	goto	u221_24
  7288  175B                     u221_23:	
  7289  175B  07A8               	addwf	??___ftge+2,f
  7290  175C                     u221_24:	
  7291  175C  0826               	movf	??___ftge,w
  7292  175D  00A0               	movwf	___ftge@ff1
  7293  175E  0827               	movf	??___ftge+1,w
  7294  175F  00A1               	movwf	___ftge@ff1+1
  7295  1760  0828               	movf	??___ftge+2,w
  7296  1761  00A2               	movwf	___ftge@ff1+2
  7297  1762                     i1l2184:	
  7298  1762  1FA5               	btfss	___ftge@ff2+2,7
  7299  1763  2F89               	goto	i1l2188
  7300  1764  3000               	movlw	0
  7301  1765  00A6               	movwf	??___ftge
  7302  1766  3000               	movlw	0
  7303  1767  00A7               	movwf	??___ftge+1
  7304  1768  3080               	movlw	128
  7305  1769  00A8               	movwf	??___ftge+2
  7306  176A  0923               	comf	___ftge@ff2,w
  7307  176B  00A9               	movwf	??___ftge+3
  7308  176C  0924               	comf	___ftge@ff2+1,w
  7309  176D  00AA               	movwf	??___ftge+4
  7310  176E  0925               	comf	___ftge@ff2+2,w
  7311  176F  00AB               	movwf	??___ftge+5
  7312  1770  0AA9               	incf	??___ftge+3,f
  7313  1771  1903               	skipnz
  7314  1772  0AAA               	incf	??___ftge+4,f
  7315  1773  1903               	skipnz
  7316  1774  0AAB               	incf	??___ftge+5,f
  7317  1775  0829               	movf	??___ftge+3,w
  7318  1776  07A6               	addwf	??___ftge,f
  7319  1777  082A               	movf	??___ftge+4,w
  7320  1778  1803               	skipnc
  7321  1779  0F2A               	incfsz	??___ftge+4,w
  7322  177A  2F7C               	goto	u223_21
  7323  177B  2F7D               	goto	u223_22
  7324  177C                     u223_21:	
  7325  177C  07A7               	addwf	??___ftge+1,f
  7326  177D                     u223_22:	
  7327  177D  082B               	movf	??___ftge+5,w
  7328  177E  1803               	skipnc
  7329  177F  0F2B               	incfsz	??___ftge+5,w
  7330  1780  2F82               	goto	u223_23
  7331  1781  2F83               	goto	u223_24
  7332  1782                     u223_23:	
  7333  1782  07A8               	addwf	??___ftge+2,f
  7334  1783                     u223_24:	
  7335  1783  0826               	movf	??___ftge,w
  7336  1784  00A3               	movwf	___ftge@ff2
  7337  1785  0827               	movf	??___ftge+1,w
  7338  1786  00A4               	movwf	___ftge@ff2+1
  7339  1787  0828               	movf	??___ftge+2,w
  7340  1788  00A5               	movwf	___ftge@ff2+2
  7341  1789                     i1l2188:	
  7342  1789  3080               	movlw	128
  7343  178A  06A2               	xorwf	___ftge@ff1+2,f
  7344  178B  3080               	movlw	128
  7345  178C  06A5               	xorwf	___ftge@ff2+2,f
  7346  178D  0825               	movf	___ftge@ff2+2,w
  7347  178E  0222               	subwf	___ftge@ff1+2,w
  7348  178F  1D03               	skipz
  7349  1790  0008               	return
  7350  1791  0824               	movf	___ftge@ff2+1,w
  7351  1792  0221               	subwf	___ftge@ff1+1,w
  7352  1793  1D03               	skipz
  7353  1794  0008               	return
  7354  1795  0823               	movf	___ftge@ff2,w
  7355  1796  0220               	subwf	___ftge@ff1,w
  7356  1797  0008               	return
  7357  1798                     __end_of___ftge:	
  7358                           
  7359                           	psect	text31
  7360  1549                     __ptext31:	
  7361 ;; *************** function ___lwtoft *****************
  7362 ;; Defined at:
  7363 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  c               2    8[COMMON] unsigned int 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;		None
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  3    8[COMMON] float 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0, pclath, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7377 ;;      Params:         3       0       0       0       0
  7378 ;;      Locals:         0       0       0       0       0
  7379 ;;      Temps:          1       0       0       0       0
  7380 ;;      Totals:         4       0       0       0       0
  7381 ;;Total ram usage:        4 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    1
  7384 ;; This function calls:
  7385 ;;		___ftpack
  7386 ;; This function is called by:
  7387 ;;		_Fuzzy
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           
  7392                           ;psect for function ___lwtoft
  7393  1549                     ___lwtoft:	
  7394                           
  7395                           ;incstack = 0
  7396                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7397  1549  0878               	movf	___lwtoft@c,w
  7398  154A  00F0               	movwf	___ftpack@arg
  7399  154B  0879               	movf	___lwtoft@c+1,w
  7400  154C  00F1               	movwf	___ftpack@arg+1
  7401  154D  01F2               	clrf	___ftpack@arg+2
  7402  154E  308E               	movlw	142
  7403  154F  00FB               	movwf	??___lwtoft
  7404  1550  087B               	movf	??___lwtoft,w
  7405  1551  00F3               	movwf	___ftpack@exp
  7406  1552  01F4               	clrf	___ftpack@sign
  7407  1553  160A  118A  2798   	fcall	___ftpack
  7408  1556  0870               	movf	?___ftpack,w
  7409  1557  00F8               	movwf	?___lwtoft
  7410  1558  0871               	movf	?___ftpack+1,w
  7411  1559  00F9               	movwf	?___lwtoft+1
  7412  155A  0872               	movf	?___ftpack+2,w
  7413  155B  00FA               	movwf	?___lwtoft+2
  7414  155C  0008               	return
  7415  155D                     __end_of___lwtoft:	
  7416                           
  7417                           	psect	text32
  7418  16FB                     __ptext32:	
  7419 ;; *************** function ___lwdiv *****************
  7420 ;; Defined at:
  7421 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  divisor         2    0[COMMON] unsigned int 
  7424 ;;  dividend        2    2[COMMON] unsigned int 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;  quotient        2    5[COMMON] unsigned int 
  7427 ;;  counter         1    7[COMMON] unsigned char 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  2    0[COMMON] unsigned int 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7437 ;;      Params:         4       0       0       0       0
  7438 ;;      Locals:         3       0       0       0       0
  7439 ;;      Temps:          1       0       0       0       0
  7440 ;;      Totals:         8       0       0       0       0
  7441 ;;Total ram usage:        8 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; This function calls:
  7444 ;;		Nothing
  7445 ;; This function is called by:
  7446 ;;		_Fuzzy
  7447 ;;		_ISR
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           
  7452                           ;psect for function ___lwdiv
  7453  16FB                     ___lwdiv:	
  7454                           
  7455                           ;incstack = 0
  7456                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7457  16FB  01F5               	clrf	___lwdiv@quotient
  7458  16FC  01F6               	clrf	___lwdiv@quotient+1
  7459  16FD  0871               	movf	___lwdiv@divisor+1,w
  7460  16FE  0470               	iorwf	___lwdiv@divisor,w
  7461  16FF  1903               	skipnz
  7462  1700  2F32               	goto	i1l2476
  7463  1701  01F7               	clrf	___lwdiv@counter
  7464  1702  0AF7               	incf	___lwdiv@counter,f
  7465  1703                     i1l2464:	
  7466  1703  1BF1               	btfsc	___lwdiv@divisor+1,7
  7467  1704  2F11               	goto	i1l2466
  7468  1705  3001               	movlw	1
  7469  1706                     u282_25:	
  7470  1706  1003               	clrc
  7471  1707  0DF0               	rlf	___lwdiv@divisor,f
  7472  1708  0DF1               	rlf	___lwdiv@divisor+1,f
  7473  1709  3EFF               	addlw	-1
  7474  170A  1D03               	skipz
  7475  170B  2F06               	goto	u282_25
  7476  170C  3001               	movlw	1
  7477  170D  00F4               	movwf	??___lwdiv
  7478  170E  0874               	movf	??___lwdiv,w
  7479  170F  07F7               	addwf	___lwdiv@counter,f
  7480  1710  2F03               	goto	i1l2464
  7481  1711                     i1l2466:	
  7482  1711  3001               	movlw	1
  7483  1712                     u284_25:	
  7484  1712  1003               	clrc
  7485  1713  0DF5               	rlf	___lwdiv@quotient,f
  7486  1714  0DF6               	rlf	___lwdiv@quotient+1,f
  7487  1715  3EFF               	addlw	-1
  7488  1716  1D03               	skipz
  7489  1717  2F12               	goto	u284_25
  7490  1718  0871               	movf	___lwdiv@divisor+1,w
  7491  1719  0273               	subwf	___lwdiv@dividend+1,w
  7492  171A  1D03               	skipz
  7493  171B  2F1E               	goto	u285_25
  7494  171C  0870               	movf	___lwdiv@divisor,w
  7495  171D  0272               	subwf	___lwdiv@dividend,w
  7496  171E                     u285_25:	
  7497  171E  1C03               	skipc
  7498  171F  2F27               	goto	i1l2472
  7499  1720  0870               	movf	___lwdiv@divisor,w
  7500  1721  02F2               	subwf	___lwdiv@dividend,f
  7501  1722  0871               	movf	___lwdiv@divisor+1,w
  7502  1723  1C03               	skipc
  7503  1724  03F3               	decf	___lwdiv@dividend+1,f
  7504  1725  02F3               	subwf	___lwdiv@dividend+1,f
  7505  1726  1475               	bsf	___lwdiv@quotient,0
  7506  1727                     i1l2472:	
  7507  1727  3001               	movlw	1
  7508  1728                     u286_25:	
  7509  1728  1003               	clrc
  7510  1729  0CF1               	rrf	___lwdiv@divisor+1,f
  7511  172A  0CF0               	rrf	___lwdiv@divisor,f
  7512  172B  3EFF               	addlw	-1
  7513  172C  1D03               	skipz
  7514  172D  2F28               	goto	u286_25
  7515  172E  3001               	movlw	1
  7516  172F  02F7               	subwf	___lwdiv@counter,f
  7517  1730  1D03               	btfss	3,2
  7518  1731  2F11               	goto	i1l2466
  7519  1732                     i1l2476:	
  7520  1732  0876               	movf	___lwdiv@quotient+1,w
  7521  1733  01F1               	clrf	?___lwdiv+1
  7522  1734  07F1               	addwf	?___lwdiv+1,f
  7523  1735  0875               	movf	___lwdiv@quotient,w
  7524  1736  01F0               	clrf	?___lwdiv
  7525  1737  07F0               	addwf	?___lwdiv,f
  7526  1738  0008               	return
  7527  1739                     __end_of___lwdiv:	
  7528                           
  7529                           	psect	text33
  7530  0750                     __ptext33:	
  7531 ;; *************** function ___fttol *****************
  7532 ;; Defined at:
  7533 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  f1              3   47[BANK0 ] float 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  lval            4   56[BANK0 ] unsigned long 
  7538 ;;  exp1            1   60[BANK0 ] unsigned char 
  7539 ;;  sign1           1   55[BANK0 ] unsigned char 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  4   47[BANK0 ] long 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7549 ;;      Params:         0       4       0       0       0
  7550 ;;      Locals:         0       6       0       0       0
  7551 ;;      Temps:          0       4       0       0       0
  7552 ;;      Totals:         0      14       0       0       0
  7553 ;;Total ram usage:       14 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; This function calls:
  7556 ;;		Nothing
  7557 ;; This function is called by:
  7558 ;;		_Fuzzy
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           
  7563                           ;psect for function ___fttol
  7564  0750                     ___fttol:	
  7565                           
  7566                           ;incstack = 0
  7567                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7568  0750  1283               	bcf	3,5	;RP0=0, select bank0
  7569  0751  1303               	bcf	3,6	;RP1=0, select bank0
  7570  0752  084F               	movf	___fttol@f1,w
  7571  0753  00D3               	movwf	??___fttol
  7572  0754  0850               	movf	___fttol@f1+1,w
  7573  0755  00D4               	movwf	??___fttol+1
  7574  0756  0851               	movf	___fttol@f1+2,w
  7575  0757  00D5               	movwf	??___fttol+2
  7576  0758  1003               	clrc
  7577  0759  0D54               	rlf	??___fttol+1,w
  7578  075A  0D55               	rlf	??___fttol+2,w
  7579  075B  00D6               	movwf	??___fttol+3
  7580  075C  0856               	movf	??___fttol+3,w
  7581  075D  00DC               	movwf	___fttol@exp1
  7582  075E  08DC               	movf	___fttol@exp1,f
  7583  075F  1D03               	skipz
  7584  0760  2F6A               	goto	i1l2416
  7585  0761  3000               	movlw	0
  7586  0762  00D2               	movwf	?___fttol+3
  7587  0763  3000               	movlw	0
  7588  0764  00D1               	movwf	?___fttol+2
  7589  0765  3000               	movlw	0
  7590  0766  00D0               	movwf	?___fttol+1
  7591  0767  3000               	movlw	0
  7592  0768  00CF               	movwf	?___fttol
  7593  0769  0008               	return
  7594  076A                     i1l2416:	
  7595  076A  084F               	movf	___fttol@f1,w
  7596  076B  00D3               	movwf	??___fttol
  7597  076C  0850               	movf	___fttol@f1+1,w
  7598  076D  00D4               	movwf	??___fttol+1
  7599  076E  0851               	movf	___fttol@f1+2,w
  7600  076F  00D5               	movwf	??___fttol+2
  7601  0770  3017               	movlw	23
  7602  0771                     u272_25:	
  7603  0771  1003               	clrc
  7604  0772  0CD5               	rrf	??___fttol+2,f
  7605  0773  0CD4               	rrf	??___fttol+1,f
  7606  0774  0CD3               	rrf	??___fttol,f
  7607  0775  3EFF               	addlw	-1
  7608  0776  1D03               	skipz
  7609  0777  2F71               	goto	u272_25
  7610  0778  0853               	movf	??___fttol,w
  7611  0779  00D6               	movwf	??___fttol+3
  7612  077A  0856               	movf	??___fttol+3,w
  7613  077B  00D7               	movwf	___fttol@sign1
  7614  077C  17D0               	bsf	___fttol@f1+1,7
  7615  077D  30FF               	movlw	255
  7616  077E  05CF               	andwf	___fttol@f1,f
  7617  077F  30FF               	movlw	255
  7618  0780  05D0               	andwf	___fttol@f1+1,f
  7619  0781  3000               	movlw	0
  7620  0782  05D1               	andwf	___fttol@f1+2,f
  7621  0783  084F               	movf	___fttol@f1,w
  7622  0784  00D8               	movwf	___fttol@lval
  7623  0785  0850               	movf	___fttol@f1+1,w
  7624  0786  00D9               	movwf	___fttol@lval+1
  7625  0787  0851               	movf	___fttol@f1+2,w
  7626  0788  00DA               	movwf	___fttol@lval+2
  7627  0789  01DB               	clrf	___fttol@lval+3
  7628  078A  308E               	movlw	142
  7629  078B  02DC               	subwf	___fttol@exp1,f
  7630  078C  1FDC               	btfss	___fttol@exp1,7
  7631  078D  2FAC               	goto	i1l2436
  7632  078E  085C               	movf	___fttol@exp1,w
  7633  078F  3A80               	xorlw	128
  7634  0790  3E8F               	addlw	143
  7635  0791  1803               	skipnc
  7636  0792  2F9C               	goto	i1l2434
  7637  0793  3000               	movlw	0
  7638  0794  00D2               	movwf	?___fttol+3
  7639  0795  3000               	movlw	0
  7640  0796  00D1               	movwf	?___fttol+2
  7641  0797  3000               	movlw	0
  7642  0798  00D0               	movwf	?___fttol+1
  7643  0799  3000               	movlw	0
  7644  079A  00CF               	movwf	?___fttol
  7645  079B  0008               	return
  7646  079C                     i1l2434:	
  7647  079C  3001               	movlw	1
  7648  079D                     u275_25:	
  7649  079D  1003               	clrc
  7650  079E  0CDB               	rrf	___fttol@lval+3,f
  7651  079F  0CDA               	rrf	___fttol@lval+2,f
  7652  07A0  0CD9               	rrf	___fttol@lval+1,f
  7653  07A1  0CD8               	rrf	___fttol@lval,f
  7654  07A2  3EFF               	addlw	-1
  7655  07A3  1D03               	skipz
  7656  07A4  2F9D               	goto	u275_25
  7657  07A5  3001               	movlw	1
  7658  07A6  00D3               	movwf	??___fttol
  7659  07A7  0853               	movf	??___fttol,w
  7660  07A8  07DC               	addwf	___fttol@exp1,f
  7661  07A9  1903               	btfsc	3,2
  7662  07AA  2FC7               	goto	i1l2446
  7663  07AB  2F9C               	goto	i1l2434
  7664  07AC                     i1l2436:	
  7665  07AC  3018               	movlw	24
  7666  07AD  025C               	subwf	___fttol@exp1,w
  7667  07AE  1C03               	skipc
  7668  07AF  2FC4               	goto	i1l2444
  7669  07B0  3000               	movlw	0
  7670  07B1  00D2               	movwf	?___fttol+3
  7671  07B2  3000               	movlw	0
  7672  07B3  00D1               	movwf	?___fttol+2
  7673  07B4  3000               	movlw	0
  7674  07B5  00D0               	movwf	?___fttol+1
  7675  07B6  3000               	movlw	0
  7676  07B7  00CF               	movwf	?___fttol
  7677  07B8  0008               	return
  7678  07B9                     i1l2442:	
  7679  07B9  3001               	movlw	1
  7680  07BA  00D3               	movwf	??___fttol
  7681  07BB                     u278_25:	
  7682  07BB  1003               	clrc
  7683  07BC  0DD8               	rlf	___fttol@lval,f
  7684  07BD  0DD9               	rlf	___fttol@lval+1,f
  7685  07BE  0DDA               	rlf	___fttol@lval+2,f
  7686  07BF  0DDB               	rlf	___fttol@lval+3,f
  7687  07C0  0BD3               	decfsz	??___fttol,f
  7688  07C1  2FBB               	goto	u278_25
  7689  07C2  3001               	movlw	1
  7690  07C3  02DC               	subwf	___fttol@exp1,f
  7691  07C4                     i1l2444:	
  7692  07C4  08DC               	movf	___fttol@exp1,f
  7693  07C5  1D03               	skipz
  7694  07C6  2FB9               	goto	i1l2442
  7695  07C7                     i1l2446:	
  7696  07C7  0857               	movf	___fttol@sign1,w
  7697  07C8  1903               	btfsc	3,2
  7698  07C9  2FD5               	goto	i1l2450
  7699  07CA  09D8               	comf	___fttol@lval,f
  7700  07CB  09D9               	comf	___fttol@lval+1,f
  7701  07CC  09DA               	comf	___fttol@lval+2,f
  7702  07CD  09DB               	comf	___fttol@lval+3,f
  7703  07CE  0AD8               	incf	___fttol@lval,f
  7704  07CF  1903               	skipnz
  7705  07D0  0AD9               	incf	___fttol@lval+1,f
  7706  07D1  1903               	skipnz
  7707  07D2  0ADA               	incf	___fttol@lval+2,f
  7708  07D3  1903               	skipnz
  7709  07D4  0ADB               	incf	___fttol@lval+3,f
  7710  07D5                     i1l2450:	
  7711  07D5  085B               	movf	___fttol@lval+3,w
  7712  07D6  00D2               	movwf	?___fttol+3
  7713  07D7  085A               	movf	___fttol@lval+2,w
  7714  07D8  00D1               	movwf	?___fttol+2
  7715  07D9  0859               	movf	___fttol@lval+1,w
  7716  07DA  00D0               	movwf	?___fttol+1
  7717  07DB  0858               	movf	___fttol@lval,w
  7718  07DC  00CF               	movwf	?___fttol
  7719  07DD  0008               	return
  7720  07DE                     __end_of___fttol:	
  7721                           
  7722                           	psect	text34
  7723  0AF7                     __ptext34:	
  7724 ;; *************** function ___ftmul *****************
  7725 ;; Defined at:
  7726 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  f1              3    8[COMMON] float 
  7729 ;;  f2              3   11[COMMON] float 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  7732 ;;  sign            1    9[BANK0 ] unsigned char 
  7733 ;;  cntr            1    8[BANK0 ] unsigned char 
  7734 ;;  exp             1    4[BANK0 ] unsigned char 
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  3    8[COMMON] float 
  7737 ;; Registers used:
  7738 ;;		wreg, status,2, status,0, pclath, cstack
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 0/0
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7744 ;;      Params:         6       0       0       0       0
  7745 ;;      Locals:         0       6       0       0       0
  7746 ;;      Temps:          0       4       0       0       0
  7747 ;;      Totals:         6      10       0       0       0
  7748 ;;Total ram usage:       16 bytes
  7749 ;; Hardware stack levels used:    1
  7750 ;; Hardware stack levels required when called:    1
  7751 ;; This function calls:
  7752 ;;		___ftpack
  7753 ;; This function is called by:
  7754 ;;		_Fuzzy
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           
  7759                           ;psect for function ___ftmul
  7760  0AF7                     ___ftmul:	
  7761                           
  7762                           ;incstack = 0
  7763                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7764  0AF7  0878               	movf	___ftmul@f1,w
  7765  0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  7766  0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  7767  0AFA  00A0               	movwf	??___ftmul
  7768  0AFB  0879               	movf	___ftmul@f1+1,w
  7769  0AFC  00A1               	movwf	??___ftmul+1
  7770  0AFD  087A               	movf	___ftmul@f1+2,w
  7771  0AFE  00A2               	movwf	??___ftmul+2
  7772  0AFF  1003               	clrc
  7773  0B00  0D21               	rlf	??___ftmul+1,w
  7774  0B01  0D22               	rlf	??___ftmul+2,w
  7775  0B02  00A3               	movwf	??___ftmul+3
  7776  0B03  0823               	movf	??___ftmul+3,w
  7777  0B04  00A4               	movwf	___ftmul@exp
  7778  0B05  08A4               	movf	___ftmul@exp,f
  7779  0B06  1D03               	skipz
  7780  0B07  2B0F               	goto	i1l2366
  7781  0B08  3000               	movlw	0
  7782  0B09  00F8               	movwf	?___ftmul
  7783  0B0A  3000               	movlw	0
  7784  0B0B  00F9               	movwf	?___ftmul+1
  7785  0B0C  3000               	movlw	0
  7786  0B0D  00FA               	movwf	?___ftmul+2
  7787  0B0E  0008               	return
  7788  0B0F                     i1l2366:	
  7789  0B0F  087B               	movf	___ftmul@f2,w
  7790  0B10  00A0               	movwf	??___ftmul
  7791  0B11  087C               	movf	___ftmul@f2+1,w
  7792  0B12  00A1               	movwf	??___ftmul+1
  7793  0B13  087D               	movf	___ftmul@f2+2,w
  7794  0B14  00A2               	movwf	??___ftmul+2
  7795  0B15  1003               	clrc
  7796  0B16  0D21               	rlf	??___ftmul+1,w
  7797  0B17  0D22               	rlf	??___ftmul+2,w
  7798  0B18  00A3               	movwf	??___ftmul+3
  7799  0B19  0823               	movf	??___ftmul+3,w
  7800  0B1A  00A9               	movwf	___ftmul@sign
  7801  0B1B  08A9               	movf	___ftmul@sign,f
  7802  0B1C  1D03               	skipz
  7803  0B1D  2B25               	goto	i1l2372
  7804  0B1E  3000               	movlw	0
  7805  0B1F  00F8               	movwf	?___ftmul
  7806  0B20  3000               	movlw	0
  7807  0B21  00F9               	movwf	?___ftmul+1
  7808  0B22  3000               	movlw	0
  7809  0B23  00FA               	movwf	?___ftmul+2
  7810  0B24  0008               	return
  7811  0B25                     i1l2372:	
  7812  0B25  0829               	movf	___ftmul@sign,w
  7813  0B26  3E7B               	addlw	123
  7814  0B27  00A0               	movwf	??___ftmul
  7815  0B28  0820               	movf	??___ftmul,w
  7816  0B29  07A4               	addwf	___ftmul@exp,f
  7817  0B2A  0878               	movf	___ftmul@f1,w
  7818  0B2B  00A0               	movwf	??___ftmul
  7819  0B2C  0879               	movf	___ftmul@f1+1,w
  7820  0B2D  00A1               	movwf	??___ftmul+1
  7821  0B2E  087A               	movf	___ftmul@f1+2,w
  7822  0B2F  00A2               	movwf	??___ftmul+2
  7823  0B30  3010               	movlw	16
  7824  0B31                     u259_25:	
  7825  0B31  1003               	clrc
  7826  0B32  0CA2               	rrf	??___ftmul+2,f
  7827  0B33  0CA1               	rrf	??___ftmul+1,f
  7828  0B34  0CA0               	rrf	??___ftmul,f
  7829  0B35  3EFF               	addlw	-1
  7830  0B36  1D03               	skipz
  7831  0B37  2B31               	goto	u259_25
  7832  0B38  0820               	movf	??___ftmul,w
  7833  0B39  00A3               	movwf	??___ftmul+3
  7834  0B3A  0823               	movf	??___ftmul+3,w
  7835  0B3B  00A9               	movwf	___ftmul@sign
  7836  0B3C  087B               	movf	___ftmul@f2,w
  7837  0B3D  00A0               	movwf	??___ftmul
  7838  0B3E  087C               	movf	___ftmul@f2+1,w
  7839  0B3F  00A1               	movwf	??___ftmul+1
  7840  0B40  087D               	movf	___ftmul@f2+2,w
  7841  0B41  00A2               	movwf	??___ftmul+2
  7842  0B42  3010               	movlw	16
  7843  0B43                     u260_25:	
  7844  0B43  1003               	clrc
  7845  0B44  0CA2               	rrf	??___ftmul+2,f
  7846  0B45  0CA1               	rrf	??___ftmul+1,f
  7847  0B46  0CA0               	rrf	??___ftmul,f
  7848  0B47  3EFF               	addlw	-1
  7849  0B48  1D03               	skipz
  7850  0B49  2B43               	goto	u260_25
  7851  0B4A  0820               	movf	??___ftmul,w
  7852  0B4B  00A3               	movwf	??___ftmul+3
  7853  0B4C  0823               	movf	??___ftmul+3,w
  7854  0B4D  06A9               	xorwf	___ftmul@sign,f
  7855  0B4E  3080               	movlw	128
  7856  0B4F  00A0               	movwf	??___ftmul
  7857  0B50  0820               	movf	??___ftmul,w
  7858  0B51  05A9               	andwf	___ftmul@sign,f
  7859  0B52  17F9               	bsf	___ftmul@f1+1,7
  7860  0B53  17FC               	bsf	___ftmul@f2+1,7
  7861  0B54  30FF               	movlw	255
  7862  0B55  05FB               	andwf	___ftmul@f2,f
  7863  0B56  30FF               	movlw	255
  7864  0B57  05FC               	andwf	___ftmul@f2+1,f
  7865  0B58  3000               	movlw	0
  7866  0B59  05FD               	andwf	___ftmul@f2+2,f
  7867  0B5A  3000               	movlw	0
  7868  0B5B  00A5               	movwf	___ftmul@f3_as_product
  7869  0B5C  3000               	movlw	0
  7870  0B5D  00A6               	movwf	___ftmul@f3_as_product+1
  7871  0B5E  3000               	movlw	0
  7872  0B5F  00A7               	movwf	___ftmul@f3_as_product+2
  7873  0B60  3007               	movlw	7
  7874  0B61  00A0               	movwf	??___ftmul
  7875  0B62  0820               	movf	??___ftmul,w
  7876  0B63  00A8               	movwf	___ftmul@cntr
  7877  0B64                     i1l2384:	
  7878  0B64  1C78               	btfss	___ftmul@f1,0
  7879  0B65  2B74               	goto	i1l2388
  7880  0B66  087B               	movf	___ftmul@f2,w
  7881  0B67  07A5               	addwf	___ftmul@f3_as_product,f
  7882  0B68  087C               	movf	___ftmul@f2+1,w
  7883  0B69  1103               	clrz
  7884  0B6A  1803               	skipnc
  7885  0B6B  0A7C               	incf	___ftmul@f2+1,w
  7886  0B6C  1D03               	btfss	3,2
  7887  0B6D  07A6               	addwf	___ftmul@f3_as_product+1,f
  7888  0B6E  087D               	movf	___ftmul@f2+2,w
  7889  0B6F  1103               	clrz
  7890  0B70  1803               	skipnc
  7891  0B71  0A7D               	incf	___ftmul@f2+2,w
  7892  0B72  1D03               	btfss	3,2
  7893  0B73  07A7               	addwf	___ftmul@f3_as_product+2,f
  7894  0B74                     i1l2388:	
  7895  0B74  3001               	movlw	1
  7896  0B75                     u263_25:	
  7897  0B75  1003               	clrc
  7898  0B76  0CFA               	rrf	___ftmul@f1+2,f
  7899  0B77  0CF9               	rrf	___ftmul@f1+1,f
  7900  0B78  0CF8               	rrf	___ftmul@f1,f
  7901  0B79  3EFF               	addlw	-1
  7902  0B7A  1D03               	skipz
  7903  0B7B  2B75               	goto	u263_25
  7904  0B7C  3001               	movlw	1
  7905  0B7D                     u264_25:	
  7906  0B7D  1003               	clrc
  7907  0B7E  0DFB               	rlf	___ftmul@f2,f
  7908  0B7F  0DFC               	rlf	___ftmul@f2+1,f
  7909  0B80  0DFD               	rlf	___ftmul@f2+2,f
  7910  0B81  3EFF               	addlw	-1
  7911  0B82  1D03               	skipz
  7912  0B83  2B7D               	goto	u264_25
  7913  0B84  3001               	movlw	1
  7914  0B85  02A8               	subwf	___ftmul@cntr,f
  7915  0B86  1D03               	btfss	3,2
  7916  0B87  2B64               	goto	i1l2384
  7917  0B88  3009               	movlw	9
  7918  0B89  00A0               	movwf	??___ftmul
  7919  0B8A  0820               	movf	??___ftmul,w
  7920  0B8B  00A8               	movwf	___ftmul@cntr
  7921  0B8C                     i1l2396:	
  7922  0B8C  1C78               	btfss	___ftmul@f1,0
  7923  0B8D  2B9C               	goto	i1l2400
  7924  0B8E  087B               	movf	___ftmul@f2,w
  7925  0B8F  07A5               	addwf	___ftmul@f3_as_product,f
  7926  0B90  087C               	movf	___ftmul@f2+1,w
  7927  0B91  1103               	clrz
  7928  0B92  1803               	skipnc
  7929  0B93  0A7C               	incf	___ftmul@f2+1,w
  7930  0B94  1D03               	btfss	3,2
  7931  0B95  07A6               	addwf	___ftmul@f3_as_product+1,f
  7932  0B96  087D               	movf	___ftmul@f2+2,w
  7933  0B97  1103               	clrz
  7934  0B98  1803               	skipnc
  7935  0B99  0A7D               	incf	___ftmul@f2+2,w
  7936  0B9A  1D03               	btfss	3,2
  7937  0B9B  07A7               	addwf	___ftmul@f3_as_product+2,f
  7938  0B9C                     i1l2400:	
  7939  0B9C  3001               	movlw	1
  7940  0B9D                     u268_25:	
  7941  0B9D  1003               	clrc
  7942  0B9E  0CFA               	rrf	___ftmul@f1+2,f
  7943  0B9F  0CF9               	rrf	___ftmul@f1+1,f
  7944  0BA0  0CF8               	rrf	___ftmul@f1,f
  7945  0BA1  3EFF               	addlw	-1
  7946  0BA2  1D03               	skipz
  7947  0BA3  2B9D               	goto	u268_25
  7948  0BA4  3001               	movlw	1
  7949  0BA5                     u269_25:	
  7950  0BA5  1003               	clrc
  7951  0BA6  0CA7               	rrf	___ftmul@f3_as_product+2,f
  7952  0BA7  0CA6               	rrf	___ftmul@f3_as_product+1,f
  7953  0BA8  0CA5               	rrf	___ftmul@f3_as_product,f
  7954  0BA9  3EFF               	addlw	-1
  7955  0BAA  1D03               	skipz
  7956  0BAB  2BA5               	goto	u269_25
  7957  0BAC  3001               	movlw	1
  7958  0BAD  02A8               	subwf	___ftmul@cntr,f
  7959  0BAE  1D03               	btfss	3,2
  7960  0BAF  2B8C               	goto	i1l2396
  7961  0BB0  0825               	movf	___ftmul@f3_as_product,w
  7962  0BB1  00F0               	movwf	___ftpack@arg
  7963  0BB2  0826               	movf	___ftmul@f3_as_product+1,w
  7964  0BB3  00F1               	movwf	___ftpack@arg+1
  7965  0BB4  0827               	movf	___ftmul@f3_as_product+2,w
  7966  0BB5  00F2               	movwf	___ftpack@arg+2
  7967  0BB6  0824               	movf	___ftmul@exp,w
  7968  0BB7  00A0               	movwf	??___ftmul
  7969  0BB8  0820               	movf	??___ftmul,w
  7970  0BB9  00F3               	movwf	___ftpack@exp
  7971  0BBA  0829               	movf	___ftmul@sign,w
  7972  0BBB  00A1               	movwf	??___ftmul+1
  7973  0BBC  0821               	movf	??___ftmul+1,w
  7974  0BBD  00F4               	movwf	___ftpack@sign
  7975  0BBE  160A  118A  2798   	fcall	___ftpack
  7976  0BC1  0870               	movf	?___ftpack,w
  7977  0BC2  00F8               	movwf	?___ftmul
  7978  0BC3  0871               	movf	?___ftpack+1,w
  7979  0BC4  00F9               	movwf	?___ftmul+1
  7980  0BC5  0872               	movf	?___ftpack+2,w
  7981  0BC6  00FA               	movwf	?___ftmul+2
  7982  0BC7  0008               	return
  7983  0BC8                     __end_of___ftmul:	
  7984                           
  7985                           	psect	text35
  7986  1618                     __ptext35:	
  7987 ;; *************** function ___awtoft *****************
  7988 ;; Defined at:
  7989 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;  c               2    8[COMMON] int 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;  sign            1   13[COMMON] unsigned char 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  3    8[COMMON] float 
  7996 ;; Registers used:
  7997 ;;		wreg, status,2, status,0, pclath, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8003 ;;      Params:         3       0       0       0       0
  8004 ;;      Locals:         1       0       0       0       0
  8005 ;;      Temps:          2       0       0       0       0
  8006 ;;      Totals:         6       0       0       0       0
  8007 ;;Total ram usage:        6 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:    1
  8010 ;; This function calls:
  8011 ;;		___ftpack
  8012 ;; This function is called by:
  8013 ;;		_Fuzzy
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           
  8018                           ;psect for function ___awtoft
  8019  1618                     ___awtoft:	
  8020                           
  8021                           ;incstack = 0
  8022                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8023  1618  01FD               	clrf	___awtoft@sign
  8024  1619  1FF9               	btfss	___awtoft@c+1,7
  8025  161A  2E22               	goto	i1l2356
  8026  161B  09F8               	comf	___awtoft@c,f
  8027  161C  09F9               	comf	___awtoft@c+1,f
  8028  161D  0AF8               	incf	___awtoft@c,f
  8029  161E  1903               	skipnz
  8030  161F  0AF9               	incf	___awtoft@c+1,f
  8031  1620  01FD               	clrf	___awtoft@sign
  8032  1621  0AFD               	incf	___awtoft@sign,f
  8033  1622                     i1l2356:	
  8034  1622  0878               	movf	___awtoft@c,w
  8035  1623  00F0               	movwf	___ftpack@arg
  8036  1624  0879               	movf	___awtoft@c+1,w
  8037  1625  00F1               	movwf	___ftpack@arg+1
  8038  1626  01F2               	clrf	___ftpack@arg+2
  8039  1627  308E               	movlw	142
  8040  1628  00FB               	movwf	??___awtoft
  8041  1629  087B               	movf	??___awtoft,w
  8042  162A  00F3               	movwf	___ftpack@exp
  8043  162B  087D               	movf	___awtoft@sign,w
  8044  162C  00FC               	movwf	??___awtoft+1
  8045  162D  087C               	movf	??___awtoft+1,w
  8046  162E  00F4               	movwf	___ftpack@sign
  8047  162F  160A  118A  2798   	fcall	___ftpack
  8048  1632  0870               	movf	?___ftpack,w
  8049  1633  00F8               	movwf	?___awtoft
  8050  1634  0871               	movf	?___ftpack+1,w
  8051  1635  00F9               	movwf	?___awtoft+1
  8052  1636  0872               	movf	?___ftpack+2,w
  8053  1637  00FA               	movwf	?___awtoft+2
  8054  1638  0008               	return
  8055  1639                     __end_of___awtoft:	
  8056                           
  8057                           	psect	text36
  8058  1798                     __ptext36:	
  8059 ;; *************** function ___ftpack *****************
  8060 ;; Defined at:
  8061 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  8062 ;; Parameters:    Size  Location     Type
  8063 ;;  arg             3    0[COMMON] unsigned um
  8064 ;;  exp             1    3[COMMON] unsigned char 
  8065 ;;  sign            1    4[COMMON] unsigned char 
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  3    0[COMMON] float 
  8070 ;; Registers used:
  8071 ;;		wreg, status,2, status,0
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8077 ;;      Params:         5       0       0       0       0
  8078 ;;      Locals:         0       0       0       0       0
  8079 ;;      Temps:          3       0       0       0       0
  8080 ;;      Totals:         8       0       0       0       0
  8081 ;;Total ram usage:        8 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		___awtoft
  8087 ;;		___ftadd
  8088 ;;		___ftdiv
  8089 ;;		___ftmul
  8090 ;;		___lwtoft
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           
  8095                           ;psect for function ___ftpack
  8096  1798                     ___ftpack:	
  8097                           
  8098                           ;incstack = 0
  8099                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8100  1798  0873               	movf	___ftpack@exp,w
  8101  1799  1903               	btfsc	3,2
  8102  179A  2FA0               	goto	i1l2036
  8103  179B  0872               	movf	___ftpack@arg+2,w
  8104  179C  0471               	iorwf	___ftpack@arg+1,w
  8105  179D  0470               	iorwf	___ftpack@arg,w
  8106  179E  1D03               	skipz
  8107  179F  2FB3               	goto	i1l2042
  8108  17A0                     i1l2036:	
  8109  17A0  3000               	movlw	0
  8110  17A1  00F0               	movwf	?___ftpack
  8111  17A2  3000               	movlw	0
  8112  17A3  00F1               	movwf	?___ftpack+1
  8113  17A4  3000               	movlw	0
  8114  17A5  00F2               	movwf	?___ftpack+2
  8115  17A6  0008               	return
  8116  17A7                     i1l2040:	
  8117  17A7  3001               	movlw	1
  8118  17A8  00F5               	movwf	??___ftpack
  8119  17A9  0875               	movf	??___ftpack,w
  8120  17AA  07F3               	addwf	___ftpack@exp,f
  8121  17AB  3001               	movlw	1
  8122  17AC                     u178_25:	
  8123  17AC  1003               	clrc
  8124  17AD  0CF2               	rrf	___ftpack@arg+2,f
  8125  17AE  0CF1               	rrf	___ftpack@arg+1,f
  8126  17AF  0CF0               	rrf	___ftpack@arg,f
  8127  17B0  3EFF               	addlw	-1
  8128  17B1  1D03               	skipz
  8129  17B2  2FAC               	goto	u178_25
  8130  17B3                     i1l2042:	
  8131  17B3  30FE               	movlw	254
  8132  17B4  0572               	andwf	___ftpack@arg+2,w
  8133  17B5  1903               	btfsc	3,2
  8134  17B6  2FCE               	goto	i1l706
  8135  17B7  2FA7               	goto	i1l2040
  8136  17B8                     i1l2044:	
  8137  17B8  3001               	movlw	1
  8138  17B9  00F5               	movwf	??___ftpack
  8139  17BA  0875               	movf	??___ftpack,w
  8140  17BB  07F3               	addwf	___ftpack@exp,f
  8141  17BC  3001               	movlw	1
  8142  17BD  07F0               	addwf	___ftpack@arg,f
  8143  17BE  3000               	movlw	0
  8144  17BF  1803               	skipnc
  8145  17C0  3001               	movlw	1
  8146  17C1  07F1               	addwf	___ftpack@arg+1,f
  8147  17C2  3000               	movlw	0
  8148  17C3  1803               	skipnc
  8149  17C4  3001               	movlw	1
  8150  17C5  07F2               	addwf	___ftpack@arg+2,f
  8151  17C6  3001               	movlw	1
  8152  17C7                     u180_25:	
  8153  17C7  1003               	clrc
  8154  17C8  0CF2               	rrf	___ftpack@arg+2,f
  8155  17C9  0CF1               	rrf	___ftpack@arg+1,f
  8156  17CA  0CF0               	rrf	___ftpack@arg,f
  8157  17CB  3EFF               	addlw	-1
  8158  17CC  1D03               	skipz
  8159  17CD  2FC7               	goto	u180_25
  8160  17CE                     i1l706:	
  8161  17CE  30FF               	movlw	255
  8162  17CF  0572               	andwf	___ftpack@arg+2,w
  8163  17D0  1903               	btfsc	3,2
  8164  17D1  2FDD               	goto	i1l2052
  8165  17D2  2FB8               	goto	i1l2044
  8166  17D3                     i1l2050:	
  8167  17D3  3001               	movlw	1
  8168  17D4  02F3               	subwf	___ftpack@exp,f
  8169  17D5  3001               	movlw	1
  8170  17D6                     u182_25:	
  8171  17D6  1003               	clrc
  8172  17D7  0DF0               	rlf	___ftpack@arg,f
  8173  17D8  0DF1               	rlf	___ftpack@arg+1,f
  8174  17D9  0DF2               	rlf	___ftpack@arg+2,f
  8175  17DA  3EFF               	addlw	-1
  8176  17DB  1D03               	skipz
  8177  17DC  2FD6               	goto	u182_25
  8178  17DD                     i1l2052:	
  8179  17DD  1FF1               	btfss	___ftpack@arg+1,7
  8180  17DE  2FD3               	goto	i1l2050
  8181  17DF  1873               	btfsc	___ftpack@exp,0
  8182  17E0  2FE7               	goto	i1l712
  8183  17E1  30FF               	movlw	255
  8184  17E2  05F0               	andwf	___ftpack@arg,f
  8185  17E3  307F               	movlw	127
  8186  17E4  05F1               	andwf	___ftpack@arg+1,f
  8187  17E5  30FF               	movlw	255
  8188  17E6  05F2               	andwf	___ftpack@arg+2,f
  8189  17E7                     i1l712:	
  8190  17E7  1003               	clrc
  8191  17E8  0CF3               	rrf	___ftpack@exp,f
  8192  17E9  0873               	movf	___ftpack@exp,w
  8193  17EA  00F5               	movwf	??___ftpack
  8194  17EB  01F6               	clrf	??___ftpack+1
  8195  17EC  01F7               	clrf	??___ftpack+2
  8196  17ED  3010               	movlw	16
  8197  17EE                     u185_25:	
  8198  17EE  1003               	clrc
  8199  17EF  0DF5               	rlf	??___ftpack,f
  8200  17F0  0DF6               	rlf	??___ftpack+1,f
  8201  17F1  0DF7               	rlf	??___ftpack+2,f
  8202  17F2  3EFF               	addlw	-1
  8203  17F3  1D03               	skipz
  8204  17F4  2FEE               	goto	u185_25
  8205  17F5  0875               	movf	??___ftpack,w
  8206  17F6  04F0               	iorwf	___ftpack@arg,f
  8207  17F7  0876               	movf	??___ftpack+1,w
  8208  17F8  04F1               	iorwf	___ftpack@arg+1,f
  8209  17F9  0877               	movf	??___ftpack+2,w
  8210  17FA  04F2               	iorwf	___ftpack@arg+2,f
  8211  17FB  0874               	movf	___ftpack@sign,w
  8212  17FC  1903               	btfsc	3,2
  8213  17FD  0008               	return
  8214  17FE  17F2               	bsf	___ftpack@arg+2,7
  8215  17FF  0008               	return
  8216  1800                     __end_of___ftpack:	
  8217  007E                     btemp	set	126	;btemp
  8218  007E                     wtemp	set	126
  8219  007E                     wtemp0	set	126
  8220  0080                     wtemp1	set	128
  8221  0082                     wtemp2	set	130
  8222  0084                     wtemp3	set	132
  8223  0086                     wtemp4	set	134
  8224  0088                     wtemp5	set	136
  8225  007F                     wtemp6	set	127
  8226  007E                     ttemp	set	126
  8227  007E                     ttemp0	set	126
  8228  0081                     ttemp1	set	129
  8229  0084                     ttemp2	set	132
  8230  0087                     ttemp3	set	135
  8231  007F                     ttemp4	set	127
  8232  007E                     ltemp	set	126
  8233  007E                     ltemp0	set	126
  8234  0082                     ltemp1	set	130
  8235  0086                     ltemp2	set	134
  8236  0080                     ltemp3	set	128


Data Sizes:
    Strings     77
    Constant    0
    Data        10
    BSS         67
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     67      79
    BANK1            80     27      60
    BANK3            96     19      51
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> display_rpm(BANK3[10]), STR_3(CODE[6]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___wmul
    _send->___wmul
    ___wmul->___lwdiv
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___awtoft
    _Fuzzy->___ftmul
    _trimf->___awtoft
    _trapmf->___awtoft
    ___ftadd->___awtoft
    ___ftge->___awtoft
    ___lwtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___ftpack
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->___fttol
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    _max_val->___ftge
    ___fttol->_trapmf

Critical Paths under _main in BANK1

    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    _ISR->_Fuzzy

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1684
                                             16 BANK3      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                              8 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                             20 BANK1      7     7      0
                                              0 BANK3      8     0      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                             20 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                             20 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                             20 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     259
                                             22 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                             20 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                             22 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     322
                                             20 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                             22 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                             20 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   49467
                                             63 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                            ___lwdiv
                             ___wmul
                               _send
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send                                                 5     5      0     529
                                              0 BANK0      5     5      0
                    _USART_WriteChar
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     348
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               25    25      0   47622
                                             61 BANK0      2     2      0
                                              0 BANK1     20    20      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   12060
                                             29 BANK0     15     3     12
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   12917
                                             29 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     557
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3007
                                             13 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    4949
                                              0 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    3040
                                             12 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    2568
                                              0 BANK0     12     6      6
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    2301
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     546
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     444
                                             47 BANK0     14    10      4
                           ___awtoft (ARG)
                             _trapmf (ARG)
                              _trimf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2541
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    2754
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _Fuzzy
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       _trapmf (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       _trimf (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___lwdiv
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
         ___awtoft (ARG)
           ___ftpack
     _trapmf
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     _trimf
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwdiv
   ___wmul
     ___lwdiv (ARG)
   _send
     _USART_WriteChar
     ___wmul
       ___lwdiv (ARG)
   i1_PWM_DutyCycle2
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     13      33       9       53.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1B      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     43      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CC      12        0.0%
ABS                  0      0      CC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jun 22 16:45:03 2022

         ?i1_PWM_DutyCycle2 0070                           _x 00BB                           _y 00BD  
                         pc 0002                 ?_LCD_Cursor 00D3     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        fsr 0004         ___wmul@multiplicand 007A          ??i1_PWM_DutyCycle2 0072  
              ___ftadd@exp1 002C                ___ftadd@exp2 002B               _contagens_tm0 00B7  
              ___ftadd@sign 002A                         l600 0994                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0ECE                         _rpm 0069  
                       fsr0 0004                         _pwm 00DA                         _sum 00AF  
__size_of_USART_WriteString 001C                         indf 0000                __CFG_FOSC$HS 0000  
         ??_LCD_WriteString 00D7                __CFG_LVP$OFF 0000                        ?_ISR 0070  
              ___ftdiv@cntr 0037                ___ftdiv@sign 003C                        l3000 09D5  
                      l3012 0A13          LCD_WriteString@Str 00D5                        l3102 0C57  
                      l3016 0A22                        l3008 0A02                        l2800 1606  
                      l2814 16CA                        l2990 09A9                        l2998 09BE  
                      STR_1 1049                        STR_2 1038                        STR_3 1057  
                      STR_4 1010                        u3205 164E                        u3155 07F3  
                      u3415 09C5                        u3435 09D8                        u3507 0C9A  
                      u3517 1585                        u3445 09EF                        u3607 1612  
                      u3527 0865                        u3455 0A03                        u3617 16AD  
                      u3537 0875                        u3627 16BB                        u3547 0883  
                      u3637 16C7                        u3557 088F                        u3485 081B  
                      u3647 156E                        u3567 089B                        u3577 08A9  
                      u3497 0C50                        u3587 08B7                        u3597 08C3  
                      _OERR 00C1                        _TMR0 0001                        _TMR1 000E  
                      _main 0BC8                ___ftpack@arg 0070          __size_of_LCD_Clear 0029  
              ___ftpack@exp 0073                        _send 0A39                        btemp 007E  
          __end_of_ADC_Init 1549                        ltemp 007E                        start 0012  
                      ttemp 007E                        wtemp 007E               ?_LCD_WriteCmd 0070  
             _LCD_WriteData 1574                ___ftmul@cntr 0028                ___ftmul@sign 0029  
   __end_of_USART_WriteChar 1527                       ??_ISR 005F                ___fttol@exp1 005C  
              ___fttol@lval 0058                 ?_TIMER0_Set 0070            __end_of_LCD_Init 08C6  
           __end_of___aldiv 0A39                       ?_main 0070                       _EEADR 010D  
           __end_of___ftadd 0DAA                       ?_send 0070               __CFG_WDTE$OFF 0000  
           __end_of___ftdiv 097E             __end_of___ftneg 151F             __end_of___ftmul 0BC8  
                     _T1CON 0010             __end_of___fttol 07DE             __end_of___lwdiv 1739  
                     i1l112 0EC5                       i1l122 0747                       i1l150 00CC  
                     i1l151 00C5                       i1l153 00D8                       i1l225 1520  
                     i1l181 0FF3                       i1l712 17E7                       i1l545 1664  
                     i1l706 17CE                       i1l735 0D49                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _TXREG 0019               __CFG_PWRTE$ON 0000  
                     _Fuzzy 0073               ___awtoft@sign 007D             __end_of_max_val 15F8  
             ___ftpack@sign 0074                       _trimf 0DAA              __CFG_BOREN$OFF 0000  
       __size_of_LCD_Cursor 0020                       pclath 000A            __end_of_PWM_Init 16A1  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     status 0003                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F              ??_LCD_WriteCmd 00D3  
            ?_LCD_WriteData 0070                 ?_USART_Init 01B2       i1TIMER0_Set@contagens 0070  
           __initialization 0015                __end_of_main 0CA1                __end_of_send 0AF7  
                    ??_main 01BA               ___fttol@sign1 0057                      ??_send 0020  
              ?_TIMER0_Init 0070           __end_of_LCD_Clear 16CA                  Fuzzy@a_242 00C6  
                Fuzzy@a_243 00C8                      ?_Fuzzy 0070                  Fuzzy@freio 00BF  
                Fuzzy@reduz 00CD                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015                      _CCPR2L 001B  
                    _EECON2 018D            __end_of___awtoft 1639            __end_of___ftpack 1800  
                    ?_trimf 003D                      i1l2102 0D0F                      i1l2040 17A7  
                    i1l2120 0D5B                      i1l2104 0D1B                      i1l2050 17D3  
                    i1l2042 17B3                      i1l2114 0D39                      i1l2106 0D20  
                    i1l2052 17DD                      i1l2044 17B8                      i1l2036 17A0  
                    i1l2124 0D6D                      i1l2116 0D45                      i1l2108 0D24  
                    i1l2220 0E23                      i1l2134 0D90                      i1l2150 08F4  
                    i1l2400 0B9C                      i1l2144 08DE                      i1l2074 0CCA  
                    i1l2250 06A5                      i1l2226 0EA8                      i1l2084 0CE0  
                    i1l2172 0958                      i1l2164 0939                      i1l2244 0673  
                    u200_25 0D10                      i1l2078 0CD1                      i1l2416 076A  
                    i1l2184 1762                      i1l2096 0CFA                      i1l2256 072A  
                    i1l2450 07D5                      i1l2442 07B9                      i1l2434 079C  
                    i1l2602 02CD                      i1l2356 1622                      i1l2372 0B25  
                    i1l2444 07C4                      i1l2436 07AC                      i1l2188 1789  
                    i1l2532 0AEC                      i1l2524 0AD0                      i1l2366 0B0F  
                    i1l2446 07C7                      i1l2606 0354                      i1l2614 03AB  
                    i1l2278 15BF                      i1l2384 0B64                      i1l2472 1727  
                    i1l2464 1703                      i1l2632 04C1                      i1l2640 0518  
                    i1l2466 1711                      i1l2650 0540                      i1l2298 165C  
                    i1l2396 0B8C                      i1l2388 0B74                      i1l2476 1732  
                    i1l2644 0529                      i1l2628 0434                      i1l2574 015F  
                    i1l2558 00C6                      i1l2920 0FEE                      i1l2578 01EC  
                    i1l2586 0243                      i1l2690 15A0                      i1l2682 1594  
                    i1l2906 0FA0                      i1l2922 0FEF                      i1l2860 0F12  
                    i1l2852 0EF6                      u203_25 0D25                      i1l2880 0F58  
                    i1l2872 0F3C                      i1l2864 0F20                      i1l2856 0F04  
                    i1l2848 0EE8                      i1l2892 0F80                      i1l2884 0F66  
                    i1l2876 0F4A                      i1l2868 0F2E                      i1l2894 0F83  
                    u221_21 1755                      u221_22 1756                      u221_23 175B  
                    u221_24 175C                      u301_25 02CB                      u206_25 0D3A  
                    u214_25 0906                      u223_21 177C                      u223_22 177D  
                    u223_23 1782                      u223_24 1783                      u215_25 0918  
                    u303_25 03A9                      u216_25 093A                      u217_25 094B  
                    u305_25 0432                      u218_25 0959                      u307_25 0516  
                    u243_25 1665                      u180_25 17C7                      u260_25 0B43  
                    u244_25 166C                      u182_25 17D6                      u263_25 0B75  
                    u264_25 0B7D                      u272_25 0771                      u185_25 17EE  
          __end_of___lwtoft 155D                      u178_25 17AC                      u282_25 1706  
                    u259_25 0B31                      u275_25 079D                      u291_25 0097  
                    u268_25 0B9D                      u284_25 1712                      u292_25 00BF  
                    u269_25 0BA5                      u285_25 171E                      u197_25 0CFB  
       __size_of_TIMER0_Set 0008                      u278_25 07BB                      u286_25 1728  
                    u288_25 15B4                      u296_25 015D                      u298_25 0241  
                    _SSPADD 0093                      _SSPBUF 0013                      Fuzzy@a 00C4  
          LCD_WriteCmd@Byte 00D4                      ___ftge 1739                   ??___aldiv 00D3  
                    ___wmul 165A                   ??___ftadd 0026              _PWM_DutyCycle1 1639  
            _PWM_DutyCycle2 07DE            ?_USART_WriteChar 0070                   ??___ftdiv 0033  
                 ??___ftneg 0073                      _deltaV 0065                   ??___ftmul 0020  
                 ??___fttol 0053                   ??___lwdiv 0074                      _antigo 01BD  
                    _buffer 0190                      _fitemp 00A3       USART_ReceiveChar@byte 0074  
                    _trapmf 05FA                      _pulsos 0067                      _status 00B9  
     ___ftmul@f3_as_product 0025                   ??_max_val 007E                   ?_ADC_Init 0070  
                    saved_w 007E         __size_of_USART_Init 004B                      trimf@a 0040  
                    trimf@b 0043                      trimf@c 0046                      trimf@x 003D  
             ?i1_TIMER0_Set 0070     __end_of__initialization 006F                   ?_LCD_Init 0070  
                ___ftadd@f1 0020                  ___ftadd@f2 0023             ??_LCD_WriteData 00D3  
                ___ftge@ff1 0020                  ___ftge@ff2 0023                  ___ftdiv@f1 0030  
                ___ftdiv@f2 002D                  ___ftdiv@f3 0038                  ___ftneg@f1 0070  
                ___awtoft@c 0078      __end_of_PWM_DutyCycle1 165A      __end_of_PWM_DutyCycle2 07FF  
                ___ftmul@f1 0078                  ___ftmul@f2 007B                  ___fttol@f1 004F  
            __pcstackCOMMON 0070               __end_of_Fuzzy 05FA                __pidataBANK0 0803  
              __pidataBANK1 0801                __pidataBANK3 1511               LCD_Cursor@Col 00D3  
             LCD_Cursor@Row 00D5                ??_LCD_Cursor 00D4             _LCD_WriteString 16CA  
             __end_of_trimf 0ECE                  ___lwtoft@c 0078                   ?_PWM_Init 0070  
            _OPTION_REGbits 0081                  ??_ADC_Init 00D3        __end_of_LCD_WriteCmd 1574  
                   ??_Fuzzy 005D   __size_ofi1_PWM_DutyCycle2 001B              ??i1_TIMER0_Set 0070  
                   ??_trimf 007E                  __pbssBANK0 0063                  __pbssBANK1 00A0  
                __pbssBANK3 0190          __end_of_LCD_Cursor 1618                  ??_LCD_Init 00D5  
           ?_PWM_DutyCycle1 00D3             ?_PWM_DutyCycle2 00D3                  __pmaintext 0BC8  
               Fuzzy@mantem 00CA                     ?___ftge 0020                     ?___wmul 0078  
                __pintentry 0004                ??_TIMER0_Set 00D3                     _CCP1CON 0017  
                   _CCP2CON 001D                   ?___awtoft 0078                   ?___ftpack 0070  
                   ?_trapmf 003D                  ??_PWM_Init 00D3                   ?___lwtoft 0078  
      __size_of_TIMER0_Init 000B                     _SSPCON2 0091                  __stringtab 1000  
        __end_of_TIMER0_Set 152F     __end_of_LCD_WriteString 16FB                   _ADCResult 00B5  
              ??_USART_Init 01B6           LCD_WriteData@Byte 00D4                     ___aldiv 097E  
           __size_of___ftge 005F                     ___ftadd 0CA1                     ___ftdiv 08C6  
                   ___ftneg 1517             __size_of___wmul 0023                     ___ftmul 0AF7  
                   ___fttol 0750                     ___lwdiv 16FB                  ??___awtoft 007B  
                ??___ftpack 0075                     __ptext1 0810                     __ptext2 097E  
                   __ptext3 1527                     __ptext4 0805                     __ptext5 167D  
                   __ptext6 07DE                     __ptext7 1639                     __ptext8 16CA  
                   __ptext9 1574                  _pas_cooler 006D                  ??___lwtoft 007B  
           __size_of_trapmf 0156                __size_of_ISR 0132                   _T1CONbits 0010  
                 _T2CONbits 0012                     _max_val 15DA            ___aldiv@dividend 01AE  
                 _LCD_Clear 16A1          __end_of_USART_Init 085B                     clrloop0 1530  
      end_of_initialization 006F                   _RCSTAbits 0018            ___aldiv@quotient 00D6  
                   trapmf@a 0040                     trapmf@b 0043                     trapmf@c 0046  
                   trapmf@d 0049                     trapmf@x 003D                     trimf@ua 0049  
      __end_ofi1_TIMER0_Set 1511       __size_of_LCD_WriteCmd 0017                   _PORTBbits 0006  
                 _PORTEbits 0009                  _setpointUI 006B                  ?_LCD_Clear 0070  
          i1_PWM_DutyCycle2 15A3           __size_of_ADC_Init 0012         PWM_DutyCycle1@valor 00D3  
                _total_area 00B2         PWM_DutyCycle2@valor 00D3                 _CCP1CONbits 0017  
               ___ftdiv@exp 003B                 _CCP2CONbits 001D                   _TXSTAbits 0098  
          ?_LCD_WriteString 00D5           __size_of_LCD_Init 006B                _LCD_WriteCmd 155D  
               ___ftmul@exp 0024              __end_of___ftge 1798              __end_of___wmul 167D  
            __end_of_trapmf 0750    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 1000            ??_PWM_DutyCycle1 00D5  
          ??_PWM_DutyCycle2 00D5       __end_of_LCD_WriteData 158B           _USART_ReceiveChar 158B  
                  ??___ftge 0026          ?_USART_ReceiveChar 0070                    ??___wmul 007C  
               __pdataBANK0 006D                 __pdataBANK1 00DA                 __pdataBANK3 01BD  
              send@checksum 0021                    ??_trapmf 007E              send@velocidade 0022  
       ??_USART_ReceiveChar 0073           __size_of___awtoft 0021           __size_of___ftpack 0068  
                 ___latbits 0002           __size_of___lwtoft 0014               __pcstackBANK0 0020  
             __pcstackBANK1 00BF               __pcstackBANK3 01AA                 ??_LCD_Clear 00D5  
       __end_of__stringdata 105D   __end_of_USART_ReceiveChar 15A3       __size_ofi1_TIMER0_Set 0006  
          ___lwdiv@dividend 0072         TIMER0_Set@contagens 00D3                Fuzzy@aumenta 00D0  
                  ?___aldiv 01AA                    ?___ftadd 0020                    ?___ftdiv 002D  
                  ?___ftneg 0070                    ?___ftmul 0078                    ?___fttol 004F  
                  ?___lwdiv 0070                   __pstrings 1000                   _ativa_fan 00A0  
             ??_TIMER0_Init 00D3          USART_Init@BaudRate 01B2                    ?_max_val 002C  
                  _ADC_Init 1537                   _fop_rule1 00A6                   _fop_rule2 00A9  
                 _fop_rule3 00AC              __size_of_Fuzzy 0587            ___lwdiv@quotient 0075  
            __size_of_trimf 0124           ??_USART_WriteChar 0070                i1_TIMER0_Set 150B  
           ___aldiv@divisor 01AA           interrupt_function 0004             ___aldiv@counter 00D4  
                  _LCD_Init 085B              ___wmul@product 007C                   clear_ram0 152F  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 15BE                 _display_rpm 01A0  
                _ADCON0bits 001F                 __stringbase 100F                  _ADCON1bits 009F  
               __stringdata 1010                    _PWM_Init 167D           ___wmul@multiplier 0078  
       __end_of_TIMER0_Init 0810  __size_of_USART_ReceiveChar 0018                  _EECON1bits 018C  
                  Fuzzy@tip 00C1            __size_of___aldiv 00BB            __size_of___ftadd 0109  
          __size_of___ftdiv 00B8            __size_of___ftneg 0008            __size_of___ftmul 00D1  
          __size_of___fttol 008E            __size_of___lwdiv 003E                    ___awtoft 1618  
                  ___ftpack 1798          __end_of__stringtab 1010                    ___lwtoft 1549  
                 send@index 0024            __size_of_max_val 001E             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077           _USART_WriteString 15BE                    __ptext10 085B  
                  __ptext11 15F8                    __ptext20 15BE                    __ptext12 16A1  
                  __ptext21 151F                    __ptext13 155D                    __ptext30 1739  
                  __ptext22 0073                    __ptext14 1537                    __ptext31 1549  
                  __ptext23 15A3                    __ptext15 0ECE                    __ptext32 16FB  
                  __ptext24 0DAA                    __ptext16 150B                    __ptext33 0750  
                  __ptext25 05FA                    __ptext17 0A39                    __ptext34 0AF7  
                  __ptext26 1517                    __ptext18 165A                    __ptext35 1618  
                  __ptext27 08C6                    __ptext19 158B                    __ptext36 1798  
                  __ptext28 0CA1                    __ptext29 15DA                    _antigoUI 0063  
        ?_USART_WriteString 0070               __size_of_main 00D9               __size_of_send 00BE  
       USART_WriteChar@byte 0070         ??_USART_WriteString 0071                    _setpoint 01C0  
                _LCD_Cursor 15F8    __size_of_LCD_WriteString 0031                 _TIMER0_Init 0805  
                _INTCONbits 000B   __end_of_USART_WriteString 15DA                    max_val@a 002C  
                  max_val@b 002F                    intlevel1 0000                   stringcode 100A  
      USART_WriteString@str 0072                  _TIMER0_Set 1527                    trapmf@ua 004C  
           _USART_WriteChar 151F                    stringdir 100A                    stringtab 1000  
              ___aldiv@sign 00D5      __size_of_LCD_WriteData 0017                 _SSPCON2bits 0091  
     i1PWM_DutyCycle2@valor 0070                  _SSPCONbits 0014                  _USART_Init 0810  
