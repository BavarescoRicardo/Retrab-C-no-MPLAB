

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jun 23 17:42:36 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text22_split_1,local,class=CODE,merge=1,delta=2
    58                           	psect	text22_split_2,local,class=CODE,merge=1,delta=2
    59                           	psect	text22_split_3,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK0
   603  12B3                     __pidataBANK0:	
   604                           
   605                           ;initializer for _cruzeiroSet
   606  12B3  344E               	retlw	78
   607                           
   608                           ;initializer for _lendo
   609  12B4  344E               	retlw	78
   610                           
   611                           	psect	idataBANK1
   612  12B5                     __pidataBANK1:	
   613                           
   614                           ;initializer for _pas_cooler
   615  12B5  3407               	retlw	7
   616  12B6  3400               	retlw	0
   617                           
   618                           ;initializer for _pwm
   619  12B7  3401               	retlw	1
   620  12B8  3400               	retlw	0
   621  000E                     _TMR1	set	14
   622  001F                     _ADCON0bits	set	31
   623  001E                     _ADRESH	set	30
   624  0017                     _CCP1CON	set	23
   625  0017                     _CCP1CONbits	set	23
   626  001D                     _CCP2CON	set	29
   627  001D                     _CCP2CONbits	set	29
   628  0015                     _CCPR1L	set	21
   629  001B                     _CCPR2L	set	27
   630  000B                     _INTCONbits	set	11
   631  000C                     _PIR1bits	set	12
   632  000D                     _PIR2bits	set	13
   633  0005                     _PORTA	set	5
   634  0006                     _PORTB	set	6
   635  0006                     _PORTBbits	set	6
   636  0007                     _PORTC	set	7
   637  0008                     _PORTD	set	8
   638  0009                     _PORTE	set	9
   639  0009                     _PORTEbits	set	9
   640  001A                     _RCREG	set	26
   641  0018                     _RCSTAbits	set	24
   642  0013                     _SSPBUF	set	19
   643  0014                     _SSPCONbits	set	20
   644  0010                     _T1CON	set	16
   645  0010                     _T1CONbits	set	16
   646  0012                     _T2CONbits	set	18
   647  0001                     _TMR0	set	1
   648  000F                     _TMR1H	set	15
   649  000E                     _TMR1L	set	14
   650  0019                     _TXREG	set	25
   651  00C1                     _OERR	set	193
   652  009F                     _ADCON1bits	set	159
   653  009E                     _ADRESL	set	158
   654  0081                     _OPTION_REGbits	set	129
   655  008C                     _PIE1bits	set	140
   656  008D                     _PIE2bits	set	141
   657  0092                     _PR2	set	146
   658  0099                     _SPBRG	set	153
   659  0093                     _SSPADD	set	147
   660  0091                     _SSPCON2	set	145
   661  0091                     _SSPCON2bits	set	145
   662  0094                     _SSPSTATbits	set	148
   663  0085                     _TRISA	set	133
   664  0086                     _TRISB	set	134
   665  0087                     _TRISC	set	135
   666  0088                     _TRISD	set	136
   667  0089                     _TRISE	set	137
   668  0098                     _TXSTAbits	set	152
   669  010D                     _EEADR	set	269
   670  010C                     _EEDATA	set	268
   671  018C                     _EECON1bits	set	396
   672  018D                     _EECON2	set	397
   673                           
   674                           	psect	strings
   675  1000                     __pstrings:	
   676  1000                     stringtab:	
   677  1000                     __stringtab:	
   678  1000                     stringcode:	
   679                           ;	String table - string pointers are 1 byte each
   680                           
   681  1000                     stringdir:	
   682  1000  3010               	movlw	high stringdir
   683  1001  008A               	movwf	10
   684  1002  0804               	movf	4,w
   685  1003  0A84               	incf	4,f
   686  1004  0782               	addwf	2,f
   687  1005                     __stringbase:	
   688  1005  3400               	retlw	0
   689  1006                     __end_of__stringtab:	
   690  1006                     __stringdata:	
   691  1006                     STR_4:	
   692  1006  340A               	retlw	10
   693  1007  340D               	retlw	13
   694  1008  3420               	retlw	32	;' '
   695  1009  342D               	retlw	45	;'-'
   696  100A  342D               	retlw	45	;'-'
   697  100B  342D               	retlw	45	;'-'
   698  100C  342D               	retlw	45	;'-'
   699  100D  342D               	retlw	45	;'-'
   700  100E  342D               	retlw	45	;'-'
   701  100F  342D               	retlw	45	;'-'
   702  1010  3420               	retlw	32	;' '
   703  1011  3445               	retlw	69	;'E'
   704  1012  3453               	retlw	83	;'S'
   705  1013  3454               	retlw	84	;'T'
   706  1014  344F               	retlw	79	;'O'
   707  1015  3455               	retlw	85	;'U'
   708  1016  3452               	retlw	82	;'R'
   709  1017  344F               	retlw	79	;'O'
   710  1018  3420               	retlw	32	;' '
   711  1019  3444               	retlw	68	;'D'
   712  101A  3445               	retlw	69	;'E'
   713  101B  3420               	retlw	32	;' '
   714  101C  3450               	retlw	80	;'P'
   715  101D  3449               	retlw	73	;'I'
   716  101E  344C               	retlw	76	;'L'
   717  101F  3448               	retlw	72	;'H'
   718  1020  3441               	retlw	65	;'A'
   719  1021  3420               	retlw	32	;' '
   720  1022  342D               	retlw	45	;'-'
   721  1023  342D               	retlw	45	;'-'
   722  1024  342D               	retlw	45	;'-'
   723  1025  342D               	retlw	45	;'-'
   724  1026  342D               	retlw	45	;'-'
   725  1027  342D               	retlw	45	;'-'
   726  1028  342D               	retlw	45	;'-'
   727  1029  3420               	retlw	32	;' '
   728  102A  340A               	retlw	10
   729  102B  340D               	retlw	13
   730  102C  3420               	retlw	32	;' '
   731  102D  3400               	retlw	0
   732  102E                     STR_2:	
   733  102E  3449               	retlw	73	;'I'
   734  102F  346E               	retlw	110	;'n'
   735  1030  3469               	retlw	105	;'i'
   736  1031  3463               	retlw	99	;'c'
   737  1032  3469               	retlw	105	;'i'
   738  1033  3461               	retlw	97	;'a'
   739  1034  346C               	retlw	108	;'l'
   740  1035  3469               	retlw	105	;'i'
   741  1036  347A               	retlw	122	;'z'
   742  1037  3461               	retlw	97	;'a'
   743  1038  346E               	retlw	110	;'n'
   744  1039  3464               	retlw	100	;'d'
   745  103A  346F               	retlw	111	;'o'
   746  103B  342E               	retlw	46	;'.'
   747  103C  342E               	retlw	46	;'.'
   748  103D  342E               	retlw	46	;'.'
   749  103E  3400               	retlw	0
   750  103F                     STR_1:	
   751  103F  340A               	retlw	10
   752  1040  340D               	retlw	13
   753  1041  3466               	retlw	102	;'f'
   754  1042  3472               	retlw	114	;'r'
   755  1043  3465               	retlw	101	;'e'
   756  1044  3469               	retlw	105	;'i'
   757  1045  346F               	retlw	111	;'o'
   758  1046  340A               	retlw	10
   759  1047  340D               	retlw	13
   760  1048  3400               	retlw	0
   761  1049                     STR_3:	
   762  1049  346B               	retlw	107	;'k'
   763  104A  346D               	retlw	109	;'m'
   764  104B  3448               	retlw	72	;'H'
   765  104C  343A               	retlw	58	;':'
   766  104D  3420               	retlw	32	;' '
   767  104E  3400               	retlw	0
   768  104F                     __end_of__stringdata:	
   769                           
   770                           ; #config settings
   771  0000                     
   772                           	psect	cinit
   773  0015                     start_initialization:	
   774  0015                     __initialization:	
   775                           
   776                           ; Clear objects allocated to BANK0
   777  0015  01EB               	clrf	__pbssBANK0& (0+127)
   778  0016  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   779                           
   780                           ; Clear objects allocated to BANK1
   781  0017  1383               	bcf	3,7	;select IRP bank0
   782  0018  30C2               	movlw	low __pbssBANK1
   783  0019  0084               	movwf	4
   784  001A  30DF               	movlw	low (__pbssBANK1+29)
   785  001B  160A  118A  22CF  120A  118A  	fcall	clear_ram0
   786                           
   787                           ; Clear objects allocated to BANK3
   788  0020  1783               	bsf	3,7	;select IRP bank2
   789  0021  3090               	movlw	low __pbssBANK3
   790  0022  0084               	movwf	4
   791  0023  30B5               	movlw	low (__pbssBANK3+37)
   792  0024  160A  118A  22CF  120A  118A  	fcall	clear_ram0
   793                           
   794                           ; Initialize objects allocated to BANK1
   795  0029  1683               	bsf	3,5	;RP0=1, select bank1
   796  002A  1303               	bcf	3,6	;RP1=0, select bank1
   797  002B  160A  118A  22B5  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   798  0030  00DF               	movwf	__pdataBANK1& (0+127)
   799  0031  160A  118A  22B6  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   800  0036  00E0               	movwf	(__pdataBANK1+1)& (0+127)
   801  0037  160A  118A  22B7  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   802  003C  00E1               	movwf	(__pdataBANK1+2)& (0+127)
   803  003D  160A  118A  22B8  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   804  0042  00E2               	movwf	(__pdataBANK1+3)& (0+127)
   805                           
   806                           ; Initialize objects allocated to BANK0
   807  0043  1283               	bcf	3,5	;RP0=0, select bank0
   808  0044  1303               	bcf	3,6	;RP1=0, select bank0
   809  0045  160A  118A  22B3  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   810  004A  00ED               	movwf	__pdataBANK0& (0+127)
   811  004B  160A  118A  22B4   	fcall	__pidataBANK0+1	;fetch initializer
   812  004E  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   813  004F                     end_of_initialization:	
   814                           ;End of C runtime variable initialization code
   815                           
   816  004F                     __end_of__initialization:	
   817  004F  0183               	clrf	3
   818  0050  120A  158A  29DB   	ljmp	_main	;jump to C main() function
   819                           
   820                           	psect	bssBANK0
   821  006B                     __pbssBANK0:	
   822  006B                     _indicebuffer:	
   823  006B                     	ds	2
   824                           
   825                           	psect	dataBANK0
   826  006D                     __pdataBANK0:	
   827  006D                     _cruzeiroSet:	
   828  006D                     	ds	1
   829  006E                     _lendo:	
   830  006E                     	ds	1
   831                           
   832                           	psect	bssBANK1
   833  00C2                     __pbssBANK1:	
   834  00C2                     _rulegrande:	
   835  00C2                     	ds	3
   836  00C5                     _rulemedio:	
   837  00C5                     	ds	3
   838  00C8                     _rulepequeno:	
   839  00C8                     	ds	3
   840  00CB                     _ADCResult:	
   841  00CB                     	ds	2
   842  00CD                     _antigoUI:	
   843  00CD                     	ds	2
   844  00CF                     _contagens_tm0:	
   845  00CF                     	ds	2
   846  00D1                     _cruzeiroVel:	
   847  00D1                     	ds	2
   848  00D3                     _deltaV:	
   849  00D3                     	ds	2
   850  00D5                     _pulsos:	
   851  00D5                     	ds	2
   852  00D7                     _rpm:	
   853  00D7                     	ds	2
   854  00D9                     _setpointUI:	
   855  00D9                     	ds	2
   856  00DB                     _status:	
   857  00DB                     	ds	2
   858  00DD                     _x:	
   859  00DD                     	ds	2
   860                           
   861                           	psect	dataBANK1
   862  00DF                     __pdataBANK1:	
   863  00DF                     _pas_cooler:	
   864  00DF                     	ds	2
   865  00E1                     _pwm:	
   866  00E1                     	ds	2
   867                           
   868                           	psect	bssBANK3
   869  0190                     __pbssBANK3:	
   870  0190                     _buffer:	
   871  0190                     	ds	13
   872  019D                     _bufferRecebido:	
   873  019D                     	ds	7
   874  01A4                     _antigo:	
   875  01A4                     	ds	3
   876  01A7                     _ativa_fan:	
   877  01A7                     	ds	3
   878  01AA                     _fitemp:	
   879  01AA                     	ds	3
   880  01AD                     _sum:	
   881  01AD                     	ds	3
   882  01B0                     _total_area:	
   883  01B0                     	ds	3
   884  01B3                     _y:	
   885  01B3                     	ds	2
   886                           
   887                           	psect	clrtext
   888  12CF                     clear_ram0:	
   889                           ;	Called with FSR containing the base address, and
   890                           ;	W with the last address+1
   891                           
   892  12CF  0064               	clrwdt	;clear the watchdog before getting into this loop
   893  12D0                     clrloop0:	
   894  12D0  0180               	clrf	0	;clear RAM location pointed to by FSR
   895  12D1  0A84               	incf	4,f	;increment pointer
   896  12D2  0604               	xorwf	4,w	;XOR with final address
   897  12D3  1903               	btfsc	3,2	;have we reached the end yet?
   898  12D4  3400               	retlw	0	;all done for this memory range, return
   899  12D5  0604               	xorwf	4,w	;XOR again to restore value
   900  12D6  2AD0               	goto	clrloop0	;do the next byte
   901                           
   902                           	psect	cstackBANK3
   903  01B5                     __pcstackBANK3:	
   904  01B5                     ?_PWM_DutyCycle2:	
   905  01B5                     ??_TIMER0_Set:	
   906                           ; 0 bytes @ 0x0
   907                           
   908  01B5                     ??_TIMER0_Init:	
   909                           ; 0 bytes @ 0x0
   910                           
   911  01B5                     ??_ADC_Init:	
   912                           ; 0 bytes @ 0x0
   913                           
   914  01B5                     ??_PWM_Init:	
   915                           ; 0 bytes @ 0x0
   916                           
   917  01B5                     ?_LCD_Cursor:	
   918                           ; 0 bytes @ 0x0
   919                           
   920  01B5                     ?_PWM_DutyCycle1:	
   921                           ; 0 bytes @ 0x0
   922                           
   923  01B5                     ??_LCD_WriteCmd:	
   924                           ; 0 bytes @ 0x0
   925                           
   926  01B5                     ??_LCD_WriteData:	
   927                           ; 0 bytes @ 0x0
   928                           
   929  01B5                     ?___aldiv:	
   930                           ; 0 bytes @ 0x0
   931                           
   932  01B5                     TIMER0_Set@contagens:	
   933                           ; 4 bytes @ 0x0
   934                           
   935  01B5                     LCD_Cursor@Col:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  01B5                     PWM_DutyCycle1@valor:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  01B5                     PWM_DutyCycle2@valor:	
   942                           ; 2 bytes @ 0x0
   943                           
   944  01B5                     ___aldiv@divisor:	
   945                           ; 2 bytes @ 0x0
   946                           
   947                           
   948                           ; 4 bytes @ 0x0
   949  01B5                     	ds	1
   950  01B6                     ??_LCD_Cursor:	
   951  01B6                     LCD_WriteCmd@Byte:	
   952                           ; 0 bytes @ 0x1
   953                           
   954  01B6                     LCD_WriteData@Byte:	
   955                           ; 1 bytes @ 0x1
   956                           
   957                           
   958                           ; 1 bytes @ 0x1
   959  01B6                     	ds	1
   960  01B7                     ??_PWM_DutyCycle2:	
   961  01B7                     ??_LCD_Init:	
   962                           ; 0 bytes @ 0x2
   963                           
   964  01B7                     ??_LCD_WriteString:	
   965                           ; 0 bytes @ 0x2
   966                           
   967  01B7                     ??_PWM_DutyCycle1:	
   968                           ; 0 bytes @ 0x2
   969                           
   970  01B7                     ??_LCD_Clear:	
   971                           ; 0 bytes @ 0x2
   972                           
   973  01B7                     LCD_Cursor@Row:	
   974                           ; 0 bytes @ 0x2
   975                           
   976                           
   977                           ; 1 bytes @ 0x2
   978  01B7                     	ds	1
   979  01B8                     LCD_WriteString@Str:	
   980                           
   981                           ; 1 bytes @ 0x3
   982  01B8                     	ds	1
   983  01B9                     ___aldiv@dividend:	
   984                           
   985                           ; 4 bytes @ 0x4
   986  01B9                     	ds	4
   987  01BD                     ??___aldiv:	
   988                           
   989                           ; 0 bytes @ 0x8
   990  01BD                     	ds	1
   991  01BE                     ___aldiv@counter:	
   992                           
   993                           ; 1 bytes @ 0x9
   994  01BE                     	ds	1
   995  01BF                     ___aldiv@sign:	
   996                           
   997                           ; 1 bytes @ 0xA
   998  01BF                     	ds	1
   999  01C0                     ___aldiv@quotient:	
  1000                           
  1001                           ; 4 bytes @ 0xB
  1002  01C0                     	ds	4
  1003  01C4                     ?_USART_Init:	
  1004  01C4                     USART_Init@BaudRate:	
  1005                           ; 0 bytes @ 0xF
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0xF
  1009  01C4                     	ds	4
  1010  01C8                     ??_USART_Init:	
  1011                           
  1012                           ; 0 bytes @ 0x13
  1013  01C8                     	ds	4
  1014  01CC                     ??_main:	
  1015                           
  1016                           ; 0 bytes @ 0x17
  1017  01CC                     	ds	3
  1018                           
  1019                           	psect	cstackBANK1
  1020  00A0                     __pcstackBANK1:	
  1021  00A0                     _Fuzzy$1692:	
  1022                           
  1023                           ; 3 bytes @ 0x0
  1024  00A0                     	ds	3
  1025  00A3                     _Fuzzy$1693:	
  1026                           
  1027                           ; 2 bytes @ 0x3
  1028  00A3                     	ds	2
  1029  00A5                     Fuzzy@reajuste:	
  1030                           
  1031                           ; 3 bytes @ 0x5
  1032  00A5                     	ds	3
  1033  00A8                     _Fuzzy$251:	
  1034                           
  1035                           ; 2 bytes @ 0x8
  1036  00A8                     	ds	2
  1037  00AA                     Fuzzy@a:	
  1038                           
  1039                           ; 2 bytes @ 0xA
  1040  00AA                     	ds	2
  1041  00AC                     Fuzzy@a_244:	
  1042                           
  1043                           ; 2 bytes @ 0xC
  1044  00AC                     	ds	2
  1045  00AE                     Fuzzy@a_245:	
  1046                           
  1047                           ; 2 bytes @ 0xE
  1048  00AE                     	ds	2
  1049  00B0                     Fuzzy@a_246:	
  1050                           
  1051                           ; 2 bytes @ 0x10
  1052  00B0                     	ds	2
  1053  00B2                     Fuzzy@delta:	
  1054                           
  1055                           ; 2 bytes @ 0x12
  1056  00B2                     	ds	2
  1057  00B4                     Fuzzy@soma:	
  1058                           
  1059                           ; 3 bytes @ 0x14
  1060  00B4                     	ds	3
  1061  00B7                     Fuzzy@total_area:	
  1062                           
  1063                           ; 3 bytes @ 0x17
  1064  00B7                     	ds	3
  1065  00BA                     Fuzzy@a_249:	
  1066                           
  1067                           ; 2 bytes @ 0x1A
  1068  00BA                     	ds	2
  1069  00BC                     Fuzzy@rule:	
  1070                           
  1071                           ; 3 bytes @ 0x1C
  1072  00BC                     	ds	3
  1073  00BF                     Fuzzy@x:	
  1074                           
  1075                           ; 3 bytes @ 0x1F
  1076  00BF                     	ds	3
  1077                           
  1078                           	psect	cstackCOMMON
  1079  0070                     __pcstackCOMMON:	
  1080  0070                     ?_USART_WriteChar:	
  1081  0070                     ??_USART_WriteChar:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  0070                     ?_USART_WriteString:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  0070                     ?_TIMER0_Set:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  0070                     ?_TIMER0_Init:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0070                     ?_ADC_Init:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  0070                     ?_PWM_Init:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  0070                     ?_LCD_Init:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  0070                     ?_LCD_WriteString:	
  1103                           ; 0 bytes @ 0x0
  1104                           
  1105  0070                     ?_LCD_Clear:	
  1106                           ; 0 bytes @ 0x0
  1107                           
  1108  0070                     ?_enviabuffer:	
  1109                           ; 0 bytes @ 0x0
  1110                           
  1111  0070                     ?_Fuzzy:	
  1112                           ; 0 bytes @ 0x0
  1113                           
  1114  0070                     ?_ISR:	
  1115                           ; 0 bytes @ 0x0
  1116                           
  1117  0070                     ?_main:	
  1118                           ; 0 bytes @ 0x0
  1119                           
  1120  0070                     ?_LCD_WriteCmd:	
  1121                           ; 0 bytes @ 0x0
  1122                           
  1123  0070                     ?_LCD_WriteData:	
  1124                           ; 0 bytes @ 0x0
  1125                           
  1126  0070                     ?___ftge:	
  1127                           ; 0 bytes @ 0x0
  1128                           
  1129  0070                     ?i1_TIMER0_Set:	
  1130                           ; 1 bit 
  1131                           
  1132  0070                     ??i1_TIMER0_Set:	
  1133                           ; 0 bytes @ 0x0
  1134                           
  1135  0070                     ?i1_PWM_DutyCycle2:	
  1136                           ; 0 bytes @ 0x0
  1137                           
  1138  0070                     ?_USART_ReceiveChar:	
  1139                           ; 0 bytes @ 0x0
  1140                           
  1141  0070                     ?_abs:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?___lwdiv:	
  1145                           ; 2 bytes @ 0x0
  1146                           
  1147  0070                     ?___ftpack:	
  1148                           ; 2 bytes @ 0x0
  1149                           
  1150  0070                     USART_WriteChar@byte:	
  1151                           ; 3 bytes @ 0x0
  1152                           
  1153  0070                     i1TIMER0_Set@contagens:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     abs@a:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ___lwdiv@divisor:	
  1160                           ; 2 bytes @ 0x0
  1161                           
  1162  0070                     i1PWM_DutyCycle2@valor:	
  1163                           ; 2 bytes @ 0x0
  1164                           
  1165  0070                     ___ftpack@arg:	
  1166                           ; 2 bytes @ 0x0
  1167                           
  1168  0070                     ___ftge@ff1:	
  1169                           ; 3 bytes @ 0x0
  1170                           
  1171                           
  1172                           ; 3 bytes @ 0x0
  1173  0070                     	ds	1
  1174  0071                     ??_USART_WriteString:	
  1175  0071                     ??_enviabuffer:	
  1176                           ; 0 bytes @ 0x1
  1177                           
  1178                           
  1179                           ; 0 bytes @ 0x1
  1180  0071                     	ds	1
  1181  0072                     ??_abs:	
  1182  0072                     ??i1_PWM_DutyCycle2:	
  1183                           ; 0 bytes @ 0x2
  1184                           
  1185  0072                     enviabuffer@checksum:	
  1186                           ; 0 bytes @ 0x2
  1187                           
  1188  0072                     USART_WriteString@str:	
  1189                           ; 1 bytes @ 0x2
  1190                           
  1191  0072                     ___lwdiv@dividend:	
  1192                           ; 1 bytes @ 0x2
  1193                           
  1194                           
  1195                           ; 2 bytes @ 0x2
  1196  0072                     	ds	1
  1197  0073                     ??_USART_ReceiveChar:	
  1198  0073                     enviabuffer@index:	
  1199                           ; 0 bytes @ 0x3
  1200                           
  1201  0073                     ___ftpack@exp:	
  1202                           ; 1 bytes @ 0x3
  1203                           
  1204  0073                     ___ftge@ff2:	
  1205                           ; 1 bytes @ 0x3
  1206                           
  1207                           
  1208                           ; 3 bytes @ 0x3
  1209  0073                     	ds	1
  1210  0074                     ??___lwdiv:	
  1211  0074                     USART_ReceiveChar@byte:	
  1212                           ; 0 bytes @ 0x4
  1213                           
  1214  0074                     ___ftpack@sign:	
  1215                           ; 1 bytes @ 0x4
  1216                           
  1217                           
  1218                           ; 1 bytes @ 0x4
  1219  0074                     	ds	1
  1220  0075                     ??___ftpack:	
  1221  0075                     ___lwdiv@quotient:	
  1222                           ; 0 bytes @ 0x5
  1223                           
  1224                           
  1225                           ; 2 bytes @ 0x5
  1226  0075                     	ds	1
  1227  0076                     ??___ftge:	
  1228                           
  1229                           ; 0 bytes @ 0x6
  1230  0076                     	ds	1
  1231  0077                     ___lwdiv@counter:	
  1232                           
  1233                           ; 1 bytes @ 0x7
  1234  0077                     	ds	1
  1235  0078                     ?___awtoft:	
  1236  0078                     ?___lwtoft:	
  1237                           ; 3 bytes @ 0x8
  1238                           
  1239  0078                     ___awtoft@c:	
  1240                           ; 3 bytes @ 0x8
  1241                           
  1242  0078                     ___lwtoft@c:	
  1243                           ; 2 bytes @ 0x8
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x8
  1247  0078                     	ds	3
  1248  007B                     ??___awtoft:	
  1249  007B                     ??___lwtoft:	
  1250                           ; 0 bytes @ 0xB
  1251                           
  1252                           
  1253                           ; 0 bytes @ 0xB
  1254  007B                     	ds	2
  1255  007D                     ___awtoft@sign:	
  1256                           
  1257                           ; 1 bytes @ 0xD
  1258  007D                     	ds	1
  1259  007E                     ??_trapmf:	
  1260  007E                     ??_maximo:	
  1261                           ; 0 bytes @ 0xE
  1262                           
  1263  007E                     ??_minimo:	
  1264                           ; 0 bytes @ 0xE
  1265                           
  1266  007E                     ??___wmul:	
  1267                           ; 0 bytes @ 0xE
  1268                           
  1269  007E                     ??___ftneg:	
  1270                           ; 0 bytes @ 0xE
  1271                           
  1272                           
  1273                           	psect	cstackBANK0
  1274  0020                     __pcstackBANK0:	
  1275                           ; 0 bytes @ 0xE
  1276                           
  1277  0020                     ?_minimo:	
  1278  0020                     ?___ftneg:	
  1279                           ; 3 bytes @ 0x0
  1280                           
  1281  0020                     minimo@a:	
  1282                           ; 3 bytes @ 0x0
  1283                           
  1284  0020                     ___ftneg@f1:	
  1285                           ; 3 bytes @ 0x0
  1286                           
  1287                           
  1288                           ; 3 bytes @ 0x0
  1289  0020                     	ds	3
  1290  0023                     ?___ftadd:	
  1291  0023                     minimo@b:	
  1292                           ; 3 bytes @ 0x3
  1293                           
  1294  0023                     ___ftadd@f1:	
  1295                           ; 3 bytes @ 0x3
  1296                           
  1297                           
  1298                           ; 3 bytes @ 0x3
  1299  0023                     	ds	3
  1300  0026                     ?_maximo:	
  1301  0026                     maximo@a:	
  1302                           ; 3 bytes @ 0x6
  1303                           
  1304  0026                     ___ftadd@f2:	
  1305                           ; 3 bytes @ 0x6
  1306                           
  1307                           
  1308                           ; 3 bytes @ 0x6
  1309  0026                     	ds	3
  1310  0029                     ??___ftadd:	
  1311  0029                     maximo@b:	
  1312                           ; 0 bytes @ 0x9
  1313                           
  1314                           
  1315                           ; 3 bytes @ 0x9
  1316  0029                     	ds	3
  1317  002C                     ?___fttol:	
  1318  002C                     ___fttol@f1:	
  1319                           ; 4 bytes @ 0xC
  1320                           
  1321                           
  1322                           ; 3 bytes @ 0xC
  1323  002C                     	ds	1
  1324  002D                     ___ftadd@sign:	
  1325                           
  1326                           ; 1 bytes @ 0xD
  1327  002D                     	ds	1
  1328  002E                     ___ftadd@exp2:	
  1329                           
  1330                           ; 1 bytes @ 0xE
  1331  002E                     	ds	1
  1332  002F                     ___ftadd@exp1:	
  1333                           
  1334                           ; 1 bytes @ 0xF
  1335  002F                     	ds	1
  1336  0030                     ??___fttol:	
  1337  0030                     ?___ftdiv:	
  1338                           ; 0 bytes @ 0x10
  1339                           
  1340  0030                     ___ftdiv@f2:	
  1341                           ; 3 bytes @ 0x10
  1342                           
  1343                           
  1344                           ; 3 bytes @ 0x10
  1345  0030                     	ds	3
  1346  0033                     ___ftdiv@f1:	
  1347                           
  1348                           ; 3 bytes @ 0x13
  1349  0033                     	ds	1
  1350  0034                     ___fttol@sign1:	
  1351                           
  1352                           ; 1 bytes @ 0x14
  1353  0034                     	ds	1
  1354  0035                     ___fttol@lval:	
  1355                           
  1356                           ; 4 bytes @ 0x15
  1357  0035                     	ds	1
  1358  0036                     ??___ftdiv:	
  1359                           
  1360                           ; 0 bytes @ 0x16
  1361  0036                     	ds	3
  1362  0039                     ___fttol@exp1:	
  1363                           
  1364                           ; 1 bytes @ 0x19
  1365  0039                     	ds	1
  1366  003A                     ?___wmul:	
  1367  003A                     ___ftdiv@cntr:	
  1368                           ; 2 bytes @ 0x1A
  1369                           
  1370  003A                     ___wmul@multiplier:	
  1371                           ; 1 bytes @ 0x1A
  1372                           
  1373                           
  1374                           ; 2 bytes @ 0x1A
  1375  003A                     	ds	1
  1376  003B                     ___ftdiv@f3:	
  1377                           
  1378                           ; 3 bytes @ 0x1B
  1379  003B                     	ds	1
  1380  003C                     ___wmul@multiplicand:	
  1381                           
  1382                           ; 2 bytes @ 0x1C
  1383  003C                     	ds	2
  1384  003E                     ___ftdiv@exp:	
  1385  003E                     ___wmul@product:	
  1386                           ; 1 bytes @ 0x1E
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x1E
  1390  003E                     	ds	1
  1391  003F                     ___ftdiv@sign:	
  1392                           
  1393                           ; 1 bytes @ 0x1F
  1394  003F                     	ds	1
  1395  0040                     ?_trapmf:	
  1396  0040                     trapmf@x:	
  1397                           ; 3 bytes @ 0x20
  1398                           
  1399                           
  1400                           ; 3 bytes @ 0x20
  1401  0040                     	ds	3
  1402  0043                     trapmf@a:	
  1403                           
  1404                           ; 3 bytes @ 0x23
  1405  0043                     	ds	3
  1406  0046                     trapmf@b:	
  1407                           
  1408                           ; 3 bytes @ 0x26
  1409  0046                     	ds	3
  1410  0049                     trapmf@c:	
  1411                           
  1412                           ; 3 bytes @ 0x29
  1413  0049                     	ds	3
  1414  004C                     trapmf@d:	
  1415                           
  1416                           ; 3 bytes @ 0x2C
  1417  004C                     	ds	3
  1418  004F                     trapmf@ua:	
  1419                           
  1420                           ; 3 bytes @ 0x2F
  1421  004F                     	ds	3
  1422  0052                     ?___ftmul:	
  1423  0052                     ___ftmul@f1:	
  1424                           ; 3 bytes @ 0x32
  1425                           
  1426                           
  1427                           ; 3 bytes @ 0x32
  1428  0052                     	ds	3
  1429  0055                     ___ftmul@f2:	
  1430                           
  1431                           ; 3 bytes @ 0x35
  1432  0055                     	ds	3
  1433  0058                     ??___ftmul:	
  1434                           
  1435                           ; 0 bytes @ 0x38
  1436  0058                     	ds	4
  1437  005C                     ___ftmul@exp:	
  1438                           
  1439                           ; 1 bytes @ 0x3C
  1440  005C                     	ds	1
  1441  005D                     ___ftmul@f3_as_product:	
  1442                           
  1443                           ; 3 bytes @ 0x3D
  1444  005D                     	ds	3
  1445  0060                     ___ftmul@cntr:	
  1446                           
  1447                           ; 1 bytes @ 0x40
  1448  0060                     	ds	1
  1449  0061                     ___ftmul@sign:	
  1450                           
  1451                           ; 1 bytes @ 0x41
  1452  0061                     	ds	1
  1453  0062                     ??_Fuzzy:	
  1454                           
  1455                           ; 0 bytes @ 0x42
  1456  0062                     	ds	2
  1457  0064                     ??_ISR:	
  1458                           
  1459                           ; 0 bytes @ 0x44
  1460  0064                     	ds	6
  1461  006A                     ISR@byte:	
  1462                           
  1463                           ; 1 bytes @ 0x4A
  1464  006A                     	ds	1
  1465                           
  1466                           	psect	maintext
  1467  09DB                     __pmaintext:	
  1468 ;;
  1469 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1470 ;;
  1471 ;; *************** function _main *****************
  1472 ;; Defined at:
  1473 ;;		line 466 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;		None               void
  1480 ;; Registers used:
  1481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 17F/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1487 ;;      Params:         0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0
  1489 ;;      Temps:          0       0       0       3       0
  1490 ;;      Totals:         0       0       0       3       0
  1491 ;;Total ram usage:        3 bytes
  1492 ;; Hardware stack levels required when called:    7
  1493 ;; This function calls:
  1494 ;;		_ADC_Init
  1495 ;;		_LCD_Clear
  1496 ;;		_LCD_Cursor
  1497 ;;		_LCD_Init
  1498 ;;		_LCD_WriteString
  1499 ;;		_PWM_DutyCycle1
  1500 ;;		_PWM_DutyCycle2
  1501 ;;		_PWM_Init
  1502 ;;		_TIMER0_Init
  1503 ;;		_TIMER0_Set
  1504 ;;		_USART_Init
  1505 ;; This function is called by:
  1506 ;;		Startup code after reset
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _main
  1512  09DB                     _main:	
  1513                           
  1514                           ;main.c: 468: TRISA = 0b00000001;
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1518  09DB  3001               	movlw	1
  1519  09DC  1683               	bsf	3,5	;RP0=1, select bank1
  1520  09DD  1303               	bcf	3,6	;RP1=0, select bank1
  1521  09DE  0085               	movwf	5	;volatile
  1522                           
  1523                           ;main.c: 469: PORTA = 0b00000001;
  1524  09DF  3001               	movlw	1
  1525  09E0  1283               	bcf	3,5	;RP0=0, select bank0
  1526  09E1  1303               	bcf	3,6	;RP1=0, select bank0
  1527  09E2  0085               	movwf	5	;volatile
  1528                           
  1529                           ;main.c: 470: TRISB = 0b00000000;
  1530  09E3  1683               	bsf	3,5	;RP0=1, select bank1
  1531  09E4  1303               	bcf	3,6	;RP1=0, select bank1
  1532  09E5  0186               	clrf	6	;volatile
  1533                           
  1534                           ;main.c: 471: PORTB = 0b00000000;
  1535  09E6  1283               	bcf	3,5	;RP0=0, select bank0
  1536  09E7  1303               	bcf	3,6	;RP1=0, select bank0
  1537  09E8  0186               	clrf	6	;volatile
  1538                           
  1539                           ;main.c: 472: TRISC = 0b10000001;
  1540  09E9  3081               	movlw	129
  1541  09EA  1683               	bsf	3,5	;RP0=1, select bank1
  1542  09EB  1303               	bcf	3,6	;RP1=0, select bank1
  1543  09EC  0087               	movwf	7	;volatile
  1544                           
  1545                           ;main.c: 473: PORTC = 0b11000000;
  1546  09ED  30C0               	movlw	192
  1547  09EE  1283               	bcf	3,5	;RP0=0, select bank0
  1548  09EF  1303               	bcf	3,6	;RP1=0, select bank0
  1549  09F0  0087               	movwf	7	;volatile
  1550                           
  1551                           ;main.c: 474: TRISD = 0b00000000;
  1552  09F1  1683               	bsf	3,5	;RP0=1, select bank1
  1553  09F2  1303               	bcf	3,6	;RP1=0, select bank1
  1554  09F3  0188               	clrf	8	;volatile
  1555                           
  1556                           ;main.c: 475: PORTD = 0b00000000;
  1557  09F4  1283               	bcf	3,5	;RP0=0, select bank0
  1558  09F5  1303               	bcf	3,6	;RP1=0, select bank0
  1559  09F6  0188               	clrf	8	;volatile
  1560                           
  1561                           ;main.c: 476: TRISE = 0b00000000;
  1562  09F7  1683               	bsf	3,5	;RP0=1, select bank1
  1563  09F8  1303               	bcf	3,6	;RP1=0, select bank1
  1564  09F9  0189               	clrf	9	;volatile
  1565                           
  1566                           ;main.c: 477: PORTE = 0b00000000;
  1567  09FA  1283               	bcf	3,5	;RP0=0, select bank0
  1568  09FB  1303               	bcf	3,6	;RP1=0, select bank0
  1569  09FC  0189               	clrf	9	;volatile
  1570                           
  1571                           ;main.c: 480: T1CON = 0x03;
  1572  09FD  3003               	movlw	3
  1573  09FE  0090               	movwf	16	;volatile
  1574                           
  1575                           ;main.c: 481: TMR1L = 0x00;
  1576  09FF  018E               	clrf	14	;volatile
  1577                           
  1578                           ;main.c: 482: TMR1H = 0x00;
  1579  0A00  018F               	clrf	15	;volatile
  1580                           
  1581                           ;main.c: 485: USART_Init(115200);
  1582  0A01  3000               	movlw	0
  1583  0A02  1683               	bsf	3,5	;RP0=1, select bank3
  1584  0A03  1703               	bsf	3,6	;RP1=1, select bank3
  1585  0A04  00C7               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1586  0A05  3001               	movlw	1
  1587  0A06  00C6               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1588  0A07  30C2               	movlw	194
  1589  0A08  00C5               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1590  0A09  3000               	movlw	0
  1591  0A0A  00C4               	movwf	USART_Init@BaudRate^(0+384)
  1592  0A0B  160A  118A  24FA  120A  158A  	fcall	_USART_Init
  1593                           
  1594                           ;main.c: 486: TIMER0_Init();
  1595  0A10  160A  118A  22E1  120A  158A  	fcall	_TIMER0_Init
  1596                           
  1597                           ;main.c: 487: ADC_Init();
  1598  0A15  160A  118A  22FA  120A  158A  	fcall	_ADC_Init
  1599                           
  1600                           ;main.c: 488: PWM_Init();
  1601  0A1A  160A  118A  244A  120A  158A  	fcall	_PWM_Init
  1602                           
  1603                           ;main.c: 489: LCD_Init();
  1604  0A1F  160A  118A  260A  120A  158A  	fcall	_LCD_Init
  1605                           
  1606                           ;main.c: 492: INTCONbits.PEIE = 1;
  1607  0A24  170B               	bsf	11,6	;volatile
  1608                           
  1609                           ;main.c: 493: INTCONbits.GIE = 1;
  1610  0A25  178B               	bsf	11,7	;volatile
  1611                           
  1612                           ;main.c: 500: LCD_Init();
  1613  0A26  160A  118A  260A  120A  158A  	fcall	_LCD_Init
  1614                           
  1615                           ;main.c: 501: LCD_Cursor(0,0);
  1616  0A2B  1683               	bsf	3,5	;RP0=1, select bank3
  1617  0A2C  1703               	bsf	3,6	;RP1=1, select bank3
  1618  0A2D  01B5               	clrf	LCD_Cursor@Col^(0+384)
  1619  0A2E  3000               	movlw	0
  1620  0A2F  160A  118A  23A7  120A  158A  	fcall	_LCD_Cursor
  1621                           
  1622                           ;main.c: 502: LCD_WriteString("Inicializando...");
  1623  0A34  3029               	movlw	(STR_2-__stringbase)& (0+255)
  1624  0A35  160A  118A  23C7  120A  158A  	fcall	_LCD_WriteString
  1625                           
  1626                           ;main.c: 505: PWM_DutyCycle1(0);
  1627  0A3A  3000               	movlw	0
  1628  0A3B  1683               	bsf	3,5	;RP0=1, select bank3
  1629  0A3C  1703               	bsf	3,6	;RP1=1, select bank3
  1630  0A3D  00B5               	movwf	PWM_DutyCycle1@valor^(0+384)
  1631  0A3E  3000               	movlw	0
  1632  0A3F  00B6               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1633  0A40  160A  118A  2408  120A  158A  	fcall	_PWM_DutyCycle1
  1634                           
  1635                           ;main.c: 506: PWM_DutyCycle2(0);
  1636  0A45  3000               	movlw	0
  1637  0A46  1683               	bsf	3,5	;RP0=1, select bank3
  1638  0A47  1703               	bsf	3,6	;RP1=1, select bank3
  1639  0A48  00B5               	movwf	PWM_DutyCycle2@valor^(0+384)
  1640  0A49  3000               	movlw	0
  1641  0A4A  00B6               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1642  0A4B  160A  118A  2429  120A  158A  	fcall	_PWM_DutyCycle2
  1643                           
  1644                           ;main.c: 509: TIMER0_Set(238);
  1645  0A50  30EE               	movlw	238
  1646  0A51  160A  118A  22C7  120A  158A  	fcall	_TIMER0_Set
  1647                           
  1648                           ;main.c: 512: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1649  0A56  3018               	movlw	24
  1650  0A57  1683               	bsf	3,5	;RP0=1, select bank3
  1651  0A58  1703               	bsf	3,6	;RP1=1, select bank3
  1652  0A59  00CE               	movwf	(??_main^(0+384)+2)
  1653  0A5A  3061               	movlw	97
  1654  0A5B  00CD               	movwf	(??_main^(0+384)+1)
  1655  0A5C  306E               	movlw	110
  1656  0A5D  00CC               	movwf	??_main^(0+384)
  1657  0A5E                     u5917:	
  1658  0A5E  0BCC               	decfsz	??_main^(0+384),f
  1659  0A5F  2A5E               	goto	u5917
  1660  0A60  0BCD               	decfsz	(??_main^(0+384)+1),f
  1661  0A61  2A5E               	goto	u5917
  1662  0A62  0BCE               	decfsz	(??_main^(0+384)+2),f
  1663  0A63  2A5E               	goto	u5917
  1664  0A64  0000               	nop
  1665  0A65                     l3339:	
  1666                           ;main.c: 515: while(1)
  1667                           
  1668                           
  1669                           ;main.c: 516: {
  1670                           ;main.c: 522: LCD_Clear();
  1671  0A65  160A  118A  2493  120A  158A  	fcall	_LCD_Clear
  1672                           
  1673                           ;main.c: 523: LCD_Cursor(0,0);
  1674  0A6A  1683               	bsf	3,5	;RP0=1, select bank3
  1675  0A6B  1703               	bsf	3,6	;RP1=1, select bank3
  1676  0A6C  01B5               	clrf	LCD_Cursor@Col^(0+384)
  1677  0A6D  3000               	movlw	0
  1678  0A6E  160A  118A  23A7  120A  158A  	fcall	_LCD_Cursor
  1679                           
  1680                           ;main.c: 524: LCD_WriteString("kmH: ");
  1681  0A73  3044               	movlw	(STR_3-__stringbase)& (0+255)
  1682  0A74  160A  118A  23C7  120A  158A  	fcall	_LCD_WriteString
  1683                           
  1684                           ;main.c: 527: LCD_Cursor(1,0);
  1685  0A79  1683               	bsf	3,5	;RP0=1, select bank3
  1686  0A7A  1703               	bsf	3,6	;RP1=1, select bank3
  1687  0A7B  01B5               	clrf	LCD_Cursor@Col^(0+384)
  1688  0A7C  3001               	movlw	1
  1689  0A7D  160A  118A  23A7  120A  158A  	fcall	_LCD_Cursor
  1690                           
  1691                           ;main.c: 532: _delay((unsigned long)((200)*(18432000/4000.0)));
  1692  0A82  3005               	movlw	5
  1693  0A83  1683               	bsf	3,5	;RP0=1, select bank3
  1694  0A84  1703               	bsf	3,6	;RP1=1, select bank3
  1695  0A85  00CE               	movwf	(??_main^(0+384)+2)
  1696  0A86  30AD               	movlw	173
  1697  0A87  00CD               	movwf	(??_main^(0+384)+1)
  1698  0A88  30E0               	movlw	224
  1699  0A89  00CC               	movwf	??_main^(0+384)
  1700  0A8A                     u5927:	
  1701  0A8A  0BCC               	decfsz	??_main^(0+384),f
  1702  0A8B  2A8A               	goto	u5927
  1703  0A8C  0BCD               	decfsz	(??_main^(0+384)+1),f
  1704  0A8D  2A8A               	goto	u5927
  1705  0A8E  0BCE               	decfsz	(??_main^(0+384)+2),f
  1706  0A8F  2A8A               	goto	u5927
  1707  0A90  2A65               	goto	l3339
  1708  0A91                     __end_of_main:	
  1709                           
  1710                           	psect	text1
  1711  14FA                     __ptext1:	
  1712 ;; *************** function _USART_Init *****************
  1713 ;; Defined at:
  1714 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  BaudRate        4   15[BANK3 ] long 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;		None               void
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       0       0       4       0
  1729 ;;      Locals:         0       0       0       0       0
  1730 ;;      Temps:          0       0       0       4       0
  1731 ;;      Totals:         0       0       0       8       0
  1732 ;;Total ram usage:        8 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    6
  1735 ;; This function calls:
  1736 ;;		___aldiv
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           
  1743                           ;psect for function _USART_Init
  1744  14FA                     _USART_Init:	
  1745                           
  1746                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1750  14FA  1683               	bsf	3,5	;RP0=1, select bank3
  1751  14FB  1703               	bsf	3,6	;RP1=1, select bank3
  1752  14FC  0844               	movf	USART_Init@BaudRate^(0+384),w
  1753  14FD  00C8               	movwf	??_USART_Init^(0+384)
  1754  14FE  0845               	movf	(USART_Init@BaudRate+1)^(0+384),w
  1755  14FF  00C9               	movwf	(??_USART_Init^(0+384)+1)
  1756  1500  0846               	movf	(USART_Init@BaudRate+2)^(0+384),w
  1757  1501  00CA               	movwf	(??_USART_Init^(0+384)+2)
  1758  1502  0847               	movf	(USART_Init@BaudRate+3)^(0+384),w
  1759  1503  00CB               	movwf	(??_USART_Init^(0+384)+3)
  1760  1504  3004               	movlw	4
  1761  1505                     u3915:	
  1762  1505  1003               	clrc
  1763  1506  0DC8               	rlf	??_USART_Init^(0+384),f
  1764  1507  0DC9               	rlf	(??_USART_Init^(0+384)+1),f
  1765  1508  0DCA               	rlf	(??_USART_Init^(0+384)+2),f
  1766  1509  0DCB               	rlf	(??_USART_Init^(0+384)+3),f
  1767  150A  3EFF               	addlw	-1
  1768  150B  1D03               	skipz
  1769  150C  2D05               	goto	u3915
  1770  150D  084B               	movf	(??_USART_Init+3)^(0+384),w
  1771  150E  00B8               	movwf	(___aldiv@divisor+3)^(0+384)
  1772  150F  084A               	movf	(??_USART_Init+2)^(0+384),w
  1773  1510  00B7               	movwf	(___aldiv@divisor+2)^(0+384)
  1774  1511  0849               	movf	(??_USART_Init+1)^(0+384),w
  1775  1512  00B6               	movwf	(___aldiv@divisor+1)^(0+384)
  1776  1513  0848               	movf	??_USART_Init^(0+384),w
  1777  1514  00B5               	movwf	___aldiv@divisor^(0+384)
  1778  1515  3001               	movlw	1
  1779  1516  00BC               	movwf	(___aldiv@dividend+3)^(0+384)
  1780  1517  3019               	movlw	25
  1781  1518  00BB               	movwf	(___aldiv@dividend+2)^(0+384)
  1782  1519  3040               	movlw	64
  1783  151A  00BA               	movwf	(___aldiv@dividend+1)^(0+384)
  1784  151B  3000               	movlw	0
  1785  151C  00B9               	movwf	___aldiv@dividend^(0+384)
  1786  151D  120A  158A  2015   	fcall	___aldiv
  1787  1520  1683               	bsf	3,5	;RP0=1, select bank3
  1788  1521  1703               	bsf	3,6	;RP1=1, select bank3
  1789  1522  0835               	movf	?___aldiv^(0+384),w
  1790  1523  3EFF               	addlw	255
  1791  1524  1683               	bsf	3,5	;RP0=1, select bank1
  1792  1525  1303               	bcf	3,6	;RP1=0, select bank1
  1793  1526  0099               	movwf	25	;volatile
  1794                           
  1795                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1796  1527  1398               	bcf	24,7	;volatile
  1797                           
  1798                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1799  1528  1318               	bcf	24,6	;volatile
  1800                           
  1801                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1802  1529  1698               	bsf	24,5	;volatile
  1803                           
  1804                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1805  152A  1218               	bcf	24,4	;volatile
  1806                           
  1807                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1808  152B  1518               	bsf	24,2	;volatile
  1809                           
  1810                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1811  152C  1498               	bsf	24,1	;volatile
  1812                           
  1813                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1814  152D  1018               	bcf	24,0	;volatile
  1815                           
  1816                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1817  152E  1283               	bcf	3,5	;RP0=0, select bank0
  1818  152F  1303               	bcf	3,6	;RP1=0, select bank0
  1819  1530  1798               	bsf	24,7	;volatile
  1820                           
  1821                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1822  1531  1318               	bcf	24,6	;volatile
  1823                           
  1824                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1825  1532  1298               	bcf	24,5	;volatile
  1826                           
  1827                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1828  1533  1618               	bsf	24,4	;volatile
  1829                           
  1830                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1831  1534  1198               	bcf	24,3	;volatile
  1832                           
  1833                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1834  1535  1118               	bcf	24,2	;volatile
  1835                           
  1836                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1837  1536  1098               	bcf	24,1	;volatile
  1838                           
  1839                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1840  1537  1018               	bcf	24,0	;volatile
  1841                           
  1842                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1843  1538  1683               	bsf	3,5	;RP0=1, select bank1
  1844  1539  1303               	bcf	3,6	;RP1=0, select bank1
  1845  153A  120C               	bcf	12,4	;volatile
  1846                           
  1847                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1848  153B  1283               	bcf	3,5	;RP0=0, select bank0
  1849  153C  1303               	bcf	3,6	;RP1=0, select bank0
  1850  153D  120C               	bcf	12,4	;volatile
  1851                           
  1852                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1853  153E  1683               	bsf	3,5	;RP0=1, select bank1
  1854  153F  1303               	bcf	3,6	;RP1=0, select bank1
  1855  1540  168C               	bsf	12,5	;volatile
  1856                           
  1857                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1858  1541  1283               	bcf	3,5	;RP0=0, select bank0
  1859  1542  1303               	bcf	3,6	;RP1=0, select bank0
  1860  1543  128C               	bcf	12,5	;volatile
  1861  1544  0008               	return
  1862  1545                     __end_of_USART_Init:	
  1863                           
  1864                           	psect	text2
  1865  0815                     __ptext2:	
  1866 ;; *************** function ___aldiv *****************
  1867 ;; Defined at:
  1868 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  divisor         4    0[BANK3 ] long 
  1871 ;;  dividend        4    4[BANK3 ] long 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  quotient        4   11[BANK3 ] long 
  1874 ;;  sign            1   10[BANK3 ] unsigned char 
  1875 ;;  counter         1    9[BANK3 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  4    0[BANK3 ] long 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       8       0
  1886 ;;      Locals:         0       0       0       6       0
  1887 ;;      Temps:          0       0       0       1       0
  1888 ;;      Totals:         0       0       0      15       0
  1889 ;;Total ram usage:       15 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    5
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_USART_Init
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function ___aldiv
  1901  0815                     ___aldiv:	
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1905  0815  1683               	bsf	3,5	;RP0=1, select bank3
  1906  0816  1703               	bsf	3,6	;RP1=1, select bank3
  1907  0817  01BF               	clrf	___aldiv@sign^(0+384)
  1908  0818  1FB8               	btfss	(___aldiv@divisor+3)^(0+384),7
  1909  0819  2827               	goto	l623
  1910  081A  09B5               	comf	___aldiv@divisor^(0+384),f
  1911  081B  09B6               	comf	(___aldiv@divisor+1)^(0+384),f
  1912  081C  09B7               	comf	(___aldiv@divisor+2)^(0+384),f
  1913  081D  09B8               	comf	(___aldiv@divisor+3)^(0+384),f
  1914  081E  0AB5               	incf	___aldiv@divisor^(0+384),f
  1915  081F  1903               	skipnz
  1916  0820  0AB6               	incf	(___aldiv@divisor+1)^(0+384),f
  1917  0821  1903               	skipnz
  1918  0822  0AB7               	incf	(___aldiv@divisor+2)^(0+384),f
  1919  0823  1903               	skipnz
  1920  0824  0AB8               	incf	(___aldiv@divisor+3)^(0+384),f
  1921  0825  01BF               	clrf	___aldiv@sign^(0+384)
  1922  0826  0ABF               	incf	___aldiv@sign^(0+384),f
  1923  0827                     l623:	
  1924  0827  1FBC               	btfss	(___aldiv@dividend+3)^(0+384),7
  1925  0828  2838               	goto	l3129
  1926  0829  09B9               	comf	___aldiv@dividend^(0+384),f
  1927  082A  09BA               	comf	(___aldiv@dividend+1)^(0+384),f
  1928  082B  09BB               	comf	(___aldiv@dividend+2)^(0+384),f
  1929  082C  09BC               	comf	(___aldiv@dividend+3)^(0+384),f
  1930  082D  0AB9               	incf	___aldiv@dividend^(0+384),f
  1931  082E  1903               	skipnz
  1932  082F  0ABA               	incf	(___aldiv@dividend+1)^(0+384),f
  1933  0830  1903               	skipnz
  1934  0831  0ABB               	incf	(___aldiv@dividend+2)^(0+384),f
  1935  0832  1903               	skipnz
  1936  0833  0ABC               	incf	(___aldiv@dividend+3)^(0+384),f
  1937  0834  3001               	movlw	1
  1938  0835  00BD               	movwf	??___aldiv^(0+384)
  1939  0836  083D               	movf	??___aldiv^(0+384),w
  1940  0837  06BF               	xorwf	___aldiv@sign^(0+384),f
  1941  0838                     l3129:	
  1942  0838  3000               	movlw	0
  1943  0839  00C3               	movwf	(___aldiv@quotient+3)^(0+384)
  1944  083A  3000               	movlw	0
  1945  083B  00C2               	movwf	(___aldiv@quotient+2)^(0+384)
  1946  083C  3000               	movlw	0
  1947  083D  00C1               	movwf	(___aldiv@quotient+1)^(0+384)
  1948  083E  3000               	movlw	0
  1949  083F  00C0               	movwf	___aldiv@quotient^(0+384)
  1950  0840  0838               	movf	(___aldiv@divisor+3)^(0+384),w
  1951  0841  0437               	iorwf	(___aldiv@divisor+2)^(0+384),w
  1952  0842  0436               	iorwf	(___aldiv@divisor+1)^(0+384),w
  1953  0843  0435               	iorwf	___aldiv@divisor^(0+384),w
  1954  0844  1903               	skipnz
  1955  0845  288D               	goto	l3151
  1956  0846  01BE               	clrf	___aldiv@counter^(0+384)
  1957  0847  0ABE               	incf	___aldiv@counter^(0+384),f
  1958  0848                     l3137:	
  1959  0848  1BB8               	btfsc	(___aldiv@divisor+3)^(0+384),7
  1960  0849  2858               	goto	l3139
  1961  084A  3001               	movlw	1
  1962  084B  00BD               	movwf	??___aldiv^(0+384)
  1963  084C                     u3835:	
  1964  084C  1003               	clrc
  1965  084D  0DB5               	rlf	___aldiv@divisor^(0+384),f
  1966  084E  0DB6               	rlf	(___aldiv@divisor+1)^(0+384),f
  1967  084F  0DB7               	rlf	(___aldiv@divisor+2)^(0+384),f
  1968  0850  0DB8               	rlf	(___aldiv@divisor+3)^(0+384),f
  1969  0851  0BBD               	decfsz	??___aldiv^(0+384),f
  1970  0852  284C               	goto	u3835
  1971  0853  3001               	movlw	1
  1972  0854  00BD               	movwf	??___aldiv^(0+384)
  1973  0855  083D               	movf	??___aldiv^(0+384),w
  1974  0856  07BE               	addwf	___aldiv@counter^(0+384),f
  1975  0857  2848               	goto	l3137
  1976  0858                     l3139:	
  1977  0858  3001               	movlw	1
  1978  0859  00BD               	movwf	??___aldiv^(0+384)
  1979  085A                     u3855:	
  1980  085A  1003               	clrc
  1981  085B  0DC0               	rlf	___aldiv@quotient^(0+384),f
  1982  085C  0DC1               	rlf	(___aldiv@quotient+1)^(0+384),f
  1983  085D  0DC2               	rlf	(___aldiv@quotient+2)^(0+384),f
  1984  085E  0DC3               	rlf	(___aldiv@quotient+3)^(0+384),f
  1985  085F  0BBD               	decfsz	??___aldiv^(0+384),f
  1986  0860  285A               	goto	u3855
  1987  0861  0838               	movf	(___aldiv@divisor+3)^(0+384),w
  1988  0862  023C               	subwf	(___aldiv@dividend+3)^(0+384),w
  1989  0863  1D03               	skipz
  1990  0864  286F               	goto	u3865
  1991  0865  0837               	movf	(___aldiv@divisor+2)^(0+384),w
  1992  0866  023B               	subwf	(___aldiv@dividend+2)^(0+384),w
  1993  0867  1D03               	skipz
  1994  0868  286F               	goto	u3865
  1995  0869  0836               	movf	(___aldiv@divisor+1)^(0+384),w
  1996  086A  023A               	subwf	(___aldiv@dividend+1)^(0+384),w
  1997  086B  1D03               	skipz
  1998  086C  286F               	goto	u3865
  1999  086D  0835               	movf	___aldiv@divisor^(0+384),w
  2000  086E  0239               	subwf	___aldiv@dividend^(0+384),w
  2001  086F                     u3865:	
  2002  086F  1C03               	skipc
  2003  0870  2880               	goto	l3147
  2004  0871  0835               	movf	___aldiv@divisor^(0+384),w
  2005  0872  02B9               	subwf	___aldiv@dividend^(0+384),f
  2006  0873  0836               	movf	(___aldiv@divisor+1)^(0+384),w
  2007  0874  1C03               	skipc
  2008  0875  0F36               	incfsz	(___aldiv@divisor+1)^(0+384),w
  2009  0876  02BA               	subwf	(___aldiv@dividend+1)^(0+384),f
  2010  0877  0837               	movf	(___aldiv@divisor+2)^(0+384),w
  2011  0878  1C03               	skipc
  2012  0879  0F37               	incfsz	(___aldiv@divisor+2)^(0+384),w
  2013  087A  02BB               	subwf	(___aldiv@dividend+2)^(0+384),f
  2014  087B  0838               	movf	(___aldiv@divisor+3)^(0+384),w
  2015  087C  1C03               	skipc
  2016  087D  0F38               	incfsz	(___aldiv@divisor+3)^(0+384),w
  2017  087E  02BC               	subwf	(___aldiv@dividend+3)^(0+384),f
  2018  087F  1440               	bsf	___aldiv@quotient^(0+384),0
  2019  0880                     l3147:	
  2020  0880  3001               	movlw	1
  2021  0881                     u3875:	
  2022  0881  1003               	clrc
  2023  0882  0CB8               	rrf	(___aldiv@divisor+3)^(0+384),f
  2024  0883  0CB7               	rrf	(___aldiv@divisor+2)^(0+384),f
  2025  0884  0CB6               	rrf	(___aldiv@divisor+1)^(0+384),f
  2026  0885  0CB5               	rrf	___aldiv@divisor^(0+384),f
  2027  0886  3EFF               	addlw	-1
  2028  0887  1D03               	skipz
  2029  0888  2881               	goto	u3875
  2030  0889  3001               	movlw	1
  2031  088A  02BE               	subwf	___aldiv@counter^(0+384),f
  2032  088B  1D03               	btfss	3,2
  2033  088C  2858               	goto	l3139
  2034  088D                     l3151:	
  2035  088D  083F               	movf	___aldiv@sign^(0+384),w
  2036  088E  1903               	btfsc	3,2
  2037  088F  289B               	goto	l3155
  2038  0890  09C0               	comf	___aldiv@quotient^(0+384),f
  2039  0891  09C1               	comf	(___aldiv@quotient+1)^(0+384),f
  2040  0892  09C2               	comf	(___aldiv@quotient+2)^(0+384),f
  2041  0893  09C3               	comf	(___aldiv@quotient+3)^(0+384),f
  2042  0894  0AC0               	incf	___aldiv@quotient^(0+384),f
  2043  0895  1903               	skipnz
  2044  0896  0AC1               	incf	(___aldiv@quotient+1)^(0+384),f
  2045  0897  1903               	skipnz
  2046  0898  0AC2               	incf	(___aldiv@quotient+2)^(0+384),f
  2047  0899  1903               	skipnz
  2048  089A  0AC3               	incf	(___aldiv@quotient+3)^(0+384),f
  2049  089B                     l3155:	
  2050  089B  0843               	movf	(___aldiv@quotient+3)^(0+384),w
  2051  089C  00B8               	movwf	(?___aldiv+3)^(0+384)
  2052  089D  0842               	movf	(___aldiv@quotient+2)^(0+384),w
  2053  089E  00B7               	movwf	(?___aldiv+2)^(0+384)
  2054  089F  0841               	movf	(___aldiv@quotient+1)^(0+384),w
  2055  08A0  00B6               	movwf	(?___aldiv+1)^(0+384)
  2056  08A1  0840               	movf	___aldiv@quotient^(0+384),w
  2057  08A2  00B5               	movwf	?___aldiv^(0+384)
  2058  08A3  0008               	return
  2059  08A4                     __end_of___aldiv:	
  2060                           
  2061                           	psect	text3
  2062  12C7                     __ptext3:	
  2063 ;; *************** function _TIMER0_Set *****************
  2064 ;; Defined at:
  2065 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  contagens       1    wreg     unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  contagens       1    0[BANK3 ] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;		None               void
  2072 ;; Registers used:
  2073 ;;		wreg
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         0       0       0       0       0
  2080 ;;      Locals:         0       0       0       1       0
  2081 ;;      Temps:          0       0       0       0       0
  2082 ;;      Totals:         0       0       0       1       0
  2083 ;;Total ram usage:        1 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    5
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _TIMER0_Set
  2095  12C7                     _TIMER0_Set:	
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _TIMER0_Set: [wreg]
  2099                           ;TIMER0_Set@contagens stored from wreg
  2100  12C7  1683               	bsf	3,5	;RP0=1, select bank3
  2101  12C8  1703               	bsf	3,6	;RP1=1, select bank3
  2102  12C9  00B5               	movwf	TIMER0_Set@contagens^(0+384)
  2103                           
  2104                           ;timers.c: 22: TMR0 = contagens;
  2105  12CA  0835               	movf	TIMER0_Set@contagens^(0+384),w
  2106  12CB  1283               	bcf	3,5	;RP0=0, select bank0
  2107  12CC  1303               	bcf	3,6	;RP1=0, select bank0
  2108  12CD  0081               	movwf	1	;volatile
  2109  12CE  0008               	return
  2110  12CF                     __end_of_TIMER0_Set:	
  2111                           
  2112                           	psect	text4
  2113  12E1                     __ptext4:	
  2114 ;; *************** function _TIMER0_Init *****************
  2115 ;; Defined at:
  2116 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;		None               void
  2123 ;; Registers used:
  2124 ;;		None
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    5
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _TIMER0_Init
  2146  12E1                     _TIMER0_Init:	
  2147                           
  2148                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _TIMER0_Init: []
  2152  12E1  1683               	bsf	3,5	;RP0=1, select bank1
  2153  12E2  1303               	bcf	3,6	;RP1=0, select bank1
  2154  12E3  1281               	bcf	1,5	;volatile
  2155                           
  2156                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2157  12E4  1201               	bcf	1,4	;volatile
  2158                           
  2159                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2160  12E5  1181               	bcf	1,3	;volatile
  2161                           
  2162                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2163  12E6  1501               	bsf	1,2	;volatile
  2164                           
  2165                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2166  12E7  1481               	bsf	1,1	;volatile
  2167                           
  2168                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2169  12E8  1401               	bsf	1,0	;volatile
  2170                           
  2171                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2172  12E9  110B               	bcf	11,2	;volatile
  2173                           
  2174                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2175  12EA  168B               	bsf	11,5	;volatile
  2176  12EB  0008               	return
  2177  12EC                     __end_of_TIMER0_Init:	
  2178                           
  2179                           	psect	text5
  2180  144A                     __ptext5:	
  2181 ;; *************** function _PWM_Init *****************
  2182 ;; Defined at:
  2183 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;		None               void
  2190 ;; Registers used:
  2191 ;;		wreg
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2197 ;;      Params:         0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0
  2200 ;;      Totals:         0       0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    5
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _PWM_Init
  2213  144A                     _PWM_Init:	
  2214                           
  2215                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _PWM_Init: [wreg]
  2219  144A  1283               	bcf	3,5	;RP0=0, select bank0
  2220  144B  1303               	bcf	3,6	;RP1=0, select bank0
  2221  144C  1492               	bsf	18,1	;volatile
  2222                           
  2223                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2224  144D  1012               	bcf	18,0	;volatile
  2225                           
  2226                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2227  144E  1312               	bcf	18,6	;volatile
  2228                           
  2229                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2230  144F  1292               	bcf	18,5	;volatile
  2231                           
  2232                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2233  1450  1212               	bcf	18,4	;volatile
  2234                           
  2235                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2236  1451  1192               	bcf	18,3	;volatile
  2237                           
  2238                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2239  1452  1512               	bsf	18,2	;volatile
  2240                           
  2241                           ;pwm.c: 27: PR2 = 255;
  2242  1453  30FF               	movlw	255
  2243  1454  1683               	bsf	3,5	;RP0=1, select bank1
  2244  1455  1303               	bcf	3,6	;RP1=0, select bank1
  2245  1456  0092               	movwf	18	;volatile
  2246                           
  2247                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2248  1457  1283               	bcf	3,5	;RP0=0, select bank0
  2249  1458  1303               	bcf	3,6	;RP1=0, select bank0
  2250  1459  1597               	bsf	23,3	;volatile
  2251                           
  2252                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2253  145A  1517               	bsf	23,2	;volatile
  2254                           
  2255                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2256  145B  1497               	bsf	23,1	;volatile
  2257                           
  2258                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2259  145C  1417               	bsf	23,0	;volatile
  2260                           
  2261                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2262  145D  1683               	bsf	3,5	;RP0=1, select bank1
  2263  145E  1303               	bcf	3,6	;RP1=0, select bank1
  2264  145F  150C               	bsf	12,2	;volatile
  2265                           
  2266                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2267  1460  1283               	bcf	3,5	;RP0=0, select bank0
  2268  1461  1303               	bcf	3,6	;RP1=0, select bank0
  2269  1462  110C               	bcf	12,2	;volatile
  2270                           
  2271                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2272  1463  159D               	bsf	29,3	;volatile
  2273                           
  2274                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2275  1464  151D               	bsf	29,2	;volatile
  2276                           
  2277                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2278  1465  149D               	bsf	29,1	;volatile
  2279                           
  2280                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2281  1466  141D               	bsf	29,0	;volatile
  2282                           
  2283                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2284  1467  1683               	bsf	3,5	;RP0=1, select bank1
  2285  1468  1303               	bcf	3,6	;RP1=0, select bank1
  2286  1469  140D               	bsf	13,0	;volatile
  2287                           
  2288                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2289  146A  1283               	bcf	3,5	;RP0=0, select bank0
  2290  146B  1303               	bcf	3,6	;RP1=0, select bank0
  2291  146C  100D               	bcf	13,0	;volatile
  2292  146D  0008               	return
  2293  146E                     __end_of_PWM_Init:	
  2294                           
  2295                           	psect	text6
  2296  1429                     __ptext6:	
  2297 ;; *************** function _PWM_DutyCycle2 *****************
  2298 ;; Defined at:
  2299 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  valor           2    0[BANK3 ] int 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;		None               void
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         0       0       0       2       0
  2314 ;;      Locals:         0       0       0       0       0
  2315 ;;      Temps:          0       0       0       2       0
  2316 ;;      Totals:         0       0       0       4       0
  2317 ;;Total ram usage:        4 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    5
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _PWM_DutyCycle2
  2329  1429                     _PWM_DutyCycle2:	
  2330                           
  2331                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2335  1429  1683               	bsf	3,5	;RP0=1, select bank3
  2336  142A  1703               	bsf	3,6	;RP1=1, select bank3
  2337  142B  0836               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2338  142C  00B8               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2339  142D  0835               	movf	PWM_DutyCycle2@valor^(0+384),w
  2340  142E  00B7               	movwf	??_PWM_DutyCycle2^(0+384)
  2341  142F  0D38               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2342  1430  0CB8               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2343  1431  0CB7               	rrf	??_PWM_DutyCycle2^(0+384),f
  2344  1432  0D38               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2345  1433  0CB8               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2346  1434  0CB7               	rrf	??_PWM_DutyCycle2^(0+384),f
  2347  1435  0837               	movf	??_PWM_DutyCycle2^(0+384),w
  2348  1436  1283               	bcf	3,5	;RP0=0, select bank0
  2349  1437  1303               	bcf	3,6	;RP1=0, select bank0
  2350  1438  009B               	movwf	27	;volatile
  2351                           
  2352                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2353  1439  1683               	bsf	3,5	;RP0=1, select bank3
  2354  143A  1703               	bsf	3,6	;RP1=1, select bank3
  2355  143B  0835               	movf	PWM_DutyCycle2@valor^(0+384),w
  2356  143C  00B7               	movwf	??_PWM_DutyCycle2^(0+384)
  2357  143D  3003               	movlw	3
  2358  143E                     u3905:	
  2359  143E  1003               	clrc
  2360  143F  0DB7               	rlf	??_PWM_DutyCycle2^(0+384),f
  2361  1440  3EFF               	addlw	-1
  2362  1441  1D03               	skipz
  2363  1442  2C3E               	goto	u3905
  2364  1443  1003               	clrc
  2365  1444  0D37               	rlf	??_PWM_DutyCycle2^(0+384),w
  2366  1445  380C               	iorlw	12
  2367  1446  1283               	bcf	3,5	;RP0=0, select bank0
  2368  1447  1303               	bcf	3,6	;RP1=0, select bank0
  2369  1448  009D               	movwf	29	;volatile
  2370  1449  0008               	return
  2371  144A                     __end_of_PWM_DutyCycle2:	
  2372                           
  2373                           	psect	text7
  2374  1408                     __ptext7:	
  2375 ;; *************** function _PWM_DutyCycle1 *****************
  2376 ;; Defined at:
  2377 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  valor           2    0[BANK3 ] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;		None               void
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       0       2       0
  2392 ;;      Locals:         0       0       0       0       0
  2393 ;;      Temps:          0       0       0       2       0
  2394 ;;      Totals:         0       0       0       4       0
  2395 ;;Total ram usage:        4 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    5
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _PWM_DutyCycle1
  2407  1408                     _PWM_DutyCycle1:	
  2408                           
  2409                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2410                           
  2411                           ;incstack = 0
  2412                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2413  1408  1683               	bsf	3,5	;RP0=1, select bank3
  2414  1409  1703               	bsf	3,6	;RP1=1, select bank3
  2415  140A  0836               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2416  140B  00B8               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2417  140C  0835               	movf	PWM_DutyCycle1@valor^(0+384),w
  2418  140D  00B7               	movwf	??_PWM_DutyCycle1^(0+384)
  2419  140E  0D38               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2420  140F  0CB8               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2421  1410  0CB7               	rrf	??_PWM_DutyCycle1^(0+384),f
  2422  1411  0D38               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2423  1412  0CB8               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2424  1413  0CB7               	rrf	??_PWM_DutyCycle1^(0+384),f
  2425  1414  0837               	movf	??_PWM_DutyCycle1^(0+384),w
  2426  1415  1283               	bcf	3,5	;RP0=0, select bank0
  2427  1416  1303               	bcf	3,6	;RP1=0, select bank0
  2428  1417  0095               	movwf	21	;volatile
  2429                           
  2430                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2431  1418  1683               	bsf	3,5	;RP0=1, select bank3
  2432  1419  1703               	bsf	3,6	;RP1=1, select bank3
  2433  141A  0835               	movf	PWM_DutyCycle1@valor^(0+384),w
  2434  141B  00B7               	movwf	??_PWM_DutyCycle1^(0+384)
  2435  141C  3003               	movlw	3
  2436  141D                     u3945:	
  2437  141D  1003               	clrc
  2438  141E  0DB7               	rlf	??_PWM_DutyCycle1^(0+384),f
  2439  141F  3EFF               	addlw	-1
  2440  1420  1D03               	skipz
  2441  1421  2C1D               	goto	u3945
  2442  1422  1003               	clrc
  2443  1423  0D37               	rlf	??_PWM_DutyCycle1^(0+384),w
  2444  1424  380C               	iorlw	12
  2445  1425  1283               	bcf	3,5	;RP0=0, select bank0
  2446  1426  1303               	bcf	3,6	;RP1=0, select bank0
  2447  1427  0097               	movwf	23	;volatile
  2448  1428  0008               	return
  2449  1429                     __end_of_PWM_DutyCycle1:	
  2450                           
  2451                           	psect	text8
  2452  13C7                     __ptext8:	
  2453 ;; *************** function _LCD_WriteString *****************
  2454 ;; Defined at:
  2455 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  Str             1    wreg     PTR const unsigned char 
  2458 ;;		 -> STR_3(6), STR_2(17), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  Str             1    3[BANK3 ] PTR const unsigned char 
  2461 ;;		 -> STR_3(6), STR_2(17), 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;		None               void
  2464 ;; Registers used:
  2465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2471 ;;      Params:         0       0       0       0       0
  2472 ;;      Locals:         0       0       0       1       0
  2473 ;;      Temps:          0       0       0       1       0
  2474 ;;      Totals:         0       0       0       2       0
  2475 ;;Total ram usage:        2 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    6
  2478 ;; This function calls:
  2479 ;;		_LCD_WriteData
  2480 ;; This function is called by:
  2481 ;;		_main
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function _LCD_WriteString
  2487  13C7                     _LCD_WriteString:	
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2491                           ;LCD_WriteString@Str stored from wreg
  2492  13C7  1683               	bsf	3,5	;RP0=1, select bank3
  2493  13C8  1703               	bsf	3,6	;RP1=1, select bank3
  2494  13C9  00B8               	movwf	LCD_WriteString@Str^(0+384)
  2495  13CA                     l3281:	
  2496                           ;lcd.c: 63: while(*Str != '\0')
  2497                           
  2498  13CA  0838               	movf	LCD_WriteString@Str^(0+384),w
  2499  13CB  0084               	movwf	4
  2500  13CC  160A  118A  2000  160A  118A  	fcall	stringdir
  2501  13D1  3800               	iorlw	0
  2502  13D2  1903               	btfsc	3,2
  2503  13D3  0008               	return
  2504                           
  2505                           ;lcd.c: 64: {
  2506                           ;lcd.c: 65: LCD_WriteData(*Str);
  2507  13D4  0838               	movf	LCD_WriteString@Str^(0+384),w
  2508  13D5  0084               	movwf	4
  2509  13D6  160A  118A  2000  160A  118A  	fcall	stringdir
  2510  13DB  160A  118A  2323  160A  118A  	fcall	_LCD_WriteData
  2511                           
  2512                           ;lcd.c: 66: Str++;
  2513  13E0  3001               	movlw	1
  2514  13E1  1683               	bsf	3,5	;RP0=1, select bank3
  2515  13E2  1703               	bsf	3,6	;RP1=1, select bank3
  2516  13E3  00B7               	movwf	??_LCD_WriteString^(0+384)
  2517  13E4  0837               	movf	??_LCD_WriteString^(0+384),w
  2518  13E5  07B8               	addwf	LCD_WriteString@Str^(0+384),f
  2519  13E6  2BCA               	goto	l3281
  2520  13E7                     __end_of_LCD_WriteString:	
  2521                           
  2522                           	psect	text9
  2523  1323                     __ptext9:	
  2524 ;; *************** function _LCD_WriteData *****************
  2525 ;; Defined at:
  2526 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  Byte            1    wreg     unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  Byte            1    1[BANK3 ] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		wreg
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2540 ;;      Params:         0       0       0       0       0
  2541 ;;      Locals:         0       0       0       1       0
  2542 ;;      Temps:          0       0       0       1       0
  2543 ;;      Totals:         0       0       0       2       0
  2544 ;;Total ram usage:        2 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    5
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_LCD_WriteString
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _LCD_WriteData
  2556  1323                     _LCD_WriteData:	
  2557                           
  2558                           ;incstack = 0
  2559                           ; Regs used in _LCD_WriteData: [wreg]
  2560                           ;LCD_WriteData@Byte stored from wreg
  2561  1323  1683               	bsf	3,5	;RP0=1, select bank3
  2562  1324  1703               	bsf	3,6	;RP1=1, select bank3
  2563  1325  00B6               	movwf	LCD_WriteData@Byte^(0+384)
  2564                           
  2565                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  2566  1326  1283               	bcf	3,5	;RP0=0, select bank0
  2567  1327  1303               	bcf	3,6	;RP1=0, select bank0
  2568  1328  1409               	bsf	9,0	;volatile
  2569                           
  2570                           ;lcd.c: 51: PORTD = Byte;
  2571  1329  1683               	bsf	3,5	;RP0=1, select bank3
  2572  132A  1703               	bsf	3,6	;RP1=1, select bank3
  2573  132B  0836               	movf	LCD_WriteData@Byte^(0+384),w
  2574  132C  1283               	bcf	3,5	;RP0=0, select bank0
  2575  132D  1303               	bcf	3,6	;RP1=0, select bank0
  2576  132E  0088               	movwf	8	;volatile
  2577                           
  2578                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  2579  132F  1489               	bsf	9,1	;volatile
  2580                           
  2581                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2582  1330  303D               	movlw	61
  2583  1331  1683               	bsf	3,5	;RP0=1, select bank3
  2584  1332  1703               	bsf	3,6	;RP1=1, select bank3
  2585  1333  00B5               	movwf	??_LCD_WriteData^(0+384)
  2586  1334                     u5937:	
  2587  1334  0BB5               	decfsz	??_LCD_WriteData^(0+384),f
  2588  1335  2B34               	goto	u5937
  2589                           
  2590                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  2591  1336  1283               	bcf	3,5	;RP0=0, select bank0
  2592  1337  1303               	bcf	3,6	;RP1=0, select bank0
  2593  1338  1089               	bcf	9,1	;volatile
  2594  1339  0008               	return
  2595  133A                     __end_of_LCD_WriteData:	
  2596                           
  2597                           	psect	text10
  2598  160A                     __ptext10:	
  2599 ;; *************** function _LCD_Init *****************
  2600 ;; Defined at:
  2601 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, pclath, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0
  2617 ;;      Temps:          0       0       0       2       0
  2618 ;;      Totals:         0       0       0       2       0
  2619 ;;Total ram usage:        2 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    6
  2622 ;; This function calls:
  2623 ;;		_LCD_WriteCmd
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _LCD_Init
  2631  160A                     _LCD_Init:	
  2632                           
  2633                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2637  160A  1683               	bsf	3,5	;RP0=1, select bank1
  2638  160B  1303               	bcf	3,6	;RP1=0, select bank1
  2639  160C  119F               	bcf	31,3	;volatile
  2640                           
  2641                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2642  160D  151F               	bsf	31,2	;volatile
  2643                           
  2644                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2645  160E  109F               	bcf	31,1	;volatile
  2646                           
  2647                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2648  160F  101F               	bcf	31,0	;volatile
  2649                           
  2650                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2651  1610  305A               	movlw	90
  2652  1611  1683               	bsf	3,5	;RP0=1, select bank3
  2653  1612  1703               	bsf	3,6	;RP1=1, select bank3
  2654  1613  00B8               	movwf	(??_LCD_Init^(0+384)+1)
  2655  1614  30C3               	movlw	195
  2656  1615  00B7               	movwf	??_LCD_Init^(0+384)
  2657  1616                     u5947:	
  2658  1616  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2659  1617  2E16               	goto	u5947
  2660  1618  0BB8               	decfsz	(??_LCD_Init^(0+384)+1),f
  2661  1619  2E16               	goto	u5947
  2662                           
  2663                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2664  161A  3030               	movlw	48
  2665  161B  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2666                           
  2667                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2668  1620  3018               	movlw	24
  2669  1621  1683               	bsf	3,5	;RP0=1, select bank3
  2670  1622  1703               	bsf	3,6	;RP1=1, select bank3
  2671  1623  00B8               	movwf	(??_LCD_Init^(0+384)+1)
  2672  1624  30EF               	movlw	239
  2673  1625  00B7               	movwf	??_LCD_Init^(0+384)
  2674  1626                     u5957:	
  2675  1626  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2676  1627  2E26               	goto	u5957
  2677  1628  0BB8               	decfsz	(??_LCD_Init^(0+384)+1),f
  2678  1629  2E26               	goto	u5957
  2679                           
  2680                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2681  162A  3030               	movlw	48
  2682  162B  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2683                           
  2684                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2685  1630  3099               	movlw	153
  2686  1631  1683               	bsf	3,5	;RP0=1, select bank3
  2687  1632  1703               	bsf	3,6	;RP1=1, select bank3
  2688  1633  00B7               	movwf	??_LCD_Init^(0+384)
  2689  1634                     u5967:	
  2690  1634  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2691  1635  2E34               	goto	u5967
  2692                           
  2693                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2694  1636  3030               	movlw	48
  2695  1637  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2696                           
  2697                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2698  163C  303D               	movlw	61
  2699  163D  1683               	bsf	3,5	;RP0=1, select bank3
  2700  163E  1703               	bsf	3,6	;RP1=1, select bank3
  2701  163F  00B7               	movwf	??_LCD_Init^(0+384)
  2702  1640                     u5977:	
  2703  1640  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2704  1641  2E40               	goto	u5977
  2705                           
  2706                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2707  1642  3038               	movlw	56
  2708  1643  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2709                           
  2710                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2711  1648  303D               	movlw	61
  2712  1649  1683               	bsf	3,5	;RP0=1, select bank3
  2713  164A  1703               	bsf	3,6	;RP1=1, select bank3
  2714  164B  00B7               	movwf	??_LCD_Init^(0+384)
  2715  164C                     u5987:	
  2716  164C  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2717  164D  2E4C               	goto	u5987
  2718                           
  2719                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2720  164E  3001               	movlw	1
  2721  164F  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2722                           
  2723                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2724  1654  300C               	movlw	12
  2725  1655  1683               	bsf	3,5	;RP0=1, select bank3
  2726  1656  1703               	bsf	3,6	;RP1=1, select bank3
  2727  1657  00B8               	movwf	(??_LCD_Init^(0+384)+1)
  2728  1658  30F7               	movlw	247
  2729  1659  00B7               	movwf	??_LCD_Init^(0+384)
  2730  165A                     u5997:	
  2731  165A  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2732  165B  2E5A               	goto	u5997
  2733  165C  0BB8               	decfsz	(??_LCD_Init^(0+384)+1),f
  2734  165D  2E5A               	goto	u5997
  2735                           
  2736                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2737  165E  300C               	movlw	12
  2738  165F  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2739                           
  2740                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2741  1664  303D               	movlw	61
  2742  1665  1683               	bsf	3,5	;RP0=1, select bank3
  2743  1666  1703               	bsf	3,6	;RP1=1, select bank3
  2744  1667  00B7               	movwf	??_LCD_Init^(0+384)
  2745  1668                     u6007:	
  2746  1668  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2747  1669  2E68               	goto	u6007
  2748                           
  2749                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2750  166A  3006               	movlw	6
  2751  166B  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2752                           
  2753                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2754  1670  303D               	movlw	61
  2755  1671  1683               	bsf	3,5	;RP0=1, select bank3
  2756  1672  1703               	bsf	3,6	;RP1=1, select bank3
  2757  1673  00B7               	movwf	??_LCD_Init^(0+384)
  2758  1674                     u6017:	
  2759  1674  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2760  1675  2E74               	goto	u6017
  2761  1676  0008               	return
  2762  1677                     __end_of_LCD_Init:	
  2763                           
  2764                           	psect	text11
  2765  13A7                     __ptext11:	
  2766 ;; *************** function _LCD_Cursor *****************
  2767 ;; Defined at:
  2768 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  Row             1    wreg     unsigned char 
  2771 ;;  Col             1    0[BANK3 ] unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  Row             1    2[BANK3 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;		None               void
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       1       0
  2784 ;;      Locals:         0       0       0       1       0
  2785 ;;      Temps:          0       0       0       1       0
  2786 ;;      Totals:         0       0       0       3       0
  2787 ;;Total ram usage:        3 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    5
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _LCD_Cursor
  2799  13A7                     _LCD_Cursor:	
  2800                           
  2801                           ;incstack = 0
  2802                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  2803                           ;LCD_Cursor@Row stored from wreg
  2804  13A7  1683               	bsf	3,5	;RP0=1, select bank3
  2805  13A8  1703               	bsf	3,6	;RP1=1, select bank3
  2806  13A9  00B7               	movwf	LCD_Cursor@Row^(0+384)
  2807                           
  2808                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  2809  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  2810  13AB  1303               	bcf	3,6	;RP1=0, select bank0
  2811  13AC  1009               	bcf	9,0	;volatile
  2812                           
  2813                           ;lcd.c: 14: if (Row == 0)
  2814  13AD  1683               	bsf	3,5	;RP0=1, select bank3
  2815  13AE  1703               	bsf	3,6	;RP1=1, select bank3
  2816  13AF  08B7               	movf	LCD_Cursor@Row^(0+384),f
  2817  13B0  1D03               	skipz
  2818  13B1  2BB5               	goto	l3267
  2819                           
  2820                           ;lcd.c: 15: {
  2821                           ;lcd.c: 16: PORTD = 0x80 + Col;
  2822  13B2  0835               	movf	LCD_Cursor@Col^(0+384),w
  2823  13B3  3E80               	addlw	128
  2824  13B4  2BB9               	goto	L1
  2825  13B5                     l3267:	
  2826                           ;lcd.c: 17: }
  2827                           
  2828                           
  2829                           ;lcd.c: 18: else
  2830                           ;lcd.c: 19: {
  2831                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  2832  13B5  1683               	bsf	3,5	;RP0=1, select bank3
  2833  13B6  1703               	bsf	3,6	;RP1=1, select bank3
  2834  13B7  0835               	movf	LCD_Cursor@Col^(0+384),w
  2835  13B8  3EC0               	addlw	192
  2836  13B9                     L1:	
  2837  13B9  1283               	bcf	3,5	;RP0=0, select bank0
  2838  13BA  1303               	bcf	3,6	;RP1=0, select bank0
  2839  13BB  0088               	movwf	8	;volatile
  2840                           
  2841                           ;lcd.c: 21: }
  2842                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  2843  13BC  1489               	bsf	9,1	;volatile
  2844                           
  2845                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2846  13BD  303D               	movlw	61
  2847  13BE  1683               	bsf	3,5	;RP0=1, select bank3
  2848  13BF  1703               	bsf	3,6	;RP1=1, select bank3
  2849  13C0  00B6               	movwf	??_LCD_Cursor^(0+384)
  2850  13C1                     u6027:	
  2851  13C1  0BB6               	decfsz	??_LCD_Cursor^(0+384),f
  2852  13C2  2BC1               	goto	u6027
  2853                           
  2854                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  2855  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  2856  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  2857  13C5  1089               	bcf	9,1	;volatile
  2858  13C6  0008               	return
  2859  13C7                     __end_of_LCD_Cursor:	
  2860                           
  2861                           	psect	text12
  2862  1493                     __ptext12:	
  2863 ;; *************** function _LCD_Clear *****************
  2864 ;; Defined at:
  2865 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;		None               void
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0
  2881 ;;      Temps:          0       0       0       2       0
  2882 ;;      Totals:         0       0       0       2       0
  2883 ;;Total ram usage:        2 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    6
  2886 ;; This function calls:
  2887 ;;		_LCD_WriteCmd
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _LCD_Clear
  2895  1493                     _LCD_Clear:	
  2896                           
  2897                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  2898                           
  2899                           ;incstack = 0
  2900                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2901  1493  3001               	movlw	1
  2902  1494  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2903                           
  2904                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  2905  1499  300C               	movlw	12
  2906  149A  1683               	bsf	3,5	;RP0=1, select bank3
  2907  149B  1703               	bsf	3,6	;RP1=1, select bank3
  2908  149C  00B8               	movwf	(??_LCD_Clear^(0+384)+1)
  2909  149D  30F7               	movlw	247
  2910  149E  00B7               	movwf	??_LCD_Clear^(0+384)
  2911  149F                     u6037:	
  2912  149F  0BB7               	decfsz	??_LCD_Clear^(0+384),f
  2913  14A0  2C9F               	goto	u6037
  2914  14A1  0BB8               	decfsz	(??_LCD_Clear^(0+384)+1),f
  2915  14A2  2C9F               	goto	u6037
  2916                           
  2917                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  2918  14A3  300C               	movlw	12
  2919  14A4  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2920                           
  2921                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2922  14A9  303D               	movlw	61
  2923  14AA  1683               	bsf	3,5	;RP0=1, select bank3
  2924  14AB  1703               	bsf	3,6	;RP1=1, select bank3
  2925  14AC  00B7               	movwf	??_LCD_Clear^(0+384)
  2926  14AD                     u6047:	
  2927  14AD  0BB7               	decfsz	??_LCD_Clear^(0+384),f
  2928  14AE  2CAD               	goto	u6047
  2929                           
  2930                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  2931  14AF  3006               	movlw	6
  2932  14B0  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2933                           
  2934                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2935  14B5  303D               	movlw	61
  2936  14B6  1683               	bsf	3,5	;RP0=1, select bank3
  2937  14B7  1703               	bsf	3,6	;RP1=1, select bank3
  2938  14B8  00B7               	movwf	??_LCD_Clear^(0+384)
  2939  14B9                     u6057:	
  2940  14B9  0BB7               	decfsz	??_LCD_Clear^(0+384),f
  2941  14BA  2CB9               	goto	u6057
  2942  14BB  0008               	return
  2943  14BC                     __end_of_LCD_Clear:	
  2944                           
  2945                           	psect	text13
  2946  130C                     __ptext13:	
  2947 ;; *************** function _LCD_WriteCmd *****************
  2948 ;; Defined at:
  2949 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  Byte            1    wreg     unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  Byte            1    1[BANK3 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;		None               void
  2956 ;; Registers used:
  2957 ;;		wreg
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       0       0       1       0
  2965 ;;      Temps:          0       0       0       1       0
  2966 ;;      Totals:         0       0       0       2       0
  2967 ;;Total ram usage:        2 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    5
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_LCD_Clear
  2974 ;;		_LCD_Init
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _LCD_WriteCmd
  2980  130C                     _LCD_WriteCmd:	
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _LCD_WriteCmd: [wreg]
  2984                           ;LCD_WriteCmd@Byte stored from wreg
  2985  130C  1683               	bsf	3,5	;RP0=1, select bank3
  2986  130D  1703               	bsf	3,6	;RP1=1, select bank3
  2987  130E  00B6               	movwf	LCD_WriteCmd@Byte^(0+384)
  2988                           
  2989                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  2990  130F  1283               	bcf	3,5	;RP0=0, select bank0
  2991  1310  1303               	bcf	3,6	;RP1=0, select bank0
  2992  1311  1009               	bcf	9,0	;volatile
  2993                           
  2994                           ;lcd.c: 36: PORTD = Byte;
  2995  1312  1683               	bsf	3,5	;RP0=1, select bank3
  2996  1313  1703               	bsf	3,6	;RP1=1, select bank3
  2997  1314  0836               	movf	LCD_WriteCmd@Byte^(0+384),w
  2998  1315  1283               	bcf	3,5	;RP0=0, select bank0
  2999  1316  1303               	bcf	3,6	;RP1=0, select bank0
  3000  1317  0088               	movwf	8	;volatile
  3001                           
  3002                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3003  1318  1489               	bsf	9,1	;volatile
  3004                           
  3005                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3006  1319  303D               	movlw	61
  3007  131A  1683               	bsf	3,5	;RP0=1, select bank3
  3008  131B  1703               	bsf	3,6	;RP1=1, select bank3
  3009  131C  00B5               	movwf	??_LCD_WriteCmd^(0+384)
  3010  131D                     u6067:	
  3011  131D  0BB5               	decfsz	??_LCD_WriteCmd^(0+384),f
  3012  131E  2B1D               	goto	u6067
  3013                           
  3014                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3015  131F  1283               	bcf	3,5	;RP0=0, select bank0
  3016  1320  1303               	bcf	3,6	;RP1=0, select bank0
  3017  1321  1089               	bcf	9,1	;volatile
  3018  1322  0008               	return
  3019  1323                     __end_of_LCD_WriteCmd:	
  3020                           
  3021                           	psect	text14
  3022  12FA                     __ptext14:	
  3023 ;; *************** function _ADC_Init *****************
  3024 ;; Defined at:
  3025 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		None
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    5
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _ADC_Init
  3055  12FA                     _ADC_Init:	
  3056                           
  3057                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _ADC_Init: []
  3061  12FA  1683               	bsf	3,5	;RP0=1, select bank1
  3062  12FB  1303               	bcf	3,6	;RP1=0, select bank1
  3063  12FC  179F               	bsf	31,7	;volatile
  3064                           
  3065                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  3066  12FD  159F               	bsf	31,3	;volatile
  3067                           
  3068                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  3069  12FE  151F               	bsf	31,2	;volatile
  3070                           
  3071                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  3072  12FF  149F               	bsf	31,1	;volatile
  3073                           
  3074                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  3075  1300  101F               	bcf	31,0	;volatile
  3076                           
  3077                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  3078  1301  1283               	bcf	3,5	;RP0=0, select bank0
  3079  1302  1303               	bcf	3,6	;RP1=0, select bank0
  3080  1303  179F               	bsf	31,7	;volatile
  3081                           
  3082                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  3083  1304  131F               	bcf	31,6	;volatile
  3084                           
  3085                           ;adc.c: 42: PIE1bits.ADIE = 0;
  3086  1305  1683               	bsf	3,5	;RP0=1, select bank1
  3087  1306  1303               	bcf	3,6	;RP1=0, select bank1
  3088  1307  130C               	bcf	12,6	;volatile
  3089                           
  3090                           ;adc.c: 43: PIR1bits.ADIF = 0;
  3091  1308  1283               	bcf	3,5	;RP0=0, select bank0
  3092  1309  1303               	bcf	3,6	;RP1=0, select bank0
  3093  130A  130C               	bcf	12,6	;volatile
  3094  130B  0008               	return
  3095  130C                     __end_of_ADC_Init:	
  3096                           
  3097                           	psect	text15
  3098  0E7B                     __ptext15:	
  3099 ;; *************** function _ISR *****************
  3100 ;; Defined at:
  3101 ;;		line 312 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  byte            1   74[BANK0 ] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;		None               void
  3108 ;; Registers used:
  3109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3115 ;;      Params:         0       0       0       0       0
  3116 ;;      Locals:         0       1       0       0       0
  3117 ;;      Temps:          0       6       0       0       0
  3118 ;;      Totals:         0       7       0       0       0
  3119 ;;Total ram usage:        7 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    4
  3122 ;; This function calls:
  3123 ;;		_Fuzzy
  3124 ;;		_USART_ReceiveChar
  3125 ;;		_USART_WriteString
  3126 ;;		___lwdiv
  3127 ;;		___wmul
  3128 ;;		_enviabuffer
  3129 ;;		i1_PWM_DutyCycle2
  3130 ;;		i1_TIMER0_Set
  3131 ;; This function is called by:
  3132 ;;		Interrupt level 1
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _ISR
  3138  0E7B                     _ISR:	
  3139                           
  3140                           ;main.c: 315: if (PIR1bits.RCIF)
  3141  0E7B  1E8C               	btfss	12,5	;volatile
  3142  0E7C  2F8C               	goto	i1l4119
  3143                           
  3144                           ;main.c: 316: {
  3145                           ;main.c: 318: unsigned char byte = USART_ReceiveChar();
  3146  0E7D  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3147  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  3149  0E84  00E4               	movwf	??_ISR
  3150  0E85  0864               	movf	??_ISR,w
  3151  0E86  00EA               	movwf	ISR@byte
  3152                           
  3153                           ;main.c: 319: if (byte == '#')
  3154  0E87  086A               	movf	ISR@byte,w
  3155  0E88  3A23               	xorlw	35
  3156  0E89  1D03               	skipz
  3157  0E8A  2E93               	goto	i1l4037
  3158                           
  3159                           ;main.c: 320: {
  3160                           ;main.c: 321: indicebuffer = 0;
  3161  0E8B  01EB               	clrf	_indicebuffer
  3162  0E8C  01EC               	clrf	_indicebuffer+1
  3163                           
  3164                           ;main.c: 322: lendo = 'S';
  3165  0E8D  3053               	movlw	83
  3166  0E8E  00E4               	movwf	??_ISR
  3167  0E8F  0864               	movf	??_ISR,w
  3168  0E90  00EE               	movwf	_lendo
  3169                           
  3170                           ;main.c: 323: PORTBbits.RB0 = 1;
  3171  0E91  1406               	bsf	6,0	;volatile
  3172  0E92  2EA1               	goto	i1l4043
  3173  0E93                     i1l4037:	
  3174                           ;main.c: 325: } else if(lendo == 'S' && byte != 'X'){
  3175                           
  3176                           ;main.c: 324: bufferRecebido[indicebuffer] = byte;
  3177                           
  3178  0E93  086E               	movf	_lendo,w
  3179  0E94  3A53               	xorlw	83
  3180  0E95  1D03               	skipz
  3181  0E96  2EA9               	goto	i1l4045
  3182  0E97  086A               	movf	ISR@byte,w
  3183  0E98  3A58               	xorlw	88
  3184  0E99  1903               	skipnz
  3185  0E9A  2EA9               	goto	i1l4045
  3186                           
  3187                           ;main.c: 326: indicebuffer++;
  3188  0E9B  3001               	movlw	1
  3189  0E9C  07EB               	addwf	_indicebuffer,f
  3190  0E9D  1803               	skipnc
  3191  0E9E  0AEC               	incf	_indicebuffer+1,f
  3192  0E9F  3000               	movlw	0
  3193  0EA0  07EC               	addwf	_indicebuffer+1,f
  3194  0EA1                     i1l4043:	
  3195                           
  3196                           ;main.c: 327: bufferRecebido[indicebuffer] = byte;
  3197  0EA1  086A               	movf	ISR@byte,w
  3198  0EA2  00E4               	movwf	??_ISR
  3199  0EA3  086B               	movf	_indicebuffer,w
  3200  0EA4  3E9D               	addlw	_bufferRecebido& (0+255)
  3201  0EA5  0084               	movwf	4
  3202  0EA6  0864               	movf	??_ISR,w
  3203  0EA7  1783               	bsf	3,7	;select IRP bank3
  3204  0EA8  0080               	movwf	0
  3205  0EA9                     i1l4045:	
  3206                           
  3207                           ;main.c: 328: }
  3208                           ;main.c: 330: if (indicebuffer >= 6 && lendo == 'S' && byte != 'X') {
  3209  0EA9  3000               	movlw	0
  3210  0EAA  026C               	subwf	_indicebuffer+1,w
  3211  0EAB  3006               	movlw	6
  3212  0EAC  1903               	skipnz
  3213  0EAD  026B               	subwf	_indicebuffer,w
  3214  0EAE  1C03               	skipc
  3215  0EAF  2EED               	goto	i1l4065
  3216  0EB0  086E               	movf	_lendo,w
  3217  0EB1  3A53               	xorlw	83
  3218  0EB2  1D03               	skipz
  3219  0EB3  2EED               	goto	i1l4065
  3220  0EB4  086A               	movf	ISR@byte,w
  3221  0EB5  3A58               	xorlw	88
  3222  0EB6  1903               	skipnz
  3223  0EB7  2EED               	goto	i1l4065
  3224                           
  3225                           ;main.c: 331: indicebuffer = 0;
  3226  0EB8  01EB               	clrf	_indicebuffer
  3227  0EB9  01EC               	clrf	_indicebuffer+1
  3228                           
  3229                           ;main.c: 333: if (bufferRecebido[0] == '#' && bufferRecebido[1] == '$' && bufferRecebido
      +                          [2] == ':') {
  3230  0EBA  1683               	bsf	3,5	;RP0=1, select bank3
  3231  0EBB  1703               	bsf	3,6	;RP1=1, select bank3
  3232  0EBC  081D               	movf	_bufferRecebido^(0+384),w
  3233  0EBD  3A23               	xorlw	35
  3234  0EBE  1D03               	skipz
  3235  0EBF  2EED               	goto	i1l4065
  3236  0EC0  081E               	movf	(_bufferRecebido^(0+384)+1),w
  3237  0EC1  3A24               	xorlw	36
  3238  0EC2  1D03               	skipz
  3239  0EC3  2EED               	goto	i1l4065
  3240  0EC4  081F               	movf	(_bufferRecebido^(0+384)+2),w
  3241  0EC5  3A3A               	xorlw	58
  3242  0EC6  1D03               	skipz
  3243  0EC7  2EED               	goto	i1l4065
  3244                           
  3245                           ;main.c: 335: antigoUI = 0;
  3246  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  3247  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  3248  0ECA  01CD               	clrf	_antigoUI^(0+128)
  3249  0ECB  01CE               	clrf	(_antigoUI+1)^(0+128)
  3250                           
  3251                           ;main.c: 336: deltaV = 0;
  3252  0ECC  01D3               	clrf	_deltaV^(0+128)
  3253  0ECD  01D4               	clrf	(_deltaV+1)^(0+128)
  3254                           
  3255                           ;main.c: 337: PORTBbits.RB2 = 1;
  3256  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3258  0ED0  1506               	bsf	6,2	;volatile
  3259                           
  3260                           ;main.c: 339: setpointUI = (bufferRecebido[3] << 8) + (bufferRecebido[4]);
  3261  0ED1  1683               	bsf	3,5	;RP0=1, select bank3
  3262  0ED2  1703               	bsf	3,6	;RP1=1, select bank3
  3263  0ED3  0820               	movf	(_bufferRecebido^(0+384)+3),w
  3264  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0ED6  00E4               	movwf	??_ISR
  3267  0ED7  01E5               	clrf	??_ISR+1
  3268  0ED8  0864               	movf	??_ISR,w
  3269  0ED9  00E5               	movwf	??_ISR+1
  3270  0EDA  01E4               	clrf	??_ISR
  3271  0EDB  1683               	bsf	3,5	;RP0=1, select bank3
  3272  0EDC  1703               	bsf	3,6	;RP1=1, select bank3
  3273  0EDD  0821               	movf	(_bufferRecebido^(0+384)+4),w
  3274  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  3276  0EE0  0764               	addwf	??_ISR,w
  3277  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  3278  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  3279  0EE3  00D9               	movwf	_setpointUI^(0+128)
  3280  0EE4  3000               	movlw	0
  3281  0EE5  1803               	skipnc
  3282  0EE6  3001               	movlw	1
  3283  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  3285  0EE9  0765               	addwf	??_ISR+1,w
  3286  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  3288  0EEC  00DA               	movwf	(_setpointUI+1)^(0+128)
  3289  0EED                     i1l4065:	
  3290                           
  3291                           ;main.c: 349: }
  3292                           ;main.c: 350: }
  3293                           ;main.c: 353: if (USART_ReceiveChar() == '0' && lendo == 'N')
  3294  0EED  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3295  0EF2  3A30               	xorlw	48
  3296  0EF3  1D03               	skipz
  3297  0EF4  2F11               	goto	i1l4077
  3298  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0EF7  086E               	movf	_lendo,w
  3301  0EF8  3A4E               	xorlw	78
  3302  0EF9  1D03               	skipz
  3303  0EFA  2F11               	goto	i1l4077
  3304                           
  3305                           ;main.c: 354: {
  3306                           ;main.c: 355: USART_WriteString("\n\rfreio\n\r");
  3307  0EFB  303A               	movlw	(STR_1-__stringbase)& (0+255)
  3308  0EFC  160A  118A  236D  120A  158A  	fcall	_USART_WriteString
  3309                           
  3310                           ;main.c: 357: PWM_DutyCycle2(0);
  3311  0F01  3000               	movlw	0
  3312  0F02  00F0               	movwf	i1PWM_DutyCycle2@valor
  3313  0F03  3000               	movlw	0
  3314  0F04  00F1               	movwf	i1PWM_DutyCycle2@valor+1
  3315  0F05  160A  118A  2352  120A  158A  	fcall	i1_PWM_DutyCycle2
  3316                           
  3317                           ;main.c: 358: cruzeiroSet = 'N';
  3318  0F0A  304E               	movlw	78
  3319  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0F0D  00E4               	movwf	??_ISR
  3322  0F0E  0864               	movf	??_ISR,w
  3323  0F0F  00ED               	movwf	_cruzeiroSet
  3324                           
  3325                           ;main.c: 359: return;
  3326  0F10  2FF5               	goto	i1l201
  3327  0F11                     i1l4077:	
  3328                           
  3329                           ;main.c: 360: }
  3330                           ;main.c: 364: if((USART_ReceiveChar() == 'S' || cruzeiroSet == 'S') && (lendo == 'N'))
  3331  0F11  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3332  0F16  3A53               	xorlw	83
  3333  0F17  1903               	skipnz
  3334  0F18  2F1F               	goto	i1l4081
  3335  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0F1B  086D               	movf	_cruzeiroSet,w
  3338  0F1C  3A53               	xorlw	83
  3339  0F1D  1D03               	skipz
  3340  0F1E  2F25               	goto	i1l4087
  3341  0F1F                     i1l4081:	
  3342  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0F21  086E               	movf	_lendo,w
  3345  0F22  3A4E               	xorlw	78
  3346  0F23  1903               	btfsc	3,2
  3347  0F24  2F58               	goto	i1l4103
  3348  0F25                     i1l4087:	
  3349                           ;main.c: 369: }else if(USART_ReceiveChar() == 'R' && cruzeiroSet == 'S' && lendo == 'N')
  3350                           
  3351                           ;main.c: 368: cruzeiroSet = 'S';
  3352                           
  3353                           ;main.c: 367: cruzeiroVel = setpointUI;
  3354                           
  3355                           ;main.c: 365: {
  3356                           ;main.c: 366: setpointUI = antigoUI;
  3357                           
  3358  0F25  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3359  0F2A  3A52               	xorlw	82
  3360  0F2B  1D03               	skipz
  3361  0F2C  2F46               	goto	i1l4097
  3362  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  3364  0F2F  086D               	movf	_cruzeiroSet,w
  3365  0F30  3A53               	xorlw	83
  3366  0F31  1D03               	skipz
  3367  0F32  2F46               	goto	i1l4097
  3368  0F33  086E               	movf	_lendo,w
  3369  0F34  3A4E               	xorlw	78
  3370  0F35  1D03               	skipz
  3371  0F36  2F46               	goto	i1l4097
  3372                           
  3373                           ;main.c: 370: {
  3374                           ;main.c: 371: setpointUI += 150;
  3375  0F37  3096               	movlw	150
  3376  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  3377  0F39  1303               	bcf	3,6	;RP1=0, select bank1
  3378  0F3A  07D9               	addwf	_setpointUI^(0+128),f
  3379  0F3B  1803               	skipnc
  3380  0F3C  0ADA               	incf	(_setpointUI+1)^(0+128),f
  3381  0F3D  3000               	movlw	0
  3382  0F3E  07DA               	addwf	(_setpointUI+1)^(0+128),f
  3383                           
  3384                           ;main.c: 372: cruzeiroVel = setpointUI;
  3385  0F3F  085A               	movf	(_setpointUI+1)^(0+128),w
  3386  0F40  01D2               	clrf	(_cruzeiroVel+1)^(0+128)
  3387  0F41  07D2               	addwf	(_cruzeiroVel+1)^(0+128),f
  3388  0F42  0859               	movf	_setpointUI^(0+128),w
  3389  0F43  01D1               	clrf	_cruzeiroVel^(0+128)
  3390  0F44  07D1               	addwf	_cruzeiroVel^(0+128),f
  3391                           
  3392                           ;main.c: 373: }else if(USART_ReceiveChar() == 'R' && cruzeiroSet == 'N' && lendo == 'N')
  3393  0F45  2F6C               	goto	i1l4107
  3394  0F46                     i1l4097:	
  3395  0F46  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3396  0F4B  3A52               	xorlw	82
  3397  0F4C  1D03               	skipz
  3398  0F4D  2F6C               	goto	i1l4107
  3399  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3400  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  3401  0F50  086D               	movf	_cruzeiroSet,w
  3402  0F51  3A4E               	xorlw	78
  3403  0F52  1D03               	skipz
  3404  0F53  2F6C               	goto	i1l4107
  3405  0F54  086E               	movf	_lendo,w
  3406  0F55  3A4E               	xorlw	78
  3407  0F56  1D03               	skipz
  3408  0F57  2F6C               	goto	i1l4107
  3409  0F58                     i1l4103:	
  3410                           
  3411                           ;main.c: 374: {
  3412                           ;main.c: 375: setpointUI = antigoUI;
  3413  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3414  0F59  1303               	bcf	3,6	;RP1=0, select bank1
  3415  0F5A  084E               	movf	(_antigoUI+1)^(0+128),w
  3416  0F5B  01DA               	clrf	(_setpointUI+1)^(0+128)
  3417  0F5C  07DA               	addwf	(_setpointUI+1)^(0+128),f
  3418  0F5D  084D               	movf	_antigoUI^(0+128),w
  3419  0F5E  01D9               	clrf	_setpointUI^(0+128)
  3420  0F5F  07D9               	addwf	_setpointUI^(0+128),f
  3421                           
  3422                           ;main.c: 376: cruzeiroVel = setpointUI;
  3423  0F60  085A               	movf	(_setpointUI+1)^(0+128),w
  3424  0F61  01D2               	clrf	(_cruzeiroVel+1)^(0+128)
  3425  0F62  07D2               	addwf	(_cruzeiroVel+1)^(0+128),f
  3426  0F63  0859               	movf	_setpointUI^(0+128),w
  3427  0F64  01D1               	clrf	_cruzeiroVel^(0+128)
  3428  0F65  07D1               	addwf	_cruzeiroVel^(0+128),f
  3429                           
  3430                           ;main.c: 377: cruzeiroSet = 'S';
  3431  0F66  3053               	movlw	83
  3432  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0F69  00E4               	movwf	??_ISR
  3435  0F6A  0864               	movf	??_ISR,w
  3436  0F6B  00ED               	movwf	_cruzeiroSet
  3437  0F6C                     i1l4107:	
  3438                           
  3439                           ;main.c: 378: }
  3440                           ;main.c: 381: if (lendo == 'N')
  3441  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0F6E  086E               	movf	_lendo,w
  3444  0F6F  3A4E               	xorlw	78
  3445  0F70  1D03               	skipz
  3446  0F71  2F7F               	goto	i1l4113
  3447                           
  3448                           ;main.c: 382: {
  3449                           ;main.c: 383: Fuzzy();
  3450  0F72  120A  158A  20A4  120A  158A  	fcall	_Fuzzy
  3451                           
  3452                           ;main.c: 384: antigoUI = setpointUI;
  3453  0F77  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0F78  1303               	bcf	3,6	;RP1=0, select bank1
  3455  0F79  085A               	movf	(_setpointUI+1)^(0+128),w
  3456  0F7A  01CE               	clrf	(_antigoUI+1)^(0+128)
  3457  0F7B  07CE               	addwf	(_antigoUI+1)^(0+128),f
  3458  0F7C  0859               	movf	_setpointUI^(0+128),w
  3459  0F7D  01CD               	clrf	_antigoUI^(0+128)
  3460  0F7E  07CD               	addwf	_antigoUI^(0+128),f
  3461  0F7F                     i1l4113:	
  3462                           
  3463                           ;main.c: 385: }
  3464                           ;main.c: 388: if(lendo == 'N')
  3465  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  3466  0F80  086E               	movf	_lendo,w
  3467  0F81  3A4E               	xorlw	78
  3468  0F82  1D03               	skipz
  3469  0F83  2F89               	goto	i1l4117
  3470                           
  3471                           ;main.c: 389: {
  3472                           ;main.c: 390: enviabuffer();
  3473  0F84  160A  118A  2677  120A  158A  	fcall	_enviabuffer
  3474  0F89                     i1l4117:	
  3475                           
  3476                           ;main.c: 391: }
  3477                           ;main.c: 393: PIR1bits.RCIF = 0;
  3478  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3479  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3480  0F8B  128C               	bcf	12,5	;volatile
  3481  0F8C                     i1l4119:	
  3482                           
  3483                           ;main.c: 394: }
  3484                           ;main.c: 397: if (PIR1bits.ADIF)
  3485  0F8C  1B0C               	btfsc	12,6	;volatile
  3486                           
  3487                           ;main.c: 398: {
  3488                           ;main.c: 402: PIR1bits.ADIF = 0;
  3489  0F8D  130C               	bcf	12,6	;volatile
  3490                           
  3491                           ;main.c: 403: }
  3492                           ;main.c: 407: if (INTCONbits.T0IF)
  3493  0F8E  1D0B               	btfss	11,2	;volatile
  3494  0F8F  2FF1               	goto	i1l4145
  3495                           
  3496                           ;main.c: 408: {
  3497                           ;main.c: 410: TIMER0_Set(238);
  3498  0F90  30EE               	movlw	238
  3499  0F91  160A  118A  22B9  120A  158A  	fcall	i1_TIMER0_Set
  3500                           
  3501                           ;main.c: 413: if (contagens_tm0 < 499)
  3502  0F96  3001               	movlw	1
  3503  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  3504  0F98  1303               	bcf	3,6	;RP1=0, select bank1
  3505  0F99  0250               	subwf	(_contagens_tm0+1)^(0+128),w
  3506  0F9A  30F3               	movlw	243
  3507  0F9B  1903               	skipnz
  3508  0F9C  024F               	subwf	_contagens_tm0^(0+128),w
  3509  0F9D  1803               	skipnc
  3510  0F9E  2FA9               	goto	i1l4131
  3511                           
  3512                           ;main.c: 414: {
  3513                           ;main.c: 416: contagens_tm0++;
  3514  0F9F  3001               	movlw	1
  3515  0FA0  07CF               	addwf	_contagens_tm0^(0+128),f
  3516  0FA1  1803               	skipnc
  3517  0FA2  0AD0               	incf	(_contagens_tm0+1)^(0+128),f
  3518  0FA3  3000               	movlw	0
  3519  0FA4  07D0               	addwf	(_contagens_tm0+1)^(0+128),f
  3520                           
  3521                           ;main.c: 419: PORTBbits.RB6 = 1;
  3522  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0FA7  1706               	bsf	6,6	;volatile
  3525                           
  3526                           ;main.c: 420: }
  3527  0FA8  2FF0               	goto	i1l4143
  3528  0FA9                     i1l4131:	
  3529                           
  3530                           ;main.c: 421: else
  3531                           ;main.c: 422: {
  3532                           ;main.c: 424: contagens_tm0 = 0;
  3533  0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  3534  0FAA  1303               	bcf	3,6	;RP1=0, select bank1
  3535  0FAB  01CF               	clrf	_contagens_tm0^(0+128)
  3536  0FAC  01D0               	clrf	(_contagens_tm0+1)^(0+128)
  3537                           
  3538                           ;main.c: 427: pulsos = (TMR1H << 8) + TMR1L;
  3539  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3540  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3541  0FAF  080F               	movf	15,w	;volatile
  3542  0FB0  1683               	bsf	3,5	;RP0=1, select bank1
  3543  0FB1  1303               	bcf	3,6	;RP1=0, select bank1
  3544  0FB2  01D6               	clrf	(_pulsos+1)^(0+128)
  3545  0FB3  07D6               	addwf	(_pulsos+1)^(0+128),f
  3546  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0FB6  080E               	movf	14,w	;volatile
  3549  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  3550  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  3551  0FB9  01D5               	clrf	_pulsos^(0+128)
  3552  0FBA  07D5               	addwf	_pulsos^(0+128),f
  3553                           
  3554                           ;main.c: 428: rpm = ((pulsos / pas_cooler) * 120);
  3555  0FBB  0860               	movf	(_pas_cooler+1)^(0+128),w
  3556  0FBC  01F1               	clrf	___lwdiv@divisor+1
  3557  0FBD  07F1               	addwf	___lwdiv@divisor+1,f
  3558  0FBE  085F               	movf	_pas_cooler^(0+128),w
  3559  0FBF  01F0               	clrf	___lwdiv@divisor
  3560  0FC0  07F0               	addwf	___lwdiv@divisor,f
  3561  0FC1  0856               	movf	(_pulsos+1)^(0+128),w
  3562  0FC2  01F3               	clrf	___lwdiv@dividend+1
  3563  0FC3  07F3               	addwf	___lwdiv@dividend+1,f
  3564  0FC4  0855               	movf	_pulsos^(0+128),w
  3565  0FC5  01F2               	clrf	___lwdiv@dividend
  3566  0FC6  07F2               	addwf	___lwdiv@dividend,f
  3567  0FC7  160A  118A  24BC  120A  158A  	fcall	___lwdiv
  3568  0FCC  0871               	movf	?___lwdiv+1,w
  3569  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0FCF  01BB               	clrf	___wmul@multiplier+1
  3572  0FD0  07BB               	addwf	___wmul@multiplier+1,f
  3573  0FD1  0870               	movf	?___lwdiv,w
  3574  0FD2  01BA               	clrf	___wmul@multiplier
  3575  0FD3  07BA               	addwf	___wmul@multiplier,f
  3576  0FD4  3078               	movlw	120
  3577  0FD5  00BC               	movwf	___wmul@multiplicand
  3578  0FD6  3000               	movlw	0
  3579  0FD7  00BD               	movwf	___wmul@multiplicand+1
  3580  0FD8  160A  118A  246E  120A  158A  	fcall	___wmul
  3581  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3583  0FDF  083B               	movf	?___wmul+1,w
  3584  0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  3585  0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  3586  0FE2  01D8               	clrf	(_rpm+1)^(0+128)
  3587  0FE3  07D8               	addwf	(_rpm+1)^(0+128),f
  3588  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3589  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3590  0FE6  083A               	movf	?___wmul,w
  3591  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  3592  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  3593  0FE9  01D7               	clrf	_rpm^(0+128)
  3594  0FEA  07D7               	addwf	_rpm^(0+128),f
  3595                           
  3596                           ;main.c: 435: TMR1L = 0x00;
  3597  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  3598  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  3599  0FED  018E               	clrf	14	;volatile
  3600                           
  3601                           ;main.c: 436: TMR1H = 0x00;
  3602  0FEE  018F               	clrf	15	;volatile
  3603                           
  3604                           ;main.c: 439: PORTBbits.RB6 = 0;
  3605  0FEF  1306               	bcf	6,6	;volatile
  3606  0FF0                     i1l4143:	
  3607                           
  3608                           ;main.c: 440: }
  3609                           ;main.c: 443: INTCONbits.T0IF = 0;
  3610  0FF0  110B               	bcf	11,2	;volatile
  3611  0FF1                     i1l4145:	
  3612                           
  3613                           ;main.c: 444: }
  3614                           ;main.c: 447: if (PIR1bits.TMR1IF)
  3615  0FF1  180C               	btfsc	12,0	;volatile
  3616                           
  3617                           ;main.c: 448: {
  3618                           ;main.c: 452: PIR1bits.TMR1IF = 0;
  3619  0FF2  100C               	bcf	12,0	;volatile
  3620                           
  3621                           ;main.c: 453: }
  3622                           ;main.c: 456: if (PIR1bits.SSPIF)
  3623  0FF3  198C               	btfsc	12,3	;volatile
  3624                           
  3625                           ;main.c: 457: {
  3626                           ;main.c: 461: PIR1bits.SSPIF = 0;
  3627  0FF4  118C               	bcf	12,3	;volatile
  3628  0FF5                     i1l201:	
  3629  0FF5  0869               	movf	??_ISR+5,w
  3630  0FF6  00FF               	movwf	127
  3631  0FF7  0868               	movf	??_ISR+4,w
  3632  0FF8  008A               	movwf	10
  3633  0FF9  0867               	movf	??_ISR+3,w
  3634  0FFA  0084               	movwf	4
  3635  0FFB  0E66               	swapf	(??_ISR+2)^0,w
  3636  0FFC  0083               	movwf	3
  3637  0FFD  0EFE               	swapf	126,f
  3638  0FFE  0E7E               	swapf	126,w
  3639  0FFF  0009               	retfie
  3640  1000                     __end_of_ISR:	
  3641                           
  3642                           	psect	intentry
  3643  0004                     __pintentry:	
  3644                           ;incstack = 0
  3645                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3646                           
  3647  0004                     interrupt_function:	
  3648  007E                     saved_w	set	btemp
  3649  0004  00FE               	movwf	btemp
  3650  0005  0E03               	swapf	3,w
  3651  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3653  0008  00E6               	movwf	??_ISR+2
  3654  0009  0804               	movf	4,w
  3655  000A  00E7               	movwf	??_ISR+3
  3656  000B  080A               	movf	10,w
  3657  000C  00E8               	movwf	??_ISR+4
  3658  000D  087F               	movf	btemp+1,w
  3659  000E  00E9               	movwf	??_ISR+5
  3660  000F  120A  158A  2E7B   	ljmp	_ISR
  3661                           
  3662                           	psect	text16
  3663  12B9                     __ptext16:	
  3664 ;; *************** function i1_TIMER0_Set *****************
  3665 ;; Defined at:
  3666 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  contagens       1    wreg     unsigned char 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  contagens       1    0[COMMON] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;		None               void
  3673 ;; Registers used:
  3674 ;;		wreg
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         0       0       0       0       0
  3681 ;;      Locals:         1       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0
  3683 ;;      Totals:         1       0       0       0       0
  3684 ;;Total ram usage:        1 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_ISR
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function i1_TIMER0_Set
  3695  12B9                     i1_TIMER0_Set:	
  3696                           
  3697                           ;incstack = 0
  3698                           ; Regs used in i1_TIMER0_Set: [wreg]
  3699                           ;i1TIMER0_Set@contagens stored from wreg
  3700  12B9  00F0               	movwf	i1TIMER0_Set@contagens
  3701                           
  3702                           ;timers.c: 22: TMR0 = contagens;
  3703  12BA  0870               	movf	i1TIMER0_Set@contagens,w
  3704  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  3705  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  3706  12BD  0081               	movwf	1	;volatile
  3707  12BE  0008               	return
  3708  12BF                     __end_ofi1_TIMER0_Set:	
  3709                           
  3710                           	psect	text17
  3711  1677                     __ptext17:	
  3712 ;; *************** function _enviabuffer *****************
  3713 ;; Defined at:
  3714 ;;		line 122 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  index           1    3[COMMON] unsigned char 
  3719 ;;  checksum        1    2[COMMON] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;		None               void
  3722 ;; Registers used:
  3723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3729 ;;      Params:         0       0       0       0       0
  3730 ;;      Locals:         2       0       0       0       0
  3731 ;;      Temps:          1       0       0       0       0
  3732 ;;      Totals:         3       0       0       0       0
  3733 ;;Total ram usage:        3 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    1
  3736 ;; This function calls:
  3737 ;;		_USART_WriteChar
  3738 ;; This function is called by:
  3739 ;;		_ISR
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _enviabuffer
  3745  1677                     _enviabuffer:	
  3746                           
  3747                           ;main.c: 125: buffer[0] = '#';
  3748                           
  3749                           ;incstack = 0
  3750                           ; Regs used in _enviabuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3751  1677  3023               	movlw	35
  3752  1678  00F1               	movwf	??_enviabuffer
  3753  1679  0871               	movf	??_enviabuffer,w
  3754  167A  1683               	bsf	3,5	;RP0=1, select bank3
  3755  167B  1703               	bsf	3,6	;RP1=1, select bank3
  3756  167C  0090               	movwf	_buffer^(0+384)
  3757                           
  3758                           ;main.c: 126: buffer[1] = '$';
  3759  167D  3024               	movlw	36
  3760  167E  00F1               	movwf	??_enviabuffer
  3761  167F  0871               	movf	??_enviabuffer,w
  3762  1680  0091               	movwf	(_buffer^(0+384)+1)
  3763                           
  3764                           ;main.c: 127: buffer[2] = ':';
  3765  1681  303A               	movlw	58
  3766  1682  00F1               	movwf	??_enviabuffer
  3767  1683  0871               	movf	??_enviabuffer,w
  3768  1684  0092               	movwf	(_buffer^(0+384)+2)
  3769                           
  3770                           ;main.c: 131: buffer[3] = (rpm >> 8) & 0xFF;
  3771  1685  1683               	bsf	3,5	;RP0=1, select bank1
  3772  1686  1303               	bcf	3,6	;RP1=0, select bank1
  3773  1687  0858               	movf	(_rpm+1)^(0+128),w
  3774  1688  00F1               	movwf	??_enviabuffer
  3775  1689  0871               	movf	??_enviabuffer,w
  3776  168A  1683               	bsf	3,5	;RP0=1, select bank3
  3777  168B  1703               	bsf	3,6	;RP1=1, select bank3
  3778  168C  0093               	movwf	(_buffer^(0+384)+3)
  3779                           
  3780                           ;main.c: 132: buffer[4] = rpm & 0xFF;
  3781  168D  1683               	bsf	3,5	;RP0=1, select bank1
  3782  168E  1303               	bcf	3,6	;RP1=0, select bank1
  3783  168F  0857               	movf	_rpm^(0+128),w
  3784  1690  00F1               	movwf	??_enviabuffer
  3785  1691  0871               	movf	??_enviabuffer,w
  3786  1692  1683               	bsf	3,5	;RP0=1, select bank3
  3787  1693  1703               	bsf	3,6	;RP1=1, select bank3
  3788  1694  0094               	movwf	(_buffer^(0+384)+4)
  3789                           
  3790                           ;main.c: 133: buffer[5] = 'V';
  3791  1695  3056               	movlw	86
  3792  1696  00F1               	movwf	??_enviabuffer
  3793  1697  0871               	movf	??_enviabuffer,w
  3794  1698  0095               	movwf	(_buffer^(0+384)+5)
  3795                           
  3796                           ;main.c: 136: buffer[6] = (setpointUI >> 8) & 0xFF;
  3797  1699  1683               	bsf	3,5	;RP0=1, select bank1
  3798  169A  1303               	bcf	3,6	;RP1=0, select bank1
  3799  169B  085A               	movf	(_setpointUI+1)^(0+128),w
  3800  169C  00F1               	movwf	??_enviabuffer
  3801  169D  0871               	movf	??_enviabuffer,w
  3802  169E  1683               	bsf	3,5	;RP0=1, select bank3
  3803  169F  1703               	bsf	3,6	;RP1=1, select bank3
  3804  16A0  0096               	movwf	(_buffer^(0+384)+6)
  3805                           
  3806                           ;main.c: 137: buffer[7] = setpointUI & 0xFF;
  3807  16A1  1683               	bsf	3,5	;RP0=1, select bank1
  3808  16A2  1303               	bcf	3,6	;RP1=0, select bank1
  3809  16A3  0859               	movf	_setpointUI^(0+128),w
  3810  16A4  00F1               	movwf	??_enviabuffer
  3811  16A5  0871               	movf	??_enviabuffer,w
  3812  16A6  1683               	bsf	3,5	;RP0=1, select bank3
  3813  16A7  1703               	bsf	3,6	;RP1=1, select bank3
  3814  16A8  0097               	movwf	(_buffer^(0+384)+7)
  3815                           
  3816                           ;main.c: 138: buffer[8] = 'S';
  3817  16A9  3053               	movlw	83
  3818  16AA  00F1               	movwf	??_enviabuffer
  3819  16AB  0871               	movf	??_enviabuffer,w
  3820  16AC  0098               	movwf	(_buffer^(0+384)+8)
  3821                           
  3822                           ;main.c: 141: buffer[9] = (deltaV >> 8) & 0xFF;
  3823  16AD  1683               	bsf	3,5	;RP0=1, select bank1
  3824  16AE  1303               	bcf	3,6	;RP1=0, select bank1
  3825  16AF  0854               	movf	(_deltaV+1)^(0+128),w
  3826  16B0  00F1               	movwf	??_enviabuffer
  3827  16B1  0871               	movf	??_enviabuffer,w
  3828  16B2  1683               	bsf	3,5	;RP0=1, select bank3
  3829  16B3  1703               	bsf	3,6	;RP1=1, select bank3
  3830  16B4  0099               	movwf	(_buffer^(0+384)+9)
  3831                           
  3832                           ;main.c: 142: buffer[10] = deltaV & 0xFF;
  3833  16B5  1683               	bsf	3,5	;RP0=1, select bank1
  3834  16B6  1303               	bcf	3,6	;RP1=0, select bank1
  3835  16B7  0853               	movf	_deltaV^(0+128),w
  3836  16B8  00F1               	movwf	??_enviabuffer
  3837  16B9  0871               	movf	??_enviabuffer,w
  3838  16BA  1683               	bsf	3,5	;RP0=1, select bank3
  3839  16BB  1703               	bsf	3,6	;RP1=1, select bank3
  3840  16BC  009A               	movwf	(_buffer^(0+384)+10)
  3841                           
  3842                           ;main.c: 143: buffer[11] = 'S';
  3843  16BD  3053               	movlw	83
  3844  16BE  00F1               	movwf	??_enviabuffer
  3845  16BF  0871               	movf	??_enviabuffer,w
  3846  16C0  009B               	movwf	(_buffer^(0+384)+11)
  3847                           
  3848                           ;main.c: 145: unsigned char checksum = 0x00;
  3849  16C1  01F2               	clrf	enviabuffer@checksum
  3850                           
  3851                           ;main.c: 146: for (unsigned char index = 0; index < 12; index++)
  3852  16C2  01F3               	clrf	enviabuffer@index
  3853  16C3  300C               	movlw	12
  3854  16C4  0273               	subwf	enviabuffer@index,w
  3855  16C5  1803               	btfsc	3,0
  3856  16C6  2EE1               	goto	i1l2551
  3857  16C7                     i1l2543:	
  3858                           
  3859                           ;main.c: 147: {
  3860                           ;main.c: 148: USART_WriteChar(buffer[index]);
  3861  16C7  0873               	movf	enviabuffer@index,w
  3862  16C8  3E90               	addlw	_buffer& (0+255)
  3863  16C9  0084               	movwf	4
  3864  16CA  1783               	bsf	3,7	;select IRP bank3
  3865  16CB  0800               	movf	0,w
  3866  16CC  160A  118A  22BF  160A  118A  	fcall	_USART_WriteChar
  3867                           
  3868                           ;main.c: 149: checksum ^= buffer[index];
  3869  16D1  0873               	movf	enviabuffer@index,w
  3870  16D2  3E90               	addlw	_buffer& (0+255)
  3871  16D3  0084               	movwf	4
  3872  16D4  1783               	bsf	3,7	;select IRP bank3
  3873  16D5  0800               	movf	0,w
  3874  16D6  00F1               	movwf	??_enviabuffer
  3875  16D7  0871               	movf	??_enviabuffer,w
  3876  16D8  06F2               	xorwf	enviabuffer@checksum,f
  3877  16D9  3001               	movlw	1
  3878  16DA  00F1               	movwf	??_enviabuffer
  3879  16DB  0871               	movf	??_enviabuffer,w
  3880  16DC  07F3               	addwf	enviabuffer@index,f
  3881  16DD  300C               	movlw	12
  3882  16DE  0273               	subwf	enviabuffer@index,w
  3883  16DF  1C03               	skipc
  3884  16E0  2EC7               	goto	i1l2543
  3885  16E1                     i1l2551:	
  3886                           
  3887                           ;main.c: 150: }
  3888                           ;main.c: 151: buffer[12] = checksum;
  3889  16E1  0872               	movf	enviabuffer@checksum,w
  3890  16E2  00F1               	movwf	??_enviabuffer
  3891  16E3  0871               	movf	??_enviabuffer,w
  3892  16E4  1683               	bsf	3,5	;RP0=1, select bank3
  3893  16E5  1703               	bsf	3,6	;RP1=1, select bank3
  3894  16E6  009C               	movwf	(_buffer^(0+384)+12)
  3895                           
  3896                           ;main.c: 152: USART_WriteChar(buffer[12]);
  3897  16E7  081C               	movf	(_buffer^(0+384)+12),w
  3898  16E8  160A  118A  22BF   	fcall	_USART_WriteChar
  3899  16EB  0008               	return
  3900  16EC                     __end_of_enviabuffer:	
  3901                           
  3902                           	psect	text18
  3903  14BC                     __ptext18:	
  3904 ;; *************** function ___lwdiv *****************
  3905 ;; Defined at:
  3906 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  divisor         2    0[COMMON] unsigned int 
  3909 ;;  dividend        2    2[COMMON] unsigned int 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  quotient        2    5[COMMON] unsigned int 
  3912 ;;  counter         1    7[COMMON] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  2    0[COMMON] unsigned int 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3922 ;;      Params:         4       0       0       0       0
  3923 ;;      Locals:         3       0       0       0       0
  3924 ;;      Temps:          1       0       0       0       0
  3925 ;;      Totals:         8       0       0       0       0
  3926 ;;Total ram usage:        8 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_ISR
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           
  3936                           ;psect for function ___lwdiv
  3937  14BC                     ___lwdiv:	
  3938                           
  3939                           ;incstack = 0
  3940                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3941  14BC  01F5               	clrf	___lwdiv@quotient
  3942  14BD  01F6               	clrf	___lwdiv@quotient+1
  3943  14BE  0871               	movf	___lwdiv@divisor+1,w
  3944  14BF  0470               	iorwf	___lwdiv@divisor,w
  3945  14C0  1903               	skipnz
  3946  14C1  2CF3               	goto	i1l2883
  3947  14C2  01F7               	clrf	___lwdiv@counter
  3948  14C3  0AF7               	incf	___lwdiv@counter,f
  3949  14C4                     i1l2871:	
  3950  14C4  1BF1               	btfsc	___lwdiv@divisor+1,7
  3951  14C5  2CD2               	goto	i1l2873
  3952  14C6  3001               	movlw	1
  3953  14C7                     u340_25:	
  3954  14C7  1003               	clrc
  3955  14C8  0DF0               	rlf	___lwdiv@divisor,f
  3956  14C9  0DF1               	rlf	___lwdiv@divisor+1,f
  3957  14CA  3EFF               	addlw	-1
  3958  14CB  1D03               	skipz
  3959  14CC  2CC7               	goto	u340_25
  3960  14CD  3001               	movlw	1
  3961  14CE  00F4               	movwf	??___lwdiv
  3962  14CF  0874               	movf	??___lwdiv,w
  3963  14D0  07F7               	addwf	___lwdiv@counter,f
  3964  14D1  2CC4               	goto	i1l2871
  3965  14D2                     i1l2873:	
  3966  14D2  3001               	movlw	1
  3967  14D3                     u342_25:	
  3968  14D3  1003               	clrc
  3969  14D4  0DF5               	rlf	___lwdiv@quotient,f
  3970  14D5  0DF6               	rlf	___lwdiv@quotient+1,f
  3971  14D6  3EFF               	addlw	-1
  3972  14D7  1D03               	skipz
  3973  14D8  2CD3               	goto	u342_25
  3974  14D9  0871               	movf	___lwdiv@divisor+1,w
  3975  14DA  0273               	subwf	___lwdiv@dividend+1,w
  3976  14DB  1D03               	skipz
  3977  14DC  2CDF               	goto	u343_25
  3978  14DD  0870               	movf	___lwdiv@divisor,w
  3979  14DE  0272               	subwf	___lwdiv@dividend,w
  3980  14DF                     u343_25:	
  3981  14DF  1C03               	skipc
  3982  14E0  2CE8               	goto	i1l2879
  3983  14E1  0870               	movf	___lwdiv@divisor,w
  3984  14E2  02F2               	subwf	___lwdiv@dividend,f
  3985  14E3  0871               	movf	___lwdiv@divisor+1,w
  3986  14E4  1C03               	skipc
  3987  14E5  03F3               	decf	___lwdiv@dividend+1,f
  3988  14E6  02F3               	subwf	___lwdiv@dividend+1,f
  3989  14E7  1475               	bsf	___lwdiv@quotient,0
  3990  14E8                     i1l2879:	
  3991  14E8  3001               	movlw	1
  3992  14E9                     u344_25:	
  3993  14E9  1003               	clrc
  3994  14EA  0CF1               	rrf	___lwdiv@divisor+1,f
  3995  14EB  0CF0               	rrf	___lwdiv@divisor,f
  3996  14EC  3EFF               	addlw	-1
  3997  14ED  1D03               	skipz
  3998  14EE  2CE9               	goto	u344_25
  3999  14EF  3001               	movlw	1
  4000  14F0  02F7               	subwf	___lwdiv@counter,f
  4001  14F1  1D03               	btfss	3,2
  4002  14F2  2CD2               	goto	i1l2873
  4003  14F3                     i1l2883:	
  4004  14F3  0876               	movf	___lwdiv@quotient+1,w
  4005  14F4  01F1               	clrf	?___lwdiv+1
  4006  14F5  07F1               	addwf	?___lwdiv+1,f
  4007  14F6  0875               	movf	___lwdiv@quotient,w
  4008  14F7  01F0               	clrf	?___lwdiv
  4009  14F8  07F0               	addwf	?___lwdiv,f
  4010  14F9  0008               	return
  4011  14FA                     __end_of___lwdiv:	
  4012                           
  4013                           	psect	text19
  4014  133A                     __ptext19:	
  4015 ;; *************** function _USART_ReceiveChar *****************
  4016 ;; Defined at:
  4017 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  byte            1    4[COMMON] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      unsigned char 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4031 ;;      Params:         0       0       0       0       0
  4032 ;;      Locals:         1       0       0       0       0
  4033 ;;      Temps:          1       0       0       0       0
  4034 ;;      Totals:         2       0       0       0       0
  4035 ;;Total ram usage:        2 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    2
  4038 ;; This function calls:
  4039 ;;		_USART_WriteString
  4040 ;; This function is called by:
  4041 ;;		_ISR
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function _USART_ReceiveChar
  4047  133A                     _USART_ReceiveChar:	
  4048                           
  4049                           ;usart.c: 65: unsigned char byte;
  4050                           ;usart.c: 67: if (!OERR)
  4051                           
  4052                           ;incstack = 0
  4053                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4054  133A  1283               	bcf	3,5	;RP0=0, select bank0
  4055  133B  1303               	bcf	3,6	;RP1=0, select bank0
  4056  133C  1898               	btfsc	24,1	;volatile
  4057  133D  2B43               	goto	i1l2713
  4058                           
  4059                           ;usart.c: 68: {
  4060                           ;usart.c: 69: byte = RCREG;
  4061  133E  081A               	movf	26,w	;volatile
  4062  133F  00F3               	movwf	??_USART_ReceiveChar
  4063  1340  0873               	movf	??_USART_ReceiveChar,w
  4064  1341  00F4               	movwf	USART_ReceiveChar@byte
  4065  1342  2B4F               	goto	i1l2721
  4066  1343                     i1l2713:	
  4067                           ;usart.c: 71: }
  4068                           
  4069                           ;usart.c: 70: PIR1bits.RCIF = 0;
  4070                           
  4071                           
  4072                           ;usart.c: 72: else
  4073                           ;usart.c: 73: {
  4074                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  4075  1343  3001               	movlw	(STR_4-__stringbase)& (0+255)
  4076  1344  160A  118A  236D   	fcall	_USART_WriteString
  4077                           
  4078                           ;usart.c: 76: RCSTAbits.CREN = 0;
  4079  1347  1283               	bcf	3,5	;RP0=0, select bank0
  4080  1348  1303               	bcf	3,6	;RP1=0, select bank0
  4081  1349  1218               	bcf	24,4	;volatile
  4082                           
  4083                           ;usart.c: 77: byte = RCREG;
  4084  134A  081A               	movf	26,w	;volatile
  4085  134B  00F3               	movwf	??_USART_ReceiveChar
  4086  134C  0873               	movf	??_USART_ReceiveChar,w
  4087  134D  00F4               	movwf	USART_ReceiveChar@byte
  4088                           
  4089                           ;usart.c: 78: RCSTAbits.CREN = 1;
  4090  134E  1618               	bsf	24,4	;volatile
  4091  134F                     i1l2721:	
  4092                           
  4093                           ;usart.c: 79: PIR1bits.RCIF = 0;
  4094  134F  128C               	bcf	12,5	;volatile
  4095                           
  4096                           ;usart.c: 80: }
  4097                           ;usart.c: 82: return(byte);
  4098  1350  0874               	movf	USART_ReceiveChar@byte,w
  4099  1351  0008               	return
  4100  1352                     __end_of_USART_ReceiveChar:	
  4101                           
  4102                           	psect	text20
  4103  136D                     __ptext20:	
  4104 ;; *************** function _USART_WriteString *****************
  4105 ;; Defined at:
  4106 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  str             1    wreg     PTR const unsigned char 
  4109 ;;		 -> STR_4(40), STR_1(10), 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  str             1    2[COMMON] PTR const unsigned char 
  4112 ;;		 -> STR_4(40), STR_1(10), 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;		None               void
  4115 ;; Registers used:
  4116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4122 ;;      Params:         0       0       0       0       0
  4123 ;;      Locals:         1       0       0       0       0
  4124 ;;      Temps:          1       0       0       0       0
  4125 ;;      Totals:         2       0       0       0       0
  4126 ;;Total ram usage:        2 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    1
  4129 ;; This function calls:
  4130 ;;		_USART_WriteChar
  4131 ;; This function is called by:
  4132 ;;		_ISR
  4133 ;;		_USART_ReceiveChar
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           
  4138                           ;psect for function _USART_WriteString
  4139  136D                     _USART_WriteString:	
  4140                           
  4141                           ;incstack = 0
  4142                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4143                           ;USART_WriteString@str stored from wreg
  4144  136D  00F2               	movwf	USART_WriteString@str
  4145  136E                     i1l2339:	
  4146                           ;usart.c: 54: while(*str != '\0')
  4147                           
  4148  136E  0872               	movf	USART_WriteString@str,w
  4149  136F  0084               	movwf	4
  4150  1370  160A  118A  2000  160A  118A  	fcall	stringdir
  4151  1375  3800               	iorlw	0
  4152  1376  1903               	btfsc	3,2
  4153  1377  0008               	return
  4154                           
  4155                           ;usart.c: 55: {
  4156                           ;usart.c: 56: USART_WriteChar(*str);
  4157  1378  0872               	movf	USART_WriteString@str,w
  4158  1379  0084               	movwf	4
  4159  137A  160A  118A  2000  160A  118A  	fcall	stringdir
  4160  137F  160A  118A  22BF  160A  118A  	fcall	_USART_WriteChar
  4161                           
  4162                           ;usart.c: 57: str++;
  4163  1384  3001               	movlw	1
  4164  1385  00F1               	movwf	??_USART_WriteString
  4165  1386  0871               	movf	??_USART_WriteString,w
  4166  1387  07F2               	addwf	USART_WriteString@str,f
  4167  1388  2B6E               	goto	i1l2339
  4168  1389                     __end_of_USART_WriteString:	
  4169                           
  4170                           	psect	text21
  4171  12BF                     __ptext21:	
  4172 ;; *************** function _USART_WriteChar *****************
  4173 ;; Defined at:
  4174 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  byte            1    wreg     unsigned char 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  byte            1    0[COMMON] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;		None               void
  4181 ;; Registers used:
  4182 ;;		wreg
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         0       0       0       0       0
  4189 ;;      Locals:         1       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0
  4191 ;;      Totals:         1       0       0       0       0
  4192 ;;Total ram usage:        1 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_enviabuffer
  4198 ;;		_USART_WriteString
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           
  4203                           ;psect for function _USART_WriteChar
  4204  12BF                     _USART_WriteChar:	
  4205                           
  4206                           ;incstack = 0
  4207                           ; Regs used in _USART_WriteChar: [wreg]
  4208                           ;USART_WriteChar@byte stored from wreg
  4209  12BF  00F0               	movwf	USART_WriteChar@byte
  4210  12C0                     i1l244:	
  4211                           ;usart.c: 46: while(!PIR1bits.TXIF);
  4212                           
  4213  12C0  1283               	bcf	3,5	;RP0=0, select bank0
  4214  12C1  1303               	bcf	3,6	;RP1=0, select bank0
  4215  12C2  1E0C               	btfss	12,4	;volatile
  4216  12C3  2AC0               	goto	i1l244
  4217                           
  4218                           ;usart.c: 47: TXREG = byte;
  4219  12C4  0870               	movf	USART_WriteChar@byte,w
  4220  12C5  0099               	movwf	25	;volatile
  4221  12C6  0008               	return
  4222  12C7                     __end_of_USART_WriteChar:	
  4223                           
  4224                           	psect	text22
  4225  08A4                     __ptext22:	
  4226 ;; *************** function _Fuzzy *****************
  4227 ;; Defined at:
  4228 ;;		line 177 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  a               2   16[BANK1 ] int 
  4233 ;;  a               2   14[BANK1 ] int 
  4234 ;;  a               2   12[BANK1 ] int 
  4235 ;;  a               2   10[BANK1 ] int 
  4236 ;;  a               2   26[BANK1 ] int 
  4237 ;;  x               3   31[BANK1 ] float 
  4238 ;;  rule            3   28[BANK1 ] float 
  4239 ;;  total_area      3   23[BANK1 ] float 
  4240 ;;  soma            3   20[BANK1 ] float 
  4241 ;;  reajuste        3    5[BANK1 ] float 
  4242 ;;  delta           2   18[BANK1 ] int 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;		None               void
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4252 ;;      Params:         0       0       0       0       0
  4253 ;;      Locals:         0       0      34       0       0
  4254 ;;      Temps:          0       2       0       0       0
  4255 ;;      Totals:         0       2      34       0       0
  4256 ;;Total ram usage:       36 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    3
  4259 ;; This function calls:
  4260 ;;		___awtoft
  4261 ;;		___ftadd
  4262 ;;		___ftdiv
  4263 ;;		___ftge
  4264 ;;		___ftmul
  4265 ;;		___ftneg
  4266 ;;		___fttol
  4267 ;;		___lwtoft
  4268 ;;		___wmul
  4269 ;;		_abs
  4270 ;;		_maximo
  4271 ;;		_minimo
  4272 ;;		_trapmf
  4273 ;;		i1_PWM_DutyCycle2
  4274 ;; This function is called by:
  4275 ;;		_ISR
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function _Fuzzy
  4281  08A4                     _Fuzzy:	
  4282                           
  4283                           ;main.c: 187: deltaV = minimo(abs(setpointUI - rpm), 2000);
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4287  08A4  3000               	movlw	0
  4288  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  4289  08A6  1303               	bcf	3,6	;RP1=0, select bank0
  4290  08A7  00A3               	movwf	minimo@b
  4291  08A8  30FA               	movlw	250
  4292  08A9  00A4               	movwf	minimo@b+1
  4293  08AA  3044               	movlw	68
  4294  08AB  00A5               	movwf	minimo@b+2
  4295  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  4296  08AD  1303               	bcf	3,6	;RP1=0, select bank1
  4297  08AE  0957               	comf	_rpm^(0+128),w
  4298  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  4299  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  4300  08B1  00E2               	movwf	??_Fuzzy
  4301  08B2  1683               	bsf	3,5	;RP0=1, select bank1
  4302  08B3  1303               	bcf	3,6	;RP1=0, select bank1
  4303  08B4  0958               	comf	(_rpm+1)^(0+128),w
  4304  08B5  1283               	bcf	3,5	;RP0=0, select bank0
  4305  08B6  1303               	bcf	3,6	;RP1=0, select bank0
  4306  08B7  00E3               	movwf	??_Fuzzy+1
  4307  08B8  0AE2               	incf	??_Fuzzy,f
  4308  08B9  1903               	skipnz
  4309  08BA  0AE3               	incf	??_Fuzzy+1,f
  4310  08BB  1683               	bsf	3,5	;RP0=1, select bank1
  4311  08BC  1303               	bcf	3,6	;RP1=0, select bank1
  4312  08BD  0859               	movf	_setpointUI^(0+128),w
  4313  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  4314  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  4315  08C0  0762               	addwf	??_Fuzzy,w
  4316  08C1  00F0               	movwf	abs@a
  4317  08C2  1683               	bsf	3,5	;RP0=1, select bank1
  4318  08C3  1303               	bcf	3,6	;RP1=0, select bank1
  4319  08C4  085A               	movf	(_setpointUI+1)^(0+128),w
  4320  08C5  1803               	skipnc
  4321  08C6  0A5A               	incf	(_setpointUI+1)^(0+128),w
  4322  08C7  1283               	bcf	3,5	;RP0=0, select bank0
  4323  08C8  1303               	bcf	3,6	;RP1=0, select bank0
  4324  08C9  0763               	addwf	??_Fuzzy+1,w
  4325  08CA  00F1               	movwf	abs@a+1
  4326  08CB  160A  118A  22EC  120A  158A  	fcall	_abs
  4327  08D0  0871               	movf	?_abs+1,w
  4328  08D1  01F9               	clrf	___awtoft@c+1
  4329  08D2  07F9               	addwf	___awtoft@c+1,f
  4330  08D3  0870               	movf	?_abs,w
  4331  08D4  01F8               	clrf	___awtoft@c
  4332  08D5  07F8               	addwf	___awtoft@c,f
  4333  08D6  160A  118A  23E7  120A  158A  	fcall	___awtoft
  4334  08DB  0878               	movf	?___awtoft,w
  4335  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  4336  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  4337  08DE  00A0               	movwf	minimo@a
  4338  08DF  0879               	movf	?___awtoft+1,w
  4339  08E0  00A1               	movwf	minimo@a+1
  4340  08E1  087A               	movf	?___awtoft+2,w
  4341  08E2  00A2               	movwf	minimo@a+2
  4342  08E3  120A  118A  27E2  120A  158A  	fcall	_minimo
  4343  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  4344  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  4345  08EA  0820               	movf	?_minimo,w
  4346  08EB  00AC               	movwf	___fttol@f1
  4347  08EC  0821               	movf	?_minimo+1,w
  4348  08ED  00AD               	movwf	___fttol@f1+1
  4349  08EE  0822               	movf	?_minimo+2,w
  4350  08EF  00AE               	movwf	___fttol@f1+2
  4351  08F0  160A  118A  2772  120A  158A  	fcall	___fttol
  4352  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  4353  08F6  1303               	bcf	3,6	;RP1=0, select bank0
  4354  08F7  082D               	movf	?___fttol+1,w
  4355  08F8  1683               	bsf	3,5	;RP0=1, select bank1
  4356  08F9  1303               	bcf	3,6	;RP1=0, select bank1
  4357  08FA  01D4               	clrf	(_deltaV+1)^(0+128)
  4358  08FB  07D4               	addwf	(_deltaV+1)^(0+128),f
  4359  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  4360  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  4361  08FE  082C               	movf	?___fttol,w
  4362  08FF  1683               	bsf	3,5	;RP0=1, select bank1
  4363  0900  1303               	bcf	3,6	;RP1=0, select bank1
  4364  0901  01D3               	clrf	_deltaV^(0+128)
  4365  0902  07D3               	addwf	_deltaV^(0+128),f
  4366                           
  4367                           ;main.c: 188: int delta = maximo(minimo(abs(deltaV - antigoUI), 1000), 1);
  4368  0903  3000               	movlw	0
  4369  0904  1283               	bcf	3,5	;RP0=0, select bank0
  4370  0905  1303               	bcf	3,6	;RP1=0, select bank0
  4371  0906  00A9               	movwf	maximo@b
  4372  0907  3080               	movlw	128
  4373  0908  00AA               	movwf	maximo@b+1
  4374  0909  303F               	movlw	63
  4375  090A  00AB               	movwf	maximo@b+2
  4376  090B  3000               	movlw	0
  4377  090C  00A3               	movwf	minimo@b
  4378  090D  307A               	movlw	122
  4379  090E  00A4               	movwf	minimo@b+1
  4380  090F  3044               	movlw	68
  4381  0910  00A5               	movwf	minimo@b+2
  4382  0911  1683               	bsf	3,5	;RP0=1, select bank1
  4383  0912  1303               	bcf	3,6	;RP1=0, select bank1
  4384  0913  094D               	comf	_antigoUI^(0+128),w
  4385  0914  1283               	bcf	3,5	;RP0=0, select bank0
  4386  0915  1303               	bcf	3,6	;RP1=0, select bank0
  4387  0916  00E2               	movwf	??_Fuzzy
  4388  0917  1683               	bsf	3,5	;RP0=1, select bank1
  4389  0918  1303               	bcf	3,6	;RP1=0, select bank1
  4390  0919  094E               	comf	(_antigoUI+1)^(0+128),w
  4391  091A  1283               	bcf	3,5	;RP0=0, select bank0
  4392  091B  1303               	bcf	3,6	;RP1=0, select bank0
  4393  091C  00E3               	movwf	??_Fuzzy+1
  4394  091D  0AE2               	incf	??_Fuzzy,f
  4395  091E  1903               	skipnz
  4396  091F  0AE3               	incf	??_Fuzzy+1,f
  4397  0920  1683               	bsf	3,5	;RP0=1, select bank1
  4398  0921  1303               	bcf	3,6	;RP1=0, select bank1
  4399  0922  0853               	movf	_deltaV^(0+128),w
  4400  0923  1283               	bcf	3,5	;RP0=0, select bank0
  4401  0924  1303               	bcf	3,6	;RP1=0, select bank0
  4402  0925  0762               	addwf	??_Fuzzy,w
  4403  0926  00F0               	movwf	abs@a
  4404  0927  1683               	bsf	3,5	;RP0=1, select bank1
  4405  0928  1303               	bcf	3,6	;RP1=0, select bank1
  4406  0929  0854               	movf	(_deltaV+1)^(0+128),w
  4407  092A  1803               	skipnc
  4408  092B  0A54               	incf	(_deltaV+1)^(0+128),w
  4409  092C  1283               	bcf	3,5	;RP0=0, select bank0
  4410  092D  1303               	bcf	3,6	;RP1=0, select bank0
  4411  092E  0763               	addwf	??_Fuzzy+1,w
  4412  092F  00F1               	movwf	abs@a+1
  4413  0930  160A  118A  22EC   	fcall	_abs
  4414  0933  0871               	movf	?_abs+1,w
  4415  0934  160A  118A  2EEC   	ljmp	L11
  4416                           
  4417                           	psect	text23
  4418  1352                     __ptext23:	
  4419 ;; *************** function i1_PWM_DutyCycle2 *****************
  4420 ;; Defined at:
  4421 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  valor           2    0[COMMON] int 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;		None               void
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4435 ;;      Params:         2       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0
  4437 ;;      Temps:          2       0       0       0       0
  4438 ;;      Totals:         4       0       0       0       0
  4439 ;;Total ram usage:        4 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_Fuzzy
  4445 ;;		_ISR
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           
  4450                           ;psect for function i1_PWM_DutyCycle2
  4451  1352                     i1_PWM_DutyCycle2:	
  4452                           
  4453                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  4457  1352  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  4458  1353  00F3               	movwf	??i1_PWM_DutyCycle2+1
  4459  1354  0870               	movf	i1PWM_DutyCycle2@valor,w
  4460  1355  00F2               	movwf	??i1_PWM_DutyCycle2
  4461  1356  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4462  1357  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4463  1358  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4464  1359  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4465  135A  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4466  135B  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4467  135C  0872               	movf	??i1_PWM_DutyCycle2,w
  4468  135D  1283               	bcf	3,5	;RP0=0, select bank0
  4469  135E  1303               	bcf	3,6	;RP1=0, select bank0
  4470  135F  009B               	movwf	27	;volatile
  4471                           
  4472                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4473  1360  0870               	movf	i1PWM_DutyCycle2@valor,w
  4474  1361  00F2               	movwf	??i1_PWM_DutyCycle2
  4475  1362  3003               	movlw	3
  4476  1363                     u298_25:	
  4477  1363  1003               	clrc
  4478  1364  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  4479  1365  3EFF               	addlw	-1
  4480  1366  1D03               	skipz
  4481  1367  2B63               	goto	u298_25
  4482  1368  1003               	clrc
  4483  1369  0D72               	rlf	??i1_PWM_DutyCycle2,w
  4484  136A  380C               	iorlw	12
  4485  136B  009D               	movwf	29	;volatile
  4486  136C  0008               	return
  4487  136D                     __end_ofi1_PWM_DutyCycle2:	
  4488                           
  4489                           	psect	text24
  4490  0D25                     __ptext24:	
  4491 ;; *************** function _trapmf *****************
  4492 ;; Defined at:
  4493 ;;		line 88 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  x               3   32[BANK0 ] float 
  4496 ;;  a               3   35[BANK0 ] float 
  4497 ;;  b               3   38[BANK0 ] float 
  4498 ;;  c               3   41[BANK0 ] float 
  4499 ;;  d               3   44[BANK0 ] float 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  ua              3   47[BANK0 ] float 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  3   32[BANK0 ] float 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2, status,0, pclath, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4511 ;;      Params:         0      15       0       0       0
  4512 ;;      Locals:         0       3       0       0       0
  4513 ;;      Temps:          0       0       0       0       0
  4514 ;;      Totals:         0      18       0       0       0
  4515 ;;Total ram usage:       18 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    2
  4518 ;; This function calls:
  4519 ;;		___ftadd
  4520 ;;		___ftdiv
  4521 ;;		___ftge
  4522 ;;		___ftneg
  4523 ;; This function is called by:
  4524 ;;		_Fuzzy
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           
  4529                           ;psect for function _trapmf
  4530  0D25                     _trapmf:	
  4531                           
  4532                           ;main.c: 90: float ua = 0;
  4533                           
  4534                           ;incstack = 0
  4535                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  4536  0D25  3000               	movlw	0
  4537  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  4538  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  4539  0D28  00CF               	movwf	trapmf@ua
  4540  0D29  3000               	movlw	0
  4541  0D2A  00D0               	movwf	trapmf@ua+1
  4542  0D2B  3000               	movlw	0
  4543  0D2C  00D1               	movwf	trapmf@ua+2
  4544                           
  4545                           ;main.c: 92: if (x <= a)
  4546  0D2D  0843               	movf	trapmf@a,w
  4547  0D2E  00F0               	movwf	___ftge@ff1
  4548  0D2F  0844               	movf	trapmf@a+1,w
  4549  0D30  00F1               	movwf	___ftge@ff1+1
  4550  0D31  0845               	movf	trapmf@a+2,w
  4551  0D32  00F2               	movwf	___ftge@ff1+2
  4552  0D33  0840               	movf	trapmf@x,w
  4553  0D34  00F3               	movwf	___ftge@ff2
  4554  0D35  0841               	movf	trapmf@x+1,w
  4555  0D36  00F4               	movwf	___ftge@ff2+1
  4556  0D37  0842               	movf	trapmf@x+2,w
  4557  0D38  00F5               	movwf	___ftge@ff2+2
  4558  0D39  160A  118A  2545  120A  158A  	fcall	___ftge
  4559  0D3E  1803               	btfsc	3,0
  4560  0D3F  2E6A               	goto	L7
  4561                           
  4562                           ;main.c: 94: else if ((a < x) && (x <= b))
  4563                           
  4564                           ;main.c: 93: ua = 0;
  4565  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0D42  0843               	movf	trapmf@a,w
  4568  0D43  00F0               	movwf	___ftge@ff1
  4569  0D44  0844               	movf	trapmf@a+1,w
  4570  0D45  00F1               	movwf	___ftge@ff1+1
  4571  0D46  0845               	movf	trapmf@a+2,w
  4572  0D47  00F2               	movwf	___ftge@ff1+2
  4573  0D48  0840               	movf	trapmf@x,w
  4574  0D49  00F3               	movwf	___ftge@ff2
  4575  0D4A  0841               	movf	trapmf@x+1,w
  4576  0D4B  00F4               	movwf	___ftge@ff2+1
  4577  0D4C  0842               	movf	trapmf@x+2,w
  4578  0D4D  00F5               	movwf	___ftge@ff2+2
  4579  0D4E  160A  118A  2545  120A  158A  	fcall	___ftge
  4580  0D53  1803               	btfsc	3,0
  4581  0D54  2D9E               	goto	i1l3833
  4582  0D55  1283               	bcf	3,5	;RP0=0, select bank0
  4583  0D56  1303               	bcf	3,6	;RP1=0, select bank0
  4584  0D57  0846               	movf	trapmf@b,w
  4585  0D58  00F0               	movwf	___ftge@ff1
  4586  0D59  0847               	movf	trapmf@b+1,w
  4587  0D5A  00F1               	movwf	___ftge@ff1+1
  4588  0D5B  0848               	movf	trapmf@b+2,w
  4589  0D5C  00F2               	movwf	___ftge@ff1+2
  4590  0D5D  0840               	movf	trapmf@x,w
  4591  0D5E  00F3               	movwf	___ftge@ff2
  4592  0D5F  0841               	movf	trapmf@x+1,w
  4593  0D60  00F4               	movwf	___ftge@ff2+1
  4594  0D61  0842               	movf	trapmf@x+2,w
  4595  0D62  00F5               	movwf	___ftge@ff2+2
  4596  0D63  160A  118A  2545  120A  158A  	fcall	___ftge
  4597  0D68  1C03               	btfss	3,0
  4598  0D69  2D9E               	goto	i1l3833
  4599                           
  4600                           ;main.c: 95: ua = ((x - a) / (b - a));
  4601  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  4602  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  4603  0D6C  0846               	movf	trapmf@b,w
  4604  0D6D  00A3               	movwf	___ftadd@f1
  4605  0D6E  0847               	movf	trapmf@b+1,w
  4606  0D6F  00A4               	movwf	___ftadd@f1+1
  4607  0D70  0848               	movf	trapmf@b+2,w
  4608  0D71  00A5               	movwf	___ftadd@f1+2
  4609  0D72  0843               	movf	trapmf@a,w
  4610  0D73  00A0               	movwf	___ftneg@f1
  4611  0D74  0844               	movf	trapmf@a+1,w
  4612  0D75  00A1               	movwf	___ftneg@f1+1
  4613  0D76  0845               	movf	trapmf@a+2,w
  4614  0D77  00A2               	movwf	___ftneg@f1+2
  4615  0D78  160A  118A  22D7  120A  158A  	fcall	___ftneg
  4616  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  4617  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  4618  0D7F  0820               	movf	?___ftneg,w
  4619  0D80  00A6               	movwf	___ftadd@f2
  4620  0D81  0821               	movf	?___ftneg+1,w
  4621  0D82  00A7               	movwf	___ftadd@f2+1
  4622  0D83  0822               	movf	?___ftneg+2,w
  4623  0D84  00A8               	movwf	___ftadd@f2+2
  4624  0D85  120A  158A  241C  120A  158A  	fcall	___ftadd
  4625  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  4626  0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  4627  0D8C  0823               	movf	?___ftadd,w
  4628  0D8D  00B0               	movwf	___ftdiv@f2
  4629  0D8E  0824               	movf	?___ftadd+1,w
  4630  0D8F  00B1               	movwf	___ftdiv@f2+1
  4631  0D90  0825               	movf	?___ftadd+2,w
  4632  0D91  00B2               	movwf	___ftdiv@f2+2
  4633  0D92  0840               	movf	trapmf@x,w
  4634  0D93  00A3               	movwf	___ftadd@f1
  4635  0D94  0841               	movf	trapmf@x+1,w
  4636  0D95  00A4               	movwf	___ftadd@f1+1
  4637  0D96  0842               	movf	trapmf@x+2,w
  4638  0D97  00A5               	movwf	___ftadd@f1+2
  4639  0D98  0843               	movf	trapmf@a,w
  4640  0D99  00A0               	movwf	___ftneg@f1
  4641  0D9A  0844               	movf	trapmf@a+1,w
  4642  0D9B  00A1               	movwf	___ftneg@f1+1
  4643  0D9C  0845               	movf	trapmf@a+2,w
  4644  0D9D  2E2D               	goto	L9
  4645  0D9E                     i1l3833:	
  4646                           
  4647                           ;main.c: 96: else if ((b <= x) && (x <= c))
  4648  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  4649  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  4650  0DA0  0840               	movf	trapmf@x,w
  4651  0DA1  00F0               	movwf	___ftge@ff1
  4652  0DA2  0841               	movf	trapmf@x+1,w
  4653  0DA3  00F1               	movwf	___ftge@ff1+1
  4654  0DA4  0842               	movf	trapmf@x+2,w
  4655  0DA5  00F2               	movwf	___ftge@ff1+2
  4656  0DA6  0846               	movf	trapmf@b,w
  4657  0DA7  00F3               	movwf	___ftge@ff2
  4658  0DA8  0847               	movf	trapmf@b+1,w
  4659  0DA9  00F4               	movwf	___ftge@ff2+1
  4660  0DAA  0848               	movf	trapmf@b+2,w
  4661  0DAB  00F5               	movwf	___ftge@ff2+2
  4662  0DAC  160A  118A  2545  120A  158A  	fcall	___ftge
  4663  0DB1  1C03               	btfss	3,0
  4664  0DB2  2DD0               	goto	i1l3839
  4665  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0DB5  0849               	movf	trapmf@c,w
  4668  0DB6  00F0               	movwf	___ftge@ff1
  4669  0DB7  084A               	movf	trapmf@c+1,w
  4670  0DB8  00F1               	movwf	___ftge@ff1+1
  4671  0DB9  084B               	movf	trapmf@c+2,w
  4672  0DBA  00F2               	movwf	___ftge@ff1+2
  4673  0DBB  0840               	movf	trapmf@x,w
  4674  0DBC  00F3               	movwf	___ftge@ff2
  4675  0DBD  0841               	movf	trapmf@x+1,w
  4676  0DBE  00F4               	movwf	___ftge@ff2+1
  4677  0DBF  0842               	movf	trapmf@x+2,w
  4678  0DC0  00F5               	movwf	___ftge@ff2+2
  4679  0DC1  160A  118A  2545  120A  158A  	fcall	___ftge
  4680  0DC6  1C03               	btfss	3,0
  4681  0DC7  2DD0               	goto	i1l3839
  4682                           
  4683                           ;main.c: 97: ua = 1;
  4684  0DC8  3000               	movlw	0
  4685  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  4686  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  4687  0DCB  00CF               	movwf	trapmf@ua
  4688  0DCC  3080               	movlw	128
  4689  0DCD  00D0               	movwf	trapmf@ua+1
  4690  0DCE  303F               	movlw	63
  4691  0DCF  2E71               	goto	L6
  4692  0DD0                     i1l3839:	
  4693                           
  4694                           ;main.c: 98: else if ((c < x) && (x <= d))
  4695  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  4696  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  4697  0DD2  0849               	movf	trapmf@c,w
  4698  0DD3  00F0               	movwf	___ftge@ff1
  4699  0DD4  084A               	movf	trapmf@c+1,w
  4700  0DD5  00F1               	movwf	___ftge@ff1+1
  4701  0DD6  084B               	movf	trapmf@c+2,w
  4702  0DD7  00F2               	movwf	___ftge@ff1+2
  4703  0DD8  0840               	movf	trapmf@x,w
  4704  0DD9  00F3               	movwf	___ftge@ff2
  4705  0DDA  0841               	movf	trapmf@x+1,w
  4706  0DDB  00F4               	movwf	___ftge@ff2+1
  4707  0DDC  0842               	movf	trapmf@x+2,w
  4708  0DDD  00F5               	movwf	___ftge@ff2+2
  4709  0DDE  160A  118A  2545  120A  158A  	fcall	___ftge
  4710  0DE3  1803               	btfsc	3,0
  4711  0DE4  2E55               	goto	i1l3845
  4712  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  4713  0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  4714  0DE7  084C               	movf	trapmf@d,w
  4715  0DE8  00F0               	movwf	___ftge@ff1
  4716  0DE9  084D               	movf	trapmf@d+1,w
  4717  0DEA  00F1               	movwf	___ftge@ff1+1
  4718  0DEB  084E               	movf	trapmf@d+2,w
  4719  0DEC  00F2               	movwf	___ftge@ff1+2
  4720  0DED  0840               	movf	trapmf@x,w
  4721  0DEE  00F3               	movwf	___ftge@ff2
  4722  0DEF  0841               	movf	trapmf@x+1,w
  4723  0DF0  00F4               	movwf	___ftge@ff2+1
  4724  0DF1  0842               	movf	trapmf@x+2,w
  4725  0DF2  00F5               	movwf	___ftge@ff2+2
  4726  0DF3  160A  118A  2545  120A  158A  	fcall	___ftge
  4727  0DF8  1C03               	btfss	3,0
  4728  0DF9  2E55               	goto	i1l3845
  4729                           
  4730                           ;main.c: 99: ua = ((d - x) / (d - c));
  4731  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  4732  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  4733  0DFC  084C               	movf	trapmf@d,w
  4734  0DFD  00A3               	movwf	___ftadd@f1
  4735  0DFE  084D               	movf	trapmf@d+1,w
  4736  0DFF  00A4               	movwf	___ftadd@f1+1
  4737  0E00  084E               	movf	trapmf@d+2,w
  4738  0E01  00A5               	movwf	___ftadd@f1+2
  4739  0E02  0849               	movf	trapmf@c,w
  4740  0E03  00A0               	movwf	___ftneg@f1
  4741  0E04  084A               	movf	trapmf@c+1,w
  4742  0E05  00A1               	movwf	___ftneg@f1+1
  4743  0E06  084B               	movf	trapmf@c+2,w
  4744  0E07  00A2               	movwf	___ftneg@f1+2
  4745  0E08  160A  118A  22D7  120A  158A  	fcall	___ftneg
  4746  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  4747  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  4748  0E0F  0820               	movf	?___ftneg,w
  4749  0E10  00A6               	movwf	___ftadd@f2
  4750  0E11  0821               	movf	?___ftneg+1,w
  4751  0E12  00A7               	movwf	___ftadd@f2+1
  4752  0E13  0822               	movf	?___ftneg+2,w
  4753  0E14  00A8               	movwf	___ftadd@f2+2
  4754  0E15  120A  158A  241C  120A  158A  	fcall	___ftadd
  4755  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  4756  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  4757  0E1C  0823               	movf	?___ftadd,w
  4758  0E1D  00B0               	movwf	___ftdiv@f2
  4759  0E1E  0824               	movf	?___ftadd+1,w
  4760  0E1F  00B1               	movwf	___ftdiv@f2+1
  4761  0E20  0825               	movf	?___ftadd+2,w
  4762  0E21  00B2               	movwf	___ftdiv@f2+2
  4763  0E22  084C               	movf	trapmf@d,w
  4764  0E23  00A3               	movwf	___ftadd@f1
  4765  0E24  084D               	movf	trapmf@d+1,w
  4766  0E25  00A4               	movwf	___ftadd@f1+1
  4767  0E26  084E               	movf	trapmf@d+2,w
  4768  0E27  00A5               	movwf	___ftadd@f1+2
  4769  0E28  0840               	movf	trapmf@x,w
  4770  0E29  00A0               	movwf	___ftneg@f1
  4771  0E2A  0841               	movf	trapmf@x+1,w
  4772  0E2B  00A1               	movwf	___ftneg@f1+1
  4773  0E2C  0842               	movf	trapmf@x+2,w
  4774  0E2D                     L9:	
  4775  0E2D  00A2               	movwf	___ftneg@f1+2
  4776  0E2E  160A  118A  22D7  120A  158A  	fcall	___ftneg
  4777  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  4778  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  4779  0E35  0820               	movf	?___ftneg,w
  4780  0E36  00A6               	movwf	___ftadd@f2
  4781  0E37  0821               	movf	?___ftneg+1,w
  4782  0E38  00A7               	movwf	___ftadd@f2+1
  4783  0E39  0822               	movf	?___ftneg+2,w
  4784  0E3A  00A8               	movwf	___ftadd@f2+2
  4785  0E3B  120A  158A  241C  120A  158A  	fcall	___ftadd
  4786  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  4787  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  4788  0E42  0823               	movf	?___ftadd,w
  4789  0E43  00B3               	movwf	___ftdiv@f1
  4790  0E44  0824               	movf	?___ftadd+1,w
  4791  0E45  00B4               	movwf	___ftdiv@f1+1
  4792  0E46  0825               	movf	?___ftadd+2,w
  4793  0E47  00B5               	movwf	___ftdiv@f1+2
  4794  0E48  120A  158A  2291  120A  158A  	fcall	___ftdiv
  4795  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  4796  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  4797  0E4F  0830               	movf	?___ftdiv,w
  4798  0E50  00CF               	movwf	trapmf@ua
  4799  0E51  0831               	movf	?___ftdiv+1,w
  4800  0E52  00D0               	movwf	trapmf@ua+1
  4801  0E53  0832               	movf	?___ftdiv+2,w
  4802  0E54  2E71               	goto	L6
  4803  0E55                     i1l3845:	
  4804                           
  4805                           ;main.c: 100: else if (x > d)
  4806  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  4807  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  4808  0E57  084C               	movf	trapmf@d,w
  4809  0E58  00F0               	movwf	___ftge@ff1
  4810  0E59  084D               	movf	trapmf@d+1,w
  4811  0E5A  00F1               	movwf	___ftge@ff1+1
  4812  0E5B  084E               	movf	trapmf@d+2,w
  4813  0E5C  00F2               	movwf	___ftge@ff1+2
  4814  0E5D  0840               	movf	trapmf@x,w
  4815  0E5E  00F3               	movwf	___ftge@ff2
  4816  0E5F  0841               	movf	trapmf@x+1,w
  4817  0E60  00F4               	movwf	___ftge@ff2+1
  4818  0E61  0842               	movf	trapmf@x+2,w
  4819  0E62  00F5               	movwf	___ftge@ff2+2
  4820  0E63  160A  118A  2545  120A  158A  	fcall	___ftge
  4821  0E68  1803               	btfsc	3,0
  4822  0E69  2E72               	goto	i1l130
  4823  0E6A                     L7:	
  4824                           
  4825                           ;main.c: 101: ua = 0;
  4826  0E6A  3000               	movlw	0
  4827  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  4828  0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  4829  0E6D  00CF               	movwf	trapmf@ua
  4830  0E6E  3000               	movlw	0
  4831  0E6F  00D0               	movwf	trapmf@ua+1
  4832  0E70  3000               	movlw	0
  4833  0E71                     L6:	
  4834  0E71  00D1               	movwf	trapmf@ua+2
  4835  0E72                     i1l130:	
  4836                           
  4837                           ;main.c: 103: return(ua);
  4838  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  4839  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  4840  0E74  084F               	movf	trapmf@ua,w
  4841  0E75  00C0               	movwf	?_trapmf
  4842  0E76  0850               	movf	trapmf@ua+1,w
  4843  0E77  00C1               	movwf	?_trapmf+1
  4844  0E78  0851               	movf	trapmf@ua+2,w
  4845  0E79  00C2               	movwf	?_trapmf+2
  4846  0E7A  0008               	return
  4847  0E7B                     __end_of_trapmf:	
  4848                           
  4849                           	psect	text25
  4850  12D7                     __ptext25:	
  4851 ;; *************** function ___ftneg *****************
  4852 ;; Defined at:
  4853 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  f1              3    0[BANK0 ] float 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  3    0[BANK0 ] float 
  4860 ;; Registers used:
  4861 ;;		wreg
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4867 ;;      Params:         0       3       0       0       0
  4868 ;;      Locals:         0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0
  4870 ;;      Totals:         0       3       0       0       0
  4871 ;;Total ram usage:        3 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_trapmf
  4877 ;;		_Fuzzy
  4878 ;;		_trimf
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           
  4883                           ;psect for function ___ftneg
  4884  12D7                     ___ftneg:	
  4885                           
  4886                           ;incstack = 0
  4887                           ; Regs used in ___ftneg: [wreg]
  4888  12D7  1283               	bcf	3,5	;RP0=0, select bank0
  4889  12D8  1303               	bcf	3,6	;RP1=0, select bank0
  4890  12D9  0822               	movf	___ftneg@f1+2,w
  4891  12DA  0421               	iorwf	___ftneg@f1+1,w
  4892  12DB  0420               	iorwf	___ftneg@f1,w
  4893  12DC  1903               	skipnz
  4894  12DD  0008               	return
  4895  12DE  3080               	movlw	128
  4896  12DF  06A2               	xorwf	___ftneg@f1+2,f
  4897  12E0  0008               	return
  4898  12E1                     __end_of___ftneg:	
  4899                           
  4900                           	psect	text26
  4901  0A91                     __ptext26:	
  4902 ;; *************** function ___ftdiv *****************
  4903 ;; Defined at:
  4904 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  f2              3   16[BANK0 ] float 
  4907 ;;  f1              3   19[BANK0 ] float 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  f3              3   27[BANK0 ] float 
  4910 ;;  sign            1   31[BANK0 ] unsigned char 
  4911 ;;  exp             1   30[BANK0 ] unsigned char 
  4912 ;;  cntr            1   26[BANK0 ] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  3   16[BANK0 ] float 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0, pclath, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4922 ;;      Params:         0       6       0       0       0
  4923 ;;      Locals:         0       6       0       0       0
  4924 ;;      Temps:          0       4       0       0       0
  4925 ;;      Totals:         0      16       0       0       0
  4926 ;;Total ram usage:       16 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    1
  4929 ;; This function calls:
  4930 ;;		___ftpack
  4931 ;; This function is called by:
  4932 ;;		_trapmf
  4933 ;;		_Fuzzy
  4934 ;;		_trimf
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           
  4939                           ;psect for function ___ftdiv
  4940  0A91                     ___ftdiv:	
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4944  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  4945  0A92  1303               	bcf	3,6	;RP1=0, select bank0
  4946  0A93  0833               	movf	___ftdiv@f1,w
  4947  0A94  00B6               	movwf	??___ftdiv
  4948  0A95  0834               	movf	___ftdiv@f1+1,w
  4949  0A96  00B7               	movwf	??___ftdiv+1
  4950  0A97  0835               	movf	___ftdiv@f1+2,w
  4951  0A98  00B8               	movwf	??___ftdiv+2
  4952  0A99  1003               	clrc
  4953  0A9A  0D37               	rlf	??___ftdiv+1,w
  4954  0A9B  0D38               	rlf	??___ftdiv+2,w
  4955  0A9C  00B9               	movwf	??___ftdiv+3
  4956  0A9D  0839               	movf	??___ftdiv+3,w
  4957  0A9E  00BE               	movwf	___ftdiv@exp
  4958  0A9F  08BE               	movf	___ftdiv@exp,f
  4959  0AA0  1D03               	skipz
  4960  0AA1  2AA9               	goto	i1l2217
  4961  0AA2  3000               	movlw	0
  4962  0AA3  00B0               	movwf	?___ftdiv
  4963  0AA4  3000               	movlw	0
  4964  0AA5  00B1               	movwf	?___ftdiv+1
  4965  0AA6  3000               	movlw	0
  4966  0AA7  00B2               	movwf	?___ftdiv+2
  4967  0AA8  0008               	return
  4968  0AA9                     i1l2217:	
  4969  0AA9  0830               	movf	___ftdiv@f2,w
  4970  0AAA  00B6               	movwf	??___ftdiv
  4971  0AAB  0831               	movf	___ftdiv@f2+1,w
  4972  0AAC  00B7               	movwf	??___ftdiv+1
  4973  0AAD  0832               	movf	___ftdiv@f2+2,w
  4974  0AAE  00B8               	movwf	??___ftdiv+2
  4975  0AAF  1003               	clrc
  4976  0AB0  0D37               	rlf	??___ftdiv+1,w
  4977  0AB1  0D38               	rlf	??___ftdiv+2,w
  4978  0AB2  00B9               	movwf	??___ftdiv+3
  4979  0AB3  0839               	movf	??___ftdiv+3,w
  4980  0AB4  00BF               	movwf	___ftdiv@sign
  4981  0AB5  08BF               	movf	___ftdiv@sign,f
  4982  0AB6  1D03               	skipz
  4983  0AB7  2ABF               	goto	i1l2223
  4984  0AB8  3000               	movlw	0
  4985  0AB9  00B0               	movwf	?___ftdiv
  4986  0ABA  3000               	movlw	0
  4987  0ABB  00B1               	movwf	?___ftdiv+1
  4988  0ABC  3000               	movlw	0
  4989  0ABD  00B2               	movwf	?___ftdiv+2
  4990  0ABE  0008               	return
  4991  0ABF                     i1l2223:	
  4992  0ABF  3000               	movlw	0
  4993  0AC0  00BB               	movwf	___ftdiv@f3
  4994  0AC1  3000               	movlw	0
  4995  0AC2  00BC               	movwf	___ftdiv@f3+1
  4996  0AC3  3000               	movlw	0
  4997  0AC4  00BD               	movwf	___ftdiv@f3+2
  4998  0AC5  3089               	movlw	137
  4999  0AC6  073F               	addwf	___ftdiv@sign,w
  5000  0AC7  00B6               	movwf	??___ftdiv
  5001  0AC8  0836               	movf	??___ftdiv,w
  5002  0AC9  02BE               	subwf	___ftdiv@exp,f
  5003  0ACA  0833               	movf	___ftdiv@f1,w
  5004  0ACB  00B6               	movwf	??___ftdiv
  5005  0ACC  0834               	movf	___ftdiv@f1+1,w
  5006  0ACD  00B7               	movwf	??___ftdiv+1
  5007  0ACE  0835               	movf	___ftdiv@f1+2,w
  5008  0ACF  00B8               	movwf	??___ftdiv+2
  5009  0AD0  3010               	movlw	16
  5010  0AD1                     u235_25:	
  5011  0AD1  1003               	clrc
  5012  0AD2  0CB8               	rrf	??___ftdiv+2,f
  5013  0AD3  0CB7               	rrf	??___ftdiv+1,f
  5014  0AD4  0CB6               	rrf	??___ftdiv,f
  5015  0AD5  3EFF               	addlw	-1
  5016  0AD6  1D03               	skipz
  5017  0AD7  2AD1               	goto	u235_25
  5018  0AD8  0836               	movf	??___ftdiv,w
  5019  0AD9  00B9               	movwf	??___ftdiv+3
  5020  0ADA  0839               	movf	??___ftdiv+3,w
  5021  0ADB  00BF               	movwf	___ftdiv@sign
  5022  0ADC  0830               	movf	___ftdiv@f2,w
  5023  0ADD  00B6               	movwf	??___ftdiv
  5024  0ADE  0831               	movf	___ftdiv@f2+1,w
  5025  0ADF  00B7               	movwf	??___ftdiv+1
  5026  0AE0  0832               	movf	___ftdiv@f2+2,w
  5027  0AE1  00B8               	movwf	??___ftdiv+2
  5028  0AE2  3010               	movlw	16
  5029  0AE3                     u236_25:	
  5030  0AE3  1003               	clrc
  5031  0AE4  0CB8               	rrf	??___ftdiv+2,f
  5032  0AE5  0CB7               	rrf	??___ftdiv+1,f
  5033  0AE6  0CB6               	rrf	??___ftdiv,f
  5034  0AE7  3EFF               	addlw	-1
  5035  0AE8  1D03               	skipz
  5036  0AE9  2AE3               	goto	u236_25
  5037  0AEA  0836               	movf	??___ftdiv,w
  5038  0AEB  00B9               	movwf	??___ftdiv+3
  5039  0AEC  0839               	movf	??___ftdiv+3,w
  5040  0AED  06BF               	xorwf	___ftdiv@sign,f
  5041  0AEE  3080               	movlw	128
  5042  0AEF  00B6               	movwf	??___ftdiv
  5043  0AF0  0836               	movf	??___ftdiv,w
  5044  0AF1  05BF               	andwf	___ftdiv@sign,f
  5045  0AF2  17B4               	bsf	___ftdiv@f1+1,7
  5046  0AF3  30FF               	movlw	255
  5047  0AF4  05B3               	andwf	___ftdiv@f1,f
  5048  0AF5  30FF               	movlw	255
  5049  0AF6  05B4               	andwf	___ftdiv@f1+1,f
  5050  0AF7  3000               	movlw	0
  5051  0AF8  05B5               	andwf	___ftdiv@f1+2,f
  5052  0AF9  17B1               	bsf	___ftdiv@f2+1,7
  5053  0AFA  30FF               	movlw	255
  5054  0AFB  05B0               	andwf	___ftdiv@f2,f
  5055  0AFC  30FF               	movlw	255
  5056  0AFD  05B1               	andwf	___ftdiv@f2+1,f
  5057  0AFE  3000               	movlw	0
  5058  0AFF  05B2               	andwf	___ftdiv@f2+2,f
  5059  0B00  3018               	movlw	24
  5060  0B01  00B6               	movwf	??___ftdiv
  5061  0B02  0836               	movf	??___ftdiv,w
  5062  0B03  00BA               	movwf	___ftdiv@cntr
  5063  0B04                     i1l2237:	
  5064  0B04  3001               	movlw	1
  5065  0B05                     u237_25:	
  5066  0B05  1003               	clrc
  5067  0B06  0DBB               	rlf	___ftdiv@f3,f
  5068  0B07  0DBC               	rlf	___ftdiv@f3+1,f
  5069  0B08  0DBD               	rlf	___ftdiv@f3+2,f
  5070  0B09  3EFF               	addlw	-1
  5071  0B0A  1D03               	skipz
  5072  0B0B  2B05               	goto	u237_25
  5073  0B0C  0832               	movf	___ftdiv@f2+2,w
  5074  0B0D  0235               	subwf	___ftdiv@f1+2,w
  5075  0B0E  1D03               	skipz
  5076  0B0F  2B16               	goto	u238_25
  5077  0B10  0831               	movf	___ftdiv@f2+1,w
  5078  0B11  0234               	subwf	___ftdiv@f1+1,w
  5079  0B12  1D03               	skipz
  5080  0B13  2B16               	goto	u238_25
  5081  0B14  0830               	movf	___ftdiv@f2,w
  5082  0B15  0233               	subwf	___ftdiv@f1,w
  5083  0B16                     u238_25:	
  5084  0B16  1C03               	skipc
  5085  0B17  2B23               	goto	i1l2245
  5086  0B18  0830               	movf	___ftdiv@f2,w
  5087  0B19  02B3               	subwf	___ftdiv@f1,f
  5088  0B1A  0831               	movf	___ftdiv@f2+1,w
  5089  0B1B  1C03               	skipc
  5090  0B1C  0F31               	incfsz	___ftdiv@f2+1,w
  5091  0B1D  02B4               	subwf	___ftdiv@f1+1,f
  5092  0B1E  0832               	movf	___ftdiv@f2+2,w
  5093  0B1F  1C03               	skipc
  5094  0B20  0A32               	incf	___ftdiv@f2+2,w
  5095  0B21  02B5               	subwf	___ftdiv@f1+2,f
  5096  0B22  143B               	bsf	___ftdiv@f3,0
  5097  0B23                     i1l2245:	
  5098  0B23  3001               	movlw	1
  5099  0B24                     u239_25:	
  5100  0B24  1003               	clrc
  5101  0B25  0DB3               	rlf	___ftdiv@f1,f
  5102  0B26  0DB4               	rlf	___ftdiv@f1+1,f
  5103  0B27  0DB5               	rlf	___ftdiv@f1+2,f
  5104  0B28  3EFF               	addlw	-1
  5105  0B29  1D03               	skipz
  5106  0B2A  2B24               	goto	u239_25
  5107  0B2B  3001               	movlw	1
  5108  0B2C  02BA               	subwf	___ftdiv@cntr,f
  5109  0B2D  1D03               	btfss	3,2
  5110  0B2E  2B04               	goto	i1l2237
  5111  0B2F  083B               	movf	___ftdiv@f3,w
  5112  0B30  00F0               	movwf	___ftpack@arg
  5113  0B31  083C               	movf	___ftdiv@f3+1,w
  5114  0B32  00F1               	movwf	___ftpack@arg+1
  5115  0B33  083D               	movf	___ftdiv@f3+2,w
  5116  0B34  00F2               	movwf	___ftpack@arg+2
  5117  0B35  083E               	movf	___ftdiv@exp,w
  5118  0B36  00B6               	movwf	??___ftdiv
  5119  0B37  0836               	movf	??___ftdiv,w
  5120  0B38  00F3               	movwf	___ftpack@exp
  5121  0B39  083F               	movf	___ftdiv@sign,w
  5122  0B3A  00B7               	movwf	??___ftdiv+1
  5123  0B3B  0837               	movf	??___ftdiv+1,w
  5124  0B3C  00F4               	movwf	___ftpack@sign
  5125  0B3D  160A  118A  25A2   	fcall	___ftpack
  5126  0B40  0870               	movf	?___ftpack,w
  5127  0B41  1283               	bcf	3,5	;RP0=0, select bank0
  5128  0B42  1303               	bcf	3,6	;RP1=0, select bank0
  5129  0B43  00B0               	movwf	?___ftdiv
  5130  0B44  0871               	movf	?___ftpack+1,w
  5131  0B45  00B1               	movwf	?___ftdiv+1
  5132  0B46  0872               	movf	?___ftpack+2,w
  5133  0B47  00B2               	movwf	?___ftdiv+2
  5134  0B48  0008               	return
  5135  0B49                     __end_of___ftdiv:	
  5136                           
  5137                           	psect	text27
  5138  0C1C                     __ptext27:	
  5139 ;; *************** function ___ftadd *****************
  5140 ;; Defined at:
  5141 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  f1              3    3[BANK0 ] float 
  5144 ;;  f2              3    6[BANK0 ] float 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  exp1            1   15[BANK0 ] unsigned char 
  5147 ;;  exp2            1   14[BANK0 ] unsigned char 
  5148 ;;  sign            1   13[BANK0 ] unsigned char 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  3    3[BANK0 ] float 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0, pclath, cstack
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5158 ;;      Params:         0       6       0       0       0
  5159 ;;      Locals:         0       3       0       0       0
  5160 ;;      Temps:          0       4       0       0       0
  5161 ;;      Totals:         0      13       0       0       0
  5162 ;;Total ram usage:       13 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    1
  5165 ;; This function calls:
  5166 ;;		___ftpack
  5167 ;; This function is called by:
  5168 ;;		_trapmf
  5169 ;;		_Fuzzy
  5170 ;;		_trimf
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           
  5175                           ;psect for function ___ftadd
  5176  0C1C                     ___ftadd:	
  5177                           
  5178                           ;incstack = 0
  5179                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5180  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  5181  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  5182  0C1E  0823               	movf	___ftadd@f1,w
  5183  0C1F  00A9               	movwf	??___ftadd
  5184  0C20  0824               	movf	___ftadd@f1+1,w
  5185  0C21  00AA               	movwf	??___ftadd+1
  5186  0C22  0825               	movf	___ftadd@f1+2,w
  5187  0C23  00AB               	movwf	??___ftadd+2
  5188  0C24  1003               	clrc
  5189  0C25  0D2A               	rlf	??___ftadd+1,w
  5190  0C26  0D2B               	rlf	??___ftadd+2,w
  5191  0C27  00AC               	movwf	??___ftadd+3
  5192  0C28  082C               	movf	??___ftadd+3,w
  5193  0C29  00AF               	movwf	___ftadd@exp1
  5194  0C2A  0826               	movf	___ftadd@f2,w
  5195  0C2B  00A9               	movwf	??___ftadd
  5196  0C2C  0827               	movf	___ftadd@f2+1,w
  5197  0C2D  00AA               	movwf	??___ftadd+1
  5198  0C2E  0828               	movf	___ftadd@f2+2,w
  5199  0C2F  00AB               	movwf	??___ftadd+2
  5200  0C30  1003               	clrc
  5201  0C31  0D2A               	rlf	??___ftadd+1,w
  5202  0C32  0D2B               	rlf	??___ftadd+2,w
  5203  0C33  00AC               	movwf	??___ftadd+3
  5204  0C34  082C               	movf	??___ftadd+3,w
  5205  0C35  00AE               	movwf	___ftadd@exp2
  5206  0C36  082F               	movf	___ftadd@exp1,w
  5207  0C37  1903               	btfsc	3,2
  5208  0C38  2C45               	goto	i1l3757
  5209  0C39  082E               	movf	___ftadd@exp2,w
  5210  0C3A  022F               	subwf	___ftadd@exp1,w
  5211  0C3B  1803               	skipnc
  5212  0C3C  2C4C               	goto	i1l3761
  5213  0C3D  032F               	decf	___ftadd@exp1,w
  5214  0C3E  3AFF               	xorlw	255
  5215  0C3F  072E               	addwf	___ftadd@exp2,w
  5216  0C40  00A9               	movwf	??___ftadd
  5217  0C41  3019               	movlw	25
  5218  0C42  0229               	subwf	??___ftadd,w
  5219  0C43  1C03               	skipc
  5220  0C44  2C4C               	goto	i1l3761
  5221  0C45                     i1l3757:	
  5222  0C45  0826               	movf	___ftadd@f2,w
  5223  0C46  00A3               	movwf	?___ftadd
  5224  0C47  0827               	movf	___ftadd@f2+1,w
  5225  0C48  00A4               	movwf	?___ftadd+1
  5226  0C49  0828               	movf	___ftadd@f2+2,w
  5227  0C4A  00A5               	movwf	?___ftadd+2
  5228  0C4B  0008               	return
  5229  0C4C                     i1l3761:	
  5230  0C4C  082E               	movf	___ftadd@exp2,w
  5231  0C4D  1903               	btfsc	3,2
  5232  0C4E  0008               	return
  5233  0C4F  082F               	movf	___ftadd@exp1,w
  5234  0C50  022E               	subwf	___ftadd@exp2,w
  5235  0C51  1803               	skipnc
  5236  0C52  2C5B               	goto	i1l3767
  5237  0C53  032E               	decf	___ftadd@exp2,w
  5238  0C54  3AFF               	xorlw	255
  5239  0C55  072F               	addwf	___ftadd@exp1,w
  5240  0C56  00A9               	movwf	??___ftadd
  5241  0C57  3019               	movlw	25
  5242  0C58  0229               	subwf	??___ftadd,w
  5243  0C59  1803               	btfsc	3,0
  5244  0C5A  0008               	return
  5245  0C5B                     i1l3767:	
  5246  0C5B  3006               	movlw	6
  5247  0C5C  00A9               	movwf	??___ftadd
  5248  0C5D  0829               	movf	??___ftadd,w
  5249  0C5E  00AD               	movwf	___ftadd@sign
  5250  0C5F  1BA5               	btfsc	___ftadd@f1+2,7
  5251  0C60  17AD               	bsf	___ftadd@sign,7
  5252  0C61  1BA8               	btfsc	___ftadd@f2+2,7
  5253  0C62  172D               	bsf	___ftadd@sign,6
  5254  0C63  17A4               	bsf	___ftadd@f1+1,7
  5255  0C64  30FF               	movlw	255
  5256  0C65  05A3               	andwf	___ftadd@f1,f
  5257  0C66  30FF               	movlw	255
  5258  0C67  05A4               	andwf	___ftadd@f1+1,f
  5259  0C68  3000               	movlw	0
  5260  0C69  05A5               	andwf	___ftadd@f1+2,f
  5261  0C6A  17A7               	bsf	___ftadd@f2+1,7
  5262  0C6B  30FF               	movlw	255
  5263  0C6C  05A6               	andwf	___ftadd@f2,f
  5264  0C6D  30FF               	movlw	255
  5265  0C6E  05A7               	andwf	___ftadd@f2+1,f
  5266  0C6F  3000               	movlw	0
  5267  0C70  05A8               	andwf	___ftadd@f2+2,f
  5268  0C71  082E               	movf	___ftadd@exp2,w
  5269  0C72  022F               	subwf	___ftadd@exp1,w
  5270  0C73  1803               	skipnc
  5271  0C74  2C9B               	goto	i1l3789
  5272  0C75                     i1l3779:	
  5273  0C75  3001               	movlw	1
  5274  0C76                     u502_25:	
  5275  0C76  1003               	clrc
  5276  0C77  0DA6               	rlf	___ftadd@f2,f
  5277  0C78  0DA7               	rlf	___ftadd@f2+1,f
  5278  0C79  0DA8               	rlf	___ftadd@f2+2,f
  5279  0C7A  3EFF               	addlw	-1
  5280  0C7B  1D03               	skipz
  5281  0C7C  2C76               	goto	u502_25
  5282  0C7D  3001               	movlw	1
  5283  0C7E  02AE               	subwf	___ftadd@exp2,f
  5284  0C7F  082E               	movf	___ftadd@exp2,w
  5285  0C80  062F               	xorwf	___ftadd@exp1,w
  5286  0C81  1903               	skipnz
  5287  0C82  2C96               	goto	i1l3787
  5288  0C83  3001               	movlw	1
  5289  0C84  02AD               	subwf	___ftadd@sign,f
  5290  0C85  082D               	movf	___ftadd@sign,w
  5291  0C86  3907               	andlw	7
  5292  0C87  1903               	btfsc	3,2
  5293  0C88  2C96               	goto	i1l3787
  5294  0C89  2C75               	goto	i1l3779
  5295  0C8A                     i1l3785:	
  5296  0C8A  3001               	movlw	1
  5297  0C8B                     u505_25:	
  5298  0C8B  1003               	clrc
  5299  0C8C  0CA5               	rrf	___ftadd@f1+2,f
  5300  0C8D  0CA4               	rrf	___ftadd@f1+1,f
  5301  0C8E  0CA3               	rrf	___ftadd@f1,f
  5302  0C8F  3EFF               	addlw	-1
  5303  0C90  1D03               	skipz
  5304  0C91  2C8B               	goto	u505_25
  5305  0C92  3001               	movlw	1
  5306  0C93  00A9               	movwf	??___ftadd
  5307  0C94  0829               	movf	??___ftadd,w
  5308  0C95  07AF               	addwf	___ftadd@exp1,f
  5309  0C96                     i1l3787:	
  5310  0C96  082F               	movf	___ftadd@exp1,w
  5311  0C97  062E               	xorwf	___ftadd@exp2,w
  5312  0C98  1903               	btfsc	3,2
  5313  0C99  2CC4               	goto	i1l758
  5314  0C9A  2C8A               	goto	i1l3785
  5315  0C9B                     i1l3789:	
  5316  0C9B  082F               	movf	___ftadd@exp1,w
  5317  0C9C  022E               	subwf	___ftadd@exp2,w
  5318  0C9D  1803               	skipnc
  5319  0C9E  2CC4               	goto	i1l758
  5320  0C9F                     i1l3791:	
  5321  0C9F  3001               	movlw	1
  5322  0CA0                     u508_25:	
  5323  0CA0  1003               	clrc
  5324  0CA1  0DA3               	rlf	___ftadd@f1,f
  5325  0CA2  0DA4               	rlf	___ftadd@f1+1,f
  5326  0CA3  0DA5               	rlf	___ftadd@f1+2,f
  5327  0CA4  3EFF               	addlw	-1
  5328  0CA5  1D03               	skipz
  5329  0CA6  2CA0               	goto	u508_25
  5330  0CA7  3001               	movlw	1
  5331  0CA8  02AF               	subwf	___ftadd@exp1,f
  5332  0CA9  082E               	movf	___ftadd@exp2,w
  5333  0CAA  062F               	xorwf	___ftadd@exp1,w
  5334  0CAB  1903               	skipnz
  5335  0CAC  2CC0               	goto	i1l3799
  5336  0CAD  3001               	movlw	1
  5337  0CAE  02AD               	subwf	___ftadd@sign,f
  5338  0CAF  082D               	movf	___ftadd@sign,w
  5339  0CB0  3907               	andlw	7
  5340  0CB1  1903               	btfsc	3,2
  5341  0CB2  2CC0               	goto	i1l3799
  5342  0CB3  2C9F               	goto	i1l3791
  5343  0CB4                     i1l3797:	
  5344  0CB4  3001               	movlw	1
  5345  0CB5                     u511_25:	
  5346  0CB5  1003               	clrc
  5347  0CB6  0CA8               	rrf	___ftadd@f2+2,f
  5348  0CB7  0CA7               	rrf	___ftadd@f2+1,f
  5349  0CB8  0CA6               	rrf	___ftadd@f2,f
  5350  0CB9  3EFF               	addlw	-1
  5351  0CBA  1D03               	skipz
  5352  0CBB  2CB5               	goto	u511_25
  5353  0CBC  3001               	movlw	1
  5354  0CBD  00A9               	movwf	??___ftadd
  5355  0CBE  0829               	movf	??___ftadd,w
  5356  0CBF  07AE               	addwf	___ftadd@exp2,f
  5357  0CC0                     i1l3799:	
  5358  0CC0  082F               	movf	___ftadd@exp1,w
  5359  0CC1  062E               	xorwf	___ftadd@exp2,w
  5360  0CC2  1D03               	skipz
  5361  0CC3  2CB4               	goto	i1l3797
  5362  0CC4                     i1l758:	
  5363  0CC4  1FAD               	btfss	___ftadd@sign,7
  5364  0CC5  2CD6               	goto	i1l3803
  5365  0CC6  30FF               	movlw	255
  5366  0CC7  06A3               	xorwf	___ftadd@f1,f
  5367  0CC8  30FF               	movlw	255
  5368  0CC9  06A4               	xorwf	___ftadd@f1+1,f
  5369  0CCA  30FF               	movlw	255
  5370  0CCB  06A5               	xorwf	___ftadd@f1+2,f
  5371  0CCC  3001               	movlw	1
  5372  0CCD  07A3               	addwf	___ftadd@f1,f
  5373  0CCE  3000               	movlw	0
  5374  0CCF  1803               	skipnc
  5375  0CD0  3001               	movlw	1
  5376  0CD1  07A4               	addwf	___ftadd@f1+1,f
  5377  0CD2  3000               	movlw	0
  5378  0CD3  1803               	skipnc
  5379  0CD4  3001               	movlw	1
  5380  0CD5  07A5               	addwf	___ftadd@f1+2,f
  5381  0CD6                     i1l3803:	
  5382  0CD6  1F2D               	btfss	___ftadd@sign,6
  5383  0CD7  2CE8               	goto	i1l3807
  5384  0CD8  30FF               	movlw	255
  5385  0CD9  06A6               	xorwf	___ftadd@f2,f
  5386  0CDA  30FF               	movlw	255
  5387  0CDB  06A7               	xorwf	___ftadd@f2+1,f
  5388  0CDC  30FF               	movlw	255
  5389  0CDD  06A8               	xorwf	___ftadd@f2+2,f
  5390  0CDE  3001               	movlw	1
  5391  0CDF  07A6               	addwf	___ftadd@f2,f
  5392  0CE0  3000               	movlw	0
  5393  0CE1  1803               	skipnc
  5394  0CE2  3001               	movlw	1
  5395  0CE3  07A7               	addwf	___ftadd@f2+1,f
  5396  0CE4  3000               	movlw	0
  5397  0CE5  1803               	skipnc
  5398  0CE6  3001               	movlw	1
  5399  0CE7  07A8               	addwf	___ftadd@f2+2,f
  5400  0CE8                     i1l3807:	
  5401  0CE8  01AD               	clrf	___ftadd@sign
  5402  0CE9  0823               	movf	___ftadd@f1,w
  5403  0CEA  07A6               	addwf	___ftadd@f2,f
  5404  0CEB  0824               	movf	___ftadd@f1+1,w
  5405  0CEC  1103               	clrz
  5406  0CED  1803               	skipnc
  5407  0CEE  0A24               	incf	___ftadd@f1+1,w
  5408  0CEF  1D03               	btfss	3,2
  5409  0CF0  07A7               	addwf	___ftadd@f2+1,f
  5410  0CF1  0825               	movf	___ftadd@f1+2,w
  5411  0CF2  1103               	clrz
  5412  0CF3  1803               	skipnc
  5413  0CF4  0A25               	incf	___ftadd@f1+2,w
  5414  0CF5  1D03               	btfss	3,2
  5415  0CF6  07A8               	addwf	___ftadd@f2+2,f
  5416  0CF7  1FA8               	btfss	___ftadd@f2+2,7
  5417  0CF8  2D0B               	goto	i1l3817
  5418  0CF9  30FF               	movlw	255
  5419  0CFA  06A6               	xorwf	___ftadd@f2,f
  5420  0CFB  30FF               	movlw	255
  5421  0CFC  06A7               	xorwf	___ftadd@f2+1,f
  5422  0CFD  30FF               	movlw	255
  5423  0CFE  06A8               	xorwf	___ftadd@f2+2,f
  5424  0CFF  3001               	movlw	1
  5425  0D00  07A6               	addwf	___ftadd@f2,f
  5426  0D01  3000               	movlw	0
  5427  0D02  1803               	skipnc
  5428  0D03  3001               	movlw	1
  5429  0D04  07A7               	addwf	___ftadd@f2+1,f
  5430  0D05  3000               	movlw	0
  5431  0D06  1803               	skipnc
  5432  0D07  3001               	movlw	1
  5433  0D08  07A8               	addwf	___ftadd@f2+2,f
  5434  0D09  01AD               	clrf	___ftadd@sign
  5435  0D0A  0AAD               	incf	___ftadd@sign,f
  5436  0D0B                     i1l3817:	
  5437  0D0B  0826               	movf	___ftadd@f2,w
  5438  0D0C  00F0               	movwf	___ftpack@arg
  5439  0D0D  0827               	movf	___ftadd@f2+1,w
  5440  0D0E  00F1               	movwf	___ftpack@arg+1
  5441  0D0F  0828               	movf	___ftadd@f2+2,w
  5442  0D10  00F2               	movwf	___ftpack@arg+2
  5443  0D11  082F               	movf	___ftadd@exp1,w
  5444  0D12  00A9               	movwf	??___ftadd
  5445  0D13  0829               	movf	??___ftadd,w
  5446  0D14  00F3               	movwf	___ftpack@exp
  5447  0D15  082D               	movf	___ftadd@sign,w
  5448  0D16  00AA               	movwf	??___ftadd+1
  5449  0D17  082A               	movf	??___ftadd+1,w
  5450  0D18  00F4               	movwf	___ftpack@sign
  5451  0D19  160A  118A  25A2   	fcall	___ftpack
  5452  0D1C  0870               	movf	?___ftpack,w
  5453  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  5454  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  5455  0D1F  00A3               	movwf	?___ftadd
  5456  0D20  0871               	movf	?___ftpack+1,w
  5457  0D21  00A4               	movwf	?___ftadd+1
  5458  0D22  0872               	movf	?___ftpack+2,w
  5459  0D23  00A5               	movwf	?___ftadd+2
  5460  0D24  0008               	return
  5461  0D25                     __end_of___ftadd:	
  5462                           
  5463                           	psect	text28
  5464  07E2                     __ptext28:	
  5465 ;; *************** function _minimo *****************
  5466 ;; Defined at:
  5467 ;;		line 113 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  a               3    0[BANK0 ] float 
  5470 ;;  b               3    3[BANK0 ] float 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  3    0[BANK0 ] float 
  5475 ;; Registers used:
  5476 ;;		wreg, status,2, status,0, pclath, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5482 ;;      Params:         0       6       0       0       0
  5483 ;;      Locals:         0       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0
  5485 ;;      Totals:         0       6       0       0       0
  5486 ;;Total ram usage:        6 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    1
  5489 ;; This function calls:
  5490 ;;		___ftge
  5491 ;; This function is called by:
  5492 ;;		_Fuzzy
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           
  5497                           ;psect for function _minimo
  5498  07E2                     _minimo:	
  5499                           
  5500                           ;main.c: 114: if (a < b) {
  5501                           
  5502                           ;incstack = 0
  5503                           ; Regs used in _minimo: [wreg+status,2+status,0+pclath+cstack]
  5504  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  5505  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  5506  07E4  0820               	movf	minimo@a,w
  5507  07E5  00F0               	movwf	___ftge@ff1
  5508  07E6  0821               	movf	minimo@a+1,w
  5509  07E7  00F1               	movwf	___ftge@ff1+1
  5510  07E8  0822               	movf	minimo@a+2,w
  5511  07E9  00F2               	movwf	___ftge@ff1+2
  5512  07EA  0823               	movf	minimo@b,w
  5513  07EB  00F3               	movwf	___ftge@ff2
  5514  07EC  0824               	movf	minimo@b+1,w
  5515  07ED  00F4               	movwf	___ftge@ff2+1
  5516  07EE  0825               	movf	minimo@b+2,w
  5517  07EF  00F5               	movwf	___ftge@ff2+2
  5518  07F0  160A  118A  2545  120A  118A  	fcall	___ftge
  5519  07F5  1C03               	btfss	3,0
  5520  07F6  0008               	return
  5521                           
  5522                           ;main.c: 116: }
  5523                           ;main.c: 117: return b;
  5524                           
  5525                           ;main.c: 115: return a;
  5526  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  5527  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  5528  07F9  0823               	movf	minimo@b,w
  5529  07FA  00A0               	movwf	?_minimo
  5530  07FB  0824               	movf	minimo@b+1,w
  5531  07FC  00A1               	movwf	?_minimo+1
  5532  07FD  0825               	movf	minimo@b+2,w
  5533  07FE  00A2               	movwf	?_minimo+2
  5534  07FF  0008               	return
  5535  0800                     __end_of_minimo:	
  5536                           
  5537                           	psect	text29
  5538  1389                     __ptext29:	
  5539 ;; *************** function _maximo *****************
  5540 ;; Defined at:
  5541 ;;		line 106 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  a               3    6[BANK0 ] float 
  5544 ;;  b               3    9[BANK0 ] float 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  3    6[BANK0 ] float 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0, pclath, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5556 ;;      Params:         0       6       0       0       0
  5557 ;;      Locals:         0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0
  5559 ;;      Totals:         0       6       0       0       0
  5560 ;;Total ram usage:        6 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    1
  5563 ;; This function calls:
  5564 ;;		___ftge
  5565 ;; This function is called by:
  5566 ;;		_Fuzzy
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           
  5571                           ;psect for function _maximo
  5572  1389                     _maximo:	
  5573                           
  5574                           ;main.c: 107: if (a > b) {
  5575                           
  5576                           ;incstack = 0
  5577                           ; Regs used in _maximo: [wreg+status,2+status,0+pclath+cstack]
  5578  1389  1283               	bcf	3,5	;RP0=0, select bank0
  5579  138A  1303               	bcf	3,6	;RP1=0, select bank0
  5580  138B  0829               	movf	maximo@b,w
  5581  138C  00F0               	movwf	___ftge@ff1
  5582  138D  082A               	movf	maximo@b+1,w
  5583  138E  00F1               	movwf	___ftge@ff1+1
  5584  138F  082B               	movf	maximo@b+2,w
  5585  1390  00F2               	movwf	___ftge@ff1+2
  5586  1391  0826               	movf	maximo@a,w
  5587  1392  00F3               	movwf	___ftge@ff2
  5588  1393  0827               	movf	maximo@a+1,w
  5589  1394  00F4               	movwf	___ftge@ff2+1
  5590  1395  0828               	movf	maximo@a+2,w
  5591  1396  00F5               	movwf	___ftge@ff2+2
  5592  1397  160A  118A  2545  160A  118A  	fcall	___ftge
  5593  139C  1C03               	btfss	3,0
  5594  139D  0008               	return
  5595                           
  5596                           ;main.c: 109: }
  5597                           ;main.c: 110: return b;
  5598                           
  5599                           ;main.c: 108: return a;
  5600  139E  1283               	bcf	3,5	;RP0=0, select bank0
  5601  139F  1303               	bcf	3,6	;RP1=0, select bank0
  5602  13A0  0829               	movf	maximo@b,w
  5603  13A1  00A6               	movwf	?_maximo
  5604  13A2  082A               	movf	maximo@b+1,w
  5605  13A3  00A7               	movwf	?_maximo+1
  5606  13A4  082B               	movf	maximo@b+2,w
  5607  13A5  00A8               	movwf	?_maximo+2
  5608  13A6  0008               	return
  5609  13A7                     __end_of_maximo:	
  5610                           
  5611                           	psect	text30
  5612  1545                     __ptext30:	
  5613 ;; *************** function ___ftge *****************
  5614 ;; Defined at:
  5615 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  ff1             3    0[COMMON] float 
  5618 ;;  ff2             3    3[COMMON] float 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;		None
  5621 ;; Return value:  Size  Location     Type
  5622 ;;		None               void
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5630 ;;      Params:         6       0       0       0       0
  5631 ;;      Locals:         0       0       0       0       0
  5632 ;;      Temps:          6       0       0       0       0
  5633 ;;      Totals:        12       0       0       0       0
  5634 ;;Total ram usage:       12 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_trapmf
  5640 ;;		_maximo
  5641 ;;		_minimo
  5642 ;;		_Fuzzy
  5643 ;;		_trimf
  5644 ;;		_min_val
  5645 ;;		_max_val
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           
  5650                           ;psect for function ___ftge
  5651  1545                     ___ftge:	
  5652                           
  5653                           ;incstack = 0
  5654                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5655  1545  1FF2               	btfss	___ftge@ff1+2,7
  5656  1546  2D6C               	goto	i1l2257
  5657  1547  3000               	movlw	0
  5658  1548  00F6               	movwf	??___ftge
  5659  1549  3000               	movlw	0
  5660  154A  00F7               	movwf	??___ftge+1
  5661  154B  3080               	movlw	128
  5662  154C  00F8               	movwf	??___ftge+2
  5663  154D  0970               	comf	___ftge@ff1,w
  5664  154E  00F9               	movwf	??___ftge+3
  5665  154F  0971               	comf	___ftge@ff1+1,w
  5666  1550  00FA               	movwf	??___ftge+4
  5667  1551  0972               	comf	___ftge@ff1+2,w
  5668  1552  00FB               	movwf	??___ftge+5
  5669  1553  0AF9               	incf	??___ftge+3,f
  5670  1554  1903               	skipnz
  5671  1555  0AFA               	incf	??___ftge+4,f
  5672  1556  1903               	skipnz
  5673  1557  0AFB               	incf	??___ftge+5,f
  5674  1558  0879               	movf	??___ftge+3,w
  5675  1559  07F6               	addwf	??___ftge,f
  5676  155A  087A               	movf	??___ftge+4,w
  5677  155B  1803               	skipnc
  5678  155C  0F7A               	incfsz	??___ftge+4,w
  5679  155D  2D5F               	goto	u242_21
  5680  155E  2D60               	goto	u242_22
  5681  155F                     u242_21:	
  5682  155F  07F7               	addwf	??___ftge+1,f
  5683  1560                     u242_22:	
  5684  1560  087B               	movf	??___ftge+5,w
  5685  1561  1803               	skipnc
  5686  1562  0F7B               	incfsz	??___ftge+5,w
  5687  1563  2D65               	goto	u242_23
  5688  1564  2D66               	goto	u242_24
  5689  1565                     u242_23:	
  5690  1565  07F8               	addwf	??___ftge+2,f
  5691  1566                     u242_24:	
  5692  1566  0876               	movf	??___ftge,w
  5693  1567  00F0               	movwf	___ftge@ff1
  5694  1568  0877               	movf	??___ftge+1,w
  5695  1569  00F1               	movwf	___ftge@ff1+1
  5696  156A  0878               	movf	??___ftge+2,w
  5697  156B  00F2               	movwf	___ftge@ff1+2
  5698  156C                     i1l2257:	
  5699  156C  1FF5               	btfss	___ftge@ff2+2,7
  5700  156D  2D93               	goto	i1l2261
  5701  156E  3000               	movlw	0
  5702  156F  00F6               	movwf	??___ftge
  5703  1570  3000               	movlw	0
  5704  1571  00F7               	movwf	??___ftge+1
  5705  1572  3080               	movlw	128
  5706  1573  00F8               	movwf	??___ftge+2
  5707  1574  0973               	comf	___ftge@ff2,w
  5708  1575  00F9               	movwf	??___ftge+3
  5709  1576  0974               	comf	___ftge@ff2+1,w
  5710  1577  00FA               	movwf	??___ftge+4
  5711  1578  0975               	comf	___ftge@ff2+2,w
  5712  1579  00FB               	movwf	??___ftge+5
  5713  157A  0AF9               	incf	??___ftge+3,f
  5714  157B  1903               	skipnz
  5715  157C  0AFA               	incf	??___ftge+4,f
  5716  157D  1903               	skipnz
  5717  157E  0AFB               	incf	??___ftge+5,f
  5718  157F  0879               	movf	??___ftge+3,w
  5719  1580  07F6               	addwf	??___ftge,f
  5720  1581  087A               	movf	??___ftge+4,w
  5721  1582  1803               	skipnc
  5722  1583  0F7A               	incfsz	??___ftge+4,w
  5723  1584  2D86               	goto	u244_21
  5724  1585  2D87               	goto	u244_22
  5725  1586                     u244_21:	
  5726  1586  07F7               	addwf	??___ftge+1,f
  5727  1587                     u244_22:	
  5728  1587  087B               	movf	??___ftge+5,w
  5729  1588  1803               	skipnc
  5730  1589  0F7B               	incfsz	??___ftge+5,w
  5731  158A  2D8C               	goto	u244_23
  5732  158B  2D8D               	goto	u244_24
  5733  158C                     u244_23:	
  5734  158C  07F8               	addwf	??___ftge+2,f
  5735  158D                     u244_24:	
  5736  158D  0876               	movf	??___ftge,w
  5737  158E  00F3               	movwf	___ftge@ff2
  5738  158F  0877               	movf	??___ftge+1,w
  5739  1590  00F4               	movwf	___ftge@ff2+1
  5740  1591  0878               	movf	??___ftge+2,w
  5741  1592  00F5               	movwf	___ftge@ff2+2
  5742  1593                     i1l2261:	
  5743  1593  3080               	movlw	128
  5744  1594  06F2               	xorwf	___ftge@ff1+2,f
  5745  1595  3080               	movlw	128
  5746  1596  06F5               	xorwf	___ftge@ff2+2,f
  5747  1597  0875               	movf	___ftge@ff2+2,w
  5748  1598  0272               	subwf	___ftge@ff1+2,w
  5749  1599  1D03               	skipz
  5750  159A  0008               	return
  5751  159B  0874               	movf	___ftge@ff2+1,w
  5752  159C  0271               	subwf	___ftge@ff1+1,w
  5753  159D  1D03               	skipz
  5754  159E  0008               	return
  5755  159F  0873               	movf	___ftge@ff2,w
  5756  15A0  0270               	subwf	___ftge@ff1,w
  5757  15A1  0008               	return
  5758  15A2                     __end_of___ftge:	
  5759                           
  5760                           	psect	text31
  5761  12EC                     __ptext31:	
  5762 ;; *************** function _abs *****************
  5763 ;; Defined at:
  5764 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  a               2    0[COMMON] int 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  2    0[COMMON] int 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5778 ;;      Params:         2       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0
  5780 ;;      Temps:          2       0       0       0       0
  5781 ;;      Totals:         4       0       0       0       0
  5782 ;;Total ram usage:        4 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_Fuzzy
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           
  5792                           ;psect for function _abs
  5793  12EC                     _abs:	
  5794                           
  5795                           ;incstack = 0
  5796                           ; Regs used in _abs: [wreg+status,2+status,0]
  5797  12EC  1FF1               	btfss	abs@a+1,7
  5798  12ED  0008               	return
  5799  12EE  0970               	comf	abs@a,w
  5800  12EF  00F2               	movwf	??_abs
  5801  12F0  0971               	comf	abs@a+1,w
  5802  12F1  00F3               	movwf	??_abs+1
  5803  12F2  0AF2               	incf	??_abs,f
  5804  12F3  1903               	skipnz
  5805  12F4  0AF3               	incf	??_abs+1,f
  5806  12F5  0872               	movf	??_abs,w
  5807  12F6  00F0               	movwf	?_abs
  5808  12F7  0873               	movf	??_abs+1,w
  5809  12F8  00F1               	movwf	?_abs+1
  5810  12F9  0008               	return
  5811  12FA                     __end_of_abs:	
  5812                           
  5813                           	psect	text32
  5814  146E                     __ptext32:	
  5815 ;; *************** function ___wmul *****************
  5816 ;; Defined at:
  5817 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  multiplier      2   26[BANK0 ] unsigned int 
  5820 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  product         2   30[BANK0 ] unsigned int 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  2   26[BANK0 ] unsigned int 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5832 ;;      Params:         0       4       0       0       0
  5833 ;;      Locals:         0       2       0       0       0
  5834 ;;      Temps:          0       0       0       0       0
  5835 ;;      Totals:         0       6       0       0       0
  5836 ;;Total ram usage:        6 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_Fuzzy
  5842 ;;		_ISR
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           
  5847                           ;psect for function ___wmul
  5848  146E                     ___wmul:	
  5849                           
  5850                           ;incstack = 0
  5851                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5852  146E  1283               	bcf	3,5	;RP0=0, select bank0
  5853  146F  1303               	bcf	3,6	;RP1=0, select bank0
  5854  1470  01BE               	clrf	___wmul@product
  5855  1471  01BF               	clrf	___wmul@product+1
  5856  1472                     i1l2359:	
  5857  1472  1C3A               	btfss	___wmul@multiplier,0
  5858  1473  2C7A               	goto	i1l564
  5859  1474  083C               	movf	___wmul@multiplicand,w
  5860  1475  07BE               	addwf	___wmul@product,f
  5861  1476  1803               	skipnc
  5862  1477  0ABF               	incf	___wmul@product+1,f
  5863  1478  083D               	movf	___wmul@multiplicand+1,w
  5864  1479  07BF               	addwf	___wmul@product+1,f
  5865  147A                     i1l564:	
  5866  147A  3001               	movlw	1
  5867  147B                     u260_25:	
  5868  147B  1003               	clrc
  5869  147C  0DBC               	rlf	___wmul@multiplicand,f
  5870  147D  0DBD               	rlf	___wmul@multiplicand+1,f
  5871  147E  3EFF               	addlw	-1
  5872  147F  1D03               	skipz
  5873  1480  2C7B               	goto	u260_25
  5874  1481  3001               	movlw	1
  5875  1482                     u261_25:	
  5876  1482  1003               	clrc
  5877  1483  0CBB               	rrf	___wmul@multiplier+1,f
  5878  1484  0CBA               	rrf	___wmul@multiplier,f
  5879  1485  3EFF               	addlw	-1
  5880  1486  1D03               	skipz
  5881  1487  2C82               	goto	u261_25
  5882  1488  083B               	movf	___wmul@multiplier+1,w
  5883  1489  043A               	iorwf	___wmul@multiplier,w
  5884  148A  1D03               	skipz
  5885  148B  2C72               	goto	i1l2359
  5886  148C  083F               	movf	___wmul@product+1,w
  5887  148D  01BB               	clrf	?___wmul+1
  5888  148E  07BB               	addwf	?___wmul+1,f
  5889  148F  083E               	movf	___wmul@product,w
  5890  1490  01BA               	clrf	?___wmul
  5891  1491  07BA               	addwf	?___wmul,f
  5892  1492  0008               	return
  5893  1493                     __end_of___wmul:	
  5894                           
  5895                           	psect	text33
  5896  0801                     __ptext33:	
  5897 ;; *************** function ___lwtoft *****************
  5898 ;; Defined at:
  5899 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  c               2    8[COMMON] unsigned int 
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;		None
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  3    8[COMMON] float 
  5906 ;; Registers used:
  5907 ;;		wreg, status,2, status,0, pclath, cstack
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5913 ;;      Params:         3       0       0       0       0
  5914 ;;      Locals:         0       0       0       0       0
  5915 ;;      Temps:          1       0       0       0       0
  5916 ;;      Totals:         4       0       0       0       0
  5917 ;;Total ram usage:        4 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    1
  5920 ;; This function calls:
  5921 ;;		___ftpack
  5922 ;; This function is called by:
  5923 ;;		_Fuzzy
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           
  5928                           ;psect for function ___lwtoft
  5929  0801                     ___lwtoft:	
  5930                           
  5931                           ;incstack = 0
  5932                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5933  0801  0878               	movf	___lwtoft@c,w
  5934  0802  00F0               	movwf	___ftpack@arg
  5935  0803  0879               	movf	___lwtoft@c+1,w
  5936  0804  00F1               	movwf	___ftpack@arg+1
  5937  0805  01F2               	clrf	___ftpack@arg+2
  5938  0806  308E               	movlw	142
  5939  0807  00FB               	movwf	??___lwtoft
  5940  0808  087B               	movf	??___lwtoft,w
  5941  0809  00F3               	movwf	___ftpack@exp
  5942  080A  01F4               	clrf	___ftpack@sign
  5943  080B  160A  118A  25A2   	fcall	___ftpack
  5944  080E  0870               	movf	?___ftpack,w
  5945  080F  00F8               	movwf	?___lwtoft
  5946  0810  0871               	movf	?___ftpack+1,w
  5947  0811  00F9               	movwf	?___lwtoft+1
  5948  0812  0872               	movf	?___ftpack+2,w
  5949  0813  00FA               	movwf	?___lwtoft+2
  5950  0814  0008               	return
  5951  0815                     __end_of___lwtoft:	
  5952                           
  5953                           	psect	text34
  5954  1772                     __ptext34:	
  5955 ;; *************** function ___fttol *****************
  5956 ;; Defined at:
  5957 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  f1              3   12[BANK0 ] float 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  lval            4   21[BANK0 ] unsigned long 
  5962 ;;  exp1            1   25[BANK0 ] unsigned char 
  5963 ;;  sign1           1   20[BANK0 ] unsigned char 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  4   12[BANK0 ] long 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5973 ;;      Params:         0       4       0       0       0
  5974 ;;      Locals:         0       6       0       0       0
  5975 ;;      Temps:          0       4       0       0       0
  5976 ;;      Totals:         0      14       0       0       0
  5977 ;;Total ram usage:       14 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; This function calls:
  5980 ;;		Nothing
  5981 ;; This function is called by:
  5982 ;;		_Fuzzy
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           
  5987                           ;psect for function ___fttol
  5988  1772                     ___fttol:	
  5989                           
  5990                           ;incstack = 0
  5991                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5992  1772  1283               	bcf	3,5	;RP0=0, select bank0
  5993  1773  1303               	bcf	3,6	;RP1=0, select bank0
  5994  1774  082C               	movf	___fttol@f1,w
  5995  1775  00B0               	movwf	??___fttol
  5996  1776  082D               	movf	___fttol@f1+1,w
  5997  1777  00B1               	movwf	??___fttol+1
  5998  1778  082E               	movf	___fttol@f1+2,w
  5999  1779  00B2               	movwf	??___fttol+2
  6000  177A  1003               	clrc
  6001  177B  0D31               	rlf	??___fttol+1,w
  6002  177C  0D32               	rlf	??___fttol+2,w
  6003  177D  00B3               	movwf	??___fttol+3
  6004  177E  0833               	movf	??___fttol+3,w
  6005  177F  00B9               	movwf	___fttol@exp1
  6006  1780  08B9               	movf	___fttol@exp1,f
  6007  1781  1D03               	skipz
  6008  1782  2F8C               	goto	i1l2477
  6009  1783  3000               	movlw	0
  6010  1784  00AF               	movwf	?___fttol+3
  6011  1785  3000               	movlw	0
  6012  1786  00AE               	movwf	?___fttol+2
  6013  1787  3000               	movlw	0
  6014  1788  00AD               	movwf	?___fttol+1
  6015  1789  3000               	movlw	0
  6016  178A  00AC               	movwf	?___fttol
  6017  178B  0008               	return
  6018  178C                     i1l2477:	
  6019  178C  082C               	movf	___fttol@f1,w
  6020  178D  00B0               	movwf	??___fttol
  6021  178E  082D               	movf	___fttol@f1+1,w
  6022  178F  00B1               	movwf	??___fttol+1
  6023  1790  082E               	movf	___fttol@f1+2,w
  6024  1791  00B2               	movwf	??___fttol+2
  6025  1792  3017               	movlw	23
  6026  1793                     u289_25:	
  6027  1793  1003               	clrc
  6028  1794  0CB2               	rrf	??___fttol+2,f
  6029  1795  0CB1               	rrf	??___fttol+1,f
  6030  1796  0CB0               	rrf	??___fttol,f
  6031  1797  3EFF               	addlw	-1
  6032  1798  1D03               	skipz
  6033  1799  2F93               	goto	u289_25
  6034  179A  0830               	movf	??___fttol,w
  6035  179B  00B3               	movwf	??___fttol+3
  6036  179C  0833               	movf	??___fttol+3,w
  6037  179D  00B4               	movwf	___fttol@sign1
  6038  179E  17AD               	bsf	___fttol@f1+1,7
  6039  179F  30FF               	movlw	255
  6040  17A0  05AC               	andwf	___fttol@f1,f
  6041  17A1  30FF               	movlw	255
  6042  17A2  05AD               	andwf	___fttol@f1+1,f
  6043  17A3  3000               	movlw	0
  6044  17A4  05AE               	andwf	___fttol@f1+2,f
  6045  17A5  082C               	movf	___fttol@f1,w
  6046  17A6  00B5               	movwf	___fttol@lval
  6047  17A7  082D               	movf	___fttol@f1+1,w
  6048  17A8  00B6               	movwf	___fttol@lval+1
  6049  17A9  082E               	movf	___fttol@f1+2,w
  6050  17AA  00B7               	movwf	___fttol@lval+2
  6051  17AB  01B8               	clrf	___fttol@lval+3
  6052  17AC  308E               	movlw	142
  6053  17AD  02B9               	subwf	___fttol@exp1,f
  6054  17AE  1FB9               	btfss	___fttol@exp1,7
  6055  17AF  2FCE               	goto	i1l2497
  6056  17B0  0839               	movf	___fttol@exp1,w
  6057  17B1  3A80               	xorlw	128
  6058  17B2  3E8F               	addlw	143
  6059  17B3  1803               	skipnc
  6060  17B4  2FBE               	goto	i1l2495
  6061  17B5  3000               	movlw	0
  6062  17B6  00AF               	movwf	?___fttol+3
  6063  17B7  3000               	movlw	0
  6064  17B8  00AE               	movwf	?___fttol+2
  6065  17B9  3000               	movlw	0
  6066  17BA  00AD               	movwf	?___fttol+1
  6067  17BB  3000               	movlw	0
  6068  17BC  00AC               	movwf	?___fttol
  6069  17BD  0008               	return
  6070  17BE                     i1l2495:	
  6071  17BE  3001               	movlw	1
  6072  17BF                     u292_25:	
  6073  17BF  1003               	clrc
  6074  17C0  0CB8               	rrf	___fttol@lval+3,f
  6075  17C1  0CB7               	rrf	___fttol@lval+2,f
  6076  17C2  0CB6               	rrf	___fttol@lval+1,f
  6077  17C3  0CB5               	rrf	___fttol@lval,f
  6078  17C4  3EFF               	addlw	-1
  6079  17C5  1D03               	skipz
  6080  17C6  2FBF               	goto	u292_25
  6081  17C7  3001               	movlw	1
  6082  17C8  00B0               	movwf	??___fttol
  6083  17C9  0830               	movf	??___fttol,w
  6084  17CA  07B9               	addwf	___fttol@exp1,f
  6085  17CB  1903               	btfsc	3,2
  6086  17CC  2FE9               	goto	i1l2507
  6087  17CD  2FBE               	goto	i1l2495
  6088  17CE                     i1l2497:	
  6089  17CE  3018               	movlw	24
  6090  17CF  0239               	subwf	___fttol@exp1,w
  6091  17D0  1C03               	skipc
  6092  17D1  2FE6               	goto	i1l2505
  6093  17D2  3000               	movlw	0
  6094  17D3  00AF               	movwf	?___fttol+3
  6095  17D4  3000               	movlw	0
  6096  17D5  00AE               	movwf	?___fttol+2
  6097  17D6  3000               	movlw	0
  6098  17D7  00AD               	movwf	?___fttol+1
  6099  17D8  3000               	movlw	0
  6100  17D9  00AC               	movwf	?___fttol
  6101  17DA  0008               	return
  6102  17DB                     i1l2503:	
  6103  17DB  3001               	movlw	1
  6104  17DC  00B0               	movwf	??___fttol
  6105  17DD                     u295_25:	
  6106  17DD  1003               	clrc
  6107  17DE  0DB5               	rlf	___fttol@lval,f
  6108  17DF  0DB6               	rlf	___fttol@lval+1,f
  6109  17E0  0DB7               	rlf	___fttol@lval+2,f
  6110  17E1  0DB8               	rlf	___fttol@lval+3,f
  6111  17E2  0BB0               	decfsz	??___fttol,f
  6112  17E3  2FDD               	goto	u295_25
  6113  17E4  3001               	movlw	1
  6114  17E5  02B9               	subwf	___fttol@exp1,f
  6115  17E6                     i1l2505:	
  6116  17E6  08B9               	movf	___fttol@exp1,f
  6117  17E7  1D03               	skipz
  6118  17E8  2FDB               	goto	i1l2503
  6119  17E9                     i1l2507:	
  6120  17E9  0834               	movf	___fttol@sign1,w
  6121  17EA  1903               	btfsc	3,2
  6122  17EB  2FF7               	goto	i1l2511
  6123  17EC  09B5               	comf	___fttol@lval,f
  6124  17ED  09B6               	comf	___fttol@lval+1,f
  6125  17EE  09B7               	comf	___fttol@lval+2,f
  6126  17EF  09B8               	comf	___fttol@lval+3,f
  6127  17F0  0AB5               	incf	___fttol@lval,f
  6128  17F1  1903               	skipnz
  6129  17F2  0AB6               	incf	___fttol@lval+1,f
  6130  17F3  1903               	skipnz
  6131  17F4  0AB7               	incf	___fttol@lval+2,f
  6132  17F5  1903               	skipnz
  6133  17F6  0AB8               	incf	___fttol@lval+3,f
  6134  17F7                     i1l2511:	
  6135  17F7  0838               	movf	___fttol@lval+3,w
  6136  17F8  00AF               	movwf	?___fttol+3
  6137  17F9  0837               	movf	___fttol@lval+2,w
  6138  17FA  00AE               	movwf	?___fttol+2
  6139  17FB  0836               	movf	___fttol@lval+1,w
  6140  17FC  00AD               	movwf	?___fttol+1
  6141  17FD  0835               	movf	___fttol@lval,w
  6142  17FE  00AC               	movwf	?___fttol
  6143  17FF  0008               	return
  6144  1800                     __end_of___fttol:	
  6145                           
  6146                           	psect	text35
  6147  0B49                     __ptext35:	
  6148 ;; *************** function ___ftmul *****************
  6149 ;; Defined at:
  6150 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  f1              3   50[BANK0 ] float 
  6153 ;;  f2              3   53[BANK0 ] float 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
  6156 ;;  sign            1   65[BANK0 ] unsigned char 
  6157 ;;  cntr            1   64[BANK0 ] unsigned char 
  6158 ;;  exp             1   60[BANK0 ] unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  3   50[BANK0 ] float 
  6161 ;; Registers used:
  6162 ;;		wreg, status,2, status,0, pclath, cstack
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6168 ;;      Params:         0       6       0       0       0
  6169 ;;      Locals:         0       6       0       0       0
  6170 ;;      Temps:          0       4       0       0       0
  6171 ;;      Totals:         0      16       0       0       0
  6172 ;;Total ram usage:       16 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:    1
  6175 ;; This function calls:
  6176 ;;		___ftpack
  6177 ;; This function is called by:
  6178 ;;		_Fuzzy
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           
  6183                           ;psect for function ___ftmul
  6184  0B49                     ___ftmul:	
  6185                           
  6186                           ;incstack = 0
  6187                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6188  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  6189  0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  6190  0B4B  0852               	movf	___ftmul@f1,w
  6191  0B4C  00D8               	movwf	??___ftmul
  6192  0B4D  0853               	movf	___ftmul@f1+1,w
  6193  0B4E  00D9               	movwf	??___ftmul+1
  6194  0B4F  0854               	movf	___ftmul@f1+2,w
  6195  0B50  00DA               	movwf	??___ftmul+2
  6196  0B51  1003               	clrc
  6197  0B52  0D59               	rlf	??___ftmul+1,w
  6198  0B53  0D5A               	rlf	??___ftmul+2,w
  6199  0B54  00DB               	movwf	??___ftmul+3
  6200  0B55  085B               	movf	??___ftmul+3,w
  6201  0B56  00DC               	movwf	___ftmul@exp
  6202  0B57  08DC               	movf	___ftmul@exp,f
  6203  0B58  1D03               	skipz
  6204  0B59  2B61               	goto	i1l2427
  6205  0B5A  3000               	movlw	0
  6206  0B5B  00D2               	movwf	?___ftmul
  6207  0B5C  3000               	movlw	0
  6208  0B5D  00D3               	movwf	?___ftmul+1
  6209  0B5E  3000               	movlw	0
  6210  0B5F  00D4               	movwf	?___ftmul+2
  6211  0B60  0008               	return
  6212  0B61                     i1l2427:	
  6213  0B61  0855               	movf	___ftmul@f2,w
  6214  0B62  00D8               	movwf	??___ftmul
  6215  0B63  0856               	movf	___ftmul@f2+1,w
  6216  0B64  00D9               	movwf	??___ftmul+1
  6217  0B65  0857               	movf	___ftmul@f2+2,w
  6218  0B66  00DA               	movwf	??___ftmul+2
  6219  0B67  1003               	clrc
  6220  0B68  0D59               	rlf	??___ftmul+1,w
  6221  0B69  0D5A               	rlf	??___ftmul+2,w
  6222  0B6A  00DB               	movwf	??___ftmul+3
  6223  0B6B  085B               	movf	??___ftmul+3,w
  6224  0B6C  00E1               	movwf	___ftmul@sign
  6225  0B6D  08E1               	movf	___ftmul@sign,f
  6226  0B6E  1D03               	skipz
  6227  0B6F  2B77               	goto	i1l2433
  6228  0B70  3000               	movlw	0
  6229  0B71  00D2               	movwf	?___ftmul
  6230  0B72  3000               	movlw	0
  6231  0B73  00D3               	movwf	?___ftmul+1
  6232  0B74  3000               	movlw	0
  6233  0B75  00D4               	movwf	?___ftmul+2
  6234  0B76  0008               	return
  6235  0B77                     i1l2433:	
  6236  0B77  0861               	movf	___ftmul@sign,w
  6237  0B78  3E7B               	addlw	123
  6238  0B79  00D8               	movwf	??___ftmul
  6239  0B7A  0858               	movf	??___ftmul,w
  6240  0B7B  07DC               	addwf	___ftmul@exp,f
  6241  0B7C  0852               	movf	___ftmul@f1,w
  6242  0B7D  00D8               	movwf	??___ftmul
  6243  0B7E  0853               	movf	___ftmul@f1+1,w
  6244  0B7F  00D9               	movwf	??___ftmul+1
  6245  0B80  0854               	movf	___ftmul@f1+2,w
  6246  0B81  00DA               	movwf	??___ftmul+2
  6247  0B82  3010               	movlw	16
  6248  0B83                     u276_25:	
  6249  0B83  1003               	clrc
  6250  0B84  0CDA               	rrf	??___ftmul+2,f
  6251  0B85  0CD9               	rrf	??___ftmul+1,f
  6252  0B86  0CD8               	rrf	??___ftmul,f
  6253  0B87  3EFF               	addlw	-1
  6254  0B88  1D03               	skipz
  6255  0B89  2B83               	goto	u276_25
  6256  0B8A  0858               	movf	??___ftmul,w
  6257  0B8B  00DB               	movwf	??___ftmul+3
  6258  0B8C  085B               	movf	??___ftmul+3,w
  6259  0B8D  00E1               	movwf	___ftmul@sign
  6260  0B8E  0855               	movf	___ftmul@f2,w
  6261  0B8F  00D8               	movwf	??___ftmul
  6262  0B90  0856               	movf	___ftmul@f2+1,w
  6263  0B91  00D9               	movwf	??___ftmul+1
  6264  0B92  0857               	movf	___ftmul@f2+2,w
  6265  0B93  00DA               	movwf	??___ftmul+2
  6266  0B94  3010               	movlw	16
  6267  0B95                     u277_25:	
  6268  0B95  1003               	clrc
  6269  0B96  0CDA               	rrf	??___ftmul+2,f
  6270  0B97  0CD9               	rrf	??___ftmul+1,f
  6271  0B98  0CD8               	rrf	??___ftmul,f
  6272  0B99  3EFF               	addlw	-1
  6273  0B9A  1D03               	skipz
  6274  0B9B  2B95               	goto	u277_25
  6275  0B9C  0858               	movf	??___ftmul,w
  6276  0B9D  00DB               	movwf	??___ftmul+3
  6277  0B9E  085B               	movf	??___ftmul+3,w
  6278  0B9F  06E1               	xorwf	___ftmul@sign,f
  6279  0BA0  3080               	movlw	128
  6280  0BA1  00D8               	movwf	??___ftmul
  6281  0BA2  0858               	movf	??___ftmul,w
  6282  0BA3  05E1               	andwf	___ftmul@sign,f
  6283  0BA4  17D3               	bsf	___ftmul@f1+1,7
  6284  0BA5  17D6               	bsf	___ftmul@f2+1,7
  6285  0BA6  30FF               	movlw	255
  6286  0BA7  05D5               	andwf	___ftmul@f2,f
  6287  0BA8  30FF               	movlw	255
  6288  0BA9  05D6               	andwf	___ftmul@f2+1,f
  6289  0BAA  3000               	movlw	0
  6290  0BAB  05D7               	andwf	___ftmul@f2+2,f
  6291  0BAC  3000               	movlw	0
  6292  0BAD  00DD               	movwf	___ftmul@f3_as_product
  6293  0BAE  3000               	movlw	0
  6294  0BAF  00DE               	movwf	___ftmul@f3_as_product+1
  6295  0BB0  3000               	movlw	0
  6296  0BB1  00DF               	movwf	___ftmul@f3_as_product+2
  6297  0BB2  3007               	movlw	7
  6298  0BB3  00D8               	movwf	??___ftmul
  6299  0BB4  0858               	movf	??___ftmul,w
  6300  0BB5  00E0               	movwf	___ftmul@cntr
  6301  0BB6                     i1l2445:	
  6302  0BB6  1C52               	btfss	___ftmul@f1,0
  6303  0BB7  2BC6               	goto	i1l2449
  6304  0BB8  0855               	movf	___ftmul@f2,w
  6305  0BB9  07DD               	addwf	___ftmul@f3_as_product,f
  6306  0BBA  0856               	movf	___ftmul@f2+1,w
  6307  0BBB  1103               	clrz
  6308  0BBC  1803               	skipnc
  6309  0BBD  0A56               	incf	___ftmul@f2+1,w
  6310  0BBE  1D03               	btfss	3,2
  6311  0BBF  07DE               	addwf	___ftmul@f3_as_product+1,f
  6312  0BC0  0857               	movf	___ftmul@f2+2,w
  6313  0BC1  1103               	clrz
  6314  0BC2  1803               	skipnc
  6315  0BC3  0A57               	incf	___ftmul@f2+2,w
  6316  0BC4  1D03               	btfss	3,2
  6317  0BC5  07DF               	addwf	___ftmul@f3_as_product+2,f
  6318  0BC6                     i1l2449:	
  6319  0BC6  3001               	movlw	1
  6320  0BC7                     u280_25:	
  6321  0BC7  1003               	clrc
  6322  0BC8  0CD4               	rrf	___ftmul@f1+2,f
  6323  0BC9  0CD3               	rrf	___ftmul@f1+1,f
  6324  0BCA  0CD2               	rrf	___ftmul@f1,f
  6325  0BCB  3EFF               	addlw	-1
  6326  0BCC  1D03               	skipz
  6327  0BCD  2BC7               	goto	u280_25
  6328  0BCE  3001               	movlw	1
  6329  0BCF                     u281_25:	
  6330  0BCF  1003               	clrc
  6331  0BD0  0DD5               	rlf	___ftmul@f2,f
  6332  0BD1  0DD6               	rlf	___ftmul@f2+1,f
  6333  0BD2  0DD7               	rlf	___ftmul@f2+2,f
  6334  0BD3  3EFF               	addlw	-1
  6335  0BD4  1D03               	skipz
  6336  0BD5  2BCF               	goto	u281_25
  6337  0BD6  3001               	movlw	1
  6338  0BD7  02E0               	subwf	___ftmul@cntr,f
  6339  0BD8  1D03               	btfss	3,2
  6340  0BD9  2BB6               	goto	i1l2445
  6341  0BDA  3009               	movlw	9
  6342  0BDB  00D8               	movwf	??___ftmul
  6343  0BDC  0858               	movf	??___ftmul,w
  6344  0BDD  00E0               	movwf	___ftmul@cntr
  6345  0BDE                     i1l2457:	
  6346  0BDE  1C52               	btfss	___ftmul@f1,0
  6347  0BDF  2BEE               	goto	i1l2461
  6348  0BE0  0855               	movf	___ftmul@f2,w
  6349  0BE1  07DD               	addwf	___ftmul@f3_as_product,f
  6350  0BE2  0856               	movf	___ftmul@f2+1,w
  6351  0BE3  1103               	clrz
  6352  0BE4  1803               	skipnc
  6353  0BE5  0A56               	incf	___ftmul@f2+1,w
  6354  0BE6  1D03               	btfss	3,2
  6355  0BE7  07DE               	addwf	___ftmul@f3_as_product+1,f
  6356  0BE8  0857               	movf	___ftmul@f2+2,w
  6357  0BE9  1103               	clrz
  6358  0BEA  1803               	skipnc
  6359  0BEB  0A57               	incf	___ftmul@f2+2,w
  6360  0BEC  1D03               	btfss	3,2
  6361  0BED  07DF               	addwf	___ftmul@f3_as_product+2,f
  6362  0BEE                     i1l2461:	
  6363  0BEE  3001               	movlw	1
  6364  0BEF                     u285_25:	
  6365  0BEF  1003               	clrc
  6366  0BF0  0CD4               	rrf	___ftmul@f1+2,f
  6367  0BF1  0CD3               	rrf	___ftmul@f1+1,f
  6368  0BF2  0CD2               	rrf	___ftmul@f1,f
  6369  0BF3  3EFF               	addlw	-1
  6370  0BF4  1D03               	skipz
  6371  0BF5  2BEF               	goto	u285_25
  6372  0BF6  3001               	movlw	1
  6373  0BF7                     u286_25:	
  6374  0BF7  1003               	clrc
  6375  0BF8  0CDF               	rrf	___ftmul@f3_as_product+2,f
  6376  0BF9  0CDE               	rrf	___ftmul@f3_as_product+1,f
  6377  0BFA  0CDD               	rrf	___ftmul@f3_as_product,f
  6378  0BFB  3EFF               	addlw	-1
  6379  0BFC  1D03               	skipz
  6380  0BFD  2BF7               	goto	u286_25
  6381  0BFE  3001               	movlw	1
  6382  0BFF  02E0               	subwf	___ftmul@cntr,f
  6383  0C00  1D03               	btfss	3,2
  6384  0C01  2BDE               	goto	i1l2457
  6385  0C02  085D               	movf	___ftmul@f3_as_product,w
  6386  0C03  00F0               	movwf	___ftpack@arg
  6387  0C04  085E               	movf	___ftmul@f3_as_product+1,w
  6388  0C05  00F1               	movwf	___ftpack@arg+1
  6389  0C06  085F               	movf	___ftmul@f3_as_product+2,w
  6390  0C07  00F2               	movwf	___ftpack@arg+2
  6391  0C08  085C               	movf	___ftmul@exp,w
  6392  0C09  00D8               	movwf	??___ftmul
  6393  0C0A  0858               	movf	??___ftmul,w
  6394  0C0B  00F3               	movwf	___ftpack@exp
  6395  0C0C  0861               	movf	___ftmul@sign,w
  6396  0C0D  00D9               	movwf	??___ftmul+1
  6397  0C0E  0859               	movf	??___ftmul+1,w
  6398  0C0F  00F4               	movwf	___ftpack@sign
  6399  0C10  160A  118A  25A2   	fcall	___ftpack
  6400  0C13  0870               	movf	?___ftpack,w
  6401  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  6402  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  6403  0C16  00D2               	movwf	?___ftmul
  6404  0C17  0871               	movf	?___ftpack+1,w
  6405  0C18  00D3               	movwf	?___ftmul+1
  6406  0C19  0872               	movf	?___ftpack+2,w
  6407  0C1A  00D4               	movwf	?___ftmul+2
  6408  0C1B  0008               	return
  6409  0C1C                     __end_of___ftmul:	
  6410                           
  6411                           	psect	text36
  6412  13E7                     __ptext36:	
  6413 ;; *************** function ___awtoft *****************
  6414 ;; Defined at:
  6415 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  c               2    8[COMMON] int 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  sign            1   13[COMMON] unsigned char 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  3    8[COMMON] float 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0, pclath, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6429 ;;      Params:         3       0       0       0       0
  6430 ;;      Locals:         1       0       0       0       0
  6431 ;;      Temps:          2       0       0       0       0
  6432 ;;      Totals:         6       0       0       0       0
  6433 ;;Total ram usage:        6 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    1
  6436 ;; This function calls:
  6437 ;;		___ftpack
  6438 ;; This function is called by:
  6439 ;;		_Fuzzy
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           
  6444                           ;psect for function ___awtoft
  6445  13E7                     ___awtoft:	
  6446                           
  6447                           ;incstack = 0
  6448                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6449  13E7  01FD               	clrf	___awtoft@sign
  6450  13E8  1FF9               	btfss	___awtoft@c+1,7
  6451  13E9  2BF1               	goto	i1l2417
  6452  13EA  09F8               	comf	___awtoft@c,f
  6453  13EB  09F9               	comf	___awtoft@c+1,f
  6454  13EC  0AF8               	incf	___awtoft@c,f
  6455  13ED  1903               	skipnz
  6456  13EE  0AF9               	incf	___awtoft@c+1,f
  6457  13EF  01FD               	clrf	___awtoft@sign
  6458  13F0  0AFD               	incf	___awtoft@sign,f
  6459  13F1                     i1l2417:	
  6460  13F1  0878               	movf	___awtoft@c,w
  6461  13F2  00F0               	movwf	___ftpack@arg
  6462  13F3  0879               	movf	___awtoft@c+1,w
  6463  13F4  00F1               	movwf	___ftpack@arg+1
  6464  13F5  01F2               	clrf	___ftpack@arg+2
  6465  13F6  308E               	movlw	142
  6466  13F7  00FB               	movwf	??___awtoft
  6467  13F8  087B               	movf	??___awtoft,w
  6468  13F9  00F3               	movwf	___ftpack@exp
  6469  13FA  087D               	movf	___awtoft@sign,w
  6470  13FB  00FC               	movwf	??___awtoft+1
  6471  13FC  087C               	movf	??___awtoft+1,w
  6472  13FD  00F4               	movwf	___ftpack@sign
  6473  13FE  160A  118A  25A2   	fcall	___ftpack
  6474  1401  0870               	movf	?___ftpack,w
  6475  1402  00F8               	movwf	?___awtoft
  6476  1403  0871               	movf	?___ftpack+1,w
  6477  1404  00F9               	movwf	?___awtoft+1
  6478  1405  0872               	movf	?___ftpack+2,w
  6479  1406  00FA               	movwf	?___awtoft+2
  6480  1407  0008               	return
  6481  1408                     __end_of___awtoft:	
  6482                           
  6483                           	psect	text37
  6484  15A2                     __ptext37:	
  6485 ;; *************** function ___ftpack *****************
  6486 ;; Defined at:
  6487 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  arg             3    0[COMMON] unsigned um
  6490 ;;  exp             1    3[COMMON] unsigned char 
  6491 ;;  sign            1    4[COMMON] unsigned char 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  3    0[COMMON] float 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6503 ;;      Params:         5       0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0
  6505 ;;      Temps:          3       0       0       0       0
  6506 ;;      Totals:         8       0       0       0       0
  6507 ;;Total ram usage:        8 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		___awtoft
  6513 ;;		___ftadd
  6514 ;;		___ftdiv
  6515 ;;		___ftmul
  6516 ;;		___lwtoft
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           
  6521                           ;psect for function ___ftpack
  6522  15A2                     ___ftpack:	
  6523                           
  6524                           ;incstack = 0
  6525                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6526  15A2  0873               	movf	___ftpack@exp,w
  6527  15A3  1903               	btfsc	3,2
  6528  15A4  2DAA               	goto	i1l2109
  6529  15A5  0872               	movf	___ftpack@arg+2,w
  6530  15A6  0471               	iorwf	___ftpack@arg+1,w
  6531  15A7  0470               	iorwf	___ftpack@arg,w
  6532  15A8  1D03               	skipz
  6533  15A9  2DBD               	goto	i1l2115
  6534  15AA                     i1l2109:	
  6535  15AA  3000               	movlw	0
  6536  15AB  00F0               	movwf	?___ftpack
  6537  15AC  3000               	movlw	0
  6538  15AD  00F1               	movwf	?___ftpack+1
  6539  15AE  3000               	movlw	0
  6540  15AF  00F2               	movwf	?___ftpack+2
  6541  15B0  0008               	return
  6542  15B1                     i1l2113:	
  6543  15B1  3001               	movlw	1
  6544  15B2  00F5               	movwf	??___ftpack
  6545  15B3  0875               	movf	??___ftpack,w
  6546  15B4  07F3               	addwf	___ftpack@exp,f
  6547  15B5  3001               	movlw	1
  6548  15B6                     u199_25:	
  6549  15B6  1003               	clrc
  6550  15B7  0CF2               	rrf	___ftpack@arg+2,f
  6551  15B8  0CF1               	rrf	___ftpack@arg+1,f
  6552  15B9  0CF0               	rrf	___ftpack@arg,f
  6553  15BA  3EFF               	addlw	-1
  6554  15BB  1D03               	skipz
  6555  15BC  2DB6               	goto	u199_25
  6556  15BD                     i1l2115:	
  6557  15BD  30FE               	movlw	254
  6558  15BE  0572               	andwf	___ftpack@arg+2,w
  6559  15BF  1903               	btfsc	3,2
  6560  15C0  2DD8               	goto	i1l729
  6561  15C1  2DB1               	goto	i1l2113
  6562  15C2                     i1l2117:	
  6563  15C2  3001               	movlw	1
  6564  15C3  00F5               	movwf	??___ftpack
  6565  15C4  0875               	movf	??___ftpack,w
  6566  15C5  07F3               	addwf	___ftpack@exp,f
  6567  15C6  3001               	movlw	1
  6568  15C7  07F0               	addwf	___ftpack@arg,f
  6569  15C8  3000               	movlw	0
  6570  15C9  1803               	skipnc
  6571  15CA  3001               	movlw	1
  6572  15CB  07F1               	addwf	___ftpack@arg+1,f
  6573  15CC  3000               	movlw	0
  6574  15CD  1803               	skipnc
  6575  15CE  3001               	movlw	1
  6576  15CF  07F2               	addwf	___ftpack@arg+2,f
  6577  15D0  3001               	movlw	1
  6578  15D1                     u201_25:	
  6579  15D1  1003               	clrc
  6580  15D2  0CF2               	rrf	___ftpack@arg+2,f
  6581  15D3  0CF1               	rrf	___ftpack@arg+1,f
  6582  15D4  0CF0               	rrf	___ftpack@arg,f
  6583  15D5  3EFF               	addlw	-1
  6584  15D6  1D03               	skipz
  6585  15D7  2DD1               	goto	u201_25
  6586  15D8                     i1l729:	
  6587  15D8  30FF               	movlw	255
  6588  15D9  0572               	andwf	___ftpack@arg+2,w
  6589  15DA  1903               	btfsc	3,2
  6590  15DB  2DE7               	goto	i1l2125
  6591  15DC  2DC2               	goto	i1l2117
  6592  15DD                     i1l2123:	
  6593  15DD  3001               	movlw	1
  6594  15DE  02F3               	subwf	___ftpack@exp,f
  6595  15DF  3001               	movlw	1
  6596  15E0                     u203_25:	
  6597  15E0  1003               	clrc
  6598  15E1  0DF0               	rlf	___ftpack@arg,f
  6599  15E2  0DF1               	rlf	___ftpack@arg+1,f
  6600  15E3  0DF2               	rlf	___ftpack@arg+2,f
  6601  15E4  3EFF               	addlw	-1
  6602  15E5  1D03               	skipz
  6603  15E6  2DE0               	goto	u203_25
  6604  15E7                     i1l2125:	
  6605  15E7  1FF1               	btfss	___ftpack@arg+1,7
  6606  15E8  2DDD               	goto	i1l2123
  6607  15E9  1873               	btfsc	___ftpack@exp,0
  6608  15EA  2DF1               	goto	i1l735
  6609  15EB  30FF               	movlw	255
  6610  15EC  05F0               	andwf	___ftpack@arg,f
  6611  15ED  307F               	movlw	127
  6612  15EE  05F1               	andwf	___ftpack@arg+1,f
  6613  15EF  30FF               	movlw	255
  6614  15F0  05F2               	andwf	___ftpack@arg+2,f
  6615  15F1                     i1l735:	
  6616  15F1  1003               	clrc
  6617  15F2  0CF3               	rrf	___ftpack@exp,f
  6618  15F3  0873               	movf	___ftpack@exp,w
  6619  15F4  00F5               	movwf	??___ftpack
  6620  15F5  01F6               	clrf	??___ftpack+1
  6621  15F6  01F7               	clrf	??___ftpack+2
  6622  15F7  3010               	movlw	16
  6623  15F8                     u206_25:	
  6624  15F8  1003               	clrc
  6625  15F9  0DF5               	rlf	??___ftpack,f
  6626  15FA  0DF6               	rlf	??___ftpack+1,f
  6627  15FB  0DF7               	rlf	??___ftpack+2,f
  6628  15FC  3EFF               	addlw	-1
  6629  15FD  1D03               	skipz
  6630  15FE  2DF8               	goto	u206_25
  6631  15FF  0875               	movf	??___ftpack,w
  6632  1600  04F0               	iorwf	___ftpack@arg,f
  6633  1601  0876               	movf	??___ftpack+1,w
  6634  1602  04F1               	iorwf	___ftpack@arg+1,f
  6635  1603  0877               	movf	??___ftpack+2,w
  6636  1604  04F2               	iorwf	___ftpack@arg+2,f
  6637  1605  0874               	movf	___ftpack@sign,w
  6638  1606  1903               	btfsc	3,2
  6639  1607  0008               	return
  6640  1608  17F2               	bsf	___ftpack@arg+2,7
  6641  1609  0008               	return
  6642  160A                     __end_of___ftpack:	
  6643  007E                     btemp	set	126	;btemp
  6644  007E                     wtemp	set	126
  6645  007E                     wtemp0	set	126
  6646  0080                     wtemp1	set	128
  6647  0082                     wtemp2	set	130
  6648  0084                     wtemp3	set	132
  6649  0086                     wtemp4	set	134
  6650  0088                     wtemp5	set	136
  6651  007F                     wtemp6	set	127
  6652  007E                     ttemp	set	126
  6653  007E                     ttemp0	set	126
  6654  0081                     ttemp1	set	129
  6655  0084                     ttemp2	set	132
  6656  0087                     ttemp3	set	135
  6657  007F                     ttemp4	set	127
  6658  007E                     ltemp	set	126
  6659  007E                     ltemp0	set	126
  6660  0082                     ltemp1	set	130
  6661  0086                     ltemp2	set	134
  6662  0080                     ltemp3	set	128
  6663                           
  6664                           	psect	text22_split_1
  6665  16EC                     L11:	
  6666  16EC  01F9               	clrf	___awtoft@c+1
  6667  16ED  07F9               	addwf	___awtoft@c+1,f
  6668  16EE  0870               	movf	?_abs,w
  6669  16EF  01F8               	clrf	___awtoft@c
  6670  16F0  07F8               	addwf	___awtoft@c,f
  6671  16F1  160A  118A  23E7  160A  118A  	fcall	___awtoft
  6672  16F6  0878               	movf	?___awtoft,w
  6673  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  6674  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  6675  16F9  00A0               	movwf	minimo@a
  6676  16FA  0879               	movf	?___awtoft+1,w
  6677  16FB  00A1               	movwf	minimo@a+1
  6678  16FC  087A               	movf	?___awtoft+2,w
  6679  16FD  00A2               	movwf	minimo@a+2
  6680  16FE  120A  118A  27E2  160A  118A  	fcall	_minimo
  6681  1703  1283               	bcf	3,5	;RP0=0, select bank0
  6682  1704  1303               	bcf	3,6	;RP1=0, select bank0
  6683  1705  0820               	movf	?_minimo,w
  6684  1706  00A6               	movwf	maximo@a
  6685  1707  0821               	movf	?_minimo+1,w
  6686  1708  00A7               	movwf	maximo@a+1
  6687  1709  0822               	movf	?_minimo+2,w
  6688  170A  00A8               	movwf	maximo@a+2
  6689  170B  160A  118A  2389  160A  118A  	fcall	_maximo
  6690  1710  1283               	bcf	3,5	;RP0=0, select bank0
  6691  1711  1303               	bcf	3,6	;RP1=0, select bank0
  6692  1712  0826               	movf	?_maximo,w
  6693  1713  00AC               	movwf	___fttol@f1
  6694  1714  0827               	movf	?_maximo+1,w
  6695  1715  00AD               	movwf	___fttol@f1+1
  6696  1716  0828               	movf	?_maximo+2,w
  6697  1717  00AE               	movwf	___fttol@f1+2
  6698  1718  160A  118A  2772  160A  118A  	fcall	___fttol
  6699  171D  1283               	bcf	3,5	;RP0=0, select bank0
  6700  171E  1303               	bcf	3,6	;RP1=0, select bank0
  6701  171F  082D               	movf	?___fttol+1,w
  6702  1720  1683               	bsf	3,5	;RP0=1, select bank1
  6703  1721  1303               	bcf	3,6	;RP1=0, select bank1
  6704  1722  01B3               	clrf	(Fuzzy@delta+1)^(0+128)
  6705  1723  07B3               	addwf	(Fuzzy@delta+1)^(0+128),f
  6706  1724  1283               	bcf	3,5	;RP0=0, select bank0
  6707  1725  1303               	bcf	3,6	;RP1=0, select bank0
  6708  1726  082C               	movf	?___fttol,w
  6709  1727  1683               	bsf	3,5	;RP0=1, select bank1
  6710  1728  1303               	bcf	3,6	;RP1=0, select bank1
  6711  1729  01B2               	clrf	Fuzzy@delta^(0+128)
  6712  172A  07B2               	addwf	Fuzzy@delta^(0+128),f
  6713                           
  6714                           ;main.c: 189: float x = 0;
  6715  172B  3000               	movlw	0
  6716  172C  00BF               	movwf	Fuzzy@x^(0+128)
  6717  172D  3000               	movlw	0
  6718  172E  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6719  172F  3000               	movlw	0
  6720  1730  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6721                           
  6722                           ;main.c: 190: float rule = 0;
  6723  1731  3000               	movlw	0
  6724  1732  00BC               	movwf	Fuzzy@rule^(0+128)
  6725  1733  3000               	movlw	0
  6726  1734  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  6727  1735  3000               	movlw	0
  6728  1736  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  6729                           
  6730                           ;main.c: 193: if (deltaV <= 100) {
  6731  1737  3000               	movlw	0
  6732  1738  0254               	subwf	(_deltaV+1)^(0+128),w
  6733  1739  3065               	movlw	101
  6734  173A  1903               	skipnz
  6735  173B  0253               	subwf	_deltaV^(0+128),w
  6736  173C  120A  118A  1803   	skipnc
  6737  173F  2875               	goto	i1l3879
  6738                           
  6739                           ;main.c: 195: rule = trapmf(deltaV, -1, 0, 1, 100);
  6740  1740  0854               	movf	(_deltaV+1)^(0+128),w
  6741  1741  01F9               	clrf	___lwtoft@c+1
  6742  1742  07F9               	addwf	___lwtoft@c+1,f
  6743  1743  0853               	movf	_deltaV^(0+128),w
  6744  1744  01F8               	clrf	___lwtoft@c
  6745  1745  07F8               	addwf	___lwtoft@c,f
  6746  1746  120A  158A  2001  160A  118A  	fcall	___lwtoft
  6747  174B  0878               	movf	?___lwtoft,w
  6748  174C  1283               	bcf	3,5	;RP0=0, select bank0
  6749  174D  1303               	bcf	3,6	;RP1=0, select bank0
  6750  174E  00C0               	movwf	trapmf@x
  6751  174F  0879               	movf	?___lwtoft+1,w
  6752  1750  00C1               	movwf	trapmf@x+1
  6753  1751  087A               	movf	?___lwtoft+2,w
  6754  1752  00C2               	movwf	trapmf@x+2
  6755  1753  3000               	movlw	0
  6756  1754  00C3               	movwf	trapmf@a
  6757  1755  3080               	movlw	128
  6758  1756  00C4               	movwf	trapmf@a+1
  6759  1757  30BF               	movlw	191
  6760  1758  00C5               	movwf	trapmf@a+2
  6761  1759  3000               	movlw	0
  6762  175A  00C6               	movwf	trapmf@b
  6763  175B  3000               	movlw	0
  6764  175C  00C7               	movwf	trapmf@b+1
  6765  175D  3000               	movlw	0
  6766  175E  00C8               	movwf	trapmf@b+2
  6767  175F  3000               	movlw	0
  6768  1760  00C9               	movwf	trapmf@c
  6769  1761  3080               	movlw	128
  6770  1762  00CA               	movwf	trapmf@c+1
  6771  1763  303F               	movlw	63
  6772  1764  00CB               	movwf	trapmf@c+2
  6773  1765  3000               	movlw	0
  6774  1766  00CC               	movwf	trapmf@d
  6775  1767  30C8               	movlw	200
  6776  1768  00CD               	movwf	trapmf@d+1
  6777  1769  3042               	movlw	66
  6778  176A  00CE               	movwf	trapmf@d+2
  6779  176B  120A  158A  2525   	fcall	_trapmf
  6780  176E  1283               	bcf	3,5	;RP0=0, select bank0
  6781  176F  120A  158A  2937   	ljmp	L12
  6782                           
  6783                           	psect	text22_split_2
  6784  0937                     L12:	
  6785  0937  1303               	bcf	3,6	;RP1=0, select bank0
  6786  0938  0840               	movf	?_trapmf,w
  6787  0939  1683               	bsf	3,5	;RP0=1, select bank1
  6788  093A  1303               	bcf	3,6	;RP1=0, select bank1
  6789  093B  00BC               	movwf	Fuzzy@rule^(0+128)
  6790  093C  1283               	bcf	3,5	;RP0=0, select bank0
  6791  093D  1303               	bcf	3,6	;RP1=0, select bank0
  6792  093E  0841               	movf	?_trapmf+1,w
  6793  093F  1683               	bsf	3,5	;RP0=1, select bank1
  6794  0940  1303               	bcf	3,6	;RP1=0, select bank1
  6795  0941  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  6796  0942  1283               	bcf	3,5	;RP0=0, select bank0
  6797  0943  1303               	bcf	3,6	;RP1=0, select bank0
  6798  0944  0842               	movf	?_trapmf+2,w
  6799  0945  1683               	bsf	3,5	;RP0=1, select bank1
  6800  0946  1303               	bcf	3,6	;RP1=0, select bank1
  6801  0947  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  6802                           
  6803                           ;main.c: 197: x = 0;
  6804  0948  3000               	movlw	0
  6805  0949  00BF               	movwf	Fuzzy@x^(0+128)
  6806  094A  3000               	movlw	0
  6807  094B  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6808  094C  3000               	movlw	0
  6809  094D  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6810                           
  6811                           ;main.c: 198: for (int a = 0; a <= 15; a++) {
  6812  094E  01AA               	clrf	Fuzzy@a^(0+128)
  6813  094F  01AB               	clrf	(Fuzzy@a+1)^(0+128)
  6814  0950  082B               	movf	(Fuzzy@a+1)^(0+128),w
  6815  0951  3A80               	xorlw	128
  6816  0952  00FF               	movwf	127
  6817  0953  3080               	movlw	128
  6818  0954  027F               	subwf	127,w
  6819  0955  1D03               	skipz
  6820  0956  2959               	goto	u526_25
  6821  0957  3010               	movlw	16
  6822  0958  022A               	subwf	Fuzzy@a^(0+128),w
  6823  0959                     u526_25:	
  6824  0959  1803               	btfsc	3,0
  6825  095A  29D8               	goto	L15
  6826  095B                     i1l3869:	
  6827                           
  6828                           ;main.c: 199: rulepequeno = trapmf(x, -1, 0, 0, 5);
  6829  095B  1683               	bsf	3,5	;RP0=1, select bank1
  6830  095C  1303               	bcf	3,6	;RP1=0, select bank1
  6831  095D  083F               	movf	Fuzzy@x^(0+128),w
  6832  095E  1283               	bcf	3,5	;RP0=0, select bank0
  6833  095F  1303               	bcf	3,6	;RP1=0, select bank0
  6834  0960  00C0               	movwf	trapmf@x
  6835  0961  1683               	bsf	3,5	;RP0=1, select bank1
  6836  0962  1303               	bcf	3,6	;RP1=0, select bank1
  6837  0963  0840               	movf	(Fuzzy@x+1)^(0+128),w
  6838  0964  1283               	bcf	3,5	;RP0=0, select bank0
  6839  0965  1303               	bcf	3,6	;RP1=0, select bank0
  6840  0966  00C1               	movwf	trapmf@x+1
  6841  0967  1683               	bsf	3,5	;RP0=1, select bank1
  6842  0968  1303               	bcf	3,6	;RP1=0, select bank1
  6843  0969  0841               	movf	(Fuzzy@x+2)^(0+128),w
  6844  096A  1283               	bcf	3,5	;RP0=0, select bank0
  6845  096B  1303               	bcf	3,6	;RP1=0, select bank0
  6846  096C  00C2               	movwf	trapmf@x+2
  6847  096D  3000               	movlw	0
  6848  096E  00C3               	movwf	trapmf@a
  6849  096F  3080               	movlw	128
  6850  0970  00C4               	movwf	trapmf@a+1
  6851  0971  30BF               	movlw	191
  6852  0972  00C5               	movwf	trapmf@a+2
  6853  0973  3000               	movlw	0
  6854  0974  00C6               	movwf	trapmf@b
  6855  0975  3000               	movlw	0
  6856  0976  00C7               	movwf	trapmf@b+1
  6857  0977  3000               	movlw	0
  6858  0978  00C8               	movwf	trapmf@b+2
  6859  0979  3000               	movlw	0
  6860  097A  00C9               	movwf	trapmf@c
  6861  097B  3000               	movlw	0
  6862  097C  00CA               	movwf	trapmf@c+1
  6863  097D  3000               	movlw	0
  6864  097E  00CB               	movwf	trapmf@c+2
  6865  097F  3000               	movlw	0
  6866  0980  00CC               	movwf	trapmf@d
  6867  0981  30A0               	movlw	160
  6868  0982  00CD               	movwf	trapmf@d+1
  6869  0983  3040               	movlw	64
  6870  0984  00CE               	movwf	trapmf@d+2
  6871  0985  120A  158A  2525  120A  158A  	fcall	_trapmf
  6872  098A  1283               	bcf	3,5	;RP0=0, select bank0
  6873  098B  1303               	bcf	3,6	;RP1=0, select bank0
  6874  098C  0840               	movf	?_trapmf,w
  6875  098D  1683               	bsf	3,5	;RP0=1, select bank1
  6876  098E  1303               	bcf	3,6	;RP1=0, select bank1
  6877  098F  00C8               	movwf	_rulepequeno^(0+128)
  6878  0990  1283               	bcf	3,5	;RP0=0, select bank0
  6879  0991  1303               	bcf	3,6	;RP1=0, select bank0
  6880  0992  0841               	movf	?_trapmf+1,w
  6881  0993  1683               	bsf	3,5	;RP0=1, select bank1
  6882  0994  1303               	bcf	3,6	;RP1=0, select bank1
  6883  0995  00C9               	movwf	(_rulepequeno+1)^(0+128)
  6884  0996  1283               	bcf	3,5	;RP0=0, select bank0
  6885  0997  1303               	bcf	3,6	;RP1=0, select bank0
  6886  0998  0842               	movf	?_trapmf+2,w
  6887  0999  1683               	bsf	3,5	;RP0=1, select bank1
  6888  099A  1303               	bcf	3,6	;RP1=0, select bank1
  6889  099B  00CA               	movwf	(_rulepequeno+2)^(0+128)
  6890                           
  6891                           ;main.c: 200: if (rulepequeno >= rule) {
  6892  099C  0848               	movf	_rulepequeno^(0+128),w
  6893  099D  00F0               	movwf	___ftge@ff1
  6894  099E  0849               	movf	(_rulepequeno+1)^(0+128),w
  6895  099F  00F1               	movwf	___ftge@ff1+1
  6896  09A0  084A               	movf	(_rulepequeno+2)^(0+128),w
  6897  09A1  00F2               	movwf	___ftge@ff1+2
  6898  09A2  083C               	movf	Fuzzy@rule^(0+128),w
  6899  09A3  00F3               	movwf	___ftge@ff2
  6900  09A4  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  6901  09A5  00F4               	movwf	___ftge@ff2+1
  6902  09A6  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  6903  09A7  00F5               	movwf	___ftge@ff2+2
  6904  09A8  160A  118A  2545  120A  158A  	fcall	___ftge
  6905  09AD  1C03               	btfss	3,0
  6906  09AE  29B7               	goto	i1l3873
  6907                           
  6908                           ;main.c: 201: rulepequeno = rule;
  6909  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  6910  09B0  1303               	bcf	3,6	;RP1=0, select bank1
  6911  09B1  083C               	movf	Fuzzy@rule^(0+128),w
  6912  09B2  00C8               	movwf	_rulepequeno^(0+128)
  6913  09B3  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  6914  09B4  00C9               	movwf	(_rulepequeno+1)^(0+128)
  6915  09B5  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  6916  09B6  00CA               	movwf	(_rulepequeno+2)^(0+128)
  6917  09B7                     i1l3873:	
  6918                           
  6919                           ;main.c: 202: }
  6920                           ;main.c: 204: x += 1;
  6921  09B7  3000               	movlw	0
  6922  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  6923  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  6924  09BA  00A3               	movwf	___ftadd@f1
  6925  09BB  3080               	movlw	128
  6926  09BC  00A4               	movwf	___ftadd@f1+1
  6927  09BD  303F               	movlw	63
  6928  09BE  00A5               	movwf	___ftadd@f1+2
  6929  09BF  1683               	bsf	3,5	;RP0=1, select bank1
  6930  09C0  1303               	bcf	3,6	;RP1=0, select bank1
  6931  09C1  083F               	movf	Fuzzy@x^(0+128),w
  6932  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  6933  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  6934  09C4  00A6               	movwf	___ftadd@f2
  6935  09C5  1683               	bsf	3,5	;RP0=1, select bank1
  6936  09C6  1303               	bcf	3,6	;RP1=0, select bank1
  6937  09C7  0840               	movf	(Fuzzy@x+1)^(0+128),w
  6938  09C8  1283               	bcf	3,5	;RP0=0, select bank0
  6939  09C9  1303               	bcf	3,6	;RP1=0, select bank0
  6940  09CA  00A7               	movwf	___ftadd@f2+1
  6941  09CB  1683               	bsf	3,5	;RP0=1, select bank1
  6942  09CC  1303               	bcf	3,6	;RP1=0, select bank1
  6943  09CD  0841               	movf	(Fuzzy@x+2)^(0+128),w
  6944  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  6945  09CF  1303               	bcf	3,6	;RP1=0, select bank0
  6946  09D0  00A8               	movwf	___ftadd@f2+2
  6947  09D1  120A  158A  241C   	fcall	___ftadd
  6948  09D4  1283               	bcf	3,5	;RP0=0, select bank0
  6949  09D5  120A  118A  2853   	ljmp	L13
  6950  09D8                     L15:	
  6951  09D8  120A  118A  2875   	ljmp	i1l3879
  6952                           
  6953                           	psect	text22_split_3
  6954  0053                     L13:	
  6955  0053  1303               	bcf	3,6	;RP1=0, select bank0
  6956  0054  0823               	movf	?___ftadd,w
  6957  0055  1683               	bsf	3,5	;RP0=1, select bank1
  6958  0056  1303               	bcf	3,6	;RP1=0, select bank1
  6959  0057  00BF               	movwf	Fuzzy@x^(0+128)
  6960  0058  1283               	bcf	3,5	;RP0=0, select bank0
  6961  0059  1303               	bcf	3,6	;RP1=0, select bank0
  6962  005A  0824               	movf	?___ftadd+1,w
  6963  005B  1683               	bsf	3,5	;RP0=1, select bank1
  6964  005C  1303               	bcf	3,6	;RP1=0, select bank1
  6965  005D  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6966  005E  1283               	bcf	3,5	;RP0=0, select bank0
  6967  005F  1303               	bcf	3,6	;RP1=0, select bank0
  6968  0060  0825               	movf	?___ftadd+2,w
  6969  0061  1683               	bsf	3,5	;RP0=1, select bank1
  6970  0062  1303               	bcf	3,6	;RP1=0, select bank1
  6971  0063  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6972  0064  3001               	movlw	1
  6973  0065  07AA               	addwf	Fuzzy@a^(0+128),f
  6974  0066  1803               	skipnc
  6975  0067  0AAB               	incf	(Fuzzy@a+1)^(0+128),f
  6976  0068  3000               	movlw	0
  6977  0069  07AB               	addwf	(Fuzzy@a+1)^(0+128),f
  6978  006A  082B               	movf	(Fuzzy@a+1)^(0+128),w
  6979  006B  3A80               	xorlw	128
  6980  006C  00FF               	movwf	127
  6981  006D  3080               	movlw	128
  6982  006E  027F               	subwf	127,w
  6983  006F  1D03               	skipz
  6984  0070  2873               	goto	u528_25
  6985  0071  3010               	movlw	16
  6986  0072  022A               	subwf	Fuzzy@a^(0+128),w
  6987  0073                     u528_25:	
  6988  0073  1C03               	skipc
  6989  0074  2FDF               	goto	L16
  6990  0075                     i1l3879:	
  6991                           
  6992                           ;main.c: 205: }
  6993                           ;main.c: 206: }
  6994                           ;main.c: 209: if (deltaV >= 100 && deltaV <= 1001 && delta <= 200)
  6995  0075  3000               	movlw	0
  6996  0076  1683               	bsf	3,5	;RP0=1, select bank1
  6997  0077  1303               	bcf	3,6	;RP1=0, select bank1
  6998  0078  0254               	subwf	(_deltaV+1)^(0+128),w
  6999  0079  3064               	movlw	100
  7000  007A  1903               	skipnz
  7001  007B  0253               	subwf	_deltaV^(0+128),w
  7002  007C  1C03               	skipc
  7003  007D  2A0C               	goto	i1l3905
  7004  007E  3003               	movlw	3
  7005  007F  0254               	subwf	(_deltaV+1)^(0+128),w
  7006  0080  30EA               	movlw	234
  7007  0081  1903               	skipnz
  7008  0082  0253               	subwf	_deltaV^(0+128),w
  7009  0083  1803               	skipnc
  7010  0084  2A0C               	goto	i1l3905
  7011  0085  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7012  0086  3A80               	xorlw	128
  7013  0087  00FF               	movwf	127
  7014  0088  3080               	movlw	128
  7015  0089  027F               	subwf	127,w
  7016  008A  1D03               	skipz
  7017  008B  288E               	goto	u531_25
  7018  008C  30C9               	movlw	201
  7019  008D  0232               	subwf	Fuzzy@delta^(0+128),w
  7020  008E                     u531_25:	
  7021  008E  1803               	skipnc
  7022  008F  2A0C               	goto	i1l3905
  7023                           
  7024                           ;main.c: 210: {
  7025                           ;main.c: 212: rule = trapmf(deltaV, 50, 800, 800, 1550) * (1 - trapmf(delta, -1, 0, 1, 2
      +                          00));
  7026  0090  3000               	movlw	0
  7027  0091  1283               	bcf	3,5	;RP0=0, select bank0
  7028  0092  1303               	bcf	3,6	;RP1=0, select bank0
  7029  0093  00CC               	movwf	trapmf@d
  7030  0094  3048               	movlw	72
  7031  0095  00CD               	movwf	trapmf@d+1
  7032  0096  3043               	movlw	67
  7033  0097  00CE               	movwf	trapmf@d+2
  7034  0098  3000               	movlw	0
  7035  0099  00C9               	movwf	trapmf@c
  7036  009A  3080               	movlw	128
  7037  009B  00CA               	movwf	trapmf@c+1
  7038  009C  303F               	movlw	63
  7039  009D  00CB               	movwf	trapmf@c+2
  7040  009E  3000               	movlw	0
  7041  009F  00C6               	movwf	trapmf@b
  7042  00A0  3000               	movlw	0
  7043  00A1  00C7               	movwf	trapmf@b+1
  7044  00A2  3000               	movlw	0
  7045  00A3  00C8               	movwf	trapmf@b+2
  7046  00A4  3000               	movlw	0
  7047  00A5  00C3               	movwf	trapmf@a
  7048  00A6  3080               	movlw	128
  7049  00A7  00C4               	movwf	trapmf@a+1
  7050  00A8  30BF               	movlw	191
  7051  00A9  00C5               	movwf	trapmf@a+2
  7052  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  7053  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  7054  00AC  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7055  00AD  01F9               	clrf	___awtoft@c+1
  7056  00AE  07F9               	addwf	___awtoft@c+1,f
  7057  00AF  0832               	movf	Fuzzy@delta^(0+128),w
  7058  00B0  01F8               	clrf	___awtoft@c
  7059  00B1  07F8               	addwf	___awtoft@c,f
  7060  00B2  160A  118A  23E7  120A  118A  	fcall	___awtoft
  7061  00B7  0878               	movf	?___awtoft,w
  7062  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  7063  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  7064  00BA  00C0               	movwf	trapmf@x
  7065  00BB  0879               	movf	?___awtoft+1,w
  7066  00BC  00C1               	movwf	trapmf@x+1
  7067  00BD  087A               	movf	?___awtoft+2,w
  7068  00BE  00C2               	movwf	trapmf@x+2
  7069  00BF  120A  158A  2525  120A  118A  	fcall	_trapmf
  7070  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  7071  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  7072  00C6  0840               	movf	?_trapmf,w
  7073  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  7074  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  7075  00C9  00A0               	movwf	_Fuzzy$1692^(0+128)
  7076  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  7077  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  7078  00CC  0841               	movf	?_trapmf+1,w
  7079  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  7080  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  7081  00CF  00A1               	movwf	(_Fuzzy$1692+1)^(0+128)
  7082  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  7083  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  7084  00D2  0842               	movf	?_trapmf+2,w
  7085  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  7086  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  7087  00D5  00A2               	movwf	(_Fuzzy$1692+2)^(0+128)
  7088                           
  7089                           ;main.c: 210: {
  7090                           ;main.c: 212: rule = trapmf(deltaV, 50, 800, 800, 1550) * (1 - trapmf(delta, -1, 0, 1, 2
      +                          00));
  7091  00D6  30C0               	movlw	192
  7092  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  7093  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  7094  00D9  00CC               	movwf	trapmf@d
  7095  00DA  30C1               	movlw	193
  7096  00DB  00CD               	movwf	trapmf@d+1
  7097  00DC  3044               	movlw	68
  7098  00DD  00CE               	movwf	trapmf@d+2
  7099  00DE  3000               	movlw	0
  7100  00DF  00C9               	movwf	trapmf@c
  7101  00E0  3048               	movlw	72
  7102  00E1  00CA               	movwf	trapmf@c+1
  7103  00E2  3044               	movlw	68
  7104  00E3  00CB               	movwf	trapmf@c+2
  7105  00E4  3000               	movlw	0
  7106  00E5  00C6               	movwf	trapmf@b
  7107  00E6  3048               	movlw	72
  7108  00E7  00C7               	movwf	trapmf@b+1
  7109  00E8  3044               	movlw	68
  7110  00E9  00C8               	movwf	trapmf@b+2
  7111  00EA  3000               	movlw	0
  7112  00EB  00C3               	movwf	trapmf@a
  7113  00EC  3048               	movlw	72
  7114  00ED  00C4               	movwf	trapmf@a+1
  7115  00EE  3042               	movlw	66
  7116  00EF  00C5               	movwf	trapmf@a+2
  7117  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  7118  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  7119  00F2  0854               	movf	(_deltaV+1)^(0+128),w
  7120  00F3  01F9               	clrf	___lwtoft@c+1
  7121  00F4  07F9               	addwf	___lwtoft@c+1,f
  7122  00F5  0853               	movf	_deltaV^(0+128),w
  7123  00F6  01F8               	clrf	___lwtoft@c
  7124  00F7  07F8               	addwf	___lwtoft@c,f
  7125  00F8  120A  158A  2001  120A  118A  	fcall	___lwtoft
  7126  00FD  0878               	movf	?___lwtoft,w
  7127  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  7128  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  7129  0100  00C0               	movwf	trapmf@x
  7130  0101  0879               	movf	?___lwtoft+1,w
  7131  0102  00C1               	movwf	trapmf@x+1
  7132  0103  087A               	movf	?___lwtoft+2,w
  7133  0104  00C2               	movwf	trapmf@x+2
  7134  0105  120A  158A  2525  120A  118A  	fcall	_trapmf
  7135  010A  1283               	bcf	3,5	;RP0=0, select bank0
  7136  010B  1303               	bcf	3,6	;RP1=0, select bank0
  7137  010C  0840               	movf	?_trapmf,w
  7138  010D  00D2               	movwf	___ftmul@f1
  7139  010E  0841               	movf	?_trapmf+1,w
  7140  010F  00D3               	movwf	___ftmul@f1+1
  7141  0110  0842               	movf	?_trapmf+2,w
  7142  0111  00D4               	movwf	___ftmul@f1+2
  7143  0112  3000               	movlw	0
  7144  0113  00A3               	movwf	___ftadd@f1
  7145  0114  3080               	movlw	128
  7146  0115  00A4               	movwf	___ftadd@f1+1
  7147  0116  303F               	movlw	63
  7148  0117  00A5               	movwf	___ftadd@f1+2
  7149  0118  1683               	bsf	3,5	;RP0=1, select bank1
  7150  0119  1303               	bcf	3,6	;RP1=0, select bank1
  7151  011A  0820               	movf	_Fuzzy$1692^(0+128),w
  7152  011B  1283               	bcf	3,5	;RP0=0, select bank0
  7153  011C  1303               	bcf	3,6	;RP1=0, select bank0
  7154  011D  00A0               	movwf	___ftneg@f1
  7155  011E  1683               	bsf	3,5	;RP0=1, select bank1
  7156  011F  1303               	bcf	3,6	;RP1=0, select bank1
  7157  0120  0821               	movf	(_Fuzzy$1692+1)^(0+128),w
  7158  0121  1283               	bcf	3,5	;RP0=0, select bank0
  7159  0122  1303               	bcf	3,6	;RP1=0, select bank0
  7160  0123  00A1               	movwf	___ftneg@f1+1
  7161  0124  1683               	bsf	3,5	;RP0=1, select bank1
  7162  0125  1303               	bcf	3,6	;RP1=0, select bank1
  7163  0126  0822               	movf	(_Fuzzy$1692+2)^(0+128),w
  7164  0127  1283               	bcf	3,5	;RP0=0, select bank0
  7165  0128  1303               	bcf	3,6	;RP1=0, select bank0
  7166  0129  00A2               	movwf	___ftneg@f1+2
  7167  012A  160A  118A  22D7  120A  118A  	fcall	___ftneg
  7168  012F  1283               	bcf	3,5	;RP0=0, select bank0
  7169  0130  1303               	bcf	3,6	;RP1=0, select bank0
  7170  0131  0820               	movf	?___ftneg,w
  7171  0132  00A6               	movwf	___ftadd@f2
  7172  0133  0821               	movf	?___ftneg+1,w
  7173  0134  00A7               	movwf	___ftadd@f2+1
  7174  0135  0822               	movf	?___ftneg+2,w
  7175  0136  00A8               	movwf	___ftadd@f2+2
  7176  0137  120A  158A  241C  120A  118A  	fcall	___ftadd
  7177  013C  1283               	bcf	3,5	;RP0=0, select bank0
  7178  013D  1303               	bcf	3,6	;RP1=0, select bank0
  7179  013E  0823               	movf	?___ftadd,w
  7180  013F  00D5               	movwf	___ftmul@f2
  7181  0140  0824               	movf	?___ftadd+1,w
  7182  0141  00D6               	movwf	___ftmul@f2+1
  7183  0142  0825               	movf	?___ftadd+2,w
  7184  0143  00D7               	movwf	___ftmul@f2+2
  7185  0144  120A  158A  2349  120A  118A  	fcall	___ftmul
  7186  0149  1283               	bcf	3,5	;RP0=0, select bank0
  7187  014A  1303               	bcf	3,6	;RP1=0, select bank0
  7188  014B  0852               	movf	?___ftmul,w
  7189  014C  1683               	bsf	3,5	;RP0=1, select bank1
  7190  014D  1303               	bcf	3,6	;RP1=0, select bank1
  7191  014E  00BC               	movwf	Fuzzy@rule^(0+128)
  7192  014F  1283               	bcf	3,5	;RP0=0, select bank0
  7193  0150  1303               	bcf	3,6	;RP1=0, select bank0
  7194  0151  0853               	movf	?___ftmul+1,w
  7195  0152  1683               	bsf	3,5	;RP0=1, select bank1
  7196  0153  1303               	bcf	3,6	;RP1=0, select bank1
  7197  0154  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7198  0155  1283               	bcf	3,5	;RP0=0, select bank0
  7199  0156  1303               	bcf	3,6	;RP1=0, select bank0
  7200  0157  0854               	movf	?___ftmul+2,w
  7201  0158  1683               	bsf	3,5	;RP0=1, select bank1
  7202  0159  1303               	bcf	3,6	;RP1=0, select bank1
  7203  015A  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7204                           
  7205                           ;main.c: 214: x = 0;
  7206  015B  3000               	movlw	0
  7207  015C  00BF               	movwf	Fuzzy@x^(0+128)
  7208  015D  3000               	movlw	0
  7209  015E  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7210  015F  3000               	movlw	0
  7211  0160  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7212                           
  7213                           ;main.c: 215: for (int a = 0; a <= 15; a++) {
  7214  0161  01AC               	clrf	Fuzzy@a_244^(0+128)
  7215  0162  01AD               	clrf	(Fuzzy@a_244+1)^(0+128)
  7216  0163  082D               	movf	(Fuzzy@a_244+1)^(0+128),w
  7217  0164  3A80               	xorlw	128
  7218  0165  00FF               	movwf	127
  7219  0166  3080               	movlw	128
  7220  0167  027F               	subwf	127,w
  7221  0168  1D03               	skipz
  7222  0169  296C               	goto	u532_25
  7223  016A  3010               	movlw	16
  7224  016B  022C               	subwf	Fuzzy@a_244^(0+128),w
  7225  016C                     u532_25:	
  7226  016C  1803               	btfsc	3,0
  7227  016D  2A0C               	goto	i1l3905
  7228  016E                     i1l3895:	
  7229                           
  7230                           ;main.c: 216: rulepequeno = trapmf(x, 2, 5, 5, 10);
  7231  016E  1683               	bsf	3,5	;RP0=1, select bank1
  7232  016F  1303               	bcf	3,6	;RP1=0, select bank1
  7233  0170  083F               	movf	Fuzzy@x^(0+128),w
  7234  0171  1283               	bcf	3,5	;RP0=0, select bank0
  7235  0172  1303               	bcf	3,6	;RP1=0, select bank0
  7236  0173  00C0               	movwf	trapmf@x
  7237  0174  1683               	bsf	3,5	;RP0=1, select bank1
  7238  0175  1303               	bcf	3,6	;RP1=0, select bank1
  7239  0176  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7240  0177  1283               	bcf	3,5	;RP0=0, select bank0
  7241  0178  1303               	bcf	3,6	;RP1=0, select bank0
  7242  0179  00C1               	movwf	trapmf@x+1
  7243  017A  1683               	bsf	3,5	;RP0=1, select bank1
  7244  017B  1303               	bcf	3,6	;RP1=0, select bank1
  7245  017C  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7246  017D  1283               	bcf	3,5	;RP0=0, select bank0
  7247  017E  1303               	bcf	3,6	;RP1=0, select bank0
  7248  017F  00C2               	movwf	trapmf@x+2
  7249  0180  3000               	movlw	0
  7250  0181  00C3               	movwf	trapmf@a
  7251  0182  3000               	movlw	0
  7252  0183  00C4               	movwf	trapmf@a+1
  7253  0184  3040               	movlw	64
  7254  0185  00C5               	movwf	trapmf@a+2
  7255  0186  3000               	movlw	0
  7256  0187  00C6               	movwf	trapmf@b
  7257  0188  30A0               	movlw	160
  7258  0189  00C7               	movwf	trapmf@b+1
  7259  018A  3040               	movlw	64
  7260  018B  00C8               	movwf	trapmf@b+2
  7261  018C  3000               	movlw	0
  7262  018D  00C9               	movwf	trapmf@c
  7263  018E  30A0               	movlw	160
  7264  018F  00CA               	movwf	trapmf@c+1
  7265  0190  3040               	movlw	64
  7266  0191  00CB               	movwf	trapmf@c+2
  7267  0192  3000               	movlw	0
  7268  0193  00CC               	movwf	trapmf@d
  7269  0194  3020               	movlw	32
  7270  0195  00CD               	movwf	trapmf@d+1
  7271  0196  3041               	movlw	65
  7272  0197  00CE               	movwf	trapmf@d+2
  7273  0198  120A  158A  2525  120A  118A  	fcall	_trapmf
  7274  019D  1283               	bcf	3,5	;RP0=0, select bank0
  7275  019E  1303               	bcf	3,6	;RP1=0, select bank0
  7276  019F  0840               	movf	?_trapmf,w
  7277  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  7278  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  7279  01A2  00C8               	movwf	_rulepequeno^(0+128)
  7280  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  7281  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  7282  01A5  0841               	movf	?_trapmf+1,w
  7283  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  7284  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  7285  01A8  00C9               	movwf	(_rulepequeno+1)^(0+128)
  7286  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  7287  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  7288  01AB  0842               	movf	?_trapmf+2,w
  7289  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  7290  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  7291  01AE  00CA               	movwf	(_rulepequeno+2)^(0+128)
  7292                           
  7293                           ;main.c: 217: if (rulepequeno >= rule) {
  7294  01AF  0848               	movf	_rulepequeno^(0+128),w
  7295  01B0  00F0               	movwf	___ftge@ff1
  7296  01B1  0849               	movf	(_rulepequeno+1)^(0+128),w
  7297  01B2  00F1               	movwf	___ftge@ff1+1
  7298  01B3  084A               	movf	(_rulepequeno+2)^(0+128),w
  7299  01B4  00F2               	movwf	___ftge@ff1+2
  7300  01B5  083C               	movf	Fuzzy@rule^(0+128),w
  7301  01B6  00F3               	movwf	___ftge@ff2
  7302  01B7  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7303  01B8  00F4               	movwf	___ftge@ff2+1
  7304  01B9  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7305  01BA  00F5               	movwf	___ftge@ff2+2
  7306  01BB  160A  118A  2545  120A  118A  	fcall	___ftge
  7307  01C0  1C03               	btfss	3,0
  7308  01C1  29CA               	goto	i1l3899
  7309                           
  7310                           ;main.c: 218: rulepequeno = rule;
  7311  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  7312  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  7313  01C4  083C               	movf	Fuzzy@rule^(0+128),w
  7314  01C5  00C8               	movwf	_rulepequeno^(0+128)
  7315  01C6  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7316  01C7  00C9               	movwf	(_rulepequeno+1)^(0+128)
  7317  01C8  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7318  01C9  00CA               	movwf	(_rulepequeno+2)^(0+128)
  7319  01CA                     i1l3899:	
  7320                           
  7321                           ;main.c: 219: }
  7322                           ;main.c: 221: x += 1;
  7323  01CA  3000               	movlw	0
  7324  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  7325  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  7326  01CD  00A3               	movwf	___ftadd@f1
  7327  01CE  3080               	movlw	128
  7328  01CF  00A4               	movwf	___ftadd@f1+1
  7329  01D0  303F               	movlw	63
  7330  01D1  00A5               	movwf	___ftadd@f1+2
  7331  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  7332  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  7333  01D4  083F               	movf	Fuzzy@x^(0+128),w
  7334  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7335  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7336  01D7  00A6               	movwf	___ftadd@f2
  7337  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  7338  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  7339  01DA  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7340  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  7341  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  7342  01DD  00A7               	movwf	___ftadd@f2+1
  7343  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  7344  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  7345  01E0  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7346  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  7347  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  7348  01E3  00A8               	movwf	___ftadd@f2+2
  7349  01E4  120A  158A  241C  120A  118A  	fcall	___ftadd
  7350  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  7351  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  7352  01EB  0823               	movf	?___ftadd,w
  7353  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  7354  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  7355  01EE  00BF               	movwf	Fuzzy@x^(0+128)
  7356  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  7357  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  7358  01F1  0824               	movf	?___ftadd+1,w
  7359  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  7360  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  7361  01F4  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7362  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  7363  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  7364  01F7  0825               	movf	?___ftadd+2,w
  7365  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  7366  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  7367  01FA  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7368  01FB  3001               	movlw	1
  7369  01FC  07AC               	addwf	Fuzzy@a_244^(0+128),f
  7370  01FD  1803               	skipnc
  7371  01FE  0AAD               	incf	(Fuzzy@a_244+1)^(0+128),f
  7372  01FF  3000               	movlw	0
  7373  0200  07AD               	addwf	(Fuzzy@a_244+1)^(0+128),f
  7374  0201  082D               	movf	(Fuzzy@a_244+1)^(0+128),w
  7375  0202  3A80               	xorlw	128
  7376  0203  00FF               	movwf	127
  7377  0204  3080               	movlw	128
  7378  0205  027F               	subwf	127,w
  7379  0206  1D03               	skipz
  7380  0207  2A0A               	goto	u534_25
  7381  0208  3010               	movlw	16
  7382  0209  022C               	subwf	Fuzzy@a_244^(0+128),w
  7383  020A                     u534_25:	
  7384  020A  1C03               	skipc
  7385  020B  296E               	goto	i1l3895
  7386  020C                     i1l3905:	
  7387                           
  7388                           ;main.c: 222: }
  7389                           ;main.c: 223: }
  7390                           ;main.c: 226: if (deltaV >= 100 && deltaV <= 1001 && delta >= 201)
  7391  020C  3000               	movlw	0
  7392  020D  1683               	bsf	3,5	;RP0=1, select bank1
  7393  020E  1303               	bcf	3,6	;RP1=0, select bank1
  7394  020F  0254               	subwf	(_deltaV+1)^(0+128),w
  7395  0210  3064               	movlw	100
  7396  0211  1903               	skipnz
  7397  0212  0253               	subwf	_deltaV^(0+128),w
  7398  0213  1C03               	skipc
  7399  0214  2B65               	goto	i1l3931
  7400  0215  3003               	movlw	3
  7401  0216  0254               	subwf	(_deltaV+1)^(0+128),w
  7402  0217  30EA               	movlw	234
  7403  0218  1903               	skipnz
  7404  0219  0253               	subwf	_deltaV^(0+128),w
  7405  021A  1803               	skipnc
  7406  021B  2B65               	goto	i1l3931
  7407  021C  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7408  021D  3A80               	xorlw	128
  7409  021E  00FF               	movwf	127
  7410  021F  3080               	movlw	128
  7411  0220  027F               	subwf	127,w
  7412  0221  1D03               	skipz
  7413  0222  2A25               	goto	u537_25
  7414  0223  30C9               	movlw	201
  7415  0224  0232               	subwf	Fuzzy@delta^(0+128),w
  7416  0225                     u537_25:	
  7417  0225  1C03               	skipc
  7418  0226  2B65               	goto	i1l3931
  7419                           
  7420                           ;main.c: 227: {
  7421                           ;main.c: 229: rule = trapmf(deltaV, 50, 800, 800, 1550) *
  7422                           ;main.c: 230: trapmf(delta, 200, 500, 2000, 2001);
  7423  0227  3020               	movlw	32
  7424  0228  1283               	bcf	3,5	;RP0=0, select bank0
  7425  0229  1303               	bcf	3,6	;RP1=0, select bank0
  7426  022A  00CC               	movwf	trapmf@d
  7427  022B  30FA               	movlw	250
  7428  022C  00CD               	movwf	trapmf@d+1
  7429  022D  3044               	movlw	68
  7430  022E  00CE               	movwf	trapmf@d+2
  7431  022F  3000               	movlw	0
  7432  0230  00C9               	movwf	trapmf@c
  7433  0231  30FA               	movlw	250
  7434  0232  00CA               	movwf	trapmf@c+1
  7435  0233  3044               	movlw	68
  7436  0234  00CB               	movwf	trapmf@c+2
  7437  0235  3000               	movlw	0
  7438  0236  00C6               	movwf	trapmf@b
  7439  0237  30FA               	movlw	250
  7440  0238  00C7               	movwf	trapmf@b+1
  7441  0239  3043               	movlw	67
  7442  023A  00C8               	movwf	trapmf@b+2
  7443  023B  3000               	movlw	0
  7444  023C  00C3               	movwf	trapmf@a
  7445  023D  3048               	movlw	72
  7446  023E  00C4               	movwf	trapmf@a+1
  7447  023F  3043               	movlw	67
  7448  0240  00C5               	movwf	trapmf@a+2
  7449  0241  1683               	bsf	3,5	;RP0=1, select bank1
  7450  0242  1303               	bcf	3,6	;RP1=0, select bank1
  7451  0243  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7452  0244  01F9               	clrf	___awtoft@c+1
  7453  0245  07F9               	addwf	___awtoft@c+1,f
  7454  0246  0832               	movf	Fuzzy@delta^(0+128),w
  7455  0247  01F8               	clrf	___awtoft@c
  7456  0248  07F8               	addwf	___awtoft@c,f
  7457  0249  160A  118A  23E7  120A  118A  	fcall	___awtoft
  7458  024E  0878               	movf	?___awtoft,w
  7459  024F  1283               	bcf	3,5	;RP0=0, select bank0
  7460  0250  1303               	bcf	3,6	;RP1=0, select bank0
  7461  0251  00C0               	movwf	trapmf@x
  7462  0252  0879               	movf	?___awtoft+1,w
  7463  0253  00C1               	movwf	trapmf@x+1
  7464  0254  087A               	movf	?___awtoft+2,w
  7465  0255  00C2               	movwf	trapmf@x+2
  7466  0256  120A  158A  2525  120A  118A  	fcall	_trapmf
  7467  025B  1283               	bcf	3,5	;RP0=0, select bank0
  7468  025C  1303               	bcf	3,6	;RP1=0, select bank0
  7469  025D  0840               	movf	?_trapmf,w
  7470  025E  00D2               	movwf	___ftmul@f1
  7471  025F  0841               	movf	?_trapmf+1,w
  7472  0260  00D3               	movwf	___ftmul@f1+1
  7473  0261  0842               	movf	?_trapmf+2,w
  7474  0262  00D4               	movwf	___ftmul@f1+2
  7475  0263  30C0               	movlw	192
  7476  0264  00CC               	movwf	trapmf@d
  7477  0265  30C1               	movlw	193
  7478  0266  00CD               	movwf	trapmf@d+1
  7479  0267  3044               	movlw	68
  7480  0268  00CE               	movwf	trapmf@d+2
  7481  0269  3000               	movlw	0
  7482  026A  00C9               	movwf	trapmf@c
  7483  026B  3048               	movlw	72
  7484  026C  00CA               	movwf	trapmf@c+1
  7485  026D  3044               	movlw	68
  7486  026E  00CB               	movwf	trapmf@c+2
  7487  026F  3000               	movlw	0
  7488  0270  00C6               	movwf	trapmf@b
  7489  0271  3048               	movlw	72
  7490  0272  00C7               	movwf	trapmf@b+1
  7491  0273  3044               	movlw	68
  7492  0274  00C8               	movwf	trapmf@b+2
  7493  0275  3000               	movlw	0
  7494  0276  00C3               	movwf	trapmf@a
  7495  0277  3048               	movlw	72
  7496  0278  00C4               	movwf	trapmf@a+1
  7497  0279  3042               	movlw	66
  7498  027A  00C5               	movwf	trapmf@a+2
  7499  027B  1683               	bsf	3,5	;RP0=1, select bank1
  7500  027C  1303               	bcf	3,6	;RP1=0, select bank1
  7501  027D  0854               	movf	(_deltaV+1)^(0+128),w
  7502  027E  01F9               	clrf	___lwtoft@c+1
  7503  027F  07F9               	addwf	___lwtoft@c+1,f
  7504  0280  0853               	movf	_deltaV^(0+128),w
  7505  0281  01F8               	clrf	___lwtoft@c
  7506  0282  07F8               	addwf	___lwtoft@c,f
  7507  0283  120A  158A  2001  120A  118A  	fcall	___lwtoft
  7508  0288  0878               	movf	?___lwtoft,w
  7509  0289  1283               	bcf	3,5	;RP0=0, select bank0
  7510  028A  1303               	bcf	3,6	;RP1=0, select bank0
  7511  028B  00C0               	movwf	trapmf@x
  7512  028C  0879               	movf	?___lwtoft+1,w
  7513  028D  00C1               	movwf	trapmf@x+1
  7514  028E  087A               	movf	?___lwtoft+2,w
  7515  028F  00C2               	movwf	trapmf@x+2
  7516  0290  120A  158A  2525  120A  118A  	fcall	_trapmf
  7517  0295  1283               	bcf	3,5	;RP0=0, select bank0
  7518  0296  1303               	bcf	3,6	;RP1=0, select bank0
  7519  0297  0840               	movf	?_trapmf,w
  7520  0298  00D5               	movwf	___ftmul@f2
  7521  0299  0841               	movf	?_trapmf+1,w
  7522  029A  00D6               	movwf	___ftmul@f2+1
  7523  029B  0842               	movf	?_trapmf+2,w
  7524  029C  00D7               	movwf	___ftmul@f2+2
  7525  029D  120A  158A  2349  120A  118A  	fcall	___ftmul
  7526  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  7527  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  7528  02A4  0852               	movf	?___ftmul,w
  7529  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  7530  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  7531  02A7  00BC               	movwf	Fuzzy@rule^(0+128)
  7532  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  7533  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  7534  02AA  0853               	movf	?___ftmul+1,w
  7535  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  7536  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  7537  02AD  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7538  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  7539  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  7540  02B0  0854               	movf	?___ftmul+2,w
  7541  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  7542  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  7543  02B3  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7544                           
  7545                           ;main.c: 232: x = 0;
  7546  02B4  3000               	movlw	0
  7547  02B5  00BF               	movwf	Fuzzy@x^(0+128)
  7548  02B6  3000               	movlw	0
  7549  02B7  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7550  02B8  3000               	movlw	0
  7551  02B9  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7552                           
  7553                           ;main.c: 233: for (int a = 0; a <= 15; a++) {
  7554  02BA  01AE               	clrf	Fuzzy@a_245^(0+128)
  7555  02BB  01AF               	clrf	(Fuzzy@a_245+1)^(0+128)
  7556  02BC  082F               	movf	(Fuzzy@a_245+1)^(0+128),w
  7557  02BD  3A80               	xorlw	128
  7558  02BE  00FF               	movwf	127
  7559  02BF  3080               	movlw	128
  7560  02C0  027F               	subwf	127,w
  7561  02C1  1D03               	skipz
  7562  02C2  2AC5               	goto	u538_25
  7563  02C3  3010               	movlw	16
  7564  02C4  022E               	subwf	Fuzzy@a_245^(0+128),w
  7565  02C5                     u538_25:	
  7566  02C5  1803               	btfsc	3,0
  7567  02C6  2B65               	goto	i1l3931
  7568  02C7                     i1l3921:	
  7569                           
  7570                           ;main.c: 234: rulemedio = trapmf(x, 2, 5, 5, 10);
  7571  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  7572  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  7573  02C9  083F               	movf	Fuzzy@x^(0+128),w
  7574  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  7575  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  7576  02CC  00C0               	movwf	trapmf@x
  7577  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  7578  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  7579  02CF  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7580  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  7581  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  7582  02D2  00C1               	movwf	trapmf@x+1
  7583  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  7584  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  7585  02D5  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7586  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  7587  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  7588  02D8  00C2               	movwf	trapmf@x+2
  7589  02D9  3000               	movlw	0
  7590  02DA  00C3               	movwf	trapmf@a
  7591  02DB  3000               	movlw	0
  7592  02DC  00C4               	movwf	trapmf@a+1
  7593  02DD  3040               	movlw	64
  7594  02DE  00C5               	movwf	trapmf@a+2
  7595  02DF  3000               	movlw	0
  7596  02E0  00C6               	movwf	trapmf@b
  7597  02E1  30A0               	movlw	160
  7598  02E2  00C7               	movwf	trapmf@b+1
  7599  02E3  3040               	movlw	64
  7600  02E4  00C8               	movwf	trapmf@b+2
  7601  02E5  3000               	movlw	0
  7602  02E6  00C9               	movwf	trapmf@c
  7603  02E7  30A0               	movlw	160
  7604  02E8  00CA               	movwf	trapmf@c+1
  7605  02E9  3040               	movlw	64
  7606  02EA  00CB               	movwf	trapmf@c+2
  7607  02EB  3000               	movlw	0
  7608  02EC  00CC               	movwf	trapmf@d
  7609  02ED  3020               	movlw	32
  7610  02EE  00CD               	movwf	trapmf@d+1
  7611  02EF  3041               	movlw	65
  7612  02F0  00CE               	movwf	trapmf@d+2
  7613  02F1  120A  158A  2525  120A  118A  	fcall	_trapmf
  7614  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  7615  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  7616  02F8  0840               	movf	?_trapmf,w
  7617  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  7618  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  7619  02FB  00C5               	movwf	_rulemedio^(0+128)
  7620  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  7621  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  7622  02FE  0841               	movf	?_trapmf+1,w
  7623  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  7624  0300  1303               	bcf	3,6	;RP1=0, select bank1
  7625  0301  00C6               	movwf	(_rulemedio+1)^(0+128)
  7626  0302  1283               	bcf	3,5	;RP0=0, select bank0
  7627  0303  1303               	bcf	3,6	;RP1=0, select bank0
  7628  0304  0842               	movf	?_trapmf+2,w
  7629  0305  1683               	bsf	3,5	;RP0=1, select bank1
  7630  0306  1303               	bcf	3,6	;RP1=0, select bank1
  7631  0307  00C7               	movwf	(_rulemedio+2)^(0+128)
  7632                           
  7633                           ;main.c: 236: if (rulemedio >= rule) {
  7634  0308  0845               	movf	_rulemedio^(0+128),w
  7635  0309  00F0               	movwf	___ftge@ff1
  7636  030A  0846               	movf	(_rulemedio+1)^(0+128),w
  7637  030B  00F1               	movwf	___ftge@ff1+1
  7638  030C  0847               	movf	(_rulemedio+2)^(0+128),w
  7639  030D  00F2               	movwf	___ftge@ff1+2
  7640  030E  083C               	movf	Fuzzy@rule^(0+128),w
  7641  030F  00F3               	movwf	___ftge@ff2
  7642  0310  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7643  0311  00F4               	movwf	___ftge@ff2+1
  7644  0312  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7645  0313  00F5               	movwf	___ftge@ff2+2
  7646  0314  160A  118A  2545  120A  118A  	fcall	___ftge
  7647  0319  1C03               	btfss	3,0
  7648  031A  2B23               	goto	i1l3925
  7649                           
  7650                           ;main.c: 237: rulemedio = rule;
  7651  031B  1683               	bsf	3,5	;RP0=1, select bank1
  7652  031C  1303               	bcf	3,6	;RP1=0, select bank1
  7653  031D  083C               	movf	Fuzzy@rule^(0+128),w
  7654  031E  00C5               	movwf	_rulemedio^(0+128)
  7655  031F  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7656  0320  00C6               	movwf	(_rulemedio+1)^(0+128)
  7657  0321  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7658  0322  00C7               	movwf	(_rulemedio+2)^(0+128)
  7659  0323                     i1l3925:	
  7660                           
  7661                           ;main.c: 238: }
  7662                           ;main.c: 240: x += 1;
  7663  0323  3000               	movlw	0
  7664  0324  1283               	bcf	3,5	;RP0=0, select bank0
  7665  0325  1303               	bcf	3,6	;RP1=0, select bank0
  7666  0326  00A3               	movwf	___ftadd@f1
  7667  0327  3080               	movlw	128
  7668  0328  00A4               	movwf	___ftadd@f1+1
  7669  0329  303F               	movlw	63
  7670  032A  00A5               	movwf	___ftadd@f1+2
  7671  032B  1683               	bsf	3,5	;RP0=1, select bank1
  7672  032C  1303               	bcf	3,6	;RP1=0, select bank1
  7673  032D  083F               	movf	Fuzzy@x^(0+128),w
  7674  032E  1283               	bcf	3,5	;RP0=0, select bank0
  7675  032F  1303               	bcf	3,6	;RP1=0, select bank0
  7676  0330  00A6               	movwf	___ftadd@f2
  7677  0331  1683               	bsf	3,5	;RP0=1, select bank1
  7678  0332  1303               	bcf	3,6	;RP1=0, select bank1
  7679  0333  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7680  0334  1283               	bcf	3,5	;RP0=0, select bank0
  7681  0335  1303               	bcf	3,6	;RP1=0, select bank0
  7682  0336  00A7               	movwf	___ftadd@f2+1
  7683  0337  1683               	bsf	3,5	;RP0=1, select bank1
  7684  0338  1303               	bcf	3,6	;RP1=0, select bank1
  7685  0339  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7686  033A  1283               	bcf	3,5	;RP0=0, select bank0
  7687  033B  1303               	bcf	3,6	;RP1=0, select bank0
  7688  033C  00A8               	movwf	___ftadd@f2+2
  7689  033D  120A  158A  241C  120A  118A  	fcall	___ftadd
  7690  0342  1283               	bcf	3,5	;RP0=0, select bank0
  7691  0343  1303               	bcf	3,6	;RP1=0, select bank0
  7692  0344  0823               	movf	?___ftadd,w
  7693  0345  1683               	bsf	3,5	;RP0=1, select bank1
  7694  0346  1303               	bcf	3,6	;RP1=0, select bank1
  7695  0347  00BF               	movwf	Fuzzy@x^(0+128)
  7696  0348  1283               	bcf	3,5	;RP0=0, select bank0
  7697  0349  1303               	bcf	3,6	;RP1=0, select bank0
  7698  034A  0824               	movf	?___ftadd+1,w
  7699  034B  1683               	bsf	3,5	;RP0=1, select bank1
  7700  034C  1303               	bcf	3,6	;RP1=0, select bank1
  7701  034D  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7702  034E  1283               	bcf	3,5	;RP0=0, select bank0
  7703  034F  1303               	bcf	3,6	;RP1=0, select bank0
  7704  0350  0825               	movf	?___ftadd+2,w
  7705  0351  1683               	bsf	3,5	;RP0=1, select bank1
  7706  0352  1303               	bcf	3,6	;RP1=0, select bank1
  7707  0353  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7708  0354  3001               	movlw	1
  7709  0355  07AE               	addwf	Fuzzy@a_245^(0+128),f
  7710  0356  1803               	skipnc
  7711  0357  0AAF               	incf	(Fuzzy@a_245+1)^(0+128),f
  7712  0358  3000               	movlw	0
  7713  0359  07AF               	addwf	(Fuzzy@a_245+1)^(0+128),f
  7714  035A  082F               	movf	(Fuzzy@a_245+1)^(0+128),w
  7715  035B  3A80               	xorlw	128
  7716  035C  00FF               	movwf	127
  7717  035D  3080               	movlw	128
  7718  035E  027F               	subwf	127,w
  7719  035F  1D03               	skipz
  7720  0360  2B63               	goto	u540_25
  7721  0361  3010               	movlw	16
  7722  0362  022E               	subwf	Fuzzy@a_245^(0+128),w
  7723  0363                     u540_25:	
  7724  0363  1C03               	skipc
  7725  0364  2AC7               	goto	i1l3921
  7726  0365                     i1l3931:	
  7727                           
  7728                           ;main.c: 241: }
  7729                           ;main.c: 242: }
  7730                           ;main.c: 245: if (deltaV >= 1001)
  7731  0365  3003               	movlw	3
  7732  0366  1683               	bsf	3,5	;RP0=1, select bank1
  7733  0367  1303               	bcf	3,6	;RP1=0, select bank1
  7734  0368  0254               	subwf	(_deltaV+1)^(0+128),w
  7735  0369  30E9               	movlw	233
  7736  036A  1903               	skipnz
  7737  036B  0253               	subwf	_deltaV^(0+128),w
  7738  036C  1C03               	skipc
  7739  036D  2C61               	goto	i1l3953
  7740                           
  7741                           ;main.c: 246: {
  7742                           ;main.c: 248: rule = trapmf(deltaV, 1001, 1500, 2000, 2001);
  7743  036E  0854               	movf	(_deltaV+1)^(0+128),w
  7744  036F  01F9               	clrf	___lwtoft@c+1
  7745  0370  07F9               	addwf	___lwtoft@c+1,f
  7746  0371  0853               	movf	_deltaV^(0+128),w
  7747  0372  01F8               	clrf	___lwtoft@c
  7748  0373  07F8               	addwf	___lwtoft@c,f
  7749  0374  120A  158A  2001  120A  118A  	fcall	___lwtoft
  7750  0379  0878               	movf	?___lwtoft,w
  7751  037A  1283               	bcf	3,5	;RP0=0, select bank0
  7752  037B  1303               	bcf	3,6	;RP1=0, select bank0
  7753  037C  00C0               	movwf	trapmf@x
  7754  037D  0879               	movf	?___lwtoft+1,w
  7755  037E  00C1               	movwf	trapmf@x+1
  7756  037F  087A               	movf	?___lwtoft+2,w
  7757  0380  00C2               	movwf	trapmf@x+2
  7758  0381  3040               	movlw	64
  7759  0382  00C3               	movwf	trapmf@a
  7760  0383  307A               	movlw	122
  7761  0384  00C4               	movwf	trapmf@a+1
  7762  0385  3044               	movlw	68
  7763  0386  00C5               	movwf	trapmf@a+2
  7764  0387  3080               	movlw	128
  7765  0388  00C6               	movwf	trapmf@b
  7766  0389  30BB               	movlw	187
  7767  038A  00C7               	movwf	trapmf@b+1
  7768  038B  3044               	movlw	68
  7769  038C  00C8               	movwf	trapmf@b+2
  7770  038D  3000               	movlw	0
  7771  038E  00C9               	movwf	trapmf@c
  7772  038F  30FA               	movlw	250
  7773  0390  00CA               	movwf	trapmf@c+1
  7774  0391  3044               	movlw	68
  7775  0392  00CB               	movwf	trapmf@c+2
  7776  0393  3020               	movlw	32
  7777  0394  00CC               	movwf	trapmf@d
  7778  0395  30FA               	movlw	250
  7779  0396  00CD               	movwf	trapmf@d+1
  7780  0397  3044               	movlw	68
  7781  0398  00CE               	movwf	trapmf@d+2
  7782  0399  120A  158A  2525  120A  118A  	fcall	_trapmf
  7783  039E  1283               	bcf	3,5	;RP0=0, select bank0
  7784  039F  1303               	bcf	3,6	;RP1=0, select bank0
  7785  03A0  0840               	movf	?_trapmf,w
  7786  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  7787  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  7788  03A3  00BC               	movwf	Fuzzy@rule^(0+128)
  7789  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  7790  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  7791  03A6  0841               	movf	?_trapmf+1,w
  7792  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  7793  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  7794  03A9  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7795  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  7796  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  7797  03AC  0842               	movf	?_trapmf+2,w
  7798  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  7799  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  7800  03AF  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7801                           
  7802                           ;main.c: 250: x = 0;
  7803  03B0  3000               	movlw	0
  7804  03B1  00BF               	movwf	Fuzzy@x^(0+128)
  7805  03B2  3000               	movlw	0
  7806  03B3  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7807  03B4  3000               	movlw	0
  7808  03B5  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7809                           
  7810                           ;main.c: 251: for (int a = 0; a <= 15; a++) {
  7811  03B6  01B0               	clrf	Fuzzy@a_246^(0+128)
  7812  03B7  01B1               	clrf	(Fuzzy@a_246+1)^(0+128)
  7813  03B8  0831               	movf	(Fuzzy@a_246+1)^(0+128),w
  7814  03B9  3A80               	xorlw	128
  7815  03BA  00FF               	movwf	127
  7816  03BB  3080               	movlw	128
  7817  03BC  027F               	subwf	127,w
  7818  03BD  1D03               	skipz
  7819  03BE  2BC1               	goto	u542_25
  7820  03BF  3010               	movlw	16
  7821  03C0  0230               	subwf	Fuzzy@a_246^(0+128),w
  7822  03C1                     u542_25:	
  7823  03C1  1803               	btfsc	3,0
  7824  03C2  2C61               	goto	i1l3953
  7825  03C3                     i1l3943:	
  7826                           
  7827                           ;main.c: 252: rulegrande = trapmf(x, 5, 10, 15, 16);
  7828  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  7829  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  7830  03C5  083F               	movf	Fuzzy@x^(0+128),w
  7831  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  7832  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  7833  03C8  00C0               	movwf	trapmf@x
  7834  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  7835  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  7836  03CB  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7837  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  7838  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  7839  03CE  00C1               	movwf	trapmf@x+1
  7840  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  7841  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  7842  03D1  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7843  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  7844  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  7845  03D4  00C2               	movwf	trapmf@x+2
  7846  03D5  3000               	movlw	0
  7847  03D6  00C3               	movwf	trapmf@a
  7848  03D7  30A0               	movlw	160
  7849  03D8  00C4               	movwf	trapmf@a+1
  7850  03D9  3040               	movlw	64
  7851  03DA  00C5               	movwf	trapmf@a+2
  7852  03DB  3000               	movlw	0
  7853  03DC  00C6               	movwf	trapmf@b
  7854  03DD  3020               	movlw	32
  7855  03DE  00C7               	movwf	trapmf@b+1
  7856  03DF  3041               	movlw	65
  7857  03E0  00C8               	movwf	trapmf@b+2
  7858  03E1  3000               	movlw	0
  7859  03E2  00C9               	movwf	trapmf@c
  7860  03E3  3070               	movlw	112
  7861  03E4  00CA               	movwf	trapmf@c+1
  7862  03E5  3041               	movlw	65
  7863  03E6  00CB               	movwf	trapmf@c+2
  7864  03E7  3000               	movlw	0
  7865  03E8  00CC               	movwf	trapmf@d
  7866  03E9  3080               	movlw	128
  7867  03EA  00CD               	movwf	trapmf@d+1
  7868  03EB  3041               	movlw	65
  7869  03EC  00CE               	movwf	trapmf@d+2
  7870  03ED  120A  158A  2525  120A  118A  	fcall	_trapmf
  7871  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  7872  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  7873  03F4  0840               	movf	?_trapmf,w
  7874  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  7875  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  7876  03F7  00C2               	movwf	_rulegrande^(0+128)
  7877  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  7878  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  7879  03FA  0841               	movf	?_trapmf+1,w
  7880  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  7881  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  7882  03FD  00C3               	movwf	(_rulegrande+1)^(0+128)
  7883  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  7884  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  7885  0400  0842               	movf	?_trapmf+2,w
  7886  0401  1683               	bsf	3,5	;RP0=1, select bank1
  7887  0402  1303               	bcf	3,6	;RP1=0, select bank1
  7888  0403  00C4               	movwf	(_rulegrande+2)^(0+128)
  7889                           
  7890                           ;main.c: 254: if (rulegrande >= rule) {
  7891  0404  0842               	movf	_rulegrande^(0+128),w
  7892  0405  00F0               	movwf	___ftge@ff1
  7893  0406  0843               	movf	(_rulegrande+1)^(0+128),w
  7894  0407  00F1               	movwf	___ftge@ff1+1
  7895  0408  0844               	movf	(_rulegrande+2)^(0+128),w
  7896  0409  00F2               	movwf	___ftge@ff1+2
  7897  040A  083C               	movf	Fuzzy@rule^(0+128),w
  7898  040B  00F3               	movwf	___ftge@ff2
  7899  040C  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7900  040D  00F4               	movwf	___ftge@ff2+1
  7901  040E  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7902  040F  00F5               	movwf	___ftge@ff2+2
  7903  0410  160A  118A  2545  120A  118A  	fcall	___ftge
  7904  0415  1C03               	btfss	3,0
  7905  0416  2C1F               	goto	i1l3947
  7906                           
  7907                           ;main.c: 255: rulegrande = rule;
  7908  0417  1683               	bsf	3,5	;RP0=1, select bank1
  7909  0418  1303               	bcf	3,6	;RP1=0, select bank1
  7910  0419  083C               	movf	Fuzzy@rule^(0+128),w
  7911  041A  00C2               	movwf	_rulegrande^(0+128)
  7912  041B  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7913  041C  00C3               	movwf	(_rulegrande+1)^(0+128)
  7914  041D  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7915  041E  00C4               	movwf	(_rulegrande+2)^(0+128)
  7916  041F                     i1l3947:	
  7917                           
  7918                           ;main.c: 256: }
  7919                           ;main.c: 258: x += 1;
  7920  041F  3000               	movlw	0
  7921  0420  1283               	bcf	3,5	;RP0=0, select bank0
  7922  0421  1303               	bcf	3,6	;RP1=0, select bank0
  7923  0422  00A3               	movwf	___ftadd@f1
  7924  0423  3080               	movlw	128
  7925  0424  00A4               	movwf	___ftadd@f1+1
  7926  0425  303F               	movlw	63
  7927  0426  00A5               	movwf	___ftadd@f1+2
  7928  0427  1683               	bsf	3,5	;RP0=1, select bank1
  7929  0428  1303               	bcf	3,6	;RP1=0, select bank1
  7930  0429  083F               	movf	Fuzzy@x^(0+128),w
  7931  042A  1283               	bcf	3,5	;RP0=0, select bank0
  7932  042B  1303               	bcf	3,6	;RP1=0, select bank0
  7933  042C  00A6               	movwf	___ftadd@f2
  7934  042D  1683               	bsf	3,5	;RP0=1, select bank1
  7935  042E  1303               	bcf	3,6	;RP1=0, select bank1
  7936  042F  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7937  0430  1283               	bcf	3,5	;RP0=0, select bank0
  7938  0431  1303               	bcf	3,6	;RP1=0, select bank0
  7939  0432  00A7               	movwf	___ftadd@f2+1
  7940  0433  1683               	bsf	3,5	;RP0=1, select bank1
  7941  0434  1303               	bcf	3,6	;RP1=0, select bank1
  7942  0435  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7943  0436  1283               	bcf	3,5	;RP0=0, select bank0
  7944  0437  1303               	bcf	3,6	;RP1=0, select bank0
  7945  0438  00A8               	movwf	___ftadd@f2+2
  7946  0439  120A  158A  241C  120A  118A  	fcall	___ftadd
  7947  043E  1283               	bcf	3,5	;RP0=0, select bank0
  7948  043F  1303               	bcf	3,6	;RP1=0, select bank0
  7949  0440  0823               	movf	?___ftadd,w
  7950  0441  1683               	bsf	3,5	;RP0=1, select bank1
  7951  0442  1303               	bcf	3,6	;RP1=0, select bank1
  7952  0443  00BF               	movwf	Fuzzy@x^(0+128)
  7953  0444  1283               	bcf	3,5	;RP0=0, select bank0
  7954  0445  1303               	bcf	3,6	;RP1=0, select bank0
  7955  0446  0824               	movf	?___ftadd+1,w
  7956  0447  1683               	bsf	3,5	;RP0=1, select bank1
  7957  0448  1303               	bcf	3,6	;RP1=0, select bank1
  7958  0449  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7959  044A  1283               	bcf	3,5	;RP0=0, select bank0
  7960  044B  1303               	bcf	3,6	;RP1=0, select bank0
  7961  044C  0825               	movf	?___ftadd+2,w
  7962  044D  1683               	bsf	3,5	;RP0=1, select bank1
  7963  044E  1303               	bcf	3,6	;RP1=0, select bank1
  7964  044F  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7965  0450  3001               	movlw	1
  7966  0451  07B0               	addwf	Fuzzy@a_246^(0+128),f
  7967  0452  1803               	skipnc
  7968  0453  0AB1               	incf	(Fuzzy@a_246+1)^(0+128),f
  7969  0454  3000               	movlw	0
  7970  0455  07B1               	addwf	(Fuzzy@a_246+1)^(0+128),f
  7971  0456  0831               	movf	(Fuzzy@a_246+1)^(0+128),w
  7972  0457  3A80               	xorlw	128
  7973  0458  00FF               	movwf	127
  7974  0459  3080               	movlw	128
  7975  045A  027F               	subwf	127,w
  7976  045B  1D03               	skipz
  7977  045C  2C5F               	goto	u544_25
  7978  045D  3010               	movlw	16
  7979  045E  0230               	subwf	Fuzzy@a_246^(0+128),w
  7980  045F                     u544_25:	
  7981  045F  1C03               	skipc
  7982  0460  2BC3               	goto	i1l3943
  7983  0461                     i1l3953:	
  7984                           
  7985                           ;main.c: 259: }
  7986                           ;main.c: 260: }
  7987                           ;main.c: 263: x = 0;
  7988  0461  3000               	movlw	0
  7989  0462  1683               	bsf	3,5	;RP0=1, select bank1
  7990  0463  1303               	bcf	3,6	;RP1=0, select bank1
  7991  0464  00BF               	movwf	Fuzzy@x^(0+128)
  7992  0465  3000               	movlw	0
  7993  0466  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7994  0467  3000               	movlw	0
  7995  0468  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7996                           
  7997                           ;main.c: 264: float total_area = 0;
  7998  0469  3000               	movlw	0
  7999  046A  00B7               	movwf	Fuzzy@total_area^(0+128)
  8000  046B  3000               	movlw	0
  8001  046C  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8002  046D  3000               	movlw	0
  8003  046E  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8004                           
  8005                           ;main.c: 265: float soma = 0;
  8006  046F  3000               	movlw	0
  8007  0470  00B4               	movwf	Fuzzy@soma^(0+128)
  8008  0471  3000               	movlw	0
  8009  0472  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8010  0473  3000               	movlw	0
  8011  0474  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8012                           
  8013                           ;main.c: 266: for (int a = 0; a <= 15; a++)
  8014  0475  01BA               	clrf	Fuzzy@a_249^(0+128)
  8015  0476  01BB               	clrf	(Fuzzy@a_249+1)^(0+128)
  8016  0477  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8017  0478  3A80               	xorlw	128
  8018  0479  00FF               	movwf	127
  8019  047A  3080               	movlw	128
  8020  047B  027F               	subwf	127,w
  8021  047C  1D03               	skipz
  8022  047D  2C80               	goto	u545_25
  8023  047E  3010               	movlw	16
  8024  047F  023A               	subwf	Fuzzy@a_249^(0+128),w
  8025  0480                     u545_25:	
  8026  0480  1803               	btfsc	3,0
  8027  0481  2EC0               	goto	i1l3981
  8028  0482                     i1l180:	
  8029                           
  8030                           ;main.c: 267: {
  8031                           ;main.c: 268: if (a >= 0 && a <= 5) {
  8032  0482  1683               	bsf	3,5	;RP0=1, select bank1
  8033  0483  1303               	bcf	3,6	;RP1=0, select bank1
  8034  0484  1BBB               	btfsc	(Fuzzy@a_249+1)^(0+128),7
  8035  0485  2D24               	goto	i1l3965
  8036  0486  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8037  0487  3A80               	xorlw	128
  8038  0488  00FF               	movwf	127
  8039  0489  3080               	movlw	128
  8040  048A  027F               	subwf	127,w
  8041  048B  1D03               	skipz
  8042  048C  2C8F               	goto	u547_25
  8043  048D  3006               	movlw	6
  8044  048E  023A               	subwf	Fuzzy@a_249^(0+128),w
  8045  048F                     u547_25:	
  8046  048F  1803               	skipnc
  8047  0490  2D24               	goto	i1l3965
  8048                           
  8049                           ;main.c: 269: total_area += rulepequeno;
  8050  0491  1683               	bsf	3,5	;RP0=1, select bank1
  8051  0492  1303               	bcf	3,6	;RP1=0, select bank1
  8052  0493  0848               	movf	_rulepequeno^(0+128),w
  8053  0494  1283               	bcf	3,5	;RP0=0, select bank0
  8054  0495  1303               	bcf	3,6	;RP1=0, select bank0
  8055  0496  00A3               	movwf	___ftadd@f1
  8056  0497  1683               	bsf	3,5	;RP0=1, select bank1
  8057  0498  1303               	bcf	3,6	;RP1=0, select bank1
  8058  0499  0849               	movf	(_rulepequeno+1)^(0+128),w
  8059  049A  1283               	bcf	3,5	;RP0=0, select bank0
  8060  049B  1303               	bcf	3,6	;RP1=0, select bank0
  8061  049C  00A4               	movwf	___ftadd@f1+1
  8062  049D  1683               	bsf	3,5	;RP0=1, select bank1
  8063  049E  1303               	bcf	3,6	;RP1=0, select bank1
  8064  049F  084A               	movf	(_rulepequeno+2)^(0+128),w
  8065  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  8066  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  8067  04A2  00A5               	movwf	___ftadd@f1+2
  8068  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  8069  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  8070  04A5  0837               	movf	Fuzzy@total_area^(0+128),w
  8071  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  8072  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  8073  04A8  00A6               	movwf	___ftadd@f2
  8074  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  8075  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  8076  04AB  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8077  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  8078  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  8079  04AE  00A7               	movwf	___ftadd@f2+1
  8080  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  8081  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  8082  04B1  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8083  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  8084  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  8085  04B4  00A8               	movwf	___ftadd@f2+2
  8086  04B5  120A  158A  241C  120A  118A  	fcall	___ftadd
  8087  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  8088  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  8089  04BC  0823               	movf	?___ftadd,w
  8090  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  8091  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  8092  04BF  00B7               	movwf	Fuzzy@total_area^(0+128)
  8093  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  8094  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  8095  04C2  0824               	movf	?___ftadd+1,w
  8096  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  8097  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  8098  04C5  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8099  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  8100  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  8101  04C8  0825               	movf	?___ftadd+2,w
  8102  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  8103  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  8104  04CB  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8105                           
  8106                           ;main.c: 270: soma += (x * rulepequeno);
  8107  04CC  083F               	movf	Fuzzy@x^(0+128),w
  8108  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  8109  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  8110  04CF  00D5               	movwf	___ftmul@f2
  8111  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  8112  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  8113  04D2  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8114  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  8115  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  8116  04D5  00D6               	movwf	___ftmul@f2+1
  8117  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  8118  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  8119  04D8  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8120  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  8121  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  8122  04DB  00D7               	movwf	___ftmul@f2+2
  8123  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  8124  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  8125  04DE  0848               	movf	_rulepequeno^(0+128),w
  8126  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  8127  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  8128  04E1  00D2               	movwf	___ftmul@f1
  8129  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  8130  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  8131  04E4  0849               	movf	(_rulepequeno+1)^(0+128),w
  8132  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  8133  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  8134  04E7  00D3               	movwf	___ftmul@f1+1
  8135  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  8136  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  8137  04EA  084A               	movf	(_rulepequeno+2)^(0+128),w
  8138  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  8139  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  8140  04ED  00D4               	movwf	___ftmul@f1+2
  8141  04EE  120A  158A  2349  120A  118A  	fcall	___ftmul
  8142  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  8143  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  8144  04F5  0852               	movf	?___ftmul,w
  8145  04F6  00A3               	movwf	___ftadd@f1
  8146  04F7  0853               	movf	?___ftmul+1,w
  8147  04F8  00A4               	movwf	___ftadd@f1+1
  8148  04F9  0854               	movf	?___ftmul+2,w
  8149  04FA  00A5               	movwf	___ftadd@f1+2
  8150  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  8151  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  8152  04FD  0834               	movf	Fuzzy@soma^(0+128),w
  8153  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  8154  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  8155  0500  00A6               	movwf	___ftadd@f2
  8156  0501  1683               	bsf	3,5	;RP0=1, select bank1
  8157  0502  1303               	bcf	3,6	;RP1=0, select bank1
  8158  0503  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8159  0504  1283               	bcf	3,5	;RP0=0, select bank0
  8160  0505  1303               	bcf	3,6	;RP1=0, select bank0
  8161  0506  00A7               	movwf	___ftadd@f2+1
  8162  0507  1683               	bsf	3,5	;RP0=1, select bank1
  8163  0508  1303               	bcf	3,6	;RP1=0, select bank1
  8164  0509  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8165  050A  1283               	bcf	3,5	;RP0=0, select bank0
  8166  050B  1303               	bcf	3,6	;RP1=0, select bank0
  8167  050C  00A8               	movwf	___ftadd@f2+2
  8168  050D  120A  158A  241C  120A  118A  	fcall	___ftadd
  8169  0512  1283               	bcf	3,5	;RP0=0, select bank0
  8170  0513  1303               	bcf	3,6	;RP1=0, select bank0
  8171  0514  0823               	movf	?___ftadd,w
  8172  0515  1683               	bsf	3,5	;RP0=1, select bank1
  8173  0516  1303               	bcf	3,6	;RP1=0, select bank1
  8174  0517  00B4               	movwf	Fuzzy@soma^(0+128)
  8175  0518  1283               	bcf	3,5	;RP0=0, select bank0
  8176  0519  1303               	bcf	3,6	;RP1=0, select bank0
  8177  051A  0824               	movf	?___ftadd+1,w
  8178  051B  1683               	bsf	3,5	;RP0=1, select bank1
  8179  051C  1303               	bcf	3,6	;RP1=0, select bank1
  8180  051D  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8181  051E  1283               	bcf	3,5	;RP0=0, select bank0
  8182  051F  1303               	bcf	3,6	;RP1=0, select bank0
  8183  0520  0825               	movf	?___ftadd+2,w
  8184  0521  1683               	bsf	3,5	;RP0=1, select bank1
  8185  0522  1303               	bcf	3,6	;RP1=0, select bank1
  8186  0523  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8187  0524                     i1l3965:	
  8188                           
  8189                           ;main.c: 271: }
  8190                           ;main.c: 273: if (a >= 5 && a <= 10) {
  8191  0524  1683               	bsf	3,5	;RP0=1, select bank1
  8192  0525  1303               	bcf	3,6	;RP1=0, select bank1
  8193  0526  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8194  0527  3A80               	xorlw	128
  8195  0528  00FF               	movwf	127
  8196  0529  3080               	movlw	128
  8197  052A  027F               	subwf	127,w
  8198  052B  1D03               	skipz
  8199  052C  2D2F               	goto	u548_25
  8200  052D  3005               	movlw	5
  8201  052E  023A               	subwf	Fuzzy@a_249^(0+128),w
  8202  052F                     u548_25:	
  8203  052F  1C03               	skipc
  8204  0530  2DD1               	goto	i1l3971
  8205  0531  1683               	bsf	3,5	;RP0=1, select bank1
  8206  0532  1303               	bcf	3,6	;RP1=0, select bank1
  8207  0533  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8208  0534  3A80               	xorlw	128
  8209  0535  00FF               	movwf	127
  8210  0536  3080               	movlw	128
  8211  0537  027F               	subwf	127,w
  8212  0538  1D03               	skipz
  8213  0539  2D3C               	goto	u549_25
  8214  053A  300B               	movlw	11
  8215  053B  023A               	subwf	Fuzzy@a_249^(0+128),w
  8216  053C                     u549_25:	
  8217  053C  1803               	skipnc
  8218  053D  2DD1               	goto	i1l3971
  8219                           
  8220                           ;main.c: 274: total_area += rulemedio;
  8221  053E  1683               	bsf	3,5	;RP0=1, select bank1
  8222  053F  1303               	bcf	3,6	;RP1=0, select bank1
  8223  0540  0845               	movf	_rulemedio^(0+128),w
  8224  0541  1283               	bcf	3,5	;RP0=0, select bank0
  8225  0542  1303               	bcf	3,6	;RP1=0, select bank0
  8226  0543  00A3               	movwf	___ftadd@f1
  8227  0544  1683               	bsf	3,5	;RP0=1, select bank1
  8228  0545  1303               	bcf	3,6	;RP1=0, select bank1
  8229  0546  0846               	movf	(_rulemedio+1)^(0+128),w
  8230  0547  1283               	bcf	3,5	;RP0=0, select bank0
  8231  0548  1303               	bcf	3,6	;RP1=0, select bank0
  8232  0549  00A4               	movwf	___ftadd@f1+1
  8233  054A  1683               	bsf	3,5	;RP0=1, select bank1
  8234  054B  1303               	bcf	3,6	;RP1=0, select bank1
  8235  054C  0847               	movf	(_rulemedio+2)^(0+128),w
  8236  054D  1283               	bcf	3,5	;RP0=0, select bank0
  8237  054E  1303               	bcf	3,6	;RP1=0, select bank0
  8238  054F  00A5               	movwf	___ftadd@f1+2
  8239  0550  1683               	bsf	3,5	;RP0=1, select bank1
  8240  0551  1303               	bcf	3,6	;RP1=0, select bank1
  8241  0552  0837               	movf	Fuzzy@total_area^(0+128),w
  8242  0553  1283               	bcf	3,5	;RP0=0, select bank0
  8243  0554  1303               	bcf	3,6	;RP1=0, select bank0
  8244  0555  00A6               	movwf	___ftadd@f2
  8245  0556  1683               	bsf	3,5	;RP0=1, select bank1
  8246  0557  1303               	bcf	3,6	;RP1=0, select bank1
  8247  0558  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8248  0559  1283               	bcf	3,5	;RP0=0, select bank0
  8249  055A  1303               	bcf	3,6	;RP1=0, select bank0
  8250  055B  00A7               	movwf	___ftadd@f2+1
  8251  055C  1683               	bsf	3,5	;RP0=1, select bank1
  8252  055D  1303               	bcf	3,6	;RP1=0, select bank1
  8253  055E  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8254  055F  1283               	bcf	3,5	;RP0=0, select bank0
  8255  0560  1303               	bcf	3,6	;RP1=0, select bank0
  8256  0561  00A8               	movwf	___ftadd@f2+2
  8257  0562  120A  158A  241C  120A  118A  	fcall	___ftadd
  8258  0567  1283               	bcf	3,5	;RP0=0, select bank0
  8259  0568  1303               	bcf	3,6	;RP1=0, select bank0
  8260  0569  0823               	movf	?___ftadd,w
  8261  056A  1683               	bsf	3,5	;RP0=1, select bank1
  8262  056B  1303               	bcf	3,6	;RP1=0, select bank1
  8263  056C  00B7               	movwf	Fuzzy@total_area^(0+128)
  8264  056D  1283               	bcf	3,5	;RP0=0, select bank0
  8265  056E  1303               	bcf	3,6	;RP1=0, select bank0
  8266  056F  0824               	movf	?___ftadd+1,w
  8267  0570  1683               	bsf	3,5	;RP0=1, select bank1
  8268  0571  1303               	bcf	3,6	;RP1=0, select bank1
  8269  0572  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8270  0573  1283               	bcf	3,5	;RP0=0, select bank0
  8271  0574  1303               	bcf	3,6	;RP1=0, select bank0
  8272  0575  0825               	movf	?___ftadd+2,w
  8273  0576  1683               	bsf	3,5	;RP0=1, select bank1
  8274  0577  1303               	bcf	3,6	;RP1=0, select bank1
  8275  0578  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8276                           
  8277                           ;main.c: 275: soma += (x * rulemedio);
  8278  0579  083F               	movf	Fuzzy@x^(0+128),w
  8279  057A  1283               	bcf	3,5	;RP0=0, select bank0
  8280  057B  1303               	bcf	3,6	;RP1=0, select bank0
  8281  057C  00D5               	movwf	___ftmul@f2
  8282  057D  1683               	bsf	3,5	;RP0=1, select bank1
  8283  057E  1303               	bcf	3,6	;RP1=0, select bank1
  8284  057F  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8285  0580  1283               	bcf	3,5	;RP0=0, select bank0
  8286  0581  1303               	bcf	3,6	;RP1=0, select bank0
  8287  0582  00D6               	movwf	___ftmul@f2+1
  8288  0583  1683               	bsf	3,5	;RP0=1, select bank1
  8289  0584  1303               	bcf	3,6	;RP1=0, select bank1
  8290  0585  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8291  0586  1283               	bcf	3,5	;RP0=0, select bank0
  8292  0587  1303               	bcf	3,6	;RP1=0, select bank0
  8293  0588  00D7               	movwf	___ftmul@f2+2
  8294  0589  1683               	bsf	3,5	;RP0=1, select bank1
  8295  058A  1303               	bcf	3,6	;RP1=0, select bank1
  8296  058B  0845               	movf	_rulemedio^(0+128),w
  8297  058C  1283               	bcf	3,5	;RP0=0, select bank0
  8298  058D  1303               	bcf	3,6	;RP1=0, select bank0
  8299  058E  00D2               	movwf	___ftmul@f1
  8300  058F  1683               	bsf	3,5	;RP0=1, select bank1
  8301  0590  1303               	bcf	3,6	;RP1=0, select bank1
  8302  0591  0846               	movf	(_rulemedio+1)^(0+128),w
  8303  0592  1283               	bcf	3,5	;RP0=0, select bank0
  8304  0593  1303               	bcf	3,6	;RP1=0, select bank0
  8305  0594  00D3               	movwf	___ftmul@f1+1
  8306  0595  1683               	bsf	3,5	;RP0=1, select bank1
  8307  0596  1303               	bcf	3,6	;RP1=0, select bank1
  8308  0597  0847               	movf	(_rulemedio+2)^(0+128),w
  8309  0598  1283               	bcf	3,5	;RP0=0, select bank0
  8310  0599  1303               	bcf	3,6	;RP1=0, select bank0
  8311  059A  00D4               	movwf	___ftmul@f1+2
  8312  059B  120A  158A  2349  120A  118A  	fcall	___ftmul
  8313  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  8314  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  8315  05A2  0852               	movf	?___ftmul,w
  8316  05A3  00A3               	movwf	___ftadd@f1
  8317  05A4  0853               	movf	?___ftmul+1,w
  8318  05A5  00A4               	movwf	___ftadd@f1+1
  8319  05A6  0854               	movf	?___ftmul+2,w
  8320  05A7  00A5               	movwf	___ftadd@f1+2
  8321  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  8322  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  8323  05AA  0834               	movf	Fuzzy@soma^(0+128),w
  8324  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  8325  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  8326  05AD  00A6               	movwf	___ftadd@f2
  8327  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  8328  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  8329  05B0  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8330  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  8331  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  8332  05B3  00A7               	movwf	___ftadd@f2+1
  8333  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  8334  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  8335  05B6  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8336  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  8337  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  8338  05B9  00A8               	movwf	___ftadd@f2+2
  8339  05BA  120A  158A  241C  120A  118A  	fcall	___ftadd
  8340  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  8341  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  8342  05C1  0823               	movf	?___ftadd,w
  8343  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  8344  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  8345  05C4  00B4               	movwf	Fuzzy@soma^(0+128)
  8346  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  8347  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  8348  05C7  0824               	movf	?___ftadd+1,w
  8349  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  8350  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  8351  05CA  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8352  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  8353  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  8354  05CD  0825               	movf	?___ftadd+2,w
  8355  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  8356  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  8357  05D0  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8358  05D1                     i1l3971:	
  8359                           
  8360                           ;main.c: 276: }
  8361                           ;main.c: 278: if (a >= 10 && a <= 15) {
  8362  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  8363  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  8364  05D3  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8365  05D4  3A80               	xorlw	128
  8366  05D5  00FF               	movwf	127
  8367  05D6  3080               	movlw	128
  8368  05D7  027F               	subwf	127,w
  8369  05D8  1D03               	skipz
  8370  05D9  2DDC               	goto	u550_25
  8371  05DA  300A               	movlw	10
  8372  05DB  023A               	subwf	Fuzzy@a_249^(0+128),w
  8373  05DC                     u550_25:	
  8374  05DC  1C03               	skipc
  8375  05DD  2E7E               	goto	i1l184
  8376  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  8377  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  8378  05E0  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8379  05E1  3A80               	xorlw	128
  8380  05E2  00FF               	movwf	127
  8381  05E3  3080               	movlw	128
  8382  05E4  027F               	subwf	127,w
  8383  05E5  1D03               	skipz
  8384  05E6  2DE9               	goto	u551_25
  8385  05E7  3010               	movlw	16
  8386  05E8  023A               	subwf	Fuzzy@a_249^(0+128),w
  8387  05E9                     u551_25:	
  8388  05E9  1803               	skipnc
  8389  05EA  2E7E               	goto	i1l184
  8390                           
  8391                           ;main.c: 279: total_area += rulegrande;
  8392  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  8393  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  8394  05ED  0842               	movf	_rulegrande^(0+128),w
  8395  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  8396  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  8397  05F0  00A3               	movwf	___ftadd@f1
  8398  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  8399  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  8400  05F3  0843               	movf	(_rulegrande+1)^(0+128),w
  8401  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  8402  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  8403  05F6  00A4               	movwf	___ftadd@f1+1
  8404  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  8405  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  8406  05F9  0844               	movf	(_rulegrande+2)^(0+128),w
  8407  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  8408  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  8409  05FC  00A5               	movwf	___ftadd@f1+2
  8410  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  8411  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  8412  05FF  0837               	movf	Fuzzy@total_area^(0+128),w
  8413  0600  1283               	bcf	3,5	;RP0=0, select bank0
  8414  0601  1303               	bcf	3,6	;RP1=0, select bank0
  8415  0602  00A6               	movwf	___ftadd@f2
  8416  0603  1683               	bsf	3,5	;RP0=1, select bank1
  8417  0604  1303               	bcf	3,6	;RP1=0, select bank1
  8418  0605  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8419  0606  1283               	bcf	3,5	;RP0=0, select bank0
  8420  0607  1303               	bcf	3,6	;RP1=0, select bank0
  8421  0608  00A7               	movwf	___ftadd@f2+1
  8422  0609  1683               	bsf	3,5	;RP0=1, select bank1
  8423  060A  1303               	bcf	3,6	;RP1=0, select bank1
  8424  060B  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8425  060C  1283               	bcf	3,5	;RP0=0, select bank0
  8426  060D  1303               	bcf	3,6	;RP1=0, select bank0
  8427  060E  00A8               	movwf	___ftadd@f2+2
  8428  060F  120A  158A  241C  120A  118A  	fcall	___ftadd
  8429  0614  1283               	bcf	3,5	;RP0=0, select bank0
  8430  0615  1303               	bcf	3,6	;RP1=0, select bank0
  8431  0616  0823               	movf	?___ftadd,w
  8432  0617  1683               	bsf	3,5	;RP0=1, select bank1
  8433  0618  1303               	bcf	3,6	;RP1=0, select bank1
  8434  0619  00B7               	movwf	Fuzzy@total_area^(0+128)
  8435  061A  1283               	bcf	3,5	;RP0=0, select bank0
  8436  061B  1303               	bcf	3,6	;RP1=0, select bank0
  8437  061C  0824               	movf	?___ftadd+1,w
  8438  061D  1683               	bsf	3,5	;RP0=1, select bank1
  8439  061E  1303               	bcf	3,6	;RP1=0, select bank1
  8440  061F  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8441  0620  1283               	bcf	3,5	;RP0=0, select bank0
  8442  0621  1303               	bcf	3,6	;RP1=0, select bank0
  8443  0622  0825               	movf	?___ftadd+2,w
  8444  0623  1683               	bsf	3,5	;RP0=1, select bank1
  8445  0624  1303               	bcf	3,6	;RP1=0, select bank1
  8446  0625  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8447                           
  8448                           ;main.c: 280: soma += (x * rulegrande);
  8449  0626  083F               	movf	Fuzzy@x^(0+128),w
  8450  0627  1283               	bcf	3,5	;RP0=0, select bank0
  8451  0628  1303               	bcf	3,6	;RP1=0, select bank0
  8452  0629  00D5               	movwf	___ftmul@f2
  8453  062A  1683               	bsf	3,5	;RP0=1, select bank1
  8454  062B  1303               	bcf	3,6	;RP1=0, select bank1
  8455  062C  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8456  062D  1283               	bcf	3,5	;RP0=0, select bank0
  8457  062E  1303               	bcf	3,6	;RP1=0, select bank0
  8458  062F  00D6               	movwf	___ftmul@f2+1
  8459  0630  1683               	bsf	3,5	;RP0=1, select bank1
  8460  0631  1303               	bcf	3,6	;RP1=0, select bank1
  8461  0632  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8462  0633  1283               	bcf	3,5	;RP0=0, select bank0
  8463  0634  1303               	bcf	3,6	;RP1=0, select bank0
  8464  0635  00D7               	movwf	___ftmul@f2+2
  8465  0636  1683               	bsf	3,5	;RP0=1, select bank1
  8466  0637  1303               	bcf	3,6	;RP1=0, select bank1
  8467  0638  0842               	movf	_rulegrande^(0+128),w
  8468  0639  1283               	bcf	3,5	;RP0=0, select bank0
  8469  063A  1303               	bcf	3,6	;RP1=0, select bank0
  8470  063B  00D2               	movwf	___ftmul@f1
  8471  063C  1683               	bsf	3,5	;RP0=1, select bank1
  8472  063D  1303               	bcf	3,6	;RP1=0, select bank1
  8473  063E  0843               	movf	(_rulegrande+1)^(0+128),w
  8474  063F  1283               	bcf	3,5	;RP0=0, select bank0
  8475  0640  1303               	bcf	3,6	;RP1=0, select bank0
  8476  0641  00D3               	movwf	___ftmul@f1+1
  8477  0642  1683               	bsf	3,5	;RP0=1, select bank1
  8478  0643  1303               	bcf	3,6	;RP1=0, select bank1
  8479  0644  0844               	movf	(_rulegrande+2)^(0+128),w
  8480  0645  1283               	bcf	3,5	;RP0=0, select bank0
  8481  0646  1303               	bcf	3,6	;RP1=0, select bank0
  8482  0647  00D4               	movwf	___ftmul@f1+2
  8483  0648  120A  158A  2349  120A  118A  	fcall	___ftmul
  8484  064D  1283               	bcf	3,5	;RP0=0, select bank0
  8485  064E  1303               	bcf	3,6	;RP1=0, select bank0
  8486  064F  0852               	movf	?___ftmul,w
  8487  0650  00A3               	movwf	___ftadd@f1
  8488  0651  0853               	movf	?___ftmul+1,w
  8489  0652  00A4               	movwf	___ftadd@f1+1
  8490  0653  0854               	movf	?___ftmul+2,w
  8491  0654  00A5               	movwf	___ftadd@f1+2
  8492  0655  1683               	bsf	3,5	;RP0=1, select bank1
  8493  0656  1303               	bcf	3,6	;RP1=0, select bank1
  8494  0657  0834               	movf	Fuzzy@soma^(0+128),w
  8495  0658  1283               	bcf	3,5	;RP0=0, select bank0
  8496  0659  1303               	bcf	3,6	;RP1=0, select bank0
  8497  065A  00A6               	movwf	___ftadd@f2
  8498  065B  1683               	bsf	3,5	;RP0=1, select bank1
  8499  065C  1303               	bcf	3,6	;RP1=0, select bank1
  8500  065D  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8501  065E  1283               	bcf	3,5	;RP0=0, select bank0
  8502  065F  1303               	bcf	3,6	;RP1=0, select bank0
  8503  0660  00A7               	movwf	___ftadd@f2+1
  8504  0661  1683               	bsf	3,5	;RP0=1, select bank1
  8505  0662  1303               	bcf	3,6	;RP1=0, select bank1
  8506  0663  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8507  0664  1283               	bcf	3,5	;RP0=0, select bank0
  8508  0665  1303               	bcf	3,6	;RP1=0, select bank0
  8509  0666  00A8               	movwf	___ftadd@f2+2
  8510  0667  120A  158A  241C  120A  118A  	fcall	___ftadd
  8511  066C  1283               	bcf	3,5	;RP0=0, select bank0
  8512  066D  1303               	bcf	3,6	;RP1=0, select bank0
  8513  066E  0823               	movf	?___ftadd,w
  8514  066F  1683               	bsf	3,5	;RP0=1, select bank1
  8515  0670  1303               	bcf	3,6	;RP1=0, select bank1
  8516  0671  00B4               	movwf	Fuzzy@soma^(0+128)
  8517  0672  1283               	bcf	3,5	;RP0=0, select bank0
  8518  0673  1303               	bcf	3,6	;RP1=0, select bank0
  8519  0674  0824               	movf	?___ftadd+1,w
  8520  0675  1683               	bsf	3,5	;RP0=1, select bank1
  8521  0676  1303               	bcf	3,6	;RP1=0, select bank1
  8522  0677  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8523  0678  1283               	bcf	3,5	;RP0=0, select bank0
  8524  0679  1303               	bcf	3,6	;RP1=0, select bank0
  8525  067A  0825               	movf	?___ftadd+2,w
  8526  067B  1683               	bsf	3,5	;RP0=1, select bank1
  8527  067C  1303               	bcf	3,6	;RP1=0, select bank1
  8528  067D  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8529  067E                     i1l184:	
  8530                           
  8531                           ;main.c: 281: }
  8532                           ;main.c: 282: x += 1;
  8533  067E  3000               	movlw	0
  8534  067F  1283               	bcf	3,5	;RP0=0, select bank0
  8535  0680  1303               	bcf	3,6	;RP1=0, select bank0
  8536  0681  00A3               	movwf	___ftadd@f1
  8537  0682  3080               	movlw	128
  8538  0683  00A4               	movwf	___ftadd@f1+1
  8539  0684  303F               	movlw	63
  8540  0685  00A5               	movwf	___ftadd@f1+2
  8541  0686  1683               	bsf	3,5	;RP0=1, select bank1
  8542  0687  1303               	bcf	3,6	;RP1=0, select bank1
  8543  0688  083F               	movf	Fuzzy@x^(0+128),w
  8544  0689  1283               	bcf	3,5	;RP0=0, select bank0
  8545  068A  1303               	bcf	3,6	;RP1=0, select bank0
  8546  068B  00A6               	movwf	___ftadd@f2
  8547  068C  1683               	bsf	3,5	;RP0=1, select bank1
  8548  068D  1303               	bcf	3,6	;RP1=0, select bank1
  8549  068E  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8550  068F  1283               	bcf	3,5	;RP0=0, select bank0
  8551  0690  1303               	bcf	3,6	;RP1=0, select bank0
  8552  0691  00A7               	movwf	___ftadd@f2+1
  8553  0692  1683               	bsf	3,5	;RP0=1, select bank1
  8554  0693  1303               	bcf	3,6	;RP1=0, select bank1
  8555  0694  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8556  0695  1283               	bcf	3,5	;RP0=0, select bank0
  8557  0696  1303               	bcf	3,6	;RP1=0, select bank0
  8558  0697  00A8               	movwf	___ftadd@f2+2
  8559  0698  120A  158A  241C  120A  118A  	fcall	___ftadd
  8560  069D  1283               	bcf	3,5	;RP0=0, select bank0
  8561  069E  1303               	bcf	3,6	;RP1=0, select bank0
  8562  069F  0823               	movf	?___ftadd,w
  8563  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  8564  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  8565  06A2  00BF               	movwf	Fuzzy@x^(0+128)
  8566  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  8567  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  8568  06A5  0824               	movf	?___ftadd+1,w
  8569  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  8570  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  8571  06A8  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  8572  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  8573  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  8574  06AB  0825               	movf	?___ftadd+2,w
  8575  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  8576  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  8577  06AE  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  8578  06AF  3001               	movlw	1
  8579  06B0  07BA               	addwf	Fuzzy@a_249^(0+128),f
  8580  06B1  1803               	skipnc
  8581  06B2  0ABB               	incf	(Fuzzy@a_249+1)^(0+128),f
  8582  06B3  3000               	movlw	0
  8583  06B4  07BB               	addwf	(Fuzzy@a_249+1)^(0+128),f
  8584  06B5  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8585  06B6  3A80               	xorlw	128
  8586  06B7  00FF               	movwf	127
  8587  06B8  3080               	movlw	128
  8588  06B9  027F               	subwf	127,w
  8589  06BA  1D03               	skipz
  8590  06BB  2EBE               	goto	u552_25
  8591  06BC  3010               	movlw	16
  8592  06BD  023A               	subwf	Fuzzy@a_249^(0+128),w
  8593  06BE                     u552_25:	
  8594  06BE  1C03               	skipc
  8595  06BF  2C82               	goto	i1l180
  8596  06C0                     i1l3981:	
  8597                           
  8598                           ;main.c: 283: }
  8599                           ;main.c: 286: float reajuste = 0;
  8600  06C0  3000               	movlw	0
  8601  06C1  1683               	bsf	3,5	;RP0=1, select bank1
  8602  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  8603  06C3  00A5               	movwf	Fuzzy@reajuste^(0+128)
  8604  06C4  3000               	movlw	0
  8605  06C5  00A6               	movwf	(Fuzzy@reajuste+1)^(0+128)
  8606  06C6  3000               	movlw	0
  8607  06C7  00A7               	movwf	(Fuzzy@reajuste+2)^(0+128)
  8608                           
  8609                           ;main.c: 287: if (total_area != 0)
  8610  06C8  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8611  06C9  0438               	iorwf	(Fuzzy@total_area+1)^(0+128),w
  8612  06CA  0437               	iorwf	Fuzzy@total_area^(0+128),w
  8613  06CB  1903               	skipnz
  8614  06CC  2F06               	goto	i1l3985
  8615                           
  8616                           ;main.c: 288: {
  8617                           ;main.c: 289: reajuste = soma / total_area;
  8618  06CD  0837               	movf	Fuzzy@total_area^(0+128),w
  8619  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  8620  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  8621  06D0  00B0               	movwf	___ftdiv@f2
  8622  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  8623  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  8624  06D3  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8625  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  8626  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  8627  06D6  00B1               	movwf	___ftdiv@f2+1
  8628  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  8629  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  8630  06D9  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8631  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  8632  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  8633  06DC  00B2               	movwf	___ftdiv@f2+2
  8634  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  8635  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  8636  06DF  0834               	movf	Fuzzy@soma^(0+128),w
  8637  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  8638  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  8639  06E2  00B3               	movwf	___ftdiv@f1
  8640  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  8641  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  8642  06E5  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8643  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  8644  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  8645  06E8  00B4               	movwf	___ftdiv@f1+1
  8646  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  8647  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  8648  06EB  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8649  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  8650  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  8651  06EE  00B5               	movwf	___ftdiv@f1+2
  8652  06EF  120A  158A  2291  120A  118A  	fcall	___ftdiv
  8653  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  8654  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  8655  06F6  0830               	movf	?___ftdiv,w
  8656  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  8657  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  8658  06F9  00A5               	movwf	Fuzzy@reajuste^(0+128)
  8659  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  8660  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  8661  06FC  0831               	movf	?___ftdiv+1,w
  8662  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  8663  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  8664  06FF  00A6               	movwf	(Fuzzy@reajuste+1)^(0+128)
  8665  0700  1283               	bcf	3,5	;RP0=0, select bank0
  8666  0701  1303               	bcf	3,6	;RP1=0, select bank0
  8667  0702  0832               	movf	?___ftdiv+2,w
  8668  0703  1683               	bsf	3,5	;RP0=1, select bank1
  8669  0704  1303               	bcf	3,6	;RP1=0, select bank1
  8670  0705  00A7               	movwf	(Fuzzy@reajuste+2)^(0+128)
  8671  0706                     i1l3985:	
  8672                           
  8673                           ;main.c: 290: }
  8674                           ;main.c: 293: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, deltaV)) * (setpointUI > 
      +                          rpm ? 1 : -1), 1023), 0);
  8675  0706  085A               	movf	(_setpointUI+1)^(0+128),w
  8676  0707  0258               	subwf	(_rpm+1)^(0+128),w
  8677  0708  1D03               	skipz
  8678  0709  2F0C               	goto	u554_25
  8679  070A  0859               	movf	_setpointUI^(0+128),w
  8680  070B  0257               	subwf	_rpm^(0+128),w
  8681  070C                     u554_25:	
  8682  070C  1C03               	skipc
  8683  070D  2F12               	goto	i1l3989
  8684  070E  30FF               	movlw	255
  8685  070F  00A8               	movwf	_Fuzzy$251^(0+128)
  8686  0710  30FF               	movlw	255
  8687  0711  2F15               	goto	L2
  8688  0712                     i1l3989:	
  8689  0712  3001               	movlw	1
  8690  0713  00A8               	movwf	_Fuzzy$251^(0+128)
  8691  0714  3000               	movlw	0
  8692  0715                     L2:	
  8693  0715  00A9               	movwf	(_Fuzzy$251^(0+128)+1)
  8694  0716  0829               	movf	(_Fuzzy$251+1)^(0+128),w
  8695  0717  1283               	bcf	3,5	;RP0=0, select bank0
  8696  0718  1303               	bcf	3,6	;RP1=0, select bank0
  8697  0719  01BD               	clrf	___wmul@multiplicand+1
  8698  071A  07BD               	addwf	___wmul@multiplicand+1,f
  8699  071B  1683               	bsf	3,5	;RP0=1, select bank1
  8700  071C  1303               	bcf	3,6	;RP1=0, select bank1
  8701  071D  0828               	movf	_Fuzzy$251^(0+128),w
  8702  071E  1283               	bcf	3,5	;RP0=0, select bank0
  8703  071F  1303               	bcf	3,6	;RP1=0, select bank0
  8704  0720  01BC               	clrf	___wmul@multiplicand
  8705  0721  07BC               	addwf	___wmul@multiplicand,f
  8706  0722  1683               	bsf	3,5	;RP0=1, select bank1
  8707  0723  1303               	bcf	3,6	;RP1=0, select bank1
  8708  0724  0854               	movf	(_deltaV+1)^(0+128),w
  8709  0725  01F9               	clrf	___lwtoft@c+1
  8710  0726  07F9               	addwf	___lwtoft@c+1,f
  8711  0727  0853               	movf	_deltaV^(0+128),w
  8712  0728  01F8               	clrf	___lwtoft@c
  8713  0729  07F8               	addwf	___lwtoft@c,f
  8714  072A  120A  158A  2001  120A  118A  	fcall	___lwtoft
  8715  072F  0878               	movf	?___lwtoft,w
  8716  0730  1283               	bcf	3,5	;RP0=0, select bank0
  8717  0731  1303               	bcf	3,6	;RP1=0, select bank0
  8718  0732  00A3               	movwf	minimo@b
  8719  0733  0879               	movf	?___lwtoft+1,w
  8720  0734  00A4               	movwf	minimo@b+1
  8721  0735  087A               	movf	?___lwtoft+2,w
  8722  0736  00A5               	movwf	minimo@b+2
  8723  0737  1683               	bsf	3,5	;RP0=1, select bank1
  8724  0738  1303               	bcf	3,6	;RP1=0, select bank1
  8725  0739  0825               	movf	Fuzzy@reajuste^(0+128),w
  8726  073A  1283               	bcf	3,5	;RP0=0, select bank0
  8727  073B  1303               	bcf	3,6	;RP1=0, select bank0
  8728  073C  00A0               	movwf	minimo@a
  8729  073D  1683               	bsf	3,5	;RP0=1, select bank1
  8730  073E  1303               	bcf	3,6	;RP1=0, select bank1
  8731  073F  0826               	movf	(Fuzzy@reajuste+1)^(0+128),w
  8732  0740  1283               	bcf	3,5	;RP0=0, select bank0
  8733  0741  1303               	bcf	3,6	;RP1=0, select bank0
  8734  0742  00A1               	movwf	minimo@a+1
  8735  0743  1683               	bsf	3,5	;RP0=1, select bank1
  8736  0744  1303               	bcf	3,6	;RP1=0, select bank1
  8737  0745  0827               	movf	(Fuzzy@reajuste+2)^(0+128),w
  8738  0746  1283               	bcf	3,5	;RP0=0, select bank0
  8739  0747  1303               	bcf	3,6	;RP1=0, select bank0
  8740  0748  00A2               	movwf	minimo@a+2
  8741  0749  120A  118A  27E2  120A  118A  	fcall	_minimo
  8742  074E  1283               	bcf	3,5	;RP0=0, select bank0
  8743  074F  1303               	bcf	3,6	;RP1=0, select bank0
  8744  0750  0820               	movf	?_minimo,w
  8745  0751  00AC               	movwf	___fttol@f1
  8746  0752  0821               	movf	?_minimo+1,w
  8747  0753  00AD               	movwf	___fttol@f1+1
  8748  0754  0822               	movf	?_minimo+2,w
  8749  0755  00AE               	movwf	___fttol@f1+2
  8750  0756  160A  118A  2772  120A  118A  	fcall	___fttol
  8751  075B  1283               	bcf	3,5	;RP0=0, select bank0
  8752  075C  1303               	bcf	3,6	;RP1=0, select bank0
  8753  075D  082D               	movf	?___fttol+1,w
  8754  075E  01BB               	clrf	___wmul@multiplier+1
  8755  075F  07BB               	addwf	___wmul@multiplier+1,f
  8756  0760  082C               	movf	?___fttol,w
  8757  0761  01BA               	clrf	___wmul@multiplier
  8758  0762  07BA               	addwf	___wmul@multiplier,f
  8759  0763  160A  118A  246E  120A  118A  	fcall	___wmul
  8760  0768  1683               	bsf	3,5	;RP0=1, select bank1
  8761  0769  1303               	bcf	3,6	;RP1=0, select bank1
  8762  076A  0861               	movf	_pwm^(0+128),w
  8763  076B  1283               	bcf	3,5	;RP0=0, select bank0
  8764  076C  1303               	bcf	3,6	;RP1=0, select bank0
  8765  076D  073A               	addwf	?___wmul,w
  8766  076E  1683               	bsf	3,5	;RP0=1, select bank1
  8767  076F  1303               	bcf	3,6	;RP1=0, select bank1
  8768  0770  00A3               	movwf	_Fuzzy$1693^(0+128)
  8769  0771  0862               	movf	(_pwm+1)^(0+128),w
  8770  0772  1803               	skipnc
  8771  0773  0A62               	incf	(_pwm+1)^(0+128),w
  8772  0774  1283               	bcf	3,5	;RP0=0, select bank0
  8773  0775  1303               	bcf	3,6	;RP1=0, select bank0
  8774  0776  073B               	addwf	?___wmul+1,w
  8775  0777  1683               	bsf	3,5	;RP0=1, select bank1
  8776  0778  1303               	bcf	3,6	;RP1=0, select bank1
  8777  0779  00A4               	movwf	(_Fuzzy$1693+1)^(0+128)
  8778  077A  3000               	movlw	0
  8779  077B  1283               	bcf	3,5	;RP0=0, select bank0
  8780  077C  1303               	bcf	3,6	;RP1=0, select bank0
  8781  077D  00A9               	movwf	maximo@b
  8782  077E  3000               	movlw	0
  8783  077F  00AA               	movwf	maximo@b+1
  8784  0780  3000               	movlw	0
  8785  0781  00AB               	movwf	maximo@b+2
  8786  0782  30C0               	movlw	192
  8787  0783  00A3               	movwf	minimo@b
  8788  0784  307F               	movlw	127
  8789  0785  00A4               	movwf	minimo@b+1
  8790  0786  3044               	movlw	68
  8791  0787  00A5               	movwf	minimo@b+2
  8792  0788  1683               	bsf	3,5	;RP0=1, select bank1
  8793  0789  1303               	bcf	3,6	;RP1=0, select bank1
  8794  078A  0824               	movf	(_Fuzzy$1693+1)^(0+128),w
  8795  078B  01F9               	clrf	___lwtoft@c+1
  8796  078C  07F9               	addwf	___lwtoft@c+1,f
  8797  078D  0823               	movf	_Fuzzy$1693^(0+128),w
  8798  078E  01F8               	clrf	___lwtoft@c
  8799  078F  07F8               	addwf	___lwtoft@c,f
  8800  0790  120A  158A  2001  120A  118A  	fcall	___lwtoft
  8801  0795  0878               	movf	?___lwtoft,w
  8802  0796  1283               	bcf	3,5	;RP0=0, select bank0
  8803  0797  1303               	bcf	3,6	;RP1=0, select bank0
  8804  0798  00A0               	movwf	minimo@a
  8805  0799  0879               	movf	?___lwtoft+1,w
  8806  079A  00A1               	movwf	minimo@a+1
  8807  079B  087A               	movf	?___lwtoft+2,w
  8808  079C  00A2               	movwf	minimo@a+2
  8809  079D  120A  118A  27E2  120A  118A  	fcall	_minimo
  8810  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  8811  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  8812  07A4  0820               	movf	?_minimo,w
  8813  07A5  00A6               	movwf	maximo@a
  8814  07A6  0821               	movf	?_minimo+1,w
  8815  07A7  00A7               	movwf	maximo@a+1
  8816  07A8  0822               	movf	?_minimo+2,w
  8817  07A9  00A8               	movwf	maximo@a+2
  8818  07AA  160A  118A  2389  120A  118A  	fcall	_maximo
  8819  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  8820  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  8821  07B1  0826               	movf	?_maximo,w
  8822  07B2  00AC               	movwf	___fttol@f1
  8823  07B3  0827               	movf	?_maximo+1,w
  8824  07B4  00AD               	movwf	___fttol@f1+1
  8825  07B5  0828               	movf	?_maximo+2,w
  8826  07B6  00AE               	movwf	___fttol@f1+2
  8827  07B7  160A  118A  2772  120A  118A  	fcall	___fttol
  8828  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  8829  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  8830  07BE  082D               	movf	?___fttol+1,w
  8831  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  8832  07C0  1303               	bcf	3,6	;RP1=0, select bank1
  8833  07C1  01E2               	clrf	(_pwm+1)^(0+128)
  8834  07C2  07E2               	addwf	(_pwm+1)^(0+128),f
  8835  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  8836  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  8837  07C5  082C               	movf	?___fttol,w
  8838  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  8839  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  8840  07C8  01E1               	clrf	_pwm^(0+128)
  8841  07C9  07E1               	addwf	_pwm^(0+128),f
  8842                           
  8843                           ;main.c: 296: if(pwm > 0 && pwm < 1024)
  8844  07CA  0862               	movf	(_pwm+1)^(0+128),w
  8845  07CB  0461               	iorwf	_pwm^(0+128),w
  8846  07CC  1903               	skipnz
  8847  07CD  0008               	return
  8848  07CE  3004               	movlw	4
  8849  07CF  0262               	subwf	(_pwm+1)^(0+128),w
  8850  07D0  3000               	movlw	0
  8851  07D1  1903               	skipnz
  8852  07D2  0261               	subwf	_pwm^(0+128),w
  8853  07D3  1803               	skipnc
  8854  07D4  0008               	return
  8855                           
  8856                           ;main.c: 297: {
  8857                           ;main.c: 298: PWM_DutyCycle2(pwm);
  8858  07D5  0862               	movf	(_pwm+1)^(0+128),w
  8859  07D6  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  8860  07D7  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  8861  07D8  0861               	movf	_pwm^(0+128),w
  8862  07D9  01F0               	clrf	i1PWM_DutyCycle2@valor
  8863  07DA  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  8864  07DB  160A  118A  2352   	fcall	i1_PWM_DutyCycle2
  8865  07DE  0008               	return
  8866  07DF                     L16:	
  8867  07DF                     __end_of_Fuzzy:	
  8868  07DF  120A  158A  295B   	ljmp	i1l3869


Data Sizes:
    Strings     73
    Constant    0
    Data        6
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      79
    BANK1            80     34      67
    BANK3            96     26      63
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[6]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _enviabuffer->_USART_WriteChar
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___awtoft
    _trapmf->___awtoft
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    _minimo->___awtoft
    _maximo->___awtoft
    ___lwtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->___ftmul
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _maximo->_minimo
    ___wmul->___fttol
    ___fttol->_maximo
    ___ftmul->_trapmf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_Fuzzy

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1648
                                             23 BANK3      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     223
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     139
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     2      0     162
                                              2 BANK3      2     2      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      31
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      31
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     324
                                              0 BANK3      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      31
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      31
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  7     7      0   53884
                                             68 BANK0      7     7      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                            ___lwdiv
                             ___wmul
                        _enviabuffer
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _enviabuffer                                          3     3      0     136
                                              1 COMMON     3     3      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               36    36      0   52498
                                             66 BANK0      2     2      0
                                              0 BANK1     34    34      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
                                _abs
                             _maximo
                             _minimo
                             _trapmf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   19869
                                             32 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3007
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    7603
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _minimo                                               6     0      6    3552
                                              0 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                           ___lwtoft (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (5) _maximo                                               6     0      6    3296
                                              6 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                           ___lwtoft (ARG)
                                _abs (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    2952
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     348
                                             26 BANK0      6     2      4
                            ___fttol (ARG)
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    2493
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     508
                                             12 BANK0     14    10      4
                           ___awtoft (ARG)
                           ___lwtoft (ARG)
                                _abs (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3053
                                             50 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _trapmf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    2434
                                              8 COMMON     6     3      3
                           ___ftpack
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _Fuzzy
     ___awtoft
       ___ftpack
       _abs (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _trapmf (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _abs (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     ___lwtoft
       ___ftpack
     ___wmul
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _abs
     _maximo
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _minimo
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
     _trapmf
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwdiv
   ___wmul
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     ___lwdiv (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
   _enviabuffer
     _USART_WriteChar
   i1_PWM_DutyCycle2
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      3F       9       65.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4B      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DF      12        0.0%
ABS                  0      0      DF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jun 23 17:42:36 2022

         ?i1_PWM_DutyCycle2 0070                           _x 00DD                           _y 01B3  
                         pc 0002                 ?_LCD_Cursor 01B5     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        fsr 0004         ___wmul@multiplicand 003C          ??i1_PWM_DutyCycle2 0072  
              ___ftadd@exp1 002F                ___ftadd@exp2 002E               _contagens_tm0 00CF  
              ___ftadd@sign 002D                         l623 0827                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0E7B                         _abs 12EC  
                       _rpm 00D7                         fsr0 0004                         _pwm 00E1  
                       _sum 01AD  __size_of_USART_WriteString 001C                         indf 0000  
              __CFG_FOSC$HS 0000           ??_LCD_WriteString 01B7                 _rulepequeno 00C8  
              __CFG_LVP$OFF 0000                        ?_ISR 0070                ___ftdiv@cntr 003A  
              ___ftdiv@sign 003F                        ?_abs 0070          LCD_WriteString@Str 01B8  
                      l3151 088D                        l3137 0848                        l3129 0838  
                      l3155 089B                        l3147 0880                        l3139 0858  
                      l3281 13CA                        l3267 13B5                        l3339 0A65  
                      STR_1 103F                        STR_2 102E                        STR_3 1049  
                      STR_4 1006                        u6007 1668                        u6017 1674  
                      u6027 13C1                        u6037 149F                        u6047 14AD  
                      u6057 14B9                        u3905 143E                        u6067 131D  
                      u3835 084C                        u3915 1505                        u3855 085A  
                      u3945 141D                        u3865 086F                        u3875 0881  
                      _OERR 00C1                        u5917 0A5E                        u5927 0A8A  
                      u5937 1334                        u5947 1616                        u5957 1626  
                      u5967 1634                        u5977 1640                        u5987 164C  
                      u5997 165A                        _TMR0 0001                        _TMR1 000E  
                      abs@a 0070                        _main 09DB                ___ftpack@arg 0070  
        __size_of_LCD_Clear 0029                ___ftpack@exp 0073                        btemp 007E  
          __end_of_ADC_Init 130C                ?_enviabuffer 0070                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 1323                ___ftmul@cntr 0060  
              ___ftmul@sign 0061     __end_of_USART_WriteChar 12C7                       ??_ISR 0064  
              ___fttol@exp1 0039                       ??_abs 0072                ___fttol@lval 0035  
               ?_TIMER0_Set 0070            __end_of_LCD_Init 1677             __end_of___aldiv 08A4  
                     ?_main 0070                       _EEADR 010D             __end_of___ftadd 0D25  
             __CFG_WDTE$OFF 0000             __end_of___ftdiv 0B49             __end_of___ftneg 12E1  
           __end_of___ftmul 0C1C                       _T1CON 0010             __end_of___fttol 1800  
           __end_of___lwdiv 14FA                       i1l201 0FF5                       i1l130 0E72  
                     i1l180 0482                       i1l244 12C0                       i1l184 067E  
                     i1l564 147A                       i1l735 15F1                       i1l729 15D8  
                     i1l758 0CC4                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019               __CFG_PWRTE$ON 0000                       _Fuzzy 08A4  
             ___awtoft@sign 007D                       _lendo 006E               ___ftpack@sign 0074  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 146E                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
            ??_LCD_WriteCmd 01B5              ?_LCD_WriteData 0070                 ?_USART_Init 01C4  
       enviabuffer@checksum 0072       i1TIMER0_Set@contagens 0070             __initialization 0015  
              __end_of_main 0A91                      ??_main 01CC               ___fttol@sign1 0034  
              ?_TIMER0_Init 0070           __end_of_LCD_Clear 14BC                  Fuzzy@a_244 00AC  
                Fuzzy@a_245 00AE                  Fuzzy@a_246 00B0                  Fuzzy@a_249 00BA  
                Fuzzy@delta 00B2                      ?_Fuzzy 0070                  _Fuzzy$1692 00A0  
                _Fuzzy$1693 00A3                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015                      _CCPR2L 001B  
                    _EECON2 018D            __end_of___awtoft 1408            __end_of___ftpack 160A  
                    i1l2113 15B1                      i1l2123 15DD                      i1l2115 15BD  
                    i1l2125 15E7                      i1l2117 15C2                      i1l2109 15AA  
                    i1l2223 0ABF                      i1l2217 0AA9                      i1l2261 1593  
                    i1l2245 0B23                      i1l2237 0B04                      i1l2511 17F7  
                    i1l2503 17DB                      i1l4103 0F58                      i1l2417 13F1  
                    i1l2433 0B77                      i1l2505 17E6                      i1l2257 156C  
                    i1l4113 0F7F                      i1l2427 0B61                      i1l2507 17E9  
                    i1l2339 136E                      i1l4131 0FA9                      i1l4107 0F6C  
                    i1l4043 0EA1                      u201_25 15D1                      i1l2461 0BEE  
                    i1l2445 0BB6                      i1l4117 0F89                      i1l4045 0EA9  
                    i1l4037 0E93                      i1l2359 1472                      i1l2551 16E1  
                    i1l2543 16C7                      i1l4143 0FF0                      i1l4119 0F8C  
                    i1l2457 0BDE                      i1l2449 0BC6                      i1l2721 134F  
                    i1l2713 1343                      i1l4145 0FF1                      i1l4081 0F1F  
                    i1l4065 0EED                      i1l2477 178C                      i1l4077 0F11  
                    i1l2495 17BE                      i1l4087 0F25                      i1l2497 17CE  
                    i1l4097 0F46                      i1l3803 0CD6                      u203_25 15E0  
                    i1l3807 0CE8                      i1l2871 14C4                      i1l3817 0D0B  
                    i1l3761 0C4C                      i1l3833 0D9E                      i1l3921 02C7  
                    i1l3905 020C                      i1l2873 14D2                      i1l3931 0365  
                    i1l2883 14F3                      i1l3757 0C45                      i1l3845 0E55  
                    i1l3925 0323                      i1l3791 0C9F                      i1l3767 0C5B  
                    i1l3839 0DD0                      i1l3943 03C3                      i1l2879 14E8  
                    i1l3785 0C8A                      i1l3953 0461                      i1l3873 09B7  
                    i1l3787 0C96                      i1l3779 0C75                      i1l3971 05D1  
                    i1l3947 041F                      i1l3797 0CB4                      i1l3789 0C9B  
                    i1l3965 0524                      i1l3981 06C0                      i1l3869 095B  
                    i1l3799 0CC0                      i1l3895 016E                      i1l3879 0075  
                    i1l3985 0706                      i1l3899 01CA                      u206_25 15F8  
                    i1l3989 0712                      u242_21 155F                      u242_22 1560  
                    u242_23 1565                      u242_24 1566                      u235_25 0AD1  
                    u244_21 1586                      u244_22 1587                      u244_23 158C  
                    u244_24 158D                      u260_25 147B                      u236_25 0AE3  
                    u340_25 14C7                      u261_25 1482                      u237_25 0B05  
                    u502_25 0C76                      u238_25 0B16                      u342_25 14D3  
                    u511_25 0CB5                      u239_25 0B24                      u343_25 14DF  
                    u280_25 0BC7                      u344_25 14E9                      u281_25 0BCF  
                    u505_25 0C8B            __end_of___lwtoft 0815                      u531_25 008E  
                    u276_25 0B83                      u292_25 17BF                      u508_25 0CA0  
                    u540_25 0363                      u532_25 016C                      u285_25 0BEF  
                    u277_25 0B95         __size_of_TIMER0_Set 0008                      u286_25 0BF7  
                    u550_25 05DC                      u542_25 03C1                      u534_25 020A  
                    u526_25 0959                      u199_25 15B6                      u295_25 17DD  
                    u551_25 05E9                      u552_25 06BE                      u544_25 045F  
                    u528_25 0073                      u289_25 1793                      u545_25 0480  
                    u537_25 0225                      u298_25 1363                      u554_25 070C  
                    u538_25 02C5                      u547_25 048F                      u548_25 052F  
                    u549_25 053C                      _SSPADD 0093                      _SSPBUF 0013  
                    Fuzzy@a 00AA                      Fuzzy@x 00BF            LCD_WriteCmd@Byte 01B6  
                    ___ftge 1545                   ??___aldiv 01BD                      ___wmul 146E  
                 ??___ftadd 0029              _PWM_DutyCycle1 1408              _PWM_DutyCycle2 1429  
          ?_USART_WriteChar 0070                   ??___ftdiv 0036                   ??___ftneg 007E  
                    _deltaV 00D3                   ??___ftmul 0058                   ??___fttol 0030  
                 ??___lwdiv 0074                      _antigo 01A4                      _buffer 0190  
                    _fitemp 01AA                      _maximo 1389                      _minimo 07E2  
     USART_ReceiveChar@byte 0074                      _trapmf 0D25                      _pulsos 00D5  
                    _status 00DB       ___ftmul@f3_as_product 005D                   ?_ADC_Init 0070  
                    saved_w 007E         __size_of_USART_Init 004B               ?i1_TIMER0_Set 0070  
   __end_of__initialization 004F                   ?_LCD_Init 0070                  ___ftadd@f1 0023  
                ___ftadd@f2 0026             ??_LCD_WriteData 01B5                  ___ftge@ff1 0070  
                ___ftge@ff2 0073                  ___ftdiv@f1 0033                  ___ftdiv@f2 0030  
                ___ftdiv@f3 003B                  ___ftneg@f1 0020                  ___awtoft@c 0078  
    __end_of_PWM_DutyCycle1 1429      __end_of_PWM_DutyCycle2 144A                  ___ftmul@f1 0052  
                ___ftmul@f2 0055        __size_of_enviabuffer 0075                  ___fttol@f1 002C  
            __pcstackCOMMON 0070               __end_of_Fuzzy 07DF                __pidataBANK0 12B3  
              __pidataBANK1 12B5               LCD_Cursor@Col 01B5               LCD_Cursor@Row 01B7  
              ??_LCD_Cursor 01B6             _LCD_WriteString 13C7                  ___lwtoft@c 0078  
                 ?_PWM_Init 0070              _OPTION_REGbits 0081                  ??_ADC_Init 01B5  
      __end_of_LCD_WriteCmd 1323                     ??_Fuzzy 0062   __size_ofi1_PWM_DutyCycle2 001B  
            ??i1_TIMER0_Set 0070                  __pbssBANK0 006B                  __pbssBANK1 00C2  
                __pbssBANK3 0190          __end_of_LCD_Cursor 13C7                  ??_LCD_Init 01B7  
                   ISR@byte 006A             ?_PWM_DutyCycle1 01B5             ?_PWM_DutyCycle2 01B5  
                __pmaintext 09DB                     ?___ftge 0070                     ?___wmul 003A  
                __pintentry 0004                ??_TIMER0_Set 01B5                     _CCP1CON 0017  
                   _CCP2CON 001D                     ?_maximo 0026                     ?_minimo 0020  
                 ?___awtoft 0078                   ?___ftpack 0070               Fuzzy@reajuste 00A5  
                   ?_trapmf 0040                  ??_PWM_Init 01B5                   ?___lwtoft 0078  
      __size_of_TIMER0_Init 000B                     _SSPCON2 0091                  __stringtab 1000  
        __end_of_TIMER0_Set 12CF     __end_of_LCD_WriteString 13E7                   _ADCResult 00CB  
              ??_USART_Init 01C8           LCD_WriteData@Byte 01B6                     ___aldiv 0815  
           __size_of___ftge 005D                     ___ftadd 0C1C                     ___ftdiv 0A91  
                   ___ftneg 12D7             __size_of___wmul 0025                     ___ftmul 0B49  
                   ___fttol 1772                     ___lwdiv 14BC                  ??___awtoft 007B  
                ??___ftpack 0075             __size_of_maximo 001E             __size_of_minimo 001E  
                   __ptext1 14FA                     __ptext2 0815                     __ptext3 12C7  
                   __ptext4 12E1                     __ptext5 144A                     __ptext6 1429  
                   __ptext7 1408                     __ptext8 13C7                     __ptext9 1323  
                _pas_cooler 00DF                  ??___lwtoft 007B             __size_of_trapmf 0156  
              __size_of_ISR 0185                   _T1CONbits 0010                   _T2CONbits 0012  
              __size_of_abs 000E            ___aldiv@dividend 01B9                   _LCD_Clear 1493  
        __end_of_USART_Init 1545                     clrloop0 12D0        end_of_initialization 004F  
                   maximo@a 0026                     maximo@b 0029                     minimo@a 0020  
                   minimo@b 0023                   _RCSTAbits 0018            ___aldiv@quotient 01C0  
                   psplit$0 270037                     psplit$1 370038                     psplit$2 380039  
                   trapmf@a 0043                     trapmf@b 0046                     trapmf@c 0049  
                   trapmf@d 004C                     trapmf@x 0040             Fuzzy@total_area 00B7  
      __end_ofi1_TIMER0_Set 12BF       __size_of_LCD_WriteCmd 0017                   _PORTBbits 0006  
                 _PORTEbits 0009                  _setpointUI 00D9                  ?_LCD_Clear 0070  
          i1_PWM_DutyCycle2 1352           __size_of_ADC_Init 0012                  _rulegrande 00C2  
       PWM_DutyCycle1@valor 01B5                  _total_area 01B0         PWM_DutyCycle2@valor 01B5  
               _CCP1CONbits 0017                 ___ftdiv@exp 003E                 _CCP2CONbits 001D  
                 _TXSTAbits 0098            ?_LCD_WriteString 0070           __size_of_LCD_Init 006D  
              _LCD_WriteCmd 130C                 ___ftmul@exp 005C              __end_of___ftge 15A2  
            __end_of___wmul 1493              __end_of_maximo 13A7              __end_of_minimo 0800  
            __end_of_trapmf 0E7B    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 1000                _indicebuffer 006B  
               __end_of_abs 12FA            ??_PWM_DutyCycle1 01B7            ??_PWM_DutyCycle2 01B7  
                 Fuzzy@soma 00B4                   Fuzzy@rule 00BC                   _Fuzzy$251 00A8  
             ??_enviabuffer 0071       __end_of_LCD_WriteData 133A           _USART_ReceiveChar 133A  
                  ??___ftge 0076          ?_USART_ReceiveChar 0070                    ??___wmul 007E  
               __pdataBANK0 006D                 __pdataBANK1 00DF                    ??_maximo 007E  
                  ??_minimo 007E                    ??_trapmf 007E         ??_USART_ReceiveChar 0073  
         __size_of___awtoft 0021           __size_of___ftpack 0068                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00A0  
             __pcstackBANK3 01B5                 ??_LCD_Clear 01B7         __end_of__stringdata 104F  
 __end_of_USART_ReceiveChar 1352       __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 0072  
       TIMER0_Set@contagens 01B5                    ?___aldiv 01B5         __end_of_enviabuffer 16EC  
                  ?___ftadd 0023                    ?___ftdiv 0030                    ?___ftneg 0020  
                  ?___ftmul 0052                    ?___fttol 002C                    ?___lwdiv 0070  
                 __pstrings 1000                   _ativa_fan 01A7               ??_TIMER0_Init 01B5  
        USART_Init@BaudRate 01C4                    _ADC_Init 12FA              __size_of_Fuzzy FF3B  
          ___lwdiv@quotient 0075                  pnum$text22 0027           ??_USART_WriteChar 0070  
              i1_TIMER0_Set 12B9             ___aldiv@divisor 01B5           interrupt_function 0004  
           ___aldiv@counter 01BE                    _LCD_Init 160A              ___wmul@product 003E  
                 clear_ram0 12CF                    _PIE1bits 008C                    _PIE2bits 008D  
                  _PIR1bits 000C                    _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 136D  
                _ADCON0bits 001F                 __stringbase 1005                  _ADCON1bits 009F  
               __stringdata 1006                    _PWM_Init 144A           ___wmul@multiplier 003A  
                 _rulemedio 00C5            enviabuffer@index 0073         __end_of_TIMER0_Init 12EC  
__size_of_USART_ReceiveChar 0018                  _EECON1bits 018C                 _enviabuffer 1677  
          __size_of___aldiv 008F            __size_of___ftadd 0109            __size_of___ftdiv 00B8  
          __size_of___ftneg 000A            __size_of___ftmul 00D3            __size_of___fttol 008E  
          __size_of___lwdiv 003E                    ___awtoft 13E7                    ___ftpack 15A2  
        __end_of__stringtab 1006                    ___lwtoft 0801              _bufferRecebido 019D  
               _cruzeiroSet 006D                 _cruzeiroVel 00D1             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077           _USART_WriteString 136D                    __ptext10 160A  
                  __ptext11 13A7                    __ptext20 136D                    __ptext12 1493  
                  __ptext21 12BF                    __ptext13 130C                    __ptext30 1545  
                  __ptext22 08A4                    __ptext14 12FA                    __ptext31 12EC  
                  __ptext23 1352                    __ptext15 0E7B                    __ptext32 146E  
                  __ptext24 0D25                    __ptext16 12B9                    __ptext33 0801  
                  __ptext25 12D7                    __ptext17 1677                    __ptext34 1772  
                  __ptext26 0A91                    __ptext18 14BC                    __ptext35 0B49  
                  __ptext27 0C1C                    __ptext19 133A                    __ptext36 13E7  
                  __ptext28 07E2                    __ptext37 15A2                    __ptext29 1389  
                  _antigoUI 00CD          ?_USART_WriteString 0070               __size_of_main 00B6  
       USART_WriteChar@byte 0070         ??_USART_WriteString 0071                  _LCD_Cursor 13A7  
  __size_of_LCD_WriteString 0020          pnum$text22_split_1 0037          pnum$text22_split_2 0038  
        pnum$text22_split_3 0039                 _TIMER0_Init 12E1                  _INTCONbits 000B  
 __end_of_USART_WriteString 1389                    intlevel1 0000                   stringcode 1000  
      USART_WriteString@str 0072                  _TIMER0_Set 12C7                    trapmf@ua 004F  
           _USART_WriteChar 12BF                    stringdir 1000                    stringtab 1000  
              ___aldiv@sign 01BF      __size_of_LCD_WriteData 0017                 _SSPCON2bits 0091  
     i1PWM_DutyCycle2@valor 0070                  _SSPCONbits 0014                  _USART_Init 14FA  
