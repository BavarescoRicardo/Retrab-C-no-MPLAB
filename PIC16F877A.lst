

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 03 15:28:55 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK0
   603  11DD                     __pidataBANK0:	
   604                           
   605                           ;initializer for _pas_cooler
   606  11DD  3407               	retlw	7
   607  11DE  3400               	retlw	0
   608                           
   609                           	psect	idataBANK1
   610  11DF                     __pidataBANK1:	
   611                           
   612                           ;initializer for _setpoint
   613  11DF  3400               	retlw	0
   614  11E0  34A0               	retlw	160
   615  11E1  3441               	retlw	65
   616                           
   617                           	psect	strings
   618  0800                     __pstrings:	
   619  0800                     stringtab:	
   620  0800                     __stringtab:	
   621                           
   622                           ;	String table - string pointers are 1 byte each
   623  0800  1BFF               	btfsc	btemp+1,7
   624  0801  280A               	ljmp	stringcode
   625  0802  1383               	bcf	3,7
   626  0803  187F               	btfsc	btemp+1,0
   627  0804  1783               	bsf	3,7
   628  0805  0800               	movf	0,w
   629  0806  0A84               	incf	4,f
   630  0807  1903               	skipnz
   631  0808  0AFF               	incf	btemp+1,f
   632  0809  0008               	return
   633  080A                     stringcode:	
   634  080A                     stringdir:	
   635  080A  3008               	movlw	high stringdir
   636  080B  008A               	movwf	10
   637  080C  0804               	movf	4,w
   638  080D  0A84               	incf	4,f
   639  080E  0782               	addwf	2,f
   640  080F                     __stringbase:	
   641  080F  3400               	retlw	0
   642  0810                     __end_of__stringtab:	
   643  0810                     _dpowers:	
   644  0810  3401               	retlw	1
   645  0811  3400               	retlw	0
   646  0812  340A               	retlw	10
   647  0813  3400               	retlw	0
   648  0814  3464               	retlw	100
   649  0815  3400               	retlw	0
   650  0816  34E8               	retlw	232
   651  0817  3403               	retlw	3
   652  0818  3410               	retlw	16
   653  0819  3427               	retlw	39
   654  081A                     __end_of_dpowers:	
   655  000E                     _TMR1	set	14
   656  001F                     _ADCON0bits	set	31
   657  001E                     _ADRESH	set	30
   658  0017                     _CCP1CON	set	23
   659  0017                     _CCP1CONbits	set	23
   660  001D                     _CCP2CON	set	29
   661  001D                     _CCP2CONbits	set	29
   662  0015                     _CCPR1L	set	21
   663  001B                     _CCPR2L	set	27
   664  000B                     _INTCONbits	set	11
   665  000C                     _PIR1bits	set	12
   666  000D                     _PIR2bits	set	13
   667  0005                     _PORTA	set	5
   668  0006                     _PORTB	set	6
   669  0006                     _PORTBbits	set	6
   670  0007                     _PORTC	set	7
   671  0008                     _PORTD	set	8
   672  0009                     _PORTE	set	9
   673  0009                     _PORTEbits	set	9
   674  001A                     _RCREG	set	26
   675  0018                     _RCSTAbits	set	24
   676  0013                     _SSPBUF	set	19
   677  0014                     _SSPCONbits	set	20
   678  0010                     _T1CON	set	16
   679  0010                     _T1CONbits	set	16
   680  0012                     _T2CONbits	set	18
   681  0001                     _TMR0	set	1
   682  000F                     _TMR1H	set	15
   683  000E                     _TMR1L	set	14
   684  0019                     _TXREG	set	25
   685  00C1                     _OERR	set	193
   686  009F                     _ADCON1bits	set	159
   687  009E                     _ADRESL	set	158
   688  0081                     _OPTION_REGbits	set	129
   689  008C                     _PIE1bits	set	140
   690  008D                     _PIE2bits	set	141
   691  0092                     _PR2	set	146
   692  0099                     _SPBRG	set	153
   693  0093                     _SSPADD	set	147
   694  0091                     _SSPCON2	set	145
   695  0091                     _SSPCON2bits	set	145
   696  0094                     _SSPSTATbits	set	148
   697  0085                     _TRISA	set	133
   698  0086                     _TRISB	set	134
   699  0087                     _TRISC	set	135
   700  0088                     _TRISD	set	136
   701  0089                     _TRISE	set	137
   702  0098                     _TXSTAbits	set	152
   703  010D                     _EEADR	set	269
   704  010C                     _EEDATA	set	268
   705  018C                     _EECON1bits	set	396
   706  018D                     _EECON2	set	397
   707  081A                     __stringdata:	
   708  081A                     STR_19:	
   709  081A  340A               	retlw	10
   710  081B  340D               	retlw	13
   711  081C  3420               	retlw	32	;' '
   712  081D  342D               	retlw	45	;'-'
   713  081E  342D               	retlw	45	;'-'
   714  081F  342D               	retlw	45	;'-'
   715  0820  342D               	retlw	45	;'-'
   716  0821  342D               	retlw	45	;'-'
   717  0822  342D               	retlw	45	;'-'
   718  0823  342D               	retlw	45	;'-'
   719  0824  3420               	retlw	32	;' '
   720  0825  3445               	retlw	69	;'E'
   721  0826  3453               	retlw	83	;'S'
   722  0827  3454               	retlw	84	;'T'
   723  0828  344F               	retlw	79	;'O'
   724  0829  3455               	retlw	85	;'U'
   725  082A  3452               	retlw	82	;'R'
   726  082B  344F               	retlw	79	;'O'
   727  082C  3420               	retlw	32	;' '
   728  082D  3444               	retlw	68	;'D'
   729  082E  3445               	retlw	69	;'E'
   730  082F  3420               	retlw	32	;' '
   731  0830  3450               	retlw	80	;'P'
   732  0831  3449               	retlw	73	;'I'
   733  0832  344C               	retlw	76	;'L'
   734  0833  3448               	retlw	72	;'H'
   735  0834  3441               	retlw	65	;'A'
   736  0835  3420               	retlw	32	;' '
   737  0836  342D               	retlw	45	;'-'
   738  0837  342D               	retlw	45	;'-'
   739  0838  342D               	retlw	45	;'-'
   740  0839  342D               	retlw	45	;'-'
   741  083A  342D               	retlw	45	;'-'
   742  083B  342D               	retlw	45	;'-'
   743  083C  342D               	retlw	45	;'-'
   744  083D  3420               	retlw	32	;' '
   745  083E  340A               	retlw	10
   746  083F  340D               	retlw	13
   747  0840  3420               	retlw	32	;' '
   748  0841  3400               	retlw	0
   749  0842                     STR_11:	
   750  0842  3449               	retlw	73	;'I'
   751  0843  346E               	retlw	110	;'n'
   752  0844  3469               	retlw	105	;'i'
   753  0845  3463               	retlw	99	;'c'
   754  0846  3469               	retlw	105	;'i'
   755  0847  3461               	retlw	97	;'a'
   756  0848  346C               	retlw	108	;'l'
   757  0849  3469               	retlw	105	;'i'
   758  084A  347A               	retlw	122	;'z'
   759  084B  3461               	retlw	97	;'a'
   760  084C  346E               	retlw	110	;'n'
   761  084D  3464               	retlw	100	;'d'
   762  084E  346F               	retlw	111	;'o'
   763  084F  3420               	retlw	32	;' '
   764  0850  346F               	retlw	111	;'o'
   765  0851  3420               	retlw	32	;' '
   766  0852  3450               	retlw	80	;'P'
   767  0853  3449               	retlw	73	;'I'
   768  0854  3443               	retlw	67	;'C'
   769  0855  3431               	retlw	49	;'1'
   770  0856  3436               	retlw	54	;'6'
   771  0857  3446               	retlw	70	;'F'
   772  0858  3438               	retlw	56	;'8'
   773  0859  3437               	retlw	55	;'7'
   774  085A  3437               	retlw	55	;'7'
   775  085B  3441               	retlw	65	;'A'
   776  085C  340A               	retlw	10
   777  085D  340D               	retlw	13
   778  085E  3400               	retlw	0
   779  085F                     STR_12:	
   780  085F  3455               	retlw	85	;'U'
   781  0860  3453               	retlw	83	;'S'
   782  0861  3441               	retlw	65	;'A'
   783  0862  3452               	retlw	82	;'R'
   784  0863  3454               	retlw	84	;'T'
   785  0864  343A               	retlw	58	;':'
   786  0865  3420               	retlw	32	;' '
   787  0866  3431               	retlw	49	;'1'
   788  0867  3431               	retlw	49	;'1'
   789  0868  3435               	retlw	53	;'5'
   790  0869  342E               	retlw	46	;'.'
   791  086A  3432               	retlw	50	;'2'
   792  086B  3430               	retlw	48	;'0'
   793  086C  3430               	retlw	48	;'0'
   794  086D  3462               	retlw	98	;'b'
   795  086E  3470               	retlw	112	;'p'
   796  086F  3473               	retlw	115	;'s'
   797  0870  340A               	retlw	10
   798  0871  340D               	retlw	13
   799  0872  3400               	retlw	0
   800  0873                     STR_13:	
   801  0873  3449               	retlw	73	;'I'
   802  0874  346E               	retlw	110	;'n'
   803  0875  3469               	retlw	105	;'i'
   804  0876  3463               	retlw	99	;'c'
   805  0877  3469               	retlw	105	;'i'
   806  0878  3461               	retlw	97	;'a'
   807  0879  346C               	retlw	108	;'l'
   808  087A  3469               	retlw	105	;'i'
   809  087B  347A               	retlw	122	;'z'
   810  087C  3461               	retlw	97	;'a'
   811  087D  346E               	retlw	110	;'n'
   812  087E  3464               	retlw	100	;'d'
   813  087F  346F               	retlw	111	;'o'
   814  0880  342E               	retlw	46	;'.'
   815  0881  342E               	retlw	46	;'.'
   816  0882  342E               	retlw	46	;'.'
   817  0883  3400               	retlw	0
   818  0884                     STR_10:	
   819  0884  340A               	retlw	10
   820  0885  340D               	retlw	13
   821  0886  3470               	retlw	112	;'p'
   822  0887  3477               	retlw	119	;'w'
   823  0888  346D               	retlw	109	;'m'
   824  0889  3420               	retlw	32	;' '
   825  088A  343D               	retlw	61	;'='
   826  088B  3420               	retlw	32	;' '
   827  088C  3431               	retlw	49	;'1'
   828  088D  3430               	retlw	48	;'0'
   829  088E  3432               	retlw	50	;'2'
   830  088F  3433               	retlw	51	;'3'
   831  0890  340A               	retlw	10
   832  0891  340D               	retlw	13
   833  0892  3400               	retlw	0
   834  0893                     STR_8:	
   835  0893  340A               	retlw	10
   836  0894  340D               	retlw	13
   837  0895  3470               	retlw	112	;'p'
   838  0896  3477               	retlw	119	;'w'
   839  0897  346D               	retlw	109	;'m'
   840  0898  3420               	retlw	32	;' '
   841  0899  343D               	retlw	61	;'='
   842  089A  3420               	retlw	32	;' '
   843  089B  3438               	retlw	56	;'8'
   844  089C  3439               	retlw	57	;'9'
   845  089D  3436               	retlw	54	;'6'
   846  089E  340A               	retlw	10
   847  089F  340D               	retlw	13
   848  08A0  3400               	retlw	0
   849  08A1                     STR_7:	
   850  08A1  340A               	retlw	10
   851  08A2  340D               	retlw	13
   852  08A3  3470               	retlw	112	;'p'
   853  08A4  3477               	retlw	119	;'w'
   854  08A5  346D               	retlw	109	;'m'
   855  08A6  3420               	retlw	32	;' '
   856  08A7  343D               	retlw	61	;'='
   857  08A8  3420               	retlw	32	;' '
   858  08A9  3437               	retlw	55	;'7'
   859  08AA  3436               	retlw	54	;'6'
   860  08AB  3438               	retlw	56	;'8'
   861  08AC  340A               	retlw	10
   862  08AD  340D               	retlw	13
   863  08AE  3400               	retlw	0
   864  08AF                     STR_1:	
   865  08AF  340A               	retlw	10
   866  08B0  340D               	retlw	13
   867  08B1  3464               	retlw	100	;'d'
   868  08B2  3465               	retlw	101	;'e'
   869  08B3  3473               	retlw	115	;'s'
   870  08B4  346C               	retlw	108	;'l'
   871  08B5  3469               	retlw	105	;'i'
   872  08B6  3467               	retlw	103	;'g'
   873  08B7  3461               	retlw	97	;'a'
   874  08B8  3464               	retlw	100	;'d'
   875  08B9  346F               	retlw	111	;'o'
   876  08BA  340A               	retlw	10
   877  08BB  340D               	retlw	13
   878  08BC  3400               	retlw	0
   879  08BD                     STR_2:	
   880  08BD  340A               	retlw	10
   881  08BE  340D               	retlw	13
   882  08BF  3470               	retlw	112	;'p'
   883  08C0  3477               	retlw	119	;'w'
   884  08C1  346D               	retlw	109	;'m'
   885  08C2  3420               	retlw	32	;' '
   886  08C3  343D               	retlw	61	;'='
   887  08C4  3420               	retlw	32	;' '
   888  08C5  340A               	retlw	10
   889  08C6  340D               	retlw	13
   890  08C7  3400               	retlw	0
   891  08C8                     STR_18:	
   892  08C8  3444               	retlw	68	;'D'
   893  08C9  3465               	retlw	101	;'e'
   894  08CA  346C               	retlw	108	;'l'
   895  08CB  3474               	retlw	116	;'t'
   896  08CC  3461               	retlw	97	;'a'
   897  08CD  343A               	retlw	58	;':'
   898  08CE  3420               	retlw	32	;' '
   899  08CF  3400               	retlw	0
   900  08D0                     STR_17:	
   901  08D0  3452               	retlw	82	;'R'
   902  08D1  3450               	retlw	80	;'P'
   903  08D2  344D               	retlw	77	;'M'
   904  08D3  343A               	retlw	58	;':'
   905  08D4  3420               	retlw	32	;' '
   906  08D5  3400               	retlw	0
   907  08D6                     STR_14:	
   908  08D6  3425               	retlw	37	;'%'
   909  08D7  3430               	retlw	48	;'0'
   910  08D8  3434               	retlw	52	;'4'
   911  08D9  3464               	retlw	100	;'d'
   912  08DA  3400               	retlw	0
   913  08DB                     __end_of__stringdata:	
   914                           
   915                           ; #config settings
   916  0000                     
   917                           	psect	cinit
   918  0015                     start_initialization:	
   919  0015                     __initialization:	
   920                           
   921                           ; Clear objects allocated to BANK0
   922  0015  1383               	bcf	3,7	;select IRP bank0
   923  0016  3061               	movlw	low __pbssBANK0
   924  0017  0084               	movwf	4
   925  0018  306E               	movlw	low (__pbssBANK0+13)
   926  0019  160A  118A  2200  120A  118A  	fcall	clear_ram0
   927                           
   928                           ; Clear objects allocated to BANK1
   929  001E  30A0               	movlw	low __pbssBANK1
   930  001F  0084               	movwf	4
   931  0020  30CA               	movlw	low (__pbssBANK1+42)
   932  0021  160A  118A  2200  120A  118A  	fcall	clear_ram0
   933                           
   934                           ; Clear objects allocated to BANK3
   935  0026  1783               	bsf	3,7	;select IRP bank2
   936  0027  3090               	movlw	low __pbssBANK3
   937  0028  0084               	movwf	4
   938  0029  30A7               	movlw	low (__pbssBANK3+23)
   939  002A  160A  118A  2200  120A  118A  	fcall	clear_ram0
   940                           
   941                           ; Initialize objects allocated to BANK1
   942  002F  1683               	bsf	3,5	;RP0=1, select bank1
   943  0030  1303               	bcf	3,6	;RP1=0, select bank1
   944  0031  160A  118A  21DF  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   945  0036  00EC               	movwf	__pdataBANK1& (0+127)
   946  0037  160A  118A  21E0  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   947  003C  00ED               	movwf	(__pdataBANK1+1)& (0+127)
   948  003D  160A  118A  21E1  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   949  0042  00EE               	movwf	(__pdataBANK1+2)& (0+127)
   950                           
   951                           ; Initialize objects allocated to BANK0
   952  0043  1283               	bcf	3,5	;RP0=0, select bank0
   953  0044  1303               	bcf	3,6	;RP1=0, select bank0
   954  0045  160A  118A  21DD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   955  004A  00EE               	movwf	__pdataBANK0& (0+127)
   956  004B  160A  118A  21DE   	fcall	__pidataBANK0+1	;fetch initializer
   957  004E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   958  004F                     end_of_initialization:	
   959                           ;End of C runtime variable initialization code
   960                           
   961  004F                     __end_of__initialization:	
   962  004F  0183               	clrf	3
   963  0050  120A  158A  2D1B   	ljmp	_main	;jump to C main() function
   964                           
   965                           	psect	bssBANK0
   966  0061                     __pbssBANK0:	
   967  0061                     _temp:	
   968  0061                     	ds	3
   969  0064                     _x:	
   970  0064                     	ds	3
   971  0067                     _y:	
   972  0067                     	ds	3
   973  006A                     _deltaV:	
   974  006A                     	ds	2
   975  006C                     _pwm:	
   976  006C                     	ds	2
   977                           
   978                           	psect	dataBANK0
   979  006E                     __pdataBANK0:	
   980  006E                     _pas_cooler:	
   981  006E                     	ds	2
   982                           
   983                           	psect	bssBANK1
   984  00A0                     __pbssBANK1:	
   985  00A0                     _ativa_fan:	
   986  00A0                     	ds	3
   987  00A3                     _fitemp:	
   988  00A3                     	ds	3
   989  00A6                     _fop_rule1:	
   990  00A6                     	ds	3
   991  00A9                     _fop_rule2:	
   992  00A9                     	ds	3
   993  00AC                     _fop_rule3:	
   994  00AC                     	ds	3
   995  00AF                     _sum:	
   996  00AF                     	ds	3
   997  00B2                     _tf:	
   998  00B2                     	ds	3
   999  00B5                     _total_area:	
  1000  00B5                     	ds	3
  1001  00B8                     _ADCResult:	
  1002  00B8                     	ds	2
  1003  00BA                     _contador_rb6:	
  1004  00BA                     	ds	2
  1005  00BC                     _contagens_tm0:	
  1006  00BC                     	ds	2
  1007  00BE                     _pulsos:	
  1008  00BE                     	ds	2
  1009  00C0                     _rpm:	
  1010  00C0                     	ds	2
  1011  00C2                     _setpointUI:	
  1012  00C2                     	ds	2
  1013  00C4                     _status:	
  1014  00C4                     	ds	2
  1015  00C6                     _temp_lida:	
  1016  00C6                     	ds	2
  1017  00C8                     _tempo_rb6:	
  1018  00C8                     	ds	2
  1019                           
  1020                           	psect	dataBANK1
  1021  00EC                     __pdataBANK1:	
  1022  00EC                     _setpoint:	
  1023  00EC                     	ds	3
  1024                           
  1025                           	psect	bssBANK3
  1026  0190                     __pbssBANK3:	
  1027  0190                     _derro:	
  1028  0190                     	ds	3
  1029  0193                     _display_pwm:	
  1030  0193                     	ds	10
  1031  019D                     _display_rpm:	
  1032  019D                     	ds	10
  1033                           
  1034                           	psect	clrtext
  1035  1200                     clear_ram0:	
  1036                           ;	Called with FSR containing the base address, and
  1037                           ;	W with the last address+1
  1038                           
  1039  1200  0064               	clrwdt	;clear the watchdog before getting into this loop
  1040  1201                     clrloop0:	
  1041  1201  0180               	clrf	0	;clear RAM location pointed to by FSR
  1042  1202  0A84               	incf	4,f	;increment pointer
  1043  1203  0604               	xorwf	4,w	;XOR with final address
  1044  1204  1903               	btfsc	3,2	;have we reached the end yet?
  1045  1205  3400               	retlw	0	;all done for this memory range, return
  1046  1206  0604               	xorwf	4,w	;XOR again to restore value
  1047  1207  2A01               	goto	clrloop0	;do the next byte
  1048                           
  1049                           	psect	cstackBANK1
  1050  00CA                     __pcstackBANK1:	
  1051  00CA                     ?_PWM_DutyCycle2:	
  1052  00CA                     ??_TIMER0_Set:	
  1053                           ; 0 bytes @ 0x0
  1054                           
  1055  00CA                     ??_TIMER0_Init:	
  1056                           ; 0 bytes @ 0x0
  1057                           
  1058  00CA                     ??_ADC_Init:	
  1059                           ; 0 bytes @ 0x0
  1060                           
  1061  00CA                     ??_PWM_Init:	
  1062                           ; 0 bytes @ 0x0
  1063                           
  1064  00CA                     ?_LCD_Cursor:	
  1065                           ; 0 bytes @ 0x0
  1066                           
  1067  00CA                     ?_PWM_DutyCycle1:	
  1068                           ; 0 bytes @ 0x0
  1069                           
  1070  00CA                     ??_isdigit:	
  1071                           ; 0 bytes @ 0x0
  1072                           
  1073  00CA                     ??_USART_WriteChar:	
  1074                           ; 0 bytes @ 0x0
  1075                           
  1076  00CA                     ??_LCD_WriteCmd:	
  1077                           ; 0 bytes @ 0x0
  1078                           
  1079  00CA                     ??_LCD_WriteData:	
  1080                           ; 0 bytes @ 0x0
  1081                           
  1082  00CA                     ?___wmul:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  00CA                     ?___lwdiv:	
  1086                           ; 2 bytes @ 0x0
  1087                           
  1088  00CA                     ?___aldiv:	
  1089                           ; 2 bytes @ 0x0
  1090                           
  1091  00CA                     USART_WriteChar@byte:	
  1092                           ; 4 bytes @ 0x0
  1093                           
  1094  00CA                     TIMER0_Set@contagens:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  00CA                     LCD_Cursor@Col:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  00CA                     _isdigit$1449:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  00CA                     PWM_DutyCycle1@valor:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  00CA                     PWM_DutyCycle2@valor:	
  1107                           ; 2 bytes @ 0x0
  1108                           
  1109  00CA                     ___wmul@multiplier:	
  1110                           ; 2 bytes @ 0x0
  1111                           
  1112  00CA                     ___lwdiv@divisor:	
  1113                           ; 2 bytes @ 0x0
  1114                           
  1115  00CA                     ___aldiv@divisor:	
  1116                           ; 2 bytes @ 0x0
  1117                           
  1118                           
  1119                           ; 4 bytes @ 0x0
  1120  00CA                     	ds	1
  1121  00CB                     ?_USART_WriteString:	
  1122  00CB                     ??_LCD_Cursor:	
  1123                           ; 0 bytes @ 0x1
  1124                           
  1125  00CB                     LCD_WriteCmd@Byte:	
  1126                           ; 0 bytes @ 0x1
  1127                           
  1128  00CB                     LCD_WriteData@Byte:	
  1129                           ; 1 bytes @ 0x1
  1130                           
  1131  00CB                     isdigit@c:	
  1132                           ; 1 bytes @ 0x1
  1133                           
  1134  00CB                     USART_WriteString@str:	
  1135                           ; 1 bytes @ 0x1
  1136                           
  1137                           
  1138                           ; 2 bytes @ 0x1
  1139  00CB                     	ds	1
  1140  00CC                     ??_PWM_DutyCycle2:	
  1141  00CC                     ??_LCD_Init:	
  1142                           ; 0 bytes @ 0x2
  1143                           
  1144  00CC                     ?_LCD_WriteString:	
  1145                           ; 0 bytes @ 0x2
  1146                           
  1147  00CC                     ??_PWM_DutyCycle1:	
  1148                           ; 0 bytes @ 0x2
  1149                           
  1150  00CC                     ??_LCD_Clear:	
  1151                           ; 0 bytes @ 0x2
  1152                           
  1153  00CC                     LCD_Cursor@Row:	
  1154                           ; 0 bytes @ 0x2
  1155                           
  1156  00CC                     LCD_WriteString@Str:	
  1157                           ; 1 bytes @ 0x2
  1158                           
  1159  00CC                     ___wmul@multiplicand:	
  1160                           ; 2 bytes @ 0x2
  1161                           
  1162  00CC                     ___lwdiv@dividend:	
  1163                           ; 2 bytes @ 0x2
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0x2
  1167  00CC                     	ds	1
  1168  00CD                     ??_USART_WriteString:	
  1169                           
  1170                           ; 0 bytes @ 0x3
  1171  00CD                     	ds	1
  1172  00CE                     ??_LCD_WriteString:	
  1173  00CE                     ??___wmul:	
  1174                           ; 0 bytes @ 0x4
  1175                           
  1176  00CE                     ??___lwdiv:	
  1177                           ; 0 bytes @ 0x4
  1178                           
  1179  00CE                     ___wmul@product:	
  1180                           ; 0 bytes @ 0x4
  1181                           
  1182  00CE                     ___aldiv@dividend:	
  1183                           ; 2 bytes @ 0x4
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x4
  1187  00CE                     	ds	1
  1188  00CF                     ___lwdiv@quotient:	
  1189                           
  1190                           ; 2 bytes @ 0x5
  1191  00CF                     	ds	2
  1192  00D1                     ___lwdiv@counter:	
  1193                           
  1194                           ; 1 bytes @ 0x7
  1195  00D1                     	ds	1
  1196  00D2                     ??___aldiv:	
  1197  00D2                     ?___lwmod:	
  1198                           ; 0 bytes @ 0x8
  1199                           
  1200  00D2                     ___lwmod@divisor:	
  1201                           ; 2 bytes @ 0x8
  1202                           
  1203                           
  1204                           ; 2 bytes @ 0x8
  1205  00D2                     	ds	1
  1206  00D3                     ___aldiv@counter:	
  1207                           
  1208                           ; 1 bytes @ 0x9
  1209  00D3                     	ds	1
  1210  00D4                     ___aldiv@sign:	
  1211  00D4                     ___lwmod@dividend:	
  1212                           ; 1 bytes @ 0xA
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0xA
  1216  00D4                     	ds	1
  1217  00D5                     ___aldiv@quotient:	
  1218                           
  1219                           ; 4 bytes @ 0xB
  1220  00D5                     	ds	1
  1221  00D6                     ??___lwmod:	
  1222                           
  1223                           ; 0 bytes @ 0xC
  1224  00D6                     	ds	1
  1225  00D7                     ___lwmod@counter:	
  1226                           
  1227                           ; 1 bytes @ 0xD
  1228  00D7                     	ds	1
  1229  00D8                     ?_sprintf:	
  1230  00D8                     sprintf@f:	
  1231                           ; 2 bytes @ 0xE
  1232                           
  1233                           
  1234                           ; 1 bytes @ 0xE
  1235  00D8                     	ds	1
  1236  00D9                     ?_USART_Init:	
  1237  00D9                     USART_Init@BaudRate:	
  1238                           ; 0 bytes @ 0xF
  1239                           
  1240                           
  1241                           ; 4 bytes @ 0xF
  1242  00D9                     	ds	2
  1243  00DB                     ??_sprintf:	
  1244                           
  1245                           ; 0 bytes @ 0x11
  1246  00DB                     	ds	2
  1247  00DD                     ??_USART_Init:	
  1248                           
  1249                           ; 0 bytes @ 0x13
  1250  00DD                     	ds	1
  1251  00DE                     sprintf@ap:	
  1252                           
  1253                           ; 1 bytes @ 0x14
  1254  00DE                     	ds	1
  1255  00DF                     sprintf@prec:	
  1256                           
  1257                           ; 1 bytes @ 0x15
  1258  00DF                     	ds	1
  1259  00E0                     sprintf@_val:	
  1260                           
  1261                           ; 4 bytes @ 0x16
  1262  00E0                     	ds	4
  1263  00E4                     sprintf@flag:	
  1264                           
  1265                           ; 1 bytes @ 0x1A
  1266  00E4                     	ds	1
  1267  00E5                     sprintf@width:	
  1268                           
  1269                           ; 2 bytes @ 0x1B
  1270  00E5                     	ds	2
  1271  00E7                     sprintf@sp:	
  1272                           
  1273                           ; 1 bytes @ 0x1D
  1274  00E7                     	ds	1
  1275  00E8                     sprintf@c:	
  1276                           
  1277                           ; 1 bytes @ 0x1E
  1278  00E8                     	ds	1
  1279  00E9                     ??_main:	
  1280                           
  1281                           ; 0 bytes @ 0x1F
  1282  00E9                     	ds	3
  1283                           
  1284                           	psect	cstackCOMMON
  1285  0070                     __pcstackCOMMON:	
  1286  0070                     ?_TIMER0_Set:	
  1287  0070                     ?_TIMER0_Init:	
  1288                           ; 0 bytes @ 0x0
  1289                           
  1290  0070                     ?_ADC_Init:	
  1291                           ; 0 bytes @ 0x0
  1292                           
  1293  0070                     ?_PWM_Init:	
  1294                           ; 0 bytes @ 0x0
  1295                           
  1296  0070                     ?_LCD_Init:	
  1297                           ; 0 bytes @ 0x0
  1298                           
  1299  0070                     ?_LCD_Clear:	
  1300                           ; 0 bytes @ 0x0
  1301                           
  1302  0070                     ?_isdigit:	
  1303                           ; 0 bytes @ 0x0
  1304                           
  1305  0070                     ?_Fuzzy:	
  1306                           ; 1 bit 
  1307                           
  1308  0070                     ?_ISR:	
  1309                           ; 0 bytes @ 0x0
  1310                           
  1311  0070                     ?_main:	
  1312                           ; 0 bytes @ 0x0
  1313                           
  1314  0070                     ?_USART_WriteChar:	
  1315                           ; 0 bytes @ 0x0
  1316                           
  1317  0070                     ?_LCD_WriteCmd:	
  1318                           ; 0 bytes @ 0x0
  1319                           
  1320  0070                     ?_LCD_WriteData:	
  1321                           ; 0 bytes @ 0x0
  1322                           
  1323  0070                     ?___ftge:	
  1324                           ; 0 bytes @ 0x0
  1325                           
  1326  0070                     ?i1_USART_WriteChar:	
  1327                           ; 1 bit 
  1328                           
  1329  0070                     ??i1_USART_WriteChar:	
  1330                           ; 0 bytes @ 0x0
  1331                           
  1332  0070                     ?i1_TIMER0_Set:	
  1333                           ; 0 bytes @ 0x0
  1334                           
  1335  0070                     ??i1_TIMER0_Set:	
  1336                           ; 0 bytes @ 0x0
  1337                           
  1338  0070                     ?i1_PWM_DutyCycle2:	
  1339                           ; 0 bytes @ 0x0
  1340                           
  1341  0070                     ?_USART_ReceiveChar:	
  1342                           ; 0 bytes @ 0x0
  1343                           
  1344  0070                     ?i1___lwdiv:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?___ftpack:	
  1348                           ; 2 bytes @ 0x0
  1349                           
  1350  0070                     ?___ftneg:	
  1351                           ; 3 bytes @ 0x0
  1352                           
  1353  0070                     ?___fttol:	
  1354                           ; 3 bytes @ 0x0
  1355                           
  1356  0070                     i1USART_WriteChar@byte:	
  1357                           ; 4 bytes @ 0x0
  1358                           
  1359  0070                     i1TIMER0_Set@contagens:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     i1PWM_DutyCycle2@valor:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     i1___lwdiv@divisor:	
  1366                           ; 2 bytes @ 0x0
  1367                           
  1368  0070                     ___ftpack@arg:	
  1369                           ; 2 bytes @ 0x0
  1370                           
  1371  0070                     ___ftge@ff1:	
  1372                           ; 3 bytes @ 0x0
  1373                           
  1374  0070                     ___ftneg@f1:	
  1375                           ; 3 bytes @ 0x0
  1376                           
  1377  0070                     ___fttol@f1:	
  1378                           ; 3 bytes @ 0x0
  1379                           
  1380                           
  1381                           ; 3 bytes @ 0x0
  1382  0070                     	ds	1
  1383  0071                     ?i1_USART_WriteString:	
  1384  0071                     i1USART_WriteString@str:	
  1385                           ; 0 bytes @ 0x1
  1386                           
  1387                           
  1388                           ; 2 bytes @ 0x1
  1389  0071                     	ds	1
  1390  0072                     ??i1_PWM_DutyCycle2:	
  1391  0072                     i1___lwdiv@dividend:	
  1392                           ; 0 bytes @ 0x2
  1393                           
  1394                           
  1395                           ; 2 bytes @ 0x2
  1396  0072                     	ds	1
  1397  0073                     ??_USART_ReceiveChar:	
  1398  0073                     ??___ftneg:	
  1399                           ; 0 bytes @ 0x3
  1400                           
  1401  0073                     ??i1_USART_WriteString:	
  1402                           ; 0 bytes @ 0x3
  1403                           
  1404  0073                     ___ftpack@exp:	
  1405                           ; 0 bytes @ 0x3
  1406                           
  1407  0073                     ___ftge@ff2:	
  1408                           ; 1 bytes @ 0x3
  1409                           
  1410                           
  1411                           ; 3 bytes @ 0x3
  1412  0073                     	ds	1
  1413  0074                     ??___fttol:	
  1414  0074                     ??i1___lwdiv:	
  1415                           ; 0 bytes @ 0x4
  1416                           
  1417  0074                     USART_ReceiveChar@byte:	
  1418                           ; 0 bytes @ 0x4
  1419                           
  1420  0074                     ___ftpack@sign:	
  1421                           ; 1 bytes @ 0x4
  1422                           
  1423                           
  1424                           ; 1 bytes @ 0x4
  1425  0074                     	ds	1
  1426  0075                     ??___ftpack:	
  1427  0075                     i1___lwdiv@quotient:	
  1428                           ; 0 bytes @ 0x5
  1429                           
  1430                           
  1431                           ; 2 bytes @ 0x5
  1432  0075                     	ds	1
  1433  0076                     ??___ftge:	
  1434                           
  1435                           ; 0 bytes @ 0x6
  1436  0076                     	ds	1
  1437  0077                     i1___lwdiv@counter:	
  1438                           
  1439                           ; 1 bytes @ 0x7
  1440  0077                     	ds	1
  1441  0078                     ?i1___wmul:	
  1442  0078                     ?___ftadd:	
  1443                           ; 2 bytes @ 0x8
  1444                           
  1445  0078                     ?___lwtoft:	
  1446                           ; 3 bytes @ 0x8
  1447                           
  1448  0078                     ___fttol@sign1:	
  1449                           ; 3 bytes @ 0x8
  1450                           
  1451  0078                     ___lwtoft@c:	
  1452                           ; 1 bytes @ 0x8
  1453                           
  1454  0078                     i1___wmul@multiplier:	
  1455                           ; 2 bytes @ 0x8
  1456                           
  1457  0078                     ___ftadd@f1:	
  1458                           ; 2 bytes @ 0x8
  1459                           
  1460                           
  1461                           ; 3 bytes @ 0x8
  1462  0078                     	ds	1
  1463  0079                     ___fttol@lval:	
  1464                           
  1465                           ; 4 bytes @ 0x9
  1466  0079                     	ds	1
  1467  007A                     i1___wmul@multiplicand:	
  1468                           
  1469                           ; 2 bytes @ 0xA
  1470  007A                     	ds	1
  1471  007B                     ??___lwtoft:	
  1472  007B                     ___ftadd@f2:	
  1473                           ; 0 bytes @ 0xB
  1474                           
  1475                           
  1476                           ; 3 bytes @ 0xB
  1477  007B                     	ds	1
  1478  007C                     ??_max_val:	
  1479  007C                     ??i1___wmul:	
  1480                           ; 0 bytes @ 0xC
  1481                           
  1482  007C                     i1___wmul@product:	
  1483                           ; 0 bytes @ 0xC
  1484                           
  1485                           
  1486                           ; 2 bytes @ 0xC
  1487  007C                     	ds	1
  1488  007D                     ___fttol@exp1:	
  1489                           
  1490                           ; 1 bytes @ 0xD
  1491  007D                     	ds	1
  1492  007E                     ??_trimf:	
  1493  007E                     ??_trapmf:	
  1494                           ; 0 bytes @ 0xE
  1495                           
  1496  007E                     ??_Fuzzy:	
  1497                           ; 0 bytes @ 0xE
  1498                           
  1499                           
  1500                           	psect	cstackBANK0
  1501  0020                     __pcstackBANK0:	
  1502                           ; 0 bytes @ 0xE
  1503                           
  1504  0020                     ??___ftadd:	
  1505  0020                     ?_max_val:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0020                     max_val@a:	
  1509                           ; 3 bytes @ 0x0
  1510                           
  1511                           
  1512                           ; 3 bytes @ 0x0
  1513  0020                     	ds	3
  1514  0023                     max_val@b:	
  1515                           
  1516                           ; 3 bytes @ 0x3
  1517  0023                     	ds	1
  1518  0024                     ___ftadd@sign:	
  1519                           
  1520                           ; 1 bytes @ 0x4
  1521  0024                     	ds	1
  1522  0025                     ___ftadd@exp2:	
  1523                           
  1524                           ; 1 bytes @ 0x5
  1525  0025                     	ds	1
  1526  0026                     ___ftadd@exp1:	
  1527                           
  1528                           ; 1 bytes @ 0x6
  1529  0026                     	ds	1
  1530  0027                     ?___ftdiv:	
  1531  0027                     ___ftdiv@f2:	
  1532                           ; 3 bytes @ 0x7
  1533                           
  1534                           
  1535                           ; 3 bytes @ 0x7
  1536  0027                     	ds	3
  1537  002A                     ___ftdiv@f1:	
  1538                           
  1539                           ; 3 bytes @ 0xA
  1540  002A                     	ds	3
  1541  002D                     ??___ftdiv:	
  1542                           
  1543                           ; 0 bytes @ 0xD
  1544  002D                     	ds	4
  1545  0031                     ___ftdiv@cntr:	
  1546                           
  1547                           ; 1 bytes @ 0x11
  1548  0031                     	ds	1
  1549  0032                     ___ftdiv@f3:	
  1550                           
  1551                           ; 3 bytes @ 0x12
  1552  0032                     	ds	3
  1553  0035                     ___ftdiv@exp:	
  1554                           
  1555                           ; 1 bytes @ 0x15
  1556  0035                     	ds	1
  1557  0036                     ___ftdiv@sign:	
  1558                           
  1559                           ; 1 bytes @ 0x16
  1560  0036                     	ds	1
  1561  0037                     ?_trimf:	
  1562  0037                     ?_trapmf:	
  1563                           ; 3 bytes @ 0x17
  1564                           
  1565  0037                     ?___ftmul:	
  1566                           ; 3 bytes @ 0x17
  1567                           
  1568  0037                     trimf@x:	
  1569                           ; 3 bytes @ 0x17
  1570                           
  1571  0037                     trapmf@x:	
  1572                           ; 3 bytes @ 0x17
  1573                           
  1574  0037                     ___ftmul@f1:	
  1575                           ; 3 bytes @ 0x17
  1576                           
  1577                           
  1578                           ; 3 bytes @ 0x17
  1579  0037                     	ds	3
  1580  003A                     trimf@a:	
  1581  003A                     trapmf@a:	
  1582                           ; 3 bytes @ 0x1A
  1583                           
  1584  003A                     ___ftmul@f2:	
  1585                           ; 3 bytes @ 0x1A
  1586                           
  1587                           
  1588                           ; 3 bytes @ 0x1A
  1589  003A                     	ds	3
  1590  003D                     ??___ftmul:	
  1591  003D                     trimf@b:	
  1592                           ; 0 bytes @ 0x1D
  1593                           
  1594  003D                     trapmf@b:	
  1595                           ; 3 bytes @ 0x1D
  1596                           
  1597                           
  1598                           ; 3 bytes @ 0x1D
  1599  003D                     	ds	3
  1600  0040                     trimf@c:	
  1601  0040                     trapmf@c:	
  1602                           ; 3 bytes @ 0x20
  1603                           
  1604                           
  1605                           ; 3 bytes @ 0x20
  1606  0040                     	ds	1
  1607  0041                     ___ftmul@exp:	
  1608                           
  1609                           ; 1 bytes @ 0x21
  1610  0041                     	ds	1
  1611  0042                     ___ftmul@f3_as_product:	
  1612                           
  1613                           ; 3 bytes @ 0x22
  1614  0042                     	ds	1
  1615  0043                     trimf@ua:	
  1616  0043                     trapmf@d:	
  1617                           ; 3 bytes @ 0x23
  1618                           
  1619                           
  1620                           ; 3 bytes @ 0x23
  1621  0043                     	ds	2
  1622  0045                     ___ftmul@cntr:	
  1623                           
  1624                           ; 1 bytes @ 0x25
  1625  0045                     	ds	1
  1626  0046                     ___ftmul@sign:	
  1627  0046                     trapmf@ua:	
  1628                           ; 1 bytes @ 0x26
  1629                           
  1630                           
  1631                           ; 3 bytes @ 0x26
  1632  0046                     	ds	3
  1633  0049                     Fuzzy@tip:	
  1634                           
  1635                           ; 3 bytes @ 0x29
  1636  0049                     	ds	3
  1637  004C                     Fuzzy@a:	
  1638                           
  1639                           ; 2 bytes @ 0x2C
  1640  004C                     	ds	2
  1641  004E                     Fuzzy@a_241:	
  1642                           
  1643                           ; 2 bytes @ 0x2E
  1644  004E                     	ds	2
  1645  0050                     Fuzzy@a_242:	
  1646                           
  1647                           ; 2 bytes @ 0x30
  1648  0050                     	ds	2
  1649  0052                     Fuzzy@a_243:	
  1650                           
  1651                           ; 2 bytes @ 0x32
  1652  0052                     	ds	2
  1653  0054                     Fuzzy@mantem:	
  1654                           
  1655                           ; 3 bytes @ 0x34
  1656  0054                     	ds	3
  1657  0057                     Fuzzy@reduz:	
  1658                           
  1659                           ; 3 bytes @ 0x37
  1660  0057                     	ds	3
  1661  005A                     Fuzzy@aumenta:	
  1662                           
  1663                           ; 3 bytes @ 0x3A
  1664  005A                     	ds	3
  1665  005D                     ??_ISR:	
  1666                           
  1667                           ; 0 bytes @ 0x3D
  1668  005D                     	ds	4
  1669                           
  1670                           	psect	maintext
  1671  0D1B                     __pmaintext:	
  1672 ;;
  1673 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1674 ;;
  1675 ;; *************** function _main *****************
  1676 ;; Defined at:
  1677 ;;		line 480 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;		None               void
  1684 ;; Registers used:
  1685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 17F/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0
  1693 ;;      Temps:          0       0       3       0       0
  1694 ;;      Totals:         0       0       3       0       0
  1695 ;;Total ram usage:        3 bytes
  1696 ;; Hardware stack levels required when called:    7
  1697 ;; This function calls:
  1698 ;;		_ADC_Init
  1699 ;;		_LCD_Clear
  1700 ;;		_LCD_Cursor
  1701 ;;		_LCD_Init
  1702 ;;		_LCD_WriteString
  1703 ;;		_PWM_DutyCycle1
  1704 ;;		_PWM_DutyCycle2
  1705 ;;		_PWM_Init
  1706 ;;		_TIMER0_Init
  1707 ;;		_TIMER0_Set
  1708 ;;		_USART_Init
  1709 ;;		_USART_WriteString
  1710 ;;		_sprintf
  1711 ;; This function is called by:
  1712 ;;		Startup code after reset
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _main
  1718  0D1B                     _main:	
  1719                           
  1720                           ;main.c: 482: TRISA = 0b00000001;
  1721                           
  1722                           ;incstack = 0
  1723                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1724  0D1B  3001               	movlw	1
  1725  0D1C  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0D1D  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0D1E  0085               	movwf	5	;volatile
  1728                           
  1729                           ;main.c: 483: PORTA = 0b00000001;
  1730  0D1F  3001               	movlw	1
  1731  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0D22  0085               	movwf	5	;volatile
  1734                           
  1735                           ;main.c: 484: TRISB = 0b00000000;
  1736  0D23  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0D24  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0D25  0186               	clrf	6	;volatile
  1739                           
  1740                           ;main.c: 485: PORTB = 0b00000000;
  1741  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0D28  0186               	clrf	6	;volatile
  1744                           
  1745                           ;main.c: 486: TRISC = 0b10000001;
  1746  0D29  3081               	movlw	129
  1747  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  1748  0D2B  1303               	bcf	3,6	;RP1=0, select bank1
  1749  0D2C  0087               	movwf	7	;volatile
  1750                           
  1751                           ;main.c: 487: PORTC = 0b11000000;
  1752  0D2D  30C0               	movlw	192
  1753  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0D30  0087               	movwf	7	;volatile
  1756                           
  1757                           ;main.c: 488: TRISD = 0b00000000;
  1758  0D31  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0D32  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0D33  0188               	clrf	8	;volatile
  1761                           
  1762                           ;main.c: 489: PORTD = 0b00000000;
  1763  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0D36  0188               	clrf	8	;volatile
  1766                           
  1767                           ;main.c: 490: TRISE = 0b00000000;
  1768  0D37  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0D38  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0D39  0189               	clrf	9	;volatile
  1771                           
  1772                           ;main.c: 491: PORTE = 0b00000000;
  1773  0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0D3C  0189               	clrf	9	;volatile
  1776                           
  1777                           ;main.c: 494: T1CON = 0x03;
  1778  0D3D  3003               	movlw	3
  1779  0D3E  0090               	movwf	16	;volatile
  1780                           
  1781                           ;main.c: 495: TMR1L = 0x00;
  1782  0D3F  018E               	clrf	14	;volatile
  1783                           
  1784                           ;main.c: 496: TMR1H = 0x00;
  1785  0D40  018F               	clrf	15	;volatile
  1786                           
  1787                           ;main.c: 499: USART_Init(115200);
  1788  0D41  3000               	movlw	0
  1789  0D42  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0D43  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0D44  00DC               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1792  0D45  3001               	movlw	1
  1793  0D46  00DB               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1794  0D47  30C2               	movlw	194
  1795  0D48  00DA               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1796  0D49  3000               	movlw	0
  1797  0D4A  00D9               	movwf	USART_Init@BaudRate^(0+128)
  1798  0D4B  160A  118A  24F6  120A  158A  	fcall	_USART_Init
  1799                           
  1800                           ;main.c: 500: TIMER0_Init();
  1801  0D50  160A  118A  2208  120A  158A  	fcall	_TIMER0_Init
  1802                           
  1803                           ;main.c: 501: ADC_Init();
  1804  0D55  120A  158A  20DC  120A  158A  	fcall	_ADC_Init
  1805                           
  1806                           ;main.c: 502: PWM_Init();
  1807  0D5A  160A  118A  236E  120A  158A  	fcall	_PWM_Init
  1808                           
  1809                           ;main.c: 503: LCD_Init();
  1810  0D5F  160A  118A  25A7  120A  158A  	fcall	_LCD_Init
  1811                           
  1812                           ;main.c: 506: INTCONbits.PEIE = 1;
  1813  0D64  170B               	bsf	11,6	;volatile
  1814                           
  1815                           ;main.c: 507: INTCONbits.GIE = 1;
  1816  0D65  178B               	bsf	11,7	;volatile
  1817                           
  1818                           ;main.c: 510: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1819  0D66  3033               	movlw	low (STR_11-__stringbase)
  1820  0D67  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0D68  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0D69  00CB               	movwf	USART_WriteString@str^(0+128)
  1823  0D6A  3080               	movlw	128
  1824  0D6B  00CC               	movwf	(USART_WriteString@str+1)^(0+128)
  1825  0D6C  160A  118A  2411  120A  158A  	fcall	_USART_WriteString
  1826                           
  1827                           ;main.c: 511: USART_WriteString("USART: 115.200bps\n\r");
  1828  0D71  3050               	movlw	low (STR_12-__stringbase)
  1829  0D72  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0D73  1303               	bcf	3,6	;RP1=0, select bank1
  1831  0D74  00CB               	movwf	USART_WriteString@str^(0+128)
  1832  0D75  3080               	movlw	128
  1833  0D76  00CC               	movwf	(USART_WriteString@str+1)^(0+128)
  1834  0D77  160A  118A  2411  120A  158A  	fcall	_USART_WriteString
  1835                           
  1836                           ;main.c: 514: LCD_Init();
  1837  0D7C  160A  118A  25A7  120A  158A  	fcall	_LCD_Init
  1838                           
  1839                           ;main.c: 515: LCD_Cursor(0,0);
  1840  0D81  1683               	bsf	3,5	;RP0=1, select bank1
  1841  0D82  1303               	bcf	3,6	;RP1=0, select bank1
  1842  0D83  01CA               	clrf	LCD_Cursor@Col^(0+128)
  1843  0D84  3000               	movlw	0
  1844  0D85  160A  118A  22C6  120A  158A  	fcall	_LCD_Cursor
  1845                           
  1846                           ;main.c: 516: LCD_WriteString("Inicializando...");
  1847  0D8A  3064               	movlw	low (STR_13-__stringbase)
  1848  0D8B  1683               	bsf	3,5	;RP0=1, select bank1
  1849  0D8C  1303               	bcf	3,6	;RP1=0, select bank1
  1850  0D8D  00CC               	movwf	LCD_WriteString@Str^(0+128)
  1851  0D8E  3080               	movlw	128
  1852  0D8F  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1853  0D90  160A  118A  23E0  120A  158A  	fcall	_LCD_WriteString
  1854                           
  1855                           ;main.c: 519: PWM_DutyCycle1(0);
  1856  0D95  3000               	movlw	0
  1857  0D96  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0D97  1303               	bcf	3,6	;RP1=0, select bank1
  1859  0D98  00CA               	movwf	PWM_DutyCycle1@valor^(0+128)
  1860  0D99  3000               	movlw	0
  1861  0D9A  00CB               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1862  0D9B  160A  118A  22E6  120A  158A  	fcall	_PWM_DutyCycle1
  1863                           
  1864                           ;main.c: 520: PWM_DutyCycle2(0);
  1865  0DA0  3000               	movlw	0
  1866  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  1867  0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  1868  0DA3  00CA               	movwf	PWM_DutyCycle2@valor^(0+128)
  1869  0DA4  3000               	movlw	0
  1870  0DA5  00CB               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1871  0DA6  160A  118A  2307  120A  158A  	fcall	_PWM_DutyCycle2
  1872                           
  1873                           ;main.c: 523: TIMER0_Set(238);
  1874  0DAB  30EE               	movlw	238
  1875  0DAC  160A  118A  21F8  120A  158A  	fcall	_TIMER0_Set
  1876                           
  1877                           ;main.c: 526: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1878  0DB1  3018               	movlw	24
  1879  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  1880  0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  1881  0DB4  00EB               	movwf	(??_main^(0+128)+2)
  1882  0DB5  3061               	movlw	97
  1883  0DB6  00EA               	movwf	(??_main^(0+128)+1)
  1884  0DB7  306E               	movlw	110
  1885  0DB8  00E9               	movwf	??_main^(0+128)
  1886  0DB9                     u4147:	
  1887  0DB9  0BE9               	decfsz	??_main^(0+128),f
  1888  0DBA  2DB9               	goto	u4147
  1889  0DBB  0BEA               	decfsz	(??_main^(0+128)+1),f
  1890  0DBC  2DB9               	goto	u4147
  1891  0DBD  0BEB               	decfsz	(??_main^(0+128)+2),f
  1892  0DBE  2DB9               	goto	u4147
  1893  0DBF  0000               	nop
  1894  0DC0                     l206:	
  1895                           ;main.c: 529: while(1)
  1896                           
  1897                           
  1898                           ;main.c: 530: {
  1899                           ;main.c: 534: sprintf(display_rpm,"%04d", rpm);
  1900  0DC0  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1901  0DC1  1683               	bsf	3,5	;RP0=1, select bank1
  1902  0DC2  1303               	bcf	3,6	;RP1=0, select bank1
  1903  0DC3  00E9               	movwf	??_main^(0+128)
  1904  0DC4  0869               	movf	??_main^(0+128),w
  1905  0DC5  00D8               	movwf	sprintf@f^(0+128)
  1906  0DC6  0841               	movf	(_rpm+1)^(0+128),w
  1907  0DC7  01DA               	clrf	((?_sprintf+1)^(0+128)+1)
  1908  0DC8  07DA               	addwf	((?_sprintf+1)^(0+128)+1),f
  1909  0DC9  0840               	movf	_rpm^(0+128),w
  1910  0DCA  01D9               	clrf	(?_sprintf^(0+128)+1)
  1911  0DCB  07D9               	addwf	(?_sprintf^(0+128)+1),f
  1912  0DCC  309D               	movlw	_display_rpm& (0+255)
  1913  0DCD  120A  118A  25EB  120A  158A  	fcall	_sprintf
  1914                           
  1915                           ;main.c: 535: sprintf(display_pwm,"%04d", deltaV);
  1916  0DD2  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1917  0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0DD4  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0DD5  00E9               	movwf	??_main^(0+128)
  1920  0DD6  0869               	movf	??_main^(0+128),w
  1921  0DD7  00D8               	movwf	sprintf@f^(0+128)
  1922  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0DDA  086B               	movf	_deltaV+1,w
  1925  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  1927  0DDD  01DA               	clrf	((?_sprintf+1)^(0+128)+1)
  1928  0DDE  07DA               	addwf	((?_sprintf+1)^(0+128)+1),f
  1929  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0DE1  086A               	movf	_deltaV,w
  1932  0DE2  1683               	bsf	3,5	;RP0=1, select bank1
  1933  0DE3  1303               	bcf	3,6	;RP1=0, select bank1
  1934  0DE4  01D9               	clrf	(?_sprintf^(0+128)+1)
  1935  0DE5  07D9               	addwf	(?_sprintf^(0+128)+1),f
  1936  0DE6  3093               	movlw	_display_pwm& (0+255)
  1937  0DE7  120A  118A  25EB  120A  158A  	fcall	_sprintf
  1938                           
  1939                           ;main.c: 539: USART_WriteString(display_rpm);
  1940  0DEC  309D               	movlw	_display_rpm& (0+255)
  1941  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0DEF  00CB               	movwf	USART_WriteString@str^(0+128)
  1944  0DF0  3001               	movlw	1
  1945  0DF1  00CC               	movwf	(USART_WriteString@str+1)^(0+128)
  1946  0DF2  160A  118A  2411  120A  158A  	fcall	_USART_WriteString
  1947                           
  1948                           ;main.c: 540: USART_WriteString("\n\r");
  1949  0DF7  30B6               	movlw	low ((STR_2+8)-__stringbase)
  1950  0DF8  1683               	bsf	3,5	;RP0=1, select bank1
  1951  0DF9  1303               	bcf	3,6	;RP1=0, select bank1
  1952  0DFA  00CB               	movwf	USART_WriteString@str^(0+128)
  1953  0DFB  3080               	movlw	128
  1954  0DFC  00CC               	movwf	(USART_WriteString@str+1)^(0+128)
  1955  0DFD  160A  118A  2411  120A  158A  	fcall	_USART_WriteString
  1956                           
  1957                           ;main.c: 543: LCD_Clear();
  1958  0E02  160A  118A  23B7  120A  158A  	fcall	_LCD_Clear
  1959                           
  1960                           ;main.c: 544: LCD_Cursor(0,0);
  1961  0E07  1683               	bsf	3,5	;RP0=1, select bank1
  1962  0E08  1303               	bcf	3,6	;RP1=0, select bank1
  1963  0E09  01CA               	clrf	LCD_Cursor@Col^(0+128)
  1964  0E0A  3000               	movlw	0
  1965  0E0B  160A  118A  22C6  120A  158A  	fcall	_LCD_Cursor
  1966                           
  1967                           ;main.c: 545: LCD_WriteString("RPM: ");
  1968  0E10  30C1               	movlw	low (STR_17-__stringbase)
  1969  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0E12  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0E13  00CC               	movwf	LCD_WriteString@Str^(0+128)
  1972  0E14  3080               	movlw	128
  1973  0E15  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1974  0E16  160A  118A  23E0  120A  158A  	fcall	_LCD_WriteString
  1975                           
  1976                           ;main.c: 546: LCD_Cursor(0,6);
  1977  0E1B  3006               	movlw	6
  1978  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  1980  0E1E  00E9               	movwf	??_main^(0+128)
  1981  0E1F  0869               	movf	??_main^(0+128),w
  1982  0E20  00CA               	movwf	LCD_Cursor@Col^(0+128)
  1983  0E21  3000               	movlw	0
  1984  0E22  160A  118A  22C6  120A  158A  	fcall	_LCD_Cursor
  1985                           
  1986                           ;main.c: 547: LCD_WriteString(display_rpm);
  1987  0E27  309D               	movlw	_display_rpm& (0+255)
  1988  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0E29  1303               	bcf	3,6	;RP1=0, select bank1
  1990  0E2A  00CC               	movwf	LCD_WriteString@Str^(0+128)
  1991  0E2B  3001               	movlw	1
  1992  0E2C  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1993  0E2D  160A  118A  23E0  120A  158A  	fcall	_LCD_WriteString
  1994                           
  1995                           ;main.c: 548: LCD_Cursor(1,0);
  1996  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0E33  1303               	bcf	3,6	;RP1=0, select bank1
  1998  0E34  01CA               	clrf	LCD_Cursor@Col^(0+128)
  1999  0E35  3001               	movlw	1
  2000  0E36  160A  118A  22C6  120A  158A  	fcall	_LCD_Cursor
  2001                           
  2002                           ;main.c: 549: LCD_WriteString("Delta: ");
  2003  0E3B  30B9               	movlw	low (STR_18-__stringbase)
  2004  0E3C  1683               	bsf	3,5	;RP0=1, select bank1
  2005  0E3D  1303               	bcf	3,6	;RP1=0, select bank1
  2006  0E3E  00CC               	movwf	LCD_WriteString@Str^(0+128)
  2007  0E3F  3080               	movlw	128
  2008  0E40  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2009  0E41  160A  118A  23E0  120A  158A  	fcall	_LCD_WriteString
  2010                           
  2011                           ;main.c: 550: LCD_Cursor(1,6);
  2012  0E46  3006               	movlw	6
  2013  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0E48  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0E49  00E9               	movwf	??_main^(0+128)
  2016  0E4A  0869               	movf	??_main^(0+128),w
  2017  0E4B  00CA               	movwf	LCD_Cursor@Col^(0+128)
  2018  0E4C  3001               	movlw	1
  2019  0E4D  160A  118A  22C6  120A  158A  	fcall	_LCD_Cursor
  2020                           
  2021                           ;main.c: 551: LCD_WriteString(display_pwm);
  2022  0E52  3093               	movlw	_display_pwm& (0+255)
  2023  0E53  1683               	bsf	3,5	;RP0=1, select bank1
  2024  0E54  1303               	bcf	3,6	;RP1=0, select bank1
  2025  0E55  00CC               	movwf	LCD_WriteString@Str^(0+128)
  2026  0E56  3001               	movlw	1
  2027  0E57  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2028  0E58  160A  118A  23E0  120A  158A  	fcall	_LCD_WriteString
  2029                           
  2030                           ;main.c: 553: _delay((unsigned long)((200)*(18432000/4000.0)));
  2031  0E5D  3005               	movlw	5
  2032  0E5E  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0E5F  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0E60  00EB               	movwf	(??_main^(0+128)+2)
  2035  0E61  30AD               	movlw	173
  2036  0E62  00EA               	movwf	(??_main^(0+128)+1)
  2037  0E63  30E0               	movlw	224
  2038  0E64  00E9               	movwf	??_main^(0+128)
  2039  0E65                     u4157:	
  2040  0E65  0BE9               	decfsz	??_main^(0+128),f
  2041  0E66  2E65               	goto	u4157
  2042  0E67  0BEA               	decfsz	(??_main^(0+128)+1),f
  2043  0E68  2E65               	goto	u4157
  2044  0E69  0BEB               	decfsz	(??_main^(0+128)+2),f
  2045  0E6A  2E65               	goto	u4157
  2046  0E6B  2DC0               	goto	l206
  2047  0E6C                     __end_of_main:	
  2048                           
  2049                           	psect	text1
  2050  05EB                     __ptext1:	
  2051 ;; *************** function _sprintf *****************
  2052 ;; Defined at:
  2053 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  sp              1    wreg     PTR unsigned char 
  2056 ;;		 -> display_pwm(10), display_rpm(10), 
  2057 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  2058 ;;		 -> STR_15(5), STR_14(5), 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  2061 ;;		 -> display_pwm(10), display_rpm(10), 
  2062 ;;  _val            4   22[BANK1 ] struct .
  2063 ;;  width           2   27[BANK1 ] int 
  2064 ;;  c               1   30[BANK1 ] char 
  2065 ;;  flag            1   26[BANK1 ] unsigned char 
  2066 ;;  prec            1   21[BANK1 ] char 
  2067 ;;  ap              1   20[BANK1 ] PTR void [1]
  2068 ;;		 -> ?_sprintf(2), 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  2   14[BANK1 ] int 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       0       3       0       0
  2079 ;;      Locals:         0       0      11       0       0
  2080 ;;      Temps:          0       0       3       0       0
  2081 ;;      Totals:         0       0      17       0       0
  2082 ;;Total ram usage:       17 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    6
  2085 ;; This function calls:
  2086 ;;		___lwdiv
  2087 ;;		___lwmod
  2088 ;;		___wmul
  2089 ;;		_isdigit
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function _sprintf
  2097  05EB                     _sprintf:	
  2098                           
  2099                           ;incstack = 0
  2100                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2101                           ;sprintf@sp stored from wreg
  2102  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  2103  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  2104  05ED  00E7               	movwf	sprintf@sp^(0+128)
  2105                           
  2106                           ;doprnt.c: 494: va_list ap;
  2107                           ;doprnt.c: 499: signed char c;
  2108                           ;doprnt.c: 501: int width;
  2109                           ;doprnt.c: 506: signed char prec;
  2110                           ;doprnt.c: 508: unsigned char flag;
  2111                           ;doprnt.c: 527: union {
  2112                           ;doprnt.c: 528: unsigned int _val;
  2113                           ;doprnt.c: 529: struct {
  2114                           ;doprnt.c: 530: const char * _cp;
  2115                           ;doprnt.c: 531: unsigned _len;
  2116                           ;doprnt.c: 532: } _str;
  2117                           ;doprnt.c: 533: } _val;
  2118                           ;doprnt.c: 542: *ap = __va_start();
  2119  05EE  30D9               	movlw	(?_sprintf+1)& (0+255)
  2120  05EF  00DB               	movwf	??_sprintf^(0+128)
  2121  05F0  085B               	movf	??_sprintf^(0+128),w
  2122  05F1  00DE               	movwf	sprintf@ap^(0+128)
  2123  05F2                     l3134:	
  2124                           ;doprnt.c: 545: while(c = *f++) {
  2125                           
  2126  05F2  3001               	movlw	1
  2127  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  2128  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  2129  05F5  07D8               	addwf	sprintf@f^(0+128),f
  2130  05F6  30FF               	movlw	-1
  2131  05F7  0758               	addwf	sprintf@f^(0+128),w
  2132  05F8  0084               	movwf	4
  2133  05F9  120A  158A  200A  120A  118A  	fcall	stringdir
  2134  05FE  00DB               	movwf	??_sprintf^(0+128)
  2135  05FF  085B               	movf	??_sprintf^(0+128),w
  2136  0600  00E8               	movwf	sprintf@c^(0+128)
  2137  0601  08E8               	movf	sprintf@c^(0+128),f
  2138  0602  1903               	btfsc	3,2
  2139  0603  2F9B               	goto	l3136
  2140                           
  2141                           ;doprnt.c: 547: if(c != '%')
  2142  0604  0868               	movf	sprintf@c^(0+128),w
  2143  0605  3A25               	xorlw	37
  2144  0606  1903               	skipnz
  2145  0607  2E14               	goto	l3038
  2146                           
  2147                           ;doprnt.c: 549: {
  2148                           ;doprnt.c: 550: ((*sp++ = (c)));
  2149  0608  0868               	movf	sprintf@c^(0+128),w
  2150  0609  00DB               	movwf	??_sprintf^(0+128)
  2151  060A  0867               	movf	sprintf@sp^(0+128),w
  2152  060B  0084               	movwf	4
  2153  060C  085B               	movf	??_sprintf^(0+128),w
  2154  060D  1783               	bsf	3,7	;select IRP bank2
  2155  060E  0080               	movwf	0
  2156  060F  3001               	movlw	1
  2157  0610  00DB               	movwf	??_sprintf^(0+128)
  2158  0611  085B               	movf	??_sprintf^(0+128),w
  2159  0612  07E7               	addwf	sprintf@sp^(0+128),f
  2160                           
  2161                           ;doprnt.c: 551: continue;
  2162  0613  2DF2               	goto	l3134
  2163  0614                     l3038:	
  2164                           
  2165                           ;doprnt.c: 552: }
  2166                           ;doprnt.c: 555: width = 0;
  2167  0614  01E5               	clrf	sprintf@width^(0+128)
  2168  0615  01E6               	clrf	(sprintf@width+1)^(0+128)
  2169                           
  2170                           ;doprnt.c: 557: flag = 0;
  2171  0616  01E4               	clrf	sprintf@flag^(0+128)
  2172                           
  2173                           ;doprnt.c: 560: switch(*f) {
  2174                           
  2175                           ;doprnt.c: 559: for(;;) {
  2176  0617  2E1D               	goto	l3044
  2177  0618                     l483:	
  2178                           ;doprnt.c: 588: case '0':
  2179                           
  2180                           
  2181                           ;doprnt.c: 589: flag |= 0x04;
  2182  0618  1564               	bsf	sprintf@flag^(0+128),2
  2183                           
  2184                           ;doprnt.c: 590: f++;
  2185  0619  3001               	movlw	1
  2186  061A  00DB               	movwf	??_sprintf^(0+128)
  2187  061B  085B               	movf	??_sprintf^(0+128),w
  2188  061C  07D8               	addwf	sprintf@f^(0+128),f
  2189  061D                     l3044:	
  2190                           ;doprnt.c: 593: }
  2191                           
  2192                           ;doprnt.c: 591: continue;
  2193                           
  2194  061D  0858               	movf	sprintf@f^(0+128),w
  2195  061E  0084               	movwf	4
  2196  061F  120A  158A  200A  120A  118A  	fcall	stringdir
  2197                           
  2198                           ; Switch size 1, requested type "space"
  2199                           ; Number of cases is 1, Range of values is 48 to 48
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte            4     3 (average)
  2203                           ; direct_byte           14    11 (fixed)
  2204                           ; jumptable            263     9 (fixed)
  2205                           ;	Chosen strategy is simple_byte
  2206  0624  3A30               	xorlw	48	; case 48
  2207  0625  1903               	skipnz
  2208  0626  2E18               	goto	l483
  2209  0627  2E28               	goto	l3046
  2210  0628                     l3046:	
  2211                           ;doprnt.c: 595: }
  2212                           
  2213                           ;doprnt.c: 594: break;
  2214                           
  2215                           
  2216                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2217  0628  0858               	movf	sprintf@f^(0+128),w
  2218  0629  0084               	movwf	4
  2219  062A  120A  158A  200A  120A  118A  	fcall	stringdir
  2220  062F  160A  118A  2220  120A  118A  	fcall	_isdigit
  2221  0634  1C03               	btfss	3,0
  2222  0635  2E78               	goto	l3060
  2223                           
  2224                           ;doprnt.c: 607: width = 0;
  2225  0636  1683               	bsf	3,5	;RP0=1, select bank1
  2226  0637  1303               	bcf	3,6	;RP1=0, select bank1
  2227  0638  01E5               	clrf	sprintf@width^(0+128)
  2228  0639  01E6               	clrf	(sprintf@width+1)^(0+128)
  2229  063A                     l3050:	
  2230                           ;doprnt.c: 608: do {
  2231                           
  2232                           
  2233                           ;doprnt.c: 609: width *= 10;
  2234  063A  300A               	movlw	10
  2235  063B  1683               	bsf	3,5	;RP0=1, select bank1
  2236  063C  1303               	bcf	3,6	;RP1=0, select bank1
  2237  063D  00CA               	movwf	___wmul@multiplier^(0+128)
  2238  063E  3000               	movlw	0
  2239  063F  00CB               	movwf	(___wmul@multiplier^(0+128)+1)
  2240  0640  0866               	movf	(sprintf@width+1)^(0+128),w
  2241  0641  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
  2242  0642  07CD               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2243  0643  0865               	movf	sprintf@width^(0+128),w
  2244  0644  01CC               	clrf	___wmul@multiplicand^(0+128)
  2245  0645  07CC               	addwf	___wmul@multiplicand^(0+128),f
  2246  0646  160A  118A  2392  120A  118A  	fcall	___wmul
  2247  064B  1683               	bsf	3,5	;RP0=1, select bank1
  2248  064C  1303               	bcf	3,6	;RP1=0, select bank1
  2249  064D  084B               	movf	(?___wmul+1)^(0+128),w
  2250  064E  01E6               	clrf	(sprintf@width+1)^(0+128)
  2251  064F  07E6               	addwf	(sprintf@width+1)^(0+128),f
  2252  0650  084A               	movf	?___wmul^(0+128),w
  2253  0651  01E5               	clrf	sprintf@width^(0+128)
  2254  0652  07E5               	addwf	sprintf@width^(0+128),f
  2255                           
  2256                           ;doprnt.c: 610: width += *f++ - '0';
  2257  0653  0858               	movf	sprintf@f^(0+128),w
  2258  0654  0084               	movwf	4
  2259  0655  120A  158A  200A  120A  118A  	fcall	stringdir
  2260  065A  3ED0               	addlw	208
  2261  065B  00DB               	movwf	??_sprintf^(0+128)
  2262  065C  30FF               	movlw	255
  2263  065D  1803               	skipnc
  2264  065E  3000               	movlw	0
  2265  065F  00DC               	movwf	(??_sprintf^(0+128)+1)
  2266  0660  085B               	movf	??_sprintf^(0+128),w
  2267  0661  07E5               	addwf	sprintf@width^(0+128),f
  2268  0662  1803               	skipnc
  2269  0663  0AE6               	incf	(sprintf@width+1)^(0+128),f
  2270  0664  085C               	movf	(??_sprintf+1)^(0+128),w
  2271  0665  07E6               	addwf	(sprintf@width+1)^(0+128),f
  2272  0666  3001               	movlw	1
  2273  0667  00DB               	movwf	??_sprintf^(0+128)
  2274  0668  085B               	movf	??_sprintf^(0+128),w
  2275  0669  07D8               	addwf	sprintf@f^(0+128),f
  2276                           
  2277                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2278  066A  0858               	movf	sprintf@f^(0+128),w
  2279  066B  0084               	movwf	4
  2280  066C  120A  158A  200A  120A  118A  	fcall	stringdir
  2281  0671  160A  118A  2220  120A  118A  	fcall	_isdigit
  2282  0676  1803               	btfsc	3,0
  2283  0677  2E3A               	goto	l3050
  2284  0678                     l3060:	
  2285                           ;doprnt.c: 831: }
  2286                           
  2287                           ;doprnt.c: 822: continue;
  2288                           
  2289                           ;doprnt.c: 811: default:
  2290                           
  2291                           ;doprnt.c: 707: case 'i':
  2292                           ;doprnt.c: 708: break;
  2293                           
  2294                           ;doprnt.c: 706: case 'd':
  2295                           
  2296                           ;doprnt.c: 647: goto alldone;
  2297                           
  2298                           ;doprnt.c: 646: case 0:
  2299                           
  2300                           ;doprnt.c: 617: }
  2301                           ;doprnt.c: 644: switch(c = *f++) {
  2302                           
  2303  0678  3001               	movlw	1
  2304  0679  1683               	bsf	3,5	;RP0=1, select bank1
  2305  067A  1303               	bcf	3,6	;RP1=0, select bank1
  2306  067B  07D8               	addwf	sprintf@f^(0+128),f
  2307  067C  30FF               	movlw	-1
  2308  067D  0758               	addwf	sprintf@f^(0+128),w
  2309  067E  0084               	movwf	4
  2310  067F  120A  158A  200A  120A  118A  	fcall	stringdir
  2311  0684  00E8               	movwf	sprintf@c^(0+128)
  2312                           
  2313                           ; Switch size 1, requested type "space"
  2314                           ; Number of cases is 3, Range of values is 0 to 105
  2315                           ; switch strategies available:
  2316                           ; Name         Instructions Cycles
  2317                           ; simple_byte           10     6 (average)
  2318                           ; jumptable            260     6 (fixed)
  2319                           ;	Chosen strategy is simple_byte
  2320  0685  3A00               	xorlw	0	; case 0
  2321  0686  1903               	skipnz
  2322  0687  2F9B               	goto	l3136
  2323  0688  3A64               	xorlw	100	; case 100
  2324  0689  1903               	skipnz
  2325  068A  2E8F               	goto	l3062
  2326  068B  3A0D               	xorlw	13	; case 105
  2327  068C  1903               	skipnz
  2328  068D  2E8F               	goto	l3062
  2329  068E  2DF2               	goto	l3134
  2330  068F                     l3062:	
  2331                           
  2332                           ;doprnt.c: 1262: {
  2333                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2334  068F  1683               	bsf	3,5	;RP0=1, select bank1
  2335  0690  1303               	bcf	3,6	;RP1=0, select bank1
  2336  0691  085E               	movf	sprintf@ap^(0+128),w
  2337  0692  0084               	movwf	4
  2338  0693  1383               	bcf	3,7	;select IRP bank0
  2339  0694  0800               	movf	0,w
  2340  0695  00E0               	movwf	sprintf@_val^(0+128)
  2341  0696  0A84               	incf	4,f
  2342  0697  0800               	movf	0,w
  2343  0698  00E1               	movwf	(sprintf@_val+1)^(0+128)
  2344  0699  3002               	movlw	2
  2345  069A  00DB               	movwf	??_sprintf^(0+128)
  2346  069B  085B               	movf	??_sprintf^(0+128),w
  2347  069C  07DE               	addwf	sprintf@ap^(0+128),f
  2348                           
  2349                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2350  069D  1FE1               	btfss	(sprintf@_val+1)^(0+128),7
  2351  069E  2EA8               	goto	l3072
  2352                           
  2353                           ;doprnt.c: 1271: flag |= 0x03;
  2354  069F  3003               	movlw	3
  2355  06A0  00DB               	movwf	??_sprintf^(0+128)
  2356  06A1  085B               	movf	??_sprintf^(0+128),w
  2357  06A2  04E4               	iorwf	sprintf@flag^(0+128),f
  2358                           
  2359                           ;doprnt.c: 1272: _val._val = -_val._val;
  2360  06A3  09E0               	comf	sprintf@_val^(0+128),f
  2361  06A4  09E1               	comf	(sprintf@_val+1)^(0+128),f
  2362  06A5  0AE0               	incf	sprintf@_val^(0+128),f
  2363  06A6  1903               	skipnz
  2364  06A7  0AE1               	incf	(sprintf@_val+1)^(0+128),f
  2365  06A8                     l3072:	
  2366                           
  2367                           ;doprnt.c: 1273: }
  2368                           ;doprnt.c: 1275: }
  2369                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2370  06A8  01E8               	clrf	sprintf@c^(0+128)
  2371  06A9  0AE8               	incf	sprintf@c^(0+128),f
  2372  06AA  0868               	movf	sprintf@c^(0+128),w
  2373  06AB  3A05               	xorlw	5
  2374  06AC  1903               	btfsc	3,2
  2375  06AD  2ECF               	goto	l3084
  2376  06AE                     l3076:	
  2377                           
  2378                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2379  06AE  0868               	movf	sprintf@c^(0+128),w
  2380  06AF  00DB               	movwf	??_sprintf^(0+128)
  2381  06B0  075B               	addwf	??_sprintf^(0+128),w
  2382  06B1  3E01               	addlw	low (_dpowers-__stringbase)
  2383  06B2  0084               	movwf	4
  2384  06B3  120A  158A  200A  120A  118A  	fcall	stringdir
  2385  06B8  00DC               	movwf	(??_sprintf+1)^(0+128)
  2386  06B9  120A  158A  200A  120A  118A  	fcall	stringdir
  2387  06BE  00DD               	movwf	((??_sprintf+1)^(0+128)+1)
  2388  06BF  085D               	movf	(??_sprintf+2)^(0+128),w
  2389  06C0  0261               	subwf	(sprintf@_val+1)^(0+128),w
  2390  06C1  1D03               	skipz
  2391  06C2  2EC5               	goto	u3725
  2392  06C3  085C               	movf	(??_sprintf+1)^(0+128),w
  2393  06C4  0260               	subwf	sprintf@_val^(0+128),w
  2394  06C5                     u3725:	
  2395  06C5  1C03               	btfss	3,0
  2396  06C6  2ECF               	goto	l3084
  2397                           
  2398                           ;doprnt.c: 1316: break;
  2399  06C7  3001               	movlw	1
  2400  06C8  00DB               	movwf	??_sprintf^(0+128)
  2401  06C9  085B               	movf	??_sprintf^(0+128),w
  2402  06CA  07E8               	addwf	sprintf@c^(0+128),f
  2403  06CB  0868               	movf	sprintf@c^(0+128),w
  2404  06CC  3A05               	xorlw	5
  2405  06CD  1D03               	skipz
  2406  06CE  2EAE               	goto	l3076
  2407  06CF                     l3084:	
  2408                           
  2409                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2410  06CF  0866               	movf	(sprintf@width+1)^(0+128),w
  2411  06D0  0465               	iorwf	sprintf@width^(0+128),w
  2412  06D1  1903               	skipnz
  2413  06D2  2EDD               	goto	l501
  2414  06D3  0864               	movf	sprintf@flag^(0+128),w
  2415  06D4  3903               	andlw	3
  2416  06D5  1903               	btfsc	3,2
  2417  06D6  2EDD               	goto	l501
  2418                           
  2419                           ;doprnt.c: 1355: width--;
  2420  06D7  30FF               	movlw	255
  2421  06D8  07E5               	addwf	sprintf@width^(0+128),f
  2422  06D9  1803               	skipnc
  2423  06DA  0AE6               	incf	(sprintf@width+1)^(0+128),f
  2424  06DB  30FF               	movlw	255
  2425  06DC  07E6               	addwf	(sprintf@width+1)^(0+128),f
  2426  06DD                     l501:	
  2427                           
  2428                           ;doprnt.c: 1390: if(width > c)
  2429  06DD  0868               	movf	sprintf@c^(0+128),w
  2430  06DE  00DB               	movwf	??_sprintf^(0+128)
  2431  06DF  01DC               	clrf	(??_sprintf^(0+128)+1)
  2432  06E0  1BDB               	btfsc	??_sprintf^(0+128),7
  2433  06E1  03DC               	decf	(??_sprintf^(0+128)+1),f
  2434  06E2  085C               	movf	(??_sprintf+1)^(0+128),w
  2435  06E3  3A80               	xorlw	128
  2436  06E4  00DD               	movwf	(??_sprintf+2)^(0+128)
  2437  06E5  0866               	movf	(sprintf@width+1)^(0+128),w
  2438  06E6  3A80               	xorlw	128
  2439  06E7  025D               	subwf	(??_sprintf+2)^(0+128),w
  2440  06E8  1D03               	skipz
  2441  06E9  2EEC               	goto	u3765
  2442  06EA  0865               	movf	sprintf@width^(0+128),w
  2443  06EB  025B               	subwf	??_sprintf^(0+128),w
  2444  06EC                     u3765:	
  2445  06EC  1803               	skipnc
  2446  06ED  2EFC               	goto	l3092
  2447                           
  2448                           ;doprnt.c: 1391: width -= c;
  2449  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  2450  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  2451  06F0  0868               	movf	sprintf@c^(0+128),w
  2452  06F1  00DB               	movwf	??_sprintf^(0+128)
  2453  06F2  01DC               	clrf	(??_sprintf^(0+128)+1)
  2454  06F3  1BDB               	btfsc	??_sprintf^(0+128),7
  2455  06F4  03DC               	decf	(??_sprintf^(0+128)+1),f
  2456  06F5  085B               	movf	??_sprintf^(0+128),w
  2457  06F6  02E5               	subwf	sprintf@width^(0+128),f
  2458  06F7  085C               	movf	(??_sprintf+1)^(0+128),w
  2459  06F8  1C03               	skipc
  2460  06F9  03E6               	decf	(sprintf@width+1)^(0+128),f
  2461  06FA  02E6               	subwf	(sprintf@width+1)^(0+128),f
  2462  06FB  2F00               	goto	l3094
  2463  06FC                     l3092:	
  2464                           
  2465                           ;doprnt.c: 1392: else
  2466                           ;doprnt.c: 1393: width = 0;
  2467  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  2468  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  2469  06FE  01E5               	clrf	sprintf@width^(0+128)
  2470  06FF  01E6               	clrf	(sprintf@width+1)^(0+128)
  2471  0700                     l3094:	
  2472                           
  2473                           ;doprnt.c: 1396: if(flag & 0x04) {
  2474  0700  1D64               	btfss	sprintf@flag^(0+128),2
  2475  0701  2F27               	goto	l3110
  2476                           
  2477                           ;doprnt.c: 1401: if(flag & 0x03)
  2478  0702  0864               	movf	sprintf@flag^(0+128),w
  2479  0703  3903               	andlw	3
  2480  0704  1903               	btfsc	3,2
  2481  0705  2F11               	goto	l3102
  2482                           
  2483                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2484  0706  302D               	movlw	45
  2485  0707  00DB               	movwf	??_sprintf^(0+128)
  2486  0708  0867               	movf	sprintf@sp^(0+128),w
  2487  0709  0084               	movwf	4
  2488  070A  085B               	movf	??_sprintf^(0+128),w
  2489  070B  1783               	bsf	3,7	;select IRP bank2
  2490  070C  0080               	movwf	0
  2491  070D  3001               	movlw	1
  2492  070E  00DB               	movwf	??_sprintf^(0+128)
  2493  070F  085B               	movf	??_sprintf^(0+128),w
  2494  0710  07E7               	addwf	sprintf@sp^(0+128),f
  2495  0711                     l3102:	
  2496                           
  2497                           ;doprnt.c: 1424: if(width)
  2498  0711  0866               	movf	(sprintf@width+1)^(0+128),w
  2499  0712  0465               	iorwf	sprintf@width^(0+128),w
  2500  0713  1903               	skipnz
  2501  0714  2F4F               	goto	l3124
  2502                           
  2503                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2504                           
  2505                           ;doprnt.c: 1425: do
  2506  0715  3030               	movlw	48
  2507  0716  00DB               	movwf	??_sprintf^(0+128)
  2508  0717  0867               	movf	sprintf@sp^(0+128),w
  2509  0718  0084               	movwf	4
  2510  0719  085B               	movf	??_sprintf^(0+128),w
  2511  071A  1783               	bsf	3,7	;select IRP bank2
  2512  071B  0080               	movwf	0
  2513  071C  3001               	movlw	1
  2514  071D  00DB               	movwf	??_sprintf^(0+128)
  2515  071E  085B               	movf	??_sprintf^(0+128),w
  2516  071F  07E7               	addwf	sprintf@sp^(0+128),f
  2517                           
  2518                           ;doprnt.c: 1427: while(--width);
  2519  0720  30FF               	movlw	255
  2520  0721  07E5               	addwf	sprintf@width^(0+128),f
  2521  0722  1803               	skipnc
  2522  0723  0AE6               	incf	(sprintf@width+1)^(0+128),f
  2523  0724  30FF               	movlw	255
  2524  0725  07E6               	addwf	(sprintf@width+1)^(0+128),f
  2525  0726  2F11               	goto	l3102
  2526  0727                     l3110:	
  2527                           ;doprnt.c: 1429: } else
  2528                           
  2529                           
  2530                           ;doprnt.c: 1431: {
  2531                           ;doprnt.c: 1433: if(width
  2532                           ;doprnt.c: 1437: )
  2533  0727  0866               	movf	(sprintf@width+1)^(0+128),w
  2534  0728  0465               	iorwf	sprintf@width^(0+128),w
  2535  0729  1903               	skipnz
  2536  072A  2F40               	goto	l3118
  2537  072B                     l3112:	
  2538                           ;doprnt.c: 1438: do
  2539                           
  2540                           
  2541                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2542  072B  3020               	movlw	32
  2543  072C  00DB               	movwf	??_sprintf^(0+128)
  2544  072D  0867               	movf	sprintf@sp^(0+128),w
  2545  072E  0084               	movwf	4
  2546  072F  085B               	movf	??_sprintf^(0+128),w
  2547  0730  1783               	bsf	3,7	;select IRP bank2
  2548  0731  0080               	movwf	0
  2549  0732  3001               	movlw	1
  2550  0733  00DB               	movwf	??_sprintf^(0+128)
  2551  0734  085B               	movf	??_sprintf^(0+128),w
  2552  0735  07E7               	addwf	sprintf@sp^(0+128),f
  2553                           
  2554                           ;doprnt.c: 1440: while(--width);
  2555  0736  30FF               	movlw	255
  2556  0737  07E5               	addwf	sprintf@width^(0+128),f
  2557  0738  1803               	skipnc
  2558  0739  0AE6               	incf	(sprintf@width+1)^(0+128),f
  2559  073A  30FF               	movlw	255
  2560  073B  07E6               	addwf	(sprintf@width+1)^(0+128),f
  2561  073C  0866               	movf	(sprintf@width+1)^(0+128),w
  2562  073D  0465               	iorwf	sprintf@width^(0+128),w
  2563  073E  1D03               	skipz
  2564  073F  2F2B               	goto	l3112
  2565  0740                     l3118:	
  2566                           
  2567                           ;doprnt.c: 1447: if(flag & 0x03)
  2568  0740  0864               	movf	sprintf@flag^(0+128),w
  2569  0741  3903               	andlw	3
  2570  0742  1903               	btfsc	3,2
  2571  0743  2F4F               	goto	l3124
  2572                           
  2573                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2574  0744  302D               	movlw	45
  2575  0745  00DB               	movwf	??_sprintf^(0+128)
  2576  0746  0867               	movf	sprintf@sp^(0+128),w
  2577  0747  0084               	movwf	4
  2578  0748  085B               	movf	??_sprintf^(0+128),w
  2579  0749  1783               	bsf	3,7	;select IRP bank2
  2580  074A  0080               	movwf	0
  2581  074B  3001               	movlw	1
  2582  074C  00DB               	movwf	??_sprintf^(0+128)
  2583  074D  085B               	movf	??_sprintf^(0+128),w
  2584  074E  07E7               	addwf	sprintf@sp^(0+128),f
  2585  074F                     l3124:	
  2586                           
  2587                           ;doprnt.c: 1478: }
  2588                           ;doprnt.c: 1481: prec = c;
  2589  074F  0868               	movf	sprintf@c^(0+128),w
  2590  0750  00DB               	movwf	??_sprintf^(0+128)
  2591  0751  085B               	movf	??_sprintf^(0+128),w
  2592  0752  00DF               	movwf	sprintf@prec^(0+128)
  2593  0753                     l3132:	
  2594                           ;doprnt.c: 1483: while(prec--) {
  2595                           
  2596  0753  30FF               	movlw	-1
  2597  0754  00DB               	movwf	??_sprintf^(0+128)
  2598  0755  085B               	movf	??_sprintf^(0+128),w
  2599  0756  07DF               	addwf	sprintf@prec^(0+128),f
  2600  0757  085F               	movf	sprintf@prec^(0+128),w
  2601  0758  3AFF               	xorlw	-1
  2602  0759  1903               	btfsc	3,2
  2603  075A  2DF2               	goto	l3134
  2604                           
  2605                           ;doprnt.c: 1487: {
  2606                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2607  075B  300A               	movlw	10
  2608  075C  00D2               	movwf	___lwmod@divisor^(0+128)
  2609  075D  3000               	movlw	0
  2610  075E  00D3               	movwf	(___lwmod@divisor^(0+128)+1)
  2611  075F  085F               	movf	sprintf@prec^(0+128),w
  2612  0760  00DB               	movwf	??_sprintf^(0+128)
  2613  0761  075B               	addwf	??_sprintf^(0+128),w
  2614  0762  3E01               	addlw	low (_dpowers-__stringbase)
  2615  0763  0084               	movwf	4
  2616  0764  120A  158A  200A  120A  118A  	fcall	stringdir
  2617  0769  00CA               	movwf	___lwdiv@divisor^(0+128)
  2618  076A  120A  158A  200A  120A  118A  	fcall	stringdir
  2619  076F  00CB               	movwf	(___lwdiv@divisor+1)^(0+128)
  2620  0770  0861               	movf	(sprintf@_val+1)^(0+128),w
  2621  0771  01CD               	clrf	(___lwdiv@dividend+1)^(0+128)
  2622  0772  07CD               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2623  0773  0860               	movf	sprintf@_val^(0+128),w
  2624  0774  01CC               	clrf	___lwdiv@dividend^(0+128)
  2625  0775  07CC               	addwf	___lwdiv@dividend^(0+128),f
  2626  0776  160A  118A  24B6  120A  118A  	fcall	___lwdiv
  2627  077B  1683               	bsf	3,5	;RP0=1, select bank1
  2628  077C  1303               	bcf	3,6	;RP1=0, select bank1
  2629  077D  084B               	movf	(?___lwdiv+1)^(0+128),w
  2630  077E  01D5               	clrf	(___lwmod@dividend+1)^(0+128)
  2631  077F  07D5               	addwf	(___lwmod@dividend+1)^(0+128),f
  2632  0780  084A               	movf	?___lwdiv^(0+128),w
  2633  0781  01D4               	clrf	___lwmod@dividend^(0+128)
  2634  0782  07D4               	addwf	___lwmod@dividend^(0+128),f
  2635  0783  160A  118A  2442  120A  118A  	fcall	___lwmod
  2636  0788  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0789  1303               	bcf	3,6	;RP1=0, select bank1
  2638  078A  0852               	movf	?___lwmod^(0+128),w
  2639  078B  3E30               	addlw	48
  2640  078C  00DC               	movwf	(??_sprintf+1)^(0+128)
  2641  078D  085C               	movf	(??_sprintf+1)^(0+128),w
  2642  078E  00E8               	movwf	sprintf@c^(0+128)
  2643                           
  2644                           ;doprnt.c: 1532: }
  2645                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2646  078F  0868               	movf	sprintf@c^(0+128),w
  2647  0790  00DB               	movwf	??_sprintf^(0+128)
  2648  0791  0867               	movf	sprintf@sp^(0+128),w
  2649  0792  0084               	movwf	4
  2650  0793  085B               	movf	??_sprintf^(0+128),w
  2651  0794  1783               	bsf	3,7	;select IRP bank2
  2652  0795  0080               	movwf	0
  2653  0796  3001               	movlw	1
  2654  0797  00DB               	movwf	??_sprintf^(0+128)
  2655  0798  085B               	movf	??_sprintf^(0+128),w
  2656  0799  07E7               	addwf	sprintf@sp^(0+128),f
  2657  079A  2F53               	goto	l3132
  2658  079B                     l3136:	
  2659                           ;doprnt.c: 1534: }
  2660                           ;doprnt.c: 1542: }
  2661                           ;doprnt.c: 1544: alldone:
  2662                           
  2663                           
  2664                           ;doprnt.c: 1547: *sp = 0;
  2665  079B  1683               	bsf	3,5	;RP0=1, select bank1
  2666  079C  1303               	bcf	3,6	;RP1=0, select bank1
  2667  079D  0867               	movf	sprintf@sp^(0+128),w
  2668  079E  0084               	movwf	4
  2669  079F  1783               	bsf	3,7	;select IRP bank2
  2670  07A0  0180               	clrf	0
  2671  07A1  0008               	return
  2672  07A2                     __end_of_sprintf:	
  2673                           ;doprnt.c: 1549: return 0;
  2674                           ;	Return value of _sprintf is never used
  2675                           
  2676                           
  2677                           	psect	text2
  2678  1220                     __ptext2:	
  2679 ;; *************** function _isdigit *****************
  2680 ;; Defined at:
  2681 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  c               1    wreg     unsigned char 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  c               1    1[BANK1 ] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;		None               void
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         0       0       0       0       0
  2696 ;;      Locals:         0       0       2       0       0
  2697 ;;      Temps:          0       0       0       0       0
  2698 ;;      Totals:         0       0       2       0       0
  2699 ;;Total ram usage:        2 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    5
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_sprintf
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _isdigit
  2711  1220                     _isdigit:	
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2715                           ;isdigit@c stored from wreg
  2716  1220  1683               	bsf	3,5	;RP0=1, select bank1
  2717  1221  1303               	bcf	3,6	;RP1=0, select bank1
  2718  1222  00CB               	movwf	isdigit@c^(0+128)
  2719  1223  01CA               	clrf	_isdigit$1449^(0+128)
  2720  1224  303A               	movlw	58
  2721  1225  024B               	subwf	isdigit@c^(0+128),w
  2722  1226  1803               	skipnc
  2723  1227  2A2E               	goto	l2524
  2724  1228  3030               	movlw	48
  2725  1229  024B               	subwf	isdigit@c^(0+128),w
  2726  122A  1C03               	skipc
  2727  122B  2A2E               	goto	l2524
  2728  122C  01CA               	clrf	_isdigit$1449^(0+128)
  2729  122D  0ACA               	incf	_isdigit$1449^(0+128),f
  2730  122E                     l2524:	
  2731  122E  0C4A               	rrf	_isdigit$1449^(0+128),w
  2732  122F  0008               	return
  2733  1230                     __end_of_isdigit:	
  2734                           
  2735                           	psect	text3
  2736  1392                     __ptext3:	
  2737 ;; *************** function ___wmul *****************
  2738 ;; Defined at:
  2739 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2742 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  product         2    4[BANK1 ] unsigned int 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  2    0[BANK1 ] unsigned int 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         0       0       4       0       0
  2755 ;;      Locals:         0       0       2       0       0
  2756 ;;      Temps:          0       0       0       0       0
  2757 ;;      Totals:         0       0       6       0       0
  2758 ;;Total ram usage:        6 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    5
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_sprintf
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function ___wmul
  2770  1392                     ___wmul:	
  2771                           
  2772                           ;incstack = 0
  2773                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2774  1392  1683               	bsf	3,5	;RP0=1, select bank1
  2775  1393  1303               	bcf	3,6	;RP1=0, select bank1
  2776  1394  01CE               	clrf	___wmul@product^(0+128)
  2777  1395  01CF               	clrf	(___wmul@product+1)^(0+128)
  2778  1396                     l2530:	
  2779  1396  1C4A               	btfss	___wmul@multiplier^(0+128),0
  2780  1397  2B9E               	goto	l602
  2781  1398  084C               	movf	___wmul@multiplicand^(0+128),w
  2782  1399  07CE               	addwf	___wmul@product^(0+128),f
  2783  139A  1803               	skipnc
  2784  139B  0ACF               	incf	(___wmul@product+1)^(0+128),f
  2785  139C  084D               	movf	(___wmul@multiplicand+1)^(0+128),w
  2786  139D  07CF               	addwf	(___wmul@product+1)^(0+128),f
  2787  139E                     l602:	
  2788  139E  3001               	movlw	1
  2789  139F                     u2835:	
  2790  139F  1003               	clrc
  2791  13A0  0DCC               	rlf	___wmul@multiplicand^(0+128),f
  2792  13A1  0DCD               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2793  13A2  3EFF               	addlw	-1
  2794  13A3  1D03               	skipz
  2795  13A4  2B9F               	goto	u2835
  2796  13A5  3001               	movlw	1
  2797  13A6                     u2845:	
  2798  13A6  1003               	clrc
  2799  13A7  0CCB               	rrf	(___wmul@multiplier+1)^(0+128),f
  2800  13A8  0CCA               	rrf	___wmul@multiplier^(0+128),f
  2801  13A9  3EFF               	addlw	-1
  2802  13AA  1D03               	skipz
  2803  13AB  2BA6               	goto	u2845
  2804  13AC  084B               	movf	(___wmul@multiplier+1)^(0+128),w
  2805  13AD  044A               	iorwf	___wmul@multiplier^(0+128),w
  2806  13AE  1D03               	skipz
  2807  13AF  2B96               	goto	l2530
  2808  13B0  084F               	movf	(___wmul@product+1)^(0+128),w
  2809  13B1  01CB               	clrf	(?___wmul+1)^(0+128)
  2810  13B2  07CB               	addwf	(?___wmul+1)^(0+128),f
  2811  13B3  084E               	movf	___wmul@product^(0+128),w
  2812  13B4  01CA               	clrf	?___wmul^(0+128)
  2813  13B5  07CA               	addwf	?___wmul^(0+128),f
  2814  13B6  0008               	return
  2815  13B7                     __end_of___wmul:	
  2816                           
  2817                           	psect	text4
  2818  1442                     __ptext4:	
  2819 ;; *************** function ___lwmod *****************
  2820 ;; Defined at:
  2821 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  divisor         2    8[BANK1 ] unsigned int 
  2824 ;;  dividend        2   10[BANK1 ] unsigned int 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  counter         1   13[BANK1 ] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  2    8[BANK1 ] unsigned int 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         0       0       4       0       0
  2837 ;;      Locals:         0       0       1       0       0
  2838 ;;      Temps:          0       0       1       0       0
  2839 ;;      Totals:         0       0       6       0       0
  2840 ;;Total ram usage:        6 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    5
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_sprintf
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function ___lwmod
  2852  1442                     ___lwmod:	
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2856  1442  1683               	bsf	3,5	;RP0=1, select bank1
  2857  1443  1303               	bcf	3,6	;RP1=0, select bank1
  2858  1444  0853               	movf	(___lwmod@divisor+1)^(0+128),w
  2859  1445  0452               	iorwf	___lwmod@divisor^(0+128),w
  2860  1446  1903               	skipnz
  2861  1447  2C71               	goto	l2718
  2862  1448  01D7               	clrf	___lwmod@counter^(0+128)
  2863  1449  0AD7               	incf	___lwmod@counter^(0+128),f
  2864  144A                     l2708:	
  2865  144A  1BD3               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2866  144B  2C58               	goto	l2710
  2867  144C  3001               	movlw	1
  2868  144D                     u3285:	
  2869  144D  1003               	clrc
  2870  144E  0DD2               	rlf	___lwmod@divisor^(0+128),f
  2871  144F  0DD3               	rlf	(___lwmod@divisor+1)^(0+128),f
  2872  1450  3EFF               	addlw	-1
  2873  1451  1D03               	skipz
  2874  1452  2C4D               	goto	u3285
  2875  1453  3001               	movlw	1
  2876  1454  00D6               	movwf	??___lwmod^(0+128)
  2877  1455  0856               	movf	??___lwmod^(0+128),w
  2878  1456  07D7               	addwf	___lwmod@counter^(0+128),f
  2879  1457  2C4A               	goto	l2708
  2880  1458                     l2710:	
  2881  1458  0853               	movf	(___lwmod@divisor+1)^(0+128),w
  2882  1459  0255               	subwf	(___lwmod@dividend+1)^(0+128),w
  2883  145A  1D03               	skipz
  2884  145B  2C5E               	goto	u3305
  2885  145C  0852               	movf	___lwmod@divisor^(0+128),w
  2886  145D  0254               	subwf	___lwmod@dividend^(0+128),w
  2887  145E                     u3305:	
  2888  145E  1C03               	skipc
  2889  145F  2C66               	goto	l2714
  2890  1460  0852               	movf	___lwmod@divisor^(0+128),w
  2891  1461  02D4               	subwf	___lwmod@dividend^(0+128),f
  2892  1462  0853               	movf	(___lwmod@divisor+1)^(0+128),w
  2893  1463  1C03               	skipc
  2894  1464  03D5               	decf	(___lwmod@dividend+1)^(0+128),f
  2895  1465  02D5               	subwf	(___lwmod@dividend+1)^(0+128),f
  2896  1466                     l2714:	
  2897  1466  3001               	movlw	1
  2898  1467                     u3315:	
  2899  1467  1003               	clrc
  2900  1468  0CD3               	rrf	(___lwmod@divisor+1)^(0+128),f
  2901  1469  0CD2               	rrf	___lwmod@divisor^(0+128),f
  2902  146A  3EFF               	addlw	-1
  2903  146B  1D03               	skipz
  2904  146C  2C67               	goto	u3315
  2905  146D  3001               	movlw	1
  2906  146E  02D7               	subwf	___lwmod@counter^(0+128),f
  2907  146F  1D03               	btfss	3,2
  2908  1470  2C58               	goto	l2710
  2909  1471                     l2718:	
  2910  1471  0855               	movf	(___lwmod@dividend+1)^(0+128),w
  2911  1472  01D3               	clrf	(?___lwmod+1)^(0+128)
  2912  1473  07D3               	addwf	(?___lwmod+1)^(0+128),f
  2913  1474  0854               	movf	___lwmod@dividend^(0+128),w
  2914  1475  01D2               	clrf	?___lwmod^(0+128)
  2915  1476  07D2               	addwf	?___lwmod^(0+128),f
  2916  1477  0008               	return
  2917  1478                     __end_of___lwmod:	
  2918                           
  2919                           	psect	text5
  2920  14B6                     __ptext5:	
  2921 ;; *************** function ___lwdiv *****************
  2922 ;; Defined at:
  2923 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  divisor         2    0[BANK1 ] unsigned int 
  2926 ;;  dividend        2    2[BANK1 ] unsigned int 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  quotient        2    5[BANK1 ] unsigned int 
  2929 ;;  counter         1    7[BANK1 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2    0[BANK1 ] unsigned int 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2939 ;;      Params:         0       0       4       0       0
  2940 ;;      Locals:         0       0       3       0       0
  2941 ;;      Temps:          0       0       1       0       0
  2942 ;;      Totals:         0       0       8       0       0
  2943 ;;Total ram usage:        8 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    5
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_sprintf
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function ___lwdiv
  2955  14B6                     ___lwdiv:	
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2959  14B6  1683               	bsf	3,5	;RP0=1, select bank1
  2960  14B7  1303               	bcf	3,6	;RP1=0, select bank1
  2961  14B8  01CF               	clrf	___lwdiv@quotient^(0+128)
  2962  14B9  01D0               	clrf	(___lwdiv@quotient+1)^(0+128)
  2963  14BA  084B               	movf	(___lwdiv@divisor+1)^(0+128),w
  2964  14BB  044A               	iorwf	___lwdiv@divisor^(0+128),w
  2965  14BC  1903               	skipnz
  2966  14BD  2CEF               	goto	l2696
  2967  14BE  01D1               	clrf	___lwdiv@counter^(0+128)
  2968  14BF  0AD1               	incf	___lwdiv@counter^(0+128),f
  2969  14C0                     l2684:	
  2970  14C0  1BCB               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2971  14C1  2CCE               	goto	l2686
  2972  14C2  3001               	movlw	1
  2973  14C3                     u3215:	
  2974  14C3  1003               	clrc
  2975  14C4  0DCA               	rlf	___lwdiv@divisor^(0+128),f
  2976  14C5  0DCB               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2977  14C6  3EFF               	addlw	-1
  2978  14C7  1D03               	skipz
  2979  14C8  2CC3               	goto	u3215
  2980  14C9  3001               	movlw	1
  2981  14CA  00CE               	movwf	??___lwdiv^(0+128)
  2982  14CB  084E               	movf	??___lwdiv^(0+128),w
  2983  14CC  07D1               	addwf	___lwdiv@counter^(0+128),f
  2984  14CD  2CC0               	goto	l2684
  2985  14CE                     l2686:	
  2986  14CE  3001               	movlw	1
  2987  14CF                     u3235:	
  2988  14CF  1003               	clrc
  2989  14D0  0DCF               	rlf	___lwdiv@quotient^(0+128),f
  2990  14D1  0DD0               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2991  14D2  3EFF               	addlw	-1
  2992  14D3  1D03               	skipz
  2993  14D4  2CCF               	goto	u3235
  2994  14D5  084B               	movf	(___lwdiv@divisor+1)^(0+128),w
  2995  14D6  024D               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2996  14D7  1D03               	skipz
  2997  14D8  2CDB               	goto	u3245
  2998  14D9  084A               	movf	___lwdiv@divisor^(0+128),w
  2999  14DA  024C               	subwf	___lwdiv@dividend^(0+128),w
  3000  14DB                     u3245:	
  3001  14DB  1C03               	skipc
  3002  14DC  2CE4               	goto	l2692
  3003  14DD  084A               	movf	___lwdiv@divisor^(0+128),w
  3004  14DE  02CC               	subwf	___lwdiv@dividend^(0+128),f
  3005  14DF  084B               	movf	(___lwdiv@divisor+1)^(0+128),w
  3006  14E0  1C03               	skipc
  3007  14E1  03CD               	decf	(___lwdiv@dividend+1)^(0+128),f
  3008  14E2  02CD               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3009  14E3  144F               	bsf	___lwdiv@quotient^(0+128),0
  3010  14E4                     l2692:	
  3011  14E4  3001               	movlw	1
  3012  14E5                     u3255:	
  3013  14E5  1003               	clrc
  3014  14E6  0CCB               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3015  14E7  0CCA               	rrf	___lwdiv@divisor^(0+128),f
  3016  14E8  3EFF               	addlw	-1
  3017  14E9  1D03               	skipz
  3018  14EA  2CE5               	goto	u3255
  3019  14EB  3001               	movlw	1
  3020  14EC  02D1               	subwf	___lwdiv@counter^(0+128),f
  3021  14ED  1D03               	btfss	3,2
  3022  14EE  2CCE               	goto	l2686
  3023  14EF                     l2696:	
  3024  14EF  0850               	movf	(___lwdiv@quotient+1)^(0+128),w
  3025  14F0  01CB               	clrf	(?___lwdiv+1)^(0+128)
  3026  14F1  07CB               	addwf	(?___lwdiv+1)^(0+128),f
  3027  14F2  084F               	movf	___lwdiv@quotient^(0+128),w
  3028  14F3  01CA               	clrf	?___lwdiv^(0+128)
  3029  14F4  07CA               	addwf	?___lwdiv^(0+128),f
  3030  14F5  0008               	return
  3031  14F6                     __end_of___lwdiv:	
  3032                           
  3033                           	psect	text6
  3034  1411                     __ptext6:	
  3035 ;; *************** function _USART_WriteString *****************
  3036 ;; Defined at:
  3037 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  3040 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3041 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  3042 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  3043 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       0       2       0       0
  3056 ;;      Locals:         0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0
  3058 ;;      Totals:         0       0       2       0       0
  3059 ;;Total ram usage:        2 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    6
  3062 ;; This function calls:
  3063 ;;		_USART_WriteChar
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _USART_WriteString
  3071  1411                     _USART_WriteString:	
  3072  1411                     l2904:	
  3073                           ;usart.c: 54: while(*str != '\0')
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3077                           
  3078  1411  1683               	bsf	3,5	;RP0=1, select bank1
  3079  1412  1303               	bcf	3,6	;RP1=0, select bank1
  3080  1413  084C               	movf	(USART_WriteString@str+1)^(0+128),w
  3081  1414  1283               	bcf	3,5	;RP0=0, select bank0
  3082  1415  1303               	bcf	3,6	;RP1=0, select bank0
  3083  1416  00FF               	movwf	127
  3084  1417  1683               	bsf	3,5	;RP0=1, select bank1
  3085  1418  1303               	bcf	3,6	;RP1=0, select bank1
  3086  1419  084B               	movf	USART_WriteString@str^(0+128),w
  3087  141A  0084               	movwf	4
  3088  141B  1283               	bcf	3,5	;RP0=0, select bank0
  3089  141C  1303               	bcf	3,6	;RP1=0, select bank0
  3090  141D  120A  158A  2000  160A  118A  	fcall	stringtab
  3091  1422  3800               	iorlw	0
  3092  1423  1903               	btfsc	3,2
  3093  1424  0008               	return
  3094                           
  3095                           ;usart.c: 55: {
  3096                           ;usart.c: 56: USART_WriteChar(*str);
  3097  1425  1683               	bsf	3,5	;RP0=1, select bank1
  3098  1426  1303               	bcf	3,6	;RP1=0, select bank1
  3099  1427  084C               	movf	(USART_WriteString@str+1)^(0+128),w
  3100  1428  1283               	bcf	3,5	;RP0=0, select bank0
  3101  1429  1303               	bcf	3,6	;RP1=0, select bank0
  3102  142A  00FF               	movwf	127
  3103  142B  1683               	bsf	3,5	;RP0=1, select bank1
  3104  142C  1303               	bcf	3,6	;RP1=0, select bank1
  3105  142D  084B               	movf	USART_WriteString@str^(0+128),w
  3106  142E  0084               	movwf	4
  3107  142F  1283               	bcf	3,5	;RP0=0, select bank0
  3108  1430  1303               	bcf	3,6	;RP1=0, select bank0
  3109  1431  120A  158A  2000  160A  118A  	fcall	stringtab
  3110  1436  160A  118A  2213  160A  118A  	fcall	_USART_WriteChar
  3111                           
  3112                           ;usart.c: 57: str++;
  3113  143B  3001               	movlw	1
  3114  143C  1683               	bsf	3,5	;RP0=1, select bank1
  3115  143D  1303               	bcf	3,6	;RP1=0, select bank1
  3116  143E  07CB               	addwf	USART_WriteString@str^(0+128),f
  3117  143F  1803               	skipnc
  3118  1440  0ACC               	incf	(USART_WriteString@str+1)^(0+128),f
  3119  1441  2C11               	goto	l2904
  3120  1442                     __end_of_USART_WriteString:	
  3121                           
  3122                           	psect	text7
  3123  1213                     __ptext7:	
  3124 ;; *************** function _USART_WriteChar *****************
  3125 ;; Defined at:
  3126 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  byte            1    wreg     unsigned char 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  byte            1    0[BANK1 ] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;		None               void
  3133 ;; Registers used:
  3134 ;;		wreg
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       0       0       0       0
  3141 ;;      Locals:         0       0       1       0       0
  3142 ;;      Temps:          0       0       0       0       0
  3143 ;;      Totals:         0       0       1       0       0
  3144 ;;Total ram usage:        1 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    5
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_USART_WriteString
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function _USART_WriteChar
  3156  1213                     _USART_WriteChar:	
  3157                           
  3158                           ;incstack = 0
  3159                           ; Regs used in _USART_WriteChar: [wreg]
  3160                           ;USART_WriteChar@byte stored from wreg
  3161  1213  1683               	bsf	3,5	;RP0=1, select bank1
  3162  1214  1303               	bcf	3,6	;RP1=0, select bank1
  3163  1215  00CA               	movwf	USART_WriteChar@byte^(0+128)
  3164  1216                     l231:	
  3165                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3166                           
  3167  1216  1283               	bcf	3,5	;RP0=0, select bank0
  3168  1217  1E0C               	btfss	12,4	;volatile
  3169  1218  2A16               	goto	l231
  3170                           
  3171                           ;usart.c: 47: TXREG = byte;
  3172  1219  1683               	bsf	3,5	;RP0=1, select bank1
  3173  121A  1303               	bcf	3,6	;RP1=0, select bank1
  3174  121B  084A               	movf	USART_WriteChar@byte^(0+128),w
  3175  121C  1283               	bcf	3,5	;RP0=0, select bank0
  3176  121D  1303               	bcf	3,6	;RP1=0, select bank0
  3177  121E  0099               	movwf	25	;volatile
  3178  121F  0008               	return
  3179  1220                     __end_of_USART_WriteChar:	
  3180                           
  3181                           	psect	text8
  3182  14F6                     __ptext8:	
  3183 ;; *************** function _USART_Init *****************
  3184 ;; Defined at:
  3185 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  BaudRate        4   15[BANK1 ] long 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;		None               void
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0, pclath, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       0       4       0       0
  3200 ;;      Locals:         0       0       0       0       0
  3201 ;;      Temps:          0       0       4       0       0
  3202 ;;      Totals:         0       0       8       0       0
  3203 ;;Total ram usage:        8 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    6
  3206 ;; This function calls:
  3207 ;;		___aldiv
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _USART_Init
  3215  14F6                     _USART_Init:	
  3216                           
  3217                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3218                           
  3219                           ;incstack = 0
  3220                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3221  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  3222  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  3223  14F8  0859               	movf	USART_Init@BaudRate^(0+128),w
  3224  14F9  00DD               	movwf	??_USART_Init^(0+128)
  3225  14FA  085A               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3226  14FB  00DE               	movwf	(??_USART_Init^(0+128)+1)
  3227  14FC  085B               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3228  14FD  00DF               	movwf	(??_USART_Init^(0+128)+2)
  3229  14FE  085C               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3230  14FF  00E0               	movwf	(??_USART_Init^(0+128)+3)
  3231  1500  3004               	movlw	4
  3232  1501                     u3635:	
  3233  1501  1003               	clrc
  3234  1502  0DDD               	rlf	??_USART_Init^(0+128),f
  3235  1503  0DDE               	rlf	(??_USART_Init^(0+128)+1),f
  3236  1504  0DDF               	rlf	(??_USART_Init^(0+128)+2),f
  3237  1505  0DE0               	rlf	(??_USART_Init^(0+128)+3),f
  3238  1506  3EFF               	addlw	-1
  3239  1507  1D03               	skipz
  3240  1508  2D01               	goto	u3635
  3241  1509  0860               	movf	(??_USART_Init+3)^(0+128),w
  3242  150A  00CD               	movwf	(___aldiv@divisor+3)^(0+128)
  3243  150B  085F               	movf	(??_USART_Init+2)^(0+128),w
  3244  150C  00CC               	movwf	(___aldiv@divisor+2)^(0+128)
  3245  150D  085E               	movf	(??_USART_Init+1)^(0+128),w
  3246  150E  00CB               	movwf	(___aldiv@divisor+1)^(0+128)
  3247  150F  085D               	movf	??_USART_Init^(0+128),w
  3248  1510  00CA               	movwf	___aldiv@divisor^(0+128)
  3249  1511  3001               	movlw	1
  3250  1512  00D1               	movwf	(___aldiv@dividend+3)^(0+128)
  3251  1513  3019               	movlw	25
  3252  1514  00D0               	movwf	(___aldiv@dividend+2)^(0+128)
  3253  1515  3040               	movlw	64
  3254  1516  00CF               	movwf	(___aldiv@dividend+1)^(0+128)
  3255  1517  3000               	movlw	0
  3256  1518  00CE               	movwf	___aldiv@dividend^(0+128)
  3257  1519  160A  118A  269E   	fcall	___aldiv
  3258  151C  1683               	bsf	3,5	;RP0=1, select bank1
  3259  151D  1303               	bcf	3,6	;RP1=0, select bank1
  3260  151E  084A               	movf	?___aldiv^(0+128),w
  3261  151F  3EFF               	addlw	255
  3262  1520  0099               	movwf	25	;volatile
  3263                           
  3264                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3265  1521  1398               	bcf	24,7	;volatile
  3266                           
  3267                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3268  1522  1318               	bcf	24,6	;volatile
  3269                           
  3270                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3271  1523  1698               	bsf	24,5	;volatile
  3272                           
  3273                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3274  1524  1218               	bcf	24,4	;volatile
  3275                           
  3276                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3277  1525  1518               	bsf	24,2	;volatile
  3278                           
  3279                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3280  1526  1498               	bsf	24,1	;volatile
  3281                           
  3282                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3283  1527  1018               	bcf	24,0	;volatile
  3284                           
  3285                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3286  1528  1283               	bcf	3,5	;RP0=0, select bank0
  3287  1529  1303               	bcf	3,6	;RP1=0, select bank0
  3288  152A  1798               	bsf	24,7	;volatile
  3289                           
  3290                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3291  152B  1318               	bcf	24,6	;volatile
  3292                           
  3293                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3294  152C  1298               	bcf	24,5	;volatile
  3295                           
  3296                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3297  152D  1618               	bsf	24,4	;volatile
  3298                           
  3299                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3300  152E  1198               	bcf	24,3	;volatile
  3301                           
  3302                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3303  152F  1118               	bcf	24,2	;volatile
  3304                           
  3305                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3306  1530  1098               	bcf	24,1	;volatile
  3307                           
  3308                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3309  1531  1018               	bcf	24,0	;volatile
  3310                           
  3311                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3312  1532  1683               	bsf	3,5	;RP0=1, select bank1
  3313  1533  1303               	bcf	3,6	;RP1=0, select bank1
  3314  1534  120C               	bcf	12,4	;volatile
  3315                           
  3316                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3317  1535  1283               	bcf	3,5	;RP0=0, select bank0
  3318  1536  1303               	bcf	3,6	;RP1=0, select bank0
  3319  1537  120C               	bcf	12,4	;volatile
  3320                           
  3321                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3322  1538  1683               	bsf	3,5	;RP0=1, select bank1
  3323  1539  1303               	bcf	3,6	;RP1=0, select bank1
  3324  153A  168C               	bsf	12,5	;volatile
  3325                           
  3326                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3327  153B  1283               	bcf	3,5	;RP0=0, select bank0
  3328  153C  1303               	bcf	3,6	;RP1=0, select bank0
  3329  153D  128C               	bcf	12,5	;volatile
  3330  153E  0008               	return
  3331  153F                     __end_of_USART_Init:	
  3332                           
  3333                           	psect	text9
  3334  169E                     __ptext9:	
  3335 ;; *************** function ___aldiv *****************
  3336 ;; Defined at:
  3337 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  divisor         4    0[BANK1 ] long 
  3340 ;;  dividend        4    4[BANK1 ] long 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  quotient        4   11[BANK1 ] long 
  3343 ;;  sign            1   10[BANK1 ] unsigned char 
  3344 ;;  counter         1    9[BANK1 ] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  4    0[BANK1 ] long 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       0       8       0       0
  3355 ;;      Locals:         0       0       6       0       0
  3356 ;;      Temps:          0       0       1       0       0
  3357 ;;      Totals:         0       0      15       0       0
  3358 ;;Total ram usage:       15 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    5
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_USART_Init
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function ___aldiv
  3370  169E                     ___aldiv:	
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3374  169E  1683               	bsf	3,5	;RP0=1, select bank1
  3375  169F  1303               	bcf	3,6	;RP1=0, select bank1
  3376  16A0  01D4               	clrf	___aldiv@sign^(0+128)
  3377  16A1  1FCD               	btfss	(___aldiv@divisor+3)^(0+128),7
  3378  16A2  2EB0               	goto	l657
  3379  16A3  09CA               	comf	___aldiv@divisor^(0+128),f
  3380  16A4  09CB               	comf	(___aldiv@divisor+1)^(0+128),f
  3381  16A5  09CC               	comf	(___aldiv@divisor+2)^(0+128),f
  3382  16A6  09CD               	comf	(___aldiv@divisor+3)^(0+128),f
  3383  16A7  0ACA               	incf	___aldiv@divisor^(0+128),f
  3384  16A8  1903               	skipnz
  3385  16A9  0ACB               	incf	(___aldiv@divisor+1)^(0+128),f
  3386  16AA  1903               	skipnz
  3387  16AB  0ACC               	incf	(___aldiv@divisor+2)^(0+128),f
  3388  16AC  1903               	skipnz
  3389  16AD  0ACD               	incf	(___aldiv@divisor+3)^(0+128),f
  3390  16AE  01D4               	clrf	___aldiv@sign^(0+128)
  3391  16AF  0AD4               	incf	___aldiv@sign^(0+128),f
  3392  16B0                     l657:	
  3393  16B0  1FD1               	btfss	(___aldiv@dividend+3)^(0+128),7
  3394  16B1  2EC1               	goto	l2550
  3395  16B2  09CE               	comf	___aldiv@dividend^(0+128),f
  3396  16B3  09CF               	comf	(___aldiv@dividend+1)^(0+128),f
  3397  16B4  09D0               	comf	(___aldiv@dividend+2)^(0+128),f
  3398  16B5  09D1               	comf	(___aldiv@dividend+3)^(0+128),f
  3399  16B6  0ACE               	incf	___aldiv@dividend^(0+128),f
  3400  16B7  1903               	skipnz
  3401  16B8  0ACF               	incf	(___aldiv@dividend+1)^(0+128),f
  3402  16B9  1903               	skipnz
  3403  16BA  0AD0               	incf	(___aldiv@dividend+2)^(0+128),f
  3404  16BB  1903               	skipnz
  3405  16BC  0AD1               	incf	(___aldiv@dividend+3)^(0+128),f
  3406  16BD  3001               	movlw	1
  3407  16BE  00D2               	movwf	??___aldiv^(0+128)
  3408  16BF  0852               	movf	??___aldiv^(0+128),w
  3409  16C0  06D4               	xorwf	___aldiv@sign^(0+128),f
  3410  16C1                     l2550:	
  3411  16C1  3000               	movlw	0
  3412  16C2  00D8               	movwf	(___aldiv@quotient+3)^(0+128)
  3413  16C3  3000               	movlw	0
  3414  16C4  00D7               	movwf	(___aldiv@quotient+2)^(0+128)
  3415  16C5  3000               	movlw	0
  3416  16C6  00D6               	movwf	(___aldiv@quotient+1)^(0+128)
  3417  16C7  3000               	movlw	0
  3418  16C8  00D5               	movwf	___aldiv@quotient^(0+128)
  3419  16C9  084D               	movf	(___aldiv@divisor+3)^(0+128),w
  3420  16CA  044C               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3421  16CB  044B               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3422  16CC  044A               	iorwf	___aldiv@divisor^(0+128),w
  3423  16CD  1903               	skipnz
  3424  16CE  2F16               	goto	l2572
  3425  16CF  01D3               	clrf	___aldiv@counter^(0+128)
  3426  16D0  0AD3               	incf	___aldiv@counter^(0+128),f
  3427  16D1                     l2558:	
  3428  16D1  1BCD               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3429  16D2  2EE1               	goto	l2560
  3430  16D3  3001               	movlw	1
  3431  16D4  00D2               	movwf	??___aldiv^(0+128)
  3432  16D5                     u2895:	
  3433  16D5  1003               	clrc
  3434  16D6  0DCA               	rlf	___aldiv@divisor^(0+128),f
  3435  16D7  0DCB               	rlf	(___aldiv@divisor+1)^(0+128),f
  3436  16D8  0DCC               	rlf	(___aldiv@divisor+2)^(0+128),f
  3437  16D9  0DCD               	rlf	(___aldiv@divisor+3)^(0+128),f
  3438  16DA  0BD2               	decfsz	??___aldiv^(0+128),f
  3439  16DB  2ED5               	goto	u2895
  3440  16DC  3001               	movlw	1
  3441  16DD  00D2               	movwf	??___aldiv^(0+128)
  3442  16DE  0852               	movf	??___aldiv^(0+128),w
  3443  16DF  07D3               	addwf	___aldiv@counter^(0+128),f
  3444  16E0  2ED1               	goto	l2558
  3445  16E1                     l2560:	
  3446  16E1  3001               	movlw	1
  3447  16E2  00D2               	movwf	??___aldiv^(0+128)
  3448  16E3                     u2915:	
  3449  16E3  1003               	clrc
  3450  16E4  0DD5               	rlf	___aldiv@quotient^(0+128),f
  3451  16E5  0DD6               	rlf	(___aldiv@quotient+1)^(0+128),f
  3452  16E6  0DD7               	rlf	(___aldiv@quotient+2)^(0+128),f
  3453  16E7  0DD8               	rlf	(___aldiv@quotient+3)^(0+128),f
  3454  16E8  0BD2               	decfsz	??___aldiv^(0+128),f
  3455  16E9  2EE3               	goto	u2915
  3456  16EA  084D               	movf	(___aldiv@divisor+3)^(0+128),w
  3457  16EB  0251               	subwf	(___aldiv@dividend+3)^(0+128),w
  3458  16EC  1D03               	skipz
  3459  16ED  2EF8               	goto	u2925
  3460  16EE  084C               	movf	(___aldiv@divisor+2)^(0+128),w
  3461  16EF  0250               	subwf	(___aldiv@dividend+2)^(0+128),w
  3462  16F0  1D03               	skipz
  3463  16F1  2EF8               	goto	u2925
  3464  16F2  084B               	movf	(___aldiv@divisor+1)^(0+128),w
  3465  16F3  024F               	subwf	(___aldiv@dividend+1)^(0+128),w
  3466  16F4  1D03               	skipz
  3467  16F5  2EF8               	goto	u2925
  3468  16F6  084A               	movf	___aldiv@divisor^(0+128),w
  3469  16F7  024E               	subwf	___aldiv@dividend^(0+128),w
  3470  16F8                     u2925:	
  3471  16F8  1C03               	skipc
  3472  16F9  2F09               	goto	l2568
  3473  16FA  084A               	movf	___aldiv@divisor^(0+128),w
  3474  16FB  02CE               	subwf	___aldiv@dividend^(0+128),f
  3475  16FC  084B               	movf	(___aldiv@divisor+1)^(0+128),w
  3476  16FD  1C03               	skipc
  3477  16FE  0F4B               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3478  16FF  02CF               	subwf	(___aldiv@dividend+1)^(0+128),f
  3479  1700  084C               	movf	(___aldiv@divisor+2)^(0+128),w
  3480  1701  1C03               	skipc
  3481  1702  0F4C               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3482  1703  02D0               	subwf	(___aldiv@dividend+2)^(0+128),f
  3483  1704  084D               	movf	(___aldiv@divisor+3)^(0+128),w
  3484  1705  1C03               	skipc
  3485  1706  0F4D               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3486  1707  02D1               	subwf	(___aldiv@dividend+3)^(0+128),f
  3487  1708  1455               	bsf	___aldiv@quotient^(0+128),0
  3488  1709                     l2568:	
  3489  1709  3001               	movlw	1
  3490  170A                     u2935:	
  3491  170A  1003               	clrc
  3492  170B  0CCD               	rrf	(___aldiv@divisor+3)^(0+128),f
  3493  170C  0CCC               	rrf	(___aldiv@divisor+2)^(0+128),f
  3494  170D  0CCB               	rrf	(___aldiv@divisor+1)^(0+128),f
  3495  170E  0CCA               	rrf	___aldiv@divisor^(0+128),f
  3496  170F  3EFF               	addlw	-1
  3497  1710  1D03               	skipz
  3498  1711  2F0A               	goto	u2935
  3499  1712  3001               	movlw	1
  3500  1713  02D3               	subwf	___aldiv@counter^(0+128),f
  3501  1714  1D03               	btfss	3,2
  3502  1715  2EE1               	goto	l2560
  3503  1716                     l2572:	
  3504  1716  0854               	movf	___aldiv@sign^(0+128),w
  3505  1717  1903               	btfsc	3,2
  3506  1718  2F24               	goto	l2576
  3507  1719  09D5               	comf	___aldiv@quotient^(0+128),f
  3508  171A  09D6               	comf	(___aldiv@quotient+1)^(0+128),f
  3509  171B  09D7               	comf	(___aldiv@quotient+2)^(0+128),f
  3510  171C  09D8               	comf	(___aldiv@quotient+3)^(0+128),f
  3511  171D  0AD5               	incf	___aldiv@quotient^(0+128),f
  3512  171E  1903               	skipnz
  3513  171F  0AD6               	incf	(___aldiv@quotient+1)^(0+128),f
  3514  1720  1903               	skipnz
  3515  1721  0AD7               	incf	(___aldiv@quotient+2)^(0+128),f
  3516  1722  1903               	skipnz
  3517  1723  0AD8               	incf	(___aldiv@quotient+3)^(0+128),f
  3518  1724                     l2576:	
  3519  1724  0858               	movf	(___aldiv@quotient+3)^(0+128),w
  3520  1725  00CD               	movwf	(?___aldiv+3)^(0+128)
  3521  1726  0857               	movf	(___aldiv@quotient+2)^(0+128),w
  3522  1727  00CC               	movwf	(?___aldiv+2)^(0+128)
  3523  1728  0856               	movf	(___aldiv@quotient+1)^(0+128),w
  3524  1729  00CB               	movwf	(?___aldiv+1)^(0+128)
  3525  172A  0855               	movf	___aldiv@quotient^(0+128),w
  3526  172B  00CA               	movwf	?___aldiv^(0+128)
  3527  172C  0008               	return
  3528  172D                     __end_of___aldiv:	
  3529                           
  3530                           	psect	text10
  3531  11F8                     __ptext10:	
  3532 ;; *************** function _TIMER0_Set *****************
  3533 ;; Defined at:
  3534 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  contagens       1    wreg     unsigned char 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  contagens       1    0[BANK1 ] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;		None               void
  3541 ;; Registers used:
  3542 ;;		wreg
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         0       0       0       0       0
  3549 ;;      Locals:         0       0       1       0       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         0       0       1       0       0
  3552 ;;Total ram usage:        1 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    5
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           
  3563                           ;psect for function _TIMER0_Set
  3564  11F8                     _TIMER0_Set:	
  3565                           
  3566                           ;incstack = 0
  3567                           ; Regs used in _TIMER0_Set: [wreg]
  3568                           ;TIMER0_Set@contagens stored from wreg
  3569  11F8  1683               	bsf	3,5	;RP0=1, select bank1
  3570  11F9  1303               	bcf	3,6	;RP1=0, select bank1
  3571  11FA  00CA               	movwf	TIMER0_Set@contagens^(0+128)
  3572                           
  3573                           ;timers.c: 22: TMR0 = contagens;
  3574  11FB  084A               	movf	TIMER0_Set@contagens^(0+128),w
  3575  11FC  1283               	bcf	3,5	;RP0=0, select bank0
  3576  11FD  1303               	bcf	3,6	;RP1=0, select bank0
  3577  11FE  0081               	movwf	1	;volatile
  3578  11FF  0008               	return
  3579  1200                     __end_of_TIMER0_Set:	
  3580                           
  3581                           	psect	text11
  3582  1208                     __ptext11:	
  3583 ;; *************** function _TIMER0_Init *****************
  3584 ;; Defined at:
  3585 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;		None               void
  3592 ;; Registers used:
  3593 ;;		None
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       0       0       0       0
  3600 ;;      Locals:         0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0
  3602 ;;      Totals:         0       0       0       0       0
  3603 ;;Total ram usage:        0 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    5
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _TIMER0_Init
  3615  1208                     _TIMER0_Init:	
  3616                           
  3617                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3618                           
  3619                           ;incstack = 0
  3620                           ; Regs used in _TIMER0_Init: []
  3621  1208  1683               	bsf	3,5	;RP0=1, select bank1
  3622  1209  1303               	bcf	3,6	;RP1=0, select bank1
  3623  120A  1281               	bcf	1,5	;volatile
  3624                           
  3625                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3626  120B  1201               	bcf	1,4	;volatile
  3627                           
  3628                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3629  120C  1181               	bcf	1,3	;volatile
  3630                           
  3631                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3632  120D  1501               	bsf	1,2	;volatile
  3633                           
  3634                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3635  120E  1481               	bsf	1,1	;volatile
  3636                           
  3637                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3638  120F  1401               	bsf	1,0	;volatile
  3639                           
  3640                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3641  1210  110B               	bcf	11,2	;volatile
  3642                           
  3643                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3644  1211  168B               	bsf	11,5	;volatile
  3645  1212  0008               	return
  3646  1213                     __end_of_TIMER0_Init:	
  3647                           
  3648                           	psect	text12
  3649  136E                     __ptext12:	
  3650 ;; *************** function _PWM_Init *****************
  3651 ;; Defined at:
  3652 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;		None
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;		None
  3657 ;; Return value:  Size  Location     Type
  3658 ;;		None               void
  3659 ;; Registers used:
  3660 ;;		wreg
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3666 ;;      Params:         0       0       0       0       0
  3667 ;;      Locals:         0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0
  3669 ;;      Totals:         0       0       0       0       0
  3670 ;;Total ram usage:        0 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    5
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_main
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           
  3681                           ;psect for function _PWM_Init
  3682  136E                     _PWM_Init:	
  3683                           
  3684                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3685                           
  3686                           ;incstack = 0
  3687                           ; Regs used in _PWM_Init: [wreg]
  3688  136E  1283               	bcf	3,5	;RP0=0, select bank0
  3689  136F  1303               	bcf	3,6	;RP1=0, select bank0
  3690  1370  1492               	bsf	18,1	;volatile
  3691                           
  3692                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3693  1371  1012               	bcf	18,0	;volatile
  3694                           
  3695                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3696  1372  1312               	bcf	18,6	;volatile
  3697                           
  3698                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3699  1373  1292               	bcf	18,5	;volatile
  3700                           
  3701                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3702  1374  1212               	bcf	18,4	;volatile
  3703                           
  3704                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3705  1375  1192               	bcf	18,3	;volatile
  3706                           
  3707                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3708  1376  1512               	bsf	18,2	;volatile
  3709                           
  3710                           ;pwm.c: 27: PR2 = 255;
  3711  1377  30FF               	movlw	255
  3712  1378  1683               	bsf	3,5	;RP0=1, select bank1
  3713  1379  1303               	bcf	3,6	;RP1=0, select bank1
  3714  137A  0092               	movwf	18	;volatile
  3715                           
  3716                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3717  137B  1283               	bcf	3,5	;RP0=0, select bank0
  3718  137C  1303               	bcf	3,6	;RP1=0, select bank0
  3719  137D  1597               	bsf	23,3	;volatile
  3720                           
  3721                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3722  137E  1517               	bsf	23,2	;volatile
  3723                           
  3724                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3725  137F  1497               	bsf	23,1	;volatile
  3726                           
  3727                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3728  1380  1417               	bsf	23,0	;volatile
  3729                           
  3730                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3731  1381  1683               	bsf	3,5	;RP0=1, select bank1
  3732  1382  1303               	bcf	3,6	;RP1=0, select bank1
  3733  1383  150C               	bsf	12,2	;volatile
  3734                           
  3735                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3736  1384  1283               	bcf	3,5	;RP0=0, select bank0
  3737  1385  1303               	bcf	3,6	;RP1=0, select bank0
  3738  1386  110C               	bcf	12,2	;volatile
  3739                           
  3740                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3741  1387  159D               	bsf	29,3	;volatile
  3742                           
  3743                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3744  1388  151D               	bsf	29,2	;volatile
  3745                           
  3746                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3747  1389  149D               	bsf	29,1	;volatile
  3748                           
  3749                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3750  138A  141D               	bsf	29,0	;volatile
  3751                           
  3752                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3753  138B  1683               	bsf	3,5	;RP0=1, select bank1
  3754  138C  1303               	bcf	3,6	;RP1=0, select bank1
  3755  138D  140D               	bsf	13,0	;volatile
  3756                           
  3757                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3758  138E  1283               	bcf	3,5	;RP0=0, select bank0
  3759  138F  1303               	bcf	3,6	;RP1=0, select bank0
  3760  1390  100D               	bcf	13,0	;volatile
  3761  1391  0008               	return
  3762  1392                     __end_of_PWM_Init:	
  3763                           
  3764                           	psect	text13
  3765  1307                     __ptext13:	
  3766 ;; *************** function _PWM_DutyCycle2 *****************
  3767 ;; Defined at:
  3768 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  valor           2    0[BANK1 ] int 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;		None               void
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3782 ;;      Params:         0       0       2       0       0
  3783 ;;      Locals:         0       0       0       0       0
  3784 ;;      Temps:          0       0       2       0       0
  3785 ;;      Totals:         0       0       4       0       0
  3786 ;;Total ram usage:        4 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    5
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function _PWM_DutyCycle2
  3798  1307                     _PWM_DutyCycle2:	
  3799                           
  3800                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3801                           
  3802                           ;incstack = 0
  3803                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3804  1307  1683               	bsf	3,5	;RP0=1, select bank1
  3805  1308  1303               	bcf	3,6	;RP1=0, select bank1
  3806  1309  084B               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3807  130A  00CD               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3808  130B  084A               	movf	PWM_DutyCycle2@valor^(0+128),w
  3809  130C  00CC               	movwf	??_PWM_DutyCycle2^(0+128)
  3810  130D  0D4D               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3811  130E  0CCD               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3812  130F  0CCC               	rrf	??_PWM_DutyCycle2^(0+128),f
  3813  1310  0D4D               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3814  1311  0CCD               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3815  1312  0CCC               	rrf	??_PWM_DutyCycle2^(0+128),f
  3816  1313  084C               	movf	??_PWM_DutyCycle2^(0+128),w
  3817  1314  1283               	bcf	3,5	;RP0=0, select bank0
  3818  1315  1303               	bcf	3,6	;RP1=0, select bank0
  3819  1316  009B               	movwf	27	;volatile
  3820                           
  3821                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3822  1317  1683               	bsf	3,5	;RP0=1, select bank1
  3823  1318  1303               	bcf	3,6	;RP1=0, select bank1
  3824  1319  084A               	movf	PWM_DutyCycle2@valor^(0+128),w
  3825  131A  00CC               	movwf	??_PWM_DutyCycle2^(0+128)
  3826  131B  3003               	movlw	3
  3827  131C                     u3605:	
  3828  131C  1003               	clrc
  3829  131D  0DCC               	rlf	??_PWM_DutyCycle2^(0+128),f
  3830  131E  3EFF               	addlw	-1
  3831  131F  1D03               	skipz
  3832  1320  2B1C               	goto	u3605
  3833  1321  1003               	clrc
  3834  1322  0D4C               	rlf	??_PWM_DutyCycle2^(0+128),w
  3835  1323  380C               	iorlw	12
  3836  1324  1283               	bcf	3,5	;RP0=0, select bank0
  3837  1325  1303               	bcf	3,6	;RP1=0, select bank0
  3838  1326  009D               	movwf	29	;volatile
  3839  1327  0008               	return
  3840  1328                     __end_of_PWM_DutyCycle2:	
  3841                           
  3842                           	psect	text14
  3843  12E6                     __ptext14:	
  3844 ;; *************** function _PWM_DutyCycle1 *****************
  3845 ;; Defined at:
  3846 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  valor           2    0[BANK1 ] int 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;		None               void
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3860 ;;      Params:         0       0       2       0       0
  3861 ;;      Locals:         0       0       0       0       0
  3862 ;;      Temps:          0       0       2       0       0
  3863 ;;      Totals:         0       0       4       0       0
  3864 ;;Total ram usage:        4 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    5
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _PWM_DutyCycle1
  3876  12E6                     _PWM_DutyCycle1:	
  3877                           
  3878                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3879                           
  3880                           ;incstack = 0
  3881                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3882  12E6  1683               	bsf	3,5	;RP0=1, select bank1
  3883  12E7  1303               	bcf	3,6	;RP1=0, select bank1
  3884  12E8  084B               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  3885  12E9  00CD               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  3886  12EA  084A               	movf	PWM_DutyCycle1@valor^(0+128),w
  3887  12EB  00CC               	movwf	??_PWM_DutyCycle1^(0+128)
  3888  12EC  0D4D               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3889  12ED  0CCD               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3890  12EE  0CCC               	rrf	??_PWM_DutyCycle1^(0+128),f
  3891  12EF  0D4D               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3892  12F0  0CCD               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3893  12F1  0CCC               	rrf	??_PWM_DutyCycle1^(0+128),f
  3894  12F2  084C               	movf	??_PWM_DutyCycle1^(0+128),w
  3895  12F3  1283               	bcf	3,5	;RP0=0, select bank0
  3896  12F4  1303               	bcf	3,6	;RP1=0, select bank0
  3897  12F5  0095               	movwf	21	;volatile
  3898                           
  3899                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3900  12F6  1683               	bsf	3,5	;RP0=1, select bank1
  3901  12F7  1303               	bcf	3,6	;RP1=0, select bank1
  3902  12F8  084A               	movf	PWM_DutyCycle1@valor^(0+128),w
  3903  12F9  00CC               	movwf	??_PWM_DutyCycle1^(0+128)
  3904  12FA  3003               	movlw	3
  3905  12FB                     u3665:	
  3906  12FB  1003               	clrc
  3907  12FC  0DCC               	rlf	??_PWM_DutyCycle1^(0+128),f
  3908  12FD  3EFF               	addlw	-1
  3909  12FE  1D03               	skipz
  3910  12FF  2AFB               	goto	u3665
  3911  1300  1003               	clrc
  3912  1301  0D4C               	rlf	??_PWM_DutyCycle1^(0+128),w
  3913  1302  380C               	iorlw	12
  3914  1303  1283               	bcf	3,5	;RP0=0, select bank0
  3915  1304  1303               	bcf	3,6	;RP1=0, select bank0
  3916  1305  0097               	movwf	23	;volatile
  3917  1306  0008               	return
  3918  1307                     __end_of_PWM_DutyCycle1:	
  3919                           
  3920                           	psect	text15
  3921  13E0                     __ptext15:	
  3922 ;; *************** function _LCD_WriteString *****************
  3923 ;; Defined at:
  3924 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  3927 ;;		 -> STR_18(8), STR_17(6), display_pwm(10), display_rpm(10), 
  3928 ;;		 -> STR_13(17), 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;		None               void
  3933 ;; Registers used:
  3934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       0       2       0       0
  3941 ;;      Locals:         0       0       0       0       0
  3942 ;;      Temps:          0       0       0       0       0
  3943 ;;      Totals:         0       0       2       0       0
  3944 ;;Total ram usage:        2 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    6
  3947 ;; This function calls:
  3948 ;;		_LCD_WriteData
  3949 ;; This function is called by:
  3950 ;;		_main
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           
  3955                           ;psect for function _LCD_WriteString
  3956  13E0                     _LCD_WriteString:	
  3957  13E0                     l3024:	
  3958                           ;lcd.c: 63: while(*Str != '\0')
  3959                           
  3960                           ;incstack = 0
  3961                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3962                           
  3963  13E0  1683               	bsf	3,5	;RP0=1, select bank1
  3964  13E1  1303               	bcf	3,6	;RP1=0, select bank1
  3965  13E2  084D               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3966  13E3  1283               	bcf	3,5	;RP0=0, select bank0
  3967  13E4  1303               	bcf	3,6	;RP1=0, select bank0
  3968  13E5  00FF               	movwf	127
  3969  13E6  1683               	bsf	3,5	;RP0=1, select bank1
  3970  13E7  1303               	bcf	3,6	;RP1=0, select bank1
  3971  13E8  084C               	movf	LCD_WriteString@Str^(0+128),w
  3972  13E9  0084               	movwf	4
  3973  13EA  1283               	bcf	3,5	;RP0=0, select bank0
  3974  13EB  1303               	bcf	3,6	;RP1=0, select bank0
  3975  13EC  120A  158A  2000  160A  118A  	fcall	stringtab
  3976  13F1  3800               	iorlw	0
  3977  13F2  1903               	btfsc	3,2
  3978  13F3  0008               	return
  3979                           
  3980                           ;lcd.c: 64: {
  3981                           ;lcd.c: 65: LCD_WriteData(*Str);
  3982  13F4  1683               	bsf	3,5	;RP0=1, select bank1
  3983  13F5  1303               	bcf	3,6	;RP1=0, select bank1
  3984  13F6  084D               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3985  13F7  1283               	bcf	3,5	;RP0=0, select bank0
  3986  13F8  1303               	bcf	3,6	;RP1=0, select bank0
  3987  13F9  00FF               	movwf	127
  3988  13FA  1683               	bsf	3,5	;RP0=1, select bank1
  3989  13FB  1303               	bcf	3,6	;RP1=0, select bank1
  3990  13FC  084C               	movf	LCD_WriteString@Str^(0+128),w
  3991  13FD  0084               	movwf	4
  3992  13FE  1283               	bcf	3,5	;RP0=0, select bank0
  3993  13FF  1303               	bcf	3,6	;RP1=0, select bank0
  3994  1400  120A  158A  2000  160A  118A  	fcall	stringtab
  3995  1405  160A  118A  225B  160A  118A  	fcall	_LCD_WriteData
  3996                           
  3997                           ;lcd.c: 66: Str++;
  3998  140A  3001               	movlw	1
  3999  140B  1683               	bsf	3,5	;RP0=1, select bank1
  4000  140C  1303               	bcf	3,6	;RP1=0, select bank1
  4001  140D  07CC               	addwf	LCD_WriteString@Str^(0+128),f
  4002  140E  1803               	skipnc
  4003  140F  0ACD               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4004  1410  2BE0               	goto	l3024
  4005  1411                     __end_of_LCD_WriteString:	
  4006                           
  4007                           	psect	text16
  4008  125B                     __ptext16:	
  4009 ;; *************** function _LCD_WriteData *****************
  4010 ;; Defined at:
  4011 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  Byte            1    wreg     unsigned char 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  Byte            1    1[BANK1 ] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;		None               void
  4018 ;; Registers used:
  4019 ;;		wreg
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4025 ;;      Params:         0       0       0       0       0
  4026 ;;      Locals:         0       0       1       0       0
  4027 ;;      Temps:          0       0       1       0       0
  4028 ;;      Totals:         0       0       2       0       0
  4029 ;;Total ram usage:        2 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    5
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_LCD_WriteString
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           
  4040                           ;psect for function _LCD_WriteData
  4041  125B                     _LCD_WriteData:	
  4042                           
  4043                           ;incstack = 0
  4044                           ; Regs used in _LCD_WriteData: [wreg]
  4045                           ;LCD_WriteData@Byte stored from wreg
  4046  125B  1683               	bsf	3,5	;RP0=1, select bank1
  4047  125C  1303               	bcf	3,6	;RP1=0, select bank1
  4048  125D  00CB               	movwf	LCD_WriteData@Byte^(0+128)
  4049                           
  4050                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4051  125E  1283               	bcf	3,5	;RP0=0, select bank0
  4052  125F  1303               	bcf	3,6	;RP1=0, select bank0
  4053  1260  1409               	bsf	9,0	;volatile
  4054                           
  4055                           ;lcd.c: 51: PORTD = Byte;
  4056  1261  1683               	bsf	3,5	;RP0=1, select bank1
  4057  1262  1303               	bcf	3,6	;RP1=0, select bank1
  4058  1263  084B               	movf	LCD_WriteData@Byte^(0+128),w
  4059  1264  1283               	bcf	3,5	;RP0=0, select bank0
  4060  1265  1303               	bcf	3,6	;RP1=0, select bank0
  4061  1266  0088               	movwf	8	;volatile
  4062                           
  4063                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4064  1267  1489               	bsf	9,1	;volatile
  4065                           
  4066                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4067  1268  303D               	movlw	61
  4068  1269  1683               	bsf	3,5	;RP0=1, select bank1
  4069  126A  1303               	bcf	3,6	;RP1=0, select bank1
  4070  126B  00CA               	movwf	??_LCD_WriteData^(0+128)
  4071  126C                     u4167:	
  4072  126C  0BCA               	decfsz	??_LCD_WriteData^(0+128),f
  4073  126D  2A6C               	goto	u4167
  4074                           
  4075                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4076  126E  1283               	bcf	3,5	;RP0=0, select bank0
  4077  126F  1303               	bcf	3,6	;RP1=0, select bank0
  4078  1270  1089               	bcf	9,1	;volatile
  4079  1271  0008               	return
  4080  1272                     __end_of_LCD_WriteData:	
  4081                           
  4082                           	psect	text17
  4083  15A7                     __ptext17:	
  4084 ;; *************** function _LCD_Init *****************
  4085 ;; Defined at:
  4086 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;		None               void
  4093 ;; Registers used:
  4094 ;;		wreg, status,2, status,0, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0
  4102 ;;      Temps:          0       0       2       0       0
  4103 ;;      Totals:         0       0       2       0       0
  4104 ;;Total ram usage:        2 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    6
  4107 ;; This function calls:
  4108 ;;		_LCD_WriteCmd
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           
  4115                           ;psect for function _LCD_Init
  4116  15A7                     _LCD_Init:	
  4117                           
  4118                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4122  15A7  1683               	bsf	3,5	;RP0=1, select bank1
  4123  15A8  1303               	bcf	3,6	;RP1=0, select bank1
  4124  15A9  119F               	bcf	31,3	;volatile
  4125                           
  4126                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4127  15AA  151F               	bsf	31,2	;volatile
  4128                           
  4129                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4130  15AB  109F               	bcf	31,1	;volatile
  4131                           
  4132                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4133  15AC  101F               	bcf	31,0	;volatile
  4134                           
  4135                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4136  15AD  305A               	movlw	90
  4137  15AE  00CD               	movwf	(??_LCD_Init^(0+128)+1)
  4138  15AF  30C3               	movlw	195
  4139  15B0  00CC               	movwf	??_LCD_Init^(0+128)
  4140  15B1                     u4177:	
  4141  15B1  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4142  15B2  2DB1               	goto	u4177
  4143  15B3  0BCD               	decfsz	(??_LCD_Init^(0+128)+1),f
  4144  15B4  2DB1               	goto	u4177
  4145                           
  4146                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4147  15B5  3030               	movlw	48
  4148  15B6  160A  118A  2244  160A  118A  	fcall	_LCD_WriteCmd
  4149                           
  4150                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4151  15BB  3018               	movlw	24
  4152  15BC  1683               	bsf	3,5	;RP0=1, select bank1
  4153  15BD  1303               	bcf	3,6	;RP1=0, select bank1
  4154  15BE  00CD               	movwf	(??_LCD_Init^(0+128)+1)
  4155  15BF  30EF               	movlw	239
  4156  15C0  00CC               	movwf	??_LCD_Init^(0+128)
  4157  15C1                     u4187:	
  4158  15C1  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4159  15C2  2DC1               	goto	u4187
  4160  15C3  0BCD               	decfsz	(??_LCD_Init^(0+128)+1),f
  4161  15C4  2DC1               	goto	u4187
  4162                           
  4163                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4164  15C5  3030               	movlw	48
  4165  15C6  160A  118A  2244  160A  118A  	fcall	_LCD_WriteCmd
  4166                           
  4167                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4168  15CB  3099               	movlw	153
  4169  15CC  1683               	bsf	3,5	;RP0=1, select bank1
  4170  15CD  1303               	bcf	3,6	;RP1=0, select bank1
  4171  15CE  00CC               	movwf	??_LCD_Init^(0+128)
  4172  15CF                     u4197:	
  4173  15CF  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4174  15D0  2DCF               	goto	u4197
  4175                           
  4176                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4177  15D1  3030               	movlw	48
  4178  15D2  160A  118A  2244  160A  118A  	fcall	_LCD_WriteCmd
  4179                           
  4180                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4181  15D7  303D               	movlw	61
  4182  15D8  1683               	bsf	3,5	;RP0=1, select bank1
  4183  15D9  1303               	bcf	3,6	;RP1=0, select bank1
  4184  15DA  00CC               	movwf	??_LCD_Init^(0+128)
  4185  15DB                     u4207:	
  4186  15DB  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4187  15DC  2DDB               	goto	u4207
  4188                           
  4189                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4190  15DD  3038               	movlw	56
  4191  15DE  160A  118A  2244  160A  118A  	fcall	_LCD_WriteCmd
  4192                           
  4193                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4194  15E3  303D               	movlw	61
  4195  15E4  1683               	bsf	3,5	;RP0=1, select bank1
  4196  15E5  1303               	bcf	3,6	;RP1=0, select bank1
  4197  15E6  00CC               	movwf	??_LCD_Init^(0+128)
  4198  15E7                     u4217:	
  4199  15E7  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4200  15E8  2DE7               	goto	u4217
  4201                           
  4202                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4203  15E9  3001               	movlw	1
  4204  15EA  160A  118A  2244  160A  118A  	fcall	_LCD_WriteCmd
  4205                           
  4206                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4207  15EF  300C               	movlw	12
  4208  15F0  1683               	bsf	3,5	;RP0=1, select bank1
  4209  15F1  1303               	bcf	3,6	;RP1=0, select bank1
  4210  15F2  00CD               	movwf	(??_LCD_Init^(0+128)+1)
  4211  15F3  30F7               	movlw	247
  4212  15F4  00CC               	movwf	??_LCD_Init^(0+128)
  4213  15F5                     u4227:	
  4214  15F5  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4215  15F6  2DF5               	goto	u4227
  4216  15F7  0BCD               	decfsz	(??_LCD_Init^(0+128)+1),f
  4217  15F8  2DF5               	goto	u4227
  4218                           
  4219                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4220  15F9  300C               	movlw	12
  4221  15FA  160A  118A  2244  160A  118A  	fcall	_LCD_WriteCmd
  4222                           
  4223                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4224  15FF  303D               	movlw	61
  4225  1600  1683               	bsf	3,5	;RP0=1, select bank1
  4226  1601  1303               	bcf	3,6	;RP1=0, select bank1
  4227  1602  00CC               	movwf	??_LCD_Init^(0+128)
  4228  1603                     u4237:	
  4229  1603  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4230  1604  2E03               	goto	u4237
  4231                           
  4232                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4233  1605  3006               	movlw	6
  4234  1606  160A  118A  2244  160A  118A  	fcall	_LCD_WriteCmd
  4235                           
  4236                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4237  160B  303D               	movlw	61
  4238  160C  1683               	bsf	3,5	;RP0=1, select bank1
  4239  160D  1303               	bcf	3,6	;RP1=0, select bank1
  4240  160E  00CC               	movwf	??_LCD_Init^(0+128)
  4241  160F                     u4247:	
  4242  160F  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4243  1610  2E0F               	goto	u4247
  4244  1611  0008               	return
  4245  1612                     __end_of_LCD_Init:	
  4246                           
  4247                           	psect	text18
  4248  12C6                     __ptext18:	
  4249 ;; *************** function _LCD_Cursor *****************
  4250 ;; Defined at:
  4251 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  Row             1    wreg     unsigned char 
  4254 ;;  Col             1    0[BANK1 ] unsigned char 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  Row             1    2[BANK1 ] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;		None               void
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         0       0       1       0       0
  4267 ;;      Locals:         0       0       1       0       0
  4268 ;;      Temps:          0       0       1       0       0
  4269 ;;      Totals:         0       0       3       0       0
  4270 ;;Total ram usage:        3 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    5
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _LCD_Cursor
  4282  12C6                     _LCD_Cursor:	
  4283                           
  4284                           ;incstack = 0
  4285                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4286                           ;LCD_Cursor@Row stored from wreg
  4287  12C6  1683               	bsf	3,5	;RP0=1, select bank1
  4288  12C7  1303               	bcf	3,6	;RP1=0, select bank1
  4289  12C8  00CC               	movwf	LCD_Cursor@Row^(0+128)
  4290                           
  4291                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4292  12C9  1283               	bcf	3,5	;RP0=0, select bank0
  4293  12CA  1303               	bcf	3,6	;RP1=0, select bank0
  4294  12CB  1009               	bcf	9,0	;volatile
  4295                           
  4296                           ;lcd.c: 14: if (Row == 0)
  4297  12CC  1683               	bsf	3,5	;RP0=1, select bank1
  4298  12CD  1303               	bcf	3,6	;RP1=0, select bank1
  4299  12CE  08CC               	movf	LCD_Cursor@Row^(0+128),f
  4300  12CF  1D03               	skipz
  4301  12D0  2AD4               	goto	l3010
  4302                           
  4303                           ;lcd.c: 15: {
  4304                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4305  12D1  084A               	movf	LCD_Cursor@Col^(0+128),w
  4306  12D2  3E80               	addlw	128
  4307  12D3  2AD8               	goto	L2
  4308  12D4                     l3010:	
  4309                           ;lcd.c: 17: }
  4310                           
  4311                           
  4312                           ;lcd.c: 18: else
  4313                           ;lcd.c: 19: {
  4314                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4315  12D4  1683               	bsf	3,5	;RP0=1, select bank1
  4316  12D5  1303               	bcf	3,6	;RP1=0, select bank1
  4317  12D6  084A               	movf	LCD_Cursor@Col^(0+128),w
  4318  12D7  3EC0               	addlw	192
  4319  12D8                     L2:	
  4320  12D8  1283               	bcf	3,5	;RP0=0, select bank0
  4321  12D9  1303               	bcf	3,6	;RP1=0, select bank0
  4322  12DA  0088               	movwf	8	;volatile
  4323                           
  4324                           ;lcd.c: 21: }
  4325                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4326  12DB  1489               	bsf	9,1	;volatile
  4327                           
  4328                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4329  12DC  303D               	movlw	61
  4330  12DD  1683               	bsf	3,5	;RP0=1, select bank1
  4331  12DE  1303               	bcf	3,6	;RP1=0, select bank1
  4332  12DF  00CB               	movwf	??_LCD_Cursor^(0+128)
  4333  12E0                     u4257:	
  4334  12E0  0BCB               	decfsz	??_LCD_Cursor^(0+128),f
  4335  12E1  2AE0               	goto	u4257
  4336                           
  4337                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4338  12E2  1283               	bcf	3,5	;RP0=0, select bank0
  4339  12E3  1303               	bcf	3,6	;RP1=0, select bank0
  4340  12E4  1089               	bcf	9,1	;volatile
  4341  12E5  0008               	return
  4342  12E6                     __end_of_LCD_Cursor:	
  4343                           
  4344                           	psect	text19
  4345  13B7                     __ptext19:	
  4346 ;; *************** function _LCD_Clear *****************
  4347 ;; Defined at:
  4348 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;		None               void
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0, pclath, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4362 ;;      Params:         0       0       0       0       0
  4363 ;;      Locals:         0       0       0       0       0
  4364 ;;      Temps:          0       0       2       0       0
  4365 ;;      Totals:         0       0       2       0       0
  4366 ;;Total ram usage:        2 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:    6
  4369 ;; This function calls:
  4370 ;;		_LCD_WriteCmd
  4371 ;; This function is called by:
  4372 ;;		_main
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           
  4377                           ;psect for function _LCD_Clear
  4378  13B7                     _LCD_Clear:	
  4379                           
  4380                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4381                           
  4382                           ;incstack = 0
  4383                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4384  13B7  3001               	movlw	1
  4385  13B8  160A  118A  2244  160A  118A  	fcall	_LCD_WriteCmd
  4386                           
  4387                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4388  13BD  300C               	movlw	12
  4389  13BE  1683               	bsf	3,5	;RP0=1, select bank1
  4390  13BF  1303               	bcf	3,6	;RP1=0, select bank1
  4391  13C0  00CD               	movwf	(??_LCD_Clear^(0+128)+1)
  4392  13C1  30F7               	movlw	247
  4393  13C2  00CC               	movwf	??_LCD_Clear^(0+128)
  4394  13C3                     u4267:	
  4395  13C3  0BCC               	decfsz	??_LCD_Clear^(0+128),f
  4396  13C4  2BC3               	goto	u4267
  4397  13C5  0BCD               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4398  13C6  2BC3               	goto	u4267
  4399                           
  4400                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4401  13C7  300C               	movlw	12
  4402  13C8  160A  118A  2244  160A  118A  	fcall	_LCD_WriteCmd
  4403                           
  4404                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4405  13CD  303D               	movlw	61
  4406  13CE  1683               	bsf	3,5	;RP0=1, select bank1
  4407  13CF  1303               	bcf	3,6	;RP1=0, select bank1
  4408  13D0  00CC               	movwf	??_LCD_Clear^(0+128)
  4409  13D1                     u4277:	
  4410  13D1  0BCC               	decfsz	??_LCD_Clear^(0+128),f
  4411  13D2  2BD1               	goto	u4277
  4412                           
  4413                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4414  13D3  3006               	movlw	6
  4415  13D4  160A  118A  2244  160A  118A  	fcall	_LCD_WriteCmd
  4416                           
  4417                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4418  13D9  303D               	movlw	61
  4419  13DA  1683               	bsf	3,5	;RP0=1, select bank1
  4420  13DB  1303               	bcf	3,6	;RP1=0, select bank1
  4421  13DC  00CC               	movwf	??_LCD_Clear^(0+128)
  4422  13DD                     u4287:	
  4423  13DD  0BCC               	decfsz	??_LCD_Clear^(0+128),f
  4424  13DE  2BDD               	goto	u4287
  4425  13DF  0008               	return
  4426  13E0                     __end_of_LCD_Clear:	
  4427                           
  4428                           	psect	text20
  4429  1244                     __ptext20:	
  4430 ;; *************** function _LCD_WriteCmd *****************
  4431 ;; Defined at:
  4432 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  Byte            1    wreg     unsigned char 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  Byte            1    1[BANK1 ] unsigned char 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;		None               void
  4439 ;; Registers used:
  4440 ;;		wreg
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4446 ;;      Params:         0       0       0       0       0
  4447 ;;      Locals:         0       0       1       0       0
  4448 ;;      Temps:          0       0       1       0       0
  4449 ;;      Totals:         0       0       2       0       0
  4450 ;;Total ram usage:        2 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    5
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_LCD_Clear
  4457 ;;		_LCD_Init
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           
  4462                           ;psect for function _LCD_WriteCmd
  4463  1244                     _LCD_WriteCmd:	
  4464                           
  4465                           ;incstack = 0
  4466                           ; Regs used in _LCD_WriteCmd: [wreg]
  4467                           ;LCD_WriteCmd@Byte stored from wreg
  4468  1244  1683               	bsf	3,5	;RP0=1, select bank1
  4469  1245  1303               	bcf	3,6	;RP1=0, select bank1
  4470  1246  00CB               	movwf	LCD_WriteCmd@Byte^(0+128)
  4471                           
  4472                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4473  1247  1283               	bcf	3,5	;RP0=0, select bank0
  4474  1248  1303               	bcf	3,6	;RP1=0, select bank0
  4475  1249  1009               	bcf	9,0	;volatile
  4476                           
  4477                           ;lcd.c: 36: PORTD = Byte;
  4478  124A  1683               	bsf	3,5	;RP0=1, select bank1
  4479  124B  1303               	bcf	3,6	;RP1=0, select bank1
  4480  124C  084B               	movf	LCD_WriteCmd@Byte^(0+128),w
  4481  124D  1283               	bcf	3,5	;RP0=0, select bank0
  4482  124E  1303               	bcf	3,6	;RP1=0, select bank0
  4483  124F  0088               	movwf	8	;volatile
  4484                           
  4485                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4486  1250  1489               	bsf	9,1	;volatile
  4487                           
  4488                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4489  1251  303D               	movlw	61
  4490  1252  1683               	bsf	3,5	;RP0=1, select bank1
  4491  1253  1303               	bcf	3,6	;RP1=0, select bank1
  4492  1254  00CA               	movwf	??_LCD_WriteCmd^(0+128)
  4493  1255                     u4297:	
  4494  1255  0BCA               	decfsz	??_LCD_WriteCmd^(0+128),f
  4495  1256  2A55               	goto	u4297
  4496                           
  4497                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4498  1257  1283               	bcf	3,5	;RP0=0, select bank0
  4499  1258  1303               	bcf	3,6	;RP1=0, select bank0
  4500  1259  1089               	bcf	9,1	;volatile
  4501  125A  0008               	return
  4502  125B                     __end_of_LCD_WriteCmd:	
  4503                           
  4504                           	psect	text21
  4505  08DC                     __ptext21:	
  4506 ;; *************** function _ADC_Init *****************
  4507 ;; Defined at:
  4508 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;		None               void
  4515 ;; Registers used:
  4516 ;;		None
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4522 ;;      Params:         0       0       0       0       0
  4523 ;;      Locals:         0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0
  4525 ;;      Totals:         0       0       0       0       0
  4526 ;;Total ram usage:        0 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    5
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_main
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           
  4537                           ;psect for function _ADC_Init
  4538  08DC                     _ADC_Init:	
  4539                           
  4540                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4541                           
  4542                           ;incstack = 0
  4543                           ; Regs used in _ADC_Init: []
  4544  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  4545  08DD  1303               	bcf	3,6	;RP1=0, select bank1
  4546  08DE  179F               	bsf	31,7	;volatile
  4547                           
  4548                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4549  08DF  159F               	bsf	31,3	;volatile
  4550                           
  4551                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4552  08E0  151F               	bsf	31,2	;volatile
  4553                           
  4554                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4555  08E1  149F               	bsf	31,1	;volatile
  4556                           
  4557                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4558  08E2  101F               	bcf	31,0	;volatile
  4559                           
  4560                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4561  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  4562  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  4563  08E5  179F               	bsf	31,7	;volatile
  4564                           
  4565                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4566  08E6  131F               	bcf	31,6	;volatile
  4567                           
  4568                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4569  08E7  1683               	bsf	3,5	;RP0=1, select bank1
  4570  08E8  1303               	bcf	3,6	;RP1=0, select bank1
  4571  08E9  130C               	bcf	12,6	;volatile
  4572                           
  4573                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4574  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  4575  08EB  1303               	bcf	3,6	;RP1=0, select bank0
  4576  08EC  130C               	bcf	12,6	;volatile
  4577  08ED  0008               	return
  4578  08EE                     __end_of_ADC_Init:	
  4579                           
  4580                           	psect	text22
  4581  0E6C                     __ptext22:	
  4582 ;; *************** function _ISR *****************
  4583 ;; Defined at:
  4584 ;;		line 323 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;		None               void
  4591 ;; Registers used:
  4592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4598 ;;      Params:         0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0
  4600 ;;      Temps:          0       4       0       0       0
  4601 ;;      Totals:         0       4       0       0       0
  4602 ;;Total ram usage:        4 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    4
  4605 ;; This function calls:
  4606 ;;		_Fuzzy
  4607 ;;		_USART_ReceiveChar
  4608 ;;		___lwtoft
  4609 ;;		i1_PWM_DutyCycle2
  4610 ;;		i1_TIMER0_Set
  4611 ;;		i1_USART_WriteString
  4612 ;;		i1___lwdiv
  4613 ;;		i1___wmul
  4614 ;; This function is called by:
  4615 ;;		Interrupt level 1
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _ISR
  4621  0E6C                     _ISR:	
  4622                           
  4623                           ;main.c: 326: if (PIR1bits.RCIF)
  4624  0E6C  1E8C               	btfss	12,5	;volatile
  4625  0E6D  2F8E               	goto	i1l3274
  4626                           
  4627                           ;main.c: 327: {
  4628                           ;main.c: 328: if (USART_ReceiveChar() == '0')
  4629  0E6E  160A  118A  228D  120A  158A  	fcall	_USART_ReceiveChar
  4630  0E73  3A30               	xorlw	48
  4631  0E74  1D03               	skipz
  4632  0E75  2E8F               	goto	i1l3208
  4633                           
  4634                           ;main.c: 329: {
  4635                           ;main.c: 330: USART_WriteString("\n\rdesligado\n\r");
  4636  0E76  30A0               	movlw	low (STR_1-__stringbase)
  4637  0E77  00F1               	movwf	i1USART_WriteString@str
  4638  0E78  3080               	movlw	128
  4639  0E79  00F2               	movwf	i1USART_WriteString@str+1
  4640  0E7A  160A  118A  2328  120A  158A  	fcall	i1_USART_WriteString
  4641                           
  4642                           ;main.c: 331: pwm = 0;
  4643  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  4645  0E81  01EC               	clrf	_pwm
  4646  0E82  01ED               	clrf	_pwm+1
  4647                           
  4648                           ;main.c: 332: PWM_DutyCycle2(pwm);
  4649  0E83  086D               	movf	_pwm+1,w
  4650  0E84  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4651  0E85  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4652  0E86  086C               	movf	_pwm,w
  4653  0E87  01F0               	clrf	i1PWM_DutyCycle2@valor
  4654  0E88  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4655  0E89  160A  118A  2272  120A  158A  	fcall	i1_PWM_DutyCycle2
  4656                           
  4657                           ;main.c: 333: return;
  4658  0E8E  2FF3               	goto	i1l186
  4659  0E8F                     i1l3208:	
  4660                           
  4661                           ;main.c: 334: }
  4662                           ;main.c: 336: if (USART_ReceiveChar() == '1')
  4663  0E8F  160A  118A  228D  120A  158A  	fcall	_USART_ReceiveChar
  4664  0E94  3A31               	xorlw	49
  4665  0E95  1D03               	skipz
  4666  0E96  2EA6               	goto	i1l3214
  4667                           
  4668                           ;main.c: 337: {
  4669                           ;main.c: 338: USART_WriteString("\n\rpwm = \n\r");
  4670  0E97  30AE               	movlw	low (STR_2-__stringbase)
  4671  0E98  00F1               	movwf	i1USART_WriteString@str
  4672  0E99  3080               	movlw	128
  4673  0E9A  00F2               	movwf	i1USART_WriteString@str+1
  4674  0E9B  160A  118A  2328  120A  158A  	fcall	i1_USART_WriteString
  4675                           
  4676                           ;main.c: 339: setpointUI = 720;
  4677  0EA0  30D0               	movlw	208
  4678  0EA1  1683               	bsf	3,5	;RP0=1, select bank1
  4679  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  4680  0EA3  00C2               	movwf	_setpointUI^(0+128)
  4681  0EA4  3002               	movlw	2
  4682  0EA5  00C3               	movwf	(_setpointUI^(0+128)+1)
  4683  0EA6                     i1l3214:	
  4684                           
  4685                           ;main.c: 341: }
  4686                           ;main.c: 343: if (USART_ReceiveChar() == '2')
  4687  0EA6  160A  118A  228D  120A  158A  	fcall	_USART_ReceiveChar
  4688  0EAB  3A32               	xorlw	50
  4689  0EAC  1D03               	skipz
  4690  0EAD  2EBD               	goto	i1l3220
  4691                           
  4692                           ;main.c: 344: {
  4693                           ;main.c: 345: USART_WriteString("\n\rpwm = \n\r");
  4694  0EAE  30AE               	movlw	low (STR_2-__stringbase)
  4695  0EAF  00F1               	movwf	i1USART_WriteString@str
  4696  0EB0  3080               	movlw	128
  4697  0EB1  00F2               	movwf	i1USART_WriteString@str+1
  4698  0EB2  160A  118A  2328  120A  158A  	fcall	i1_USART_WriteString
  4699                           
  4700                           ;main.c: 346: setpointUI = 1450;
  4701  0EB7  30AA               	movlw	170
  4702  0EB8  1683               	bsf	3,5	;RP0=1, select bank1
  4703  0EB9  1303               	bcf	3,6	;RP1=0, select bank1
  4704  0EBA  00C2               	movwf	_setpointUI^(0+128)
  4705  0EBB  3005               	movlw	5
  4706  0EBC  00C3               	movwf	(_setpointUI^(0+128)+1)
  4707  0EBD                     i1l3220:	
  4708                           
  4709                           ;main.c: 348: }
  4710                           ;main.c: 350: if (USART_ReceiveChar() == '3')
  4711  0EBD  160A  118A  228D  120A  158A  	fcall	_USART_ReceiveChar
  4712  0EC2  3A33               	xorlw	51
  4713  0EC3  1D03               	skipz
  4714  0EC4  2ED4               	goto	i1l3226
  4715                           
  4716                           ;main.c: 351: {
  4717                           ;main.c: 352: USART_WriteString("\n\rpwm = \n\r");
  4718  0EC5  30AE               	movlw	low (STR_2-__stringbase)
  4719  0EC6  00F1               	movwf	i1USART_WriteString@str
  4720  0EC7  3080               	movlw	128
  4721  0EC8  00F2               	movwf	i1USART_WriteString@str+1
  4722  0EC9  160A  118A  2328  120A  158A  	fcall	i1_USART_WriteString
  4723                           
  4724                           ;main.c: 353: setpointUI = 2828;
  4725  0ECE  300C               	movlw	12
  4726  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  4727  0ED0  1303               	bcf	3,6	;RP1=0, select bank1
  4728  0ED1  00C2               	movwf	_setpointUI^(0+128)
  4729  0ED2  300B               	movlw	11
  4730  0ED3  00C3               	movwf	(_setpointUI^(0+128)+1)
  4731  0ED4                     i1l3226:	
  4732                           
  4733                           ;main.c: 355: }
  4734                           ;main.c: 357: if (USART_ReceiveChar() == '4')
  4735  0ED4  160A  118A  228D  120A  158A  	fcall	_USART_ReceiveChar
  4736  0ED9  3A34               	xorlw	52
  4737  0EDA  1D03               	skipz
  4738  0EDB  2EFE               	goto	i1l3238
  4739                           
  4740                           ;main.c: 358: {
  4741                           ;main.c: 359: USART_WriteString("\n\rpwm = \n\r");
  4742  0EDC  30AE               	movlw	low (STR_2-__stringbase)
  4743  0EDD  00F1               	movwf	i1USART_WriteString@str
  4744  0EDE  3080               	movlw	128
  4745  0EDF  00F2               	movwf	i1USART_WriteString@str+1
  4746  0EE0  160A  118A  2328  120A  158A  	fcall	i1_USART_WriteString
  4747                           
  4748                           ;main.c: 360: pwm = 3256;
  4749  0EE5  30B8               	movlw	184
  4750  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4751  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4752  0EE8  00EC               	movwf	_pwm
  4753  0EE9  300C               	movlw	12
  4754  0EEA  00ED               	movwf	_pwm+1
  4755                           
  4756                           ;main.c: 361: PWM_DutyCycle2(pwm);
  4757  0EEB  086D               	movf	_pwm+1,w
  4758  0EEC  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4759  0EED  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4760  0EEE  086C               	movf	_pwm,w
  4761  0EEF  01F0               	clrf	i1PWM_DutyCycle2@valor
  4762  0EF0  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4763  0EF1  160A  118A  2272  120A  158A  	fcall	i1_PWM_DutyCycle2
  4764                           
  4765                           ;main.c: 362: if(PORTBbits.RB1 == 0)
  4766  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  4767  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  4768  0EF8  1886               	btfsc	6,1	;volatile
  4769  0EF9  2EFC               	goto	i1l191
  4770                           
  4771                           ;main.c: 363: {
  4772                           ;main.c: 364: PORTBbits.RB1 = 1;
  4773  0EFA  1486               	bsf	6,1	;volatile
  4774                           
  4775                           ;main.c: 365: }else{
  4776  0EFB  2FF3               	goto	i1l186
  4777  0EFC                     i1l191:	
  4778                           
  4779                           ;main.c: 366: PORTBbits.RB1 = 0;
  4780  0EFC  1086               	bcf	6,1	;volatile
  4781                           
  4782                           ;main.c: 367: }
  4783                           ;main.c: 368: return;
  4784  0EFD  2FF3               	goto	i1l186
  4785  0EFE                     i1l3238:	
  4786                           
  4787                           ;main.c: 369: }
  4788                           ;main.c: 371: if (USART_ReceiveChar() == '5')
  4789  0EFE  160A  118A  228D  120A  158A  	fcall	_USART_ReceiveChar
  4790  0F03  3A35               	xorlw	53
  4791  0F04  1D03               	skipz
  4792  0F05  2F15               	goto	i1l3244
  4793                           
  4794                           ;main.c: 372: {
  4795                           ;main.c: 373: USART_WriteString("\n\rpwm = \n\r");
  4796  0F06  30AE               	movlw	low (STR_2-__stringbase)
  4797  0F07  00F1               	movwf	i1USART_WriteString@str
  4798  0F08  3080               	movlw	128
  4799  0F09  00F2               	movwf	i1USART_WriteString@str+1
  4800  0F0A  160A  118A  2328  120A  158A  	fcall	i1_USART_WriteString
  4801                           
  4802                           ;main.c: 374: setpointUI = 4512;
  4803  0F0F  30A0               	movlw	160
  4804  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  4805  0F11  1303               	bcf	3,6	;RP1=0, select bank1
  4806  0F12  00C2               	movwf	_setpointUI^(0+128)
  4807  0F13  3011               	movlw	17
  4808  0F14  00C3               	movwf	(_setpointUI^(0+128)+1)
  4809  0F15                     i1l3244:	
  4810                           
  4811                           ;main.c: 376: }
  4812                           ;main.c: 378: if (USART_ReceiveChar() == '6')
  4813  0F15  160A  118A  228D  120A  158A  	fcall	_USART_ReceiveChar
  4814  0F1A  3A36               	xorlw	54
  4815  0F1B  1D03               	skipz
  4816  0F1C  2F2C               	goto	i1l3250
  4817                           
  4818                           ;main.c: 379: {
  4819                           ;main.c: 380: USART_WriteString("\n\rpwm = 768\n\r");
  4820  0F1D  3092               	movlw	low (STR_7-__stringbase)
  4821  0F1E  00F1               	movwf	i1USART_WriteString@str
  4822  0F1F  3080               	movlw	128
  4823  0F20  00F2               	movwf	i1USART_WriteString@str+1
  4824  0F21  160A  118A  2328  120A  158A  	fcall	i1_USART_WriteString
  4825                           
  4826                           ;main.c: 381: setpointUI = 5768;
  4827  0F26  3088               	movlw	136
  4828  0F27  1683               	bsf	3,5	;RP0=1, select bank1
  4829  0F28  1303               	bcf	3,6	;RP1=0, select bank1
  4830  0F29  00C2               	movwf	_setpointUI^(0+128)
  4831  0F2A  3016               	movlw	22
  4832  0F2B  00C3               	movwf	(_setpointUI^(0+128)+1)
  4833  0F2C                     i1l3250:	
  4834                           
  4835                           ;main.c: 383: }
  4836                           ;main.c: 385: if (USART_ReceiveChar() == '7')
  4837  0F2C  160A  118A  228D  120A  158A  	fcall	_USART_ReceiveChar
  4838  0F31  3A37               	xorlw	55
  4839  0F32  1D03               	skipz
  4840  0F33  2F43               	goto	i1l3256
  4841                           
  4842                           ;main.c: 386: {
  4843                           ;main.c: 387: USART_WriteString("\n\rpwm = 896\n\r");
  4844  0F34  3084               	movlw	low (STR_8-__stringbase)
  4845  0F35  00F1               	movwf	i1USART_WriteString@str
  4846  0F36  3080               	movlw	128
  4847  0F37  00F2               	movwf	i1USART_WriteString@str+1
  4848  0F38  160A  118A  2328  120A  158A  	fcall	i1_USART_WriteString
  4849                           
  4850                           ;main.c: 388: setpointUI = 6896;
  4851  0F3D  30F0               	movlw	240
  4852  0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  4853  0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  4854  0F40  00C2               	movwf	_setpointUI^(0+128)
  4855  0F41  301A               	movlw	26
  4856  0F42  00C3               	movwf	(_setpointUI^(0+128)+1)
  4857  0F43                     i1l3256:	
  4858                           
  4859                           ;main.c: 390: }
  4860                           ;main.c: 392: if (USART_ReceiveChar() == '8')
  4861  0F43  160A  118A  228D  120A  158A  	fcall	_USART_ReceiveChar
  4862  0F48  3A38               	xorlw	56
  4863  0F49  1D03               	skipz
  4864  0F4A  2F5A               	goto	i1l3262
  4865                           
  4866                           ;main.c: 393: {
  4867                           ;main.c: 394: USART_WriteString("\n\rpwm = \n\r");
  4868  0F4B  30AE               	movlw	low (STR_2-__stringbase)
  4869  0F4C  00F1               	movwf	i1USART_WriteString@str
  4870  0F4D  3080               	movlw	128
  4871  0F4E  00F2               	movwf	i1USART_WriteString@str+1
  4872  0F4F  160A  118A  2328  120A  158A  	fcall	i1_USART_WriteString
  4873                           
  4874                           ;main.c: 395: setpointUI = 8100;
  4875  0F54  30A4               	movlw	164
  4876  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  4877  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  4878  0F57  00C2               	movwf	_setpointUI^(0+128)
  4879  0F58  301F               	movlw	31
  4880  0F59  00C3               	movwf	(_setpointUI^(0+128)+1)
  4881  0F5A                     i1l3262:	
  4882                           
  4883                           ;main.c: 397: }
  4884                           ;main.c: 399: if (USART_ReceiveChar() == '9')
  4885  0F5A  160A  118A  228D  120A  158A  	fcall	_USART_ReceiveChar
  4886  0F5F  3A39               	xorlw	57
  4887  0F60  1D03               	skipz
  4888  0F61  2F71               	goto	i1l3268
  4889                           
  4890                           ;main.c: 400: {
  4891                           ;main.c: 401: USART_WriteString("\n\rpwm = 1023\n\r");
  4892  0F62  3075               	movlw	low (STR_10-__stringbase)
  4893  0F63  00F1               	movwf	i1USART_WriteString@str
  4894  0F64  3080               	movlw	128
  4895  0F65  00F2               	movwf	i1USART_WriteString@str+1
  4896  0F66  160A  118A  2328  120A  158A  	fcall	i1_USART_WriteString
  4897                           
  4898                           ;main.c: 402: setpointUI = 9000;
  4899  0F6B  3028               	movlw	40
  4900  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  4901  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  4902  0F6E  00C2               	movwf	_setpointUI^(0+128)
  4903  0F6F  3023               	movlw	35
  4904  0F70  00C3               	movwf	(_setpointUI^(0+128)+1)
  4905  0F71                     i1l3268:	
  4906                           
  4907                           ;main.c: 404: }
  4908                           ;main.c: 408: Fuzzy();
  4909  0F71  120A  118A  2053  120A  158A  	fcall	_Fuzzy
  4910                           
  4911                           ;main.c: 409: tf = setpointUI;
  4912  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  4913  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  4914  0F78  0843               	movf	(_setpointUI+1)^(0+128),w
  4915  0F79  01F9               	clrf	___lwtoft@c+1
  4916  0F7A  07F9               	addwf	___lwtoft@c+1,f
  4917  0F7B  0842               	movf	_setpointUI^(0+128),w
  4918  0F7C  01F8               	clrf	___lwtoft@c
  4919  0F7D  07F8               	addwf	___lwtoft@c,f
  4920  0F7E  160A  118A  2230  120A  158A  	fcall	___lwtoft
  4921  0F83  0878               	movf	?___lwtoft,w
  4922  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  4923  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  4924  0F86  00B2               	movwf	_tf^(0+128)
  4925  0F87  0879               	movf	?___lwtoft+1,w
  4926  0F88  00B3               	movwf	(_tf+1)^(0+128)
  4927  0F89  087A               	movf	?___lwtoft+2,w
  4928  0F8A  00B4               	movwf	(_tf+2)^(0+128)
  4929                           
  4930                           ;main.c: 411: PIR1bits.RCIF = 0;
  4931  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0F8D  128C               	bcf	12,5	;volatile
  4934  0F8E                     i1l3274:	
  4935                           
  4936                           ;main.c: 412: }
  4937                           ;main.c: 415: if (PIR1bits.ADIF)
  4938  0F8E  1B0C               	btfsc	12,6	;volatile
  4939                           
  4940                           ;main.c: 416: {
  4941                           ;main.c: 420: PIR1bits.ADIF = 0;
  4942  0F8F  130C               	bcf	12,6	;volatile
  4943                           
  4944                           ;main.c: 421: }
  4945                           ;main.c: 425: if (INTCONbits.T0IF)
  4946  0F90  1D0B               	btfss	11,2	;volatile
  4947  0F91  2FEF               	goto	i1l3300
  4948                           
  4949                           ;main.c: 426: {
  4950                           ;main.c: 428: TIMER0_Set(238);
  4951  0F92  30EE               	movlw	238
  4952  0F93  160A  118A  21E2  120A  158A  	fcall	i1_TIMER0_Set
  4953                           
  4954                           ;main.c: 431: if (contagens_tm0 < 499)
  4955  0F98  3001               	movlw	1
  4956  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  4957  0F9A  1303               	bcf	3,6	;RP1=0, select bank1
  4958  0F9B  023D               	subwf	(_contagens_tm0+1)^(0+128),w
  4959  0F9C  30F3               	movlw	243
  4960  0F9D  1903               	skipnz
  4961  0F9E  023C               	subwf	_contagens_tm0^(0+128),w
  4962  0F9F  1803               	skipnc
  4963  0FA0  2FAB               	goto	i1l3286
  4964                           
  4965                           ;main.c: 432: {
  4966                           ;main.c: 434: contagens_tm0++;
  4967  0FA1  3001               	movlw	1
  4968  0FA2  07BC               	addwf	_contagens_tm0^(0+128),f
  4969  0FA3  1803               	skipnc
  4970  0FA4  0ABD               	incf	(_contagens_tm0+1)^(0+128),f
  4971  0FA5  3000               	movlw	0
  4972  0FA6  07BD               	addwf	(_contagens_tm0+1)^(0+128),f
  4973                           
  4974                           ;main.c: 437: PORTBbits.RB6 = 1;
  4975  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  4976  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  4977  0FA9  1706               	bsf	6,6	;volatile
  4978                           
  4979                           ;main.c: 438: }
  4980  0FAA  2FEE               	goto	i1l3298
  4981  0FAB                     i1l3286:	
  4982                           
  4983                           ;main.c: 439: else
  4984                           ;main.c: 440: {
  4985                           ;main.c: 442: contagens_tm0 = 0;
  4986  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  4987  0FAC  1303               	bcf	3,6	;RP1=0, select bank1
  4988  0FAD  01BC               	clrf	_contagens_tm0^(0+128)
  4989  0FAE  01BD               	clrf	(_contagens_tm0+1)^(0+128)
  4990                           
  4991                           ;main.c: 445: pulsos = (TMR1H << 8) + TMR1L;
  4992  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  4993  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  4994  0FB1  080F               	movf	15,w	;volatile
  4995  0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  4996  0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  4997  0FB4  01BF               	clrf	(_pulsos+1)^(0+128)
  4998  0FB5  07BF               	addwf	(_pulsos+1)^(0+128),f
  4999  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  5001  0FB8  080E               	movf	14,w	;volatile
  5002  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  5003  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  5004  0FBB  01BE               	clrf	_pulsos^(0+128)
  5005  0FBC  07BE               	addwf	_pulsos^(0+128),f
  5006                           
  5007                           ;main.c: 446: rpm = ((pulsos / pas_cooler) * 120);
  5008  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  5009  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  5010  0FBF  086F               	movf	_pas_cooler+1,w
  5011  0FC0  01F1               	clrf	i1___lwdiv@divisor+1
  5012  0FC1  07F1               	addwf	i1___lwdiv@divisor+1,f
  5013  0FC2  086E               	movf	_pas_cooler,w
  5014  0FC3  01F0               	clrf	i1___lwdiv@divisor
  5015  0FC4  07F0               	addwf	i1___lwdiv@divisor,f
  5016  0FC5  1683               	bsf	3,5	;RP0=1, select bank1
  5017  0FC6  1303               	bcf	3,6	;RP1=0, select bank1
  5018  0FC7  083F               	movf	(_pulsos+1)^(0+128),w
  5019  0FC8  01F3               	clrf	i1___lwdiv@dividend+1
  5020  0FC9  07F3               	addwf	i1___lwdiv@dividend+1,f
  5021  0FCA  083E               	movf	_pulsos^(0+128),w
  5022  0FCB  01F2               	clrf	i1___lwdiv@dividend
  5023  0FCC  07F2               	addwf	i1___lwdiv@dividend,f
  5024  0FCD  160A  118A  2478  120A  158A  	fcall	i1___lwdiv
  5025  0FD2  0871               	movf	?i1___lwdiv+1,w
  5026  0FD3  01F9               	clrf	i1___wmul@multiplier+1
  5027  0FD4  07F9               	addwf	i1___wmul@multiplier+1,f
  5028  0FD5  0870               	movf	?i1___lwdiv,w
  5029  0FD6  01F8               	clrf	i1___wmul@multiplier
  5030  0FD7  07F8               	addwf	i1___wmul@multiplier,f
  5031  0FD8  3078               	movlw	120
  5032  0FD9  00FA               	movwf	i1___wmul@multiplicand
  5033  0FDA  3000               	movlw	0
  5034  0FDB  00FB               	movwf	i1___wmul@multiplicand+1
  5035  0FDC  160A  118A  234B  120A  158A  	fcall	i1___wmul
  5036  0FE1  0879               	movf	?i1___wmul+1,w
  5037  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  5038  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  5039  0FE4  01C1               	clrf	(_rpm+1)^(0+128)
  5040  0FE5  07C1               	addwf	(_rpm+1)^(0+128),f
  5041  0FE6  0878               	movf	?i1___wmul,w
  5042  0FE7  01C0               	clrf	_rpm^(0+128)
  5043  0FE8  07C0               	addwf	_rpm^(0+128),f
  5044                           
  5045                           ;main.c: 449: TMR1L = 0x00;
  5046  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  5047  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  5048  0FEB  018E               	clrf	14	;volatile
  5049                           
  5050                           ;main.c: 450: TMR1H = 0x00;
  5051  0FEC  018F               	clrf	15	;volatile
  5052                           
  5053                           ;main.c: 453: PORTBbits.RB6 = 0;
  5054  0FED  1306               	bcf	6,6	;volatile
  5055  0FEE                     i1l3298:	
  5056                           
  5057                           ;main.c: 454: }
  5058                           ;main.c: 457: INTCONbits.T0IF = 0;
  5059  0FEE  110B               	bcf	11,2	;volatile
  5060  0FEF                     i1l3300:	
  5061                           
  5062                           ;main.c: 458: }
  5063                           ;main.c: 461: if (PIR1bits.TMR1IF)
  5064  0FEF  180C               	btfsc	12,0	;volatile
  5065                           
  5066                           ;main.c: 462: {
  5067                           ;main.c: 466: PIR1bits.TMR1IF = 0;
  5068  0FF0  100C               	bcf	12,0	;volatile
  5069                           
  5070                           ;main.c: 467: }
  5071                           ;main.c: 470: if (PIR1bits.SSPIF)
  5072  0FF1  198C               	btfsc	12,3	;volatile
  5073                           
  5074                           ;main.c: 471: {
  5075                           ;main.c: 475: PIR1bits.SSPIF = 0;
  5076  0FF2  118C               	bcf	12,3	;volatile
  5077  0FF3                     i1l186:	
  5078  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  5079  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  5080  0FF5  0860               	movf	??_ISR+3,w
  5081  0FF6  00FF               	movwf	127
  5082  0FF7  085F               	movf	??_ISR+2,w
  5083  0FF8  008A               	movwf	10
  5084  0FF9  085E               	movf	??_ISR+1,w
  5085  0FFA  0084               	movwf	4
  5086  0FFB  0E5D               	swapf	??_ISR^0,w
  5087  0FFC  0083               	movwf	3
  5088  0FFD  0EFE               	swapf	126,f
  5089  0FFE  0E7E               	swapf	126,w
  5090  0FFF  0009               	retfie
  5091  1000                     __end_of_ISR:	
  5092                           
  5093                           	psect	intentry
  5094  0004                     __pintentry:	
  5095                           ;incstack = 0
  5096                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5097                           
  5098  0004                     interrupt_function:	
  5099  007E                     saved_w	set	btemp
  5100  0004  00FE               	movwf	btemp
  5101  0005  0E03               	swapf	3,w
  5102  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0008  00DD               	movwf	??_ISR
  5105  0009  0804               	movf	4,w
  5106  000A  00DE               	movwf	??_ISR+1
  5107  000B  080A               	movf	10,w
  5108  000C  00DF               	movwf	??_ISR+2
  5109  000D  087F               	movf	btemp+1,w
  5110  000E  00E0               	movwf	??_ISR+3
  5111  000F  120A  158A  2E6C   	ljmp	_ISR
  5112                           
  5113                           	psect	text23
  5114  134B                     __ptext23:	
  5115 ;; *************** function i1___wmul *****************
  5116 ;; Defined at:
  5117 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  multiplier      2    8[COMMON] unsigned int 
  5120 ;;  multiplicand    2   10[COMMON] unsigned int 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  __wmul          2   12[COMMON] unsigned int 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  2    8[COMMON] unsigned int 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5132 ;;      Params:         4       0       0       0       0
  5133 ;;      Locals:         2       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0
  5135 ;;      Totals:         6       0       0       0       0
  5136 ;;Total ram usage:        6 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; This function calls:
  5139 ;;		Nothing
  5140 ;; This function is called by:
  5141 ;;		_ISR
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           
  5146                           ;psect for function i1___wmul
  5147  134B                     i1___wmul:	
  5148                           
  5149                           ;incstack = 0
  5150                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5151  134B  01FC               	clrf	i1___wmul@product
  5152  134C  01FD               	clrf	i1___wmul@product+1
  5153  134D                     i1l3154:	
  5154  134D  1C78               	btfss	i1___wmul@multiplier,0
  5155  134E  2B55               	goto	i1l602
  5156  134F  087A               	movf	i1___wmul@multiplicand,w
  5157  1350  07FC               	addwf	i1___wmul@product,f
  5158  1351  1803               	skipnc
  5159  1352  0AFD               	incf	i1___wmul@product+1,f
  5160  1353  087B               	movf	i1___wmul@multiplicand+1,w
  5161  1354  07FD               	addwf	i1___wmul@product+1,f
  5162  1355                     i1l602:	
  5163  1355  3001               	movlw	1
  5164  1356                     u387_25:	
  5165  1356  1003               	clrc
  5166  1357  0DFA               	rlf	i1___wmul@multiplicand,f
  5167  1358  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5168  1359  3EFF               	addlw	-1
  5169  135A  1D03               	skipz
  5170  135B  2B56               	goto	u387_25
  5171  135C  3001               	movlw	1
  5172  135D                     u388_25:	
  5173  135D  1003               	clrc
  5174  135E  0CF9               	rrf	i1___wmul@multiplier+1,f
  5175  135F  0CF8               	rrf	i1___wmul@multiplier,f
  5176  1360  3EFF               	addlw	-1
  5177  1361  1D03               	skipz
  5178  1362  2B5D               	goto	u388_25
  5179  1363  0879               	movf	i1___wmul@multiplier+1,w
  5180  1364  0478               	iorwf	i1___wmul@multiplier,w
  5181  1365  1D03               	skipz
  5182  1366  2B4D               	goto	i1l3154
  5183  1367  087D               	movf	i1___wmul@product+1,w
  5184  1368  01F9               	clrf	?i1___wmul+1
  5185  1369  07F9               	addwf	?i1___wmul+1,f
  5186  136A  087C               	movf	i1___wmul@product,w
  5187  136B  01F8               	clrf	?i1___wmul
  5188  136C  07F8               	addwf	?i1___wmul,f
  5189  136D  0008               	return
  5190  136E                     __end_ofi1___wmul:	
  5191                           
  5192                           	psect	text24
  5193  1478                     __ptext24:	
  5194 ;; *************** function i1___lwdiv *****************
  5195 ;; Defined at:
  5196 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  divisor         2    0[COMMON] unsigned int 
  5199 ;;  dividend        2    2[COMMON] unsigned int 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5202 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  2    0[COMMON] unsigned int 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5212 ;;      Params:         4       0       0       0       0
  5213 ;;      Locals:         3       0       0       0       0
  5214 ;;      Temps:          1       0       0       0       0
  5215 ;;      Totals:         8       0       0       0       0
  5216 ;;Total ram usage:        8 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; This function calls:
  5219 ;;		Nothing
  5220 ;; This function is called by:
  5221 ;;		_ISR
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           
  5226                           ;psect for function i1___lwdiv
  5227  1478                     i1___lwdiv:	
  5228                           
  5229                           ;incstack = 0
  5230                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5231  1478  01F5               	clrf	i1___lwdiv@quotient
  5232  1479  01F6               	clrf	i1___lwdiv@quotient+1
  5233  147A  0871               	movf	i1___lwdiv@divisor+1,w
  5234  147B  0470               	iorwf	i1___lwdiv@divisor,w
  5235  147C  1903               	skipnz
  5236  147D  2CAF               	goto	i1l3186
  5237  147E  01F7               	clrf	i1___lwdiv@counter
  5238  147F  0AF7               	incf	i1___lwdiv@counter,f
  5239  1480                     i1l3174:	
  5240  1480  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5241  1481  2C8E               	goto	i1l3176
  5242  1482  3001               	movlw	1
  5243  1483                     u391_25:	
  5244  1483  1003               	clrc
  5245  1484  0DF0               	rlf	i1___lwdiv@divisor,f
  5246  1485  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5247  1486  3EFF               	addlw	-1
  5248  1487  1D03               	skipz
  5249  1488  2C83               	goto	u391_25
  5250  1489  3001               	movlw	1
  5251  148A  00F4               	movwf	??i1___lwdiv
  5252  148B  0874               	movf	??i1___lwdiv,w
  5253  148C  07F7               	addwf	i1___lwdiv@counter,f
  5254  148D  2C80               	goto	i1l3174
  5255  148E                     i1l3176:	
  5256  148E  3001               	movlw	1
  5257  148F                     u393_25:	
  5258  148F  1003               	clrc
  5259  1490  0DF5               	rlf	i1___lwdiv@quotient,f
  5260  1491  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5261  1492  3EFF               	addlw	-1
  5262  1493  1D03               	skipz
  5263  1494  2C8F               	goto	u393_25
  5264  1495  0871               	movf	i1___lwdiv@divisor+1,w
  5265  1496  0273               	subwf	i1___lwdiv@dividend+1,w
  5266  1497  1D03               	skipz
  5267  1498  2C9B               	goto	u394_25
  5268  1499  0870               	movf	i1___lwdiv@divisor,w
  5269  149A  0272               	subwf	i1___lwdiv@dividend,w
  5270  149B                     u394_25:	
  5271  149B  1C03               	skipc
  5272  149C  2CA4               	goto	i1l3182
  5273  149D  0870               	movf	i1___lwdiv@divisor,w
  5274  149E  02F2               	subwf	i1___lwdiv@dividend,f
  5275  149F  0871               	movf	i1___lwdiv@divisor+1,w
  5276  14A0  1C03               	skipc
  5277  14A1  03F3               	decf	i1___lwdiv@dividend+1,f
  5278  14A2  02F3               	subwf	i1___lwdiv@dividend+1,f
  5279  14A3  1475               	bsf	i1___lwdiv@quotient,0
  5280  14A4                     i1l3182:	
  5281  14A4  3001               	movlw	1
  5282  14A5                     u395_25:	
  5283  14A5  1003               	clrc
  5284  14A6  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5285  14A7  0CF0               	rrf	i1___lwdiv@divisor,f
  5286  14A8  3EFF               	addlw	-1
  5287  14A9  1D03               	skipz
  5288  14AA  2CA5               	goto	u395_25
  5289  14AB  3001               	movlw	1
  5290  14AC  02F7               	subwf	i1___lwdiv@counter,f
  5291  14AD  1D03               	btfss	3,2
  5292  14AE  2C8E               	goto	i1l3176
  5293  14AF                     i1l3186:	
  5294  14AF  0876               	movf	i1___lwdiv@quotient+1,w
  5295  14B0  01F1               	clrf	?i1___lwdiv+1
  5296  14B1  07F1               	addwf	?i1___lwdiv+1,f
  5297  14B2  0875               	movf	i1___lwdiv@quotient,w
  5298  14B3  01F0               	clrf	?i1___lwdiv
  5299  14B4  07F0               	addwf	?i1___lwdiv,f
  5300  14B5  0008               	return
  5301  14B6                     __end_ofi1___lwdiv:	
  5302                           
  5303                           	psect	text25
  5304  11E2                     __ptext25:	
  5305 ;; *************** function i1_TIMER0_Set *****************
  5306 ;; Defined at:
  5307 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  contagens       1    wreg     unsigned char 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  contagens       1    0[COMMON] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;		None               void
  5314 ;; Registers used:
  5315 ;;		wreg
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5321 ;;      Params:         0       0       0       0       0
  5322 ;;      Locals:         1       0       0       0       0
  5323 ;;      Temps:          0       0       0       0       0
  5324 ;;      Totals:         1       0       0       0       0
  5325 ;;Total ram usage:        1 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; This function calls:
  5328 ;;		Nothing
  5329 ;; This function is called by:
  5330 ;;		_ISR
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function i1_TIMER0_Set
  5336  11E2                     i1_TIMER0_Set:	
  5337                           
  5338                           ;incstack = 0
  5339                           ; Regs used in i1_TIMER0_Set: [wreg]
  5340                           ;i1TIMER0_Set@contagens stored from wreg
  5341  11E2  00F0               	movwf	i1TIMER0_Set@contagens
  5342                           
  5343                           ;timers.c: 22: TMR0 = contagens;
  5344  11E3  0870               	movf	i1TIMER0_Set@contagens,w
  5345  11E4  1283               	bcf	3,5	;RP0=0, select bank0
  5346  11E5  1303               	bcf	3,6	;RP1=0, select bank0
  5347  11E6  0081               	movwf	1	;volatile
  5348  11E7  0008               	return
  5349  11E8                     __end_ofi1_TIMER0_Set:	
  5350                           
  5351                           	psect	text26
  5352  128D                     __ptext26:	
  5353 ;; *************** function _USART_ReceiveChar *****************
  5354 ;; Defined at:
  5355 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  byte            1    4[COMMON] unsigned char 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      unsigned char 
  5362 ;; Registers used:
  5363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5369 ;;      Params:         0       0       0       0       0
  5370 ;;      Locals:         1       0       0       0       0
  5371 ;;      Temps:          1       0       0       0       0
  5372 ;;      Totals:         2       0       0       0       0
  5373 ;;Total ram usage:        2 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    2
  5376 ;; This function calls:
  5377 ;;		i1_USART_WriteString
  5378 ;; This function is called by:
  5379 ;;		_ISR
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function _USART_ReceiveChar
  5385  128D                     _USART_ReceiveChar:	
  5386                           
  5387                           ;usart.c: 65: unsigned char byte;
  5388                           ;usart.c: 67: if (!OERR)
  5389                           
  5390                           ;incstack = 0
  5391                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5392  128D  1283               	bcf	3,5	;RP0=0, select bank0
  5393  128E  1303               	bcf	3,6	;RP1=0, select bank0
  5394  128F  1898               	btfsc	24,1	;volatile
  5395  1290  2A96               	goto	i1l2884
  5396                           
  5397                           ;usart.c: 68: {
  5398                           ;usart.c: 69: byte = RCREG;
  5399  1291  081A               	movf	26,w	;volatile
  5400  1292  00F3               	movwf	??_USART_ReceiveChar
  5401  1293  0873               	movf	??_USART_ReceiveChar,w
  5402  1294  00F4               	movwf	USART_ReceiveChar@byte
  5403  1295  2AA5               	goto	i1l2892
  5404  1296                     i1l2884:	
  5405                           ;usart.c: 71: }
  5406                           
  5407                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5408                           
  5409                           
  5410                           ;usart.c: 72: else
  5411                           ;usart.c: 73: {
  5412                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5413  1296  300B               	movlw	low (STR_19-__stringbase)
  5414  1297  00F1               	movwf	i1USART_WriteString@str
  5415  1298  3080               	movlw	128
  5416  1299  00F2               	movwf	i1USART_WriteString@str+1
  5417  129A  160A  118A  2328   	fcall	i1_USART_WriteString
  5418                           
  5419                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5420  129D  1283               	bcf	3,5	;RP0=0, select bank0
  5421  129E  1303               	bcf	3,6	;RP1=0, select bank0
  5422  129F  1218               	bcf	24,4	;volatile
  5423                           
  5424                           ;usart.c: 77: byte = RCREG;
  5425  12A0  081A               	movf	26,w	;volatile
  5426  12A1  00F3               	movwf	??_USART_ReceiveChar
  5427  12A2  0873               	movf	??_USART_ReceiveChar,w
  5428  12A3  00F4               	movwf	USART_ReceiveChar@byte
  5429                           
  5430                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5431  12A4  1618               	bsf	24,4	;volatile
  5432  12A5                     i1l2892:	
  5433                           
  5434                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5435  12A5  128C               	bcf	12,5	;volatile
  5436                           
  5437                           ;usart.c: 80: }
  5438                           ;usart.c: 82: return(byte);
  5439  12A6  0874               	movf	USART_ReceiveChar@byte,w
  5440  12A7  0008               	return
  5441  12A8                     __end_of_USART_ReceiveChar:	
  5442                           
  5443                           	psect	text27
  5444  1328                     __ptext27:	
  5445 ;; *************** function i1_USART_WriteString *****************
  5446 ;; Defined at:
  5447 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  str             2    1[COMMON] PTR const unsigned char 
  5450 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5451 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  5452 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  5453 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;		None
  5456 ;; Return value:  Size  Location     Type
  5457 ;;		None               void
  5458 ;; Registers used:
  5459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5465 ;;      Params:         2       0       0       0       0
  5466 ;;      Locals:         0       0       0       0       0
  5467 ;;      Temps:          0       0       0       0       0
  5468 ;;      Totals:         2       0       0       0       0
  5469 ;;Total ram usage:        2 bytes
  5470 ;; Hardware stack levels used:    1
  5471 ;; Hardware stack levels required when called:    1
  5472 ;; This function calls:
  5473 ;;		i1_USART_WriteChar
  5474 ;; This function is called by:
  5475 ;;		_ISR
  5476 ;;		_USART_ReceiveChar
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           
  5481                           ;psect for function i1_USART_WriteString
  5482  1328                     i1_USART_WriteString:	
  5483  1328                     i1l2732:	
  5484                           ;usart.c: 54: while(*str != '\0')
  5485                           
  5486                           ;incstack = 0
  5487                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5488                           
  5489  1328  0872               	movf	i1USART_WriteString@str+1,w
  5490  1329  1283               	bcf	3,5	;RP0=0, select bank0
  5491  132A  1303               	bcf	3,6	;RP1=0, select bank0
  5492  132B  00FF               	movwf	127
  5493  132C  0871               	movf	i1USART_WriteString@str,w
  5494  132D  0084               	movwf	4
  5495  132E  120A  158A  2000  160A  118A  	fcall	stringtab
  5496  1333  3800               	iorlw	0
  5497  1334  1903               	btfsc	3,2
  5498  1335  0008               	return
  5499                           
  5500                           ;usart.c: 55: {
  5501                           ;usart.c: 56: USART_WriteChar(*str);
  5502  1336  0872               	movf	i1USART_WriteString@str+1,w
  5503  1337  1283               	bcf	3,5	;RP0=0, select bank0
  5504  1338  1303               	bcf	3,6	;RP1=0, select bank0
  5505  1339  00FF               	movwf	127
  5506  133A  0871               	movf	i1USART_WriteString@str,w
  5507  133B  0084               	movwf	4
  5508  133C  120A  158A  2000  160A  118A  	fcall	stringtab
  5509  1341  160A  118A  21F0  160A  118A  	fcall	i1_USART_WriteChar
  5510                           
  5511                           ;usart.c: 57: str++;
  5512  1346  3001               	movlw	1
  5513  1347  07F1               	addwf	i1USART_WriteString@str,f
  5514  1348  1803               	skipnc
  5515  1349  0AF2               	incf	i1USART_WriteString@str+1,f
  5516  134A  2B28               	goto	i1l2732
  5517  134B                     __end_ofi1_USART_WriteString:	
  5518                           
  5519                           	psect	text28
  5520  11F0                     __ptext28:	
  5521 ;; *************** function i1_USART_WriteChar *****************
  5522 ;; Defined at:
  5523 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  byte            1    wreg     unsigned char 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  byte            1    0[COMMON] unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;		None               void
  5530 ;; Registers used:
  5531 ;;		wreg
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5537 ;;      Params:         0       0       0       0       0
  5538 ;;      Locals:         1       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0
  5540 ;;      Totals:         1       0       0       0       0
  5541 ;;Total ram usage:        1 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		i1_USART_WriteString
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           
  5551                           ;psect for function i1_USART_WriteChar
  5552  11F0                     i1_USART_WriteChar:	
  5553                           
  5554                           ;incstack = 0
  5555                           ; Regs used in i1_USART_WriteChar: [wreg]
  5556                           ;i1USART_WriteChar@byte stored from wreg
  5557  11F0  00F0               	movwf	i1USART_WriteChar@byte
  5558  11F1                     i1l231:	
  5559                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5560                           
  5561  11F1  1283               	bcf	3,5	;RP0=0, select bank0
  5562  11F2  1303               	bcf	3,6	;RP1=0, select bank0
  5563  11F3  1E0C               	btfss	12,4	;volatile
  5564  11F4  29F1               	goto	i1l231
  5565                           
  5566                           ;usart.c: 47: TXREG = byte;
  5567  11F5  0870               	movf	i1USART_WriteChar@byte,w
  5568  11F6  0099               	movwf	25	;volatile
  5569  11F7  0008               	return
  5570  11F8                     __end_ofi1_USART_WriteChar:	
  5571                           
  5572                           	psect	text29
  5573  0053                     __ptext29:	
  5574 ;; *************** function _Fuzzy *****************
  5575 ;; Defined at:
  5576 ;;		line 130 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;		None
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  a               2   48[BANK0 ] int 
  5581 ;;  a               2   46[BANK0 ] int 
  5582 ;;  a               2   44[BANK0 ] int 
  5583 ;;  a               2   50[BANK0 ] int 
  5584 ;;  aumenta         3   58[BANK0 ] float 
  5585 ;;  reduz           3   55[BANK0 ] float 
  5586 ;;  mantem          3   52[BANK0 ] float 
  5587 ;;  tip             3   41[BANK0 ] float 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;		None               void
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5597 ;;      Params:         0       0       0       0       0
  5598 ;;      Locals:         0      20       0       0       0
  5599 ;;      Temps:          0       0       0       0       0
  5600 ;;      Totals:         0      20       0       0       0
  5601 ;;Total ram usage:       20 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    3
  5604 ;; This function calls:
  5605 ;;		___ftadd
  5606 ;;		___ftdiv
  5607 ;;		___ftge
  5608 ;;		___ftmul
  5609 ;;		___ftneg
  5610 ;;		___fttol
  5611 ;;		___lwtoft
  5612 ;;		_max_val
  5613 ;;		_trapmf
  5614 ;;		_trimf
  5615 ;;		i1_PWM_DutyCycle2
  5616 ;; This function is called by:
  5617 ;;		_ISR
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           
  5622                           ;psect for function _Fuzzy
  5623  0053                     _Fuzzy:	
  5624                           
  5625                           ;main.c: 141: setpoint = (float)pwm;
  5626                           
  5627                           ;incstack = 0
  5628                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5629  0053  1283               	bcf	3,5	;RP0=0, select bank0
  5630  0054  1303               	bcf	3,6	;RP1=0, select bank0
  5631  0055  086D               	movf	_pwm+1,w
  5632  0056  01F9               	clrf	___lwtoft@c+1
  5633  0057  07F9               	addwf	___lwtoft@c+1,f
  5634  0058  086C               	movf	_pwm,w
  5635  0059  01F8               	clrf	___lwtoft@c
  5636  005A  07F8               	addwf	___lwtoft@c,f
  5637  005B  160A  118A  2230  120A  118A  	fcall	___lwtoft
  5638  0060  0878               	movf	?___lwtoft,w
  5639  0061  1683               	bsf	3,5	;RP0=1, select bank1
  5640  0062  1303               	bcf	3,6	;RP1=0, select bank1
  5641  0063  00EC               	movwf	_setpoint^(0+128)
  5642  0064  0879               	movf	?___lwtoft+1,w
  5643  0065  00ED               	movwf	(_setpoint+1)^(0+128)
  5644  0066  087A               	movf	?___lwtoft+2,w
  5645  0067  00EE               	movwf	(_setpoint+2)^(0+128)
  5646                           
  5647                           ;main.c: 143: float mantem = 1100;
  5648  0068  3080               	movlw	128
  5649  0069  1283               	bcf	3,5	;RP0=0, select bank0
  5650  006A  1303               	bcf	3,6	;RP1=0, select bank0
  5651  006B  00D4               	movwf	Fuzzy@mantem
  5652  006C  3089               	movlw	137
  5653  006D  00D5               	movwf	Fuzzy@mantem+1
  5654  006E  3044               	movlw	68
  5655  006F  00D6               	movwf	Fuzzy@mantem+2
  5656                           
  5657                           ;main.c: 144: float reduz = 2200;
  5658  0070  3080               	movlw	128
  5659  0071  00D7               	movwf	Fuzzy@reduz
  5660  0072  3009               	movlw	9
  5661  0073  00D8               	movwf	Fuzzy@reduz+1
  5662  0074  3045               	movlw	69
  5663  0075  00D9               	movwf	Fuzzy@reduz+2
  5664                           
  5665                           ;main.c: 145: float aumenta = 3300;
  5666  0076  3040               	movlw	64
  5667  0077  00DA               	movwf	Fuzzy@aumenta
  5668  0078  304E               	movlw	78
  5669  0079  00DB               	movwf	Fuzzy@aumenta+1
  5670  007A  3045               	movlw	69
  5671  007B  00DC               	movwf	Fuzzy@aumenta+2
  5672                           
  5673                           ;main.c: 146: float tip;
  5674                           ;main.c: 147: fitemp =0;
  5675  007C  3000               	movlw	0
  5676  007D  1683               	bsf	3,5	;RP0=1, select bank1
  5677  007E  1303               	bcf	3,6	;RP1=0, select bank1
  5678  007F  00A3               	movwf	_fitemp^(0+128)
  5679  0080  3000               	movlw	0
  5680  0081  00A4               	movwf	(_fitemp+1)^(0+128)
  5681  0082  3000               	movlw	0
  5682  0083  00A5               	movwf	(_fitemp+2)^(0+128)
  5683                           
  5684                           ;main.c: 150: temp = (setpoint - tf);
  5685  0084  086C               	movf	_setpoint^(0+128),w
  5686  0085  00F8               	movwf	___ftadd@f1
  5687  0086  086D               	movf	(_setpoint+1)^(0+128),w
  5688  0087  00F9               	movwf	___ftadd@f1+1
  5689  0088  086E               	movf	(_setpoint+2)^(0+128),w
  5690  0089  00FA               	movwf	___ftadd@f1+2
  5691  008A  0832               	movf	_tf^(0+128),w
  5692  008B  00F0               	movwf	___ftneg@f1
  5693  008C  0833               	movf	(_tf+1)^(0+128),w
  5694  008D  00F1               	movwf	___ftneg@f1+1
  5695  008E  0834               	movf	(_tf+2)^(0+128),w
  5696  008F  00F2               	movwf	___ftneg@f1+2
  5697  0090  160A  118A  21E8  120A  118A  	fcall	___ftneg
  5698  0095  0870               	movf	?___ftneg,w
  5699  0096  00FB               	movwf	___ftadd@f2
  5700  0097  0871               	movf	?___ftneg+1,w
  5701  0098  00FC               	movwf	___ftadd@f2+1
  5702  0099  0872               	movf	?___ftneg+2,w
  5703  009A  00FD               	movwf	___ftadd@f2+2
  5704  009B  120A  158A  21A6  120A  118A  	fcall	___ftadd
  5705  00A0  0878               	movf	?___ftadd,w
  5706  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  5707  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  5708  00A3  00E1               	movwf	_temp
  5709  00A4  0879               	movf	?___ftadd+1,w
  5710  00A5  00E2               	movwf	_temp+1
  5711  00A6  087A               	movf	?___ftadd+2,w
  5712  00A7  00E3               	movwf	_temp+2
  5713                           
  5714                           ;main.c: 151: temp = (temp/100)*-1;
  5715  00A8  3000               	movlw	0
  5716  00A9  00B7               	movwf	___ftmul@f1
  5717  00AA  3080               	movlw	128
  5718  00AB  00B8               	movwf	___ftmul@f1+1
  5719  00AC  30BF               	movlw	191
  5720  00AD  00B9               	movwf	___ftmul@f1+2
  5721  00AE  3000               	movlw	0
  5722  00AF  00A7               	movwf	___ftdiv@f2
  5723  00B0  30C8               	movlw	200
  5724  00B1  00A8               	movwf	___ftdiv@f2+1
  5725  00B2  3042               	movlw	66
  5726  00B3  00A9               	movwf	___ftdiv@f2+2
  5727  00B4  0861               	movf	_temp,w
  5728  00B5  00AA               	movwf	___ftdiv@f1
  5729  00B6  0862               	movf	_temp+1,w
  5730  00B7  00AB               	movwf	___ftdiv@f1+1
  5731  00B8  0863               	movf	_temp+2,w
  5732  00B9  00AC               	movwf	___ftdiv@f1+2
  5733  00BA  120A  158A  20EE  120A  118A  	fcall	___ftdiv
  5734  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  5735  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  5736  00C1  0827               	movf	?___ftdiv,w
  5737  00C2  00BA               	movwf	___ftmul@f2
  5738  00C3  0828               	movf	?___ftdiv+1,w
  5739  00C4  00BB               	movwf	___ftmul@f2+1
  5740  00C5  0829               	movf	?___ftdiv+2,w
  5741  00C6  00BC               	movwf	___ftmul@f2+2
  5742  00C7  160A  118A  272D  120A  118A  	fcall	___ftmul
  5743  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  5744  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  5745  00CE  0837               	movf	?___ftmul,w
  5746  00CF  00E1               	movwf	_temp
  5747  00D0  0838               	movf	?___ftmul+1,w
  5748  00D1  00E2               	movwf	_temp+1
  5749  00D2  0839               	movf	?___ftmul+2,w
  5750  00D3  00E3               	movwf	_temp+2
  5751                           
  5752                           ;main.c: 153: deltaV = temp;
  5753  00D4  0861               	movf	_temp,w
  5754  00D5  00F0               	movwf	___fttol@f1
  5755  00D6  0862               	movf	_temp+1,w
  5756  00D7  00F1               	movwf	___fttol@f1+1
  5757  00D8  0863               	movf	_temp+2,w
  5758  00D9  00F2               	movwf	___fttol@f1+2
  5759  00DA  160A  118A  2612  120A  118A  	fcall	___fttol
  5760  00DF  0871               	movf	?___fttol+1,w
  5761  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  5762  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  5763  00E2  01EB               	clrf	_deltaV+1
  5764  00E3  07EB               	addwf	_deltaV+1,f
  5765  00E4  0870               	movf	?___fttol,w
  5766  00E5  01EA               	clrf	_deltaV
  5767  00E6  07EA               	addwf	_deltaV,f
  5768                           
  5769                           ;main.c: 156: if (temp >100) temp = 100;
  5770  00E7  3000               	movlw	0
  5771  00E8  00F0               	movwf	___ftge@ff1
  5772  00E9  30C8               	movlw	200
  5773  00EA  00F1               	movwf	___ftge@ff1+1
  5774  00EB  3042               	movlw	66
  5775  00EC  00F2               	movwf	___ftge@ff1+2
  5776  00ED  0861               	movf	_temp,w
  5777  00EE  00F3               	movwf	___ftge@ff2
  5778  00EF  0862               	movf	_temp+1,w
  5779  00F0  00F4               	movwf	___ftge@ff2+1
  5780  00F1  0863               	movf	_temp+2,w
  5781  00F2  00F5               	movwf	___ftge@ff2+2
  5782  00F3  120A  118A  27A2  120A  118A  	fcall	___ftge
  5783  00F8  1803               	btfsc	3,0
  5784  00F9  2902               	goto	i1l2750
  5785  00FA  3000               	movlw	0
  5786  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  5787  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  5788  00FD  00E1               	movwf	_temp
  5789  00FE  30C8               	movlw	200
  5790  00FF  00E2               	movwf	_temp+1
  5791  0100  3042               	movlw	66
  5792  0101  00E3               	movwf	_temp+2
  5793  0102                     i1l2750:	
  5794                           
  5795                           ;main.c: 157: if (temp <0) temp = 0;
  5796  0102  1283               	bcf	3,5	;RP0=0, select bank0
  5797  0103  1303               	bcf	3,6	;RP1=0, select bank0
  5798  0104  0861               	movf	_temp,w
  5799  0105  00F0               	movwf	___ftge@ff1
  5800  0106  0862               	movf	_temp+1,w
  5801  0107  00F1               	movwf	___ftge@ff1+1
  5802  0108  0863               	movf	_temp+2,w
  5803  0109  00F2               	movwf	___ftge@ff1+2
  5804  010A  3000               	movlw	0
  5805  010B  00F3               	movwf	___ftge@ff2
  5806  010C  3000               	movlw	0
  5807  010D  00F4               	movwf	___ftge@ff2+1
  5808  010E  3000               	movlw	0
  5809  010F  00F5               	movwf	___ftge@ff2+2
  5810  0110  120A  118A  27A2  120A  118A  	fcall	___ftge
  5811  0115  1803               	btfsc	3,0
  5812  0116  291F               	goto	i1l2754
  5813  0117  3000               	movlw	0
  5814  0118  1283               	bcf	3,5	;RP0=0, select bank0
  5815  0119  1303               	bcf	3,6	;RP1=0, select bank0
  5816  011A  00E1               	movwf	_temp
  5817  011B  3000               	movlw	0
  5818  011C  00E2               	movwf	_temp+1
  5819  011D  3000               	movlw	0
  5820  011E  00E3               	movwf	_temp+2
  5821  011F                     i1l2754:	
  5822                           
  5823                           ;main.c: 160: if (temp < 25)
  5824  011F  1283               	bcf	3,5	;RP0=0, select bank0
  5825  0120  1303               	bcf	3,6	;RP1=0, select bank0
  5826  0121  0861               	movf	_temp,w
  5827  0122  00F0               	movwf	___ftge@ff1
  5828  0123  0862               	movf	_temp+1,w
  5829  0124  00F1               	movwf	___ftge@ff1+1
  5830  0125  0863               	movf	_temp+2,w
  5831  0126  00F2               	movwf	___ftge@ff1+2
  5832  0127  3000               	movlw	0
  5833  0128  00F3               	movwf	___ftge@ff2
  5834  0129  30C8               	movlw	200
  5835  012A  00F4               	movwf	___ftge@ff2+1
  5836  012B  3041               	movlw	65
  5837  012C  00F5               	movwf	___ftge@ff2+2
  5838  012D  120A  118A  27A2  120A  118A  	fcall	___ftge
  5839  0132  1803               	btfsc	3,0
  5840  0133  2A4C               	goto	i1l2782
  5841                           
  5842                           ;main.c: 161: {
  5843                           ;main.c: 162: if(PORTBbits.RB0 == 0)
  5844  0134  1283               	bcf	3,5	;RP0=0, select bank0
  5845  0135  1303               	bcf	3,6	;RP1=0, select bank0
  5846  0136  1806               	btfsc	6,0	;volatile
  5847  0137  293A               	goto	i1l154
  5848                           
  5849                           ;main.c: 163: {
  5850                           ;main.c: 164: PORTBbits.RB0 = 1;
  5851  0138  1406               	bsf	6,0	;volatile
  5852                           
  5853                           ;main.c: 165: }else{
  5854  0139  293B               	goto	i1l2760
  5855  013A                     i1l154:	
  5856                           
  5857                           ;main.c: 166: PORTBbits.RB0 = 0;
  5858  013A  1006               	bcf	6,0	;volatile
  5859  013B                     i1l2760:	
  5860                           
  5861                           ;main.c: 167: }
  5862                           ;main.c: 170: fitemp = trapmf(temp, 0,0,13,32);
  5863  013B  0861               	movf	_temp,w
  5864  013C  00B7               	movwf	trapmf@x
  5865  013D  0862               	movf	_temp+1,w
  5866  013E  00B8               	movwf	trapmf@x+1
  5867  013F  0863               	movf	_temp+2,w
  5868  0140  00B9               	movwf	trapmf@x+2
  5869  0141  3000               	movlw	0
  5870  0142  00BA               	movwf	trapmf@a
  5871  0143  3000               	movlw	0
  5872  0144  00BB               	movwf	trapmf@a+1
  5873  0145  3000               	movlw	0
  5874  0146  00BC               	movwf	trapmf@a+2
  5875  0147  3000               	movlw	0
  5876  0148  00BD               	movwf	trapmf@b
  5877  0149  3000               	movlw	0
  5878  014A  00BE               	movwf	trapmf@b+1
  5879  014B  3000               	movlw	0
  5880  014C  00BF               	movwf	trapmf@b+2
  5881  014D  3000               	movlw	0
  5882  014E  00C0               	movwf	trapmf@c
  5883  014F  3050               	movlw	80
  5884  0150  00C1               	movwf	trapmf@c+1
  5885  0151  3041               	movlw	65
  5886  0152  00C2               	movwf	trapmf@c+2
  5887  0153  3000               	movlw	0
  5888  0154  00C3               	movwf	trapmf@d
  5889  0155  3000               	movlw	0
  5890  0156  00C4               	movwf	trapmf@d+1
  5891  0157  3042               	movlw	66
  5892  0158  00C5               	movwf	trapmf@d+2
  5893  0159  120A  158A  23CB  120A  118A  	fcall	_trapmf
  5894  015E  1283               	bcf	3,5	;RP0=0, select bank0
  5895  015F  1303               	bcf	3,6	;RP1=0, select bank0
  5896  0160  0837               	movf	?_trapmf,w
  5897  0161  1683               	bsf	3,5	;RP0=1, select bank1
  5898  0162  1303               	bcf	3,6	;RP1=0, select bank1
  5899  0163  00A3               	movwf	_fitemp^(0+128)
  5900  0164  1283               	bcf	3,5	;RP0=0, select bank0
  5901  0165  1303               	bcf	3,6	;RP1=0, select bank0
  5902  0166  0838               	movf	?_trapmf+1,w
  5903  0167  1683               	bsf	3,5	;RP0=1, select bank1
  5904  0168  1303               	bcf	3,6	;RP1=0, select bank1
  5905  0169  00A4               	movwf	(_fitemp+1)^(0+128)
  5906  016A  1283               	bcf	3,5	;RP0=0, select bank0
  5907  016B  1303               	bcf	3,6	;RP1=0, select bank0
  5908  016C  0839               	movf	?_trapmf+2,w
  5909  016D  1683               	bsf	3,5	;RP0=1, select bank1
  5910  016E  1303               	bcf	3,6	;RP1=0, select bank1
  5911  016F  00A5               	movwf	(_fitemp+2)^(0+128)
  5912                           
  5913                           ;main.c: 173: fop_rule1 = max_val(fitemp,0.1);
  5914  0170  0823               	movf	_fitemp^(0+128),w
  5915  0171  1283               	bcf	3,5	;RP0=0, select bank0
  5916  0172  1303               	bcf	3,6	;RP1=0, select bank0
  5917  0173  00A0               	movwf	max_val@a
  5918  0174  1683               	bsf	3,5	;RP0=1, select bank1
  5919  0175  1303               	bcf	3,6	;RP1=0, select bank1
  5920  0176  0824               	movf	(_fitemp+1)^(0+128),w
  5921  0177  1283               	bcf	3,5	;RP0=0, select bank0
  5922  0178  1303               	bcf	3,6	;RP1=0, select bank0
  5923  0179  00A1               	movwf	max_val@a+1
  5924  017A  1683               	bsf	3,5	;RP0=1, select bank1
  5925  017B  1303               	bcf	3,6	;RP1=0, select bank1
  5926  017C  0825               	movf	(_fitemp+2)^(0+128),w
  5927  017D  1283               	bcf	3,5	;RP0=0, select bank0
  5928  017E  1303               	bcf	3,6	;RP1=0, select bank0
  5929  017F  00A2               	movwf	max_val@a+2
  5930  0180  30CD               	movlw	205
  5931  0181  00A3               	movwf	max_val@b
  5932  0182  30CC               	movlw	204
  5933  0183  00A4               	movwf	max_val@b+1
  5934  0184  303D               	movlw	61
  5935  0185  00A5               	movwf	max_val@b+2
  5936  0186  160A  118A  22A8  120A  118A  	fcall	_max_val
  5937  018B  1283               	bcf	3,5	;RP0=0, select bank0
  5938  018C  1303               	bcf	3,6	;RP1=0, select bank0
  5939  018D  0820               	movf	?_max_val,w
  5940  018E  1683               	bsf	3,5	;RP0=1, select bank1
  5941  018F  1303               	bcf	3,6	;RP1=0, select bank1
  5942  0190  00A6               	movwf	_fop_rule1^(0+128)
  5943  0191  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0192  1303               	bcf	3,6	;RP1=0, select bank0
  5945  0193  0821               	movf	?_max_val+1,w
  5946  0194  1683               	bsf	3,5	;RP0=1, select bank1
  5947  0195  1303               	bcf	3,6	;RP1=0, select bank1
  5948  0196  00A7               	movwf	(_fop_rule1+1)^(0+128)
  5949  0197  1283               	bcf	3,5	;RP0=0, select bank0
  5950  0198  1303               	bcf	3,6	;RP1=0, select bank0
  5951  0199  0822               	movf	?_max_val+2,w
  5952  019A  1683               	bsf	3,5	;RP0=1, select bank1
  5953  019B  1303               	bcf	3,6	;RP1=0, select bank1
  5954  019C  00A8               	movwf	(_fop_rule1+2)^(0+128)
  5955                           
  5956                           ;main.c: 176: x=0;
  5957  019D  3000               	movlw	0
  5958  019E  1283               	bcf	3,5	;RP0=0, select bank0
  5959  019F  1303               	bcf	3,6	;RP1=0, select bank0
  5960  01A0  00E4               	movwf	_x
  5961  01A1  3000               	movlw	0
  5962  01A2  00E5               	movwf	_x+1
  5963  01A3  3000               	movlw	0
  5964  01A4  00E6               	movwf	_x+2
  5965                           
  5966                           ;main.c: 177: y=0;
  5967  01A5  3000               	movlw	0
  5968  01A6  00E7               	movwf	_y
  5969  01A7  3000               	movlw	0
  5970  01A8  00E8               	movwf	_y+1
  5971  01A9  3000               	movlw	0
  5972  01AA  00E9               	movwf	_y+2
  5973                           
  5974                           ;main.c: 178: for (int a=0; a<=90; a++)
  5975  01AB  01CC               	clrf	Fuzzy@a
  5976  01AC  01CD               	clrf	Fuzzy@a+1
  5977  01AD  084D               	movf	Fuzzy@a+1,w
  5978  01AE  3A80               	xorlw	128
  5979  01AF  00FF               	movwf	127
  5980  01B0  3080               	movlw	128
  5981  01B1  027F               	subwf	127,w
  5982  01B2  1D03               	skipz
  5983  01B3  29B6               	goto	u339_25
  5984  01B4  305B               	movlw	91
  5985  01B5  024C               	subwf	Fuzzy@a,w
  5986  01B6                     u339_25:	
  5987  01B6  1803               	btfsc	3,0
  5988  01B7  2A4C               	goto	i1l2782
  5989  01B8                     i1l2772:	
  5990                           
  5991                           ;main.c: 179: {
  5992                           ;main.c: 180: y = trapmf(x,0,0,13,32);
  5993  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  5994  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  5995  01BA  0864               	movf	_x,w
  5996  01BB  00B7               	movwf	trapmf@x
  5997  01BC  0865               	movf	_x+1,w
  5998  01BD  00B8               	movwf	trapmf@x+1
  5999  01BE  0866               	movf	_x+2,w
  6000  01BF  00B9               	movwf	trapmf@x+2
  6001  01C0  3000               	movlw	0
  6002  01C1  00BA               	movwf	trapmf@a
  6003  01C2  3000               	movlw	0
  6004  01C3  00BB               	movwf	trapmf@a+1
  6005  01C4  3000               	movlw	0
  6006  01C5  00BC               	movwf	trapmf@a+2
  6007  01C6  3000               	movlw	0
  6008  01C7  00BD               	movwf	trapmf@b
  6009  01C8  3000               	movlw	0
  6010  01C9  00BE               	movwf	trapmf@b+1
  6011  01CA  3000               	movlw	0
  6012  01CB  00BF               	movwf	trapmf@b+2
  6013  01CC  3000               	movlw	0
  6014  01CD  00C0               	movwf	trapmf@c
  6015  01CE  3050               	movlw	80
  6016  01CF  00C1               	movwf	trapmf@c+1
  6017  01D0  3041               	movlw	65
  6018  01D1  00C2               	movwf	trapmf@c+2
  6019  01D2  3000               	movlw	0
  6020  01D3  00C3               	movwf	trapmf@d
  6021  01D4  3000               	movlw	0
  6022  01D5  00C4               	movwf	trapmf@d+1
  6023  01D6  3042               	movlw	66
  6024  01D7  00C5               	movwf	trapmf@d+2
  6025  01D8  120A  158A  23CB  120A  118A  	fcall	_trapmf
  6026  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  6027  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  6028  01DF  0837               	movf	?_trapmf,w
  6029  01E0  00E7               	movwf	_y
  6030  01E1  0838               	movf	?_trapmf+1,w
  6031  01E2  00E8               	movwf	_y+1
  6032  01E3  0839               	movf	?_trapmf+2,w
  6033  01E4  00E9               	movwf	_y+2
  6034                           
  6035                           ;main.c: 182: if (y > fop_rule1)
  6036  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  6037  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  6038  01E7  0826               	movf	_fop_rule1^(0+128),w
  6039  01E8  00F0               	movwf	___ftge@ff1
  6040  01E9  0827               	movf	(_fop_rule1+1)^(0+128),w
  6041  01EA  00F1               	movwf	___ftge@ff1+1
  6042  01EB  0828               	movf	(_fop_rule1+2)^(0+128),w
  6043  01EC  00F2               	movwf	___ftge@ff1+2
  6044  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  6045  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  6046  01EF  0867               	movf	_y,w
  6047  01F0  00F3               	movwf	___ftge@ff2
  6048  01F1  0868               	movf	_y+1,w
  6049  01F2  00F4               	movwf	___ftge@ff2+1
  6050  01F3  0869               	movf	_y+2,w
  6051  01F4  00F5               	movwf	___ftge@ff2+2
  6052  01F5  120A  118A  27A2  120A  118A  	fcall	___ftge
  6053  01FA  1803               	btfsc	3,0
  6054  01FB  2A07               	goto	i1l2776
  6055                           
  6056                           ;main.c: 183: {
  6057                           ;main.c: 184: mantem += fop_rule1;
  6058  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  6059  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  6060  01FE  0826               	movf	_fop_rule1^(0+128),w
  6061  01FF  00F8               	movwf	___ftadd@f1
  6062  0200  0827               	movf	(_fop_rule1+1)^(0+128),w
  6063  0201  00F9               	movwf	___ftadd@f1+1
  6064  0202  0828               	movf	(_fop_rule1+2)^(0+128),w
  6065  0203  00FA               	movwf	___ftadd@f1+2
  6066  0204  1283               	bcf	3,5	;RP0=0, select bank0
  6067  0205  1303               	bcf	3,6	;RP1=0, select bank0
  6068  0206  2A0F               	goto	L3
  6069  0207                     i1l2776:	
  6070                           ;main.c: 185: }
  6071                           
  6072                           
  6073                           ;main.c: 186: else
  6074                           ;main.c: 187: {
  6075                           ;main.c: 188: mantem += y;
  6076  0207  1283               	bcf	3,5	;RP0=0, select bank0
  6077  0208  1303               	bcf	3,6	;RP1=0, select bank0
  6078  0209  0867               	movf	_y,w
  6079  020A  00F8               	movwf	___ftadd@f1
  6080  020B  0868               	movf	_y+1,w
  6081  020C  00F9               	movwf	___ftadd@f1+1
  6082  020D  0869               	movf	_y+2,w
  6083  020E  00FA               	movwf	___ftadd@f1+2
  6084  020F                     L3:	
  6085  020F  0854               	movf	Fuzzy@mantem,w
  6086  0210  00FB               	movwf	___ftadd@f2
  6087  0211  0855               	movf	Fuzzy@mantem+1,w
  6088  0212  00FC               	movwf	___ftadd@f2+1
  6089  0213  0856               	movf	Fuzzy@mantem+2,w
  6090  0214  00FD               	movwf	___ftadd@f2+2
  6091  0215  120A  158A  21A6  120A  118A  	fcall	___ftadd
  6092  021A  0878               	movf	?___ftadd,w
  6093  021B  1283               	bcf	3,5	;RP0=0, select bank0
  6094  021C  1303               	bcf	3,6	;RP1=0, select bank0
  6095  021D  00D4               	movwf	Fuzzy@mantem
  6096  021E  0879               	movf	?___ftadd+1,w
  6097  021F  00D5               	movwf	Fuzzy@mantem+1
  6098  0220  087A               	movf	?___ftadd+2,w
  6099  0221  00D6               	movwf	Fuzzy@mantem+2
  6100                           
  6101                           ;main.c: 189: }
  6102                           ;main.c: 191: x=x+1;
  6103  0222  3000               	movlw	0
  6104  0223  00F8               	movwf	___ftadd@f1
  6105  0224  3080               	movlw	128
  6106  0225  00F9               	movwf	___ftadd@f1+1
  6107  0226  303F               	movlw	63
  6108  0227  00FA               	movwf	___ftadd@f1+2
  6109  0228  0864               	movf	_x,w
  6110  0229  00FB               	movwf	___ftadd@f2
  6111  022A  0865               	movf	_x+1,w
  6112  022B  00FC               	movwf	___ftadd@f2+1
  6113  022C  0866               	movf	_x+2,w
  6114  022D  00FD               	movwf	___ftadd@f2+2
  6115  022E  120A  158A  21A6  120A  118A  	fcall	___ftadd
  6116  0233  0878               	movf	?___ftadd,w
  6117  0234  1283               	bcf	3,5	;RP0=0, select bank0
  6118  0235  1303               	bcf	3,6	;RP1=0, select bank0
  6119  0236  00E4               	movwf	_x
  6120  0237  0879               	movf	?___ftadd+1,w
  6121  0238  00E5               	movwf	_x+1
  6122  0239  087A               	movf	?___ftadd+2,w
  6123  023A  00E6               	movwf	_x+2
  6124  023B  3001               	movlw	1
  6125  023C  07CC               	addwf	Fuzzy@a,f
  6126  023D  1803               	skipnc
  6127  023E  0ACD               	incf	Fuzzy@a+1,f
  6128  023F  3000               	movlw	0
  6129  0240  07CD               	addwf	Fuzzy@a+1,f
  6130  0241  084D               	movf	Fuzzy@a+1,w
  6131  0242  3A80               	xorlw	128
  6132  0243  00FF               	movwf	127
  6133  0244  3080               	movlw	128
  6134  0245  027F               	subwf	127,w
  6135  0246  1D03               	skipz
  6136  0247  2A4A               	goto	u341_25
  6137  0248  305B               	movlw	91
  6138  0249  024C               	subwf	Fuzzy@a,w
  6139  024A                     u341_25:	
  6140  024A  1C03               	skipc
  6141  024B  29B8               	goto	i1l2772
  6142  024C                     i1l2782:	
  6143                           
  6144                           ;main.c: 192: }
  6145                           ;main.c: 194: }
  6146                           ;main.c: 200: if ((temp > 20) && (temp < 70))
  6147  024C  3000               	movlw	0
  6148  024D  00F0               	movwf	___ftge@ff1
  6149  024E  30A0               	movlw	160
  6150  024F  00F1               	movwf	___ftge@ff1+1
  6151  0250  3041               	movlw	65
  6152  0251  00F2               	movwf	___ftge@ff1+2
  6153  0252  1283               	bcf	3,5	;RP0=0, select bank0
  6154  0253  1303               	bcf	3,6	;RP1=0, select bank0
  6155  0254  0861               	movf	_temp,w
  6156  0255  00F3               	movwf	___ftge@ff2
  6157  0256  0862               	movf	_temp+1,w
  6158  0257  00F4               	movwf	___ftge@ff2+1
  6159  0258  0863               	movf	_temp+2,w
  6160  0259  00F5               	movwf	___ftge@ff2+2
  6161  025A  120A  118A  27A2  120A  118A  	fcall	___ftge
  6162  025F  1803               	btfsc	3,0
  6163  0260  2B80               	goto	i1l2812
  6164  0261  1283               	bcf	3,5	;RP0=0, select bank0
  6165  0262  1303               	bcf	3,6	;RP1=0, select bank0
  6166  0263  0861               	movf	_temp,w
  6167  0264  00F0               	movwf	___ftge@ff1
  6168  0265  0862               	movf	_temp+1,w
  6169  0266  00F1               	movwf	___ftge@ff1+1
  6170  0267  0863               	movf	_temp+2,w
  6171  0268  00F2               	movwf	___ftge@ff1+2
  6172  0269  3000               	movlw	0
  6173  026A  00F3               	movwf	___ftge@ff2
  6174  026B  308C               	movlw	140
  6175  026C  00F4               	movwf	___ftge@ff2+1
  6176  026D  3042               	movlw	66
  6177  026E  00F5               	movwf	___ftge@ff2+2
  6178  026F  120A  118A  27A2  120A  118A  	fcall	___ftge
  6179  0274  1803               	btfsc	3,0
  6180  0275  2B80               	goto	i1l2812
  6181                           
  6182                           ;main.c: 201: {
  6183                           ;main.c: 202: if(PORTBbits.RB1 == 0)
  6184  0276  1283               	bcf	3,5	;RP0=0, select bank0
  6185  0277  1303               	bcf	3,6	;RP1=0, select bank0
  6186  0278  1886               	btfsc	6,1	;volatile
  6187  0279  2A7C               	goto	i1l161
  6188                           
  6189                           ;main.c: 203: {
  6190                           ;main.c: 204: PORTBbits.RB1 = 1;
  6191  027A  1486               	bsf	6,1	;volatile
  6192                           
  6193                           ;main.c: 205: }else{
  6194  027B  2A7D               	goto	i1l2790
  6195  027C                     i1l161:	
  6196                           
  6197                           ;main.c: 206: PORTBbits.RB1 = 0;
  6198  027C  1086               	bcf	6,1	;volatile
  6199  027D                     i1l2790:	
  6200                           
  6201                           ;main.c: 207: }
  6202                           ;main.c: 209: fitemp = trimf(temp, 9, 45, 81);
  6203  027D  0861               	movf	_temp,w
  6204  027E  00B7               	movwf	trimf@x
  6205  027F  0862               	movf	_temp+1,w
  6206  0280  00B8               	movwf	trimf@x+1
  6207  0281  0863               	movf	_temp+2,w
  6208  0282  00B9               	movwf	trimf@x+2
  6209  0283  3000               	movlw	0
  6210  0284  00BA               	movwf	trimf@a
  6211  0285  3010               	movlw	16
  6212  0286  00BB               	movwf	trimf@a+1
  6213  0287  3041               	movlw	65
  6214  0288  00BC               	movwf	trimf@a+2
  6215  0289  3000               	movlw	0
  6216  028A  00BD               	movwf	trimf@b
  6217  028B  3034               	movlw	52
  6218  028C  00BE               	movwf	trimf@b+1
  6219  028D  3042               	movlw	66
  6220  028E  00BF               	movwf	trimf@b+2
  6221  028F  3000               	movlw	0
  6222  0290  00C0               	movwf	trimf@c
  6223  0291  30A2               	movlw	162
  6224  0292  00C1               	movwf	trimf@c+1
  6225  0293  3042               	movlw	66
  6226  0294  00C2               	movwf	trimf@c+2
  6227  0295  120A  158A  22AD  120A  118A  	fcall	_trimf
  6228  029A  1283               	bcf	3,5	;RP0=0, select bank0
  6229  029B  1303               	bcf	3,6	;RP1=0, select bank0
  6230  029C  0837               	movf	?_trimf,w
  6231  029D  1683               	bsf	3,5	;RP0=1, select bank1
  6232  029E  1303               	bcf	3,6	;RP1=0, select bank1
  6233  029F  00A3               	movwf	_fitemp^(0+128)
  6234  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  6235  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  6236  02A2  0838               	movf	?_trimf+1,w
  6237  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  6238  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  6239  02A5  00A4               	movwf	(_fitemp+1)^(0+128)
  6240  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  6241  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  6242  02A8  0839               	movf	?_trimf+2,w
  6243  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  6244  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  6245  02AB  00A5               	movwf	(_fitemp+2)^(0+128)
  6246                           
  6247                           ;main.c: 212: fop_rule2 = max_val(fitemp,0.1);
  6248  02AC  0823               	movf	_fitemp^(0+128),w
  6249  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  6250  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  6251  02AF  00A0               	movwf	max_val@a
  6252  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  6253  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  6254  02B2  0824               	movf	(_fitemp+1)^(0+128),w
  6255  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  6256  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  6257  02B5  00A1               	movwf	max_val@a+1
  6258  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  6259  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  6260  02B8  0825               	movf	(_fitemp+2)^(0+128),w
  6261  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  6262  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  6263  02BB  00A2               	movwf	max_val@a+2
  6264  02BC  30CD               	movlw	205
  6265  02BD  00A3               	movwf	max_val@b
  6266  02BE  30CC               	movlw	204
  6267  02BF  00A4               	movwf	max_val@b+1
  6268  02C0  303D               	movlw	61
  6269  02C1  00A5               	movwf	max_val@b+2
  6270  02C2  160A  118A  22A8  120A  118A  	fcall	_max_val
  6271  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  6272  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  6273  02C9  0820               	movf	?_max_val,w
  6274  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  6275  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  6276  02CC  00A9               	movwf	_fop_rule2^(0+128)
  6277  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  6278  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  6279  02CF  0821               	movf	?_max_val+1,w
  6280  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  6281  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  6282  02D2  00AA               	movwf	(_fop_rule2+1)^(0+128)
  6283  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  6284  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  6285  02D5  0822               	movf	?_max_val+2,w
  6286  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  6287  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  6288  02D8  00AB               	movwf	(_fop_rule2+2)^(0+128)
  6289                           
  6290                           ;main.c: 215: x=0;
  6291  02D9  3000               	movlw	0
  6292  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  6293  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  6294  02DC  00E4               	movwf	_x
  6295  02DD  3000               	movlw	0
  6296  02DE  00E5               	movwf	_x+1
  6297  02DF  3000               	movlw	0
  6298  02E0  00E6               	movwf	_x+2
  6299                           
  6300                           ;main.c: 216: y=0;
  6301  02E1  3000               	movlw	0
  6302  02E2  00E7               	movwf	_y
  6303  02E3  3000               	movlw	0
  6304  02E4  00E8               	movwf	_y+1
  6305  02E5  3000               	movlw	0
  6306  02E6  00E9               	movwf	_y+2
  6307                           
  6308                           ;main.c: 217: for (int a=0; a<=90; a++)
  6309  02E7  01CE               	clrf	Fuzzy@a_241
  6310  02E8  01CF               	clrf	Fuzzy@a_241+1
  6311  02E9  084F               	movf	Fuzzy@a_241+1,w
  6312  02EA  3A80               	xorlw	128
  6313  02EB  00FF               	movwf	127
  6314  02EC  3080               	movlw	128
  6315  02ED  027F               	subwf	127,w
  6316  02EE  1D03               	skipz
  6317  02EF  2AF2               	goto	u345_25
  6318  02F0  305B               	movlw	91
  6319  02F1  024E               	subwf	Fuzzy@a_241,w
  6320  02F2                     u345_25:	
  6321  02F2  1803               	btfsc	3,0
  6322  02F3  2B80               	goto	i1l2812
  6323  02F4                     i1l2802:	
  6324                           
  6325                           ;main.c: 218: {
  6326                           ;main.c: 219: y = trimf(x, 9, 45, 81);
  6327  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  6328  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  6329  02F6  0864               	movf	_x,w
  6330  02F7  00B7               	movwf	trimf@x
  6331  02F8  0865               	movf	_x+1,w
  6332  02F9  00B8               	movwf	trimf@x+1
  6333  02FA  0866               	movf	_x+2,w
  6334  02FB  00B9               	movwf	trimf@x+2
  6335  02FC  3000               	movlw	0
  6336  02FD  00BA               	movwf	trimf@a
  6337  02FE  3010               	movlw	16
  6338  02FF  00BB               	movwf	trimf@a+1
  6339  0300  3041               	movlw	65
  6340  0301  00BC               	movwf	trimf@a+2
  6341  0302  3000               	movlw	0
  6342  0303  00BD               	movwf	trimf@b
  6343  0304  3034               	movlw	52
  6344  0305  00BE               	movwf	trimf@b+1
  6345  0306  3042               	movlw	66
  6346  0307  00BF               	movwf	trimf@b+2
  6347  0308  3000               	movlw	0
  6348  0309  00C0               	movwf	trimf@c
  6349  030A  30A2               	movlw	162
  6350  030B  00C1               	movwf	trimf@c+1
  6351  030C  3042               	movlw	66
  6352  030D  00C2               	movwf	trimf@c+2
  6353  030E  120A  158A  22AD  120A  118A  	fcall	_trimf
  6354  0313  1283               	bcf	3,5	;RP0=0, select bank0
  6355  0314  1303               	bcf	3,6	;RP1=0, select bank0
  6356  0315  0837               	movf	?_trimf,w
  6357  0316  00E7               	movwf	_y
  6358  0317  0838               	movf	?_trimf+1,w
  6359  0318  00E8               	movwf	_y+1
  6360  0319  0839               	movf	?_trimf+2,w
  6361  031A  00E9               	movwf	_y+2
  6362                           
  6363                           ;main.c: 221: if (y >= fop_rule2)
  6364  031B  0867               	movf	_y,w
  6365  031C  00F0               	movwf	___ftge@ff1
  6366  031D  0868               	movf	_y+1,w
  6367  031E  00F1               	movwf	___ftge@ff1+1
  6368  031F  0869               	movf	_y+2,w
  6369  0320  00F2               	movwf	___ftge@ff1+2
  6370  0321  1683               	bsf	3,5	;RP0=1, select bank1
  6371  0322  1303               	bcf	3,6	;RP1=0, select bank1
  6372  0323  0829               	movf	_fop_rule2^(0+128),w
  6373  0324  00F3               	movwf	___ftge@ff2
  6374  0325  082A               	movf	(_fop_rule2+1)^(0+128),w
  6375  0326  00F4               	movwf	___ftge@ff2+1
  6376  0327  082B               	movf	(_fop_rule2+2)^(0+128),w
  6377  0328  00F5               	movwf	___ftge@ff2+2
  6378  0329  120A  118A  27A2  120A  118A  	fcall	___ftge
  6379  032E  1C03               	btfss	3,0
  6380  032F  2B3B               	goto	i1l2806
  6381                           
  6382                           ;main.c: 222: {
  6383                           ;main.c: 223: reduz += fop_rule2;
  6384  0330  1683               	bsf	3,5	;RP0=1, select bank1
  6385  0331  1303               	bcf	3,6	;RP1=0, select bank1
  6386  0332  0829               	movf	_fop_rule2^(0+128),w
  6387  0333  00F8               	movwf	___ftadd@f1
  6388  0334  082A               	movf	(_fop_rule2+1)^(0+128),w
  6389  0335  00F9               	movwf	___ftadd@f1+1
  6390  0336  082B               	movf	(_fop_rule2+2)^(0+128),w
  6391  0337  00FA               	movwf	___ftadd@f1+2
  6392  0338  1283               	bcf	3,5	;RP0=0, select bank0
  6393  0339  1303               	bcf	3,6	;RP1=0, select bank0
  6394  033A  2B43               	goto	L4
  6395  033B                     i1l2806:	
  6396                           ;main.c: 224: }
  6397                           
  6398                           
  6399                           ;main.c: 225: else
  6400                           ;main.c: 226: {
  6401                           ;main.c: 227: reduz += y;
  6402  033B  1283               	bcf	3,5	;RP0=0, select bank0
  6403  033C  1303               	bcf	3,6	;RP1=0, select bank0
  6404  033D  0867               	movf	_y,w
  6405  033E  00F8               	movwf	___ftadd@f1
  6406  033F  0868               	movf	_y+1,w
  6407  0340  00F9               	movwf	___ftadd@f1+1
  6408  0341  0869               	movf	_y+2,w
  6409  0342  00FA               	movwf	___ftadd@f1+2
  6410  0343                     L4:	
  6411  0343  0857               	movf	Fuzzy@reduz,w
  6412  0344  00FB               	movwf	___ftadd@f2
  6413  0345  0858               	movf	Fuzzy@reduz+1,w
  6414  0346  00FC               	movwf	___ftadd@f2+1
  6415  0347  0859               	movf	Fuzzy@reduz+2,w
  6416  0348  00FD               	movwf	___ftadd@f2+2
  6417  0349  120A  158A  21A6  120A  118A  	fcall	___ftadd
  6418  034E  0878               	movf	?___ftadd,w
  6419  034F  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0350  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0351  00D7               	movwf	Fuzzy@reduz
  6422  0352  0879               	movf	?___ftadd+1,w
  6423  0353  00D8               	movwf	Fuzzy@reduz+1
  6424  0354  087A               	movf	?___ftadd+2,w
  6425  0355  00D9               	movwf	Fuzzy@reduz+2
  6426                           
  6427                           ;main.c: 228: }
  6428                           ;main.c: 230: x=x+1;
  6429  0356  3000               	movlw	0
  6430  0357  00F8               	movwf	___ftadd@f1
  6431  0358  3080               	movlw	128
  6432  0359  00F9               	movwf	___ftadd@f1+1
  6433  035A  303F               	movlw	63
  6434  035B  00FA               	movwf	___ftadd@f1+2
  6435  035C  0864               	movf	_x,w
  6436  035D  00FB               	movwf	___ftadd@f2
  6437  035E  0865               	movf	_x+1,w
  6438  035F  00FC               	movwf	___ftadd@f2+1
  6439  0360  0866               	movf	_x+2,w
  6440  0361  00FD               	movwf	___ftadd@f2+2
  6441  0362  120A  158A  21A6  120A  118A  	fcall	___ftadd
  6442  0367  0878               	movf	?___ftadd,w
  6443  0368  1283               	bcf	3,5	;RP0=0, select bank0
  6444  0369  1303               	bcf	3,6	;RP1=0, select bank0
  6445  036A  00E4               	movwf	_x
  6446  036B  0879               	movf	?___ftadd+1,w
  6447  036C  00E5               	movwf	_x+1
  6448  036D  087A               	movf	?___ftadd+2,w
  6449  036E  00E6               	movwf	_x+2
  6450  036F  3001               	movlw	1
  6451  0370  07CE               	addwf	Fuzzy@a_241,f
  6452  0371  1803               	skipnc
  6453  0372  0ACF               	incf	Fuzzy@a_241+1,f
  6454  0373  3000               	movlw	0
  6455  0374  07CF               	addwf	Fuzzy@a_241+1,f
  6456  0375  084F               	movf	Fuzzy@a_241+1,w
  6457  0376  3A80               	xorlw	128
  6458  0377  00FF               	movwf	127
  6459  0378  3080               	movlw	128
  6460  0379  027F               	subwf	127,w
  6461  037A  1D03               	skipz
  6462  037B  2B7E               	goto	u347_25
  6463  037C  305B               	movlw	91
  6464  037D  024E               	subwf	Fuzzy@a_241,w
  6465  037E                     u347_25:	
  6466  037E  1C03               	skipc
  6467  037F  2AF4               	goto	i1l2802
  6468  0380                     i1l2812:	
  6469                           
  6470                           ;main.c: 231: }
  6471                           ;main.c: 233: }
  6472                           ;main.c: 239: if (temp > 70 )
  6473  0380  3000               	movlw	0
  6474  0381  00F0               	movwf	___ftge@ff1
  6475  0382  308C               	movlw	140
  6476  0383  00F1               	movwf	___ftge@ff1+1
  6477  0384  3042               	movlw	66
  6478  0385  00F2               	movwf	___ftge@ff1+2
  6479  0386  1283               	bcf	3,5	;RP0=0, select bank0
  6480  0387  1303               	bcf	3,6	;RP1=0, select bank0
  6481  0388  0861               	movf	_temp,w
  6482  0389  00F3               	movwf	___ftge@ff2
  6483  038A  0862               	movf	_temp+1,w
  6484  038B  00F4               	movwf	___ftge@ff2+1
  6485  038C  0863               	movf	_temp+2,w
  6486  038D  00F5               	movwf	___ftge@ff2+2
  6487  038E  120A  118A  27A2  120A  118A  	fcall	___ftge
  6488  0393  1803               	btfsc	3,0
  6489  0394  2CAB               	goto	i1l2840
  6490                           
  6491                           ;main.c: 240: {
  6492                           ;main.c: 241: if(PORTBbits.RB2 == 0)
  6493  0395  1283               	bcf	3,5	;RP0=0, select bank0
  6494  0396  1303               	bcf	3,6	;RP1=0, select bank0
  6495  0397  1906               	btfsc	6,2	;volatile
  6496  0398  2B9B               	goto	i1l168
  6497                           
  6498                           ;main.c: 242: {
  6499                           ;main.c: 243: PORTBbits.RB2 = 1;
  6500  0399  1506               	bsf	6,2	;volatile
  6501                           
  6502                           ;main.c: 244: }else{
  6503  039A  2B9C               	goto	i1l2818
  6504  039B                     i1l168:	
  6505                           
  6506                           ;main.c: 245: PORTBbits.RB2 = 0;
  6507  039B  1106               	bcf	6,2	;volatile
  6508  039C                     i1l2818:	
  6509                           
  6510                           ;main.c: 246: }
  6511                           ;main.c: 248: fitemp = trapmf(temp, 62, 79, 90, 90);
  6512  039C  0861               	movf	_temp,w
  6513  039D  00B7               	movwf	trapmf@x
  6514  039E  0862               	movf	_temp+1,w
  6515  039F  00B8               	movwf	trapmf@x+1
  6516  03A0  0863               	movf	_temp+2,w
  6517  03A1  00B9               	movwf	trapmf@x+2
  6518  03A2  3000               	movlw	0
  6519  03A3  00BA               	movwf	trapmf@a
  6520  03A4  3078               	movlw	120
  6521  03A5  00BB               	movwf	trapmf@a+1
  6522  03A6  3042               	movlw	66
  6523  03A7  00BC               	movwf	trapmf@a+2
  6524  03A8  3000               	movlw	0
  6525  03A9  00BD               	movwf	trapmf@b
  6526  03AA  309E               	movlw	158
  6527  03AB  00BE               	movwf	trapmf@b+1
  6528  03AC  3042               	movlw	66
  6529  03AD  00BF               	movwf	trapmf@b+2
  6530  03AE  3000               	movlw	0
  6531  03AF  00C0               	movwf	trapmf@c
  6532  03B0  30B4               	movlw	180
  6533  03B1  00C1               	movwf	trapmf@c+1
  6534  03B2  3042               	movlw	66
  6535  03B3  00C2               	movwf	trapmf@c+2
  6536  03B4  3000               	movlw	0
  6537  03B5  00C3               	movwf	trapmf@d
  6538  03B6  30B4               	movlw	180
  6539  03B7  00C4               	movwf	trapmf@d+1
  6540  03B8  3042               	movlw	66
  6541  03B9  00C5               	movwf	trapmf@d+2
  6542  03BA  120A  158A  23CB  120A  118A  	fcall	_trapmf
  6543  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  6544  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  6545  03C1  0837               	movf	?_trapmf,w
  6546  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  6547  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  6548  03C4  00A3               	movwf	_fitemp^(0+128)
  6549  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  6550  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  6551  03C7  0838               	movf	?_trapmf+1,w
  6552  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  6553  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  6554  03CA  00A4               	movwf	(_fitemp+1)^(0+128)
  6555  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  6556  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  6557  03CD  0839               	movf	?_trapmf+2,w
  6558  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  6559  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  6560  03D0  00A5               	movwf	(_fitemp+2)^(0+128)
  6561                           
  6562                           ;main.c: 252: fop_rule3 = max_val(fitemp,0.1);
  6563  03D1  0823               	movf	_fitemp^(0+128),w
  6564  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  6565  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  6566  03D4  00A0               	movwf	max_val@a
  6567  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  6568  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  6569  03D7  0824               	movf	(_fitemp+1)^(0+128),w
  6570  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  6571  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  6572  03DA  00A1               	movwf	max_val@a+1
  6573  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  6574  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  6575  03DD  0825               	movf	(_fitemp+2)^(0+128),w
  6576  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  6577  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  6578  03E0  00A2               	movwf	max_val@a+2
  6579  03E1  30CD               	movlw	205
  6580  03E2  00A3               	movwf	max_val@b
  6581  03E3  30CC               	movlw	204
  6582  03E4  00A4               	movwf	max_val@b+1
  6583  03E5  303D               	movlw	61
  6584  03E6  00A5               	movwf	max_val@b+2
  6585  03E7  160A  118A  22A8  120A  118A  	fcall	_max_val
  6586  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  6587  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  6588  03EE  0820               	movf	?_max_val,w
  6589  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  6590  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  6591  03F1  00AC               	movwf	_fop_rule3^(0+128)
  6592  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  6593  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  6594  03F4  0821               	movf	?_max_val+1,w
  6595  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  6596  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  6597  03F7  00AD               	movwf	(_fop_rule3+1)^(0+128)
  6598  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  6599  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  6600  03FA  0822               	movf	?_max_val+2,w
  6601  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  6602  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  6603  03FD  00AE               	movwf	(_fop_rule3+2)^(0+128)
  6604                           
  6605                           ;main.c: 255: x=0;
  6606  03FE  3000               	movlw	0
  6607  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  6608  0400  1303               	bcf	3,6	;RP1=0, select bank0
  6609  0401  00E4               	movwf	_x
  6610  0402  3000               	movlw	0
  6611  0403  00E5               	movwf	_x+1
  6612  0404  3000               	movlw	0
  6613  0405  00E6               	movwf	_x+2
  6614                           
  6615                           ;main.c: 256: y=0;
  6616  0406  3000               	movlw	0
  6617  0407  00E7               	movwf	_y
  6618  0408  3000               	movlw	0
  6619  0409  00E8               	movwf	_y+1
  6620  040A  3000               	movlw	0
  6621  040B  00E9               	movwf	_y+2
  6622                           
  6623                           ;main.c: 257: for (int a=0; a<=90; a++)
  6624  040C  01D0               	clrf	Fuzzy@a_242
  6625  040D  01D1               	clrf	Fuzzy@a_242+1
  6626  040E  0851               	movf	Fuzzy@a_242+1,w
  6627  040F  3A80               	xorlw	128
  6628  0410  00FF               	movwf	127
  6629  0411  3080               	movlw	128
  6630  0412  027F               	subwf	127,w
  6631  0413  1D03               	skipz
  6632  0414  2C17               	goto	u350_25
  6633  0415  305B               	movlw	91
  6634  0416  0250               	subwf	Fuzzy@a_242,w
  6635  0417                     u350_25:	
  6636  0417  1803               	btfsc	3,0
  6637  0418  2CAB               	goto	i1l2840
  6638  0419                     i1l2830:	
  6639                           
  6640                           ;main.c: 258: {
  6641                           ;main.c: 259: y = trapmf(x, 62, 79, 90, 90);
  6642  0419  1283               	bcf	3,5	;RP0=0, select bank0
  6643  041A  1303               	bcf	3,6	;RP1=0, select bank0
  6644  041B  0864               	movf	_x,w
  6645  041C  00B7               	movwf	trapmf@x
  6646  041D  0865               	movf	_x+1,w
  6647  041E  00B8               	movwf	trapmf@x+1
  6648  041F  0866               	movf	_x+2,w
  6649  0420  00B9               	movwf	trapmf@x+2
  6650  0421  3000               	movlw	0
  6651  0422  00BA               	movwf	trapmf@a
  6652  0423  3078               	movlw	120
  6653  0424  00BB               	movwf	trapmf@a+1
  6654  0425  3042               	movlw	66
  6655  0426  00BC               	movwf	trapmf@a+2
  6656  0427  3000               	movlw	0
  6657  0428  00BD               	movwf	trapmf@b
  6658  0429  309E               	movlw	158
  6659  042A  00BE               	movwf	trapmf@b+1
  6660  042B  3042               	movlw	66
  6661  042C  00BF               	movwf	trapmf@b+2
  6662  042D  3000               	movlw	0
  6663  042E  00C0               	movwf	trapmf@c
  6664  042F  30B4               	movlw	180
  6665  0430  00C1               	movwf	trapmf@c+1
  6666  0431  3042               	movlw	66
  6667  0432  00C2               	movwf	trapmf@c+2
  6668  0433  3000               	movlw	0
  6669  0434  00C3               	movwf	trapmf@d
  6670  0435  30B4               	movlw	180
  6671  0436  00C4               	movwf	trapmf@d+1
  6672  0437  3042               	movlw	66
  6673  0438  00C5               	movwf	trapmf@d+2
  6674  0439  120A  158A  23CB  120A  118A  	fcall	_trapmf
  6675  043E  1283               	bcf	3,5	;RP0=0, select bank0
  6676  043F  1303               	bcf	3,6	;RP1=0, select bank0
  6677  0440  0837               	movf	?_trapmf,w
  6678  0441  00E7               	movwf	_y
  6679  0442  0838               	movf	?_trapmf+1,w
  6680  0443  00E8               	movwf	_y+1
  6681  0444  0839               	movf	?_trapmf+2,w
  6682  0445  00E9               	movwf	_y+2
  6683                           
  6684                           ;main.c: 261: if (y >= fop_rule3)
  6685  0446  0867               	movf	_y,w
  6686  0447  00F0               	movwf	___ftge@ff1
  6687  0448  0868               	movf	_y+1,w
  6688  0449  00F1               	movwf	___ftge@ff1+1
  6689  044A  0869               	movf	_y+2,w
  6690  044B  00F2               	movwf	___ftge@ff1+2
  6691  044C  1683               	bsf	3,5	;RP0=1, select bank1
  6692  044D  1303               	bcf	3,6	;RP1=0, select bank1
  6693  044E  082C               	movf	_fop_rule3^(0+128),w
  6694  044F  00F3               	movwf	___ftge@ff2
  6695  0450  082D               	movf	(_fop_rule3+1)^(0+128),w
  6696  0451  00F4               	movwf	___ftge@ff2+1
  6697  0452  082E               	movf	(_fop_rule3+2)^(0+128),w
  6698  0453  00F5               	movwf	___ftge@ff2+2
  6699  0454  120A  118A  27A2  120A  118A  	fcall	___ftge
  6700  0459  1C03               	btfss	3,0
  6701  045A  2C66               	goto	i1l2834
  6702                           
  6703                           ;main.c: 262: {
  6704                           ;main.c: 263: aumenta += fop_rule3;
  6705  045B  1683               	bsf	3,5	;RP0=1, select bank1
  6706  045C  1303               	bcf	3,6	;RP1=0, select bank1
  6707  045D  082C               	movf	_fop_rule3^(0+128),w
  6708  045E  00F8               	movwf	___ftadd@f1
  6709  045F  082D               	movf	(_fop_rule3+1)^(0+128),w
  6710  0460  00F9               	movwf	___ftadd@f1+1
  6711  0461  082E               	movf	(_fop_rule3+2)^(0+128),w
  6712  0462  00FA               	movwf	___ftadd@f1+2
  6713  0463  1283               	bcf	3,5	;RP0=0, select bank0
  6714  0464  1303               	bcf	3,6	;RP1=0, select bank0
  6715  0465  2C6E               	goto	L5
  6716  0466                     i1l2834:	
  6717                           ;main.c: 264: }
  6718                           
  6719                           
  6720                           ;main.c: 265: else
  6721                           ;main.c: 266: {
  6722                           ;main.c: 267: aumenta += y;
  6723  0466  1283               	bcf	3,5	;RP0=0, select bank0
  6724  0467  1303               	bcf	3,6	;RP1=0, select bank0
  6725  0468  0867               	movf	_y,w
  6726  0469  00F8               	movwf	___ftadd@f1
  6727  046A  0868               	movf	_y+1,w
  6728  046B  00F9               	movwf	___ftadd@f1+1
  6729  046C  0869               	movf	_y+2,w
  6730  046D  00FA               	movwf	___ftadd@f1+2
  6731  046E                     L5:	
  6732  046E  085A               	movf	Fuzzy@aumenta,w
  6733  046F  00FB               	movwf	___ftadd@f2
  6734  0470  085B               	movf	Fuzzy@aumenta+1,w
  6735  0471  00FC               	movwf	___ftadd@f2+1
  6736  0472  085C               	movf	Fuzzy@aumenta+2,w
  6737  0473  00FD               	movwf	___ftadd@f2+2
  6738  0474  120A  158A  21A6  120A  118A  	fcall	___ftadd
  6739  0479  0878               	movf	?___ftadd,w
  6740  047A  1283               	bcf	3,5	;RP0=0, select bank0
  6741  047B  1303               	bcf	3,6	;RP1=0, select bank0
  6742  047C  00DA               	movwf	Fuzzy@aumenta
  6743  047D  0879               	movf	?___ftadd+1,w
  6744  047E  00DB               	movwf	Fuzzy@aumenta+1
  6745  047F  087A               	movf	?___ftadd+2,w
  6746  0480  00DC               	movwf	Fuzzy@aumenta+2
  6747                           
  6748                           ;main.c: 268: }
  6749                           ;main.c: 270: x=x+1;
  6750  0481  3000               	movlw	0
  6751  0482  00F8               	movwf	___ftadd@f1
  6752  0483  3080               	movlw	128
  6753  0484  00F9               	movwf	___ftadd@f1+1
  6754  0485  303F               	movlw	63
  6755  0486  00FA               	movwf	___ftadd@f1+2
  6756  0487  0864               	movf	_x,w
  6757  0488  00FB               	movwf	___ftadd@f2
  6758  0489  0865               	movf	_x+1,w
  6759  048A  00FC               	movwf	___ftadd@f2+1
  6760  048B  0866               	movf	_x+2,w
  6761  048C  00FD               	movwf	___ftadd@f2+2
  6762  048D  120A  158A  21A6  120A  118A  	fcall	___ftadd
  6763  0492  0878               	movf	?___ftadd,w
  6764  0493  1283               	bcf	3,5	;RP0=0, select bank0
  6765  0494  1303               	bcf	3,6	;RP1=0, select bank0
  6766  0495  00E4               	movwf	_x
  6767  0496  0879               	movf	?___ftadd+1,w
  6768  0497  00E5               	movwf	_x+1
  6769  0498  087A               	movf	?___ftadd+2,w
  6770  0499  00E6               	movwf	_x+2
  6771  049A  3001               	movlw	1
  6772  049B  07D0               	addwf	Fuzzy@a_242,f
  6773  049C  1803               	skipnc
  6774  049D  0AD1               	incf	Fuzzy@a_242+1,f
  6775  049E  3000               	movlw	0
  6776  049F  07D1               	addwf	Fuzzy@a_242+1,f
  6777  04A0  0851               	movf	Fuzzy@a_242+1,w
  6778  04A1  3A80               	xorlw	128
  6779  04A2  00FF               	movwf	127
  6780  04A3  3080               	movlw	128
  6781  04A4  027F               	subwf	127,w
  6782  04A5  1D03               	skipz
  6783  04A6  2CA9               	goto	u352_25
  6784  04A7  305B               	movlw	91
  6785  04A8  0250               	subwf	Fuzzy@a_242,w
  6786  04A9                     u352_25:	
  6787  04A9  1C03               	skipc
  6788  04AA  2C19               	goto	i1l2830
  6789  04AB                     i1l2840:	
  6790                           
  6791                           ;main.c: 271: }
  6792                           ;main.c: 273: }
  6793                           ;main.c: 276: for (int a=0; a<1; a++)
  6794  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  6795  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  6796  04AD  01D2               	clrf	Fuzzy@a_243
  6797  04AE  01D3               	clrf	Fuzzy@a_243+1
  6798  04AF  0853               	movf	Fuzzy@a_243+1,w
  6799  04B0  3A80               	xorlw	128
  6800  04B1  00FF               	movwf	127
  6801  04B2  3080               	movlw	128
  6802  04B3  027F               	subwf	127,w
  6803  04B4  1D03               	skipz
  6804  04B5  2CB8               	goto	u353_25
  6805  04B6  3001               	movlw	1
  6806  04B7  0252               	subwf	Fuzzy@a_243,w
  6807  04B8                     u353_25:	
  6808  04B8  1803               	btfsc	3,0
  6809  04B9  2D22               	goto	i1l2860
  6810  04BA                     i1l2846:	
  6811                           
  6812                           ;main.c: 277: {
  6813                           ;main.c: 278: if (temp < 25)
  6814  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  6815  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  6816  04BC  0861               	movf	_temp,w
  6817  04BD  00F0               	movwf	___ftge@ff1
  6818  04BE  0862               	movf	_temp+1,w
  6819  04BF  00F1               	movwf	___ftge@ff1+1
  6820  04C0  0863               	movf	_temp+2,w
  6821  04C1  00F2               	movwf	___ftge@ff1+2
  6822  04C2  3000               	movlw	0
  6823  04C3  00F3               	movwf	___ftge@ff2
  6824  04C4  30C8               	movlw	200
  6825  04C5  00F4               	movwf	___ftge@ff2+1
  6826  04C6  3041               	movlw	65
  6827  04C7  00F5               	movwf	___ftge@ff2+2
  6828  04C8  120A  118A  27A2  120A  118A  	fcall	___ftge
  6829  04CD  1803               	btfsc	3,0
  6830  04CE  2CD7               	goto	i1l2850
  6831                           
  6832                           ;main.c: 279: {
  6833                           ;main.c: 280: tip = mantem;
  6834  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  6835  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  6836  04D1  0854               	movf	Fuzzy@mantem,w
  6837  04D2  00C9               	movwf	Fuzzy@tip
  6838  04D3  0855               	movf	Fuzzy@mantem+1,w
  6839  04D4  00CA               	movwf	Fuzzy@tip+1
  6840  04D5  0856               	movf	Fuzzy@mantem+2,w
  6841  04D6  2D10               	goto	L7
  6842  04D7                     i1l2850:	
  6843                           ;main.c: 281: }else
  6844                           
  6845                           
  6846                           ;main.c: 282: if (temp >= 25 && temp < 75)
  6847  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  6848  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  6849  04D9  0861               	movf	_temp,w
  6850  04DA  00F0               	movwf	___ftge@ff1
  6851  04DB  0862               	movf	_temp+1,w
  6852  04DC  00F1               	movwf	___ftge@ff1+1
  6853  04DD  0863               	movf	_temp+2,w
  6854  04DE  00F2               	movwf	___ftge@ff1+2
  6855  04DF  3000               	movlw	0
  6856  04E0  00F3               	movwf	___ftge@ff2
  6857  04E1  30C8               	movlw	200
  6858  04E2  00F4               	movwf	___ftge@ff2+1
  6859  04E3  3041               	movlw	65
  6860  04E4  00F5               	movwf	___ftge@ff2+2
  6861  04E5  120A  118A  27A2  120A  118A  	fcall	___ftge
  6862  04EA  1C03               	btfss	3,0
  6863  04EB  2D09               	goto	i1l2856
  6864  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  6865  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  6866  04EE  0861               	movf	_temp,w
  6867  04EF  00F0               	movwf	___ftge@ff1
  6868  04F0  0862               	movf	_temp+1,w
  6869  04F1  00F1               	movwf	___ftge@ff1+1
  6870  04F2  0863               	movf	_temp+2,w
  6871  04F3  00F2               	movwf	___ftge@ff1+2
  6872  04F4  3000               	movlw	0
  6873  04F5  00F3               	movwf	___ftge@ff2
  6874  04F6  3096               	movlw	150
  6875  04F7  00F4               	movwf	___ftge@ff2+1
  6876  04F8  3042               	movlw	66
  6877  04F9  00F5               	movwf	___ftge@ff2+2
  6878  04FA  120A  118A  27A2  120A  118A  	fcall	___ftge
  6879  04FF  1803               	btfsc	3,0
  6880  0500  2D09               	goto	i1l2856
  6881                           
  6882                           ;main.c: 283: {
  6883                           ;main.c: 284: tip = reduz;
  6884  0501  1283               	bcf	3,5	;RP0=0, select bank0
  6885  0502  1303               	bcf	3,6	;RP1=0, select bank0
  6886  0503  0857               	movf	Fuzzy@reduz,w
  6887  0504  00C9               	movwf	Fuzzy@tip
  6888  0505  0858               	movf	Fuzzy@reduz+1,w
  6889  0506  00CA               	movwf	Fuzzy@tip+1
  6890  0507  0859               	movf	Fuzzy@reduz+2,w
  6891  0508  2D10               	goto	L7
  6892  0509                     i1l2856:	
  6893                           ;main.c: 285: }else
  6894                           
  6895                           
  6896                           ;main.c: 286: {
  6897                           ;main.c: 287: tip = aumenta;
  6898  0509  1283               	bcf	3,5	;RP0=0, select bank0
  6899  050A  1303               	bcf	3,6	;RP1=0, select bank0
  6900  050B  085A               	movf	Fuzzy@aumenta,w
  6901  050C  00C9               	movwf	Fuzzy@tip
  6902  050D  085B               	movf	Fuzzy@aumenta+1,w
  6903  050E  00CA               	movwf	Fuzzy@tip+1
  6904  050F  085C               	movf	Fuzzy@aumenta+2,w
  6905  0510                     L7:	
  6906  0510  00CB               	movwf	Fuzzy@tip+2
  6907  0511  3001               	movlw	1
  6908  0512  07D2               	addwf	Fuzzy@a_243,f
  6909  0513  1803               	skipnc
  6910  0514  0AD3               	incf	Fuzzy@a_243+1,f
  6911  0515  3000               	movlw	0
  6912  0516  07D3               	addwf	Fuzzy@a_243+1,f
  6913  0517  0853               	movf	Fuzzy@a_243+1,w
  6914  0518  3A80               	xorlw	128
  6915  0519  00FF               	movwf	127
  6916  051A  3080               	movlw	128
  6917  051B  027F               	subwf	127,w
  6918  051C  1D03               	skipz
  6919  051D  2D20               	goto	u357_25
  6920  051E  3001               	movlw	1
  6921  051F  0252               	subwf	Fuzzy@a_243,w
  6922  0520                     u357_25:	
  6923  0520  1C03               	skipc
  6924  0521  2CBA               	goto	i1l2846
  6925  0522                     i1l2860:	
  6926                           
  6927                           ;main.c: 288: }
  6928                           ;main.c: 289: }
  6929                           ;main.c: 293: total_area = 90;
  6930  0522  3000               	movlw	0
  6931  0523  1683               	bsf	3,5	;RP0=1, select bank1
  6932  0524  1303               	bcf	3,6	;RP1=0, select bank1
  6933  0525  00B5               	movwf	_total_area^(0+128)
  6934  0526  30B4               	movlw	180
  6935  0527  00B6               	movwf	(_total_area+1)^(0+128)
  6936  0528  3042               	movlw	66
  6937  0529  00B7               	movwf	(_total_area+2)^(0+128)
  6938                           
  6939                           ;main.c: 294: sum = 0;
  6940  052A  3000               	movlw	0
  6941  052B  00AF               	movwf	_sum^(0+128)
  6942  052C  3000               	movlw	0
  6943  052D  00B0               	movwf	(_sum+1)^(0+128)
  6944  052E  3000               	movlw	0
  6945  052F  00B1               	movwf	(_sum+2)^(0+128)
  6946                           
  6947                           ;main.c: 296: sum = sum + tip;
  6948  0530  1283               	bcf	3,5	;RP0=0, select bank0
  6949  0531  1303               	bcf	3,6	;RP1=0, select bank0
  6950  0532  0849               	movf	Fuzzy@tip,w
  6951  0533  00F8               	movwf	___ftadd@f1
  6952  0534  084A               	movf	Fuzzy@tip+1,w
  6953  0535  00F9               	movwf	___ftadd@f1+1
  6954  0536  084B               	movf	Fuzzy@tip+2,w
  6955  0537  00FA               	movwf	___ftadd@f1+2
  6956  0538  1683               	bsf	3,5	;RP0=1, select bank1
  6957  0539  1303               	bcf	3,6	;RP1=0, select bank1
  6958  053A  082F               	movf	_sum^(0+128),w
  6959  053B  00FB               	movwf	___ftadd@f2
  6960  053C  0830               	movf	(_sum+1)^(0+128),w
  6961  053D  00FC               	movwf	___ftadd@f2+1
  6962  053E  0831               	movf	(_sum+2)^(0+128),w
  6963  053F  00FD               	movwf	___ftadd@f2+2
  6964  0540  120A  158A  21A6  120A  118A  	fcall	___ftadd
  6965  0545  0878               	movf	?___ftadd,w
  6966  0546  1683               	bsf	3,5	;RP0=1, select bank1
  6967  0547  1303               	bcf	3,6	;RP1=0, select bank1
  6968  0548  00AF               	movwf	_sum^(0+128)
  6969  0549  0879               	movf	?___ftadd+1,w
  6970  054A  00B0               	movwf	(_sum+1)^(0+128)
  6971  054B  087A               	movf	?___ftadd+2,w
  6972  054C  00B1               	movwf	(_sum+2)^(0+128)
  6973                           
  6974                           ;main.c: 298: x=x+1;
  6975  054D  3000               	movlw	0
  6976  054E  00F8               	movwf	___ftadd@f1
  6977  054F  3080               	movlw	128
  6978  0550  00F9               	movwf	___ftadd@f1+1
  6979  0551  303F               	movlw	63
  6980  0552  00FA               	movwf	___ftadd@f1+2
  6981  0553  1283               	bcf	3,5	;RP0=0, select bank0
  6982  0554  1303               	bcf	3,6	;RP1=0, select bank0
  6983  0555  0864               	movf	_x,w
  6984  0556  00FB               	movwf	___ftadd@f2
  6985  0557  0865               	movf	_x+1,w
  6986  0558  00FC               	movwf	___ftadd@f2+1
  6987  0559  0866               	movf	_x+2,w
  6988  055A  00FD               	movwf	___ftadd@f2+2
  6989  055B  120A  158A  21A6  120A  118A  	fcall	___ftadd
  6990  0560  0878               	movf	?___ftadd,w
  6991  0561  1283               	bcf	3,5	;RP0=0, select bank0
  6992  0562  1303               	bcf	3,6	;RP1=0, select bank0
  6993  0563  00E4               	movwf	_x
  6994  0564  0879               	movf	?___ftadd+1,w
  6995  0565  00E5               	movwf	_x+1
  6996  0566  087A               	movf	?___ftadd+2,w
  6997  0567  00E6               	movwf	_x+2
  6998                           
  6999                           ;main.c: 301: ativa_fan = sum/total_area;
  7000  0568  1683               	bsf	3,5	;RP0=1, select bank1
  7001  0569  1303               	bcf	3,6	;RP1=0, select bank1
  7002  056A  0835               	movf	_total_area^(0+128),w
  7003  056B  1283               	bcf	3,5	;RP0=0, select bank0
  7004  056C  1303               	bcf	3,6	;RP1=0, select bank0
  7005  056D  00A7               	movwf	___ftdiv@f2
  7006  056E  1683               	bsf	3,5	;RP0=1, select bank1
  7007  056F  1303               	bcf	3,6	;RP1=0, select bank1
  7008  0570  0836               	movf	(_total_area+1)^(0+128),w
  7009  0571  1283               	bcf	3,5	;RP0=0, select bank0
  7010  0572  1303               	bcf	3,6	;RP1=0, select bank0
  7011  0573  00A8               	movwf	___ftdiv@f2+1
  7012  0574  1683               	bsf	3,5	;RP0=1, select bank1
  7013  0575  1303               	bcf	3,6	;RP1=0, select bank1
  7014  0576  0837               	movf	(_total_area+2)^(0+128),w
  7015  0577  1283               	bcf	3,5	;RP0=0, select bank0
  7016  0578  1303               	bcf	3,6	;RP1=0, select bank0
  7017  0579  00A9               	movwf	___ftdiv@f2+2
  7018  057A  1683               	bsf	3,5	;RP0=1, select bank1
  7019  057B  1303               	bcf	3,6	;RP1=0, select bank1
  7020  057C  082F               	movf	_sum^(0+128),w
  7021  057D  1283               	bcf	3,5	;RP0=0, select bank0
  7022  057E  1303               	bcf	3,6	;RP1=0, select bank0
  7023  057F  00AA               	movwf	___ftdiv@f1
  7024  0580  1683               	bsf	3,5	;RP0=1, select bank1
  7025  0581  1303               	bcf	3,6	;RP1=0, select bank1
  7026  0582  0830               	movf	(_sum+1)^(0+128),w
  7027  0583  1283               	bcf	3,5	;RP0=0, select bank0
  7028  0584  1303               	bcf	3,6	;RP1=0, select bank0
  7029  0585  00AB               	movwf	___ftdiv@f1+1
  7030  0586  1683               	bsf	3,5	;RP0=1, select bank1
  7031  0587  1303               	bcf	3,6	;RP1=0, select bank1
  7032  0588  0831               	movf	(_sum+2)^(0+128),w
  7033  0589  1283               	bcf	3,5	;RP0=0, select bank0
  7034  058A  1303               	bcf	3,6	;RP1=0, select bank0
  7035  058B  00AC               	movwf	___ftdiv@f1+2
  7036  058C  120A  158A  20EE  120A  118A  	fcall	___ftdiv
  7037  0591  1283               	bcf	3,5	;RP0=0, select bank0
  7038  0592  1303               	bcf	3,6	;RP1=0, select bank0
  7039  0593  0827               	movf	?___ftdiv,w
  7040  0594  1683               	bsf	3,5	;RP0=1, select bank1
  7041  0595  1303               	bcf	3,6	;RP1=0, select bank1
  7042  0596  00A0               	movwf	_ativa_fan^(0+128)
  7043  0597  1283               	bcf	3,5	;RP0=0, select bank0
  7044  0598  1303               	bcf	3,6	;RP1=0, select bank0
  7045  0599  0828               	movf	?___ftdiv+1,w
  7046  059A  1683               	bsf	3,5	;RP0=1, select bank1
  7047  059B  1303               	bcf	3,6	;RP1=0, select bank1
  7048  059C  00A1               	movwf	(_ativa_fan+1)^(0+128)
  7049  059D  1283               	bcf	3,5	;RP0=0, select bank0
  7050  059E  1303               	bcf	3,6	;RP1=0, select bank0
  7051  059F  0829               	movf	?___ftdiv+2,w
  7052  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  7053  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  7054  05A2  00A2               	movwf	(_ativa_fan+2)^(0+128)
  7055                           
  7056                           ;main.c: 304: ativa_fan = ativa_fan*20;
  7057  05A3  3000               	movlw	0
  7058  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  7059  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  7060  05A6  00B7               	movwf	___ftmul@f1
  7061  05A7  30A0               	movlw	160
  7062  05A8  00B8               	movwf	___ftmul@f1+1
  7063  05A9  3041               	movlw	65
  7064  05AA  00B9               	movwf	___ftmul@f1+2
  7065  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  7066  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  7067  05AD  0820               	movf	_ativa_fan^(0+128),w
  7068  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  7069  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  7070  05B0  00BA               	movwf	___ftmul@f2
  7071  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  7072  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  7073  05B3  0821               	movf	(_ativa_fan+1)^(0+128),w
  7074  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  7075  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  7076  05B6  00BB               	movwf	___ftmul@f2+1
  7077  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  7078  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  7079  05B9  0822               	movf	(_ativa_fan+2)^(0+128),w
  7080  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  7081  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  7082  05BC  00BC               	movwf	___ftmul@f2+2
  7083  05BD  160A  118A  272D  120A  118A  	fcall	___ftmul
  7084  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  7085  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  7086  05C4  0837               	movf	?___ftmul,w
  7087  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  7088  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  7089  05C7  00A0               	movwf	_ativa_fan^(0+128)
  7090  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  7091  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  7092  05CA  0838               	movf	?___ftmul+1,w
  7093  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  7094  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  7095  05CD  00A1               	movwf	(_ativa_fan+1)^(0+128)
  7096  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  7097  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  7098  05D0  0839               	movf	?___ftmul+2,w
  7099  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  7100  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  7101  05D3  00A2               	movwf	(_ativa_fan+2)^(0+128)
  7102                           
  7103                           ;main.c: 306: if (deltaV >0 && deltaV < 1020)
  7104  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  7105  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  7106  05D6  086B               	movf	_deltaV+1,w
  7107  05D7  046A               	iorwf	_deltaV,w
  7108  05D8  1903               	skipnz
  7109  05D9  0008               	return
  7110  05DA  3003               	movlw	3
  7111  05DB  026B               	subwf	_deltaV+1,w
  7112  05DC  30FC               	movlw	252
  7113  05DD  1903               	skipnz
  7114  05DE  026A               	subwf	_deltaV,w
  7115  05DF  1803               	skipnc
  7116  05E0  0008               	return
  7117                           
  7118                           ;main.c: 307: {
  7119                           ;main.c: 308: PWM_DutyCycle2(deltaV);
  7120  05E1  086B               	movf	_deltaV+1,w
  7121  05E2  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  7122  05E3  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  7123  05E4  086A               	movf	_deltaV,w
  7124  05E5  01F0               	clrf	i1PWM_DutyCycle2@valor
  7125  05E6  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  7126  05E7  160A  118A  2272   	fcall	i1_PWM_DutyCycle2
  7127  05EA  0008               	return
  7128  05EB                     __end_of_Fuzzy:	
  7129                           
  7130                           	psect	text30
  7131  1272                     __ptext30:	
  7132 ;; *************** function i1_PWM_DutyCycle2 *****************
  7133 ;; Defined at:
  7134 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  valor           2    0[COMMON] int 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;		None
  7139 ;; Return value:  Size  Location     Type
  7140 ;;		None               void
  7141 ;; Registers used:
  7142 ;;		wreg, status,2, status,0
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7148 ;;      Params:         2       0       0       0       0
  7149 ;;      Locals:         0       0       0       0       0
  7150 ;;      Temps:          2       0       0       0       0
  7151 ;;      Totals:         4       0       0       0       0
  7152 ;;Total ram usage:        4 bytes
  7153 ;; Hardware stack levels used:    1
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_Fuzzy
  7158 ;;		_ISR
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           
  7163                           ;psect for function i1_PWM_DutyCycle2
  7164  1272                     i1_PWM_DutyCycle2:	
  7165                           
  7166                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7170  1272  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  7171  1273  00F3               	movwf	??i1_PWM_DutyCycle2+1
  7172  1274  0870               	movf	i1PWM_DutyCycle2@valor,w
  7173  1275  00F2               	movwf	??i1_PWM_DutyCycle2
  7174  1276  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7175  1277  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7176  1278  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7177  1279  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7178  127A  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7179  127B  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7180  127C  0872               	movf	??i1_PWM_DutyCycle2,w
  7181  127D  1283               	bcf	3,5	;RP0=0, select bank0
  7182  127E  1303               	bcf	3,6	;RP1=0, select bank0
  7183  127F  009B               	movwf	27	;volatile
  7184                           
  7185                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7186  1280  0870               	movf	i1PWM_DutyCycle2@valor,w
  7187  1281  00F2               	movwf	??i1_PWM_DutyCycle2
  7188  1282  3003               	movlw	3
  7189  1283                     u334_25:	
  7190  1283  1003               	clrc
  7191  1284  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  7192  1285  3EFF               	addlw	-1
  7193  1286  1D03               	skipz
  7194  1287  2A83               	goto	u334_25
  7195  1288  1003               	clrc
  7196  1289  0D72               	rlf	??i1_PWM_DutyCycle2,w
  7197  128A  380C               	iorlw	12
  7198  128B  009D               	movwf	29	;volatile
  7199  128C  0008               	return
  7200  128D                     __end_ofi1_PWM_DutyCycle2:	
  7201                           
  7202                           	psect	text31
  7203  0AAD                     __ptext31:	
  7204 ;; *************** function _trimf *****************
  7205 ;; Defined at:
  7206 ;;		line 69 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  x               3   23[BANK0 ] float 
  7209 ;;  a               3   26[BANK0 ] float 
  7210 ;;  b               3   29[BANK0 ] float 
  7211 ;;  c               3   32[BANK0 ] float 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;  ua              3   35[BANK0 ] float 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  3   23[BANK0 ] float 
  7216 ;; Registers used:
  7217 ;;		wreg, status,2, status,0, pclath, cstack
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7223 ;;      Params:         0      12       0       0       0
  7224 ;;      Locals:         0       3       0       0       0
  7225 ;;      Temps:          0       0       0       0       0
  7226 ;;      Totals:         0      15       0       0       0
  7227 ;;Total ram usage:       15 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; Hardware stack levels required when called:    2
  7230 ;; This function calls:
  7231 ;;		___ftadd
  7232 ;;		___ftdiv
  7233 ;;		___ftge
  7234 ;;		___ftneg
  7235 ;; This function is called by:
  7236 ;;		_Fuzzy
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           
  7241                           ;psect for function _trimf
  7242  0AAD                     _trimf:	
  7243                           
  7244                           ;main.c: 71: float ua = 0;
  7245                           
  7246                           ;incstack = 0
  7247                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7248  0AAD  3000               	movlw	0
  7249  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  7250  0AAF  1303               	bcf	3,6	;RP1=0, select bank0
  7251  0AB0  00C3               	movwf	trimf@ua
  7252  0AB1  3000               	movlw	0
  7253  0AB2  00C4               	movwf	trimf@ua+1
  7254  0AB3  3000               	movlw	0
  7255  0AB4  00C5               	movwf	trimf@ua+2
  7256                           
  7257                           ;main.c: 73: if (x <= a)
  7258  0AB5  083A               	movf	trimf@a,w
  7259  0AB6  00F0               	movwf	___ftge@ff1
  7260  0AB7  083B               	movf	trimf@a+1,w
  7261  0AB8  00F1               	movwf	___ftge@ff1+1
  7262  0AB9  083C               	movf	trimf@a+2,w
  7263  0ABA  00F2               	movwf	___ftge@ff1+2
  7264  0ABB  0837               	movf	trimf@x,w
  7265  0ABC  00F3               	movwf	___ftge@ff2
  7266  0ABD  0838               	movf	trimf@x+1,w
  7267  0ABE  00F4               	movwf	___ftge@ff2+1
  7268  0ABF  0839               	movf	trimf@x+2,w
  7269  0AC0  00F5               	movwf	___ftge@ff2+2
  7270  0AC1  120A  118A  27A2  120A  158A  	fcall	___ftge
  7271  0AC6  1803               	btfsc	3,0
  7272  0AC7  2BBA               	goto	L12
  7273                           
  7274                           ;main.c: 75: else if ((a < x) && (x <= b))
  7275                           
  7276                           ;main.c: 74: ua = 0;
  7277  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  7278  0AC9  1303               	bcf	3,6	;RP1=0, select bank0
  7279  0ACA  083A               	movf	trimf@a,w
  7280  0ACB  00F0               	movwf	___ftge@ff1
  7281  0ACC  083B               	movf	trimf@a+1,w
  7282  0ACD  00F1               	movwf	___ftge@ff1+1
  7283  0ACE  083C               	movf	trimf@a+2,w
  7284  0ACF  00F2               	movwf	___ftge@ff1+2
  7285  0AD0  0837               	movf	trimf@x,w
  7286  0AD1  00F3               	movwf	___ftge@ff2
  7287  0AD2  0838               	movf	trimf@x+1,w
  7288  0AD3  00F4               	movwf	___ftge@ff2+1
  7289  0AD4  0839               	movf	trimf@x+2,w
  7290  0AD5  00F5               	movwf	___ftge@ff2+2
  7291  0AD6  120A  118A  27A2  120A  158A  	fcall	___ftge
  7292  0ADB  1803               	btfsc	3,0
  7293  0ADC  2B24               	goto	i1l2444
  7294  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  7295  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  7296  0ADF  083D               	movf	trimf@b,w
  7297  0AE0  00F0               	movwf	___ftge@ff1
  7298  0AE1  083E               	movf	trimf@b+1,w
  7299  0AE2  00F1               	movwf	___ftge@ff1+1
  7300  0AE3  083F               	movf	trimf@b+2,w
  7301  0AE4  00F2               	movwf	___ftge@ff1+2
  7302  0AE5  0837               	movf	trimf@x,w
  7303  0AE6  00F3               	movwf	___ftge@ff2
  7304  0AE7  0838               	movf	trimf@x+1,w
  7305  0AE8  00F4               	movwf	___ftge@ff2+1
  7306  0AE9  0839               	movf	trimf@x+2,w
  7307  0AEA  00F5               	movwf	___ftge@ff2+2
  7308  0AEB  120A  118A  27A2  120A  158A  	fcall	___ftge
  7309  0AF0  1C03               	btfss	3,0
  7310  0AF1  2B24               	goto	i1l2444
  7311                           
  7312                           ;main.c: 76: ua = ((x - a) / (b - a));
  7313  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  7314  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  7315  0AF4  083D               	movf	trimf@b,w
  7316  0AF5  00F8               	movwf	___ftadd@f1
  7317  0AF6  083E               	movf	trimf@b+1,w
  7318  0AF7  00F9               	movwf	___ftadd@f1+1
  7319  0AF8  083F               	movf	trimf@b+2,w
  7320  0AF9  00FA               	movwf	___ftadd@f1+2
  7321  0AFA  083A               	movf	trimf@a,w
  7322  0AFB  00F0               	movwf	___ftneg@f1
  7323  0AFC  083B               	movf	trimf@a+1,w
  7324  0AFD  00F1               	movwf	___ftneg@f1+1
  7325  0AFE  083C               	movf	trimf@a+2,w
  7326  0AFF  00F2               	movwf	___ftneg@f1+2
  7327  0B00  160A  118A  21E8  120A  158A  	fcall	___ftneg
  7328  0B05  0870               	movf	?___ftneg,w
  7329  0B06  00FB               	movwf	___ftadd@f2
  7330  0B07  0871               	movf	?___ftneg+1,w
  7331  0B08  00FC               	movwf	___ftadd@f2+1
  7332  0B09  0872               	movf	?___ftneg+2,w
  7333  0B0A  00FD               	movwf	___ftadd@f2+2
  7334  0B0B  120A  158A  21A6  120A  158A  	fcall	___ftadd
  7335  0B10  0878               	movf	?___ftadd,w
  7336  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  7337  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  7338  0B13  00A7               	movwf	___ftdiv@f2
  7339  0B14  0879               	movf	?___ftadd+1,w
  7340  0B15  00A8               	movwf	___ftdiv@f2+1
  7341  0B16  087A               	movf	?___ftadd+2,w
  7342  0B17  00A9               	movwf	___ftdiv@f2+2
  7343  0B18  0837               	movf	trimf@x,w
  7344  0B19  00F8               	movwf	___ftadd@f1
  7345  0B1A  0838               	movf	trimf@x+1,w
  7346  0B1B  00F9               	movwf	___ftadd@f1+1
  7347  0B1C  0839               	movf	trimf@x+2,w
  7348  0B1D  00FA               	movwf	___ftadd@f1+2
  7349  0B1E  083A               	movf	trimf@a,w
  7350  0B1F  00F0               	movwf	___ftneg@f1
  7351  0B20  083B               	movf	trimf@a+1,w
  7352  0B21  00F1               	movwf	___ftneg@f1+1
  7353  0B22  083C               	movf	trimf@a+2,w
  7354  0B23  2B7F               	goto	L13
  7355  0B24                     i1l2444:	
  7356                           
  7357                           ;main.c: 77: else if ((b < x) && (x <= c))
  7358  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  7359  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  7360  0B26  083D               	movf	trimf@b,w
  7361  0B27  00F0               	movwf	___ftge@ff1
  7362  0B28  083E               	movf	trimf@b+1,w
  7363  0B29  00F1               	movwf	___ftge@ff1+1
  7364  0B2A  083F               	movf	trimf@b+2,w
  7365  0B2B  00F2               	movwf	___ftge@ff1+2
  7366  0B2C  0837               	movf	trimf@x,w
  7367  0B2D  00F3               	movwf	___ftge@ff2
  7368  0B2E  0838               	movf	trimf@x+1,w
  7369  0B2F  00F4               	movwf	___ftge@ff2+1
  7370  0B30  0839               	movf	trimf@x+2,w
  7371  0B31  00F5               	movwf	___ftge@ff2+2
  7372  0B32  120A  118A  27A2  120A  158A  	fcall	___ftge
  7373  0B37  1803               	btfsc	3,0
  7374  0B38  2BA5               	goto	i1l2450
  7375  0B39  1283               	bcf	3,5	;RP0=0, select bank0
  7376  0B3A  1303               	bcf	3,6	;RP1=0, select bank0
  7377  0B3B  0840               	movf	trimf@c,w
  7378  0B3C  00F0               	movwf	___ftge@ff1
  7379  0B3D  0841               	movf	trimf@c+1,w
  7380  0B3E  00F1               	movwf	___ftge@ff1+1
  7381  0B3F  0842               	movf	trimf@c+2,w
  7382  0B40  00F2               	movwf	___ftge@ff1+2
  7383  0B41  0837               	movf	trimf@x,w
  7384  0B42  00F3               	movwf	___ftge@ff2
  7385  0B43  0838               	movf	trimf@x+1,w
  7386  0B44  00F4               	movwf	___ftge@ff2+1
  7387  0B45  0839               	movf	trimf@x+2,w
  7388  0B46  00F5               	movwf	___ftge@ff2+2
  7389  0B47  120A  118A  27A2  120A  158A  	fcall	___ftge
  7390  0B4C  1C03               	btfss	3,0
  7391  0B4D  2BA5               	goto	i1l2450
  7392                           
  7393                           ;main.c: 78: ua = ((x - c) / (b - c));
  7394  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  7395  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  7396  0B50  083D               	movf	trimf@b,w
  7397  0B51  00F8               	movwf	___ftadd@f1
  7398  0B52  083E               	movf	trimf@b+1,w
  7399  0B53  00F9               	movwf	___ftadd@f1+1
  7400  0B54  083F               	movf	trimf@b+2,w
  7401  0B55  00FA               	movwf	___ftadd@f1+2
  7402  0B56  0840               	movf	trimf@c,w
  7403  0B57  00F0               	movwf	___ftneg@f1
  7404  0B58  0841               	movf	trimf@c+1,w
  7405  0B59  00F1               	movwf	___ftneg@f1+1
  7406  0B5A  0842               	movf	trimf@c+2,w
  7407  0B5B  00F2               	movwf	___ftneg@f1+2
  7408  0B5C  160A  118A  21E8  120A  158A  	fcall	___ftneg
  7409  0B61  0870               	movf	?___ftneg,w
  7410  0B62  00FB               	movwf	___ftadd@f2
  7411  0B63  0871               	movf	?___ftneg+1,w
  7412  0B64  00FC               	movwf	___ftadd@f2+1
  7413  0B65  0872               	movf	?___ftneg+2,w
  7414  0B66  00FD               	movwf	___ftadd@f2+2
  7415  0B67  120A  158A  21A6  120A  158A  	fcall	___ftadd
  7416  0B6C  0878               	movf	?___ftadd,w
  7417  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  7418  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  7419  0B6F  00A7               	movwf	___ftdiv@f2
  7420  0B70  0879               	movf	?___ftadd+1,w
  7421  0B71  00A8               	movwf	___ftdiv@f2+1
  7422  0B72  087A               	movf	?___ftadd+2,w
  7423  0B73  00A9               	movwf	___ftdiv@f2+2
  7424  0B74  0837               	movf	trimf@x,w
  7425  0B75  00F8               	movwf	___ftadd@f1
  7426  0B76  0838               	movf	trimf@x+1,w
  7427  0B77  00F9               	movwf	___ftadd@f1+1
  7428  0B78  0839               	movf	trimf@x+2,w
  7429  0B79  00FA               	movwf	___ftadd@f1+2
  7430  0B7A  0840               	movf	trimf@c,w
  7431  0B7B  00F0               	movwf	___ftneg@f1
  7432  0B7C  0841               	movf	trimf@c+1,w
  7433  0B7D  00F1               	movwf	___ftneg@f1+1
  7434  0B7E  0842               	movf	trimf@c+2,w
  7435  0B7F                     L13:	
  7436  0B7F  00F2               	movwf	___ftneg@f1+2
  7437  0B80  160A  118A  21E8  120A  158A  	fcall	___ftneg
  7438  0B85  0870               	movf	?___ftneg,w
  7439  0B86  00FB               	movwf	___ftadd@f2
  7440  0B87  0871               	movf	?___ftneg+1,w
  7441  0B88  00FC               	movwf	___ftadd@f2+1
  7442  0B89  0872               	movf	?___ftneg+2,w
  7443  0B8A  00FD               	movwf	___ftadd@f2+2
  7444  0B8B  120A  158A  21A6  120A  158A  	fcall	___ftadd
  7445  0B90  0878               	movf	?___ftadd,w
  7446  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  7447  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  7448  0B93  00AA               	movwf	___ftdiv@f1
  7449  0B94  0879               	movf	?___ftadd+1,w
  7450  0B95  00AB               	movwf	___ftdiv@f1+1
  7451  0B96  087A               	movf	?___ftadd+2,w
  7452  0B97  00AC               	movwf	___ftdiv@f1+2
  7453  0B98  120A  158A  20EE  120A  158A  	fcall	___ftdiv
  7454  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  7455  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  7456  0B9F  0827               	movf	?___ftdiv,w
  7457  0BA0  00C3               	movwf	trimf@ua
  7458  0BA1  0828               	movf	?___ftdiv+1,w
  7459  0BA2  00C4               	movwf	trimf@ua+1
  7460  0BA3  0829               	movf	?___ftdiv+2,w
  7461  0BA4  2BC1               	goto	L10
  7462  0BA5                     i1l2450:	
  7463                           
  7464                           ;main.c: 79: else if (x > c)
  7465  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  7466  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  7467  0BA7  0840               	movf	trimf@c,w
  7468  0BA8  00F0               	movwf	___ftge@ff1
  7469  0BA9  0841               	movf	trimf@c+1,w
  7470  0BAA  00F1               	movwf	___ftge@ff1+1
  7471  0BAB  0842               	movf	trimf@c+2,w
  7472  0BAC  00F2               	movwf	___ftge@ff1+2
  7473  0BAD  0837               	movf	trimf@x,w
  7474  0BAE  00F3               	movwf	___ftge@ff2
  7475  0BAF  0838               	movf	trimf@x+1,w
  7476  0BB0  00F4               	movwf	___ftge@ff2+1
  7477  0BB1  0839               	movf	trimf@x+2,w
  7478  0BB2  00F5               	movwf	___ftge@ff2+2
  7479  0BB3  120A  118A  27A2  120A  158A  	fcall	___ftge
  7480  0BB8  1803               	btfsc	3,0
  7481  0BB9  2BC2               	goto	i1l120
  7482  0BBA                     L12:	
  7483                           
  7484                           ;main.c: 80: ua = 0;
  7485  0BBA  3000               	movlw	0
  7486  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  7487  0BBC  1303               	bcf	3,6	;RP1=0, select bank0
  7488  0BBD  00C3               	movwf	trimf@ua
  7489  0BBE  3000               	movlw	0
  7490  0BBF  00C4               	movwf	trimf@ua+1
  7491  0BC0  3000               	movlw	0
  7492  0BC1                     L10:	
  7493  0BC1  00C5               	movwf	trimf@ua+2
  7494  0BC2                     i1l120:	
  7495                           
  7496                           ;main.c: 82: return(ua);
  7497  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  7498  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  7499  0BC4  0843               	movf	trimf@ua,w
  7500  0BC5  00B7               	movwf	?_trimf
  7501  0BC6  0844               	movf	trimf@ua+1,w
  7502  0BC7  00B8               	movwf	?_trimf+1
  7503  0BC8  0845               	movf	trimf@ua+2,w
  7504  0BC9  00B9               	movwf	?_trimf+2
  7505  0BCA  0008               	return
  7506  0BCB                     __end_of_trimf:	
  7507                           
  7508                           	psect	text32
  7509  0BCB                     __ptext32:	
  7510 ;; *************** function _trapmf *****************
  7511 ;; Defined at:
  7512 ;;		line 88 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  x               3   23[BANK0 ] float 
  7515 ;;  a               3   26[BANK0 ] float 
  7516 ;;  b               3   29[BANK0 ] float 
  7517 ;;  c               3   32[BANK0 ] float 
  7518 ;;  d               3   35[BANK0 ] float 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;  ua              3   38[BANK0 ] float 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  3   23[BANK0 ] float 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0, pclath, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7530 ;;      Params:         0      15       0       0       0
  7531 ;;      Locals:         0       3       0       0       0
  7532 ;;      Temps:          0       0       0       0       0
  7533 ;;      Totals:         0      18       0       0       0
  7534 ;;Total ram usage:       18 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    2
  7537 ;; This function calls:
  7538 ;;		___ftadd
  7539 ;;		___ftdiv
  7540 ;;		___ftge
  7541 ;;		___ftneg
  7542 ;; This function is called by:
  7543 ;;		_Fuzzy
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           
  7548                           ;psect for function _trapmf
  7549  0BCB                     _trapmf:	
  7550                           
  7551                           ;main.c: 90: float ua = 0;
  7552                           
  7553                           ;incstack = 0
  7554                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7555  0BCB  3000               	movlw	0
  7556  0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  7557  0BCD  1303               	bcf	3,6	;RP1=0, select bank0
  7558  0BCE  00C6               	movwf	trapmf@ua
  7559  0BCF  3000               	movlw	0
  7560  0BD0  00C7               	movwf	trapmf@ua+1
  7561  0BD1  3000               	movlw	0
  7562  0BD2  00C8               	movwf	trapmf@ua+2
  7563                           
  7564                           ;main.c: 92: if (x <= a)
  7565  0BD3  083A               	movf	trapmf@a,w
  7566  0BD4  00F0               	movwf	___ftge@ff1
  7567  0BD5  083B               	movf	trapmf@a+1,w
  7568  0BD6  00F1               	movwf	___ftge@ff1+1
  7569  0BD7  083C               	movf	trapmf@a+2,w
  7570  0BD8  00F2               	movwf	___ftge@ff1+2
  7571  0BD9  0837               	movf	trapmf@x,w
  7572  0BDA  00F3               	movwf	___ftge@ff2
  7573  0BDB  0838               	movf	trapmf@x+1,w
  7574  0BDC  00F4               	movwf	___ftge@ff2+1
  7575  0BDD  0839               	movf	trapmf@x+2,w
  7576  0BDE  00F5               	movwf	___ftge@ff2+2
  7577  0BDF  120A  118A  27A2  120A  158A  	fcall	___ftge
  7578  0BE4  1803               	btfsc	3,0
  7579  0BE5  2D0A               	goto	L18
  7580                           
  7581                           ;main.c: 94: else if ((a < x) && (x <= b))
  7582                           
  7583                           ;main.c: 93: ua = 0;
  7584  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  7585  0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  7586  0BE8  083A               	movf	trapmf@a,w
  7587  0BE9  00F0               	movwf	___ftge@ff1
  7588  0BEA  083B               	movf	trapmf@a+1,w
  7589  0BEB  00F1               	movwf	___ftge@ff1+1
  7590  0BEC  083C               	movf	trapmf@a+2,w
  7591  0BED  00F2               	movwf	___ftge@ff1+2
  7592  0BEE  0837               	movf	trapmf@x,w
  7593  0BEF  00F3               	movwf	___ftge@ff2
  7594  0BF0  0838               	movf	trapmf@x+1,w
  7595  0BF1  00F4               	movwf	___ftge@ff2+1
  7596  0BF2  0839               	movf	trapmf@x+2,w
  7597  0BF3  00F5               	movwf	___ftge@ff2+2
  7598  0BF4  120A  118A  27A2  120A  158A  	fcall	___ftge
  7599  0BF9  1803               	btfsc	3,0
  7600  0BFA  2C42               	goto	i1l2468
  7601  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  7602  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  7603  0BFD  083D               	movf	trapmf@b,w
  7604  0BFE  00F0               	movwf	___ftge@ff1
  7605  0BFF  083E               	movf	trapmf@b+1,w
  7606  0C00  00F1               	movwf	___ftge@ff1+1
  7607  0C01  083F               	movf	trapmf@b+2,w
  7608  0C02  00F2               	movwf	___ftge@ff1+2
  7609  0C03  0837               	movf	trapmf@x,w
  7610  0C04  00F3               	movwf	___ftge@ff2
  7611  0C05  0838               	movf	trapmf@x+1,w
  7612  0C06  00F4               	movwf	___ftge@ff2+1
  7613  0C07  0839               	movf	trapmf@x+2,w
  7614  0C08  00F5               	movwf	___ftge@ff2+2
  7615  0C09  120A  118A  27A2  120A  158A  	fcall	___ftge
  7616  0C0E  1C03               	btfss	3,0
  7617  0C0F  2C42               	goto	i1l2468
  7618                           
  7619                           ;main.c: 95: ua = ((x - a) / (b - a));
  7620  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  7621  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  7622  0C12  083D               	movf	trapmf@b,w
  7623  0C13  00F8               	movwf	___ftadd@f1
  7624  0C14  083E               	movf	trapmf@b+1,w
  7625  0C15  00F9               	movwf	___ftadd@f1+1
  7626  0C16  083F               	movf	trapmf@b+2,w
  7627  0C17  00FA               	movwf	___ftadd@f1+2
  7628  0C18  083A               	movf	trapmf@a,w
  7629  0C19  00F0               	movwf	___ftneg@f1
  7630  0C1A  083B               	movf	trapmf@a+1,w
  7631  0C1B  00F1               	movwf	___ftneg@f1+1
  7632  0C1C  083C               	movf	trapmf@a+2,w
  7633  0C1D  00F2               	movwf	___ftneg@f1+2
  7634  0C1E  160A  118A  21E8  120A  158A  	fcall	___ftneg
  7635  0C23  0870               	movf	?___ftneg,w
  7636  0C24  00FB               	movwf	___ftadd@f2
  7637  0C25  0871               	movf	?___ftneg+1,w
  7638  0C26  00FC               	movwf	___ftadd@f2+1
  7639  0C27  0872               	movf	?___ftneg+2,w
  7640  0C28  00FD               	movwf	___ftadd@f2+2
  7641  0C29  120A  158A  21A6  120A  158A  	fcall	___ftadd
  7642  0C2E  0878               	movf	?___ftadd,w
  7643  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  7644  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  7645  0C31  00A7               	movwf	___ftdiv@f2
  7646  0C32  0879               	movf	?___ftadd+1,w
  7647  0C33  00A8               	movwf	___ftdiv@f2+1
  7648  0C34  087A               	movf	?___ftadd+2,w
  7649  0C35  00A9               	movwf	___ftdiv@f2+2
  7650  0C36  0837               	movf	trapmf@x,w
  7651  0C37  00F8               	movwf	___ftadd@f1
  7652  0C38  0838               	movf	trapmf@x+1,w
  7653  0C39  00F9               	movwf	___ftadd@f1+1
  7654  0C3A  0839               	movf	trapmf@x+2,w
  7655  0C3B  00FA               	movwf	___ftadd@f1+2
  7656  0C3C  083A               	movf	trapmf@a,w
  7657  0C3D  00F0               	movwf	___ftneg@f1
  7658  0C3E  083B               	movf	trapmf@a+1,w
  7659  0C3F  00F1               	movwf	___ftneg@f1+1
  7660  0C40  083C               	movf	trapmf@a+2,w
  7661  0C41  2CCF               	goto	L20
  7662  0C42                     i1l2468:	
  7663                           
  7664                           ;main.c: 96: else if ((b <= x) && (x <= c))
  7665  0C42  1283               	bcf	3,5	;RP0=0, select bank0
  7666  0C43  1303               	bcf	3,6	;RP1=0, select bank0
  7667  0C44  0837               	movf	trapmf@x,w
  7668  0C45  00F0               	movwf	___ftge@ff1
  7669  0C46  0838               	movf	trapmf@x+1,w
  7670  0C47  00F1               	movwf	___ftge@ff1+1
  7671  0C48  0839               	movf	trapmf@x+2,w
  7672  0C49  00F2               	movwf	___ftge@ff1+2
  7673  0C4A  083D               	movf	trapmf@b,w
  7674  0C4B  00F3               	movwf	___ftge@ff2
  7675  0C4C  083E               	movf	trapmf@b+1,w
  7676  0C4D  00F4               	movwf	___ftge@ff2+1
  7677  0C4E  083F               	movf	trapmf@b+2,w
  7678  0C4F  00F5               	movwf	___ftge@ff2+2
  7679  0C50  120A  118A  27A2  120A  158A  	fcall	___ftge
  7680  0C55  1C03               	btfss	3,0
  7681  0C56  2C74               	goto	i1l2474
  7682  0C57  1283               	bcf	3,5	;RP0=0, select bank0
  7683  0C58  1303               	bcf	3,6	;RP1=0, select bank0
  7684  0C59  0840               	movf	trapmf@c,w
  7685  0C5A  00F0               	movwf	___ftge@ff1
  7686  0C5B  0841               	movf	trapmf@c+1,w
  7687  0C5C  00F1               	movwf	___ftge@ff1+1
  7688  0C5D  0842               	movf	trapmf@c+2,w
  7689  0C5E  00F2               	movwf	___ftge@ff1+2
  7690  0C5F  0837               	movf	trapmf@x,w
  7691  0C60  00F3               	movwf	___ftge@ff2
  7692  0C61  0838               	movf	trapmf@x+1,w
  7693  0C62  00F4               	movwf	___ftge@ff2+1
  7694  0C63  0839               	movf	trapmf@x+2,w
  7695  0C64  00F5               	movwf	___ftge@ff2+2
  7696  0C65  120A  118A  27A2  120A  158A  	fcall	___ftge
  7697  0C6A  1C03               	btfss	3,0
  7698  0C6B  2C74               	goto	i1l2474
  7699                           
  7700                           ;main.c: 97: ua = 1;
  7701  0C6C  3000               	movlw	0
  7702  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  7703  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  7704  0C6F  00C6               	movwf	trapmf@ua
  7705  0C70  3080               	movlw	128
  7706  0C71  00C7               	movwf	trapmf@ua+1
  7707  0C72  303F               	movlw	63
  7708  0C73  2D11               	goto	L17
  7709  0C74                     i1l2474:	
  7710                           
  7711                           ;main.c: 98: else if ((c < x) && (x <= d))
  7712  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  7713  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  7714  0C76  0840               	movf	trapmf@c,w
  7715  0C77  00F0               	movwf	___ftge@ff1
  7716  0C78  0841               	movf	trapmf@c+1,w
  7717  0C79  00F1               	movwf	___ftge@ff1+1
  7718  0C7A  0842               	movf	trapmf@c+2,w
  7719  0C7B  00F2               	movwf	___ftge@ff1+2
  7720  0C7C  0837               	movf	trapmf@x,w
  7721  0C7D  00F3               	movwf	___ftge@ff2
  7722  0C7E  0838               	movf	trapmf@x+1,w
  7723  0C7F  00F4               	movwf	___ftge@ff2+1
  7724  0C80  0839               	movf	trapmf@x+2,w
  7725  0C81  00F5               	movwf	___ftge@ff2+2
  7726  0C82  120A  118A  27A2  120A  158A  	fcall	___ftge
  7727  0C87  1803               	btfsc	3,0
  7728  0C88  2CF5               	goto	i1l2480
  7729  0C89  1283               	bcf	3,5	;RP0=0, select bank0
  7730  0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  7731  0C8B  0843               	movf	trapmf@d,w
  7732  0C8C  00F0               	movwf	___ftge@ff1
  7733  0C8D  0844               	movf	trapmf@d+1,w
  7734  0C8E  00F1               	movwf	___ftge@ff1+1
  7735  0C8F  0845               	movf	trapmf@d+2,w
  7736  0C90  00F2               	movwf	___ftge@ff1+2
  7737  0C91  0837               	movf	trapmf@x,w
  7738  0C92  00F3               	movwf	___ftge@ff2
  7739  0C93  0838               	movf	trapmf@x+1,w
  7740  0C94  00F4               	movwf	___ftge@ff2+1
  7741  0C95  0839               	movf	trapmf@x+2,w
  7742  0C96  00F5               	movwf	___ftge@ff2+2
  7743  0C97  120A  118A  27A2  120A  158A  	fcall	___ftge
  7744  0C9C  1C03               	btfss	3,0
  7745  0C9D  2CF5               	goto	i1l2480
  7746                           
  7747                           ;main.c: 99: ua = ((d - x) / (d - c));
  7748  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  7749  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  7750  0CA0  0843               	movf	trapmf@d,w
  7751  0CA1  00F8               	movwf	___ftadd@f1
  7752  0CA2  0844               	movf	trapmf@d+1,w
  7753  0CA3  00F9               	movwf	___ftadd@f1+1
  7754  0CA4  0845               	movf	trapmf@d+2,w
  7755  0CA5  00FA               	movwf	___ftadd@f1+2
  7756  0CA6  0840               	movf	trapmf@c,w
  7757  0CA7  00F0               	movwf	___ftneg@f1
  7758  0CA8  0841               	movf	trapmf@c+1,w
  7759  0CA9  00F1               	movwf	___ftneg@f1+1
  7760  0CAA  0842               	movf	trapmf@c+2,w
  7761  0CAB  00F2               	movwf	___ftneg@f1+2
  7762  0CAC  160A  118A  21E8  120A  158A  	fcall	___ftneg
  7763  0CB1  0870               	movf	?___ftneg,w
  7764  0CB2  00FB               	movwf	___ftadd@f2
  7765  0CB3  0871               	movf	?___ftneg+1,w
  7766  0CB4  00FC               	movwf	___ftadd@f2+1
  7767  0CB5  0872               	movf	?___ftneg+2,w
  7768  0CB6  00FD               	movwf	___ftadd@f2+2
  7769  0CB7  120A  158A  21A6  120A  158A  	fcall	___ftadd
  7770  0CBC  0878               	movf	?___ftadd,w
  7771  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  7772  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  7773  0CBF  00A7               	movwf	___ftdiv@f2
  7774  0CC0  0879               	movf	?___ftadd+1,w
  7775  0CC1  00A8               	movwf	___ftdiv@f2+1
  7776  0CC2  087A               	movf	?___ftadd+2,w
  7777  0CC3  00A9               	movwf	___ftdiv@f2+2
  7778  0CC4  0843               	movf	trapmf@d,w
  7779  0CC5  00F8               	movwf	___ftadd@f1
  7780  0CC6  0844               	movf	trapmf@d+1,w
  7781  0CC7  00F9               	movwf	___ftadd@f1+1
  7782  0CC8  0845               	movf	trapmf@d+2,w
  7783  0CC9  00FA               	movwf	___ftadd@f1+2
  7784  0CCA  0837               	movf	trapmf@x,w
  7785  0CCB  00F0               	movwf	___ftneg@f1
  7786  0CCC  0838               	movf	trapmf@x+1,w
  7787  0CCD  00F1               	movwf	___ftneg@f1+1
  7788  0CCE  0839               	movf	trapmf@x+2,w
  7789  0CCF                     L20:	
  7790  0CCF  00F2               	movwf	___ftneg@f1+2
  7791  0CD0  160A  118A  21E8  120A  158A  	fcall	___ftneg
  7792  0CD5  0870               	movf	?___ftneg,w
  7793  0CD6  00FB               	movwf	___ftadd@f2
  7794  0CD7  0871               	movf	?___ftneg+1,w
  7795  0CD8  00FC               	movwf	___ftadd@f2+1
  7796  0CD9  0872               	movf	?___ftneg+2,w
  7797  0CDA  00FD               	movwf	___ftadd@f2+2
  7798  0CDB  120A  158A  21A6  120A  158A  	fcall	___ftadd
  7799  0CE0  0878               	movf	?___ftadd,w
  7800  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  7801  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  7802  0CE3  00AA               	movwf	___ftdiv@f1
  7803  0CE4  0879               	movf	?___ftadd+1,w
  7804  0CE5  00AB               	movwf	___ftdiv@f1+1
  7805  0CE6  087A               	movf	?___ftadd+2,w
  7806  0CE7  00AC               	movwf	___ftdiv@f1+2
  7807  0CE8  120A  158A  20EE  120A  158A  	fcall	___ftdiv
  7808  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  7809  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  7810  0CEF  0827               	movf	?___ftdiv,w
  7811  0CF0  00C6               	movwf	trapmf@ua
  7812  0CF1  0828               	movf	?___ftdiv+1,w
  7813  0CF2  00C7               	movwf	trapmf@ua+1
  7814  0CF3  0829               	movf	?___ftdiv+2,w
  7815  0CF4  2D11               	goto	L17
  7816  0CF5                     i1l2480:	
  7817                           
  7818                           ;main.c: 100: else if (x > d)
  7819  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  7820  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  7821  0CF7  0843               	movf	trapmf@d,w
  7822  0CF8  00F0               	movwf	___ftge@ff1
  7823  0CF9  0844               	movf	trapmf@d+1,w
  7824  0CFA  00F1               	movwf	___ftge@ff1+1
  7825  0CFB  0845               	movf	trapmf@d+2,w
  7826  0CFC  00F2               	movwf	___ftge@ff1+2
  7827  0CFD  0837               	movf	trapmf@x,w
  7828  0CFE  00F3               	movwf	___ftge@ff2
  7829  0CFF  0838               	movf	trapmf@x+1,w
  7830  0D00  00F4               	movwf	___ftge@ff2+1
  7831  0D01  0839               	movf	trapmf@x+2,w
  7832  0D02  00F5               	movwf	___ftge@ff2+2
  7833  0D03  120A  118A  27A2  120A  158A  	fcall	___ftge
  7834  0D08  1803               	btfsc	3,0
  7835  0D09  2D12               	goto	i1l130
  7836  0D0A                     L18:	
  7837                           
  7838                           ;main.c: 101: ua = 0;
  7839  0D0A  3000               	movlw	0
  7840  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  7841  0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  7842  0D0D  00C6               	movwf	trapmf@ua
  7843  0D0E  3000               	movlw	0
  7844  0D0F  00C7               	movwf	trapmf@ua+1
  7845  0D10  3000               	movlw	0
  7846  0D11                     L17:	
  7847  0D11  00C8               	movwf	trapmf@ua+2
  7848  0D12                     i1l130:	
  7849                           
  7850                           ;main.c: 103: return(ua);
  7851  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  7852  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  7853  0D14  0846               	movf	trapmf@ua,w
  7854  0D15  00B7               	movwf	?_trapmf
  7855  0D16  0847               	movf	trapmf@ua+1,w
  7856  0D17  00B8               	movwf	?_trapmf+1
  7857  0D18  0848               	movf	trapmf@ua+2,w
  7858  0D19  00B9               	movwf	?_trapmf+2
  7859  0D1A  0008               	return
  7860  0D1B                     __end_of_trapmf:	
  7861                           
  7862                           	psect	text33
  7863  11E8                     __ptext33:	
  7864 ;; *************** function ___ftneg *****************
  7865 ;; Defined at:
  7866 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  f1              3    0[COMMON] float 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;		None
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  3    0[COMMON] float 
  7873 ;; Registers used:
  7874 ;;		wreg
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7880 ;;      Params:         3       0       0       0       0
  7881 ;;      Locals:         0       0       0       0       0
  7882 ;;      Temps:          0       0       0       0       0
  7883 ;;      Totals:         3       0       0       0       0
  7884 ;;Total ram usage:        3 bytes
  7885 ;; Hardware stack levels used:    1
  7886 ;; This function calls:
  7887 ;;		Nothing
  7888 ;; This function is called by:
  7889 ;;		_trimf
  7890 ;;		_trapmf
  7891 ;;		_Fuzzy
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           
  7896                           ;psect for function ___ftneg
  7897  11E8                     ___ftneg:	
  7898                           
  7899                           ;incstack = 0
  7900                           ; Regs used in ___ftneg: [wreg]
  7901  11E8  0872               	movf	___ftneg@f1+2,w
  7902  11E9  0471               	iorwf	___ftneg@f1+1,w
  7903  11EA  0470               	iorwf	___ftneg@f1,w
  7904  11EB  1903               	skipnz
  7905  11EC  0008               	return
  7906  11ED  3080               	movlw	128
  7907  11EE  06F2               	xorwf	___ftneg@f1+2,f
  7908  11EF  0008               	return
  7909  11F0                     __end_of___ftneg:	
  7910                           
  7911                           	psect	text34
  7912  08EE                     __ptext34:	
  7913 ;; *************** function ___ftdiv *****************
  7914 ;; Defined at:
  7915 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  f2              3    7[BANK0 ] float 
  7918 ;;  f1              3   10[BANK0 ] float 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;  f3              3   18[BANK0 ] float 
  7921 ;;  sign            1   22[BANK0 ] unsigned char 
  7922 ;;  exp             1   21[BANK0 ] unsigned char 
  7923 ;;  cntr            1   17[BANK0 ] unsigned char 
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  3    7[BANK0 ] float 
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0, pclath, cstack
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7933 ;;      Params:         0       6       0       0       0
  7934 ;;      Locals:         0       6       0       0       0
  7935 ;;      Temps:          0       4       0       0       0
  7936 ;;      Totals:         0      16       0       0       0
  7937 ;;Total ram usage:       16 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; Hardware stack levels required when called:    1
  7940 ;; This function calls:
  7941 ;;		___ftpack
  7942 ;; This function is called by:
  7943 ;;		_trimf
  7944 ;;		_trapmf
  7945 ;;		_Fuzzy
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           
  7950                           ;psect for function ___ftdiv
  7951  08EE                     ___ftdiv:	
  7952                           
  7953                           ;incstack = 0
  7954                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7955  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  7956  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  7957  08F0  082A               	movf	___ftdiv@f1,w
  7958  08F1  00AD               	movwf	??___ftdiv
  7959  08F2  082B               	movf	___ftdiv@f1+1,w
  7960  08F3  00AE               	movwf	??___ftdiv+1
  7961  08F4  082C               	movf	___ftdiv@f1+2,w
  7962  08F5  00AF               	movwf	??___ftdiv+2
  7963  08F6  1003               	clrc
  7964  08F7  0D2E               	rlf	??___ftdiv+1,w
  7965  08F8  0D2F               	rlf	??___ftdiv+2,w
  7966  08F9  00B0               	movwf	??___ftdiv+3
  7967  08FA  0830               	movf	??___ftdiv+3,w
  7968  08FB  00B5               	movwf	___ftdiv@exp
  7969  08FC  08B5               	movf	___ftdiv@exp,f
  7970  08FD  1D03               	skipz
  7971  08FE  2906               	goto	i1l2364
  7972  08FF  3000               	movlw	0
  7973  0900  00A7               	movwf	?___ftdiv
  7974  0901  3000               	movlw	0
  7975  0902  00A8               	movwf	?___ftdiv+1
  7976  0903  3000               	movlw	0
  7977  0904  00A9               	movwf	?___ftdiv+2
  7978  0905  0008               	return
  7979  0906                     i1l2364:	
  7980  0906  0827               	movf	___ftdiv@f2,w
  7981  0907  00AD               	movwf	??___ftdiv
  7982  0908  0828               	movf	___ftdiv@f2+1,w
  7983  0909  00AE               	movwf	??___ftdiv+1
  7984  090A  0829               	movf	___ftdiv@f2+2,w
  7985  090B  00AF               	movwf	??___ftdiv+2
  7986  090C  1003               	clrc
  7987  090D  0D2E               	rlf	??___ftdiv+1,w
  7988  090E  0D2F               	rlf	??___ftdiv+2,w
  7989  090F  00B0               	movwf	??___ftdiv+3
  7990  0910  0830               	movf	??___ftdiv+3,w
  7991  0911  00B6               	movwf	___ftdiv@sign
  7992  0912  08B6               	movf	___ftdiv@sign,f
  7993  0913  1D03               	skipz
  7994  0914  291C               	goto	i1l2370
  7995  0915  3000               	movlw	0
  7996  0916  00A7               	movwf	?___ftdiv
  7997  0917  3000               	movlw	0
  7998  0918  00A8               	movwf	?___ftdiv+1
  7999  0919  3000               	movlw	0
  8000  091A  00A9               	movwf	?___ftdiv+2
  8001  091B  0008               	return
  8002  091C                     i1l2370:	
  8003  091C  3000               	movlw	0
  8004  091D  00B2               	movwf	___ftdiv@f3
  8005  091E  3000               	movlw	0
  8006  091F  00B3               	movwf	___ftdiv@f3+1
  8007  0920  3000               	movlw	0
  8008  0921  00B4               	movwf	___ftdiv@f3+2
  8009  0922  3089               	movlw	137
  8010  0923  0736               	addwf	___ftdiv@sign,w
  8011  0924  00AD               	movwf	??___ftdiv
  8012  0925  082D               	movf	??___ftdiv,w
  8013  0926  02B5               	subwf	___ftdiv@exp,f
  8014  0927  082A               	movf	___ftdiv@f1,w
  8015  0928  00AD               	movwf	??___ftdiv
  8016  0929  082B               	movf	___ftdiv@f1+1,w
  8017  092A  00AE               	movwf	??___ftdiv+1
  8018  092B  082C               	movf	___ftdiv@f1+2,w
  8019  092C  00AF               	movwf	??___ftdiv+2
  8020  092D  3010               	movlw	16
  8021  092E                     u251_25:	
  8022  092E  1003               	clrc
  8023  092F  0CAF               	rrf	??___ftdiv+2,f
  8024  0930  0CAE               	rrf	??___ftdiv+1,f
  8025  0931  0CAD               	rrf	??___ftdiv,f
  8026  0932  3EFF               	addlw	-1
  8027  0933  1D03               	skipz
  8028  0934  292E               	goto	u251_25
  8029  0935  082D               	movf	??___ftdiv,w
  8030  0936  00B0               	movwf	??___ftdiv+3
  8031  0937  0830               	movf	??___ftdiv+3,w
  8032  0938  00B6               	movwf	___ftdiv@sign
  8033  0939  0827               	movf	___ftdiv@f2,w
  8034  093A  00AD               	movwf	??___ftdiv
  8035  093B  0828               	movf	___ftdiv@f2+1,w
  8036  093C  00AE               	movwf	??___ftdiv+1
  8037  093D  0829               	movf	___ftdiv@f2+2,w
  8038  093E  00AF               	movwf	??___ftdiv+2
  8039  093F  3010               	movlw	16
  8040  0940                     u252_25:	
  8041  0940  1003               	clrc
  8042  0941  0CAF               	rrf	??___ftdiv+2,f
  8043  0942  0CAE               	rrf	??___ftdiv+1,f
  8044  0943  0CAD               	rrf	??___ftdiv,f
  8045  0944  3EFF               	addlw	-1
  8046  0945  1D03               	skipz
  8047  0946  2940               	goto	u252_25
  8048  0947  082D               	movf	??___ftdiv,w
  8049  0948  00B0               	movwf	??___ftdiv+3
  8050  0949  0830               	movf	??___ftdiv+3,w
  8051  094A  06B6               	xorwf	___ftdiv@sign,f
  8052  094B  3080               	movlw	128
  8053  094C  00AD               	movwf	??___ftdiv
  8054  094D  082D               	movf	??___ftdiv,w
  8055  094E  05B6               	andwf	___ftdiv@sign,f
  8056  094F  17AB               	bsf	___ftdiv@f1+1,7
  8057  0950  30FF               	movlw	255
  8058  0951  05AA               	andwf	___ftdiv@f1,f
  8059  0952  30FF               	movlw	255
  8060  0953  05AB               	andwf	___ftdiv@f1+1,f
  8061  0954  3000               	movlw	0
  8062  0955  05AC               	andwf	___ftdiv@f1+2,f
  8063  0956  17A8               	bsf	___ftdiv@f2+1,7
  8064  0957  30FF               	movlw	255
  8065  0958  05A7               	andwf	___ftdiv@f2,f
  8066  0959  30FF               	movlw	255
  8067  095A  05A8               	andwf	___ftdiv@f2+1,f
  8068  095B  3000               	movlw	0
  8069  095C  05A9               	andwf	___ftdiv@f2+2,f
  8070  095D  3018               	movlw	24
  8071  095E  00AD               	movwf	??___ftdiv
  8072  095F  082D               	movf	??___ftdiv,w
  8073  0960  00B1               	movwf	___ftdiv@cntr
  8074  0961                     i1l2384:	
  8075  0961  3001               	movlw	1
  8076  0962                     u253_25:	
  8077  0962  1003               	clrc
  8078  0963  0DB2               	rlf	___ftdiv@f3,f
  8079  0964  0DB3               	rlf	___ftdiv@f3+1,f
  8080  0965  0DB4               	rlf	___ftdiv@f3+2,f
  8081  0966  3EFF               	addlw	-1
  8082  0967  1D03               	skipz
  8083  0968  2962               	goto	u253_25
  8084  0969  0829               	movf	___ftdiv@f2+2,w
  8085  096A  022C               	subwf	___ftdiv@f1+2,w
  8086  096B  1D03               	skipz
  8087  096C  2973               	goto	u254_25
  8088  096D  0828               	movf	___ftdiv@f2+1,w
  8089  096E  022B               	subwf	___ftdiv@f1+1,w
  8090  096F  1D03               	skipz
  8091  0970  2973               	goto	u254_25
  8092  0971  0827               	movf	___ftdiv@f2,w
  8093  0972  022A               	subwf	___ftdiv@f1,w
  8094  0973                     u254_25:	
  8095  0973  1C03               	skipc
  8096  0974  2980               	goto	i1l2392
  8097  0975  0827               	movf	___ftdiv@f2,w
  8098  0976  02AA               	subwf	___ftdiv@f1,f
  8099  0977  0828               	movf	___ftdiv@f2+1,w
  8100  0978  1C03               	skipc
  8101  0979  0F28               	incfsz	___ftdiv@f2+1,w
  8102  097A  02AB               	subwf	___ftdiv@f1+1,f
  8103  097B  0829               	movf	___ftdiv@f2+2,w
  8104  097C  1C03               	skipc
  8105  097D  0A29               	incf	___ftdiv@f2+2,w
  8106  097E  02AC               	subwf	___ftdiv@f1+2,f
  8107  097F  1432               	bsf	___ftdiv@f3,0
  8108  0980                     i1l2392:	
  8109  0980  3001               	movlw	1
  8110  0981                     u255_25:	
  8111  0981  1003               	clrc
  8112  0982  0DAA               	rlf	___ftdiv@f1,f
  8113  0983  0DAB               	rlf	___ftdiv@f1+1,f
  8114  0984  0DAC               	rlf	___ftdiv@f1+2,f
  8115  0985  3EFF               	addlw	-1
  8116  0986  1D03               	skipz
  8117  0987  2981               	goto	u255_25
  8118  0988  3001               	movlw	1
  8119  0989  02B1               	subwf	___ftdiv@cntr,f
  8120  098A  1D03               	btfss	3,2
  8121  098B  2961               	goto	i1l2384
  8122  098C  0832               	movf	___ftdiv@f3,w
  8123  098D  00F0               	movwf	___ftpack@arg
  8124  098E  0833               	movf	___ftdiv@f3+1,w
  8125  098F  00F1               	movwf	___ftpack@arg+1
  8126  0990  0834               	movf	___ftdiv@f3+2,w
  8127  0991  00F2               	movwf	___ftpack@arg+2
  8128  0992  0835               	movf	___ftdiv@exp,w
  8129  0993  00AD               	movwf	??___ftdiv
  8130  0994  082D               	movf	??___ftdiv,w
  8131  0995  00F3               	movwf	___ftpack@exp
  8132  0996  0836               	movf	___ftdiv@sign,w
  8133  0997  00AE               	movwf	??___ftdiv+1
  8134  0998  082E               	movf	??___ftdiv+1,w
  8135  0999  00F4               	movwf	___ftpack@sign
  8136  099A  160A  118A  253F   	fcall	___ftpack
  8137  099D  0870               	movf	?___ftpack,w
  8138  099E  1283               	bcf	3,5	;RP0=0, select bank0
  8139  099F  1303               	bcf	3,6	;RP1=0, select bank0
  8140  09A0  00A7               	movwf	?___ftdiv
  8141  09A1  0871               	movf	?___ftpack+1,w
  8142  09A2  00A8               	movwf	?___ftdiv+1
  8143  09A3  0872               	movf	?___ftpack+2,w
  8144  09A4  00A9               	movwf	?___ftdiv+2
  8145  09A5  0008               	return
  8146  09A6                     __end_of___ftdiv:	
  8147                           
  8148                           	psect	text35
  8149  09A6                     __ptext35:	
  8150 ;; *************** function ___ftadd *****************
  8151 ;; Defined at:
  8152 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  f1              3    8[COMMON] float 
  8155 ;;  f2              3   11[COMMON] float 
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  exp1            1    6[BANK0 ] unsigned char 
  8158 ;;  exp2            1    5[BANK0 ] unsigned char 
  8159 ;;  sign            1    4[BANK0 ] unsigned char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  3    8[COMMON] float 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0, pclath, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8169 ;;      Params:         6       0       0       0       0
  8170 ;;      Locals:         0       3       0       0       0
  8171 ;;      Temps:          0       4       0       0       0
  8172 ;;      Totals:         6       7       0       0       0
  8173 ;;Total ram usage:       13 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:    1
  8176 ;; This function calls:
  8177 ;;		___ftpack
  8178 ;; This function is called by:
  8179 ;;		_trimf
  8180 ;;		_trapmf
  8181 ;;		_Fuzzy
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           
  8186                           ;psect for function ___ftadd
  8187  09A6                     ___ftadd:	
  8188                           
  8189                           ;incstack = 0
  8190                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8191  09A6  0878               	movf	___ftadd@f1,w
  8192  09A7  1283               	bcf	3,5	;RP0=0, select bank0
  8193  09A8  1303               	bcf	3,6	;RP1=0, select bank0
  8194  09A9  00A0               	movwf	??___ftadd
  8195  09AA  0879               	movf	___ftadd@f1+1,w
  8196  09AB  00A1               	movwf	??___ftadd+1
  8197  09AC  087A               	movf	___ftadd@f1+2,w
  8198  09AD  00A2               	movwf	??___ftadd+2
  8199  09AE  1003               	clrc
  8200  09AF  0D21               	rlf	??___ftadd+1,w
  8201  09B0  0D22               	rlf	??___ftadd+2,w
  8202  09B1  00A3               	movwf	??___ftadd+3
  8203  09B2  0823               	movf	??___ftadd+3,w
  8204  09B3  00A6               	movwf	___ftadd@exp1
  8205  09B4  087B               	movf	___ftadd@f2,w
  8206  09B5  00A0               	movwf	??___ftadd
  8207  09B6  087C               	movf	___ftadd@f2+1,w
  8208  09B7  00A1               	movwf	??___ftadd+1
  8209  09B8  087D               	movf	___ftadd@f2+2,w
  8210  09B9  00A2               	movwf	??___ftadd+2
  8211  09BA  1003               	clrc
  8212  09BB  0D21               	rlf	??___ftadd+1,w
  8213  09BC  0D22               	rlf	??___ftadd+2,w
  8214  09BD  00A3               	movwf	??___ftadd+3
  8215  09BE  0823               	movf	??___ftadd+3,w
  8216  09BF  00A5               	movwf	___ftadd@exp2
  8217  09C0  0826               	movf	___ftadd@exp1,w
  8218  09C1  1903               	btfsc	3,2
  8219  09C2  29CF               	goto	i1l2294
  8220  09C3  0825               	movf	___ftadd@exp2,w
  8221  09C4  0226               	subwf	___ftadd@exp1,w
  8222  09C5  1803               	skipnc
  8223  09C6  29D6               	goto	i1l2298
  8224  09C7  0326               	decf	___ftadd@exp1,w
  8225  09C8  3AFF               	xorlw	255
  8226  09C9  0725               	addwf	___ftadd@exp2,w
  8227  09CA  00A0               	movwf	??___ftadd
  8228  09CB  3019               	movlw	25
  8229  09CC  0220               	subwf	??___ftadd,w
  8230  09CD  1C03               	skipc
  8231  09CE  29D6               	goto	i1l2298
  8232  09CF                     i1l2294:	
  8233  09CF  087B               	movf	___ftadd@f2,w
  8234  09D0  00F8               	movwf	?___ftadd
  8235  09D1  087C               	movf	___ftadd@f2+1,w
  8236  09D2  00F9               	movwf	?___ftadd+1
  8237  09D3  087D               	movf	___ftadd@f2+2,w
  8238  09D4  00FA               	movwf	?___ftadd+2
  8239  09D5  0008               	return
  8240  09D6                     i1l2298:	
  8241  09D6  0825               	movf	___ftadd@exp2,w
  8242  09D7  1903               	btfsc	3,2
  8243  09D8  0008               	return
  8244  09D9  0826               	movf	___ftadd@exp1,w
  8245  09DA  0225               	subwf	___ftadd@exp2,w
  8246  09DB  1803               	skipnc
  8247  09DC  29E5               	goto	i1l2304
  8248  09DD  0325               	decf	___ftadd@exp2,w
  8249  09DE  3AFF               	xorlw	255
  8250  09DF  0726               	addwf	___ftadd@exp1,w
  8251  09E0  00A0               	movwf	??___ftadd
  8252  09E1  3019               	movlw	25
  8253  09E2  0220               	subwf	??___ftadd,w
  8254  09E3  1803               	btfsc	3,0
  8255  09E4  0008               	return
  8256  09E5                     i1l2304:	
  8257  09E5  3006               	movlw	6
  8258  09E6  00A0               	movwf	??___ftadd
  8259  09E7  0820               	movf	??___ftadd,w
  8260  09E8  00A4               	movwf	___ftadd@sign
  8261  09E9  1BFA               	btfsc	___ftadd@f1+2,7
  8262  09EA  17A4               	bsf	___ftadd@sign,7
  8263  09EB  1BFD               	btfsc	___ftadd@f2+2,7
  8264  09EC  1724               	bsf	___ftadd@sign,6
  8265  09ED  17F9               	bsf	___ftadd@f1+1,7
  8266  09EE  30FF               	movlw	255
  8267  09EF  05F8               	andwf	___ftadd@f1,f
  8268  09F0  30FF               	movlw	255
  8269  09F1  05F9               	andwf	___ftadd@f1+1,f
  8270  09F2  3000               	movlw	0
  8271  09F3  05FA               	andwf	___ftadd@f1+2,f
  8272  09F4  17FC               	bsf	___ftadd@f2+1,7
  8273  09F5  30FF               	movlw	255
  8274  09F6  05FB               	andwf	___ftadd@f2,f
  8275  09F7  30FF               	movlw	255
  8276  09F8  05FC               	andwf	___ftadd@f2+1,f
  8277  09F9  3000               	movlw	0
  8278  09FA  05FD               	andwf	___ftadd@f2+2,f
  8279  09FB  0825               	movf	___ftadd@exp2,w
  8280  09FC  0226               	subwf	___ftadd@exp1,w
  8281  09FD  1803               	skipnc
  8282  09FE  2A25               	goto	i1l2326
  8283  09FF                     i1l2316:	
  8284  09FF  3001               	movlw	1
  8285  0A00                     u234_25:	
  8286  0A00  1003               	clrc
  8287  0A01  0DFB               	rlf	___ftadd@f2,f
  8288  0A02  0DFC               	rlf	___ftadd@f2+1,f
  8289  0A03  0DFD               	rlf	___ftadd@f2+2,f
  8290  0A04  3EFF               	addlw	-1
  8291  0A05  1D03               	skipz
  8292  0A06  2A00               	goto	u234_25
  8293  0A07  3001               	movlw	1
  8294  0A08  02A5               	subwf	___ftadd@exp2,f
  8295  0A09  0825               	movf	___ftadd@exp2,w
  8296  0A0A  0626               	xorwf	___ftadd@exp1,w
  8297  0A0B  1903               	skipnz
  8298  0A0C  2A20               	goto	i1l2324
  8299  0A0D  3001               	movlw	1
  8300  0A0E  02A4               	subwf	___ftadd@sign,f
  8301  0A0F  0824               	movf	___ftadd@sign,w
  8302  0A10  3907               	andlw	7
  8303  0A11  1903               	btfsc	3,2
  8304  0A12  2A20               	goto	i1l2324
  8305  0A13  29FF               	goto	i1l2316
  8306  0A14                     i1l2322:	
  8307  0A14  3001               	movlw	1
  8308  0A15                     u237_25:	
  8309  0A15  1003               	clrc
  8310  0A16  0CFA               	rrf	___ftadd@f1+2,f
  8311  0A17  0CF9               	rrf	___ftadd@f1+1,f
  8312  0A18  0CF8               	rrf	___ftadd@f1,f
  8313  0A19  3EFF               	addlw	-1
  8314  0A1A  1D03               	skipz
  8315  0A1B  2A15               	goto	u237_25
  8316  0A1C  3001               	movlw	1
  8317  0A1D  00A0               	movwf	??___ftadd
  8318  0A1E  0820               	movf	??___ftadd,w
  8319  0A1F  07A6               	addwf	___ftadd@exp1,f
  8320  0A20                     i1l2324:	
  8321  0A20  0826               	movf	___ftadd@exp1,w
  8322  0A21  0625               	xorwf	___ftadd@exp2,w
  8323  0A22  1903               	btfsc	3,2
  8324  0A23  2A4E               	goto	i1l792
  8325  0A24  2A14               	goto	i1l2322
  8326  0A25                     i1l2326:	
  8327  0A25  0826               	movf	___ftadd@exp1,w
  8328  0A26  0225               	subwf	___ftadd@exp2,w
  8329  0A27  1803               	skipnc
  8330  0A28  2A4E               	goto	i1l792
  8331  0A29                     i1l2328:	
  8332  0A29  3001               	movlw	1
  8333  0A2A                     u240_25:	
  8334  0A2A  1003               	clrc
  8335  0A2B  0DF8               	rlf	___ftadd@f1,f
  8336  0A2C  0DF9               	rlf	___ftadd@f1+1,f
  8337  0A2D  0DFA               	rlf	___ftadd@f1+2,f
  8338  0A2E  3EFF               	addlw	-1
  8339  0A2F  1D03               	skipz
  8340  0A30  2A2A               	goto	u240_25
  8341  0A31  3001               	movlw	1
  8342  0A32  02A6               	subwf	___ftadd@exp1,f
  8343  0A33  0825               	movf	___ftadd@exp2,w
  8344  0A34  0626               	xorwf	___ftadd@exp1,w
  8345  0A35  1903               	skipnz
  8346  0A36  2A4A               	goto	i1l2336
  8347  0A37  3001               	movlw	1
  8348  0A38  02A4               	subwf	___ftadd@sign,f
  8349  0A39  0824               	movf	___ftadd@sign,w
  8350  0A3A  3907               	andlw	7
  8351  0A3B  1903               	btfsc	3,2
  8352  0A3C  2A4A               	goto	i1l2336
  8353  0A3D  2A29               	goto	i1l2328
  8354  0A3E                     i1l2334:	
  8355  0A3E  3001               	movlw	1
  8356  0A3F                     u243_25:	
  8357  0A3F  1003               	clrc
  8358  0A40  0CFD               	rrf	___ftadd@f2+2,f
  8359  0A41  0CFC               	rrf	___ftadd@f2+1,f
  8360  0A42  0CFB               	rrf	___ftadd@f2,f
  8361  0A43  3EFF               	addlw	-1
  8362  0A44  1D03               	skipz
  8363  0A45  2A3F               	goto	u243_25
  8364  0A46  3001               	movlw	1
  8365  0A47  00A0               	movwf	??___ftadd
  8366  0A48  0820               	movf	??___ftadd,w
  8367  0A49  07A5               	addwf	___ftadd@exp2,f
  8368  0A4A                     i1l2336:	
  8369  0A4A  0826               	movf	___ftadd@exp1,w
  8370  0A4B  0625               	xorwf	___ftadd@exp2,w
  8371  0A4C  1D03               	skipz
  8372  0A4D  2A3E               	goto	i1l2334
  8373  0A4E                     i1l792:	
  8374  0A4E  1FA4               	btfss	___ftadd@sign,7
  8375  0A4F  2A60               	goto	i1l2340
  8376  0A50  30FF               	movlw	255
  8377  0A51  06F8               	xorwf	___ftadd@f1,f
  8378  0A52  30FF               	movlw	255
  8379  0A53  06F9               	xorwf	___ftadd@f1+1,f
  8380  0A54  30FF               	movlw	255
  8381  0A55  06FA               	xorwf	___ftadd@f1+2,f
  8382  0A56  3001               	movlw	1
  8383  0A57  07F8               	addwf	___ftadd@f1,f
  8384  0A58  3000               	movlw	0
  8385  0A59  1803               	skipnc
  8386  0A5A  3001               	movlw	1
  8387  0A5B  07F9               	addwf	___ftadd@f1+1,f
  8388  0A5C  3000               	movlw	0
  8389  0A5D  1803               	skipnc
  8390  0A5E  3001               	movlw	1
  8391  0A5F  07FA               	addwf	___ftadd@f1+2,f
  8392  0A60                     i1l2340:	
  8393  0A60  1F24               	btfss	___ftadd@sign,6
  8394  0A61  2A72               	goto	i1l2344
  8395  0A62  30FF               	movlw	255
  8396  0A63  06FB               	xorwf	___ftadd@f2,f
  8397  0A64  30FF               	movlw	255
  8398  0A65  06FC               	xorwf	___ftadd@f2+1,f
  8399  0A66  30FF               	movlw	255
  8400  0A67  06FD               	xorwf	___ftadd@f2+2,f
  8401  0A68  3001               	movlw	1
  8402  0A69  07FB               	addwf	___ftadd@f2,f
  8403  0A6A  3000               	movlw	0
  8404  0A6B  1803               	skipnc
  8405  0A6C  3001               	movlw	1
  8406  0A6D  07FC               	addwf	___ftadd@f2+1,f
  8407  0A6E  3000               	movlw	0
  8408  0A6F  1803               	skipnc
  8409  0A70  3001               	movlw	1
  8410  0A71  07FD               	addwf	___ftadd@f2+2,f
  8411  0A72                     i1l2344:	
  8412  0A72  01A4               	clrf	___ftadd@sign
  8413  0A73  0878               	movf	___ftadd@f1,w
  8414  0A74  07FB               	addwf	___ftadd@f2,f
  8415  0A75  0879               	movf	___ftadd@f1+1,w
  8416  0A76  1103               	clrz
  8417  0A77  1803               	skipnc
  8418  0A78  0A79               	incf	___ftadd@f1+1,w
  8419  0A79  1D03               	btfss	3,2
  8420  0A7A  07FC               	addwf	___ftadd@f2+1,f
  8421  0A7B  087A               	movf	___ftadd@f1+2,w
  8422  0A7C  1103               	clrz
  8423  0A7D  1803               	skipnc
  8424  0A7E  0A7A               	incf	___ftadd@f1+2,w
  8425  0A7F  1D03               	btfss	3,2
  8426  0A80  07FD               	addwf	___ftadd@f2+2,f
  8427  0A81  1FFD               	btfss	___ftadd@f2+2,7
  8428  0A82  2A95               	goto	i1l2354
  8429  0A83  30FF               	movlw	255
  8430  0A84  06FB               	xorwf	___ftadd@f2,f
  8431  0A85  30FF               	movlw	255
  8432  0A86  06FC               	xorwf	___ftadd@f2+1,f
  8433  0A87  30FF               	movlw	255
  8434  0A88  06FD               	xorwf	___ftadd@f2+2,f
  8435  0A89  3001               	movlw	1
  8436  0A8A  07FB               	addwf	___ftadd@f2,f
  8437  0A8B  3000               	movlw	0
  8438  0A8C  1803               	skipnc
  8439  0A8D  3001               	movlw	1
  8440  0A8E  07FC               	addwf	___ftadd@f2+1,f
  8441  0A8F  3000               	movlw	0
  8442  0A90  1803               	skipnc
  8443  0A91  3001               	movlw	1
  8444  0A92  07FD               	addwf	___ftadd@f2+2,f
  8445  0A93  01A4               	clrf	___ftadd@sign
  8446  0A94  0AA4               	incf	___ftadd@sign,f
  8447  0A95                     i1l2354:	
  8448  0A95  087B               	movf	___ftadd@f2,w
  8449  0A96  00F0               	movwf	___ftpack@arg
  8450  0A97  087C               	movf	___ftadd@f2+1,w
  8451  0A98  00F1               	movwf	___ftpack@arg+1
  8452  0A99  087D               	movf	___ftadd@f2+2,w
  8453  0A9A  00F2               	movwf	___ftpack@arg+2
  8454  0A9B  0826               	movf	___ftadd@exp1,w
  8455  0A9C  00A0               	movwf	??___ftadd
  8456  0A9D  0820               	movf	??___ftadd,w
  8457  0A9E  00F3               	movwf	___ftpack@exp
  8458  0A9F  0824               	movf	___ftadd@sign,w
  8459  0AA0  00A1               	movwf	??___ftadd+1
  8460  0AA1  0821               	movf	??___ftadd+1,w
  8461  0AA2  00F4               	movwf	___ftpack@sign
  8462  0AA3  160A  118A  253F   	fcall	___ftpack
  8463  0AA6  0870               	movf	?___ftpack,w
  8464  0AA7  00F8               	movwf	?___ftadd
  8465  0AA8  0871               	movf	?___ftpack+1,w
  8466  0AA9  00F9               	movwf	?___ftadd+1
  8467  0AAA  0872               	movf	?___ftpack+2,w
  8468  0AAB  00FA               	movwf	?___ftadd+2
  8469  0AAC  0008               	return
  8470  0AAD                     __end_of___ftadd:	
  8471                           
  8472                           	psect	text36
  8473  12A8                     __ptext36:	
  8474 ;; *************** function _max_val *****************
  8475 ;; Defined at:
  8476 ;;		line 118 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  a               3    0[BANK0 ] float 
  8479 ;;  b               3    3[BANK0 ] float 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  3    0[BANK0 ] float 
  8484 ;; Registers used:
  8485 ;;		wreg, status,2, status,0, pclath, cstack
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8491 ;;      Params:         0       6       0       0       0
  8492 ;;      Locals:         0       0       0       0       0
  8493 ;;      Temps:          0       0       0       0       0
  8494 ;;      Totals:         0       6       0       0       0
  8495 ;;Total ram usage:        6 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; Hardware stack levels required when called:    1
  8498 ;; This function calls:
  8499 ;;		___ftge
  8500 ;; This function is called by:
  8501 ;;		_Fuzzy
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           
  8506                           ;psect for function _max_val
  8507  12A8                     _max_val:	
  8508                           
  8509                           ;main.c: 120: if (a > b)
  8510                           
  8511                           ;incstack = 0
  8512                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8513  12A8  1283               	bcf	3,5	;RP0=0, select bank0
  8514  12A9  1303               	bcf	3,6	;RP1=0, select bank0
  8515  12AA  0823               	movf	max_val@b,w
  8516  12AB  00F0               	movwf	___ftge@ff1
  8517  12AC  0824               	movf	max_val@b+1,w
  8518  12AD  00F1               	movwf	___ftge@ff1+1
  8519  12AE  0825               	movf	max_val@b+2,w
  8520  12AF  00F2               	movwf	___ftge@ff1+2
  8521  12B0  0820               	movf	max_val@a,w
  8522  12B1  00F3               	movwf	___ftge@ff2
  8523  12B2  0821               	movf	max_val@a+1,w
  8524  12B3  00F4               	movwf	___ftge@ff2+1
  8525  12B4  0822               	movf	max_val@a+2,w
  8526  12B5  00F5               	movwf	___ftge@ff2+2
  8527  12B6  120A  118A  27A2  160A  118A  	fcall	___ftge
  8528  12BB  1C03               	btfss	3,0
  8529  12BC  0008               	return
  8530                           
  8531                           ;main.c: 122: else
  8532                           ;main.c: 123: return b;
  8533                           
  8534                           ;main.c: 121: return a;
  8535  12BD  1283               	bcf	3,5	;RP0=0, select bank0
  8536  12BE  1303               	bcf	3,6	;RP1=0, select bank0
  8537  12BF  0823               	movf	max_val@b,w
  8538  12C0  00A0               	movwf	?_max_val
  8539  12C1  0824               	movf	max_val@b+1,w
  8540  12C2  00A1               	movwf	?_max_val+1
  8541  12C3  0825               	movf	max_val@b+2,w
  8542  12C4  00A2               	movwf	?_max_val+2
  8543  12C5  0008               	return
  8544  12C6                     __end_of_max_val:	
  8545                           
  8546                           	psect	text37
  8547  07A2                     __ptext37:	
  8548 ;; *************** function ___ftge *****************
  8549 ;; Defined at:
  8550 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  ff1             3    0[COMMON] float 
  8553 ;;  ff2             3    3[COMMON] float 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;		None               void
  8558 ;; Registers used:
  8559 ;;		wreg, status,2, status,0
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8565 ;;      Params:         6       0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0
  8567 ;;      Temps:          6       0       0       0       0
  8568 ;;      Totals:        12       0       0       0       0
  8569 ;;Total ram usage:       12 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; This function calls:
  8572 ;;		Nothing
  8573 ;; This function is called by:
  8574 ;;		_trimf
  8575 ;;		_trapmf
  8576 ;;		_max_val
  8577 ;;		_Fuzzy
  8578 ;;		_min_val
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           
  8583                           ;psect for function ___ftge
  8584  07A2                     ___ftge:	
  8585                           
  8586                           ;incstack = 0
  8587                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8588  07A2  1FF2               	btfss	___ftge@ff1+2,7
  8589  07A3  2FC9               	goto	i1l2404
  8590  07A4  3000               	movlw	0
  8591  07A5  00F6               	movwf	??___ftge
  8592  07A6  3000               	movlw	0
  8593  07A7  00F7               	movwf	??___ftge+1
  8594  07A8  3080               	movlw	128
  8595  07A9  00F8               	movwf	??___ftge+2
  8596  07AA  0970               	comf	___ftge@ff1,w
  8597  07AB  00F9               	movwf	??___ftge+3
  8598  07AC  0971               	comf	___ftge@ff1+1,w
  8599  07AD  00FA               	movwf	??___ftge+4
  8600  07AE  0972               	comf	___ftge@ff1+2,w
  8601  07AF  00FB               	movwf	??___ftge+5
  8602  07B0  0AF9               	incf	??___ftge+3,f
  8603  07B1  1903               	skipnz
  8604  07B2  0AFA               	incf	??___ftge+4,f
  8605  07B3  1903               	skipnz
  8606  07B4  0AFB               	incf	??___ftge+5,f
  8607  07B5  0879               	movf	??___ftge+3,w
  8608  07B6  07F6               	addwf	??___ftge,f
  8609  07B7  087A               	movf	??___ftge+4,w
  8610  07B8  1803               	skipnc
  8611  07B9  0F7A               	incfsz	??___ftge+4,w
  8612  07BA  2FBC               	goto	u258_21
  8613  07BB  2FBD               	goto	u258_22
  8614  07BC                     u258_21:	
  8615  07BC  07F7               	addwf	??___ftge+1,f
  8616  07BD                     u258_22:	
  8617  07BD  087B               	movf	??___ftge+5,w
  8618  07BE  1803               	skipnc
  8619  07BF  0F7B               	incfsz	??___ftge+5,w
  8620  07C0  2FC2               	goto	u258_23
  8621  07C1  2FC3               	goto	u258_24
  8622  07C2                     u258_23:	
  8623  07C2  07F8               	addwf	??___ftge+2,f
  8624  07C3                     u258_24:	
  8625  07C3  0876               	movf	??___ftge,w
  8626  07C4  00F0               	movwf	___ftge@ff1
  8627  07C5  0877               	movf	??___ftge+1,w
  8628  07C6  00F1               	movwf	___ftge@ff1+1
  8629  07C7  0878               	movf	??___ftge+2,w
  8630  07C8  00F2               	movwf	___ftge@ff1+2
  8631  07C9                     i1l2404:	
  8632  07C9  1FF5               	btfss	___ftge@ff2+2,7
  8633  07CA  2FF0               	goto	i1l2408
  8634  07CB  3000               	movlw	0
  8635  07CC  00F6               	movwf	??___ftge
  8636  07CD  3000               	movlw	0
  8637  07CE  00F7               	movwf	??___ftge+1
  8638  07CF  3080               	movlw	128
  8639  07D0  00F8               	movwf	??___ftge+2
  8640  07D1  0973               	comf	___ftge@ff2,w
  8641  07D2  00F9               	movwf	??___ftge+3
  8642  07D3  0974               	comf	___ftge@ff2+1,w
  8643  07D4  00FA               	movwf	??___ftge+4
  8644  07D5  0975               	comf	___ftge@ff2+2,w
  8645  07D6  00FB               	movwf	??___ftge+5
  8646  07D7  0AF9               	incf	??___ftge+3,f
  8647  07D8  1903               	skipnz
  8648  07D9  0AFA               	incf	??___ftge+4,f
  8649  07DA  1903               	skipnz
  8650  07DB  0AFB               	incf	??___ftge+5,f
  8651  07DC  0879               	movf	??___ftge+3,w
  8652  07DD  07F6               	addwf	??___ftge,f
  8653  07DE  087A               	movf	??___ftge+4,w
  8654  07DF  1803               	skipnc
  8655  07E0  0F7A               	incfsz	??___ftge+4,w
  8656  07E1  2FE3               	goto	u260_21
  8657  07E2  2FE4               	goto	u260_22
  8658  07E3                     u260_21:	
  8659  07E3  07F7               	addwf	??___ftge+1,f
  8660  07E4                     u260_22:	
  8661  07E4  087B               	movf	??___ftge+5,w
  8662  07E5  1803               	skipnc
  8663  07E6  0F7B               	incfsz	??___ftge+5,w
  8664  07E7  2FE9               	goto	u260_23
  8665  07E8  2FEA               	goto	u260_24
  8666  07E9                     u260_23:	
  8667  07E9  07F8               	addwf	??___ftge+2,f
  8668  07EA                     u260_24:	
  8669  07EA  0876               	movf	??___ftge,w
  8670  07EB  00F3               	movwf	___ftge@ff2
  8671  07EC  0877               	movf	??___ftge+1,w
  8672  07ED  00F4               	movwf	___ftge@ff2+1
  8673  07EE  0878               	movf	??___ftge+2,w
  8674  07EF  00F5               	movwf	___ftge@ff2+2
  8675  07F0                     i1l2408:	
  8676  07F0  3080               	movlw	128
  8677  07F1  06F2               	xorwf	___ftge@ff1+2,f
  8678  07F2  3080               	movlw	128
  8679  07F3  06F5               	xorwf	___ftge@ff2+2,f
  8680  07F4  0875               	movf	___ftge@ff2+2,w
  8681  07F5  0272               	subwf	___ftge@ff1+2,w
  8682  07F6  1D03               	skipz
  8683  07F7  0008               	return
  8684  07F8  0874               	movf	___ftge@ff2+1,w
  8685  07F9  0271               	subwf	___ftge@ff1+1,w
  8686  07FA  1D03               	skipz
  8687  07FB  0008               	return
  8688  07FC  0873               	movf	___ftge@ff2,w
  8689  07FD  0270               	subwf	___ftge@ff1,w
  8690  07FE  0008               	return
  8691  07FF                     __end_of___ftge:	
  8692                           
  8693                           	psect	text38
  8694  1230                     __ptext38:	
  8695 ;; *************** function ___lwtoft *****************
  8696 ;; Defined at:
  8697 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  c               2    8[COMMON] unsigned int 
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;		None
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  3    8[COMMON] float 
  8704 ;; Registers used:
  8705 ;;		wreg, status,2, status,0, pclath, cstack
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8711 ;;      Params:         3       0       0       0       0
  8712 ;;      Locals:         0       0       0       0       0
  8713 ;;      Temps:          1       0       0       0       0
  8714 ;;      Totals:         4       0       0       0       0
  8715 ;;Total ram usage:        4 bytes
  8716 ;; Hardware stack levels used:    1
  8717 ;; Hardware stack levels required when called:    1
  8718 ;; This function calls:
  8719 ;;		___ftpack
  8720 ;; This function is called by:
  8721 ;;		_Fuzzy
  8722 ;;		_ISR
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           
  8727                           ;psect for function ___lwtoft
  8728  1230                     ___lwtoft:	
  8729                           
  8730                           ;incstack = 0
  8731                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8732  1230  0878               	movf	___lwtoft@c,w
  8733  1231  00F0               	movwf	___ftpack@arg
  8734  1232  0879               	movf	___lwtoft@c+1,w
  8735  1233  00F1               	movwf	___ftpack@arg+1
  8736  1234  01F2               	clrf	___ftpack@arg+2
  8737  1235  308E               	movlw	142
  8738  1236  00FB               	movwf	??___lwtoft
  8739  1237  087B               	movf	??___lwtoft,w
  8740  1238  00F3               	movwf	___ftpack@exp
  8741  1239  01F4               	clrf	___ftpack@sign
  8742  123A  160A  118A  253F   	fcall	___ftpack
  8743  123D  0870               	movf	?___ftpack,w
  8744  123E  00F8               	movwf	?___lwtoft
  8745  123F  0871               	movf	?___ftpack+1,w
  8746  1240  00F9               	movwf	?___lwtoft+1
  8747  1241  0872               	movf	?___ftpack+2,w
  8748  1242  00FA               	movwf	?___lwtoft+2
  8749  1243  0008               	return
  8750  1244                     __end_of___lwtoft:	
  8751                           
  8752                           	psect	text39
  8753  1612                     __ptext39:	
  8754 ;; *************** function ___fttol *****************
  8755 ;; Defined at:
  8756 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;  f1              3    0[COMMON] float 
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;  lval            4    9[COMMON] unsigned long 
  8761 ;;  exp1            1   13[COMMON] unsigned char 
  8762 ;;  sign1           1    8[COMMON] unsigned char 
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  4    0[COMMON] long 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2, status,0
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8772 ;;      Params:         4       0       0       0       0
  8773 ;;      Locals:         6       0       0       0       0
  8774 ;;      Temps:          4       0       0       0       0
  8775 ;;      Totals:        14       0       0       0       0
  8776 ;;Total ram usage:       14 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_Fuzzy
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           
  8786                           ;psect for function ___fttol
  8787  1612                     ___fttol:	
  8788                           
  8789                           ;incstack = 0
  8790                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8791  1612  0870               	movf	___fttol@f1,w
  8792  1613  00F4               	movwf	??___fttol
  8793  1614  0871               	movf	___fttol@f1+1,w
  8794  1615  00F5               	movwf	??___fttol+1
  8795  1616  0872               	movf	___fttol@f1+2,w
  8796  1617  00F6               	movwf	??___fttol+2
  8797  1618  1003               	clrc
  8798  1619  0D75               	rlf	??___fttol+1,w
  8799  161A  0D76               	rlf	??___fttol+2,w
  8800  161B  00F7               	movwf	??___fttol+3
  8801  161C  0877               	movf	??___fttol+3,w
  8802  161D  00FD               	movwf	___fttol@exp1
  8803  161E  08FD               	movf	___fttol@exp1,f
  8804  161F  1D03               	skipz
  8805  1620  2E2A               	goto	i1l2636
  8806  1621  3000               	movlw	0
  8807  1622  00F3               	movwf	?___fttol+3
  8808  1623  3000               	movlw	0
  8809  1624  00F2               	movwf	?___fttol+2
  8810  1625  3000               	movlw	0
  8811  1626  00F1               	movwf	?___fttol+1
  8812  1627  3000               	movlw	0
  8813  1628  00F0               	movwf	?___fttol
  8814  1629  0008               	return
  8815  162A                     i1l2636:	
  8816  162A  0870               	movf	___fttol@f1,w
  8817  162B  00F4               	movwf	??___fttol
  8818  162C  0871               	movf	___fttol@f1+1,w
  8819  162D  00F5               	movwf	??___fttol+1
  8820  162E  0872               	movf	___fttol@f1+2,w
  8821  162F  00F6               	movwf	??___fttol+2
  8822  1630  3017               	movlw	23
  8823  1631                     u311_25:	
  8824  1631  1003               	clrc
  8825  1632  0CF6               	rrf	??___fttol+2,f
  8826  1633  0CF5               	rrf	??___fttol+1,f
  8827  1634  0CF4               	rrf	??___fttol,f
  8828  1635  3EFF               	addlw	-1
  8829  1636  1D03               	skipz
  8830  1637  2E31               	goto	u311_25
  8831  1638  0874               	movf	??___fttol,w
  8832  1639  00F7               	movwf	??___fttol+3
  8833  163A  0877               	movf	??___fttol+3,w
  8834  163B  00F8               	movwf	___fttol@sign1
  8835  163C  17F1               	bsf	___fttol@f1+1,7
  8836  163D  30FF               	movlw	255
  8837  163E  05F0               	andwf	___fttol@f1,f
  8838  163F  30FF               	movlw	255
  8839  1640  05F1               	andwf	___fttol@f1+1,f
  8840  1641  3000               	movlw	0
  8841  1642  05F2               	andwf	___fttol@f1+2,f
  8842  1643  0870               	movf	___fttol@f1,w
  8843  1644  00F9               	movwf	___fttol@lval
  8844  1645  0871               	movf	___fttol@f1+1,w
  8845  1646  00FA               	movwf	___fttol@lval+1
  8846  1647  0872               	movf	___fttol@f1+2,w
  8847  1648  00FB               	movwf	___fttol@lval+2
  8848  1649  01FC               	clrf	___fttol@lval+3
  8849  164A  308E               	movlw	142
  8850  164B  02FD               	subwf	___fttol@exp1,f
  8851  164C  1FFD               	btfss	___fttol@exp1,7
  8852  164D  2E6C               	goto	i1l2656
  8853  164E  087D               	movf	___fttol@exp1,w
  8854  164F  3A80               	xorlw	128
  8855  1650  3E8F               	addlw	143
  8856  1651  1803               	skipnc
  8857  1652  2E5C               	goto	i1l2654
  8858  1653  3000               	movlw	0
  8859  1654  00F3               	movwf	?___fttol+3
  8860  1655  3000               	movlw	0
  8861  1656  00F2               	movwf	?___fttol+2
  8862  1657  3000               	movlw	0
  8863  1658  00F1               	movwf	?___fttol+1
  8864  1659  3000               	movlw	0
  8865  165A  00F0               	movwf	?___fttol
  8866  165B  0008               	return
  8867  165C                     i1l2654:	
  8868  165C  3001               	movlw	1
  8869  165D                     u314_25:	
  8870  165D  1003               	clrc
  8871  165E  0CFC               	rrf	___fttol@lval+3,f
  8872  165F  0CFB               	rrf	___fttol@lval+2,f
  8873  1660  0CFA               	rrf	___fttol@lval+1,f
  8874  1661  0CF9               	rrf	___fttol@lval,f
  8875  1662  3EFF               	addlw	-1
  8876  1663  1D03               	skipz
  8877  1664  2E5D               	goto	u314_25
  8878  1665  3001               	movlw	1
  8879  1666  00F4               	movwf	??___fttol
  8880  1667  0874               	movf	??___fttol,w
  8881  1668  07FD               	addwf	___fttol@exp1,f
  8882  1669  1903               	btfsc	3,2
  8883  166A  2E87               	goto	i1l2666
  8884  166B  2E5C               	goto	i1l2654
  8885  166C                     i1l2656:	
  8886  166C  3018               	movlw	24
  8887  166D  027D               	subwf	___fttol@exp1,w
  8888  166E  1C03               	skipc
  8889  166F  2E84               	goto	i1l2664
  8890  1670  3000               	movlw	0
  8891  1671  00F3               	movwf	?___fttol+3
  8892  1672  3000               	movlw	0
  8893  1673  00F2               	movwf	?___fttol+2
  8894  1674  3000               	movlw	0
  8895  1675  00F1               	movwf	?___fttol+1
  8896  1676  3000               	movlw	0
  8897  1677  00F0               	movwf	?___fttol
  8898  1678  0008               	return
  8899  1679                     i1l2662:	
  8900  1679  3001               	movlw	1
  8901  167A  00F4               	movwf	??___fttol
  8902  167B                     u317_25:	
  8903  167B  1003               	clrc
  8904  167C  0DF9               	rlf	___fttol@lval,f
  8905  167D  0DFA               	rlf	___fttol@lval+1,f
  8906  167E  0DFB               	rlf	___fttol@lval+2,f
  8907  167F  0DFC               	rlf	___fttol@lval+3,f
  8908  1680  0BF4               	decfsz	??___fttol,f
  8909  1681  2E7B               	goto	u317_25
  8910  1682  3001               	movlw	1
  8911  1683  02FD               	subwf	___fttol@exp1,f
  8912  1684                     i1l2664:	
  8913  1684  08FD               	movf	___fttol@exp1,f
  8914  1685  1D03               	skipz
  8915  1686  2E79               	goto	i1l2662
  8916  1687                     i1l2666:	
  8917  1687  0878               	movf	___fttol@sign1,w
  8918  1688  1903               	btfsc	3,2
  8919  1689  2E95               	goto	i1l2670
  8920  168A  09F9               	comf	___fttol@lval,f
  8921  168B  09FA               	comf	___fttol@lval+1,f
  8922  168C  09FB               	comf	___fttol@lval+2,f
  8923  168D  09FC               	comf	___fttol@lval+3,f
  8924  168E  0AF9               	incf	___fttol@lval,f
  8925  168F  1903               	skipnz
  8926  1690  0AFA               	incf	___fttol@lval+1,f
  8927  1691  1903               	skipnz
  8928  1692  0AFB               	incf	___fttol@lval+2,f
  8929  1693  1903               	skipnz
  8930  1694  0AFC               	incf	___fttol@lval+3,f
  8931  1695                     i1l2670:	
  8932  1695  087C               	movf	___fttol@lval+3,w
  8933  1696  00F3               	movwf	?___fttol+3
  8934  1697  087B               	movf	___fttol@lval+2,w
  8935  1698  00F2               	movwf	?___fttol+2
  8936  1699  087A               	movf	___fttol@lval+1,w
  8937  169A  00F1               	movwf	?___fttol+1
  8938  169B  0879               	movf	___fttol@lval,w
  8939  169C  00F0               	movwf	?___fttol
  8940  169D  0008               	return
  8941  169E                     __end_of___fttol:	
  8942                           
  8943                           	psect	text40
  8944  172D                     __ptext40:	
  8945 ;; *************** function ___ftmul *****************
  8946 ;; Defined at:
  8947 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  f1              3   23[BANK0 ] float 
  8950 ;;  f2              3   26[BANK0 ] float 
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;  f3_as_produc    3   34[BANK0 ] unsigned um
  8953 ;;  sign            1   38[BANK0 ] unsigned char 
  8954 ;;  cntr            1   37[BANK0 ] unsigned char 
  8955 ;;  exp             1   33[BANK0 ] unsigned char 
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  3   23[BANK0 ] float 
  8958 ;; Registers used:
  8959 ;;		wreg, status,2, status,0, pclath, cstack
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8965 ;;      Params:         0       6       0       0       0
  8966 ;;      Locals:         0       6       0       0       0
  8967 ;;      Temps:          0       4       0       0       0
  8968 ;;      Totals:         0      16       0       0       0
  8969 ;;Total ram usage:       16 bytes
  8970 ;; Hardware stack levels used:    1
  8971 ;; Hardware stack levels required when called:    1
  8972 ;; This function calls:
  8973 ;;		___ftpack
  8974 ;; This function is called by:
  8975 ;;		_Fuzzy
  8976 ;; This function uses a non-reentrant model
  8977 ;;
  8978                           
  8979                           
  8980                           ;psect for function ___ftmul
  8981  172D                     ___ftmul:	
  8982                           
  8983                           ;incstack = 0
  8984                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8985  172D  1283               	bcf	3,5	;RP0=0, select bank0
  8986  172E  1303               	bcf	3,6	;RP1=0, select bank0
  8987  172F  0837               	movf	___ftmul@f1,w
  8988  1730  00BD               	movwf	??___ftmul
  8989  1731  0838               	movf	___ftmul@f1+1,w
  8990  1732  00BE               	movwf	??___ftmul+1
  8991  1733  0839               	movf	___ftmul@f1+2,w
  8992  1734  00BF               	movwf	??___ftmul+2
  8993  1735  1003               	clrc
  8994  1736  0D3E               	rlf	??___ftmul+1,w
  8995  1737  0D3F               	rlf	??___ftmul+2,w
  8996  1738  00C0               	movwf	??___ftmul+3
  8997  1739  0840               	movf	??___ftmul+3,w
  8998  173A  00C1               	movwf	___ftmul@exp
  8999  173B  08C1               	movf	___ftmul@exp,f
  9000  173C  1D03               	skipz
  9001  173D  2F45               	goto	i1l2586
  9002  173E  3000               	movlw	0
  9003  173F  00B7               	movwf	?___ftmul
  9004  1740  3000               	movlw	0
  9005  1741  00B8               	movwf	?___ftmul+1
  9006  1742  3000               	movlw	0
  9007  1743  00B9               	movwf	?___ftmul+2
  9008  1744  0008               	return
  9009  1745                     i1l2586:	
  9010  1745  083A               	movf	___ftmul@f2,w
  9011  1746  00BD               	movwf	??___ftmul
  9012  1747  083B               	movf	___ftmul@f2+1,w
  9013  1748  00BE               	movwf	??___ftmul+1
  9014  1749  083C               	movf	___ftmul@f2+2,w
  9015  174A  00BF               	movwf	??___ftmul+2
  9016  174B  1003               	clrc
  9017  174C  0D3E               	rlf	??___ftmul+1,w
  9018  174D  0D3F               	rlf	??___ftmul+2,w
  9019  174E  00C0               	movwf	??___ftmul+3
  9020  174F  0840               	movf	??___ftmul+3,w
  9021  1750  00C6               	movwf	___ftmul@sign
  9022  1751  08C6               	movf	___ftmul@sign,f
  9023  1752  1D03               	skipz
  9024  1753  2F5B               	goto	i1l2592
  9025  1754  3000               	movlw	0
  9026  1755  00B7               	movwf	?___ftmul
  9027  1756  3000               	movlw	0
  9028  1757  00B8               	movwf	?___ftmul+1
  9029  1758  3000               	movlw	0
  9030  1759  00B9               	movwf	?___ftmul+2
  9031  175A  0008               	return
  9032  175B                     i1l2592:	
  9033  175B  0846               	movf	___ftmul@sign,w
  9034  175C  3E7B               	addlw	123
  9035  175D  00BD               	movwf	??___ftmul
  9036  175E  083D               	movf	??___ftmul,w
  9037  175F  07C1               	addwf	___ftmul@exp,f
  9038  1760  0837               	movf	___ftmul@f1,w
  9039  1761  00BD               	movwf	??___ftmul
  9040  1762  0838               	movf	___ftmul@f1+1,w
  9041  1763  00BE               	movwf	??___ftmul+1
  9042  1764  0839               	movf	___ftmul@f1+2,w
  9043  1765  00BF               	movwf	??___ftmul+2
  9044  1766  3010               	movlw	16
  9045  1767                     u298_25:	
  9046  1767  1003               	clrc
  9047  1768  0CBF               	rrf	??___ftmul+2,f
  9048  1769  0CBE               	rrf	??___ftmul+1,f
  9049  176A  0CBD               	rrf	??___ftmul,f
  9050  176B  3EFF               	addlw	-1
  9051  176C  1D03               	skipz
  9052  176D  2F67               	goto	u298_25
  9053  176E  083D               	movf	??___ftmul,w
  9054  176F  00C0               	movwf	??___ftmul+3
  9055  1770  0840               	movf	??___ftmul+3,w
  9056  1771  00C6               	movwf	___ftmul@sign
  9057  1772  083A               	movf	___ftmul@f2,w
  9058  1773  00BD               	movwf	??___ftmul
  9059  1774  083B               	movf	___ftmul@f2+1,w
  9060  1775  00BE               	movwf	??___ftmul+1
  9061  1776  083C               	movf	___ftmul@f2+2,w
  9062  1777  00BF               	movwf	??___ftmul+2
  9063  1778  3010               	movlw	16
  9064  1779                     u299_25:	
  9065  1779  1003               	clrc
  9066  177A  0CBF               	rrf	??___ftmul+2,f
  9067  177B  0CBE               	rrf	??___ftmul+1,f
  9068  177C  0CBD               	rrf	??___ftmul,f
  9069  177D  3EFF               	addlw	-1
  9070  177E  1D03               	skipz
  9071  177F  2F79               	goto	u299_25
  9072  1780  083D               	movf	??___ftmul,w
  9073  1781  00C0               	movwf	??___ftmul+3
  9074  1782  0840               	movf	??___ftmul+3,w
  9075  1783  06C6               	xorwf	___ftmul@sign,f
  9076  1784  3080               	movlw	128
  9077  1785  00BD               	movwf	??___ftmul
  9078  1786  083D               	movf	??___ftmul,w
  9079  1787  05C6               	andwf	___ftmul@sign,f
  9080  1788  17B8               	bsf	___ftmul@f1+1,7
  9081  1789  17BB               	bsf	___ftmul@f2+1,7
  9082  178A  30FF               	movlw	255
  9083  178B  05BA               	andwf	___ftmul@f2,f
  9084  178C  30FF               	movlw	255
  9085  178D  05BB               	andwf	___ftmul@f2+1,f
  9086  178E  3000               	movlw	0
  9087  178F  05BC               	andwf	___ftmul@f2+2,f
  9088  1790  3000               	movlw	0
  9089  1791  00C2               	movwf	___ftmul@f3_as_product
  9090  1792  3000               	movlw	0
  9091  1793  00C3               	movwf	___ftmul@f3_as_product+1
  9092  1794  3000               	movlw	0
  9093  1795  00C4               	movwf	___ftmul@f3_as_product+2
  9094  1796  3007               	movlw	7
  9095  1797  00BD               	movwf	??___ftmul
  9096  1798  083D               	movf	??___ftmul,w
  9097  1799  00C5               	movwf	___ftmul@cntr
  9098  179A                     i1l2604:	
  9099  179A  1C37               	btfss	___ftmul@f1,0
  9100  179B  2FAA               	goto	i1l2608
  9101  179C  083A               	movf	___ftmul@f2,w
  9102  179D  07C2               	addwf	___ftmul@f3_as_product,f
  9103  179E  083B               	movf	___ftmul@f2+1,w
  9104  179F  1103               	clrz
  9105  17A0  1803               	skipnc
  9106  17A1  0A3B               	incf	___ftmul@f2+1,w
  9107  17A2  1D03               	btfss	3,2
  9108  17A3  07C3               	addwf	___ftmul@f3_as_product+1,f
  9109  17A4  083C               	movf	___ftmul@f2+2,w
  9110  17A5  1103               	clrz
  9111  17A6  1803               	skipnc
  9112  17A7  0A3C               	incf	___ftmul@f2+2,w
  9113  17A8  1D03               	btfss	3,2
  9114  17A9  07C4               	addwf	___ftmul@f3_as_product+2,f
  9115  17AA                     i1l2608:	
  9116  17AA  3001               	movlw	1
  9117  17AB                     u302_25:	
  9118  17AB  1003               	clrc
  9119  17AC  0CB9               	rrf	___ftmul@f1+2,f
  9120  17AD  0CB8               	rrf	___ftmul@f1+1,f
  9121  17AE  0CB7               	rrf	___ftmul@f1,f
  9122  17AF  3EFF               	addlw	-1
  9123  17B0  1D03               	skipz
  9124  17B1  2FAB               	goto	u302_25
  9125  17B2  3001               	movlw	1
  9126  17B3                     u303_25:	
  9127  17B3  1003               	clrc
  9128  17B4  0DBA               	rlf	___ftmul@f2,f
  9129  17B5  0DBB               	rlf	___ftmul@f2+1,f
  9130  17B6  0DBC               	rlf	___ftmul@f2+2,f
  9131  17B7  3EFF               	addlw	-1
  9132  17B8  1D03               	skipz
  9133  17B9  2FB3               	goto	u303_25
  9134  17BA  3001               	movlw	1
  9135  17BB  02C5               	subwf	___ftmul@cntr,f
  9136  17BC  1D03               	btfss	3,2
  9137  17BD  2F9A               	goto	i1l2604
  9138  17BE  3009               	movlw	9
  9139  17BF  00BD               	movwf	??___ftmul
  9140  17C0  083D               	movf	??___ftmul,w
  9141  17C1  00C5               	movwf	___ftmul@cntr
  9142  17C2                     i1l2616:	
  9143  17C2  1C37               	btfss	___ftmul@f1,0
  9144  17C3  2FD2               	goto	i1l2620
  9145  17C4  083A               	movf	___ftmul@f2,w
  9146  17C5  07C2               	addwf	___ftmul@f3_as_product,f
  9147  17C6  083B               	movf	___ftmul@f2+1,w
  9148  17C7  1103               	clrz
  9149  17C8  1803               	skipnc
  9150  17C9  0A3B               	incf	___ftmul@f2+1,w
  9151  17CA  1D03               	btfss	3,2
  9152  17CB  07C3               	addwf	___ftmul@f3_as_product+1,f
  9153  17CC  083C               	movf	___ftmul@f2+2,w
  9154  17CD  1103               	clrz
  9155  17CE  1803               	skipnc
  9156  17CF  0A3C               	incf	___ftmul@f2+2,w
  9157  17D0  1D03               	btfss	3,2
  9158  17D1  07C4               	addwf	___ftmul@f3_as_product+2,f
  9159  17D2                     i1l2620:	
  9160  17D2  3001               	movlw	1
  9161  17D3                     u307_25:	
  9162  17D3  1003               	clrc
  9163  17D4  0CB9               	rrf	___ftmul@f1+2,f
  9164  17D5  0CB8               	rrf	___ftmul@f1+1,f
  9165  17D6  0CB7               	rrf	___ftmul@f1,f
  9166  17D7  3EFF               	addlw	-1
  9167  17D8  1D03               	skipz
  9168  17D9  2FD3               	goto	u307_25
  9169  17DA  3001               	movlw	1
  9170  17DB                     u308_25:	
  9171  17DB  1003               	clrc
  9172  17DC  0CC4               	rrf	___ftmul@f3_as_product+2,f
  9173  17DD  0CC3               	rrf	___ftmul@f3_as_product+1,f
  9174  17DE  0CC2               	rrf	___ftmul@f3_as_product,f
  9175  17DF  3EFF               	addlw	-1
  9176  17E0  1D03               	skipz
  9177  17E1  2FDB               	goto	u308_25
  9178  17E2  3001               	movlw	1
  9179  17E3  02C5               	subwf	___ftmul@cntr,f
  9180  17E4  1D03               	btfss	3,2
  9181  17E5  2FC2               	goto	i1l2616
  9182  17E6  0842               	movf	___ftmul@f3_as_product,w
  9183  17E7  00F0               	movwf	___ftpack@arg
  9184  17E8  0843               	movf	___ftmul@f3_as_product+1,w
  9185  17E9  00F1               	movwf	___ftpack@arg+1
  9186  17EA  0844               	movf	___ftmul@f3_as_product+2,w
  9187  17EB  00F2               	movwf	___ftpack@arg+2
  9188  17EC  0841               	movf	___ftmul@exp,w
  9189  17ED  00BD               	movwf	??___ftmul
  9190  17EE  083D               	movf	??___ftmul,w
  9191  17EF  00F3               	movwf	___ftpack@exp
  9192  17F0  0846               	movf	___ftmul@sign,w
  9193  17F1  00BE               	movwf	??___ftmul+1
  9194  17F2  083E               	movf	??___ftmul+1,w
  9195  17F3  00F4               	movwf	___ftpack@sign
  9196  17F4  160A  118A  253F   	fcall	___ftpack
  9197  17F7  0870               	movf	?___ftpack,w
  9198  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  9199  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  9200  17FA  00B7               	movwf	?___ftmul
  9201  17FB  0871               	movf	?___ftpack+1,w
  9202  17FC  00B8               	movwf	?___ftmul+1
  9203  17FD  0872               	movf	?___ftpack+2,w
  9204  17FE  00B9               	movwf	?___ftmul+2
  9205  17FF  0008               	return
  9206  1800                     __end_of___ftmul:	
  9207                           
  9208                           	psect	text41
  9209  153F                     __ptext41:	
  9210 ;; *************** function ___ftpack *****************
  9211 ;; Defined at:
  9212 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;  arg             3    0[COMMON] unsigned um
  9215 ;;  exp             1    3[COMMON] unsigned char 
  9216 ;;  sign            1    4[COMMON] unsigned char 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;		None
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  3    0[COMMON] float 
  9221 ;; Registers used:
  9222 ;;		wreg, status,2, status,0
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9228 ;;      Params:         5       0       0       0       0
  9229 ;;      Locals:         0       0       0       0       0
  9230 ;;      Temps:          3       0       0       0       0
  9231 ;;      Totals:         8       0       0       0       0
  9232 ;;Total ram usage:        8 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; This function calls:
  9235 ;;		Nothing
  9236 ;; This function is called by:
  9237 ;;		___ftadd
  9238 ;;		___ftdiv
  9239 ;;		___ftmul
  9240 ;;		___lwtoft
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           
  9245                           ;psect for function ___ftpack
  9246  153F                     ___ftpack:	
  9247                           
  9248                           ;incstack = 0
  9249                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9250  153F  0873               	movf	___ftpack@exp,w
  9251  1540  1903               	btfsc	3,2
  9252  1541  2D47               	goto	i1l2260
  9253  1542  0872               	movf	___ftpack@arg+2,w
  9254  1543  0471               	iorwf	___ftpack@arg+1,w
  9255  1544  0470               	iorwf	___ftpack@arg,w
  9256  1545  1D03               	skipz
  9257  1546  2D5A               	goto	i1l2266
  9258  1547                     i1l2260:	
  9259  1547  3000               	movlw	0
  9260  1548  00F0               	movwf	?___ftpack
  9261  1549  3000               	movlw	0
  9262  154A  00F1               	movwf	?___ftpack+1
  9263  154B  3000               	movlw	0
  9264  154C  00F2               	movwf	?___ftpack+2
  9265  154D  0008               	return
  9266  154E                     i1l2264:	
  9267  154E  3001               	movlw	1
  9268  154F  00F5               	movwf	??___ftpack
  9269  1550  0875               	movf	??___ftpack,w
  9270  1551  07F3               	addwf	___ftpack@exp,f
  9271  1552  3001               	movlw	1
  9272  1553                     u216_25:	
  9273  1553  1003               	clrc
  9274  1554  0CF2               	rrf	___ftpack@arg+2,f
  9275  1555  0CF1               	rrf	___ftpack@arg+1,f
  9276  1556  0CF0               	rrf	___ftpack@arg,f
  9277  1557  3EFF               	addlw	-1
  9278  1558  1D03               	skipz
  9279  1559  2D53               	goto	u216_25
  9280  155A                     i1l2266:	
  9281  155A  30FE               	movlw	254
  9282  155B  0572               	andwf	___ftpack@arg+2,w
  9283  155C  1903               	btfsc	3,2
  9284  155D  2D75               	goto	i1l763
  9285  155E  2D4E               	goto	i1l2264
  9286  155F                     i1l2268:	
  9287  155F  3001               	movlw	1
  9288  1560  00F5               	movwf	??___ftpack
  9289  1561  0875               	movf	??___ftpack,w
  9290  1562  07F3               	addwf	___ftpack@exp,f
  9291  1563  3001               	movlw	1
  9292  1564  07F0               	addwf	___ftpack@arg,f
  9293  1565  3000               	movlw	0
  9294  1566  1803               	skipnc
  9295  1567  3001               	movlw	1
  9296  1568  07F1               	addwf	___ftpack@arg+1,f
  9297  1569  3000               	movlw	0
  9298  156A  1803               	skipnc
  9299  156B  3001               	movlw	1
  9300  156C  07F2               	addwf	___ftpack@arg+2,f
  9301  156D  3001               	movlw	1
  9302  156E                     u218_25:	
  9303  156E  1003               	clrc
  9304  156F  0CF2               	rrf	___ftpack@arg+2,f
  9305  1570  0CF1               	rrf	___ftpack@arg+1,f
  9306  1571  0CF0               	rrf	___ftpack@arg,f
  9307  1572  3EFF               	addlw	-1
  9308  1573  1D03               	skipz
  9309  1574  2D6E               	goto	u218_25
  9310  1575                     i1l763:	
  9311  1575  30FF               	movlw	255
  9312  1576  0572               	andwf	___ftpack@arg+2,w
  9313  1577  1903               	btfsc	3,2
  9314  1578  2D84               	goto	i1l2276
  9315  1579  2D5F               	goto	i1l2268
  9316  157A                     i1l2274:	
  9317  157A  3001               	movlw	1
  9318  157B  02F3               	subwf	___ftpack@exp,f
  9319  157C  3001               	movlw	1
  9320  157D                     u220_25:	
  9321  157D  1003               	clrc
  9322  157E  0DF0               	rlf	___ftpack@arg,f
  9323  157F  0DF1               	rlf	___ftpack@arg+1,f
  9324  1580  0DF2               	rlf	___ftpack@arg+2,f
  9325  1581  3EFF               	addlw	-1
  9326  1582  1D03               	skipz
  9327  1583  2D7D               	goto	u220_25
  9328  1584                     i1l2276:	
  9329  1584  1FF1               	btfss	___ftpack@arg+1,7
  9330  1585  2D7A               	goto	i1l2274
  9331  1586  1873               	btfsc	___ftpack@exp,0
  9332  1587  2D8E               	goto	i1l769
  9333  1588  30FF               	movlw	255
  9334  1589  05F0               	andwf	___ftpack@arg,f
  9335  158A  307F               	movlw	127
  9336  158B  05F1               	andwf	___ftpack@arg+1,f
  9337  158C  30FF               	movlw	255
  9338  158D  05F2               	andwf	___ftpack@arg+2,f
  9339  158E                     i1l769:	
  9340  158E  1003               	clrc
  9341  158F  0CF3               	rrf	___ftpack@exp,f
  9342  1590  0873               	movf	___ftpack@exp,w
  9343  1591  00F5               	movwf	??___ftpack
  9344  1592  01F6               	clrf	??___ftpack+1
  9345  1593  01F7               	clrf	??___ftpack+2
  9346  1594  3010               	movlw	16
  9347  1595                     u223_25:	
  9348  1595  1003               	clrc
  9349  1596  0DF5               	rlf	??___ftpack,f
  9350  1597  0DF6               	rlf	??___ftpack+1,f
  9351  1598  0DF7               	rlf	??___ftpack+2,f
  9352  1599  3EFF               	addlw	-1
  9353  159A  1D03               	skipz
  9354  159B  2D95               	goto	u223_25
  9355  159C  0875               	movf	??___ftpack,w
  9356  159D  04F0               	iorwf	___ftpack@arg,f
  9357  159E  0876               	movf	??___ftpack+1,w
  9358  159F  04F1               	iorwf	___ftpack@arg+1,f
  9359  15A0  0877               	movf	??___ftpack+2,w
  9360  15A1  04F2               	iorwf	___ftpack@arg+2,f
  9361  15A2  0874               	movf	___ftpack@sign,w
  9362  15A3  1903               	btfsc	3,2
  9363  15A4  0008               	return
  9364  15A5  17F2               	bsf	___ftpack@arg+2,7
  9365  15A6  0008               	return
  9366  15A7                     __end_of___ftpack:	
  9367  007E                     btemp	set	126	;btemp
  9368  007E                     wtemp	set	126
  9369  007E                     wtemp0	set	126
  9370  0080                     wtemp1	set	128
  9371  0082                     wtemp2	set	130
  9372  0084                     wtemp3	set	132
  9373  0086                     wtemp4	set	134
  9374  0088                     wtemp5	set	136
  9375  007F                     wtemp6	set	127
  9376  007E                     ttemp	set	126
  9377  007E                     ttemp0	set	126
  9378  0081                     ttemp1	set	129
  9379  0084                     ttemp2	set	132
  9380  0087                     ttemp3	set	135
  9381  007F                     ttemp4	set	127
  9382  007E                     ltemp	set	126
  9383  007E                     ltemp0	set	126
  9384  0082                     ltemp1	set	130
  9385  0086                     ltemp2	set	134
  9386  0080                     ltemp3	set	128


Data Sizes:
    Strings     193
    Constant    10
    Data        5
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      80
    BANK1            80     34      79
    BANK3            96      0      23
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1253$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[8]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[11]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftadd
    _Fuzzy->___fttol
    _trimf->___ftadd
    _trapmf->___ftadd
    ___ftdiv->___ftadd
    ___ftadd->___ftpack
    _max_val->___ftge
    ___lwtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4553
                                             31 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2129
                                             14 BANK1     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     296
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     366
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              1 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   55080
                                             61 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               20    20      0   51650
                                             41 BANK0     20    20      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   13966
                                             23 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14823
                                             23 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                              7 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5550
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                             23 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      17       9       24.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C4      12        0.0%
ABS                  0      0      C4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 03 15:28:55 2022

           ?i1_PWM_DutyCycle2 0070                             _x 0064                             _y 0067  
                           pc 0002                   ?_LCD_Cursor 00CA       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 00B2                            fsr 0004           ___wmul@multiplicand 00CC  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0026  
                ___ftadd@exp2 0025                 _contagens_tm0 00BC                  ___ftadd@sign 0024  
                         l206 0DC0                           l231 1216                           l501 06DD  
                         l602 139E                           l483 0618                           l657 16B0  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0E6C  
                         _rpm 00C0                           fsr0 0004                           _pwm 006C  
                         _sum 00AF    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00CE                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0031                  ___ftdiv@sign 0036  
                        l3010 12D4            LCD_WriteString@Str 00CC                          l3102 0711  
                        l3110 0727                          l3024 13E0                          l3112 072B  
                        l3050 063A                          l3132 0753                          l3124 074F  
                        l3060 0678                          l3044 061D                          l3118 0740  
                        l3062 068F                          l3046 0628                          l3038 0614  
                        l3134 05F2                          l3072 06A8                          l3136 079B  
                        l2530 1396                          l2524 122E                          l3092 06FC  
                        l3084 06CF                          l3076 06AE                          l2550 16C1  
                        l2710 1458                          l3094 0700                          l2560 16E1  
                        l2714 1466                          l2572 1716                          l2708 144A  
                        l2558 16D1                          l2718 1471                          l2576 1724  
                        l2568 1709                          l2904 1411                          l2692 14E4  
                        l2684 14C0                          l2686 14CE                          l2696 14EF  
                        STR_1 08AF                          STR_2 08BD                          STR_3 08BD  
                        STR_4 08BD                          STR_5 08BD                          STR_6 08BD  
                        STR_7 08A1                          STR_8 0893                          STR_9 08BD  
                        u3215 14C3                          u3305 145E                          u3235 14CF  
                        u3315 1467                          u3245 14DB                          u4207 15DB  
                        u3255 14E5                          u4217 15E7                          u4227 15F5  
                        u4147 0DB9                          u4237 1603                          u3605 131C  
                        u3285 144D                          u4157 0E65                          u4247 160F  
                        u4167 126C                          u4257 12E0                          u4177 15B1  
                        u4267 13C3                          u4187 15C1                          u2915 16E3  
                        u3635 1501                          u2835 139F                          u4277 13D1  
                        u4197 15CF                          u2925 16F8                          u2845 13A6  
                        u3725 06C5                          u4287 13DD                          u2935 170A  
                        u4297 1255                          u3665 12FB                          u3765 06EC  
                        u2895 16D5                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 0D1B                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 0061  
                        btemp 007E              __end_of_ADC_Init 08EE                          ltemp 007E  
                        start 0012                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 125B                  ___ftmul@cntr 0045  
                ___ftmul@sign 0046       __end_of_USART_WriteChar 1220                         ??_ISR 005D  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 1612               __end_of___aldiv 172D                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 0AAD                         STR_10 0884  
                       STR_11 0842                         STR_12 085F                         STR_13 0873  
                       STR_14 08D6                         STR_15 08D6                         STR_16 08C5  
                       STR_17 08D0                 __CFG_WDTE$OFF 0000                         STR_18 08C8  
                       STR_19 081A               __end_of___ftdiv 09A6               __end_of___ftneg 11F0  
             __end_of___ftmul 1800                         _T1CON 0010               __end_of___fttol 169E  
             __end_of___lwdiv 14F6                         i1l120 0BC2                         i1l130 0D12  
                       i1l231 11F1                         i1l161 027C                         i1l154 013A  
                       i1l191 0EFC                         i1l168 039B               __end_of___lwmod 1478  
                       i1l602 1355                         i1l186 0FF3                         i1l763 1575  
                       i1l792 0A4E                         i1l769 158E                         _RCREG 001A  
                       _TMR1H 000F                         _TMR1L 000E                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _TXREG 0019                 __CFG_PWRTE$ON 0000  
                       _Fuzzy 0053                         _derro 0190               __end_of_dpowers 081A  
             __end_of_max_val 12C6               __end_of_isdigit 1230                 ___ftpack@sign 0074  
                       _trimf 0AAD                __CFG_BOREN$OFF 0000           __size_of_LCD_Cursor 0020  
                       pclath 000A              __end_of_PWM_Init 1392              __end_ofi1___wmul 136E  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003           i1___wmul@multiplier 0078                         wtemp0 007E  
                       wtemp1 0080                         wtemp2 0082                         wtemp3 0084  
                       wtemp4 0086                         wtemp5 0088                         wtemp6 007F  
             __end_of_sprintf 07A2            __size_ofi1___lwdiv 003E                ??_LCD_WriteCmd 00CA  
              ?_LCD_WriteData 0070                   ?_USART_Init 00D9         i1TIMER0_Set@contagens 0070  
             __initialization 0015                  __end_of_main 0E6C                        ??_main 00E9  
               ___fttol@sign1 0078                  ?_TIMER0_Init 0070             __end_of_LCD_Clear 13E0  
                  Fuzzy@a_241 004E                    Fuzzy@a_242 0050                    Fuzzy@a_243 0052  
                      ?_Fuzzy 0070                    Fuzzy@reduz 0057                        _ADRESH 001E  
                      _ADRESL 009E                        _EEDATA 010C                        _CCPR1L 0015  
                      _CCPR2L 001B                        _EECON2 018D              __end_of___ftpack 15A7  
                      ?_trimf 0037                        i1l2304 09E5                        i1l2322 0A14  
                      i1l2260 1547                        i1l2404 07C9                        i1l2340 0A60  
                      i1l2324 0A20                        i1l2316 09FF                        i1l3300 0FEF  
                      i1l3220 0EBD                        i1l2334 0A3E                        i1l2326 0A25  
                      i1l3214 0EA6                        i1l2264 154E                        i1l2408 07F0  
                      i1l2344 0A72                        i1l2336 0A4A                        i1l2328 0A29  
                      i1l3208 0E8F                        i1l2274 157A                        i1l2266 155A  
                      i1l2354 0A95                        i1l2370 091C                        i1l2450 0BA5  
                      i1l3154 134D                        i1l3250 0F2C                        i1l3226 0ED4  
                      i1l2276 1584                        i1l2268 155F                        i1l2620 17D2  
                      i1l2604 179A                        i1l2364 0906                        i1l2444 0B24  
                      i1l3244 0F15                        i1l2294 09CF                        i1l3182 14A4  
                      i1l3174 1480                        i1l3262 0F5A                        i1l3238 0EFE  
                      i1l2616 17C2                        i1l2608 17AA                        i1l2392 0980  
                      i1l2384 0961                        i1l2480 0CF5                        i1l3176 148E  
                      i1l3256 0F43                        i1l2298 09D6                        i1l2474 0C74  
                      i1l2802 02F4                        i1l3186 14AF                        i1l3274 0F8E  
                      i1l2636 162A                        i1l2468 0C42                        i1l2812 0380  
                      i1l2732 1328                        i1l3268 0F71                        i1l2670 1695  
                      i1l2662 1679                        i1l2654 165C                        i1l2830 0419  
                      i1l2806 033B                        i1l2750 0102                        i1l3286 0FAB  
                      i1l2592 175B                        i1l2664 1684                        i1l2656 166C  
                      i1l2840 04AB                        i1l2760 013B                        i1l2586 1745  
                      i1l2666 1687                        i1l2850 04D7                        i1l2834 0466  
                      i1l2818 039C                        i1l2754 011F                        i1l3298 0FEE  
                      i1l2860 0522                        i1l2772 01B8                        i1l2846 04BA  
                      i1l2790 027D                        i1l2782 024C                        i1l2856 0509  
                      i1l2776 0207                        i1l2892 12A5                        i1l2884 1296  
                      u220_25 157D                        u302_25 17AB                        u223_25 1595  
                      u303_25 17B3                        u311_25 1631                        u216_25 1553  
                      u240_25 0A2A                        u218_25 156E                        u314_25 165D  
                      u234_25 0A00                        u307_25 17D3                        u243_25 0A3F  
                      u251_25 092E                        u260_21 07E3                        u260_22 07E4  
                      u260_23 07E9                        u260_24 07EA                        u308_25 17DB  
                      u252_25 0940                        u317_25 167B                        u237_25 0A15  
                      u253_25 0962                        u341_25 024A                        u254_25 0973  
                      u334_25 1283                        u350_25 0417                        u255_25 0981  
                      u352_25 04A9                        u353_25 04B8                        u345_25 02F2  
                      u258_21 07BC              __end_of___lwtoft 1244                        u258_22 07BD  
                      u258_23 07C2                        u258_24 07C3                        u347_25 037E  
                      u339_25 01B6                        u357_25 0520           __size_of_TIMER0_Set 0008  
                      u391_25 1483                        u393_25 148F                        u298_25 1767  
                      u394_25 149B                        u299_25 1779                        u395_25 14A5  
                      u387_25 1356                        u388_25 135D                        _SSPADD 0093  
                      _SSPBUF 0013                        Fuzzy@a 004C              LCD_WriteCmd@Byte 00CB  
         i1_USART_WriteString 1328                        ___ftge 07A2                     ??___aldiv 00D2  
                      ___wmul 1392                     ??___ftadd 0020                _PWM_DutyCycle1 12E6  
              _PWM_DutyCycle2 1307              ?_USART_WriteChar 0070                     ??___ftdiv 002D  
                   ??___ftneg 0073                        _deltaV 006A                     ??___ftmul 003D  
                   ??___fttol 0074                     ??___lwdiv 00CE                     ??___lwmod 00D6  
                      _fitemp 00A3         USART_ReceiveChar@byte 0074                        _trapmf 0BCB  
                      _pulsos 00BE                        _status 00C4         ___ftmul@f3_as_product 0042  
                   ??_max_val 007C             __end_ofi1___lwdiv 14B6                     ??_isdigit 00CA  
                   ?_ADC_Init 0070                        saved_w 007E          ?i1_USART_WriteString 0071  
         __size_of_USART_Init 0049                        trimf@a 003A                        trimf@b 003D  
                      trimf@c 0040                        trimf@x 0037                     ??_sprintf 00DB  
               ?i1_TIMER0_Set 0070       __end_of__initialization 004F                     ?_LCD_Init 0070  
                  ___ftadd@f1 0078                    ___ftadd@f2 007B               ??_LCD_WriteData 00CA  
                  ___ftge@ff1 0070                    ___ftge@ff2 0073                    ___ftdiv@f1 002A  
                  ___ftdiv@f2 0027                    ___ftdiv@f3 0032                    ___ftneg@f1 0070  
      __end_of_PWM_DutyCycle1 1307        __end_of_PWM_DutyCycle2 1328                    ___ftmul@f1 0037  
                  ___ftmul@f2 003A                    ___fttol@f1 0070                __pcstackCOMMON 0070  
               __end_of_Fuzzy 05EB                  __pidataBANK0 11DD                  __pidataBANK1 11DF  
               LCD_Cursor@Col 00CA                 LCD_Cursor@Row 00CC                  ??_LCD_Cursor 00CB  
             _LCD_WriteString 13E0                 __end_of_trimf 0BCB                    ___lwtoft@c 0078  
                   ?_PWM_Init 0070                     ?i1___wmul 0078                _OPTION_REGbits 0081  
                  ??_ADC_Init 00CA          __end_of_LCD_WriteCmd 125B         ??i1_USART_WriteString 0073  
                     ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070  
                sprintf@width 00E5                       ??_trimf 007E                    __pbssBANK0 0061  
                  __pbssBANK1 00A0                    __pbssBANK3 0190            __end_of_LCD_Cursor 12E6  
                  ??_LCD_Init 00CC         i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 00CA  
             ?_PWM_DutyCycle2 00CA                    __pmaintext 0D1B                   Fuzzy@mantem 0054  
                     ?___ftge 0070                       ?___wmul 00CA                    __pintentry 0004  
                ??_TIMER0_Set 00CA                       _CCP1CON 0017                       _CCP2CON 001D  
                   ?___ftpack 0070                       ?_trapmf 0037                    ??_PWM_Init 00CA  
                  ??i1___wmul 007C                     ?___lwtoft 0078          __size_of_TIMER0_Init 000B  
                     _SSPCON2 0091                    __stringtab 0800            __end_of_TIMER0_Set 1200  
     __end_of_LCD_WriteString 1411                     _ADCResult 00B8                  ??_USART_Init 00DD  
           LCD_WriteData@Byte 00CB                       ___aldiv 169E               __size_of___ftge 005D  
                     ___ftadd 09A6                       ___ftdiv 08EE                       ___ftneg 11E8  
             __size_of___wmul 0025                       ___ftmul 172D                       ___fttol 1612  
                     ___lwdiv 14B6                       ___lwmod 1442                    ??___ftpack 0075  
                     __ptext1 05EB                       __ptext2 1220                       __ptext3 1392  
                     __ptext4 1442                       __ptext5 14B6                       __ptext6 1411  
                     __ptext7 1213                       __ptext8 14F6                       __ptext9 169E  
                  _pas_cooler 006E                    ??___lwtoft 007B               __size_of_trapmf 0150  
                __size_of_ISR 0194                     _T1CONbits 0010                       _dpowers 0810  
           i1___lwdiv@divisor 0070                     _T2CONbits 0012                       _max_val 12A8  
                     _isdigit 1220             i1___lwdiv@counter 0077              ___aldiv@dividend 00CE  
                   _LCD_Clear 13B7            __end_of_USART_Init 153F                       _sprintf 05EB  
                     clrloop0 1201          end_of_initialization 004F                     _RCSTAbits 0018  
            ___aldiv@quotient 00D5                       trapmf@a 003A                       trapmf@b 003D  
                     trapmf@c 0040                       trapmf@d 0043                       trapmf@x 0037  
                     trimf@ua 0043          __end_ofi1_TIMER0_Set 11E8         i1___wmul@multiplicand 007A  
       __size_of_LCD_WriteCmd 0017                     _PORTBbits 0006                     _PORTEbits 0009  
                  _setpointUI 00C2                    ?_LCD_Clear 0070              i1_PWM_DutyCycle2 1272  
           __size_of_ADC_Init 0012                     i1___lwdiv 1478                  _contador_rb6 00BA  
         PWM_DutyCycle1@valor 00CA                    _total_area 00B5           PWM_DutyCycle2@valor 00CA  
                 _CCP1CONbits 0017                   ___ftdiv@exp 0035                   _CCP2CONbits 001D  
                   _TXSTAbits 0098              ?_LCD_WriteString 00CC             __size_of_LCD_Init 006B  
                _LCD_WriteCmd 1244                   ___ftmul@exp 0041                __end_of___ftge 07FF  
              __end_of___wmul 13B7             i1_USART_WriteChar 11F0            ?i1_USART_WriteChar 0070  
              __end_of_trapmf 0D1B      __size_of_USART_WriteChar 000D             __size_of_PWM_Init 0024  
         start_initialization 0015             __size_ofi1___wmul 0023                   __end_of_ISR 1000  
         ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070              ??_PWM_DutyCycle1 00CC  
            ??_PWM_DutyCycle2 00CC         __end_of_LCD_WriteData 1272             _USART_ReceiveChar 128D  
                    ??___ftge 0076            ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 11F8  
                    ??___wmul 00CE                   __pdataBANK0 006E                   __pdataBANK1 00EC  
 __end_ofi1_USART_WriteString 134B                      ??_trapmf 007E           ??_USART_ReceiveChar 0073  
           __size_of___ftpack 0068                     ___latbits 0002             __size_of___lwtoft 0014  
               __pcstackBANK0 0020                 __pcstackBANK1 00CA                   ??_LCD_Clear 00CC  
         __end_of__stringdata 08DB                  _isdigit$1449 00CA                   sprintf@_val 00E0  
                 sprintf@flag 00E4                   sprintf@prec 00DF     __end_of_USART_ReceiveChar 12A8  
       __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 00CC           TIMER0_Set@contagens 00CA  
                Fuzzy@aumenta 005A                      ?___aldiv 00CA                      ?___ftadd 0078  
                    ?___ftdiv 0027                      ?___ftneg 0070                      ?___ftmul 0037  
                    ?___fttol 0070                      ?___lwdiv 00CA                      ?___lwmod 00D2  
                   __pstrings 0800                     _ativa_fan 00A0                 ??_TIMER0_Init 00CA  
          USART_Init@BaudRate 00D9                      ?_max_val 0020                      ?_isdigit 0070  
                    _ADC_Init 08DC                     _fop_rule1 00A6                     _fop_rule2 00A9  
                   _fop_rule3 00AC                __size_of_Fuzzy 0598              ___lwdiv@quotient 00CF  
                 ??i1___lwdiv 0074                      ?_sprintf 00D8                __size_of_trimf 011E  
           ??_USART_WriteChar 00CA                  i1_TIMER0_Set 11E2               ___aldiv@divisor 00CA  
           interrupt_function 0004               ___aldiv@counter 00D3                      _LCD_Init 15A7  
              ___wmul@product 00CE                     clear_ram0 1200                      _PIE1bits 008C  
                    _PIE2bits 008D                      _PIR1bits 000C                      _PIR2bits 000D  
                   _temp_lida 00C6      __end_ofi1_PWM_DutyCycle2 128D                     _tempo_rb6 00C8  
  __size_ofi1_USART_WriteChar 0008                   _display_rpm 019D                   _display_pwm 0193  
                  _ADCON0bits 001F                   __stringbase 080F                    _ADCON1bits 009F  
                 __stringdata 081A                      _PWM_Init 136E             ___wmul@multiplier 00CA  
                    i1___wmul 134B           __end_of_TIMER0_Init 1213    __size_of_USART_ReceiveChar 001B  
                  _EECON1bits 018C                      Fuzzy@tip 0049              __size_of___aldiv 008F  
            __size_of___ftadd 0107              __size_of___ftdiv 00B8              __size_of___ftneg 0008  
            __size_of___ftmul 00D3              __size_of___fttol 008C              __size_of___lwdiv 0040  
            __size_of___lwmod 0036                      ___ftpack 153F            __end_of__stringtab 0810  
                    ___lwtoft 1230              __size_of_max_val 001E              __size_of_isdigit 0010  
             ___lwdiv@divisor 00CA               ___lwdiv@counter 00D1             _USART_WriteString 1411  
                    __ptext10 11F8                      __ptext11 1208                      __ptext20 1244  
                    __ptext12 136E                      __ptext21 08DC                      __ptext13 1307  
                    __ptext30 1272                      __ptext22 0E6C                      __ptext14 12E6  
                    __ptext31 0AAD                      __ptext23 134B                      __ptext15 13E0  
                    __ptext40 172D                      __ptext32 0BCB                      __ptext24 1478  
                    __ptext16 125B                      __ptext41 153F                      __ptext33 11E8  
                    __ptext25 11E2                      __ptext17 15A7                      __ptext34 08EE  
                    __ptext26 128D                      __ptext18 12C6                      __ptext35 09A6  
                    __ptext27 1328                      __ptext19 13B7                      __ptext36 12A8  
                    __ptext28 11F0                      __ptext37 07A2                      __ptext29 0053  
                    __ptext38 1230                      __ptext39 1612            ?_USART_WriteString 00CB  
            __size_of_sprintf 01B7            i1___lwdiv@dividend 0072                 __size_of_main 0151  
         USART_WriteChar@byte 00CA           ??_USART_WriteString 00CD        i1USART_WriteString@str 0071  
                    _setpoint 00EC                    _LCD_Cursor 12C6      __size_of_LCD_WriteString 0031  
          i1___lwdiv@quotient 0075                   _TIMER0_Init 1208                    _INTCONbits 000B  
   __end_of_USART_WriteString 1442                      max_val@a 0020                      max_val@b 0023  
                    isdigit@c 00CB                      intlevel1 0000                     sprintf@ap 00DE  
                   sprintf@sp 00E7              ___lwmod@dividend 00D4                     stringcode 080A  
        USART_WriteString@str 00CB                    _TIMER0_Set 11F8                      trapmf@ua 0046  
             _USART_WriteChar 1213                      sprintf@c 00E8                      sprintf@f 00D8  
             ___lwmod@divisor 00D2               ___lwmod@counter 00D7                      stringdir 080A  
                    stringtab 0800                  ___aldiv@sign 00D4        __size_of_LCD_WriteData 0017  
__size_ofi1_USART_WriteString 0023                   _SSPCON2bits 0091         i1PWM_DutyCycle2@valor 0070  
                  _SSPCONbits 0014                    _USART_Init 14F6  
